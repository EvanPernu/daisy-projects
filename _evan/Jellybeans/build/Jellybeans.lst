ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Jellybeans.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy9ParameterD2Ev,"axG",%progbits,_ZN5daisy9ParameterD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy9ParameterD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy9ParameterD2Ev:
  27              	.LVL0:
  28              	.LFB3867:
  29              		.file 1 "../../libdaisy/src/hid/parameter.h"
   1:../../libdaisy/src/hid/parameter.h **** #pragma once
   2:../../libdaisy/src/hid/parameter.h **** #include <stdint.h>
   3:../../libdaisy/src/hid/parameter.h **** #include "hid/ctrl.h"
   4:../../libdaisy/src/hid/parameter.h **** 
   5:../../libdaisy/src/hid/parameter.h **** namespace daisy
   6:../../libdaisy/src/hid/parameter.h **** {
   7:../../libdaisy/src/hid/parameter.h **** /** @addtogroup controls
   8:../../libdaisy/src/hid/parameter.h ****     @{
   9:../../libdaisy/src/hid/parameter.h **** */
  10:../../libdaisy/src/hid/parameter.h **** 
  11:../../libdaisy/src/hid/parameter.h **** /**      Simple parameter mapping tool that takes a 0-1 input from an hid_ctrl. */
  12:../../libdaisy/src/hid/parameter.h **** class Parameter
  13:../../libdaisy/src/hid/parameter.h **** {
  14:../../libdaisy/src/hid/parameter.h ****   public:
  15:../../libdaisy/src/hid/parameter.h ****     /** Curves are applied to the output signal */
  16:../../libdaisy/src/hid/parameter.h ****     enum Curve
  17:../../libdaisy/src/hid/parameter.h ****     {
  18:../../libdaisy/src/hid/parameter.h ****         LINEAR,      /**< Linear curve */
  19:../../libdaisy/src/hid/parameter.h ****         EXPONENTIAL, /**< Exponential curve */
  20:../../libdaisy/src/hid/parameter.h ****         LOGARITHMIC, /**<  Logarithmic curve */
  21:../../libdaisy/src/hid/parameter.h ****         CUBE,        /**< Cubic curve */
  22:../../libdaisy/src/hid/parameter.h ****         LAST,        /**< Final enum element. */
  23:../../libdaisy/src/hid/parameter.h ****     };
  24:../../libdaisy/src/hid/parameter.h ****     /** Constructor */
  25:../../libdaisy/src/hid/parameter.h ****     Parameter() {}
  26:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
  27:../../libdaisy/src/hid/parameter.h ****     ~Parameter() {}
  30              		.loc 1 27 5 view -0
  31              		.cfi_startproc
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 2


  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB4570:
  36              	.LBI4570:
  37              		.file 2 "../../libdaisy/src/hid/ctrl.h"
   1:../../libdaisy/src/hid/ctrl.h **** #pragma once
   2:../../libdaisy/src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libdaisy/src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libdaisy/src/hid/ctrl.h **** #include <stdint.h>
   5:../../libdaisy/src/hid/ctrl.h **** 
   6:../../libdaisy/src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libdaisy/src/hid/ctrl.h **** namespace daisy
   8:../../libdaisy/src/hid/ctrl.h **** {
   9:../../libdaisy/src/hid/ctrl.h **** /**
  10:../../libdaisy/src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libdaisy/src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libdaisy/src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libdaisy/src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libdaisy/src/hid/ctrl.h ****     @date November 2019
  15:../../libdaisy/src/hid/ctrl.h ****     @ingroup controls
  16:../../libdaisy/src/hid/ctrl.h **** */
  17:../../libdaisy/src/hid/ctrl.h **** class AnalogControl
  18:../../libdaisy/src/hid/ctrl.h **** {
  19:../../libdaisy/src/hid/ctrl.h ****   public:
  20:../../libdaisy/src/hid/ctrl.h ****     /** Constructor */
  21:../../libdaisy/src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
  23:../../libdaisy/src/hid/ctrl.h ****     ~AnalogControl() {}
  38              		.loc 2 23 5 view .LVU1
  39              		.loc 2 23 5 is_stmt 0 view .LVU2
  40              	.LBE4570:
  41              		.loc 1 27 19 view .LVU3
  42 0000 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE3867:
  46              		.weak	_ZN5daisy9ParameterD1Ev
  47              		.thumb_set _ZN5daisy9ParameterD1Ev,_ZN5daisy9ParameterD2Ev
  48 0002 00BF     		.section	.text._ZN5daisy10DaisyPatchD2Ev,"axG",%progbits,_ZN5daisy10DaisyPatchD5Ev,comdat
  49              		.align	1
  50              		.p2align 2,,3
  51              		.weak	_ZN5daisy10DaisyPatchD2Ev
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu fpv5-d16
  57              	_ZN5daisy10DaisyPatchD2Ev:
  58              	.LVL1:
  59              	.LFB4414:
  60              		.file 3 "../../libdaisy/src/daisy_patch.h"
   1:../../libdaisy/src/daisy_patch.h **** #pragma once
   2:../../libdaisy/src/daisy_patch.h **** #ifndef DSY_PATCH_BSP_H
   3:../../libdaisy/src/daisy_patch.h **** #define DSY_PATCH_BSP_H
   4:../../libdaisy/src/daisy_patch.h **** #include "daisy_seed.h"
   5:../../libdaisy/src/daisy_patch.h **** #include "dev/oled_ssd130x.h"
   6:../../libdaisy/src/daisy_patch.h **** 
   7:../../libdaisy/src/daisy_patch.h **** namespace daisy
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 3


   8:../../libdaisy/src/daisy_patch.h **** {
   9:../../libdaisy/src/daisy_patch.h **** /**
  10:../../libdaisy/src/daisy_patch.h ****     @brief Class that handles initializing all of the hardware specific to the Daisy Patch Board. \
  11:../../libdaisy/src/daisy_patch.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
  12:../../libdaisy/src/daisy_patch.h ****     @author Stephen Hensley
  13:../../libdaisy/src/daisy_patch.h ****     @date November 2019
  14:../../libdaisy/src/daisy_patch.h ****     @ingroup boards
  15:../../libdaisy/src/daisy_patch.h **** */
  16:../../libdaisy/src/daisy_patch.h **** class DaisyPatch
  17:../../libdaisy/src/daisy_patch.h **** {
  18:../../libdaisy/src/daisy_patch.h ****   public:
  19:../../libdaisy/src/daisy_patch.h ****     /** Enum of Ctrls to represent the four CV/Knob combos on the Patch
  20:../../libdaisy/src/daisy_patch.h ****      */
  21:../../libdaisy/src/daisy_patch.h ****     enum Ctrl
  22:../../libdaisy/src/daisy_patch.h ****     {
  23:../../libdaisy/src/daisy_patch.h ****         CTRL_1,    /**< */
  24:../../libdaisy/src/daisy_patch.h ****         CTRL_2,    /**< */
  25:../../libdaisy/src/daisy_patch.h ****         CTRL_3,    /**< */
  26:../../libdaisy/src/daisy_patch.h ****         CTRL_4,    /**< */
  27:../../libdaisy/src/daisy_patch.h ****         CTRL_LAST, /**< */
  28:../../libdaisy/src/daisy_patch.h ****     };
  29:../../libdaisy/src/daisy_patch.h **** 
  30:../../libdaisy/src/daisy_patch.h ****     /** Daisy patch gate inputs */
  31:../../libdaisy/src/daisy_patch.h ****     enum GateInput
  32:../../libdaisy/src/daisy_patch.h ****     {
  33:../../libdaisy/src/daisy_patch.h ****         GATE_IN_1,    /**< */
  34:../../libdaisy/src/daisy_patch.h ****         GATE_IN_2,    /** <*/
  35:../../libdaisy/src/daisy_patch.h ****         GATE_IN_LAST, /**< */
  36:../../libdaisy/src/daisy_patch.h ****     };
  37:../../libdaisy/src/daisy_patch.h **** 
  38:../../libdaisy/src/daisy_patch.h ****     /** Constructor */
  39:../../libdaisy/src/daisy_patch.h ****     DaisyPatch() {}
  40:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
  41:../../libdaisy/src/daisy_patch.h ****     ~DaisyPatch() {}
  61              		.loc 3 41 5 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.LBB4571:
  67              	.LBI4571:
  68              		.file 4 "../../libdaisy/src/hid/disp/oled_display.h"
   1:../../libdaisy/src/hid/disp/oled_display.h **** #pragma once
   2:../../libdaisy/src/hid/disp/oled_display.h **** #ifndef DSY_OLED_DISPLAY_H
   3:../../libdaisy/src/hid/disp/oled_display.h **** #define DSY_OLED_DISPLAY_H /**< Macro */
   4:../../libdaisy/src/hid/disp/oled_display.h **** 
   5:../../libdaisy/src/hid/disp/oled_display.h **** #include "display.h"
   6:../../libdaisy/src/hid/disp/oled_display.h **** 
   7:../../libdaisy/src/hid/disp/oled_display.h **** namespace daisy
   8:../../libdaisy/src/hid/disp/oled_display.h **** {
   9:../../libdaisy/src/hid/disp/oled_display.h **** /** 
  10:../../libdaisy/src/hid/disp/oled_display.h ****  * This class is for drawing to a monochrome OLED display. 
  11:../../libdaisy/src/hid/disp/oled_display.h **** */
  12:../../libdaisy/src/hid/disp/oled_display.h **** template <typename DisplayDriver>
  13:../../libdaisy/src/hid/disp/oled_display.h **** class OledDisplay : public OneBitGraphicsDisplayImpl<OledDisplay<DisplayDriver>>
  14:../../libdaisy/src/hid/disp/oled_display.h **** {
  15:../../libdaisy/src/hid/disp/oled_display.h ****   public:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 4


  16:../../libdaisy/src/hid/disp/oled_display.h ****     OledDisplay() {}
  17:../../libdaisy/src/hid/disp/oled_display.h ****     virtual ~OledDisplay() {}
  69              		.loc 4 17 13 view .LVU5
  70              	.LBB4572:
  71              	.LBI4572:
  72              		.file 5 "../../libdaisy/src/hid/disp/display.h"
   1:../../libdaisy/src/hid/disp/display.h **** #pragma once
   2:../../libdaisy/src/hid/disp/display.h **** #ifndef DSY_DISPLAY_H
   3:../../libdaisy/src/hid/disp/display.h **** #define DSY_DISPLAY_H /**< Macro */
   4:../../libdaisy/src/hid/disp/display.h **** #include <cmath>
   5:../../libdaisy/src/hid/disp/display.h **** #include "util/oled_fonts.h"
   6:../../libdaisy/src/hid/disp/display.h **** #include "daisy_core.h"
   7:../../libdaisy/src/hid/disp/display.h **** #include "graphics_common.h"
   8:../../libdaisy/src/hid/disp/display.h **** 
   9:../../libdaisy/src/hid/disp/display.h **** #ifndef deg2rad
  10:../../libdaisy/src/hid/disp/display.h **** #define deg2rad(deg) ((deg)*3.141592 / 180.0)
  11:../../libdaisy/src/hid/disp/display.h **** #endif
  12:../../libdaisy/src/hid/disp/display.h **** 
  13:../../libdaisy/src/hid/disp/display.h **** namespace daisy
  14:../../libdaisy/src/hid/disp/display.h **** {
  15:../../libdaisy/src/hid/disp/display.h **** /** 
  16:../../libdaisy/src/hid/disp/display.h ****  * This interface is used as a base class for all types of 1bit-per-pixel
  17:../../libdaisy/src/hid/disp/display.h ****  * graphics displays.
  18:../../libdaisy/src/hid/disp/display.h **** */
  19:../../libdaisy/src/hid/disp/display.h **** class OneBitGraphicsDisplay
  20:../../libdaisy/src/hid/disp/display.h **** {
  21:../../libdaisy/src/hid/disp/display.h ****   public:
  22:../../libdaisy/src/hid/disp/display.h ****     OneBitGraphicsDisplay() {}
  23:../../libdaisy/src/hid/disp/display.h ****     virtual ~OneBitGraphicsDisplay() {}
  24:../../libdaisy/src/hid/disp/display.h **** 
  25:../../libdaisy/src/hid/disp/display.h ****     virtual uint16_t Height() const = 0;
  26:../../libdaisy/src/hid/disp/display.h ****     virtual uint16_t Width() const  = 0;
  27:../../libdaisy/src/hid/disp/display.h **** 
  28:../../libdaisy/src/hid/disp/display.h ****     Rectangle GetBounds() const
  29:../../libdaisy/src/hid/disp/display.h ****     {
  30:../../libdaisy/src/hid/disp/display.h ****         return Rectangle(int16_t(Width()), int16_t(Height()));
  31:../../libdaisy/src/hid/disp/display.h ****     }
  32:../../libdaisy/src/hid/disp/display.h **** 
  33:../../libdaisy/src/hid/disp/display.h **** 
  34:../../libdaisy/src/hid/disp/display.h ****     size_t CurrentX() { return currentX_; };
  35:../../libdaisy/src/hid/disp/display.h ****     size_t CurrentY() { return currentY_; };
  36:../../libdaisy/src/hid/disp/display.h **** 
  37:../../libdaisy/src/hid/disp/display.h ****     /** 
  38:../../libdaisy/src/hid/disp/display.h ****     Fills the entire display with either on/off.
  39:../../libdaisy/src/hid/disp/display.h ****     \param on Sets on or off.
  40:../../libdaisy/src/hid/disp/display.h ****     */
  41:../../libdaisy/src/hid/disp/display.h ****     virtual void Fill(bool on) = 0;
  42:../../libdaisy/src/hid/disp/display.h **** 
  43:../../libdaisy/src/hid/disp/display.h ****     /**
  44:../../libdaisy/src/hid/disp/display.h ****     Sets the pixel at the specified coordinate to be on/off.
  45:../../libdaisy/src/hid/disp/display.h ****     \param x   x Coordinate
  46:../../libdaisy/src/hid/disp/display.h ****     \param y   y coordinate
  47:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
  48:../../libdaisy/src/hid/disp/display.h ****     */
  49:../../libdaisy/src/hid/disp/display.h ****     virtual void DrawPixel(uint_fast8_t x, uint_fast8_t y, bool on) = 0;
  50:../../libdaisy/src/hid/disp/display.h **** 
  51:../../libdaisy/src/hid/disp/display.h ****     /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 5


  52:../../libdaisy/src/hid/disp/display.h ****     Draws a line from (x1, y1) to (y1, y2)
  53:../../libdaisy/src/hid/disp/display.h ****     \param x1  x Coordinate of the starting point
  54:../../libdaisy/src/hid/disp/display.h ****     \param y1  y Coordinate of the starting point
  55:../../libdaisy/src/hid/disp/display.h ****     \param x2  x Coordinate of the ending point
  56:../../libdaisy/src/hid/disp/display.h ****     \param y2  y Coordinate of the ending point
  57:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
  58:../../libdaisy/src/hid/disp/display.h ****     */
  59:../../libdaisy/src/hid/disp/display.h ****     virtual void DrawLine(uint_fast8_t x1,
  60:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t y1,
  61:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t x2,
  62:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t y2,
  63:../../libdaisy/src/hid/disp/display.h ****                           bool         on)
  64:../../libdaisy/src/hid/disp/display.h ****         = 0;
  65:../../libdaisy/src/hid/disp/display.h **** 
  66:../../libdaisy/src/hid/disp/display.h ****     /**
  67:../../libdaisy/src/hid/disp/display.h ****     Draws a rectangle based on two coordinates.
  68:../../libdaisy/src/hid/disp/display.h ****     \param x1 x Coordinate of the first point
  69:../../libdaisy/src/hid/disp/display.h ****     \param y1 y Coordinate of the first point
  70:../../libdaisy/src/hid/disp/display.h ****     \param x2 x Coordinate of the second point
  71:../../libdaisy/src/hid/disp/display.h ****     \param y2 y Coordinate of the second point
  72:../../libdaisy/src/hid/disp/display.h ****     \param on on or off
  73:../../libdaisy/src/hid/disp/display.h ****     \param fill fill the rectangle or draw only the outline
  74:../../libdaisy/src/hid/disp/display.h ****     */
  75:../../libdaisy/src/hid/disp/display.h ****     virtual void DrawRect(uint_fast8_t x1,
  76:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t y1,
  77:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t x2,
  78:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t y2,
  79:../../libdaisy/src/hid/disp/display.h ****                           bool         on,
  80:../../libdaisy/src/hid/disp/display.h ****                           bool         fill = false)
  81:../../libdaisy/src/hid/disp/display.h ****         = 0;
  82:../../libdaisy/src/hid/disp/display.h **** 
  83:../../libdaisy/src/hid/disp/display.h ****     /**
  84:../../libdaisy/src/hid/disp/display.h ****     Draws a rectangle.
  85:../../libdaisy/src/hid/disp/display.h ****     \param rect the rectangle
  86:../../libdaisy/src/hid/disp/display.h ****     \param on   on or off
  87:../../libdaisy/src/hid/disp/display.h ****     \param fill fill the rectangle or draw only the outline
  88:../../libdaisy/src/hid/disp/display.h ****     */
  89:../../libdaisy/src/hid/disp/display.h ****     void DrawRect(const Rectangle& rect, bool on, bool fill = false)
  90:../../libdaisy/src/hid/disp/display.h ****     {
  91:../../libdaisy/src/hid/disp/display.h ****         DrawRect(rect.GetX(),
  92:../../libdaisy/src/hid/disp/display.h ****                  rect.GetY(),
  93:../../libdaisy/src/hid/disp/display.h ****                  rect.GetRight(),
  94:../../libdaisy/src/hid/disp/display.h ****                  rect.GetBottom(),
  95:../../libdaisy/src/hid/disp/display.h ****                  on,
  96:../../libdaisy/src/hid/disp/display.h ****                  fill);
  97:../../libdaisy/src/hid/disp/display.h ****     }
  98:../../libdaisy/src/hid/disp/display.h **** 
  99:../../libdaisy/src/hid/disp/display.h ****     /**
 100:../../libdaisy/src/hid/disp/display.h ****     Draws an arc around the specified coordinate
 101:../../libdaisy/src/hid/disp/display.h ****     \param x           x Coordinate of the center of the arc
 102:../../libdaisy/src/hid/disp/display.h ****     \param y           y Coordinate of the center of the arc
 103:../../libdaisy/src/hid/disp/display.h ****     \param radius      radius of the arc
 104:../../libdaisy/src/hid/disp/display.h ****     \param start_angle angle where to start the arc
 105:../../libdaisy/src/hid/disp/display.h ****     \param sweep       total angle of the arc
 106:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
 107:../../libdaisy/src/hid/disp/display.h ****     */
 108:../../libdaisy/src/hid/disp/display.h ****     virtual void DrawArc(uint_fast8_t x,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 6


 109:../../libdaisy/src/hid/disp/display.h ****                          uint_fast8_t y,
 110:../../libdaisy/src/hid/disp/display.h ****                          uint_fast8_t radius,
 111:../../libdaisy/src/hid/disp/display.h ****                          int_fast16_t start_angle,
 112:../../libdaisy/src/hid/disp/display.h ****                          int_fast16_t sweep,
 113:../../libdaisy/src/hid/disp/display.h ****                          bool         on)
 114:../../libdaisy/src/hid/disp/display.h ****         = 0;
 115:../../libdaisy/src/hid/disp/display.h **** 
 116:../../libdaisy/src/hid/disp/display.h ****     /**
 117:../../libdaisy/src/hid/disp/display.h ****     Draws a circle around the specified coordinate
 118:../../libdaisy/src/hid/disp/display.h ****     \param x           x Coordinate of the center of the circle
 119:../../libdaisy/src/hid/disp/display.h ****     \param y           y Coordinate of the center of the circle
 120:../../libdaisy/src/hid/disp/display.h ****     \param radius      radius of the circle
 121:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
 122:../../libdaisy/src/hid/disp/display.h ****     */
 123:../../libdaisy/src/hid/disp/display.h ****     void
 124:../../libdaisy/src/hid/disp/display.h ****     DrawCircle(uint_fast8_t x, uint_fast8_t y, uint_fast8_t radius, bool on)
 125:../../libdaisy/src/hid/disp/display.h ****     {
 126:../../libdaisy/src/hid/disp/display.h ****         DrawArc(x, y, radius, 0, 360, on);
 127:../../libdaisy/src/hid/disp/display.h ****     };
 128:../../libdaisy/src/hid/disp/display.h **** 
 129:../../libdaisy/src/hid/disp/display.h ****     /** 
 130:../../libdaisy/src/hid/disp/display.h ****     Writes the character with the specific FontDef
 131:../../libdaisy/src/hid/disp/display.h ****     to the display buffer at the current Cursor position.
 132:../../libdaisy/src/hid/disp/display.h ****     \param ch character to be written
 133:../../libdaisy/src/hid/disp/display.h ****     \param font font to be written in
 134:../../libdaisy/src/hid/disp/display.h ****     \param on    on or off
 135:../../libdaisy/src/hid/disp/display.h ****     \return &
 136:../../libdaisy/src/hid/disp/display.h ****     */
 137:../../libdaisy/src/hid/disp/display.h ****     virtual char WriteChar(char ch, FontDef font, bool on) = 0;
 138:../../libdaisy/src/hid/disp/display.h **** 
 139:../../libdaisy/src/hid/disp/display.h ****     /** 
 140:../../libdaisy/src/hid/disp/display.h ****     Similar to WriteChar, except it will handle an entire String.
 141:../../libdaisy/src/hid/disp/display.h ****     Wrapping does not happen automatically, so the width
 142:../../libdaisy/src/hid/disp/display.h ****     of the string must be kept within the dimensions of the screen.
 143:../../libdaisy/src/hid/disp/display.h ****     \param str string to be written
 144:../../libdaisy/src/hid/disp/display.h ****     \param font font to use
 145:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
 146:../../libdaisy/src/hid/disp/display.h ****     \return &
 147:../../libdaisy/src/hid/disp/display.h ****     */
 148:../../libdaisy/src/hid/disp/display.h ****     virtual char WriteString(const char* str, FontDef font, bool on) = 0;
 149:../../libdaisy/src/hid/disp/display.h **** 
 150:../../libdaisy/src/hid/disp/display.h ****     /** 
 151:../../libdaisy/src/hid/disp/display.h ****     Similar to WriteString but justified within a bounding box.
 152:../../libdaisy/src/hid/disp/display.h ****     \param str          string to be written
 153:../../libdaisy/src/hid/disp/display.h ****     \param font         font to use
 154:../../libdaisy/src/hid/disp/display.h ****     \param boundingBox  the bounding box to draw the text in
 155:../../libdaisy/src/hid/disp/display.h ****     \param alignment    the alignment to use
 156:../../libdaisy/src/hid/disp/display.h ****     \param on           on or off
 157:../../libdaisy/src/hid/disp/display.h ****     \return The rectangle that was drawn to
 158:../../libdaisy/src/hid/disp/display.h ****     */
 159:../../libdaisy/src/hid/disp/display.h ****     virtual Rectangle WriteStringAligned(const char*    str,
 160:../../libdaisy/src/hid/disp/display.h ****                                          const FontDef& font,
 161:../../libdaisy/src/hid/disp/display.h ****                                          Rectangle      boundingBox,
 162:../../libdaisy/src/hid/disp/display.h ****                                          Alignment      alignment,
 163:../../libdaisy/src/hid/disp/display.h ****                                          bool           on)
 164:../../libdaisy/src/hid/disp/display.h ****         = 0;
 165:../../libdaisy/src/hid/disp/display.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 7


 166:../../libdaisy/src/hid/disp/display.h ****     /** 
 167:../../libdaisy/src/hid/disp/display.h ****     Moves the 'Cursor' position used for WriteChar, and WriteStr to the specified coordinate.
 168:../../libdaisy/src/hid/disp/display.h ****     \param x x pos
 169:../../libdaisy/src/hid/disp/display.h ****     \param y y pos
 170:../../libdaisy/src/hid/disp/display.h ****     */
 171:../../libdaisy/src/hid/disp/display.h ****     void SetCursor(uint16_t x, uint16_t y)
 172:../../libdaisy/src/hid/disp/display.h ****     {
 173:../../libdaisy/src/hid/disp/display.h ****         currentX_ = (x >= Width()) ? Width() - 1 : x;
 174:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 175:../../libdaisy/src/hid/disp/display.h ****     }
 176:../../libdaisy/src/hid/disp/display.h **** 
 177:../../libdaisy/src/hid/disp/display.h ****     /** 
 178:../../libdaisy/src/hid/disp/display.h ****     Writes the current display buffer to the OLED device using SPI or I2C depending on 
 179:../../libdaisy/src/hid/disp/display.h ****     how the object was initialized.
 180:../../libdaisy/src/hid/disp/display.h ****     */
 181:../../libdaisy/src/hid/disp/display.h ****     virtual void Update() = 0;
 182:../../libdaisy/src/hid/disp/display.h **** 
 183:../../libdaisy/src/hid/disp/display.h ****   protected:
 184:../../libdaisy/src/hid/disp/display.h ****     uint16_t currentX_;
 185:../../libdaisy/src/hid/disp/display.h ****     uint16_t currentY_;
 186:../../libdaisy/src/hid/disp/display.h **** };
 187:../../libdaisy/src/hid/disp/display.h **** 
 188:../../libdaisy/src/hid/disp/display.h **** /** This class is intended as a intermediary class for your actual implementation of the OneBitGrap
 189:../../libdaisy/src/hid/disp/display.h ****  *  interface. It uses the CRTP design pattern where the template argument is the child class. It p
 190:../../libdaisy/src/hid/disp/display.h ****  *  implementations for most of the functions, except DrawPixel(), Update() and Fill(), which you'l
 191:../../libdaisy/src/hid/disp/display.h ****  *  to provide in your child class.
 192:../../libdaisy/src/hid/disp/display.h ****  *  The main goal of this class is to provide common drawing functions without relying on massive a
 193:../../libdaisy/src/hid/disp/display.h ****  *  virtual function calls that would result in a performance loss. To achieve this, any drawing fu
 194:../../libdaisy/src/hid/disp/display.h ****  *  is implemented here and internally calls other drawing functions (e.g. DrawRect() which interna
 195:../../libdaisy/src/hid/disp/display.h ****  *  DrawPixel() and DrawLine()) makes these calls via the qualified name of these functions to expl
 196:../../libdaisy/src/hid/disp/display.h ****  *  suppress the virtual dispatch mechanism like this:
 197:../../libdaisy/src/hid/disp/display.h ****  * 
 198:../../libdaisy/src/hid/disp/display.h ****  *      ChildType::DrawPixel(...); // no virtual function call; direct call into the child class fu
 199:../../libdaisy/src/hid/disp/display.h ****  *  
 200:../../libdaisy/src/hid/disp/display.h ****  *  To create a custom OneBitGraphicsDisplay implementation, you can 
 201:../../libdaisy/src/hid/disp/display.h ****  *  A) inherit from OneBitGraphicsDisplay directly and provide all the drawing functions yourself
 202:../../libdaisy/src/hid/disp/display.h ****  *  B) Inherit from OneBitGraphicsDisplayImpl and only provide DrawPixel(), Fill() and Update()
 203:../../libdaisy/src/hid/disp/display.h ****  *     like this:
 204:../../libdaisy/src/hid/disp/display.h ****  *  
 205:../../libdaisy/src/hid/disp/display.h ****  *      class MyDisplayClass : public OneBitGraphicsDisplayImpl<MyDisplayClass> 
 206:../../libdaisy/src/hid/disp/display.h ****  *      {
 207:../../libdaisy/src/hid/disp/display.h ****  *      public:
 208:../../libdaisy/src/hid/disp/display.h ****  *          void Fill() override { ... };
 209:../../libdaisy/src/hid/disp/display.h ****  *          void DrawPixel(uint_fast8_t x, uint_fast8_t y, bool on) override { ... };
 210:../../libdaisy/src/hid/disp/display.h ****  *          void Update() override { ... }
 211:../../libdaisy/src/hid/disp/display.h ****  *      };
 212:../../libdaisy/src/hid/disp/display.h ****  *  
 213:../../libdaisy/src/hid/disp/display.h ****  */
 214:../../libdaisy/src/hid/disp/display.h **** template <class ChildType>
 215:../../libdaisy/src/hid/disp/display.h **** class OneBitGraphicsDisplayImpl : public OneBitGraphicsDisplay
 216:../../libdaisy/src/hid/disp/display.h **** {
 217:../../libdaisy/src/hid/disp/display.h ****   public:
 218:../../libdaisy/src/hid/disp/display.h ****     OneBitGraphicsDisplayImpl() {}
 219:../../libdaisy/src/hid/disp/display.h ****     virtual ~OneBitGraphicsDisplayImpl() {}
  73              		.loc 5 219 13 view .LVU6
  74              	.LBB4573:
  75              	.LBI4573:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 8


  23:../../libdaisy/src/hid/disp/display.h **** 
  76              		.loc 5 23 13 view .LVU7
  23:../../libdaisy/src/hid/disp/display.h **** 
  77              		.loc 5 23 13 is_stmt 0 view .LVU8
  78              	.LBE4573:
  79              	.LBE4572:
  80              	.LBE4571:
  81              	.LBB4574:
  82              	.LBI4574:
  83              		.file 6 "../../libdaisy/src/hid/midi.h"
   1:../../libdaisy/src/hid/midi.h **** #pragma once
   2:../../libdaisy/src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../../libdaisy/src/hid/midi.h **** #define DSY_MIDI_H
   4:../../libdaisy/src/hid/midi.h **** 
   5:../../libdaisy/src/hid/midi.h **** // TODO: make this adjustable
   6:../../libdaisy/src/hid/midi.h **** #define SYSEX_BUFFER_LEN 128
   7:../../libdaisy/src/hid/midi.h **** 
   8:../../libdaisy/src/hid/midi.h **** #include <stdint.h>
   9:../../libdaisy/src/hid/midi.h **** #include <stdlib.h>
  10:../../libdaisy/src/hid/midi.h **** #include "per/uart.h"
  11:../../libdaisy/src/hid/midi.h **** #include "util/ringbuffer.h"
  12:../../libdaisy/src/hid/midi.h **** #include "hid/MidiEvent.h"
  13:../../libdaisy/src/hid/midi.h **** #include "hid/usb_midi.h"
  14:../../libdaisy/src/hid/midi.h **** #include "sys/system.h"
  15:../../libdaisy/src/hid/midi.h **** 
  16:../../libdaisy/src/hid/midi.h **** namespace daisy
  17:../../libdaisy/src/hid/midi.h **** {
  18:../../libdaisy/src/hid/midi.h **** /** @addtogroup external 
  19:../../libdaisy/src/hid/midi.h ****     @{ 
  20:../../libdaisy/src/hid/midi.h **** */
  21:../../libdaisy/src/hid/midi.h **** 
  22:../../libdaisy/src/hid/midi.h **** class MidiUartTransport
  23:../../libdaisy/src/hid/midi.h **** {
  24:../../libdaisy/src/hid/midi.h ****   public:
  25:../../libdaisy/src/hid/midi.h ****     MidiUartTransport() {}
  26:../../libdaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
  27:../../libdaisy/src/hid/midi.h **** 
  28:../../libdaisy/src/hid/midi.h ****     struct Config
  29:../../libdaisy/src/hid/midi.h ****     {
  30:../../libdaisy/src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  31:../../libdaisy/src/hid/midi.h ****         dsy_gpio_pin                    rx;
  32:../../libdaisy/src/hid/midi.h ****         dsy_gpio_pin                    tx;
  33:../../libdaisy/src/hid/midi.h **** 
  34:../../libdaisy/src/hid/midi.h ****         Config()
  35:../../libdaisy/src/hid/midi.h ****         {
  36:../../libdaisy/src/hid/midi.h ****             periph = UartHandler::Config::Peripheral::USART_1;
  37:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
  38:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
  39:../../libdaisy/src/hid/midi.h ****         }
  40:../../libdaisy/src/hid/midi.h ****     };
  41:../../libdaisy/src/hid/midi.h **** 
  42:../../libdaisy/src/hid/midi.h ****     inline void Init(Config config)
  43:../../libdaisy/src/hid/midi.h ****     {
  44:../../libdaisy/src/hid/midi.h ****         UartHandler::Config uart_config;
  45:../../libdaisy/src/hid/midi.h **** 
  46:../../libdaisy/src/hid/midi.h ****         //defaults
  47:../../libdaisy/src/hid/midi.h ****         uart_config.baudrate   = 31250;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 9


  48:../../libdaisy/src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  49:../../libdaisy/src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  50:../../libdaisy/src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  51:../../libdaisy/src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  52:../../libdaisy/src/hid/midi.h **** 
  53:../../libdaisy/src/hid/midi.h ****         //user settings
  54:../../libdaisy/src/hid/midi.h ****         uart_config.periph        = config.periph;
  55:../../libdaisy/src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  56:../../libdaisy/src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  57:../../libdaisy/src/hid/midi.h **** 
  58:../../libdaisy/src/hid/midi.h ****         uart_.Init(uart_config);
  59:../../libdaisy/src/hid/midi.h ****     }
  60:../../libdaisy/src/hid/midi.h **** 
  61:../../libdaisy/src/hid/midi.h ****     inline void    StartRx() { uart_.StartRx(); }
  62:../../libdaisy/src/hid/midi.h ****     inline size_t  Readable() { return uart_.Readable(); }
  63:../../libdaisy/src/hid/midi.h ****     inline uint8_t Rx() { return uart_.PopRx(); }
  64:../../libdaisy/src/hid/midi.h ****     inline bool    RxActive() { return uart_.RxActive(); }
  65:../../libdaisy/src/hid/midi.h ****     inline void    FlushRx() { uart_.FlushRx(); }
  66:../../libdaisy/src/hid/midi.h ****     inline void    Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
  67:../../libdaisy/src/hid/midi.h **** 
  68:../../libdaisy/src/hid/midi.h ****   private:
  69:../../libdaisy/src/hid/midi.h ****     UartHandler uart_;
  70:../../libdaisy/src/hid/midi.h **** };
  71:../../libdaisy/src/hid/midi.h **** 
  72:../../libdaisy/src/hid/midi.h **** /** 
  73:../../libdaisy/src/hid/midi.h ****     @brief Simple MIDI Handler \n 
  74:../../libdaisy/src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n 
  75:../../libdaisy/src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
  76:../../libdaisy/src/hid/midi.h ****     @author shensley
  77:../../libdaisy/src/hid/midi.h ****     @date March 2020
  78:../../libdaisy/src/hid/midi.h **** */
  79:../../libdaisy/src/hid/midi.h **** template <typename Transport>
  80:../../libdaisy/src/hid/midi.h **** class MidiHandler
  81:../../libdaisy/src/hid/midi.h **** {
  82:../../libdaisy/src/hid/midi.h ****   public:
  83:../../libdaisy/src/hid/midi.h ****     MidiHandler() {}
  84:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
  84              		.loc 6 84 5 is_stmt 1 view .LVU9
  85              	.LBB4575:
  86              	.LBI4575:
  26:../../libdaisy/src/hid/midi.h **** 
  87              		.loc 6 26 5 view .LVU10
  26:../../libdaisy/src/hid/midi.h **** 
  88              		.loc 6 26 5 is_stmt 0 view .LVU11
  89              	.LBE4575:
  90              	.LBE4574:
  91              	.LBB4576:
  92              	.LBI4576:
  93              		.file 7 "../../libdaisy/src/hid/encoder.h"
   1:../../libdaisy/src/hid/encoder.h **** #pragma once
   2:../../libdaisy/src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../../libdaisy/src/hid/encoder.h **** #define DSY_ENCODER_H
   4:../../libdaisy/src/hid/encoder.h **** #include "daisy_core.h"
   5:../../libdaisy/src/hid/encoder.h **** #include "per/gpio.h"
   6:../../libdaisy/src/hid/encoder.h **** #include "hid/switch.h"
   7:../../libdaisy/src/hid/encoder.h **** 
   8:../../libdaisy/src/hid/encoder.h **** namespace daisy
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 10


   9:../../libdaisy/src/hid/encoder.h **** {
  10:../../libdaisy/src/hid/encoder.h **** /** 
  11:../../libdaisy/src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../../libdaisy/src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../../libdaisy/src/hid/encoder.h ****     @author Stephen Hensley
  14:../../libdaisy/src/hid/encoder.h ****     @date December 2019
  15:../../libdaisy/src/hid/encoder.h ****     @ingroup controls
  16:../../libdaisy/src/hid/encoder.h **** */
  17:../../libdaisy/src/hid/encoder.h **** class Encoder
  18:../../libdaisy/src/hid/encoder.h **** {
  19:../../libdaisy/src/hid/encoder.h ****   public:
  20:../../libdaisy/src/hid/encoder.h ****     Encoder() {}
  21:../../libdaisy/src/hid/encoder.h ****     ~Encoder() {}
  94              		.loc 7 21 5 is_stmt 1 view .LVU12
  95              	.LBB4577:
  96              	.LBI4577:
  97              		.file 8 "../../libdaisy/src/hid/switch.h"
   1:../../libdaisy/src/hid/switch.h **** #pragma once
   2:../../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../../libdaisy/src/hid/switch.h **** #include "sys/system.h"
   7:../../libdaisy/src/hid/switch.h **** 
   8:../../libdaisy/src/hid/switch.h **** namespace daisy
   9:../../libdaisy/src/hid/switch.h **** {
  10:../../libdaisy/src/hid/switch.h **** /** 
  11:../../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  14:../../libdaisy/src/hid/switch.h ****     @date December 2019
  15:../../libdaisy/src/hid/switch.h ****     @ingroup controls
  16:../../libdaisy/src/hid/switch.h **** */
  17:../../libdaisy/src/hid/switch.h **** class Switch
  18:../../libdaisy/src/hid/switch.h **** {
  19:../../libdaisy/src/hid/switch.h ****   public:
  20:../../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libdaisy/src/hid/switch.h ****     enum Type
  22:../../libdaisy/src/hid/switch.h ****     {
  23:../../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libdaisy/src/hid/switch.h ****     };
  26:../../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libdaisy/src/hid/switch.h ****     enum Polarity
  28:../../libdaisy/src/hid/switch.h ****     {
  29:../../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libdaisy/src/hid/switch.h ****     };
  32:../../libdaisy/src/hid/switch.h **** 
  33:../../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libdaisy/src/hid/switch.h ****     enum Pull
  35:../../libdaisy/src/hid/switch.h ****     {
  36:../../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libdaisy/src/hid/switch.h ****     };
  40:../../libdaisy/src/hid/switch.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 11


  41:../../libdaisy/src/hid/switch.h ****     Switch() {}
  42:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
  98              		.loc 8 42 5 view .LVU13
  99              		.loc 8 42 5 is_stmt 0 view .LVU14
 100              	.LBE4577:
 101              	.LBE4576:
 102              	.LBB4578:
 103              	.LBI4578:
 104              		.file 9 "../../libdaisy/src/daisy_seed.h"
   1:../../libdaisy/src/daisy_seed.h **** #pragma once
   2:../../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libdaisy/src/daisy_seed.h **** 
   5:../../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../../libdaisy/src/daisy_seed.h **** 
   7:../../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../../libdaisy/src/daisy_seed.h **** 
  10:../../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../../libdaisy/src/daisy_seed.h **** {
  12:../../libdaisy/src/daisy_seed.h **** /**
  13:../../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libdaisy/src/daisy_seed.h **** 
  16:../../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../../libdaisy/src/daisy_seed.h **** */
  18:../../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../../libdaisy/src/daisy_seed.h **** {
  20:../../libdaisy/src/daisy_seed.h ****   public:
  21:../../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 105              		.loc 9 22 5 is_stmt 1 view .LVU15
 106              	.LBB4579:
 107              	.LBI4579:
 108              		.file 10 "../../libdaisy/src/sys/system.h"
   1:../../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libdaisy/src/sys/system.h **** 
   4:../../libdaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libdaisy/src/sys/system.h **** 
   6:../../libdaisy/src/sys/system.h **** #include <cstdint>
   7:../../libdaisy/src/sys/system.h **** #include "per/tim.h"
   8:../../libdaisy/src/sys/system.h **** 
   9:../../libdaisy/src/sys/system.h **** namespace daisy
  10:../../libdaisy/src/sys/system.h **** {
  11:../../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libdaisy/src/sys/system.h ****  **
  15:../../libdaisy/src/sys/system.h ****  ** @author shensley
  16:../../libdaisy/src/sys/system.h ****  ** @addtogroup system
  17:../../libdaisy/src/sys/system.h ****  */
  18:../../libdaisy/src/sys/system.h **** class System
  19:../../libdaisy/src/sys/system.h **** {
  20:../../libdaisy/src/sys/system.h ****   public:
  21:../../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libdaisy/src/sys/system.h ****     struct Config
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 12


  23:../../libdaisy/src/sys/system.h ****     {
  24:../../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../../libdaisy/src/sys/system.h ****         {
  27:../../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../../libdaisy/src/sys/system.h ****         };
  30:../../libdaisy/src/sys/system.h **** 
  31:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  34:../../libdaisy/src/sys/system.h ****          ** */
  35:../../libdaisy/src/sys/system.h ****         void Defaults()
  36:../../libdaisy/src/sys/system.h ****         {
  37:../../libdaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libdaisy/src/sys/system.h ****             use_dcache  = true;
  39:../../libdaisy/src/sys/system.h ****             use_icache  = true;
  40:../../libdaisy/src/sys/system.h ****             skip_clocks = false;
  41:../../libdaisy/src/sys/system.h ****         }
  42:../../libdaisy/src/sys/system.h **** 
  43:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  46:../../libdaisy/src/sys/system.h ****          ** */
  47:../../libdaisy/src/sys/system.h ****         void Boost()
  48:../../libdaisy/src/sys/system.h ****         {
  49:../../libdaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libdaisy/src/sys/system.h ****             use_dcache  = true;
  51:../../libdaisy/src/sys/system.h ****             use_icache  = true;
  52:../../libdaisy/src/sys/system.h ****             skip_clocks = false;
  53:../../libdaisy/src/sys/system.h ****         }
  54:../../libdaisy/src/sys/system.h **** 
  55:../../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libdaisy/src/sys/system.h ****         bool       use_dcache;
  57:../../libdaisy/src/sys/system.h ****         bool       use_icache;
  58:../../libdaisy/src/sys/system.h ****         bool       skip_clocks;
  59:../../libdaisy/src/sys/system.h ****     };
  60:../../libdaisy/src/sys/system.h **** 
  61:../../libdaisy/src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libdaisy/src/sys/system.h ****      * 
  63:../../libdaisy/src/sys/system.h ****      */
  64:../../libdaisy/src/sys/system.h ****     enum MemoryRegion
  65:../../libdaisy/src/sys/system.h ****     {
  66:../../libdaisy/src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libdaisy/src/sys/system.h ****         ITCMRAM,
  68:../../libdaisy/src/sys/system.h ****         DTCMRAM,
  69:../../libdaisy/src/sys/system.h ****         SRAM_D1,
  70:../../libdaisy/src/sys/system.h ****         SRAM_D2,
  71:../../libdaisy/src/sys/system.h ****         SRAM_D3,
  72:../../libdaisy/src/sys/system.h ****         SDRAM,
  73:../../libdaisy/src/sys/system.h ****         QSPI,
  74:../../libdaisy/src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libdaisy/src/sys/system.h ****     };
  76:../../libdaisy/src/sys/system.h **** 
  77:../../libdaisy/src/sys/system.h ****     System() {}
  78:../../libdaisy/src/sys/system.h ****     ~System() {}
 109              		.loc 10 78 5 view .LVU16
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 13


 110              		.loc 10 78 5 is_stmt 0 view .LVU17
 111              	.LBE4579:
 112              	.LBB4580:
 113              	.LBI4580:
 114              		.file 11 "../../libdaisy/src/hid/usb.h"
   1:../../libdaisy/src/hid/usb.h **** #pragma once
   2:../../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../../libdaisy/src/hid/usb.h **** 
   7:../../libdaisy/src/hid/usb.h **** namespace daisy
   8:../../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../../libdaisy/src/hid/usb.h ****     @{
  10:../../libdaisy/src/hid/usb.h **** */
  11:../../libdaisy/src/hid/usb.h **** 
  12:../../libdaisy/src/hid/usb.h **** {
  13:../../libdaisy/src/hid/usb.h **** /** 
  14:../../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../../libdaisy/src/hid/usb.h **** */
  18:../../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../../libdaisy/src/hid/usb.h **** {
  20:../../libdaisy/src/hid/usb.h ****   public:
  21:../../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libdaisy/src/hid/usb.h ****     enum class Result
  23:../../libdaisy/src/hid/usb.h ****     {
  24:../../libdaisy/src/hid/usb.h ****         OK,
  25:../../libdaisy/src/hid/usb.h ****         ERR,
  26:../../libdaisy/src/hid/usb.h ****     };
  27:../../libdaisy/src/hid/usb.h **** 
  28:../../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../../libdaisy/src/hid/usb.h ****     {
  31:../../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libdaisy/src/hid/usb.h ****     };
  35:../../libdaisy/src/hid/usb.h **** 
  36:../../libdaisy/src/hid/usb.h **** 
  37:../../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libdaisy/src/hid/usb.h **** 
  40:../../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../../libdaisy/src/hid/usb.h **** 
  42:../../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
 115              		.loc 11 42 5 is_stmt 1 view .LVU18
 116              		.loc 11 42 5 is_stmt 0 view .LVU19
 117              	.LBE4580:
 118              	.LBB4581:
 119              	.LBI4581:
 120              		.file 12 "../../libdaisy/src/per/adc.h"
   1:../../libdaisy/src/per/adc.h **** #pragma once
   2:../../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libdaisy/src/per/adc.h **** #include <stdint.h>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 14


   5:../../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../../libdaisy/src/per/adc.h **** 
   9:../../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libdaisy/src/per/adc.h **** 
  11:../../libdaisy/src/per/adc.h **** namespace daisy
  12:../../libdaisy/src/per/adc.h **** {
  13:../../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../../libdaisy/src/per/adc.h ****     @{
  15:../../libdaisy/src/per/adc.h **** */
  16:../../libdaisy/src/per/adc.h **** 
  17:../../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../../libdaisy/src/per/adc.h **** */
  21:../../libdaisy/src/per/adc.h **** 
  22:../../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../../libdaisy/src/per/adc.h **** {
  25:../../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../../libdaisy/src/per/adc.h ****     {
  28:../../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../../libdaisy/src/per/adc.h ****     };
  33:../../libdaisy/src/per/adc.h **** 
  34:../../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../../libdaisy/src/per/adc.h ****      */
  37:../../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../../libdaisy/src/per/adc.h **** 
  39:../../libdaisy/src/per/adc.h ****     /** 
  40:../../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../../libdaisy/src/per/adc.h ****     */
  51:../../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
  53:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../../libdaisy/src/per/adc.h **** 
  57:../../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../../libdaisy/src/per/adc.h **** };
  61:../../libdaisy/src/per/adc.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 15


  62:../../libdaisy/src/per/adc.h **** /**
  63:../../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../../libdaisy/src/per/adc.h **** */
  65:../../libdaisy/src/per/adc.h **** class AdcHandle
  66:../../libdaisy/src/per/adc.h **** {
  67:../../libdaisy/src/per/adc.h ****   public:
  68:../../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../../libdaisy/src/per/adc.h ****     {
  71:../../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../../libdaisy/src/per/adc.h ****     };
  83:../../libdaisy/src/per/adc.h **** 
  84:../../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 121              		.loc 12 85 5 is_stmt 1 view .LVU20
 122              		.loc 12 85 5 is_stmt 0 view .LVU21
 123              	.LBE4581:
 124              	.LBB4582:
 125              	.LBI4582:
 126              		.file 13 "../../libdaisy/src/hid/audio.h"
   1:../../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libdaisy/src/hid/audio.h **** 
   4:../../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../../libdaisy/src/hid/audio.h **** 
   6:../../libdaisy/src/hid/audio.h **** namespace daisy
   7:../../libdaisy/src/hid/audio.h **** {
   8:../../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../../libdaisy/src/hid/audio.h **** {
  10:../../libdaisy/src/hid/audio.h ****   public:
  11:../../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../../libdaisy/src/hid/audio.h ****     struct Config
  14:../../libdaisy/src/hid/audio.h ****     {
  15:../../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../../libdaisy/src/hid/audio.h ****     };
  19:../../libdaisy/src/hid/audio.h **** 
  20:../../libdaisy/src/hid/audio.h ****     enum class Result
  21:../../libdaisy/src/hid/audio.h ****     {
  22:../../libdaisy/src/hid/audio.h ****         OK,
  23:../../libdaisy/src/hid/audio.h ****         ERR,
  24:../../libdaisy/src/hid/audio.h ****     };
  25:../../libdaisy/src/hid/audio.h **** 
  26:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  27:../../libdaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 16


  28:../../libdaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  29:../../libdaisy/src/hid/audio.h ****     */
  30:../../libdaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  31:../../libdaisy/src/hid/audio.h **** 
  32:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  33:../../libdaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  34:../../libdaisy/src/hid/audio.h ****     */
  35:../../libdaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  36:../../libdaisy/src/hid/audio.h **** 
  37:../../libdaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  38:../../libdaisy/src/hid/audio.h ****    * Non-Interleaving audio callbacks in daisy will be of this type
  39:../../libdaisy/src/hid/audio.h ****   */
  40:../../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  41:../../libdaisy/src/hid/audio.h ****                                   OutputBuffer out,
  42:../../libdaisy/src/hid/audio.h ****                                   size_t       size);
  43:../../libdaisy/src/hid/audio.h **** 
  44:../../libdaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  45:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  46:../../libdaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  47:../../libdaisy/src/hid/audio.h ****     */
  48:../../libdaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  49:../../libdaisy/src/hid/audio.h **** 
  50:../../libdaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  51:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  52:../../libdaisy/src/hid/audio.h ****     */
  53:../../libdaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  54:../../libdaisy/src/hid/audio.h **** 
  55:../../libdaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  56:../../libdaisy/src/hid/audio.h ****    * Interleaving audio callbacks in daisy must be of this type
  57:../../libdaisy/src/hid/audio.h ****   */
  58:../../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  59:../../libdaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  60:../../libdaisy/src/hid/audio.h ****                                               size_t                   size);
  61:../../libdaisy/src/hid/audio.h **** 
  62:../../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  63:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 127              		.loc 13 63 5 is_stmt 1 view .LVU22
 128              		.loc 13 63 5 is_stmt 0 view .LVU23
 129              	.LBE4582:
 130              	.LBE4578:
 131              		.loc 3 41 20 view .LVU24
 132 0000 7047     		bx	lr
 133              		.cfi_endproc
 134              	.LFE4414:
 136              		.weak	_ZN5daisy10DaisyPatchD1Ev
 137              		.thumb_set _ZN5daisy10DaisyPatchD1Ev,_ZN5daisy10DaisyPatchD2Ev
 138 0002 00BF     		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 139              		.align	1
 140              		.p2align 2,,3
 141              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv5-d16
 147              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev:
 148              	.LVL2:
 149              	.LFB5450:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 17


 150              		.loc 4 17 13 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155              	.LBB4583:
 156              	.LBI4583:
 157              		.loc 5 219 13 view .LVU26
 158              	.LBB4584:
 159              	.LBI4584:
  23:../../libdaisy/src/hid/disp/display.h **** 
 160              		.loc 5 23 13 view .LVU27
  23:../../libdaisy/src/hid/disp/display.h **** 
 161              		.loc 5 23 13 is_stmt 0 view .LVU28
 162              	.LBE4584:
 163              	.LBE4583:
 164              		.loc 4 17 29 view .LVU29
 165 0000 7047     		bx	lr
 166              		.cfi_endproc
 167              	.LFE5450:
 169              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED1Ev
 170              		.thumb_set _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED
 171 0002 00BF     		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 172              		.align	1
 173              		.p2align 2,,3
 174              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillE
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 178              		.fpu fpv5-d16
 180              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillEb:
 181              	.LVL3:
 182              	.LFB5539:
  18:../../libdaisy/src/hid/disp/oled_display.h **** 
  19:../../libdaisy/src/hid/disp/oled_display.h ****     struct Config
  20:../../libdaisy/src/hid/disp/oled_display.h ****     {
  21:../../libdaisy/src/hid/disp/oled_display.h ****         typename DisplayDriver::Config driver_config;
  22:../../libdaisy/src/hid/disp/oled_display.h ****     };
  23:../../libdaisy/src/hid/disp/oled_display.h **** 
  24:../../libdaisy/src/hid/disp/oled_display.h ****     void Init(Config config) { driver_.Init(config.driver_config); }
  25:../../libdaisy/src/hid/disp/oled_display.h **** 
  26:../../libdaisy/src/hid/disp/oled_display.h ****     uint16_t Height() const override { return driver_.Height(); }
  27:../../libdaisy/src/hid/disp/oled_display.h ****     uint16_t Width() const override { return driver_.Width(); }
  28:../../libdaisy/src/hid/disp/oled_display.h **** 
  29:../../libdaisy/src/hid/disp/oled_display.h ****     /** 
  30:../../libdaisy/src/hid/disp/oled_display.h ****     Fills the entire display with either on/off.
  31:../../libdaisy/src/hid/disp/oled_display.h ****     \param on Sets on or off.
  32:../../libdaisy/src/hid/disp/oled_display.h ****     */
  33:../../libdaisy/src/hid/disp/oled_display.h ****     void Fill(bool on) override { driver_.Fill(on); }
 183              		.loc 4 33 10 is_stmt 1 view -0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 188              	.LBB4585:
 189              	.LBI4585:
 190              		.file 14 "../../libdaisy/src/dev/oled_ssd130x.h"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 18


   1:../../libdaisy/src/dev/oled_ssd130x.h **** #pragma once
   2:../../libdaisy/src/dev/oled_ssd130x.h **** #ifndef SA_OLED_SSD130X_H
   3:../../libdaisy/src/dev/oled_ssd130x.h **** #define SA_OLED_SSD130X_H /**< & */
   4:../../libdaisy/src/dev/oled_ssd130x.h **** 
   5:../../libdaisy/src/dev/oled_ssd130x.h **** #include "per/i2c.h"
   6:../../libdaisy/src/dev/oled_ssd130x.h **** #include "per/spi.h"
   7:../../libdaisy/src/dev/oled_ssd130x.h **** #include "per/gpio.h"
   8:../../libdaisy/src/dev/oled_ssd130x.h **** #include "sys/system.h"
   9:../../libdaisy/src/dev/oled_ssd130x.h **** 
  10:../../libdaisy/src/dev/oled_ssd130x.h **** namespace daisy
  11:../../libdaisy/src/dev/oled_ssd130x.h **** {
  12:../../libdaisy/src/dev/oled_ssd130x.h **** /**
  13:../../libdaisy/src/dev/oled_ssd130x.h ****  * I2C Transport for SSD1306 / SSD1309 OLED display devices
  14:../../libdaisy/src/dev/oled_ssd130x.h ****  */
  15:../../libdaisy/src/dev/oled_ssd130x.h **** class SSD130xI2CTransport
  16:../../libdaisy/src/dev/oled_ssd130x.h **** {
  17:../../libdaisy/src/dev/oled_ssd130x.h ****   public:
  18:../../libdaisy/src/dev/oled_ssd130x.h ****     struct Config
  19:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  20:../../libdaisy/src/dev/oled_ssd130x.h ****         I2CHandle::Config i2c_config;
  21:../../libdaisy/src/dev/oled_ssd130x.h ****         uint8_t           i2c_address;
  22:../../libdaisy/src/dev/oled_ssd130x.h ****         void              Defaults()
  23:../../libdaisy/src/dev/oled_ssd130x.h ****         {
  24:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.periph         = I2CHandle::Config::Peripheral::I2C_1;
  25:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.speed          = I2CHandle::Config::Speed::I2C_1MHZ;
  26:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.mode           = I2CHandle::Config::Mode::I2C_MASTER;
  27:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.pin_config.scl = {DSY_GPIOB, 8};
  28:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.pin_config.sda = {DSY_GPIOB, 9};
  29:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_address               = 0x3C;
  30:../../libdaisy/src/dev/oled_ssd130x.h ****         }
  31:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  32:../../libdaisy/src/dev/oled_ssd130x.h ****     void Init(const Config& config)
  33:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  34:../../libdaisy/src/dev/oled_ssd130x.h ****         i2c_address_ = config.i2c_address;
  35:../../libdaisy/src/dev/oled_ssd130x.h ****         i2c_.Init(config.i2c_config);
  36:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  37:../../libdaisy/src/dev/oled_ssd130x.h ****     void SendCommand(uint8_t cmd)
  38:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  39:../../libdaisy/src/dev/oled_ssd130x.h ****         uint8_t buf[2] = {0X00, cmd};
  40:../../libdaisy/src/dev/oled_ssd130x.h ****         i2c_.TransmitBlocking(i2c_address_, buf, 2, 1000);
  41:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  42:../../libdaisy/src/dev/oled_ssd130x.h **** 
  43:../../libdaisy/src/dev/oled_ssd130x.h ****     void SendData(uint8_t* buff, size_t size)
  44:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  45:../../libdaisy/src/dev/oled_ssd130x.h ****         for(size_t i = 0; i < size; i++)
  46:../../libdaisy/src/dev/oled_ssd130x.h ****         {
  47:../../libdaisy/src/dev/oled_ssd130x.h ****             uint8_t buf[2] = {0X40, buff[i]};
  48:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_.TransmitBlocking(i2c_address_, buf, 2, 1000);
  49:../../libdaisy/src/dev/oled_ssd130x.h ****         }
  50:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  51:../../libdaisy/src/dev/oled_ssd130x.h **** 
  52:../../libdaisy/src/dev/oled_ssd130x.h ****   private:
  53:../../libdaisy/src/dev/oled_ssd130x.h ****     daisy::I2CHandle i2c_;
  54:../../libdaisy/src/dev/oled_ssd130x.h ****     uint8_t          i2c_address_;
  55:../../libdaisy/src/dev/oled_ssd130x.h **** };
  56:../../libdaisy/src/dev/oled_ssd130x.h **** 
  57:../../libdaisy/src/dev/oled_ssd130x.h **** /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 19


  58:../../libdaisy/src/dev/oled_ssd130x.h ****  * 4 Wire SPI Transport for SSD1306 / SSD1309 OLED display devices
  59:../../libdaisy/src/dev/oled_ssd130x.h ****  */
  60:../../libdaisy/src/dev/oled_ssd130x.h **** class SSD130x4WireSpiTransport
  61:../../libdaisy/src/dev/oled_ssd130x.h **** {
  62:../../libdaisy/src/dev/oled_ssd130x.h ****   public:
  63:../../libdaisy/src/dev/oled_ssd130x.h ****     struct Config
  64:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  65:../../libdaisy/src/dev/oled_ssd130x.h ****         struct
  66:../../libdaisy/src/dev/oled_ssd130x.h ****         {
  67:../../libdaisy/src/dev/oled_ssd130x.h ****             dsy_gpio_pin dc;    /**< & */
  68:../../libdaisy/src/dev/oled_ssd130x.h ****             dsy_gpio_pin reset; /**< & */
  69:../../libdaisy/src/dev/oled_ssd130x.h ****         } pin_config;
  70:../../libdaisy/src/dev/oled_ssd130x.h ****         void Defaults()
  71:../../libdaisy/src/dev/oled_ssd130x.h ****         {
  72:../../libdaisy/src/dev/oled_ssd130x.h ****             pin_config.dc    = {DSY_GPIOB, 4};
  73:../../libdaisy/src/dev/oled_ssd130x.h ****             pin_config.reset = {DSY_GPIOB, 15};
  74:../../libdaisy/src/dev/oled_ssd130x.h ****         }
  75:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  76:../../libdaisy/src/dev/oled_ssd130x.h ****     void Init(const Config& config)
  77:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  78:../../libdaisy/src/dev/oled_ssd130x.h ****         // Initialize both GPIO
  79:../../libdaisy/src/dev/oled_ssd130x.h ****         pin_dc_.mode = DSY_GPIO_MODE_OUTPUT_PP;
  80:../../libdaisy/src/dev/oled_ssd130x.h ****         pin_dc_.pin  = config.pin_config.dc;
  81:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_init(&pin_dc_);
  82:../../libdaisy/src/dev/oled_ssd130x.h ****         pin_reset_.mode = DSY_GPIO_MODE_OUTPUT_PP;
  83:../../libdaisy/src/dev/oled_ssd130x.h ****         pin_reset_.pin  = config.pin_config.reset;
  84:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_init(&pin_reset_);
  85:../../libdaisy/src/dev/oled_ssd130x.h ****         // Initialize SPI
  86:../../libdaisy/src/dev/oled_ssd130x.h ****         SpiHandle::Config spi_config;
  87:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.periph    = SpiHandle::Config::Peripheral::SPI_1;
  88:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.mode      = SpiHandle::Config::Mode::MASTER;
  89:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.direction = SpiHandle::Config::Direction::TWO_LINES_TX_ONLY;
  90:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.datasize  = 8;
  91:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.clock_polarity = SpiHandle::Config::ClockPolarity::LOW;
  92:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.clock_phase    = SpiHandle::Config::ClockPhase::ONE_EDGE;
  93:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.nss            = SpiHandle::Config::NSS::HARD_OUTPUT;
  94:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.baud_prescaler = SpiHandle::Config::BaudPrescaler::PS_8;
  95:../../libdaisy/src/dev/oled_ssd130x.h **** 
  96:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.pin_config.sclk = {DSY_GPIOG, 11};
  97:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.pin_config.miso = {DSY_GPIOX, 0};
  98:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.pin_config.mosi = {DSY_GPIOB, 5};
  99:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.pin_config.nss  = {DSY_GPIOG, 10};
 100:../../libdaisy/src/dev/oled_ssd130x.h **** 
 101:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.Init(spi_config);
 102:../../libdaisy/src/dev/oled_ssd130x.h **** 
 103:../../libdaisy/src/dev/oled_ssd130x.h ****         // Reset and Configure OLED.
 104:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_write(&pin_reset_, 0);
 105:../../libdaisy/src/dev/oled_ssd130x.h ****         System::Delay(10);
 106:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_write(&pin_reset_, 1);
 107:../../libdaisy/src/dev/oled_ssd130x.h ****         System::Delay(10);
 108:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     void SendCommand(uint8_t cmd)
 110:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_write(&pin_dc_, 0);
 112:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 113:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 114:../../libdaisy/src/dev/oled_ssd130x.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 20


 115:../../libdaisy/src/dev/oled_ssd130x.h ****     void SendData(uint8_t* buff, size_t size)
 116:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 117:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_write(&pin_dc_, 1);
 118:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 119:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 120:../../libdaisy/src/dev/oled_ssd130x.h **** 
 121:../../libdaisy/src/dev/oled_ssd130x.h ****   private:
 122:../../libdaisy/src/dev/oled_ssd130x.h ****     SpiHandle spi_;
 123:../../libdaisy/src/dev/oled_ssd130x.h ****     dsy_gpio  pin_reset_;
 124:../../libdaisy/src/dev/oled_ssd130x.h ****     dsy_gpio  pin_dc_;
 125:../../libdaisy/src/dev/oled_ssd130x.h **** };
 126:../../libdaisy/src/dev/oled_ssd130x.h **** 
 127:../../libdaisy/src/dev/oled_ssd130x.h **** 
 128:../../libdaisy/src/dev/oled_ssd130x.h **** /**
 129:../../libdaisy/src/dev/oled_ssd130x.h ****  * A driver implementation for the SSD1306/SSD1309
 130:../../libdaisy/src/dev/oled_ssd130x.h ****  */
 131:../../libdaisy/src/dev/oled_ssd130x.h **** template <size_t width, size_t height, typename Transport>
 132:../../libdaisy/src/dev/oled_ssd130x.h **** class SSD130xDriver
 133:../../libdaisy/src/dev/oled_ssd130x.h **** {
 134:../../libdaisy/src/dev/oled_ssd130x.h ****   public:
 135:../../libdaisy/src/dev/oled_ssd130x.h ****     struct Config
 136:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 137:../../libdaisy/src/dev/oled_ssd130x.h ****         typename Transport::Config transport_config;
 138:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 139:../../libdaisy/src/dev/oled_ssd130x.h **** 
 140:../../libdaisy/src/dev/oled_ssd130x.h ****     void Init(Config config)
 141:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 142:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.Init(config.transport_config);
 143:../../libdaisy/src/dev/oled_ssd130x.h **** 
 144:../../libdaisy/src/dev/oled_ssd130x.h ****         // Init routine...
 145:../../libdaisy/src/dev/oled_ssd130x.h **** 
 146:../../libdaisy/src/dev/oled_ssd130x.h ****         // Display Off
 147:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xaE);
 148:../../libdaisy/src/dev/oled_ssd130x.h ****         // Dimension dependent commands...
 149:../../libdaisy/src/dev/oled_ssd130x.h ****         switch(height)
 150:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 151:../../libdaisy/src/dev/oled_ssd130x.h ****             case 16:
 152:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Display Clock Divide Ratio
 153:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xD5);
 154:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x60);
 155:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Multiplex Ratio
 156:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xA8);
 157:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x0F);
 158:../../libdaisy/src/dev/oled_ssd130x.h ****                 // COM Pins
 159:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xDA);
 160:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x02);
 161:../../libdaisy/src/dev/oled_ssd130x.h ****                 break;
 162:../../libdaisy/src/dev/oled_ssd130x.h ****             case 32:
 163:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Display Clock Divide Ratio
 164:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xD5);
 165:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x80);
 166:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Multiplex Ratio
 167:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xA8);
 168:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x1F);
 169:../../libdaisy/src/dev/oled_ssd130x.h ****                 // COM Pins
 170:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xDA);
 171:../../libdaisy/src/dev/oled_ssd130x.h ****                 if(width == 64)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 21


 172:../../libdaisy/src/dev/oled_ssd130x.h ****                 {
 173:../../libdaisy/src/dev/oled_ssd130x.h ****                     transport_.SendCommand(0x12);
 174:../../libdaisy/src/dev/oled_ssd130x.h ****                 }
 175:../../libdaisy/src/dev/oled_ssd130x.h ****                 else
 176:../../libdaisy/src/dev/oled_ssd130x.h ****                 {
 177:../../libdaisy/src/dev/oled_ssd130x.h ****                     transport_.SendCommand(0x02);
 178:../../libdaisy/src/dev/oled_ssd130x.h ****                 }
 179:../../libdaisy/src/dev/oled_ssd130x.h **** 
 180:../../libdaisy/src/dev/oled_ssd130x.h ****                 break;
 181:../../libdaisy/src/dev/oled_ssd130x.h ****             case 48:
 182:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Display Clock Divide Ratio
 183:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xD5);
 184:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x80);
 185:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Multiplex Ratio
 186:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xA8);
 187:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x2F);
 188:../../libdaisy/src/dev/oled_ssd130x.h ****                 // COM Pins
 189:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xDA);
 190:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x12);
 191:../../libdaisy/src/dev/oled_ssd130x.h ****                 break;
 192:../../libdaisy/src/dev/oled_ssd130x.h ****             default: // 128
 193:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Display Clock Divide Ratio
 194:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xD5);
 195:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x80);
 196:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Multiplex Ratio
 197:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xA8);
 198:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x3F);
 199:../../libdaisy/src/dev/oled_ssd130x.h ****                 // COM Pins
 200:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xDA);
 201:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x12);
 202:../../libdaisy/src/dev/oled_ssd130x.h ****                 break;
 203:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 204:../../libdaisy/src/dev/oled_ssd130x.h **** 
 205:../../libdaisy/src/dev/oled_ssd130x.h ****         // Display Offset
 206:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xD3);
 207:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x00);
 208:../../libdaisy/src/dev/oled_ssd130x.h ****         // Start Line Address
 209:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x40);
 210:../../libdaisy/src/dev/oled_ssd130x.h ****         // Normal Display
 211:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xA6);
 212:../../libdaisy/src/dev/oled_ssd130x.h ****         // All On Resume
 213:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xA4);
 214:../../libdaisy/src/dev/oled_ssd130x.h ****         // Charge Pump
 215:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x8D);
 216:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x14);
 217:../../libdaisy/src/dev/oled_ssd130x.h ****         // Set Segment Remap
 218:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xA1);
 219:../../libdaisy/src/dev/oled_ssd130x.h ****         // COM Output Scan Direction
 220:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xC8);
 221:../../libdaisy/src/dev/oled_ssd130x.h ****         // Contrast Control
 222:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x81);
 223:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x8F);
 224:../../libdaisy/src/dev/oled_ssd130x.h ****         // Pre Charge
 225:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xD9);
 226:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x25);
 227:../../libdaisy/src/dev/oled_ssd130x.h ****         // VCOM Detect
 228:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xDB);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 22


 229:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x34);
 230:../../libdaisy/src/dev/oled_ssd130x.h **** 
 231:../../libdaisy/src/dev/oled_ssd130x.h **** 
 232:../../libdaisy/src/dev/oled_ssd130x.h ****         // Display On
 233:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xAF); //--turn on oled panel
 234:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 235:../../libdaisy/src/dev/oled_ssd130x.h **** 
 236:../../libdaisy/src/dev/oled_ssd130x.h ****     size_t Width() const { return width; };
 237:../../libdaisy/src/dev/oled_ssd130x.h ****     size_t Height() const { return height; };
 238:../../libdaisy/src/dev/oled_ssd130x.h **** 
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     void DrawPixel(uint_fast8_t x, uint_fast8_t y, bool on)
 240:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 241:../../libdaisy/src/dev/oled_ssd130x.h ****         if(x >= width || y >= height)
 242:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 243:../../libdaisy/src/dev/oled_ssd130x.h ****         if(on)
 244:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 245:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 246:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] &= ~(1 << (y % 8));
 247:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 248:../../libdaisy/src/dev/oled_ssd130x.h **** 
 249:../../libdaisy/src/dev/oled_ssd130x.h ****     void Fill(bool on)
 191              		.loc 14 249 10 view .LVU31
 192              	.LBB4586:
 250:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 251:../../libdaisy/src/dev/oled_ssd130x.h ****         for(size_t i = 0; i < sizeof(buffer_); i++)
 193              		.loc 14 251 29 view .LVU32
 252:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 253:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[i] = on ? 0xff : 0x00;
 194              		.loc 14 253 24 is_stmt 0 view .LVU33
 195 0000 4942     		rsbs	r1, r1, #0
 196              	.LVL4:
 197              		.loc 14 253 24 view .LVU34
 198 0002 4FF48062 		mov	r2, #1024
 199 0006 1430     		adds	r0, r0, #20
 200              	.LVL5:
 201              		.loc 14 253 24 view .LVU35
 202 0008 C9B2     		uxtb	r1, r1
 203 000a FFF7FEBF 		b	memset
 204              	.LVL6:
 205              		.loc 14 253 24 view .LVU36
 206              	.LBE4586:
 207              	.LBE4585:
 208              		.cfi_endproc
 209              	.LFE5539:
 211 000e 00BF     		.section	.text._ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data,"axG",%progbits,_ZNSt17
 212              		.align	1
 213              		.p2align 2,,3
 214              		.weak	_ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 218              		.fpu fpv5-d16
 220              	_ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data:
 221              	.LVL7:
 222              	.LFB5739:
 223              		.file 15 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // Implementation of std::function -*- C++ -*-
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 23


   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // Copyright (C) 2004-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** /** @file include/bits/std_function.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****  *  Do not attempt to use it directly. @headername{functional}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #ifndef _GLIBCXX_STD_FUNCTION_H
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #define _GLIBCXX_STD_FUNCTION_H 1
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #pragma GCC system_header
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cplusplus < 201103L
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** # include <bits/c++0x_warning.h>
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #else
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cpp_rtti
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** # include <typeinfo>
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #endif
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #include <bits/stl_function.h>
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #include <bits/invoke.h>
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #include <bits/refwrap.h>
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #include <bits/functexcept.h>
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** namespace std _GLIBCXX_VISIBILITY(default)
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** {
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   /**
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  @brief Exception class thrown when class template function's
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  operator() is called with an empty target.
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  @ingroup exceptions
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    */
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   class bad_function_call : public std::exception
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   {
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   public:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 24


  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     virtual ~bad_function_call() noexcept;
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const char* what() const noexcept;
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   /**
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  Trait identifying "location-invariant" types, meaning that the
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  address of the object (or any of its members) will not escape.
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  Trivially copyable types are location-invariant and users can
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  specialize this trait for other types.
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    */
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Tp>
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __is_location_invariant
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : is_trivially_copyable<_Tp>::type
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { };
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   class _Undefined_class;
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   union _Nocopy_types
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   {
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     void*       _M_object;
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_const_object;
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     void (*_M_function_pointer)();
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     void (_Undefined_class::*_M_member_pointer)();
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   union [[gnu::may_alias]] _Any_data
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   {
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     void*       _M_access()       { return &_M_pod_data[0]; }
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     template<typename _Tp>
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Tp&
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _M_access()
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       { return *static_cast<_Tp*>(_M_access()); }
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     template<typename _Tp>
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       const _Tp&
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _M_access() const
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       { return *static_cast<const _Tp*>(_M_access()); }
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     _Nocopy_types _M_unused;
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     char _M_pod_data[sizeof(_Nocopy_types)];
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   enum _Manager_operation
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   {
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     __get_type_info,
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     __get_functor_ptr,
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     __clone_functor,
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     __destroy_functor
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Signature>
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     class function;
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   /// Base class of all polymorphic function object wrappers.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 25


 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   class _Function_base
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   {
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   public:
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     static const size_t _M_max_size = sizeof(_Nocopy_types);
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     static const size_t _M_max_align = __alignof__(_Nocopy_types);
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     template<typename _Functor>
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       class _Base_manager
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       protected:
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static const bool __stored_locally =
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	(__is_location_invariant<_Functor>::value
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	 && sizeof(_Functor) <= _M_max_size
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	 && __alignof__(_Functor) <= _M_max_align
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	 && (_M_max_align % __alignof__(_Functor) == 0));
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	typedef integral_constant<bool, __stored_locally> _Local_storage;
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// Retrieve a pointer to the function object
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static _Functor*
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_get_pointer(const _Any_data& __source)
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  if _GLIBCXX17_CONSTEXPR (__stored_locally)
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    {
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      const _Functor& __f = __source._M_access<_Functor>();
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      return const_cast<_Functor*>(std::__addressof(__f));
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    }
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  else // have stored a pointer
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    return __source._M_access<_Functor*>();
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// Clone a location-invariant function object that fits within
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// an _Any_data structure.
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_clone(_Any_data& __dest, const _Any_data& __source, true_type)
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  ::new (__dest._M_access()) _Functor(__source._M_access<_Functor>());
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// Clone a function object that is not location-invariant or
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// that cannot fit into an _Any_data structure.
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_clone(_Any_data& __dest, const _Any_data& __source, false_type)
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  __dest._M_access<_Functor*>() =
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    new _Functor(*__source._M_access<const _Functor*>());
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// Destroying a location-invariant object may still require
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// destruction.
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_destroy(_Any_data& __victim, true_type)
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  __victim._M_access<_Functor>().~_Functor();
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// Destroying an object located on the heap.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 26


 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_destroy(_Any_data& __victim, false_type)
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  delete __victim._M_access<_Functor*>();
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       public:
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static bool
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_Any_data& __dest, const _Any_data& __source,
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 		   _Manager_operation __op)
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  switch (__op)
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    {
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cpp_rtti
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    case __get_type_info:
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      __dest._M_access<const type_info*>() = &typeid(_Functor);
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      break;
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #endif
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    case __get_functor_ptr:
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      __dest._M_access<_Functor*>() = _M_get_pointer(__source);
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      break;
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    case __clone_functor:
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      _M_clone(__dest, __source, _Local_storage());
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      break;
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    case __destroy_functor:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      _M_destroy(__dest, _Local_storage());
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      break;
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    }
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  return false;
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_init_functor(_Any_data& __functor, _Functor&& __f)
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	template<typename _Signature>
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  static bool
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_not_empty_function(const function<_Signature>& __f)
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return static_cast<bool>(__f); }
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	template<typename _Tp>
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  static bool
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_not_empty_function(_Tp* __fp)
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	template<typename _Class, typename _Tp>
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  static bool
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_not_empty_function(_Tp _Class::* __mp)
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __mp != nullptr; }
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	template<typename _Tp>
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  static bool
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_not_empty_function(const _Tp&)
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return true; }
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 27


 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       private:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_init_functor(_Any_data& __functor, _Functor&& __f, true_type)
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_init_functor(_Any_data& __functor, _Functor&& __f, false_type)
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ __functor._M_access<_Functor*>() = new _Functor(std::move(__f)); }
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       };
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     _Function_base() : _M_manager(nullptr) { }
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     ~_Function_base()
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       if (_M_manager)
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     bool _M_empty() const { return !_M_manager; }
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     typedef bool (*_Manager_type)(_Any_data&, const _Any_data&,
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 				  _Manager_operation);
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     _Any_data     _M_functor;
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     _Manager_type _M_manager;
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Signature, typename _Functor>
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     class _Function_handler;
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename _Functor, typename... _ArgTypes>
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     class _Function_handler<_Res(_ArgTypes...), _Functor>
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Function_base::_Base_manager<_Functor>
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       typedef _Function_base::_Base_manager<_Functor> _Base;
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     public:
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       static bool
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _M_manager(_Any_data& __dest, const _Any_data& __source,
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 		 _Manager_operation __op)
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	switch (__op)
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  {
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cpp_rtti
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  case __get_type_info:
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    __dest._M_access<const type_info*>() = &typeid(_Functor);
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    break;
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #endif
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  case __get_functor_ptr:
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    __dest._M_access<_Functor*>() = _Base::_M_get_pointer(__source);
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    break;
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  default:
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _Base::_M_manager(__dest, __source, __op);
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  }
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	return false;
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 28


 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       static _Res
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _M_invoke(const _Any_data& __functor, _ArgTypes&&... __args)
 224              		.loc 15 289 7 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 229              		.loc 15 88 37 view .LVU38
 230              	.LBB4587:
 231              	.LBI4587:
 232              		.file 16 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\inv
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // Implementation of INVOKE -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // Copyright (C) 2016-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** /** @file include/bits/invoke.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****  *  Do not attempt to use it directly. @headername{functional}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #ifndef _GLIBCXX_INVOKE_H
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #define _GLIBCXX_INVOKE_H 1
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #pragma GCC system_header
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #if __cplusplus < 201103L
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** # include <bits/c++0x_warning.h>
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #else
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #include <type_traits>
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** {
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 29


  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   /**
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****    *  @addtogroup utilities
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****    *  @{
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****    */
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   // Used by __invoke_impl instead of std::forward<_Tp> so that a
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   // reference_wrapper is converted to an lvalue-reference.
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Tp, typename _Up = typename __inv_unwrap<_Tp>::type>
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Up&&
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invfwd(typename remove_reference<_Tp>::type& __t) noexcept
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return static_cast<_Up&&>(__t); }
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Fn, typename... _Args>
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Res
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _MemFun, typename _Tp, typename... _Args>
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Res
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_impl(__invoke_memfun_ref, _MemFun&& __f, _Tp&& __t,
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 		  _Args&&... __args)
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return (__invfwd<_Tp>(__t).*__f)(std::forward<_Args>(__args)...); }
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _MemFun, typename _Tp, typename... _Args>
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Res
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_impl(__invoke_memfun_deref, _MemFun&& __f, _Tp&& __t,
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 		  _Args&&... __args)
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     {
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       return ((*std::forward<_Tp>(__t)).*__f)(std::forward<_Args>(__args)...);
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     }
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _MemPtr, typename _Tp>
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Res
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_impl(__invoke_memobj_ref, _MemPtr&& __f, _Tp&& __t)
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return __invfwd<_Tp>(__t).*__f; }
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _MemPtr, typename _Tp>
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Res
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_impl(__invoke_memobj_deref, _MemPtr&& __f, _Tp&& __t)
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return (*std::forward<_Tp>(__t)).*__f; }
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   /// Invoke a callable object.
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Callable, typename... _Args>
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr typename __invoke_result<_Callable, _Args...>::type
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke(_Callable&& __fn, _Args&&... __args)
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     noexcept(__is_nothrow_invocable<_Callable, _Args...>::value)
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     {
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __result = __invoke_result<_Callable, _Args...>;
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __type = typename __result::type;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __tag = typename __result::__invoke_type;
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 					std::forward<_Args>(__args)...);
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     }
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #if __cplusplus >= 201703L
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   // INVOKE<R>: Invoke a callable object and convert the result to R.
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Callable, typename... _Args>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 30


 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr enable_if_t<is_invocable_r_v<_Res, _Callable, _Args...>, _Res>
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_r(_Callable&& __fn, _Args&&... __args)
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     noexcept(is_nothrow_invocable_r_v<_Res, _Callable, _Args...>)
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     {
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __result = __invoke_result<_Callable, _Args...>;
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __type = typename __result::type;
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __tag = typename __result::__invoke_type;
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       if constexpr (is_void_v<_Res>)
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 	std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 					std::forward<_Args>(__args)...);
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       else
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 	return std::__invoke_impl<__type>(__tag{},
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 					  std::forward<_Callable>(__fn),
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 					  std::forward<_Args>(__args)...);
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     }
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #else // C++11
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Callable, typename... _Args>
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     using __can_invoke_as_void = __enable_if_t<
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       __and_<is_void<_Res>, __is_invocable<_Callable, _Args...>>::value,
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       _Res
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     >;
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Callable, typename... _Args>
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     using __can_invoke_as_nonvoid = __enable_if_t<
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       __and_<__not_<is_void<_Res>>,
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 	     is_convertible<typename __invoke_result<_Callable, _Args...>::type,
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 			    _Res>
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       >::value,
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       _Res
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     >;
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   // INVOKE<R>: Invoke a callable object and convert the result to R.
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Callable, typename... _Args>
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr __can_invoke_as_nonvoid<_Res, _Callable, _Args...>
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_r(_Callable&& __fn, _Args&&... __args)
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     {
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __result = __invoke_result<_Callable, _Args...>;
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __type = typename __result::type;
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __tag = typename __result::__invoke_type;
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 					std::forward<_Args>(__args)...);
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     }
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   // INVOKE<R> when R is cv void
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Callable, typename... _Args>
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     _GLIBCXX14_CONSTEXPR __can_invoke_as_void<_Res, _Callable, _Args...>
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_r(_Callable&& __fn, _Args&&... __args)
 233              		.loc 16 148 5 view .LVU39
 234              	.LBB4588:
 235              	.LBB4589:
 236              	.LBI4589:
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 237              		.loc 16 59 5 view .LVU40
 238              	.LBB4590:
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
 239              		.loc 16 60 36 is_stmt 0 view .LVU41
 240 0000 0368     		ldr	r3, [r0]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 31


 241 0002 1847     		bx	r3	@ indirect register sibling call
 242              	.LVL8:
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
 243              		.loc 16 60 36 view .LVU42
 244              	.LBE4590:
 245              	.LBE4589:
 246              	.LBE4588:
 247              	.LBE4587:
 248              		.cfi_endproc
 249              	.LFE5739:
 251              		.section	.text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransport
 252              		.align	1
 253              		.p2align 2,,3
 254              		.weak	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu fpv5-d16
 260              	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6HeightEv:
 261              	.LVL9:
 262              	.LFB6192:
  26:../../libdaisy/src/hid/disp/oled_display.h ****     uint16_t Width() const override { return driver_.Width(); }
 263              		.loc 4 26 14 is_stmt 1 view -0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
  26:../../libdaisy/src/hid/disp/oled_display.h ****     uint16_t Width() const override { return driver_.Width(); }
 268              		.loc 4 26 65 is_stmt 0 view .LVU44
 269 0000 4020     		movs	r0, #64
 270              	.LVL10:
  26:../../libdaisy/src/hid/disp/oled_display.h ****     uint16_t Width() const override { return driver_.Width(); }
 271              		.loc 4 26 65 view .LVU45
 272 0002 7047     		bx	lr
 273              		.cfi_endproc
 274              	.LFE6192:
 276              		.section	.text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransport
 277              		.align	1
 278              		.p2align 2,,3
 279              		.weak	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu fpv5-d16
 285              	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5WidthEv:
 286              	.LVL11:
 287              	.LFB6193:
  27:../../libdaisy/src/hid/disp/oled_display.h **** 
 288              		.loc 4 27 14 is_stmt 1 view -0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292              		@ link register save eliminated.
  27:../../libdaisy/src/hid/disp/oled_display.h **** 
 293              		.loc 4 27 63 is_stmt 0 view .LVU47
 294 0000 8020     		movs	r0, #128
 295              	.LVL12:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 32


  27:../../libdaisy/src/hid/disp/oled_display.h **** 
 296              		.loc 4 27 63 view .LVU48
 297 0002 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE6193:
 301              		.section	.text._Z2cbv,"ax",%progbits
 302              		.align	1
 303              		.p2align 2,,3
 304              		.global	_Z2cbv
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 308              		.fpu fpv5-d16
 310              	_Z2cbv:
 311              	.LFB5111:
 312              		.file 17 "Jellybeans.cpp"
   1:Jellybeans.cpp **** /* 
   2:Jellybeans.cpp ****  * Copyright (C) 2021 Evan Pernu - All Rights Reserved
   3:Jellybeans.cpp ****  * You may use, distribute and modify this code under the
   4:Jellybeans.cpp ****  * terms of the GNU AGPLv3 license.
   5:Jellybeans.cpp ****  * 
   6:Jellybeans.cpp ****  * You should have received a copy of the GNU AGPLv3 license with
   7:Jellybeans.cpp ****  * this file (LICENSE.md). If not, please write to: evanpernu@gmail.com, 
   8:Jellybeans.cpp ****  * or visit: https://www.gnu.org/licenses/agpl-3.0.en.html
   9:Jellybeans.cpp ****  *
  10:Jellybeans.cpp ****  * 
  11:Jellybeans.cpp ****  * ====================================================
  12:Jellybeans.cpp ****  * =   __       _        _                            =
  13:Jellybeans.cpp ****  * =   \ \  ___| | |_   _| |__   ___  __ _ _ __  ___  =
  14:Jellybeans.cpp ****  * =    \ \/ _ \ | | | | | '_ \ / _ \/ _` | '_ \/ __| =
  15:Jellybeans.cpp ****  * = /\_/ /  __/ | | |_| | |_) |  __/ (_| | | | \__ \ =
  16:Jellybeans.cpp ****  * = \___/ \___|_|_|\__, |_.__/ \___|\__,_|_| |_|___/ =
  17:Jellybeans.cpp ****  * =                |___/                             =
  18:Jellybeans.cpp ****  * ====================================================
  19:Jellybeans.cpp ****  * 
  20:Jellybeans.cpp ****  * 
  21:Jellybeans.cpp ****  * Jellybeans is an arpeggiator eurorack module designed for the 
  22:Jellybeans.cpp ****  * Electrosmith Daisy Patch platform.
  23:Jellybeans.cpp ****  */
  24:Jellybeans.cpp **** 
  25:Jellybeans.cpp **** 
  26:Jellybeans.cpp **** #include "daisysp.h"
  27:Jellybeans.cpp **** #include "daisy_patch.h"
  28:Jellybeans.cpp **** #include "daisysp.h"
  29:Jellybeans.cpp **** #include "resources.h"
  30:Jellybeans.cpp **** 
  31:Jellybeans.cpp **** 
  32:Jellybeans.cpp **** #include <string>
  33:Jellybeans.cpp **** #include <array>
  34:Jellybeans.cpp **** 
  35:Jellybeans.cpp **** using namespace daisy;
  36:Jellybeans.cpp **** using namespace daisysp;
  37:Jellybeans.cpp **** using namespace jellybeans;
  38:Jellybeans.cpp **** 
  39:Jellybeans.cpp **** DaisyPatch patch;
  40:Jellybeans.cpp **** 
  41:Jellybeans.cpp **** // If true, the bottom row will display debug data instead of a menu item
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 33


  42:Jellybeans.cpp **** const bool debugMode = true;
  43:Jellybeans.cpp **** std::string debugString;
  44:Jellybeans.cpp **** 
  45:Jellybeans.cpp **** // The note vallue currently being sent to Patches' DAC's output 1
  46:Jellybeans.cpp **** // This is stored so that it's only calculated upon a change
  47:Jellybeans.cpp **** float arpNoteDacOutput1;
  48:Jellybeans.cpp **** 
  49:Jellybeans.cpp **** const FontDef font = Font_7x10;
  50:Jellybeans.cpp **** const int     fontWidth = 7;
  51:Jellybeans.cpp **** const int     fontHeight = 10;
  52:Jellybeans.cpp **** 
  53:Jellybeans.cpp **** /// Menu navigating vars
  54:Jellybeans.cpp **** int  menuPos;
  55:Jellybeans.cpp **** bool isEditing;
  56:Jellybeans.cpp **** 
  57:Jellybeans.cpp **** 
  58:Jellybeans.cpp **** // Given the 1V/oct and 0-5V range of the CV out port,
  59:Jellybeans.cpp **** // we are limited to a 5 octave register. Voicings span
  60:Jellybeans.cpp **** // up to 2 octaves and coarse tuning (mTonic) spans another,
  61:Jellybeans.cpp **** // leaving us 2 octaves of room for upwards transposition.
  62:Jellybeans.cpp **** //
  63:Jellybeans.cpp **** // Note that the indices of the elements are also their octave distances from 0
  64:Jellybeans.cpp **** const std::vector<std::string> allOctaves {
  65:Jellybeans.cpp ****     "0",
  66:Jellybeans.cpp ****     "+1", // TODO re-enable these once out-of-bounds notes have been handled
  67:Jellybeans.cpp ****     "+2"
  68:Jellybeans.cpp **** };
  69:Jellybeans.cpp **** 
  70:Jellybeans.cpp **** void updateControls();
  71:Jellybeans.cpp **** void updateOled();
  72:Jellybeans.cpp **** void updateOutputs();
  73:Jellybeans.cpp **** //void onClockPulseIn();
  74:Jellybeans.cpp **** void drawString(std::string, int, int);
  75:Jellybeans.cpp **** 
  76:Jellybeans.cpp **** Arp* arp;
  77:Jellybeans.cpp **** 
  78:Jellybeans.cpp **** std::array<MenuItem, 10> menuItems;
  79:Jellybeans.cpp **** 
  80:Jellybeans.cpp **** // Reference vars to make the code more readable
  81:Jellybeans.cpp **** MenuItem *mPattern   = &menuItems[0];
  82:Jellybeans.cpp **** MenuItem *mDivision  = &menuItems[1];
  83:Jellybeans.cpp **** MenuItem *mVoicing   = &menuItems[2];
  84:Jellybeans.cpp **** MenuItem *mInversion = &menuItems[3];
  85:Jellybeans.cpp **** MenuItem *mTonic     = &menuItems[4];
  86:Jellybeans.cpp **** MenuItem *mScale     = &menuItems[5];
  87:Jellybeans.cpp **** MenuItem *mRhythm    = &menuItems[6];
  88:Jellybeans.cpp **** MenuItem *mOctRng    = &menuItems[7];
  89:Jellybeans.cpp **** MenuItem *mOct       = &menuItems[8];
  90:Jellybeans.cpp **** MenuItem *mClockDiv  = &menuItems[9];
  91:Jellybeans.cpp **** 
  92:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
  93:Jellybeans.cpp **** int patternCurCvVal, divisionCurCvVal, voicingCurCvVal, inversionCurCvVal;
  94:Jellybeans.cpp **** 
  95:Jellybeans.cpp **** // Callback functions invoked whenever menu parameters are changed
  96:Jellybeans.cpp **** void cb(){
 313              		.loc 17 96 10 is_stmt 1 view -0
 314              		.cfi_startproc
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 34


 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              		@ link register save eliminated.
  97:Jellybeans.cpp ****     arp->updateTraversal();
 318              		.loc 17 97 5 view .LVU50
 319              		.loc 17 97 25 is_stmt 0 view .LVU51
 320 0000 014B     		ldr	r3, .L10
 321 0002 1868     		ldr	r0, [r3]
 322 0004 FFF7FEBF 		b	_ZN10jellybeans3Arp15updateTraversalEv
 323              	.LVL13:
 324              	.L11:
 325              		.align	2
 326              	.L10:
 327 0008 00000000 		.word	.LANCHOR0
 328              		.cfi_endproc
 329              	.LFE5111:
 331              		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 332              		.align	1
 333              		.p2align 2,,3
 334              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev
 335              		.syntax unified
 336              		.thumb
 337              		.thumb_func
 338              		.fpu fpv5-d16
 340              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev:
 341              	.LVL14:
 342              	.LFB5452:
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 343              		.loc 4 17 13 is_stmt 1 view -0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 347              		.loc 4 17 13 is_stmt 0 view .LVU53
 348 0000 10B5     		push	{r4, lr}
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 4, -8
 351              		.cfi_offset 14, -4
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 352              		.loc 4 17 13 view .LVU54
 353 0002 0446     		mov	r4, r0
 354              	.LVL15:
 355              	.LBB4591:
 356              	.LBI4591:
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 357              		.loc 4 17 13 is_stmt 1 view .LVU55
 358              	.LBB4592:
 359              	.LBI4592:
 360              		.loc 5 219 13 view .LVU56
 361              	.LBB4593:
 362              	.LBI4593:
  23:../../libdaisy/src/hid/disp/display.h **** 
 363              		.loc 5 23 13 view .LVU57
  23:../../libdaisy/src/hid/disp/display.h **** 
 364              		.loc 5 23 13 is_stmt 0 view .LVU58
 365              	.LBE4593:
 366              	.LBE4592:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 35


 367              	.LBE4591:
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 368              		.loc 4 17 29 view .LVU59
 369 0004 40F21441 		movw	r1, #1044
 370 0008 FFF7FEFF 		bl	_ZdlPvj
 371              	.LVL16:
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 372              		.loc 4 17 29 view .LVU60
 373 000c 2046     		mov	r0, r4
 374 000e 10BD     		pop	{r4, pc}
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 375              		.loc 4 17 29 view .LVU61
 376              		.cfi_endproc
 377              	.LFE5452:
 379              		.section	.rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra
 380              		.align	2
 381              	.LC9:
 382 0000 62617369 		.ascii	"basic_string::_M_construct null not valid\000"
 382      635F7374 
 382      72696E67 
 382      3A3A5F4D 
 382      5F636F6E 
 383              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 384              		.align	1
 385              		.p2align 2,,3
 386              		.syntax unified
 387              		.thumb
 388              		.thumb_func
 389              		.fpu fpv5-d16
 391              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0:
 392              	.LVL17:
 393              	.LFB6227:
 394              		.file 18 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\bas
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 36


  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** /** @file bits/basic_string.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifndef _BASIC_STRING_H
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #define _BASIC_STRING_H 1
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #pragma GCC system_header
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/atomicity.h>
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/alloc_traits.h>
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <debug/debug.h>
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <initializer_list>
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # include <string_view>
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** {
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @class basic_string basic_string.h <string>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup strings
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup sequences
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _CharT  Type of character
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                   char_traits<_CharT>.
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     class basic_string
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 37


  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Types:
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Traits					traits_type;
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Traits::char_type		value_type;
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 							const_iterator;
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Value returned by various member functions when they fail.
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     protected:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // type used for positions in insert, erase etc.
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef iterator __const_iterator;
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef const_iterator __const_iterator;
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // A helper type for avoiding boiler-plate.
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename _Res>
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	using _If_sv = enable_if_t<
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _Res>;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allows an implicit conversion to __sv_type.
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static __sv_type
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __svt; }
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // allows to add an internal constructor that does not
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // participate in overload resolution when a string_view
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // is provided.
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct __sv_wrapper
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__sv_type _M_sv;
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 38


 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          wrapper.
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svw  string view wrapper.
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	pointer _M_p; // The actual data.
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _Alloc_hider	_M_dataplus;
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type		_M_string_length;
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       union
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type        _M_allocated_capacity;
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data(pointer __p)
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_length(size_type __length)
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data() const
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_local_data()
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return pointer(_M_local_buf);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 39


 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_pointer
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_local_data() const
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return const_pointer(_M_local_buf);
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_capacity(size_type __capacity)
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_set_length(size_type __n)
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_length(__n);
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_is_local() const
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Create & Destroy
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_create(size_type&, size_type);
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_dispose()
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_is_local())
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_destroy(size_type __size) throw()
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           _M_construct(__beg, __end, _Tag());
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Integer>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 40


 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__req, __c); }
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     std::input_iterator_tag);
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // string::iterator, _CharT*, etc.
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _FwdIterator>
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     std::forward_iterator_tag);
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type&
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_get_allocator()
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const allocator_type&
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_get_allocator() const
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, bool _Requires =
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ typedef basic_string& __type; };
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 41


 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__pos > this->size())
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "this->size() (which is %zu)"),
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __s, __pos, this->size());
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __pos;
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_length_error(__N(__s));
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // True if _Rep and source do not overlap.
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // When __n = 1 way faster than the general multichar
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // traits_type::copy/move/assign.
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::move(__d, __s, __n);
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 42


 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, __c);
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // to optimize for the common case of pointers as iterators.
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Iterator>
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static void
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static int
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return int(__d);
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_assign(const basic_string&);
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __len2);
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 43


 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Construct/copy/destroy:
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Default constructor creates an empty string.
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string()
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str)
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n)
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 44


 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n, const _Alloc& __a)
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source character %array.
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  has no special meaning.
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__s, __s + __n); }
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a C string.
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source C string.
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 395              		.loc 18 525 7 is_stmt 1 view -0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 8
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              	.LBB4653:
 400              	.LBB4654:
 401              	.LBI4654:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 402              		.loc 18 190 7 view .LVU63
 403              	.LBE4654:
 404              	.LBE4653:
 405              		.loc 18 525 7 is_stmt 0 view .LVU64
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 45


 406 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 407              		.cfi_def_cfa_offset 20
 408              		.cfi_offset 4, -20
 409              		.cfi_offset 5, -16
 410              		.cfi_offset 6, -12
 411              		.cfi_offset 7, -8
 412              		.cfi_offset 14, -4
 413              	.LBB4733:
 414              	.LBB4656:
 415              	.LBB4655:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 416              		.loc 18 193 51 view .LVU65
 417 0002 00F10807 		add	r7, r0, #8
 418              	.LVL18:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 419              		.loc 18 193 51 view .LVU66
 420              	.LBE4655:
 421              	.LBE4656:
 422              	.LBB4657:
 423              	.LBI4657:
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 424              		.loc 18 156 2 is_stmt 1 view .LVU67
 425              	.LBB4658:
 426              	.LBB4659:
 427              	.LBI4659:
 428              		.file 19 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\all
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Allocators -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Copyright (c) 1996-1997
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * provided that the above copyright notice appear in all copies and
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 46


  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * that both that copyright notice and this permission notice appear
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * representations about the suitability of this software for any
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /** @file bits/allocator.h
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  This is an internal header file, included by other library headers.
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #ifndef _ALLOCATOR_H
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define _ALLOCATOR_H 1
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/memoryfwd.h>
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <type_traits>
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** {
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @addtogroup allocators
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @{
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /// allocator<void> specialization.
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator<void>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void        value_type;
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t      size_type;
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t   difference_type;
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void*       pointer;
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const void* const_pointer;
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #else
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() = default;
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	constexpr
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Up>&) { }
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // ! C++20
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L && __cplusplus <= 201703L
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 47


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up, typename... _Args>
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	destroy(_Up* __p)
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_destructible<_Up>::value)
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ __p->~_Up(); }
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // C++11 to C++17
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     };
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  for further details.
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<typename _Tp>
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator : public __allocator_base<_Tp>
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp        value_type;
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t     size_type;
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t  difference_type;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp*       pointer;
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp* const_pointer;
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp&       reference;
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp& const_reference;
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 48


 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 429              		.loc 19 147 7 view .LVU68
 430              	.LBB4660:
 431              	.LBI4660:
 432              		.file 20 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\new_
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** /** @file ext/new_allocator.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  */
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/c++config.h>
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <new>
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/functexcept.h>
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/move.h>
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <type_traits>
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** {
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   /**
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @ingroup allocators
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all allocation calls operator new
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all deallocation calls operator delete
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 49


  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    */
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   template<typename _Tp>
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     class new_allocator
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     {
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     public:
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp        value_type;
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::size_t     size_type;
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp*       pointer;
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp* const_pointer;
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp&       reference;
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp& const_reference;
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	struct rebind
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 433              		.loc 20 82 7 view .LVU69
 434              		.loc 20 82 7 is_stmt 0 view .LVU70
 435              	.LBE4660:
 436              	.LBE4659:
 437              	.LBE4658:
 438              	.LBE4657:
 439              	.LBE4733:
 440              		.loc 18 525 7 view .LVU71
 441 0006 83B0     		sub	sp, sp, #12
 442              		.cfi_def_cfa_offset 32
 443              	.LBB4734:
 444              	.LBB4662:
 445              	.LBB4661:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 446              		.loc 18 157 35 view .LVU72
 447 0008 0760     		str	r7, [r0]
 448              	.LVL19:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 449              		.loc 18 157 35 view .LVU73
 450              	.LBE4661:
 451              	.LBE4662:
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 452              		.loc 18 527 21 view .LVU74
 453 000a 29B3     		cbz	r1, .L15
 454 000c 0446     		mov	r4, r0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 50


 455              	.LBB4663:
 456              	.LBB4664:
 457              		.file 21 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\cha
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** /** @file bits/char_traits.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #define _CHAR_TRAITS_H 1
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #pragma GCC system_header
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus > 201703L
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** # include <compare>
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** # define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** {
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 51


  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Mapping from character type to associated types.
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note This is an implementation class for the generic version
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types, but who don't need to change the definitions of any function
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct _Char_types
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef unsigned long   int_type;
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::streampos  pos_type;
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::streamoff  off_type;
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::mbstate_t  state_type;
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     };
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note For any given actual character type, this definition is
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  namespace __gnu_cxx may be.
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef _CharT                                    char_type;
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cpp_lib_three_way_comparison
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       using comparison_category = std::strong_ordering;
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 < __c2; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 52


 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       length(const char_type* __s);
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       to_char_type(const int_type& __c)
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<char_type>(__c); }
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       to_int_type(const char_type& __c)
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<int_type>(__c); }
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eof()
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       not_eof(const int_type& __c)
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     };
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return -1;
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 1;
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return 0;
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     length(const char_type* __p)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 53


 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::size_t __i = 0;
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (!eq(__p[__i], char_type()))
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****         ++__i;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __i;
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****         if (eq(__s[__i], __a))
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****           return __s + __i;
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return 0;
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       if (__n == 0)
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __s1;
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       if (std::is_constant_evaluated())
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	{
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  if (__s1 > __s2 && __s1 < __s2 + __n)
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    std::copy_backward(__s2, __s2 + __n, __s1);
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  else
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    std::copy(__s2, __s2 + __n, __s1);
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	}
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 						    __n * sizeof(char_type)));
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __s1;
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 54


 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::fill_n(__s, __n, __a);
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __s;
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** } // namespace
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** {
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #define __cpp_lib_constexpr_char_traits 201611
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  string are known at compile time.
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __s  The string.
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     __constant_string_p(const _CharT* __s)
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __s;
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // In constexpr contexts all strings should be constant.
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_is_constant_evaluated();
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #else
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	__s++;
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_constant_p(*__s);
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief Determine whether the characters of a character array are
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  known at compile time.
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __a  The character array.
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __n  Number of characters.
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __a;
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __n;
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // In constexpr contexts all character arrays should be constant.
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_is_constant_evaluated();
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #else
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       size_t __i = 0;
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (__i < __n && __builtin_constant_p(__a[__i]))
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 55


 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	__i++;
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __i == __n;
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   // 21.1
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note  For any given actual character type, this definition is
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   */
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<class _CharT>
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     { };
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /// 21.1.3.1  char_traits specializations
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<>
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits<char>
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef char              char_type;
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef int               int_type;
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef streampos         pos_type;
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef streamoff         off_type;
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef mbstate_t         state_type;
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cpp_lib_three_way_comparison
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       using comparison_category = strong_ordering;
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	// LWG 467.
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 		< static_cast<unsigned char>(__c2));
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 56


 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__builtin_constant_p(__n)
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       length(const char_type* __s)
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__constant_string_p(__s))
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __builtin_strlen(__s);
 458              		.loc 21 357 25 view .LVU75
 459 000e 0846     		mov	r0, r1
 460              	.LVL20:
 461              		.loc 21 357 25 view .LVU76
 462 0010 0E46     		mov	r6, r1
 463              	.LVL21:
 464              		.loc 21 357 25 view .LVU77
 465              	.LBE4664:
 466              	.LBI4663:
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 467              		.loc 21 351 7 is_stmt 1 view .LVU78
 468              	.LBB4665:
 469              		.loc 21 357 2 view .LVU79
 470              		.loc 21 357 25 is_stmt 0 view .LVU80
 471 0012 FFF7FEFF 		bl	strlen
 472              	.LVL22:
 473              		.loc 21 357 25 view .LVU81
 474              	.LBE4665:
 475              	.LBE4663:
 476              	.LBB4667:
 477              	.LBB4668:
 478              	.LBB4669:
 479              	.LBB4670:
 480              	.LBB4671:
 481              	.LBB4672:
 482              		.file 22 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\bas
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Components for manipulating sequences of characters -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 57


  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** /** @file bits/basic_string.tcc
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  *  Do not attempt to use it directly. @headername{string}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // ISO C++ 14882: 21  Strings library
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Written by Jason Merrill based upon the specification by Takanori Adachi
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers to ISO-14882.
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Non-reference-counted implementation written by Paolo Carlini and
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // updated by Jonathan Wakely for ISO-14882-2011.
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #ifndef _BASIC_STRING_TCC
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #define _BASIC_STRING_TCC 1
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #pragma GCC system_header
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #include <bits/cxxabi_forced.h>
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** {
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #if _GLIBCXX_USE_CXX11_ABI
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::npos;
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     void
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     swap(basic_string& __s) _GLIBCXX_NOEXCEPT
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     {
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (this == &__s)
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	return;
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _Alloc_traits::_S_on_swap(_M_get_allocator(), __s._M_get_allocator());
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (_M_is_local())
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__s._M_is_local())
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    if (length() && __s.length())
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 58


  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_CharT __tmp_data[_S_local_capacity + 1];
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__tmp_data, __s._M_local_buf,
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(_M_local_buf, __tmp_data,
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    else if (__s.length())
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(_M_local_buf, __s._M_local_buf,
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_length(__s.length());
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		__s._M_set_length(0);
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		return;
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    else if (length())
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		__s._M_length(length());
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_set_length(0);
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		return;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	else
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    const size_type __tmp_capacity = __s._M_allocated_capacity;
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    traits_type::copy(__s._M_local_buf, _M_local_buf,
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 			      _S_local_capacity + 1);
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data(__s._M_data());
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __s._M_data(__s._M_local_buf);
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__tmp_capacity);
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       else
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	{
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  const size_type __tmp_capacity = _M_allocated_capacity;
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  if (__s._M_is_local())
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    {
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      traits_type::copy(_M_local_buf, __s._M_local_buf,
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				_S_local_capacity + 1);
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      __s._M_data(_M_data());
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_data(_M_local_buf);
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    }
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  else
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    {
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      pointer __tmp_ptr = _M_data();
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_data(__s._M_data());
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      __s._M_data(__tmp_ptr);
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_capacity(__s._M_allocated_capacity);
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    }
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  __s._M_capacity(__tmp_capacity);
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	}
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       const size_type __tmp_length = length();
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_length(__s.length());
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       __s._M_length(__tmp_length);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 59


 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     }
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::pointer
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     _M_create(size_type& __capacity, size_type __old_capacity)
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     {
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // 83.  String::npos vs. string::max_size()
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (__capacity > max_size())
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	std::__throw_length_error(__N("basic_string::_M_create"));
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // The below implements an exponential growth policy, necessary to
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // meet amortized linear time requirements of the library: see
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	{
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  __capacity = 2 * __old_capacity;
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  // Never allocate a string bigger than max_size.
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  if (__capacity > max_size())
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __capacity = max_size();
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	}
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // NB: Need an array of char_type[__capacity], plus a terminating
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // null char_type() element.
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     }
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // NB: This is the special case for Input Iterators, used in
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // istreambuf_iterators, etc.
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // Input Iterators have a cost structure very different from
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // pointers, calling for a different coding style.
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     template<typename _InIterator>
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       void
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		   std::input_iterator_tag)
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       {
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __len = 0;
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __capacity = size_type(_S_local_capacity);
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	while (__beg != __end && __len < __capacity)
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data()[__len++] = *__beg;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    ++__beg;
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__try
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    while (__beg != __end)
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		if (__len == __capacity)
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		  {
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    // Allocate more space.
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    __capacity = __len + 1;
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    pointer __another = _M_create(__capacity, __len);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 60


 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    this->_S_copy(__another, _M_data(), __len);
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_dispose();
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_data(__another);
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_capacity(__capacity);
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		  }
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_data()[__len++] = *__beg;
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		++__beg;
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__catch(...)
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_dispose();
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __throw_exception_again;
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	_M_set_length(__len);
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       }
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     template<typename _InIterator>
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       void
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		   std::forward_iterator_tag)
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       {
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	// NB: Not required, but considered best practice.
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__dnew > size_type(_S_local_capacity))
 483              		.loc 22 217 2 view .LVU82
 484 0016 0F28     		cmp	r0, #15
 485              	.LBE4672:
 486              	.LBE4671:
 487              	.LBE4670:
 488              	.LBE4669:
 489              	.LBE4668:
 490              	.LBE4667:
 491              	.LBB4730:
 492              	.LBB4666:
 493              		.loc 21 357 25 view .LVU83
 494 0018 0546     		mov	r5, r0
 495              	.LVL23:
 496              		.loc 21 357 25 view .LVU84
 497              	.LBE4666:
 498              	.LBE4730:
 499              	.LBB4731:
 500              	.LBI4667:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 501              		.loc 18 263 9 is_stmt 1 view .LVU85
 502              	.LBB4727:
 503              	.LBB4724:
 504              	.LBI4669:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 61


 505              		.loc 18 243 9 view .LVU86
 506              	.LBB4721:
 507              	.LBB4718:
 508              	.LBI4671:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 509              		.loc 22 206 7 view .LVU87
 510              	.LBB4715:
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 511              		.loc 22 215 12 is_stmt 0 view .LVU88
 512 001a 0190     		str	r0, [sp, #4]
 513              		.loc 22 217 2 view .LVU89
 514 001c 0DD8     		bhi	.L26
 515              	.LVL24:
 516              	.LBB4673:
 517              	.LBI4673:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 518              		.loc 18 186 7 is_stmt 1 view .LVU90
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 519              		.loc 18 186 7 is_stmt 0 view .LVU91
 520              	.LBE4673:
 521              	.LBB4674:
 522              	.LBI4674:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 523              		.loc 18 396 7 is_stmt 1 view .LVU92
 524              	.LBB4675:
 525              	.LBI4675:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 526              		.loc 18 346 7 view .LVU93
 527              	.LBB4676:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 528              		.loc 18 348 2 is_stmt 0 view .LVU94
 529 001e 0128     		cmp	r0, #1
 530 0020 08D1     		bne	.L19
 531              	.LVL25:
 532              	.LBB4677:
 533              	.LBI4677:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 534              		.loc 21 321 7 is_stmt 1 view .LVU95
 535              	.LBB4678:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 536              		.loc 21 322 9 view .LVU96
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 537              		.loc 21 322 14 is_stmt 0 view .LVU97
 538 0022 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 539 0024 2372     		strb	r3, [r4, #8]
 540              	.LVL26:
 541              	.L20:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 542              		.loc 21 322 14 view .LVU98
 543              	.LBE4678:
 544              	.LBE4677:
 545              	.LBE4676:
 546              	.LBE4675:
 547              	.LBE4674:
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data(_M_create(__dnew, size_type(0)));
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 62


 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	// Check for out_of_range and length_error exceptions.
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__try
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__catch(...)
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_dispose();
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __throw_exception_again;
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	_M_set_length(__dnew);
 548              		.loc 22 232 15 view .LVU99
 549 0026 019B     		ldr	r3, [sp, #4]
 550              	.LVL27:
 551              	.LBB4694:
 552              	.LBI4694:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 553              		.loc 18 214 7 is_stmt 1 view .LVU100
 554              	.LBB4695:
 555              	.LBB4696:
 556              	.LBI4696:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 557              		.loc 18 182 7 view .LVU101
 558              	.LBE4696:
 559              	.LBB4698:
 560              	.LBB4699:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 561              		.loc 21 322 14 is_stmt 0 view .LVU102
 562 0028 0021     		movs	r1, #0
 563 002a 2268     		ldr	r2, [r4]
 564              	.LBE4699:
 565              	.LBE4698:
 566              	.LBB4701:
 567              	.LBB4697:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 568              		.loc 18 183 26 view .LVU103
 569 002c 6360     		str	r3, [r4, #4]
 570              	.LVL28:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 571              		.loc 18 183 26 view .LVU104
 572              	.LBE4697:
 573              	.LBE4701:
 574              	.LBB4702:
 575              	.LBI4702:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 576              		.loc 18 186 7 is_stmt 1 view .LVU105
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 577              		.loc 18 186 7 is_stmt 0 view .LVU106
 578              	.LBE4702:
 579              	.LBB4703:
 580              	.LBI4698:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 581              		.loc 21 321 7 is_stmt 1 view .LVU107
 582              	.LBB4700:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 583              		.loc 21 322 9 view .LVU108
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 63


 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 584              		.loc 21 322 14 is_stmt 0 view .LVU109
 585 002e D154     		strb	r1, [r2, r3]
 586              	.LVL29:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 587              		.loc 21 322 14 view .LVU110
 588              	.LBE4700:
 589              	.LBE4703:
 590              	.LBE4695:
 591              	.LBE4694:
 592              	.LBE4715:
 593              	.LBE4718:
 594              	.LBE4721:
 595              	.LBE4724:
 596              	.LBE4727:
 597              	.LBE4731:
 598              	.LBE4734:
 599              		.loc 18 527 77 view .LVU111
 600 0030 03B0     		add	sp, sp, #12
 601              		.cfi_remember_state
 602              		.cfi_def_cfa_offset 20
 603              		@ sp needed
 604 0032 F0BD     		pop	{r4, r5, r6, r7, pc}
 605              	.LVL30:
 606              	.L19:
 607              		.cfi_restore_state
 608              	.LBB4735:
 609              	.LBB4732:
 610              	.LBB4728:
 611              	.LBB4725:
 612              	.LBB4722:
 613              	.LBB4719:
 614              	.LBB4716:
 615              	.LBB4704:
 616              	.LBB4691:
 617              	.LBB4688:
 618              	.LBB4679:
 619              	.LBI4679:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 620              		.loc 18 346 7 is_stmt 1 view .LVU112
 621              	.LBB4680:
 622              	.LBI4680:
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR const char_type*
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       find(const char_type* __s, size_t __n, const char_type& __a)
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__builtin_constant_p(__n)
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __builtin_constant_p(__a)
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s, __n))
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::find(__s, __n, __a);
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 64


 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, size_t __n)
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (std::is_constant_evaluated())
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::move(__s1, __s2, __n);
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, size_t __n)
 623              		.loc 21 387 7 view .LVU113
 624              	.LBB4681:
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 625              		.loc 21 389 2 view .LVU114
 626 0034 0028     		cmp	r0, #0
 627 0036 F6D0     		beq	.L20
 628 0038 08E0     		b	.L18
 629              	.LVL31:
 630              	.L26:
 631              		.loc 21 389 2 is_stmt 0 view .LVU115
 632              	.LBE4681:
 633              	.LBE4680:
 634              	.LBE4679:
 635              	.LBE4688:
 636              	.LBE4691:
 637              	.LBE4704:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 638              		.loc 22 219 13 view .LVU116
 639 003a 0022     		movs	r2, #0
 640 003c 01A9     		add	r1, sp, #4
 641 003e 2046     		mov	r0, r4
 642              	.LVL32:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 643              		.loc 22 219 13 view .LVU117
 644 0040 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 645              	.LVL33:
 646              	.LBB4705:
 647              	.LBB4706:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 648              		.loc 18 211 31 view .LVU118
 649 0044 019B     		ldr	r3, [sp, #4]
 650              	.LBE4706:
 651              	.LBE4705:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 652              		.loc 22 219 13 view .LVU119
 653 0046 0746     		mov	r7, r0
 654              	.LVL34:
 655              	.LBB4708:
 656              	.LBI4708:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 657              		.loc 18 178 7 is_stmt 1 view .LVU120
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 65


 658              	.LBB4709:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 659              		.loc 18 179 26 is_stmt 0 view .LVU121
 660 0048 2060     		str	r0, [r4]
 661              	.LVL35:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 662              		.loc 18 179 26 view .LVU122
 663              	.LBE4709:
 664              	.LBE4708:
 665              	.LBB4710:
 666              	.LBI4705:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 667              		.loc 18 210 7 is_stmt 1 view .LVU123
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 668              		.loc 18 210 7 is_stmt 0 view .LVU124
 669              	.LBE4710:
 670              	.LBB4711:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 671              		.loc 18 186 7 is_stmt 1 view .LVU125
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 672              		.loc 18 186 7 is_stmt 0 view .LVU126
 673              	.LBE4711:
 674              	.LBB4712:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 675              		.loc 18 396 7 is_stmt 1 view .LVU127
 676              	.LBB4692:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 677              		.loc 18 346 7 view .LVU128
 678              	.LBB4689:
 679              	.LBB4686:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 680              		.loc 18 346 7 view .LVU129
 681              	.LBB4684:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 682              		.loc 21 387 7 view .LVU130
 683              	.LBB4682:
 684              		.loc 21 389 2 view .LVU131
 685              	.LBE4682:
 686              	.LBE4684:
 687              	.LBE4686:
 688              	.LBE4689:
 689              	.LBE4692:
 690              	.LBE4712:
 691              	.LBB4713:
 692              	.LBB4707:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 693              		.loc 18 211 31 is_stmt 0 view .LVU132
 694 004a A360     		str	r3, [r4, #8]
 695              	.LVL36:
 696              	.L18:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 697              		.loc 18 211 31 view .LVU133
 698              	.LBE4707:
 699              	.LBE4713:
 700              	.LBB4714:
 701              	.LBB4693:
 702              	.LBB4690:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 66


 703              	.LBB4687:
 704              	.LBB4685:
 705              	.LBB4683:
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (std::is_constant_evaluated())
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::copy(__s1, __s2, __n);
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
 706              		.loc 21 395 2 is_stmt 1 view .LVU134
 707              		.loc 21 395 49 is_stmt 0 view .LVU135
 708 004c 2A46     		mov	r2, r5
 709 004e 3146     		mov	r1, r6
 710 0050 3846     		mov	r0, r7
 711 0052 FFF7FEFF 		bl	memcpy
 712              	.LVL37:
 713              		.loc 21 395 66 view .LVU136
 714 0056 E6E7     		b	.L20
 715              	.LVL38:
 716              	.L15:
 717              		.loc 21 395 66 view .LVU137
 718              	.LBE4683:
 719              	.LBE4685:
 720              	.LBE4687:
 721              	.LBE4690:
 722              	.LBE4693:
 723              	.LBE4714:
 724              	.LBE4716:
 725              	.LBE4719:
 726              	.LBE4722:
 727              	.LBE4725:
 728              	.LBE4728:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 729              		.loc 18 263 9 is_stmt 1 view .LVU138
 730              	.LBB4729:
 731              	.LBB4726:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 732              		.loc 18 243 9 view .LVU139
 733              	.LBB4723:
 734              	.LBB4720:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 735              		.loc 22 206 7 view .LVU140
 736              	.LBB4717:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 737              		.loc 22 212 28 is_stmt 0 view .LVU141
 738 0058 0148     		ldr	r0, .L27
 739              	.LVL39:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 740              		.loc 22 212 28 view .LVU142
 741 005a FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 742              	.LVL40:
 743              	.L28:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 744              		.loc 22 212 28 view .LVU143
 745 005e 00BF     		.align	2
 746              	.L27:
 747 0060 00000000 		.word	.LC9
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 67


 748              	.LBE4717:
 749              	.LBE4720:
 750              	.LBE4723:
 751              	.LBE4726:
 752              	.LBE4729:
 753              	.LBE4732:
 754              	.LBE4735:
 755              		.cfi_endproc
 756              	.LFE6227:
 758              		.section	.text._ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_opera
 759              		.align	1
 760              		.p2align 2,,3
 761              		.weak	_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation
 762              		.syntax unified
 763              		.thumb
 764              		.thumb_func
 765              		.fpu fpv5-d16
 767              	_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation:
 768              	.LVL41:
 769              	.LFB5740:
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 		 _Manager_operation __op)
 770              		.loc 15 268 7 is_stmt 1 view -0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              		@ link register save eliminated.
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  {
 775              		.loc 15 271 2 is_stmt 0 view .LVU145
 776 0000 2AB1     		cbz	r2, .L30
 777 0002 012A     		cmp	r2, #1
 778 0004 07D0     		beq	.L31
 779              	.LVL42:
 780              	.LBB4750:
 781              	.LBI4750:
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 		   _Manager_operation __op)
 782              		.loc 15 181 2 is_stmt 1 view .LVU146
 783              	.LBB4751:
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    {
 784              		.loc 15 184 4 is_stmt 0 view .LVU147
 785 0006 022A     		cmp	r2, #2
 786 0008 08D0     		beq	.L35
 787              	.L33:
 788              	.LVL43:
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    {
 789              		.loc 15 184 4 view .LVU148
 790              	.LBE4751:
 791              	.LBE4750:
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 792              		.loc 15 286 7 view .LVU149
 793 000a 0020     		movs	r0, #0
 794              	.LVL44:
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 795              		.loc 15 286 7 view .LVU150
 796 000c 7047     		bx	lr
 797              	.LVL45:
 798              	.L30:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 68


 799              		.loc 15 87 37 is_stmt 1 view .LVU151
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    break;
 800              		.loc 15 275 43 is_stmt 0 view .LVU152
 801 000e 054B     		ldr	r3, .L36
 802 0010 0360     		str	r3, [r0]
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 803              		.loc 15 286 7 view .LVU153
 804 0012 0020     		movs	r0, #0
 805              	.LVL46:
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 806              		.loc 15 286 7 view .LVU154
 807 0014 7047     		bx	lr
 808              	.LVL47:
 809              	.L31:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 810              		.loc 15 87 37 is_stmt 1 view .LVU155
 811              	.LBB4760:
 812              	.LBI4760:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 813              		.loc 15 136 2 view .LVU156
 814              	.LBB4761:
 815              	.LBB4762:
 816              	.LBI4762:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       { return *static_cast<const _Tp*>(_M_access()); }
 817              		.loc 15 97 7 view .LVU157
 818              	.LBB4763:
 819              	.LBI4763:
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 820              		.loc 15 88 17 view .LVU158
 821              	.LBB4764:
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 822              		.loc 15 88 37 view .LVU159
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 823              		.loc 15 88 37 is_stmt 0 view .LVU160
 824              	.LBE4764:
 825              	.LBE4763:
 826              	.LBE4762:
 827              	.LBE4761:
 828              	.LBE4760:
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    break;
 829              		.loc 15 279 36 view .LVU161
 830 0016 0160     		str	r1, [r0]
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 831              		.loc 15 286 7 view .LVU162
 832 0018 0020     		movs	r0, #0
 833              	.LVL48:
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 834              		.loc 15 286 7 view .LVU163
 835 001a 7047     		bx	lr
 836              	.LVL49:
 837              	.L35:
 838              	.LBB4765:
 839              	.LBB4757:
 840              	.LBB4752:
 841              	.LBI4752:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 842              		.loc 15 150 2 is_stmt 1 view .LVU164
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 69


 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 843              		.loc 15 150 2 is_stmt 0 view .LVU165
 844              	.LBE4752:
 845              	.LBE4757:
 846              	.LBE4765:
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 847              		.loc 15 88 37 is_stmt 1 view .LVU166
 848              	.LBB4766:
 849              	.LBB4758:
 850              	.LBB4755:
 851              	.LBB4753:
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 852              		.loc 15 152 4 is_stmt 0 view .LVU167
 853 001c 0B68     		ldr	r3, [r1]
 854              	.LVL50:
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 855              		.loc 15 152 4 view .LVU168
 856              	.LBE4753:
 857              	.LBE4755:
 858              	.LBE4758:
 859              	.LBE4766:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 860              		.loc 15 87 37 is_stmt 1 view .LVU169
 861              		.file 23 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\new"
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // The -*- C++ -*- dynamic memory management header.
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // Copyright (C) 1994-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // This file is part of GCC.
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** //
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // GCC is free software; you can redistribute it and/or modify
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // it under the terms of the GNU General Public License as published by
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // the Free Software Foundation; either version 3, or (at your option)
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // any later version.
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // 
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // GCC is distributed in the hope that it will be useful,
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // GNU General Public License for more details.
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // 
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // Under Section 7 of GPL version 3, you are granted additional
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // permissions described in the GCC Runtime Library Exception, version
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // 3.1, as published by the Free Software Foundation.
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // You should have received a copy of the GNU General Public License and
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // a copy of the GCC Runtime Library Exception along with this program;
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // <http://www.gnu.org/licenses/>.
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** /** @file new
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  This is a Standard C++ Library header.
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  The header @c new defines several functions to manage dynamic memory and
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  handling memory allocation errors; see
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/dynamic_memory.html
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  for more.
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 70


  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #ifndef _NEW
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #define _NEW
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC system_header
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #include <bits/c++config.h>
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #include <exception>
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC visibility push(default)
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** extern "C++" {
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** namespace std 
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** {
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /**
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  @brief  Exception possibly thrown by @c new.
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  @ingroup exceptions
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  errors from the throwing forms of @c new.  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   class bad_alloc : public exception 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   {
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   public:
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc() throw() { }
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc(const bad_alloc&) = default;
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc& operator=(const bad_alloc&) = default;
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_alloc() throw();
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   };
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   class bad_array_new_length : public bad_alloc
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   {
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   public:
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_array_new_length() throw() { }
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_array_new_length() throw();
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   };
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   enum class align_val_t: size_t {};
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 71


  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   struct nothrow_t
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   {
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     explicit nothrow_t() = default;
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   };
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   extern const nothrow_t nothrow;
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /** If you write your own error handler to be called by @c new, it must
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  be of this type.  */
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   typedef void (*new_handler)();
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /// Takes a replacement handler as the argument, returns the
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /// previous handler.
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   new_handler set_new_handler(new_handler) throw();
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /// Return the current new handler.
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   new_handler get_new_handler() noexcept;
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** } // namespace std
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** //@{
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** /** These are replaceable signatures:
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal array new and delete (same)
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *    @c NULL on error)
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow array new and delete (same)
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  Placement new and delete signatures (take a memory address argument,
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  does nothing) may not be replaced by a user's program.
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** */
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*) _GLIBCXX_USE_NOEXCEPT
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 72


 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t)
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t, const std::nothrow_t&)
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t)
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t, const std::nothrow_t&)
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t)
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t, const std::nothrow_t&)
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t)
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t, const std::nothrow_t&)
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t, std::align_val_t)
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t, std::align_val_t)
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_sized_deallocation
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_aligned_new
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // Default placement versions of operator new.
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** { return __p; }
 862              		.loc 23 175 3 view .LVU170
 863              	.LBB4767:
 864              	.LBB4759:
 865              	.LBB4756:
 866              	.LBB4754:
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 867              		.loc 15 152 4 is_stmt 0 view .LVU171
 868 001e 0360     		str	r3, [r0]
 869              	.LVL51:
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 870              		.loc 15 152 4 view .LVU172
 871              	.LBE4754:
 872              	.LBE4756:
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 873              		.loc 15 197 8 view .LVU173
 874 0020 F3E7     		b	.L33
 875              	.L37:
 876 0022 00BF     		.align	2
 877              	.L36:
 878 0024 00000000 		.word	_ZTIPFvvE
 879              	.LBE4759:
 880              	.LBE4767:
 881              		.cfi_endproc
 882              	.LFE5740:
 884              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.isra.0,"ax",%progbits
 885              		.align	1
 886              		.p2align 2,,3
 887              		.syntax unified
 888              		.thumb
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 73


 889              		.thumb_func
 890              		.fpu fpv5-d16
 892              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.isra.0:
 893              	.LVL52:
 894              	.LFB6206:
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as multiple characters.
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters.
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to use.
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__n, __c); }
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move construct string.
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str) noexcept
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _S_local_capacity + 1);
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_length(__str.length());
 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(__str._M_local_data());
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_set_length(0);
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from an initializer %list.
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 74


 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _S_local_capacity + 1);
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_set_length(0);
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || __str.get_allocator() == __a)
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_set_length(0);
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
 612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a range.
 615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __beg  Start of range.
 616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __end  End of range.
 617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InputIterator,
 621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InputIterator>
 624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
 627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ _M_construct(__beg, __end); }
 629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t   Source object convertible to string view.
 634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a   Allocator to use.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 75


 637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a string_view.
 645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t  Source object convertible to string view.
 646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit
 650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
 653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Destroy the string instance.
 656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ~basic_string()
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const basic_string& __str)
 666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->assign(__str);
 668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source null-terminated string.
 673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const _CharT* __s)
 676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string of length 1.
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Source character.
 681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Assigning to a character makes this string length 1 and
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (*this)[0] == @a c.
 684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(_CharT __c)
 687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(1, __c);
 689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 76


 694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a str is a valid, but unspecified string.
 699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
 700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(basic_string&& __str)
 895              		.loc 18 703 7 is_stmt 1 view -0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 0, uses_anonymous_args = 0
 899              	.LBB4874:
 900              	.LBI4874:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 901              		.loc 18 221 7 view .LVU175
 902              	.LBB4875:
 903              	.LBI4875:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 904              		.loc 18 186 7 view .LVU176
 905              	.LBE4875:
 906              	.LBE4874:
 907              		.loc 18 703 7 is_stmt 0 view .LVU177
 908 0000 38B5     		push	{r3, r4, r5, lr}
 909              		.cfi_def_cfa_offset 16
 910              		.cfi_offset 3, -16
 911              		.cfi_offset 4, -12
 912              		.cfi_offset 5, -8
 913              		.cfi_offset 14, -4
 914              	.LBB4881:
 915              	.LBB4882:
 916              	.LBB4883:
 917              	.LBB4884:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 918              		.loc 18 187 28 view .LVU178
 919 0002 0B46     		mov	r3, r1
 920              	.LBE4884:
 921              	.LBE4883:
 922              	.LBE4882:
 923              	.LBE4881:
 924              		.loc 18 703 7 view .LVU179
 925 0004 0C46     		mov	r4, r1
 926 0006 0546     		mov	r5, r0
 927              	.LBB4938:
 928              	.LBB4877:
 929              	.LBB4876:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 930              		.loc 18 187 28 view .LVU180
 931 0008 0068     		ldr	r0, [r0]
 932              	.LVL53:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 933              		.loc 18 187 28 view .LVU181
 934              	.LBE4876:
 935              	.LBE4877:
 936              	.LBB4878:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 77


 937              	.LBI4878:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 938              		.loc 18 200 7 is_stmt 1 view .LVU182
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 939              		.loc 18 200 7 is_stmt 0 view .LVU183
 940              	.LBE4878:
 941              	.LBE4938:
 942              	.LBB4939:
 943              	.LBB4888:
 944              	.LBI4882:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 945              		.loc 18 221 7 is_stmt 1 view .LVU184
 946              	.LBB4886:
 947              	.LBI4883:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 948              		.loc 18 186 7 view .LVU185
 949              	.LBB4885:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 950              		.loc 18 187 28 is_stmt 0 view .LVU186
 951 000a 53F8081B 		ldr	r1, [r3], #8
 952              	.LVL54:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 953              		.loc 18 187 28 view .LVU187
 954              	.LBE4885:
 955              	.LBE4886:
 956              	.LBB4887:
 957              	.LBI4887:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 958              		.loc 18 200 7 is_stmt 1 view .LVU188
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 959              		.loc 18 200 7 is_stmt 0 view .LVU189
 960              	.LBE4887:
 961              	.LBE4888:
 704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(_M_local_data());
 713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_set_length(0);
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Replace allocator if POCMA is true.
 716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 962              		.loc 18 718 2 view .LVU190
 963 000e 9942     		cmp	r1, r3
 964 0010 18D0     		beq	.L52
 965              	.LVL55:
 966              		.loc 18 718 2 view .LVU191
 967              	.LBE4939:
 968              	.LBB4940:
 969              	.LBB4880:
 970              	.LBB4879:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 78


 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 971              		.loc 18 203 57 view .LVU192
 972 0012 05F10802 		add	r2, r5, #8
 973              	.LBE4879:
 974              	.LBE4880:
 975              	.LBE4940:
 976              	.LBB4941:
 977              	.LBB4889:
 719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // We've always got room for a short string, just copy it.
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__str.size())
 722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_set_length(__str.size());
 724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (_Alloc_traits::_S_propagate_on_move_assign()
 726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || _Alloc_traits::_S_always_equal()
 727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || _M_get_allocator() == __str._M_get_allocator())
 728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // Just move the allocated pointer, our allocator can free it.
 730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    pointer __data = nullptr;
 731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    size_type __capacity;
 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (!_M_is_local())
 978              		.loc 18 732 6 view .LVU193
 979 0016 9042     		cmp	r0, r2
 980 0018 0DD0     		beq	.L53
 981              	.LVL56:
 982              	.LBB4890:
 983              	.LBB4891:
 733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
 736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    // __str can reuse our existing storage.
 737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    __data = _M_data();
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    __capacity = _M_allocated_capacity;
 739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
 740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		else // __str can't use it, so free it.
 741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
 743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__data)
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		__str._M_data(__data);
 750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		__str._M_capacity(__capacity);
 751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
 752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    else
 753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else // Need to do a deep copy
 756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  assign(__str);
 757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str.clear();
 758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 79


 762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list.
 764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(initializer_list<_CharT> __l)
 767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(__l.begin(), __l.size());
 769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
 772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svt  An object convertible to string_view.
 777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****      template<typename _Tp>
 779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        _If_sv<_Tp, basic_string&>
 780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        operator=(const _Tp& __svt)
 781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        { return this->assign(__svt); }
 782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Convert to a string_view.
 785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return A string_view.
 786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator __sv_type() const noexcept
 788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(data(), size()); }
 789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Iterators:
 792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string.
 795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data()); }
 799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data()); }
 807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points one past the last
 810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
 813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data() + this->size()); }
 815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 80


 819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  order.
 828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
 830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->end()); }
 832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
 837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
 841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element order.
 846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
 848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->begin()); }
 850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
 854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
 855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cbegin() const noexcept
 867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data()); }
 868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
 872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cend() const noexcept
 875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 81


 876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
 881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crbegin() const noexcept
 884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
 885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
 889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
 890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crend() const noexcept
 893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
 897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Capacity:
 898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
 899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
 900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
 905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
 906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 984              		.loc 18 908 16 view .LVU194
 985 001a 6268     		ldr	r2, [r4, #4]
 986              	.LBE4891:
 987              	.LBE4890:
 988              	.LBB4893:
 989              	.LBB4894:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 990              		.loc 18 179 26 view .LVU195
 991 001c 2960     		str	r1, [r5]
 992              	.LBE4894:
 993              	.LBE4893:
 994              	.LBB4895:
 995              	.LBB4896:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 996              		.loc 18 183 26 view .LVU196
 997 001e 6A60     		str	r2, [r5, #4]
 998              	.LBE4896:
 999              	.LBE4895:
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__data)
 1000              		.loc 18 746 17 view .LVU197
 1001 0020 A168     		ldr	r1, [r4, #8]
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
 1002              		.loc 18 738 18 view .LVU198
 1003 0022 AA68     		ldr	r2, [r5, #8]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 82


 1004              	.LVL57:
 1005              	.LBB4898:
 1006              	.LBI4893:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 1007              		.loc 18 178 7 is_stmt 1 view .LVU199
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 1008              		.loc 18 178 7 is_stmt 0 view .LVU200
 1009              	.LBE4898:
 1010              	.LBB4899:
 1011              	.LBI4890:
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 1012              		.loc 18 907 7 is_stmt 1 view .LVU201
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 1013              		.loc 18 907 7 is_stmt 0 view .LVU202
 1014              	.LBE4899:
 1015              	.LBB4900:
 1016              	.LBI4895:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 1017              		.loc 18 182 7 is_stmt 1 view .LVU203
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 1018              		.loc 18 182 7 is_stmt 0 view .LVU204
 1019              	.LBE4900:
 1020              	.LBB4901:
 1021              	.LBI4901:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1022              		.loc 18 210 7 is_stmt 1 view .LVU205
 1023              	.LBB4902:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1024              		.loc 18 211 31 is_stmt 0 view .LVU206
 1025 0024 A960     		str	r1, [r5, #8]
 1026              	.LVL58:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1027              		.loc 18 211 31 view .LVU207
 1028              	.LBE4902:
 1029              	.LBE4901:
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 1030              		.loc 18 747 6 view .LVU208
 1031 0026 58B1     		cbz	r0, .L44
 1032              	.LVL59:
 1033              	.LBB4904:
 1034              	.LBI4904:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 1035              		.loc 18 178 7 is_stmt 1 view .LVU209
 1036              	.LBB4905:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1037              		.loc 18 179 26 is_stmt 0 view .LVU210
 1038 0028 2060     		str	r0, [r4]
 1039              	.LVL60:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1040              		.loc 18 179 26 view .LVU211
 1041              	.LBE4905:
 1042              	.LBE4904:
 1043              	.LBB4906:
 1044              	.LBI4906:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1045              		.loc 18 210 7 is_stmt 1 view .LVU212
 1046              	.LBB4907:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 83


 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1047              		.loc 18 211 31 is_stmt 0 view .LVU213
 1048 002a A260     		str	r2, [r4, #8]
 1049              	.LVL61:
 1050              	.L42:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1051              		.loc 18 211 31 view .LVU214
 1052              	.LBE4907:
 1053              	.LBE4906:
 1054              	.LBE4889:
 1055              	.LBE4941:
 1056              	.LBB4942:
 1057              	.LBI4942:
 909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the size() of the largest possible %string.
 911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to fill any new elements.
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will %resize the %string to the specified
 921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number of characters.  If the number is smaller than the
 922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n, _CharT __c);
 927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will resize the %string to the specified length.  If
 933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  setting them to 0.
 937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n)
 940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { this->resize(__n, _CharT()); }
 941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       shrink_to_fit() noexcept
 946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_exceptions
 948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (capacity() > size())
 949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    try
 951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { reserve(0); }
 952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    catch(...)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 84


 953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { }
 954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns the total number of characters that the %string can hold
 961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  before needing to allocate more memory.
 962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	                     : _M_allocated_capacity;
 968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          characters.
 973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __res_arg  Number of characters required.
 974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function attempts to reserve enough memory for the
 977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string to hold the specified number of characters.  If the
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number requested is more than max_size(), length_error is
 979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
 980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The advantage of this function is that if optimal code is a
 982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  necessity and the user can determine the string length that will be
 983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  data.
 986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reserve(size_type __res_arg = 0);
 989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Erases the string, making it empty.
 992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
 1058              		.loc 18 994 7 is_stmt 1 view .LVU215
 1059              	.LBB4943:
 1060              	.LBI4943:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1061              		.loc 18 214 7 view .LVU216
 1062              	.LBB4944:
 1063              	.LBI4944:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 1064              		.loc 18 182 7 view .LVU217
 1065              	.LBB4945:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1066              		.loc 18 183 26 is_stmt 0 view .LVU218
 1067 002c 0023     		movs	r3, #0
 1068              	.LBE4945:
 1069              	.LBE4944:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 85


 1070              	.LBB4947:
 1071              	.LBB4948:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1072              		.loc 18 187 28 view .LVU219
 1073 002e 2268     		ldr	r2, [r4]
 1074              	.LBE4948:
 1075              	.LBE4947:
 1076              	.LBB4949:
 1077              	.LBB4946:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1078              		.loc 18 183 26 view .LVU220
 1079 0030 6360     		str	r3, [r4, #4]
 1080              	.LVL62:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1081              		.loc 18 183 26 view .LVU221
 1082              	.LBE4946:
 1083              	.LBE4949:
 1084              	.LBB4950:
 1085              	.LBI4947:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1086              		.loc 18 186 7 is_stmt 1 view .LVU222
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1087              		.loc 18 186 7 is_stmt 0 view .LVU223
 1088              	.LBE4950:
 1089              	.LBB4951:
 1090              	.LBI4951:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 1091              		.loc 21 321 7 is_stmt 1 view .LVU224
 1092              	.LBB4952:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1093              		.loc 21 322 9 view .LVU225
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1094              		.loc 21 322 14 is_stmt 0 view .LVU226
 1095 0032 1370     		strb	r3, [r2]
 1096              	.LVL63:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1097              		.loc 21 322 14 view .LVU227
 1098              	.LBE4952:
 1099              	.LBE4951:
 1100              	.LBE4943:
 1101              	.LBE4942:
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1102              		.loc 18 759 7 view .LVU228
 1103 0034 38BD     		pop	{r3, r4, r5, pc}
 1104              	.LVL64:
 1105              	.L53:
 1106              	.LBB4953:
 1107              	.LBB4914:
 1108              	.LBB4908:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 1109              		.loc 18 178 7 is_stmt 1 view .LVU229
 1110              	.LBE4908:
 1111              	.LBB4909:
 1112              	.LBB4892:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1113              		.loc 18 908 16 is_stmt 0 view .LVU230
 1114 0036 6268     		ldr	r2, [r4, #4]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 86


 1115              	.LBE4892:
 1116              	.LBE4909:
 1117              	.LBB4910:
 1118              	.LBB4897:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1119              		.loc 18 183 26 view .LVU231
 1120 0038 C5E90012 		strd	r1, r2, [r5]
 1121              	.LBE4897:
 1122              	.LBE4910:
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__data)
 1123              		.loc 18 746 17 view .LVU232
 1124 003c A268     		ldr	r2, [r4, #8]
 1125              	.LVL65:
 1126              	.LBB4911:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1127              		.loc 18 210 7 is_stmt 1 view .LVU233
 1128              	.LBB4903:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1129              		.loc 18 211 31 is_stmt 0 view .LVU234
 1130 003e AA60     		str	r2, [r5, #8]
 1131              	.LVL66:
 1132              	.L44:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1133              		.loc 18 211 31 view .LVU235
 1134              	.LBE4903:
 1135              	.LBE4911:
 1136              	.LBB4912:
 1137              	.LBI4912:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 1138              		.loc 18 178 7 is_stmt 1 view .LVU236
 1139              	.LBB4913:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1140              		.loc 18 179 26 is_stmt 0 view .LVU237
 1141 0040 2360     		str	r3, [r4]
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1142              		.loc 18 179 33 view .LVU238
 1143 0042 F3E7     		b	.L42
 1144              	.LVL67:
 1145              	.L52:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1146              		.loc 18 179 33 view .LVU239
 1147              	.LBE4913:
 1148              	.LBE4912:
 1149              	.LBE4914:
 1150              	.LBB4915:
 1151              	.LBI4915:
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 1152              		.loc 18 901 7 is_stmt 1 view .LVU240
 1153              	.LBB4916:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1154              		.loc 18 902 16 is_stmt 0 view .LVU241
 1155 0044 6268     		ldr	r2, [r4, #4]
 1156              	.LVL68:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1157              		.loc 18 902 16 view .LVU242
 1158              	.LBE4916:
 1159              	.LBE4915:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 87


 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 1160              		.loc 18 721 6 view .LVU243
 1161 0046 2AB1     		cbz	r2, .L40
 1162              	.LVL69:
 1163              	.LBB4917:
 1164              	.LBI4917:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1165              		.loc 18 346 7 is_stmt 1 view .LVU244
 1166              	.LBB4918:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 1167              		.loc 18 348 2 is_stmt 0 view .LVU245
 1168 0048 012A     		cmp	r2, #1
 1169 004a 07D0     		beq	.L54
 1170              	.LVL70:
 1171              	.LBB4919:
 1172              	.LBI4919:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1173              		.loc 18 346 7 is_stmt 1 view .LVU246
 1174              	.LBB4920:
 1175              	.LBB4921:
 1176              	.LBI4921:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 1177              		.loc 21 387 7 view .LVU247
 1178              	.LBB4922:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 1179              		.loc 21 389 2 view .LVU248
 1180              		.loc 21 395 2 view .LVU249
 1181              		.loc 21 395 49 is_stmt 0 view .LVU250
 1182 004c FFF7FEFF 		bl	memcpy
 1183              	.LVL71:
 1184              		.loc 21 395 49 view .LVU251
 1185 0050 2868     		ldr	r0, [r5]
 1186 0052 6268     		ldr	r2, [r4, #4]
 1187              	.LVL72:
 1188              	.L40:
 1189              		.loc 21 395 49 view .LVU252
 1190              	.LBE4922:
 1191              	.LBE4921:
 1192              	.LBE4920:
 1193              	.LBE4919:
 1194              	.LBE4918:
 1195              	.LBE4917:
 1196              	.LBB4926:
 1197              	.LBI4926:
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 1198              		.loc 18 901 7 is_stmt 1 view .LVU253
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 1199              		.loc 18 901 7 is_stmt 0 view .LVU254
 1200              	.LBE4926:
 1201              	.LBB4927:
 1202              	.LBI4927:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1203              		.loc 18 214 7 is_stmt 1 view .LVU255
 1204              	.LBB4928:
 1205              	.LBB4929:
 1206              	.LBI4929:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 88


 1207              		.loc 18 182 7 view .LVU256
 1208              	.LBE4929:
 1209              	.LBB4931:
 1210              	.LBB4932:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1211              		.loc 21 322 14 is_stmt 0 view .LVU257
 1212 0054 0023     		movs	r3, #0
 1213              	.LBE4932:
 1214              	.LBE4931:
 1215              	.LBB4934:
 1216              	.LBB4930:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1217              		.loc 18 183 26 view .LVU258
 1218 0056 6A60     		str	r2, [r5, #4]
 1219              	.LVL73:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1220              		.loc 18 183 26 view .LVU259
 1221              	.LBE4930:
 1222              	.LBE4934:
 1223              	.LBB4935:
 1224              	.LBI4935:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1225              		.loc 18 186 7 is_stmt 1 view .LVU260
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1226              		.loc 18 186 7 is_stmt 0 view .LVU261
 1227              	.LBE4935:
 1228              	.LBB4936:
 1229              	.LBI4931:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 1230              		.loc 21 321 7 is_stmt 1 view .LVU262
 1231              	.LBB4933:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1232              		.loc 21 322 9 view .LVU263
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1233              		.loc 21 322 14 is_stmt 0 view .LVU264
 1234 0058 8354     		strb	r3, [r0, r2]
 1235              	.LVL74:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1236              		.loc 21 322 14 view .LVU265
 1237              	.LBE4933:
 1238              	.LBE4936:
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1239              		.loc 18 218 7 view .LVU266
 1240 005a E7E7     		b	.L42
 1241              	.LVL75:
 1242              	.L54:
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1243              		.loc 18 218 7 view .LVU267
 1244              	.LBE4928:
 1245              	.LBE4927:
 1246              	.LBB4937:
 1247              	.LBB4925:
 1248              	.LBB4923:
 1249              	.LBI4923:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 1250              		.loc 21 321 7 is_stmt 1 view .LVU268
 1251              	.LBB4924:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 89


 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1252              		.loc 21 322 9 view .LVU269
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1253              		.loc 21 322 16 is_stmt 0 view .LVU270
 1254 005c 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 1255              	.LVL76:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1256              		.loc 21 322 14 view .LVU271
 1257 005e 0370     		strb	r3, [r0]
 1258 0060 2868     		ldr	r0, [r5]
 1259              	.LVL77:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1260              		.loc 21 322 14 view .LVU272
 1261 0062 6268     		ldr	r2, [r4, #4]
 1262              	.LVL78:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1263              		.loc 21 322 22 view .LVU273
 1264 0064 F6E7     		b	.L40
 1265              	.LBE4924:
 1266              	.LBE4923:
 1267              	.LBE4925:
 1268              	.LBE4937:
 1269              	.LBE4953:
 1270              		.cfi_endproc
 1271              	.LFE6206:
 1273 0066 00BF     		.section	.text._ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev,"axG",%p
 1274              		.align	1
 1275              		.p2align 2,,3
 1276              		.weak	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev
 1277              		.syntax unified
 1278              		.thumb
 1279              		.thumb_func
 1280              		.fpu fpv5-d16
 1282              	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev:
 1283              	.LVL79:
 1284              	.LFB6184:
 1285              		.file 24 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\array"
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // <array> -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // You should have received a copy of the GNU General Public License and
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 90


  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** /** @file include/array
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****  *  This is a Standard C++ Library header.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****  */
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #ifndef _GLIBCXX_ARRAY
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #define _GLIBCXX_ARRAY 1
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #pragma GCC system_header
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #if __cplusplus < 201103L
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** # include <bits/c++0x_warning.h>
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #else
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #include <utility>
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #include <bits/functexcept.h>
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #include <bits/stl_algobase.h>
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #include <bits/range_access.h>
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** namespace std _GLIBCXX_VISIBILITY(default)
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** {
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****   template<typename _Tp, std::size_t _Nm>
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     struct __array_traits
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef _Tp _Type[_Nm];
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef __is_swappable<_Tp> _Is_swappable;
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef __is_nothrow_swappable<_Tp> _Is_nothrow_swappable;
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       static constexpr _Tp&
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _S_ref(const _Type& __t, std::size_t __n) noexcept
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       static constexpr _Tp*
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _S_ptr(const _Type& __t) noexcept
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp*>(__t); }
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     };
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****  template<typename _Tp>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    struct __array_traits<_Tp, 0>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    {
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      struct _Type { };
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      typedef true_type _Is_swappable;
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      typedef true_type _Is_nothrow_swappable;
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      static constexpr _Tp&
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      _S_ref(const _Type&, std::size_t) noexcept
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      { return *static_cast<_Tp*>(nullptr); }
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      static constexpr _Tp*
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      _S_ptr(const _Type&) noexcept
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      { return nullptr; }
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    };
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 91


  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****   /**
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  @brief A standard container for storing a fixed size sequence of elements.
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  @ingroup sequences
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  <a href="tables.html#66">reversible container</a>, and a
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  <a href="tables.html#67">sequence</a>.
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  Sets support random access iterators.
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  @tparam  Tp  Type of element. Required to be a complete type.
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  @tparam  Nm  Number of elements.
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****   */
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****   template<typename _Tp, std::size_t _Nm>
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     struct array
 1286              		.loc 24 94 12 is_stmt 1 view -0
 1287              		.cfi_startproc
 1288              		@ args = 0, pretend = 0, frame = 0
 1289              		@ frame_needed = 0, uses_anonymous_args = 0
 1290              		.loc 24 94 12 is_stmt 0 view .LVU275
 1291 0000 70B5     		push	{r4, r5, r6, lr}
 1292              		.cfi_def_cfa_offset 16
 1293              		.cfi_offset 4, -16
 1294              		.cfi_offset 5, -12
 1295              		.cfi_offset 6, -8
 1296              		.cfi_offset 14, -4
 1297              		.loc 24 94 12 view .LVU276
 1298 0002 0646     		mov	r6, r0
 1299              	.LBB4973:
 1300 0004 00F5B465 		add	r5, r0, #1440
 1301 0008 00F5B264 		add	r4, r0, #1424
 1302              	.LVL80:
 1303              	.L57:
 1304              	.LBB4974:
 1305              	.LBB4975:
 1306              	.LBB4976:
 1307              	.LBB4977:
 1308              	.LBB4978:
 1309              	.LBB4979:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1310              		.loc 18 187 28 discriminator 5 view .LVU277
 1311 000c 54F8080C 		ldr	r0, [r4, #-8]
 1312              	.LBE4979:
 1313              	.LBE4978:
 1314              	.LBE4977:
 1315              	.LBE4976:
 1316              	.LBE4975:
 1317              	.LBE4974:
 1318              		.loc 24 94 12 discriminator 5 view .LVU278
 1319 0010 183D     		subs	r5, r5, #24
 1320              	.LVL81:
 1321              	.LBB4998:
 1322              	.LBI4974:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 1323              		.loc 18 657 7 is_stmt 1 discriminator 5 view .LVU279
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 92


 1324              	.LBB4993:
 1325              	.LBI4975:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1326              		.loc 18 229 7 discriminator 5 view .LVU280
 1327              	.LBB4991:
 1328              	.LBB4981:
 1329              	.LBI4977:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 1330              		.loc 18 221 7 discriminator 5 view .LVU281
 1331              	.LBB4980:
 1332              	.LBI4978:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1333              		.loc 18 186 7 discriminator 5 view .LVU282
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1334              		.loc 18 186 7 is_stmt 0 discriminator 5 view .LVU283
 1335              	.LBE4980:
 1336              	.LBE4981:
 1337              	.LBB4982:
 1338              	.LBI4982:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1339              		.loc 18 236 7 is_stmt 1 discriminator 5 view .LVU284
 1340              	.LBB4983:
 1341              	.LBB4984:
 1342              	.LBI4984:
 1343              		.file 25 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\all
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** /** @file bits/alloc_traits.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 93


  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/stl_construct.h>
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/memoryfwd.h>
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/allocator.h>
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/ptr_traits.h>
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <ext/numeric_traits.h>
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** {
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   struct __allocator_traits_base
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   {
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up>
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind<_Tp, _Up,
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   protected:
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   };
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Up>
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using __alloc_rebind
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @ingroup allocators
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   */
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef _Alloc allocator_type;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 94


  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's pointer type.
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = _Func<_Alloc>;
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT>
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT>
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const pointer type.
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's void pointer type.
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 95


 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's difference type
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's size type
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 96


 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr pointer
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n); }
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct __construct_helper
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename _Alloc2,
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static true_type __test(int);
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename>
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static false_type __test(...);
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using __has_construct
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp, _Args...>>
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Tp, _Args...>::value)
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 97


 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR auto
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.destroy(__p); }
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR void
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_destructible<_Tp>::value)
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ std::_Destroy(__p); }
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.max_size())
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.max_size(); }
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr size_type
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    / sizeof(value_type);
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr _Alloc2
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a; }
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 98


 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  arguments @a __args...
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR auto
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(_Alloc& __a, _Tp* __p)
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 99


 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const _Alloc& __a) noexcept
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_max_size(__a, 0); }
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR _Alloc
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_select(__rhs, 0); }
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus > 201703L
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # define __cpp_lib_constexpr_dynamic_alloc 201907L
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /// Partial specialization for std::allocator.
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using value_type = _Tp;
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's pointer type.
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = _Tp*;
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const pointer type.
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = const _Tp*;
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's void pointer type.
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = void*;
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const void pointer type.
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = const void*;
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's difference type
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's size type
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = std::size_t;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 100


 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on move assignment
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on swap
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap = false_type;
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal = true_type;
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n, __hint);
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n);
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 101


 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 1344              		.loc 25 491 7 discriminator 5 view .LVU285
 1345              	.LBB4985:
 1346              	.LBI4985:
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       pointer
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       const_pointer
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // about what the return value is when __n == 0.
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX_NODISCARD _Tp*
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (__n > this->_M_max_size())
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // __p is not permitted to be a null pointer.
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       void
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       deallocate(_Tp* __p, size_type __t)
 1347              		.loc 20 120 7 discriminator 5 view .LVU286
 1348              	.LBE4985:
 1349              	.LBE4984:
 1350              	.LBE4983:
 1351              	.LBE4982:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1352              		.loc 18 231 2 is_stmt 0 discriminator 5 view .LVU287
 1353 0012 A042     		cmp	r0, r4
 1354              	.LBE4991:
 1355              	.LBE4993:
 1356              	.LBE4998:
 1357              		.loc 24 94 12 discriminator 5 view .LVU288
 1358 0014 A4F11804 		sub	r4, r4, #24
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 102


 1359              	.LBB4999:
 1360              	.LBB4994:
 1361              	.LBB4992:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1362              		.loc 18 231 2 discriminator 5 view .LVU289
 1363 0018 03D0     		beq	.L56
 1364              	.LBB4990:
 1365              	.LBB4989:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1366              		.loc 18 237 34 view .LVU290
 1367 001a A968     		ldr	r1, [r5, #8]
 1368              	.LBB4988:
 1369              	.LBB4987:
 1370              	.LBB4986:
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    ::operator delete(__p,
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # if __cpp_sized_deallocation
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      __t * sizeof(_Tp),
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # endif
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      std::align_val_t(alignof(_Tp)));
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return;
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	::operator delete(__p
 1371              		.loc 20 133 19 view .LVU291
 1372 001c 0131     		adds	r1, r1, #1
 1373              	.LVL82:
 1374              		.loc 20 133 19 view .LVU292
 1375 001e FFF7FEFF 		bl	_ZdlPvj
 1376              	.LVL83:
 1377              	.L56:
 1378              		.loc 20 133 19 view .LVU293
 1379              	.LBE4986:
 1380              	.LBE4987:
 1381              	.LBE4988:
 1382              	.LBE4989:
 1383              	.LBE4990:
 1384              	.LBE4992:
 1385              	.LBE4994:
 1386              	.LBB4995:
 1387              	.LBI4995:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1388              		.loc 18 150 14 is_stmt 1 view .LVU294
 1389              	.LBB4996:
 1390              	.LBI4996:
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // Avoid implicit deprecation.
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator& operator=(const allocator&) = default;
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	_GLIBCXX20_CONSTEXPR
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 103


 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cpp_constexpr_dynamic_alloc
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       constexpr
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 1391              		.loc 19 162 7 view .LVU295
 1392              	.LBB4997:
 1393              	.LBI4997:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1394              		.loc 20 89 7 view .LVU296
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1395              		.loc 20 89 7 is_stmt 0 view .LVU297
 1396              	.LBE4997:
 1397              	.LBE4996:
 1398              	.LBE4995:
 1399              	.LBE4999:
 1400              		.loc 24 94 12 view .LVU298
 1401 0022 AE42     		cmp	r6, r5
 1402 0024 F2D1     		bne	.L57
 1403              	.LBE4973:
 1404              		.loc 24 94 12 discriminator 7 view .LVU299
 1405 0026 3046     		mov	r0, r6
 1406 0028 70BD     		pop	{r4, r5, r6, pc}
 1407              		.loc 24 94 12 discriminator 7 view .LVU300
 1408              		.cfi_endproc
 1409              	.LFE6184:
 1411              		.weak	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED1Ev
 1412              		.thumb_set _ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED1Ev,_ZNSt5arrayI
 1413 002a 00BF     		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 1414              		.align	1
 1415              		.p2align 2,,3
 1416              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Updat
 1417              		.syntax unified
 1418              		.thumb
 1419              		.thumb_func
 1420              		.fpu fpv5-d16
 1422              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6UpdateEv:
 1423              	.LVL84:
 1424              	.LFB5544:
  34:../../libdaisy/src/hid/disp/oled_display.h **** 
  35:../../libdaisy/src/hid/disp/oled_display.h ****     /**
  36:../../libdaisy/src/hid/disp/oled_display.h ****     Sets the pixel at the specified coordinate to be on/off.
  37:../../libdaisy/src/hid/disp/oled_display.h ****     \param x   x Coordinate
  38:../../libdaisy/src/hid/disp/oled_display.h ****     \param y   y coordinate
  39:../../libdaisy/src/hid/disp/oled_display.h ****     \param on  on or off
  40:../../libdaisy/src/hid/disp/oled_display.h ****     */
  41:../../libdaisy/src/hid/disp/oled_display.h ****     void DrawPixel(uint_fast8_t x, uint_fast8_t y, bool on) override
  42:../../libdaisy/src/hid/disp/oled_display.h ****     {
  43:../../libdaisy/src/hid/disp/oled_display.h ****         driver_.DrawPixel(x, y, on);
  44:../../libdaisy/src/hid/disp/oled_display.h ****     }
  45:../../libdaisy/src/hid/disp/oled_display.h **** 
  46:../../libdaisy/src/hid/disp/oled_display.h ****     /** 
  47:../../libdaisy/src/hid/disp/oled_display.h ****     Writes the current display buffer to the OLED device using SPI or I2C depending on 
  48:../../libdaisy/src/hid/disp/oled_display.h ****     how the object was initialized.
  49:../../libdaisy/src/hid/disp/oled_display.h ****     */
  50:../../libdaisy/src/hid/disp/oled_display.h ****     void Update() override { driver_.Update(); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 104


 1425              		.loc 4 50 10 is_stmt 1 view -0
 1426              		.cfi_startproc
 1427              		@ args = 0, pretend = 0, frame = 8
 1428              		@ frame_needed = 0, uses_anonymous_args = 0
 1429              	.LBB5010:
 1430              	.LBI5010:
 254:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 255:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 256:../../libdaisy/src/dev/oled_ssd130x.h **** 
 257:../../libdaisy/src/dev/oled_ssd130x.h ****     /**
 258:../../libdaisy/src/dev/oled_ssd130x.h ****      * Update the display 
 259:../../libdaisy/src/dev/oled_ssd130x.h ****     */
 260:../../libdaisy/src/dev/oled_ssd130x.h ****     void Update()
 1431              		.loc 14 260 10 view .LVU302
 1432              	.LBB5011:
 261:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 262:../../libdaisy/src/dev/oled_ssd130x.h ****         uint8_t i;
 263:../../libdaisy/src/dev/oled_ssd130x.h ****         uint8_t high_column_addr;
 264:../../libdaisy/src/dev/oled_ssd130x.h ****         switch(height)
 265:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 266:../../libdaisy/src/dev/oled_ssd130x.h ****             case 32: high_column_addr = 0x12; break;
 267:../../libdaisy/src/dev/oled_ssd130x.h **** 
 268:../../libdaisy/src/dev/oled_ssd130x.h ****             default: high_column_addr = 0x10; break;
 269:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 270:../../libdaisy/src/dev/oled_ssd130x.h ****         for(i = 0; i < (height / 8); i++)
 1433              		.loc 14 270 22 view .LVU303
 1434              	.LBE5011:
 1435              	.LBE5010:
 1436              		.loc 4 50 10 is_stmt 0 view .LVU304
 1437 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1438              		.cfi_def_cfa_offset 24
 1439              		.cfi_offset 4, -24
 1440              		.cfi_offset 5, -20
 1441              		.cfi_offset 6, -16
 1442              		.cfi_offset 7, -12
 1443              		.cfi_offset 8, -8
 1444              		.cfi_offset 14, -4
 1445              	.LBB5033:
 1446              	.LBB5031:
 1447              	.LBB5012:
 1448              	.LBB5013:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1449              		.loc 14 112 30 view .LVU305
 1450 0004 B024     		movs	r4, #176
 1451              	.LBE5013:
 1452              	.LBE5012:
 1453              	.LBE5031:
 1454              	.LBE5033:
 1455              		.loc 4 50 10 view .LVU306
 1456 0006 82B0     		sub	sp, sp, #8
 1457              		.cfi_def_cfa_offset 32
 1458              	.LBB5034:
 1459              	.LBB5032:
 1460              	.LBB5018:
 1461              	.LBB5014:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1462              		.loc 14 111 24 view .LVU307
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 105


 1463 0008 00F10806 		add	r6, r0, #8
 1464 000c 00F11005 		add	r5, r0, #16
 1465 0010 00F11408 		add	r8, r0, #20
 1466              	.LVL85:
 1467              	.L61:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1468              		.loc 14 111 24 view .LVU308
 1469 0014 0027     		movs	r7, #0
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1470              		.loc 14 111 23 view .LVU309
 1471 0016 2846     		mov	r0, r5
 1472 0018 8DF80740 		strb	r4, [sp, #7]
 1473              	.LVL86:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1474              		.loc 14 111 23 view .LVU310
 1475              	.LBE5014:
 1476              	.LBI5012:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 1477              		.loc 14 109 10 is_stmt 1 view .LVU311
 1478              	.LBB5015:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1479              		.loc 14 111 9 view .LVU312
 1480              	.LBE5015:
 1481              	.LBE5018:
 1482              		.loc 14 270 22 is_stmt 0 view .LVU313
 1483 001c 0134     		adds	r4, r4, #1
 1484              	.LVL87:
 1485              	.LBB5019:
 1486              	.LBB5016:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1487              		.loc 14 111 23 view .LVU314
 1488 001e 3946     		mov	r1, r7
 1489 0020 FFF7FEFF 		bl	dsy_gpio_write
 1490              	.LVL88:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1491              		.loc 14 112 9 is_stmt 1 view .LVU315
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1492              		.loc 14 112 30 is_stmt 0 view .LVU316
 1493 0024 6423     		movs	r3, #100
 1494 0026 0122     		movs	r2, #1
 1495 0028 0DF10701 		add	r1, sp, #7
 1496 002c 3046     		mov	r0, r6
 1497              	.LBE5016:
 1498              	.LBE5019:
 1499              		.loc 14 270 22 view .LVU317
 1500 002e E4B2     		uxtb	r4, r4
 1501              	.LBB5020:
 1502              	.LBB5017:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1503              		.loc 14 112 30 view .LVU318
 1504 0030 FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 1505              	.LVL89:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1506              		.loc 14 112 30 view .LVU319
 1507              	.LBE5017:
 1508              	.LBE5020:
 1509              	.LBB5021:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 106


 1510              	.LBB5022:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1511              		.loc 14 111 23 view .LVU320
 1512 0034 3946     		mov	r1, r7
 1513 0036 2846     		mov	r0, r5
 1514 0038 8DF80770 		strb	r7, [sp, #7]
 1515              	.LVL90:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1516              		.loc 14 111 23 view .LVU321
 1517              	.LBE5022:
 1518              	.LBI5021:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 1519              		.loc 14 109 10 is_stmt 1 view .LVU322
 1520              	.LBB5023:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1521              		.loc 14 111 9 view .LVU323
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1522              		.loc 14 111 23 is_stmt 0 view .LVU324
 1523 003c FFF7FEFF 		bl	dsy_gpio_write
 1524              	.LVL91:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1525              		.loc 14 112 9 is_stmt 1 view .LVU325
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1526              		.loc 14 112 30 is_stmt 0 view .LVU326
 1527 0040 0122     		movs	r2, #1
 1528 0042 6423     		movs	r3, #100
 1529 0044 0DF10701 		add	r1, sp, #7
 1530 0048 3046     		mov	r0, r6
 1531 004a FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 1532              	.LVL92:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1533              		.loc 14 112 30 view .LVU327
 1534 004e 1023     		movs	r3, #16
 1535              	.LBE5023:
 1536              	.LBE5021:
 1537              	.LBB5024:
 1538              	.LBB5025:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1539              		.loc 14 111 23 view .LVU328
 1540 0050 3946     		mov	r1, r7
 1541 0052 2846     		mov	r0, r5
 1542 0054 8DF80730 		strb	r3, [sp, #7]
 1543              	.LVL93:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1544              		.loc 14 111 23 view .LVU329
 1545              	.LBE5025:
 1546              	.LBI5024:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 1547              		.loc 14 109 10 is_stmt 1 view .LVU330
 1548              	.LBB5026:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1549              		.loc 14 111 9 view .LVU331
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1550              		.loc 14 111 23 is_stmt 0 view .LVU332
 1551 0058 FFF7FEFF 		bl	dsy_gpio_write
 1552              	.LVL94:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 107


 1553              		.loc 14 112 9 is_stmt 1 view .LVU333
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1554              		.loc 14 112 30 is_stmt 0 view .LVU334
 1555 005c 6423     		movs	r3, #100
 1556 005e 0122     		movs	r2, #1
 1557 0060 0DF10701 		add	r1, sp, #7
 1558 0064 3046     		mov	r0, r6
 1559 0066 FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 1560              	.LVL95:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1561              		.loc 14 112 30 view .LVU335
 1562              	.LBE5026:
 1563              	.LBE5024:
 1564              	.LBB5027:
 1565              	.LBI5027:
 115:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 1566              		.loc 14 115 10 is_stmt 1 view .LVU336
 1567              	.LBB5028:
 117:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 1568              		.loc 14 117 9 view .LVU337
 117:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 1569              		.loc 14 117 23 is_stmt 0 view .LVU338
 1570 006a 0121     		movs	r1, #1
 1571 006c 2846     		mov	r0, r5
 1572 006e FFF7FEFF 		bl	dsy_gpio_write
 1573              	.LVL96:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1574              		.loc 14 118 9 is_stmt 1 view .LVU339
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1575              		.loc 14 118 30 is_stmt 0 view .LVU340
 1576 0072 8022     		movs	r2, #128
 1577 0074 4146     		mov	r1, r8
 1578 0076 6423     		movs	r3, #100
 1579 0078 3046     		mov	r0, r6
 1580              	.LBE5028:
 1581              	.LBE5027:
 1582              		.loc 14 270 22 view .LVU341
 1583 007a 9044     		add	r8, r8, r2
 1584              	.LVL97:
 1585              	.LBB5030:
 1586              	.LBB5029:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1587              		.loc 14 118 30 view .LVU342
 1588 007c FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 1589              	.LVL98:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1590              		.loc 14 118 30 view .LVU343
 1591              	.LBE5029:
 1592              	.LBE5030:
 1593              		.loc 14 270 9 is_stmt 1 view .LVU344
 1594              		.loc 14 270 22 view .LVU345
 1595 0080 B82C     		cmp	r4, #184
 1596 0082 C7D1     		bne	.L61
 1597              	.LBE5032:
 1598              	.LBE5034:
 1599              		.loc 4 50 48 is_stmt 0 view .LVU346
 1600 0084 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 108


 1601              		.cfi_def_cfa_offset 24
 1602              		@ sp needed
 1603 0086 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1604              		.loc 4 50 48 view .LVU347
 1605              		.cfi_endproc
 1606              	.LFE5544:
 1608 008a 00BF     		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,"axG"
 1609              		.align	1
 1610              		.p2align 2,,3
 1611              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
 1612              		.syntax unified
 1613              		.thumb
 1614              		.thumb_func
 1615              		.fpu fpv5-d16
 1617              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:
 1618              	.LVL99:
 1619              	.LFB5518:
 1620              		.file 26 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Vector implementation -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1996
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 109


  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this  software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /** @file bits/stl_vector.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifndef _STL_VECTOR_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _STL_VECTOR_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/functexcept.h>
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/concept_check.h>
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <initializer_list>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201703L
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # include <compare>
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <debug/assertions.h>
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** extern "C" void
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** __sanitizer_annotate_contiguous_container(const void*, const void*,
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  const void*, const void*);
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** {
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc>
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     struct _Vector_base
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        	pointer;
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl_data
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_start;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_finish;
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_end_of_storage;
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 110


  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage(__x._M_end_of_storage)
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_start = __x._M_start;
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // information used by TBAA.
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Vector_impl_data __tmp;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __tmp._M_copy_data(*this);
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_copy_data(__x);
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __x._M_copy_data(__tmp);
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type()
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Not defaulted, to enforce noexcept(true) even when
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// !is_nothrow_move_constructible<_Tp_alloc_type>.
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Vector_impl&& __x) noexcept
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a))
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)), _Vector_impl_data(std::move(__rv))
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 111


 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename = _Tp_alloc_type>
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_shrink(_Vector_impl&, size_type) { }
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_on_dealloc(_Vector_impl&) { }
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef _Vector_impl& _Reinit;
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl&, size_type) { }
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type) { }
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Enable ASan annotations for memory obtained from std::allocator.
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename _Up>
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan<allocator<_Up> >
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Adjust ASan annotation for [_M_start, _M_end_of_storage) to
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // mark end of valid region as __curr instead of __prev.
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __sanitizer_annotate_contiguous_container(__impl._M_start,
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  __impl._M_end_of_storage, __prev, __curr);
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_grow(_Vector_impl& __impl, size_type __n)
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish, __impl._M_finish + __n); }
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_shrink(_Vector_impl& __impl, size_type __n)
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish + __n, __impl._M_finish); }
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_on_dealloc(_Vector_impl& __impl)
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      if (__impl._M_start)
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_adjust(__impl, __impl._M_finish, __impl._M_end_of_storage);
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Used on reallocation to tell ASan unused capacity is invalid.
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Reinit
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      explicit _Reinit(_Vector_impl& __impl) : _M_impl(__impl)
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 112


 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as valid again before deallocating it.
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_on_dealloc(_M_impl);
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Reinit()
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as invalid after reallocation.
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		if (_M_impl._M_start)
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _S_adjust(_M_impl, _M_impl._M_end_of_storage,
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    _M_impl._M_finish);
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit(const _Reinit&) = delete;
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit& operator=(const _Reinit&) = delete;
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Tell ASan when unused capacity is initialized to be valid.
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl& __impl, size_type __n)
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      : _M_impl(__impl), _M_n(__n)
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      { _S_grow(_M_impl, __n); }
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type __n) { _M_n -= __n; }
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(const _Grow&) = delete;
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow& operator=(const _Grow&) = delete;
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    private:
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      size_type _M_n;
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT \
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Reinit const \
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __reinit_guard(this->_M_impl)
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n) \
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Grow \
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __grow_guard(this->_M_impl, (n))
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n) __grow_guard._M_grew(n)
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n) \
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_shrink(this->_M_impl, n)
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC \
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_on_dealloc(this->_M_impl)
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else // ! (_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR)
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n)
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n)
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 113


 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc allocator_type;
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp_alloc_type&
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp_alloc_type&
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       allocator_type
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() = default;
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() { }
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if !_GLIBCXX_INLINE_VERSION
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n)
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl()
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&&) = default;
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if !_GLIBCXX_INLINE_VERSION
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(std::move(__a)) { }
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__x.get_allocator() == __a)
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _M_create_storage(__n);
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 114


 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a, _Vector_base&& __x)
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_deallocate(_M_impl._M_start,
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_impl _M_impl;
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pointer
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_allocate(size_t __n)
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__p)
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_create_storage(size_t __n)
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     };
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /**
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  individual elements in any order.
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @ingroup sequences
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Tp  Type of element.
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 115


 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  elements in any order and saves the user from worrying about
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  also provided as with C-style arrays.
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   */
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Concept requirements.
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus < 201103L
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have a non-const, non-volatile value_type");
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus > 201703L || defined __STRICT_ANSI__
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have the same value_type as its allocator");
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Tp					value_type;
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::pointer			pointer;
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator;
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef size_t					size_type;
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef ptrdiff_t					difference_type;
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc					allocator_type;
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(true_type)
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return noexcept(std::__relocate_a(std::declval<pointer>(),
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<_Tp_alloc_type&>()));
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 116


 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(false_type)
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return false; }
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_use_relocate()
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Instantiating std::__relocate_a might cause an error outside the
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// immediate context (in __relocate_object_a's noexcept-specifier),
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// so only do it if we know the type can be move-inserted into *this.
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer __first, pointer __last, pointer __result,
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return std::__relocate_a(__first, __last, __result, __alloc);
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer, pointer, pointer __result,
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type&, false_type) noexcept
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return __result; }
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_relocate(pointer __first, pointer __last, pointer __result,
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	using __do_it = __bool_constant<_S_use_relocate()>;
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // C++11
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_allocate;
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_deallocate;
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_impl;
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() = default;
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() { }
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator object.
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 117


 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a) { }
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructed elements.
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_default_initialize(__n); }
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value,
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector copy constructor.
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x  will not be copied
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 118


 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x)
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move constructor.
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector contains the exact contents of the
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  moved instance.
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of the moved instance are a valid, but unspecified
 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector.
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&&) noexcept = default;
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Copy constructor with alternative allocator
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(), __a)
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m, std::move(__rv))
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, false_type)
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m)
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__rv.get_allocator() == __m)
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__rv._M_impl);
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (!__rv.empty())
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_create_storage(__rv.size());
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish =
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  this->_M_impl._M_start,
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __rv.clear();
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Move constructor with alternative allocator
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       noexcept( noexcept(
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(std::declval<vector&&>(), std::declval<const allocator_type&>(),
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 119


 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       std::declval<typename _Alloc_traits::is_always_equal>())) )
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : vector(std::move(__rv), __m, typename _Alloc_traits::is_always_equal{})
 612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a __l.
 621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This will call the element type's copy constructor N times
 623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(initializer_list<value_type> __l,
 626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a)
 628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from a range.
 636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  An input iterator.
 638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [first,last).
 642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  random-access, then this will call the elements' copy
 645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor, and logN memory reallocations.
 649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
 659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 120


 667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  responsibility.
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 1621              		.loc 26 678 7 is_stmt 1 view -0
 1622              		.cfi_startproc
 1623              		@ args = 0, pretend = 0, frame = 0
 1624              		@ frame_needed = 0, uses_anonymous_args = 0
 1625              		.loc 26 678 7 is_stmt 0 view .LVU349
 1626 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1627              		.cfi_def_cfa_offset 24
 1628              		.cfi_offset 3, -24
 1629              		.cfi_offset 4, -20
 1630              		.cfi_offset 5, -16
 1631              		.cfi_offset 6, -12
 1632              		.cfi_offset 7, -8
 1633              		.cfi_offset 14, -4
 1634              	.LBB5085:
 679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 1635              		.loc 26 680 15 view .LVU350
 1636 0002 D0E90056 		ldrd	r5, r6, [r0]
 1637              	.LBE5085:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1638              		.loc 26 678 7 view .LVU351
 1639 0006 0746     		mov	r7, r0
 1640              	.LVL100:
 1641              	.LBB5135:
 1642              	.LBB5086:
 1643              	.LBI5086:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 1644              		.loc 26 276 7 is_stmt 1 view .LVU352
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 1645              		.loc 26 276 7 is_stmt 0 view .LVU353
 1646              	.LBE5086:
 1647              	.LBB5087:
 1648              	.LBI5087:
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type `_Up`
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *	       an object of type `_Up`.
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls `__a.construct(__p, std::forward<_Args>(__args)...)`
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  in C++11, C++14 and C++17. Changed in C++20 to call
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  `std::construct_at(__p, std::forward<_Args>(__args)...)` instead.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 121


 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up, typename... _Args>
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.construct(__p, std::forward<_Args>(__args)...);
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.destroy(__p);
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::destroy_at(__p);
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size()
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.max_size();
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return size_t(-1) / sizeof(value_type);
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR allocator_type
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 122


 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __do_alloc_on_copy(_Alloc& __one, const _Alloc& __two, true_type)
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { __one = __two; }
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_copy(_Alloc& __one, const _Alloc& __two)
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_copy_assignment __pocca;
 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocca::value)
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__one = __two;
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_copy(__one, __two, __pocca());
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     constexpr _Alloc
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_copy(const _Alloc& __a)
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       return __traits::select_on_container_copy_construction(__a);
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc& __one, _Alloc& __two, true_type)
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { __one = std::move(__two); }
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc&, _Alloc&, false_type)
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_move(_Alloc& __one, _Alloc& __two)
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_move_assignment __pocma;
 612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocma::value)
 614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__one = std::move(__two);
 615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_move(__one, __two, __pocma());
 617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 123


 618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc& __one, _Alloc& __two, true_type)
 623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using std::swap;
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       swap(__one, __two);
 626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc&, _Alloc&, false_type)
 630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_swap(_Alloc& __one, _Alloc& __two)
 636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_swap __pocs;
 639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocs::value)
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using std::swap;
 643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  swap(__one, __two);
 644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_swap(__one, __two, __pocs());
 647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Tp,
 651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	   typename _ValueT = __remove_cvref_t<typename _Alloc::value_type>,
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	   typename = void>
 653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_alloc_insertable_impl
 654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : false_type
 655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Tp, typename _ValueT>
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_alloc_insertable_impl<_Alloc, _Tp, _ValueT,
 659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __void_t<decltype(allocator_traits<_Alloc>::construct(
 660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		   std::declval<_Alloc&>(), std::declval<_ValueT*>(),
 661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		   std::declval<_Tp>()))>>
 662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : true_type
 663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // true if _Alloc::value_type is CopyInsertable into containers using _Alloc
 666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_copy_insertable
 670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc,
 671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				 typename _Alloc::value_type const&>::type
 672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // std::allocator<_Tp> just requires CopyConstructible
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 124


 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_copy_insertable<allocator<_Tp>>
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : is_copy_constructible<_Tp>
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // true if _Alloc::value_type is MoveInsertable into containers using _Alloc
 681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_move_insertable
 685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc, typename _Alloc::value_type>::type
 686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // std::allocator<_Tp> just requires MoveConstructible
 689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_move_insertable<allocator<_Tp>>
 691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : is_move_constructible<_Tp>
 692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // Trait to detect Allocator-like types.
 695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename = void>
 696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_allocator : false_type { };
 697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_allocator<_Alloc,
 700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __void_t<typename _Alloc::value_type,
 701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	       decltype(std::declval<_Alloc&>().allocate(size_t{}))>>
 702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : true_type { };
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using _RequireAllocator
 706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename enable_if<__is_allocator<_Alloc>::value, _Alloc>::type;
 707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using _RequireNotAllocator
 710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename enable_if<!__is_allocator<_Alloc>::value, _Alloc>::type;
 711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif // C++11
 712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * Destroy a range of objects using the supplied allocator.  For
 715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * non-default allocators we do not optimize away invocation of
 716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * destroy() even if _Tp has a trivial destructor.
 717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    */
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _ForwardIterator, typename _Allocator>
 720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     void
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	     _Allocator& __alloc)
 723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       for (; __first != __last; ++__first)
 725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201103L
 726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__alloc.destroy(std::__addressof(*__first));
 727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	allocator_traits<_Allocator>::destroy(__alloc,
 729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 					      std::__addressof(*__first));
 730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 125


 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _ForwardIterator, typename _Tp>
 734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 1649              		.loc 25 735 5 is_stmt 1 view .LVU354
 1650              	.LBB5088:
 1651              	.LBB5089:
 1652              	.LBB5090:
 1653              	.LBB5091:
 1654              		.file 27 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Copyright (c) 1996,1997
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * representations about the suitability of this software for any
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 126


  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** /** @file bits/stl_construct.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <new>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <bits/move.h>
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <bits/stl_iterator_base_types.h> // for iterator_traits
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <bits/stl_iterator_base_funcs.h> // for advance
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** /* This file provides the C++17 functions std::destroy_at, std::destroy, and
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * std::destroy_n, and the C++20 function std::construct_at.
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * It also provides std::_Construct, std::_Destroy,and std::_Destroy_n functions
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * which are defined in all standard modes and so can be used in C++98-14 code.
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * The _Destroy functions will dispatch to destroy_at during constant
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * evaluation, because calls to that function are intercepted by the compiler
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * to allow use in constant expressions.
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  */
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** {
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus >= 201703L
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template <typename _Tp>
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX20_CONSTEXPR inline void
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     destroy_at(_Tp* __location)
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       if constexpr (__cplusplus > 201703L && is_array_v<_Tp>)
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	{
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	  for (auto& __x : *__location)
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	    std::destroy_at(std::__addressof(__x));
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	}
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       else
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	__location->~_Tp();
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     }
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus > 201703L
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _Tp, typename... _Args>
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     constexpr auto
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     construct_at(_Tp* __location, _Args&&... __args)
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     noexcept(noexcept(::new((void*)0) _Tp(std::declval<_Args>()...)))
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     -> decltype(::new((void*)0) _Tp(std::declval<_Args>()...))
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif // C++20
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif// C++17
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   /**
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * object's constructor with an initializer.
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 127


 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus >= 201103L
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _Tp, typename... _Args>
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     inline void
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Construct(_Tp* __p, _Args&&... __args)
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #else
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _T1, typename _T2>
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     inline void
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     }
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _T1>
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     inline void
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Construct_novalue(_T1* __p)
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1; }
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _ForwardIterator>
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX20_CONSTEXPR void
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last);
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   /**
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * Destroy the object pointed to by a pointer type.
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    */
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _Tp>
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX14_CONSTEXPR inline void
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Destroy(_Tp* __pointer)
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus > 201703L
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       std::destroy_at(__pointer);
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #else
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       __pointer->~_Tp();
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     }
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<bool>
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     struct _Destroy_aux
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       template<typename _ForwardIterator>
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	static _GLIBCXX20_CONSTEXPR void
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	__destroy(_ForwardIterator __first, _ForwardIterator __last)
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	{
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	  for (; __first != __last; ++__first)
 1655              		.loc 27 151 19 view .LVU355
 1656 0008 B542     		cmp	r5, r6
 1657 000a 0FD0     		beq	.L65
 1658 000c 05F10804 		add	r4, r5, #8
 1659              	.LVL101:
 1660              	.L67:
 1661              	.LBB5092:
 1662              	.LBI5092:
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 1663              		.loc 27 135 5 view .LVU356
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 128


 1664              	.LBB5093:
 1665              	.LBI5093:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 1666              		.loc 18 657 7 view .LVU357
 1667              	.LBB5094:
 1668              	.LBI5094:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1669              		.loc 18 229 7 view .LVU358
 1670              	.LBB5095:
 1671              	.LBB5096:
 1672              	.LBI5096:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 1673              		.loc 18 221 7 view .LVU359
 1674              	.LBB5097:
 1675              	.LBI5097:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1676              		.loc 18 186 7 view .LVU360
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1677              		.loc 18 186 7 is_stmt 0 view .LVU361
 1678              	.LBE5097:
 1679              	.LBE5096:
 1680              	.LBB5100:
 1681              	.LBI5100:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1682              		.loc 18 236 7 is_stmt 1 view .LVU362
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1683              		.loc 18 236 7 is_stmt 0 view .LVU363
 1684              	.LBE5100:
 1685              	.LBB5108:
 1686              	.LBB5099:
 1687              	.LBB5098:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1688              		.loc 18 187 28 view .LVU364
 1689 0010 54F8080C 		ldr	r0, [r4, #-8]
 1690              	.LVL102:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1691              		.loc 18 187 28 view .LVU365
 1692              	.LBE5098:
 1693              	.LBE5099:
 1694              	.LBE5108:
 1695              	.LBB5109:
 1696              	.LBB5101:
 1697              	.LBB5102:
 1698              	.LBI5102:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 1699              		.loc 25 491 7 is_stmt 1 view .LVU366
 1700              	.LBB5103:
 1701              	.LBI5103:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 1702              		.loc 20 120 7 view .LVU367
 1703              	.LBE5103:
 1704              	.LBE5102:
 1705              	.LBE5101:
 1706              	.LBE5109:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1707              		.loc 18 231 2 is_stmt 0 view .LVU368
 1708 0014 8442     		cmp	r4, r0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 129


 1709              	.LBE5095:
 1710              	.LBE5094:
 1711              	.LBE5093:
 1712              	.LBE5092:
 1713              		.loc 27 151 19 view .LVU369
 1714 0016 04F11804 		add	r4, r4, #24
 1715              	.LBB5117:
 1716              	.LBB5116:
 1717              	.LBB5112:
 1718              	.LBB5111:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1719              		.loc 18 231 2 view .LVU370
 1720 001a 03D0     		beq	.L66
 1721              	.LBB5110:
 1722              	.LBB5107:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1723              		.loc 18 237 34 view .LVU371
 1724 001c A968     		ldr	r1, [r5, #8]
 1725              	.LBB5106:
 1726              	.LBB5105:
 1727              	.LBB5104:
 1728              		.loc 20 133 19 view .LVU372
 1729 001e 0131     		adds	r1, r1, #1
 1730              	.LVL103:
 1731              		.loc 20 133 19 view .LVU373
 1732 0020 FFF7FEFF 		bl	_ZdlPvj
 1733              	.LVL104:
 1734              	.L66:
 1735              		.loc 20 133 19 view .LVU374
 1736              	.LBE5104:
 1737              	.LBE5105:
 1738              	.LBE5106:
 1739              	.LBE5107:
 1740              	.LBE5110:
 1741              	.LBE5111:
 1742              	.LBE5112:
 1743              	.LBB5113:
 1744              	.LBI5113:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1745              		.loc 18 150 14 is_stmt 1 view .LVU375
 1746              	.LBB5114:
 1747              	.LBI5114:
 1748              		.loc 19 162 7 view .LVU376
 1749              	.LBB5115:
 1750              	.LBI5115:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1751              		.loc 20 89 7 view .LVU377
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1752              		.loc 20 89 7 is_stmt 0 view .LVU378
 1753              	.LBE5115:
 1754              	.LBE5114:
 1755              	.LBE5113:
 1756              	.LBE5116:
 1757              	.LBE5117:
 1758              		.loc 27 151 4 is_stmt 1 view .LVU379
 1759 0024 1835     		adds	r5, r5, #24
 1760              	.LVL105:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 130


 1761              		.loc 27 151 19 view .LVU380
 1762 0026 AE42     		cmp	r6, r5
 1763 0028 F2D1     		bne	.L67
 1764              	.LBE5091:
 1765              	.LBE5090:
 1766              	.LBE5089:
 1767              	.LBE5088:
 1768              	.LBE5087:
 1769              	.LBB5118:
 1770              	.LBB5119:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 1771              		.loc 26 335 15 is_stmt 0 view .LVU381
 1772 002a 3E68     		ldr	r6, [r7]
 1773              	.LVL106:
 1774              	.L65:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 1775              		.loc 26 335 15 view .LVU382
 1776              	.LBE5119:
 1777              	.LBI5118:
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1778              		.loc 26 333 7 is_stmt 1 view .LVU383
 1779              	.LBB5134:
 1780              	.LBB5120:
 1781              	.LBI5120:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1782              		.loc 26 350 7 view .LVU384
 1783              	.LBB5121:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 1784              		.loc 26 353 2 is_stmt 0 view .LVU385
 1785 002c 26B1     		cbz	r6, .L68
 1786              	.LVL107:
 1787              	.LBB5122:
 1788              	.LBI5122:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 1789              		.loc 25 491 7 is_stmt 1 view .LVU386
 1790              	.LBB5123:
 1791              	.LBB5124:
 1792              	.LBI5124:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 1793              		.loc 20 120 7 view .LVU387
 1794              	.LBE5124:
 1795              	.LBE5123:
 1796              	.LBE5122:
 1797              	.LBE5121:
 1798              	.LBE5120:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 1799              		.loc 26 336 35 is_stmt 0 view .LVU388
 1800 002e B968     		ldr	r1, [r7, #8]
 1801              	.LBB5130:
 1802              	.LBB5129:
 1803              	.LBB5128:
 1804              	.LBB5127:
 1805              	.LBB5126:
 1806              	.LBB5125:
 1807              		.loc 20 133 19 view .LVU389
 1808 0030 3046     		mov	r0, r6
 1809 0032 891B     		subs	r1, r1, r6
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 131


 1810 0034 FFF7FEFF 		bl	_ZdlPvj
 1811              	.LVL108:
 1812              	.L68:
 1813              		.loc 20 133 19 view .LVU390
 1814              	.LBE5125:
 1815              	.LBE5126:
 1816              	.LBE5127:
 1817              	.LBE5128:
 1818              	.LBE5129:
 1819              	.LBE5130:
 1820              	.LBB5131:
 1821              	.LBI5131:
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 1822              		.loc 26 128 14 is_stmt 1 view .LVU391
 1823              	.LBB5132:
 1824              	.LBI5132:
 1825              		.loc 19 162 7 view .LVU392
 1826              	.LBB5133:
 1827              	.LBI5133:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1828              		.loc 20 89 7 view .LVU393
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1829              		.loc 20 89 7 is_stmt 0 view .LVU394
 1830              	.LBE5133:
 1831              	.LBE5132:
 1832              	.LBE5131:
 1833              	.LBE5134:
 1834              	.LBE5118:
 1835              	.LBE5135:
 681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 1836              		.loc 26 683 7 view .LVU395
 1837 0038 3846     		mov	r0, r7
 1838 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1839              		.loc 26 683 7 view .LVU396
 1840              		.cfi_endproc
 1841              	.LFE5518:
 1843              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 1844              		.thumb_set _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev,_ZNSt6vec
 1845              		.section	.text._ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev,"axG",%progbits,_ZNSt5arrayIN10jellyb
 1846              		.align	1
 1847              		.p2align 2,,3
 1848              		.weak	_ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev
 1849              		.syntax unified
 1850              		.thumb
 1851              		.thumb_func
 1852              		.fpu fpv5-d16
 1854              	_ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev:
 1855              	.LVL109:
 1856              	.LFB6190:
 1857              		.loc 24 94 12 is_stmt 1 view -0
 1858              		.cfi_startproc
 1859              		@ args = 0, pretend = 0, frame = 0
 1860              		@ frame_needed = 0, uses_anonymous_args = 0
 1861              		.loc 24 94 12 is_stmt 0 view .LVU398
 1862 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 132


 1863              		.cfi_def_cfa_offset 24
 1864              		.cfi_offset 4, -24
 1865              		.cfi_offset 5, -20
 1866              		.cfi_offset 6, -16
 1867              		.cfi_offset 7, -12
 1868              		.cfi_offset 8, -8
 1869              		.cfi_offset 14, -4
 1870              		.loc 24 94 12 view .LVU399
 1871 0004 8046     		mov	r8, r0
 1872 0006 00F53476 		add	r6, r0, #720
 1873              	.LVL110:
 1874              	.L82:
 1875              	.LBB5218:
 1876              	.LBB5219:
 1877              	.LBI5219:
 1878              		.file 28 "menuitem.h"
   1:menuitem.h    **** /* 
   2:menuitem.h    ****  * Copyright (C) 2021 Evan Pernu - All Rights Reserved
   3:menuitem.h    ****  * You may use, distribute and modify this code under the
   4:menuitem.h    ****  * terms of the GNU AGPLv3 license.
   5:menuitem.h    ****  * 
   6:menuitem.h    ****  * You should have received a copy of the GNU AGPLv3 license with
   7:menuitem.h    ****  * this file (LICENSE.md). If not, please write to: evanpernu@gmail.com, 
   8:menuitem.h    ****  * or visit: https://www.gnu.org/licenses/agpl-3.0.en.html
   9:menuitem.h    ****  */
  10:menuitem.h    **** 
  11:menuitem.h    **** #pragma once
  12:menuitem.h    **** 
  13:menuitem.h    **** #include <functional>
  14:menuitem.h    **** #include <vector>
  15:menuitem.h    **** #include <string>
  16:menuitem.h    **** 
  17:menuitem.h    **** namespace jellybeans {
  18:menuitem.h    **** 
  19:menuitem.h    ****     // Menu item whos value is an element of a list of predefined strings
  20:menuitem.h    ****     // They are also used to store settings
  21:menuitem.h    ****     class MenuItem {
 1879              		.loc 28 21 11 is_stmt 1 discriminator 5 view .LVU400
 1880              	.LBB5220:
 1881              	.LBI5220:
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	return std::__invoke_r<_Res>(*_Base::_M_get_pointer(__functor),
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 				     std::forward<_ArgTypes>(__args)...);
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     };
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   /**
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  @brief Primary class template for std::function.
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  @ingroup functors
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  Polymorphic function wrapper.
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    */
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename... _ArgTypes>
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     class function<_Res(_ArgTypes...)>
 1882              		.loc 15 303 11 discriminator 5 view .LVU401
 1883              	.LBB5221:
 1884              	.LBI5221:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 133


 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 1885              		.loc 15 242 5 discriminator 5 view .LVU402
 1886              	.LBB5222:
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 1887              		.loc 15 244 7 discriminator 5 view .LVU403
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 1888              		.loc 15 244 11 is_stmt 0 discriminator 5 view .LVU404
 1889 000a B36C     		ldr	r3, [r6, #72]
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 1890              		.loc 15 244 7 discriminator 5 view .LVU405
 1891 000c 23B1     		cbz	r3, .L75
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 1892              		.loc 15 245 2 is_stmt 1 view .LVU406
 1893 000e 06F14001 		add	r1, r6, #64
 1894              	.LVL111:
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 1895              		.loc 15 245 12 is_stmt 0 view .LVU407
 1896 0012 0322     		movs	r2, #3
 1897 0014 0846     		mov	r0, r1
 1898 0016 9847     		blx	r3
 1899              	.LVL112:
 1900              	.L75:
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 1901              		.loc 15 245 12 view .LVU408
 1902              	.LBE5222:
 1903              	.LBE5221:
 1904              	.LBE5220:
 1905              	.LBB5223:
 1906              	.LBI5223:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1907              		.loc 26 678 7 is_stmt 1 view .LVU409
 1908              	.LBB5224:
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 1909              		.loc 26 680 15 is_stmt 0 view .LVU410
 1910 0018 D6E90D57 		ldrd	r5, r7, [r6, #52]
 1911              	.LVL113:
 1912              	.LBB5225:
 1913              	.LBI5225:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 1914              		.loc 26 276 7 is_stmt 1 view .LVU411
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 1915              		.loc 26 276 7 is_stmt 0 view .LVU412
 1916              	.LBE5225:
 1917              	.LBB5226:
 1918              	.LBI5226:
 1919              		.loc 25 735 5 is_stmt 1 view .LVU413
 1920              	.LBB5227:
 1921              	.LBB5228:
 1922              	.LBB5229:
 1923              	.LBB5230:
 1924              		.loc 27 151 19 view .LVU414
 1925 001c BD42     		cmp	r5, r7
 1926              	.LBE5230:
 1927              	.LBE5229:
 1928              	.LBE5228:
 1929              	.LBE5227:
 1930              	.LBE5226:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 134


 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 1931              		.loc 26 680 15 is_stmt 0 view .LVU415
 1932 001e 2846     		mov	r0, r5
 1933              	.LBB5261:
 1934              	.LBB5260:
 1935              	.LBB5259:
 1936              	.LBB5258:
 1937              	.LBB5257:
 1938              		.loc 27 151 19 view .LVU416
 1939 0020 0FD0     		beq	.L76
 1940 0022 05F10804 		add	r4, r5, #8
 1941              	.LVL114:
 1942              	.L78:
 1943              	.LBB5231:
 1944              	.LBI5231:
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 1945              		.loc 27 135 5 is_stmt 1 view .LVU417
 1946              	.LBB5232:
 1947              	.LBI5232:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 1948              		.loc 18 657 7 view .LVU418
 1949              	.LBB5233:
 1950              	.LBI5233:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1951              		.loc 18 229 7 view .LVU419
 1952              	.LBB5234:
 1953              	.LBB5235:
 1954              	.LBI5235:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 1955              		.loc 18 221 7 view .LVU420
 1956              	.LBB5236:
 1957              	.LBI5236:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1958              		.loc 18 186 7 view .LVU421
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1959              		.loc 18 186 7 is_stmt 0 view .LVU422
 1960              	.LBE5236:
 1961              	.LBE5235:
 1962              	.LBB5239:
 1963              	.LBI5239:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1964              		.loc 18 236 7 is_stmt 1 view .LVU423
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1965              		.loc 18 236 7 is_stmt 0 view .LVU424
 1966              	.LBE5239:
 1967              	.LBB5247:
 1968              	.LBB5238:
 1969              	.LBB5237:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1970              		.loc 18 187 28 view .LVU425
 1971 0026 54F8080C 		ldr	r0, [r4, #-8]
 1972              	.LVL115:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1973              		.loc 18 187 28 view .LVU426
 1974              	.LBE5237:
 1975              	.LBE5238:
 1976              	.LBE5247:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 135


 1977              	.LBB5248:
 1978              	.LBB5240:
 1979              	.LBB5241:
 1980              	.LBI5241:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 1981              		.loc 25 491 7 is_stmt 1 view .LVU427
 1982              	.LBB5242:
 1983              	.LBI5242:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 1984              		.loc 20 120 7 view .LVU428
 1985              	.LBE5242:
 1986              	.LBE5241:
 1987              	.LBE5240:
 1988              	.LBE5248:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1989              		.loc 18 231 2 is_stmt 0 view .LVU429
 1990 002a 8442     		cmp	r4, r0
 1991              	.LBE5234:
 1992              	.LBE5233:
 1993              	.LBE5232:
 1994              	.LBE5231:
 1995              		.loc 27 151 19 view .LVU430
 1996 002c 04F11804 		add	r4, r4, #24
 1997              	.LBB5256:
 1998              	.LBB5255:
 1999              	.LBB5251:
 2000              	.LBB5250:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2001              		.loc 18 231 2 view .LVU431
 2002 0030 03D0     		beq	.L77
 2003              	.LBB5249:
 2004              	.LBB5246:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2005              		.loc 18 237 34 view .LVU432
 2006 0032 A968     		ldr	r1, [r5, #8]
 2007              	.LBB5245:
 2008              	.LBB5244:
 2009              	.LBB5243:
 2010              		.loc 20 133 19 view .LVU433
 2011 0034 0131     		adds	r1, r1, #1
 2012              	.LVL116:
 2013              		.loc 20 133 19 view .LVU434
 2014 0036 FFF7FEFF 		bl	_ZdlPvj
 2015              	.LVL117:
 2016              	.L77:
 2017              		.loc 20 133 19 view .LVU435
 2018              	.LBE5243:
 2019              	.LBE5244:
 2020              	.LBE5245:
 2021              	.LBE5246:
 2022              	.LBE5249:
 2023              	.LBE5250:
 2024              	.LBE5251:
 2025              	.LBB5252:
 2026              	.LBI5252:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2027              		.loc 18 150 14 is_stmt 1 view .LVU436
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 136


 2028              	.LBB5253:
 2029              	.LBI5253:
 2030              		.loc 19 162 7 view .LVU437
 2031              	.LBB5254:
 2032              	.LBI5254:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2033              		.loc 20 89 7 view .LVU438
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2034              		.loc 20 89 7 is_stmt 0 view .LVU439
 2035              	.LBE5254:
 2036              	.LBE5253:
 2037              	.LBE5252:
 2038              	.LBE5255:
 2039              	.LBE5256:
 2040              		.loc 27 151 4 is_stmt 1 view .LVU440
 2041 003a 1835     		adds	r5, r5, #24
 2042              	.LVL118:
 2043              		.loc 27 151 19 view .LVU441
 2044 003c AF42     		cmp	r7, r5
 2045 003e F2D1     		bne	.L78
 2046 0040 706B     		ldr	r0, [r6, #52]
 2047              	.L76:
 2048              	.LVL119:
 2049              		.loc 27 151 19 is_stmt 0 view .LVU442
 2050              	.LBE5257:
 2051              	.LBE5258:
 2052              	.LBE5259:
 2053              	.LBE5260:
 2054              	.LBE5261:
 2055              	.LBB5262:
 2056              	.LBI5262:
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2057              		.loc 26 333 7 is_stmt 1 view .LVU443
 2058              	.LBB5263:
 2059              	.LBB5264:
 2060              	.LBI5264:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2061              		.loc 26 350 7 view .LVU444
 2062              	.LBB5265:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2063              		.loc 26 353 2 is_stmt 0 view .LVU445
 2064 0042 18B1     		cbz	r0, .L79
 2065              	.LVL120:
 2066              	.LBB5266:
 2067              	.LBI5266:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2068              		.loc 25 491 7 is_stmt 1 view .LVU446
 2069              	.LBB5267:
 2070              	.LBB5268:
 2071              	.LBI5268:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2072              		.loc 20 120 7 view .LVU447
 2073              	.LBE5268:
 2074              	.LBE5267:
 2075              	.LBE5266:
 2076              	.LBE5265:
 2077              	.LBE5264:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 137


 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 2078              		.loc 26 336 35 is_stmt 0 view .LVU448
 2079 0044 F16B     		ldr	r1, [r6, #60]
 2080              	.LBB5274:
 2081              	.LBB5273:
 2082              	.LBB5272:
 2083              	.LBB5271:
 2084              	.LBB5270:
 2085              	.LBB5269:
 2086              		.loc 20 133 19 view .LVU449
 2087 0046 091A     		subs	r1, r1, r0
 2088 0048 FFF7FEFF 		bl	_ZdlPvj
 2089              	.LVL121:
 2090              	.L79:
 2091              		.loc 20 133 19 view .LVU450
 2092              	.LBE5269:
 2093              	.LBE5270:
 2094              	.LBE5271:
 2095              	.LBE5272:
 2096              	.LBE5273:
 2097              	.LBE5274:
 2098              	.LBB5275:
 2099              	.LBI5275:
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2100              		.loc 26 128 14 is_stmt 1 view .LVU451
 2101              	.LBB5276:
 2102              	.LBI5276:
 2103              		.loc 19 162 7 view .LVU452
 2104              	.LBB5277:
 2105              	.LBI5277:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2106              		.loc 20 89 7 view .LVU453
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2107              		.loc 20 89 7 is_stmt 0 view .LVU454
 2108              	.LBE5277:
 2109              	.LBE5276:
 2110              	.LBE5275:
 2111              	.LBE5263:
 2112              	.LBE5262:
 2113              	.LBE5224:
 2114              	.LBE5223:
 2115              	.LBB5278:
 2116              	.LBI5278:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 2117              		.loc 18 657 7 is_stmt 1 view .LVU455
 2118              	.LBB5279:
 2119              	.LBI5279:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2120              		.loc 18 229 7 view .LVU456
 2121              	.LBB5280:
 2122              	.LBB5281:
 2123              	.LBI5281:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2124              		.loc 18 221 7 view .LVU457
 2125              	.LBB5282:
 2126              	.LBI5282:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 138


 2127              		.loc 18 186 7 view .LVU458
 2128              	.LBB5283:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2129              		.loc 18 187 28 is_stmt 0 view .LVU459
 2130 004c F069     		ldr	r0, [r6, #28]
 2131              	.LVL122:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2132              		.loc 18 187 28 view .LVU460
 2133              	.LBE5283:
 2134              	.LBE5282:
 2135              	.LBE5281:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2136              		.loc 18 231 2 view .LVU461
 2137 004e 06F12403 		add	r3, r6, #36
 2138 0052 9842     		cmp	r0, r3
 2139 0054 03D0     		beq	.L80
 2140              	.LVL123:
 2141              	.LBB5284:
 2142              	.LBI5284:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2143              		.loc 18 236 7 is_stmt 1 view .LVU462
 2144              	.LBB5285:
 2145              	.LBB5286:
 2146              	.LBI5286:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2147              		.loc 25 491 7 view .LVU463
 2148              	.LBB5287:
 2149              	.LBI5287:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2150              		.loc 20 120 7 view .LVU464
 2151              	.LBE5287:
 2152              	.LBE5286:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2153              		.loc 18 237 34 is_stmt 0 view .LVU465
 2154 0056 716A     		ldr	r1, [r6, #36]
 2155              	.LBB5290:
 2156              	.LBB5289:
 2157              	.LBB5288:
 2158              		.loc 20 133 19 view .LVU466
 2159 0058 0131     		adds	r1, r1, #1
 2160              	.LVL124:
 2161              		.loc 20 133 19 view .LVU467
 2162 005a FFF7FEFF 		bl	_ZdlPvj
 2163              	.LVL125:
 2164              	.L80:
 2165              		.loc 20 133 19 view .LVU468
 2166              	.LBE5288:
 2167              	.LBE5289:
 2168              	.LBE5290:
 2169              	.LBE5285:
 2170              	.LBE5284:
 2171              	.LBE5280:
 2172              	.LBE5279:
 2173              	.LBB5291:
 2174              	.LBI5291:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2175              		.loc 18 150 14 is_stmt 1 view .LVU469
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 139


 2176              	.LBB5292:
 2177              	.LBI5292:
 2178              		.loc 19 162 7 view .LVU470
 2179              	.LBB5293:
 2180              	.LBI5293:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2181              		.loc 20 89 7 view .LVU471
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2182              		.loc 20 89 7 is_stmt 0 view .LVU472
 2183              	.LBE5293:
 2184              	.LBE5292:
 2185              	.LBE5291:
 2186              	.LBE5278:
 2187              	.LBB5294:
 2188              	.LBI5294:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 2189              		.loc 18 657 7 is_stmt 1 view .LVU473
 2190              	.LBB5295:
 2191              	.LBI5295:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2192              		.loc 18 229 7 view .LVU474
 2193              	.LBB5296:
 2194              	.LBB5297:
 2195              	.LBI5297:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2196              		.loc 18 221 7 view .LVU475
 2197              	.LBB5298:
 2198              	.LBI5298:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2199              		.loc 18 186 7 view .LVU476
 2200              	.LBB5299:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2201              		.loc 18 187 28 is_stmt 0 view .LVU477
 2202 005e 7068     		ldr	r0, [r6, #4]
 2203              	.LVL126:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2204              		.loc 18 187 28 view .LVU478
 2205              	.LBE5299:
 2206              	.LBE5298:
 2207              	.LBE5297:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2208              		.loc 18 231 2 view .LVU479
 2209 0060 06F10C03 		add	r3, r6, #12
 2210 0064 9842     		cmp	r0, r3
 2211 0066 03D0     		beq	.L81
 2212              	.LVL127:
 2213              	.LBB5300:
 2214              	.LBI5300:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2215              		.loc 18 236 7 is_stmt 1 view .LVU480
 2216              	.LBB5301:
 2217              	.LBB5302:
 2218              	.LBI5302:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2219              		.loc 25 491 7 view .LVU481
 2220              	.LBB5303:
 2221              	.LBI5303:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 140


 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2222              		.loc 20 120 7 view .LVU482
 2223              	.LBE5303:
 2224              	.LBE5302:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2225              		.loc 18 237 34 is_stmt 0 view .LVU483
 2226 0068 F168     		ldr	r1, [r6, #12]
 2227              	.LBB5306:
 2228              	.LBB5305:
 2229              	.LBB5304:
 2230              		.loc 20 133 19 view .LVU484
 2231 006a 0131     		adds	r1, r1, #1
 2232              	.LVL128:
 2233              		.loc 20 133 19 view .LVU485
 2234 006c FFF7FEFF 		bl	_ZdlPvj
 2235              	.LVL129:
 2236              	.L81:
 2237              		.loc 20 133 19 view .LVU486
 2238              	.LBE5304:
 2239              	.LBE5305:
 2240              	.LBE5306:
 2241              	.LBE5301:
 2242              	.LBE5300:
 2243              	.LBE5296:
 2244              	.LBE5295:
 2245              	.LBB5307:
 2246              	.LBI5307:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2247              		.loc 18 150 14 is_stmt 1 view .LVU487
 2248              	.LBB5308:
 2249              	.LBI5308:
 2250              		.loc 19 162 7 view .LVU488
 2251              	.LBB5309:
 2252              	.LBI5309:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2253              		.loc 20 89 7 view .LVU489
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2254              		.loc 20 89 7 is_stmt 0 view .LVU490
 2255              	.LBE5309:
 2256              	.LBE5308:
 2257              	.LBE5307:
 2258              	.LBE5294:
 2259              	.LBE5219:
 2260              		.loc 24 94 12 view .LVU491
 2261 0070 4645     		cmp	r6, r8
 2262 0072 A6F15003 		sub	r3, r6, #80
 2263 0076 01D0     		beq	.L92
 2264 0078 1E46     		mov	r6, r3
 2265 007a C6E7     		b	.L82
 2266              	.L92:
 2267              	.LBE5218:
 2268              		.loc 24 94 12 discriminator 7 view .LVU492
 2269 007c 3046     		mov	r0, r6
 2270 007e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2271              		.loc 24 94 12 discriminator 7 view .LVU493
 2272              		.cfi_endproc
 2273              	.LFE6190:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 141


 2275              		.weak	_ZNSt5arrayIN10jellybeans8MenuItemELj10EED1Ev
 2276              		.thumb_set _ZNSt5arrayIN10jellybeans8MenuItemELj10EED1Ev,_ZNSt5arrayIN10jellybeans8MenuItemELj10EE
 2277 0082 00BF     		.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6v
 2278              		.align	1
 2279              		.p2align 2,,3
 2280              		.syntax unified
 2281              		.thumb
 2282              		.thumb_func
 2283              		.fpu fpv5-d16
 2285              	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt
 2286              	.LVL130:
 2287              	.LFB6213:
 2288              		.file 29 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // RB tree implementation -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Copyright (c) 1996,1997
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Silicon Graphics Computer Systems, Inc.
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * in supporting documentation.  Silicon Graphics makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Copyright (c) 1994
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Hewlett-Packard Company
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * provided that the above copyright notice appear in all copies and
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 142


  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  */
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** /** @file bits/stl_tree.h
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *  This is an internal header file, included by other library headers.
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *  Do not attempt to use it directly. @headername{map,set}
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  */
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #ifndef _STL_TREE_H
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #define _STL_TREE_H 1
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #pragma GCC system_header
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #include <bits/stl_algobase.h>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #include <bits/allocator.h>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #include <bits/stl_function.h>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #include <bits/cpp_type_traits.h>
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #include <ext/alloc_traits.h>
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** # include <ext/aligned_buffer.h>
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus > 201402L
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** # include <bits/node_handle.h>
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** namespace std _GLIBCXX_VISIBILITY(default)
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** {
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus > 201103L
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** # define __cpp_lib_generic_associative_lookup 201304
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // Red-black tree class, designed for use in implementing STL
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // associative containers (set, multiset, map, and multimap). The
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // insertion and deletion algorithms are based on those in Cormen,
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // Leiserson, and Rivest, Introduction to Algorithms (MIT Press,
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // 1990), except that
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   //
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // (1) the header cell is maintained with links not only to the root
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // but also to the leftmost node of the tree, to enable constant
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // time begin(), and to the rightmost node of the tree, to enable
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // linear time performance when used with the generic set algorithms
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // (set_union, etc.)
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   //
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // (2) when a node being deleted has two children its successor node
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // is relinked into its place, rather than copied, so that the only
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // iterators invalidated are those referring to the deleted node.
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   enum _Rb_tree_color { _S_red = false, _S_black = true };
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   struct _Rb_tree_node_base
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 143


 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   {
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typedef _Rb_tree_node_base* _Base_ptr;
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typedef const _Rb_tree_node_base* _Const_Base_ptr;
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree_color	_M_color;
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Base_ptr		_M_parent;
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Base_ptr		_M_left;
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Base_ptr		_M_right;
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     static _Base_ptr
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x->_M_left != 0) __x = __x->_M_left;
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return __x;
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     static _Const_Base_ptr
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _S_minimum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x->_M_left != 0) __x = __x->_M_left;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return __x;
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     static _Base_ptr
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x->_M_right != 0) __x = __x->_M_right;
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return __x;
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     static _Const_Base_ptr
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _S_maximum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x->_M_right != 0) __x = __x->_M_right;
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return __x;
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   };
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // Helper type offering value initialization guarantee on the compare functor.
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key_compare>
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct _Rb_tree_key_compare
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Key_compare		_M_key_compare;
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_key_compare()
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_NOEXCEPT_IF(
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	is_nothrow_default_constructible<_Key_compare>::value)
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_key_compare()
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_key_compare(const _Key_compare& __comp)
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_key_compare(__comp)
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Copy constructor added for consistency with C++98 mode.
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_key_compare(const _Rb_tree_key_compare&) = default;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 144


 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_key_compare(_Rb_tree_key_compare&& __x)
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	noexcept(is_nothrow_copy_constructible<_Key_compare>::value)
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_key_compare(__x._M_key_compare)
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     };
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // Helper type to manage default initialization of node count and header.
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   struct _Rb_tree_header
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   {
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree_node_base	_M_header;
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     size_t		_M_node_count; // Keeps track of size of tree.
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree_header() _GLIBCXX_NOEXCEPT
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_color = _S_red;
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reset();
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree_header(_Rb_tree_header&& __x) noexcept
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__x._M_header._M_parent != nullptr)
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_move_data(__x);
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_header._M_color = _S_red;
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_reset();
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_move_data(_Rb_tree_header& __from)
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_color = __from._M_header._M_color;
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_parent = __from._M_header._M_parent;
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_left = __from._M_header._M_left;
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_right = __from._M_header._M_right;
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_parent->_M_parent = &_M_header;
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_node_count = __from._M_node_count;
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       __from._M_reset();
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_reset()
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_parent = 0;
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_left = &_M_header;
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_right = &_M_header;
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_node_count = 0;
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   };
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Val>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 145


 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct _Rb_tree_node : public _Rb_tree_node_base
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node<_Val>* _Link_type;
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Val _M_value_field;
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Val*
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_valptr()
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return std::__addressof(_M_value_field); }
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const _Val*
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_valptr() const
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return std::__addressof(_M_value_field); }
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       __gnu_cxx::__aligned_membuf<_Val> _M_storage;
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Val*
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_valptr()
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_storage._M_ptr(); }
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const _Val*
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_valptr() const
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_storage._M_ptr(); }
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     };
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _GLIBCXX_PURE _Rb_tree_node_base*
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_increment(_Rb_tree_node_base* __x) throw ();
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _GLIBCXX_PURE const _Rb_tree_node_base*
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_increment(const _Rb_tree_node_base* __x) throw ();
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _GLIBCXX_PURE _Rb_tree_node_base*
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_decrement(_Rb_tree_node_base* __x) throw ();
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _GLIBCXX_PURE const _Rb_tree_node_base*
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_decrement(const _Rb_tree_node_base* __x) throw ();
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Tp>
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct _Rb_tree_iterator
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Tp  value_type;
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Tp& reference;
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Tp* pointer;
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef bidirectional_iterator_tag iterator_category;
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef ptrdiff_t			 difference_type;
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_iterator<_Tp>		_Self;
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node_base::_Base_ptr	_Base_ptr;
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node<_Tp>*		_Link_type;
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_iterator() _GLIBCXX_NOEXCEPT
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node() { }
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       explicit
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 146


 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       reference
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator*() const _GLIBCXX_NOEXCEPT
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pointer
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator->() const _GLIBCXX_NOEXCEPT
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self&
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator++() _GLIBCXX_NOEXCEPT
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Self __tmp = *this;
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __tmp;
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self&
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator--() _GLIBCXX_NOEXCEPT
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Self __tmp = *this;
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __tmp;
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return __x._M_node == __y._M_node; }
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if ! __cpp_lib_three_way_comparison
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return __x._M_node != __y._M_node; }
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr _M_node;
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   };
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Tp>
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct _Rb_tree_const_iterator
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 147


 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Tp	 value_type;
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const _Tp& reference;
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const _Tp* pointer;
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_iterator<_Tp> iterator;
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef bidirectional_iterator_tag iterator_category;
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef ptrdiff_t			 difference_type;
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_const_iterator<_Tp>		_Self;
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node_base::_Const_Base_ptr	_Base_ptr;
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const _Rb_tree_node<_Tp>*			_Link_type;
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_const_iterator() _GLIBCXX_NOEXCEPT
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node() { }
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       explicit
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__it._M_node) { }
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_const_cast() const _GLIBCXX_NOEXCEPT
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       reference
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator*() const _GLIBCXX_NOEXCEPT
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pointer
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator->() const _GLIBCXX_NOEXCEPT
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self&
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator++() _GLIBCXX_NOEXCEPT
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Self __tmp = *this;
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __tmp;
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self&
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator--() _GLIBCXX_NOEXCEPT
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 148


 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Self __tmp = *this;
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __tmp;
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return __x._M_node == __y._M_node; }
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if ! __cpp_lib_three_way_comparison
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return __x._M_node != __y._M_node; }
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr _M_node;
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     };
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   void
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_insert_and_rebalance(const bool __insert_left,
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				_Rb_tree_node_base* __x,
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				_Rb_tree_node_base* __p,
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				_Rb_tree_node_base& __header) throw ();
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_node_base*
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_rebalance_for_erase(_Rb_tree_node_base* const __z,
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			       _Rb_tree_node_base& __header) throw ();
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201402L
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Cmp, typename _SfinaeType, typename = __void_t<>>
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct __has_is_transparent
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     { };
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Cmp, typename _SfinaeType>
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct __has_is_transparent<_Cmp, _SfinaeType,
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				__void_t<typename _Cmp::is_transparent>>
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     { typedef void type; };
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Cmp, typename _SfinaeType>
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     using __has_is_transparent_t
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       = typename __has_is_transparent<_Cmp, _SfinaeType>::type;
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus > 201402L
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Tree1, typename _Cmp2>
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct _Rb_tree_merge_helper { };
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc = allocator<_Val> >
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     class _Rb_tree
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	rebind<_Rb_tree_node<_Val> >::other _Node_allocator;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 149


 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef __gnu_cxx::__alloc_traits<_Node_allocator> _Alloc_traits;
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     protected:
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node_base* 		_Base_ptr;
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const _Rb_tree_node_base* 	_Const_Base_ptr;
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node<_Val>* 		_Link_type;
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const _Rb_tree_node<_Val>*	_Const_Link_type;
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     private:
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Functor recycling a pool of nodes and using allocation once the pool
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // is empty.
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       struct _Reuse_or_alloc_node
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Reuse_or_alloc_node(_Rb_tree& __t)
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: _M_root(__t._M_root()), _M_nodes(__t._M_rightmost()), _M_t(__t)
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (_M_root)
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _M_root->_M_parent = 0;
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (_M_nodes->_M_left)
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_M_nodes = _M_nodes->_M_left;
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_nodes = 0;
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Reuse_or_alloc_node(const _Reuse_or_alloc_node&) = delete;
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	~_Reuse_or_alloc_node()
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{ _M_t._M_erase(static_cast<_Link_type>(_M_root)); }
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	template<typename _Arg>
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  operator()(const _Arg& __arg)
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  operator()(_Arg&& __arg)
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _Link_type __node = static_cast<_Link_type>(_M_extract());
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__node)
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_M_t._M_destroy_node(__node);
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_M_t._M_construct_node(__node, _GLIBCXX_FORWARD(_Arg, __arg));
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return __node;
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg));
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       private:
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Base_ptr
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_extract()
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 150


 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (!_M_nodes)
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _M_nodes;
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Base_ptr __node = _M_nodes;
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_nodes = _M_nodes->_M_parent;
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (_M_nodes)
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (_M_nodes->_M_right == __node)
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		{
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  _M_nodes->_M_right = 0;
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  if (_M_nodes->_M_left)
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		    {
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      _M_nodes = _M_nodes->_M_left;
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      while (_M_nodes->_M_right)
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			_M_nodes = _M_nodes->_M_right;
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      if (_M_nodes->_M_left)
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			_M_nodes = _M_nodes->_M_left;
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		    }
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		}
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      else // __node is on the left.
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_M_nodes->_M_left = 0;
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_root = 0;
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __node;
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Base_ptr _M_root;
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Base_ptr _M_nodes;
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Rb_tree& _M_t;
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       };
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Functor similar to the previous one but without any pool of nodes to
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // recycle.
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       struct _Alloc_node
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Alloc_node(_Rb_tree& __t)
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: _M_t(__t) { }
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	template<typename _Arg>
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  operator()(const _Arg& __arg) const
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  operator()(_Arg&& __arg) const
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       private:
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Rb_tree& _M_t;
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       };
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 151


 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Key 				key_type;
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Val 				value_type;
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef value_type* 			pointer;
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const value_type* 		const_pointer;
 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef value_type& 			reference;
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const value_type& 		const_reference;
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef size_t 				size_type;
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef ptrdiff_t 			difference_type;
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Alloc 				allocator_type;
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Node_allocator&
 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl; }
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const _Node_allocator&
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_Node_allocator() const _GLIBCXX_NOEXCEPT
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl; }
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       allocator_type
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return allocator_type(_M_get_Node_allocator()); }
 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     protected:
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_node()
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_construct_node(_Link_type __node, const value_type& __x)
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__try
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { get_allocator().construct(__node->_M_valptr(), __x); }
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__catch(...)
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_put_node(__node);
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __throw_exception_again;
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_create_node(const value_type& __x)
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type __tmp = _M_get_node();
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_construct_node(__tmp, __x);
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __tmp;
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
 612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_construct_node(_Link_type __node, _Args&&... __args)
 614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 152


 615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __try
 616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      ::new(__node) _Rb_tree_node<_Val>;
 618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _Alloc_traits::construct(_M_get_Node_allocator(),
 619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				       __node->_M_valptr(),
 620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				       std::forward<_Args>(__args)...);
 621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
 622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __catch(...)
 623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __node->~_Rb_tree_node<_Val>();
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _M_put_node(__node);
 626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __throw_exception_again;
 627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
 628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_create_node(_Args&&... __args)
 633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type __tmp = _M_get_node();
 635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __tmp;
 637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	get_allocator().destroy(__p->_M_valptr());
 645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__p->~_Rb_tree_node<_Val>();
 648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_destroy_node(__p);
 655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_put_node(__p);
 656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
 659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type
 660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_clone_node(_Const_Link_type __x, _NodeGen& __node_gen)
 661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type __tmp = __node_gen(*__x->_M_valptr());
 663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __tmp->_M_color = __x->_M_color;
 664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __tmp->_M_left = 0;
 665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __tmp->_M_right = 0;
 666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __tmp;
 667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     protected:
 670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if _GLIBCXX_INLINE_VERSION
 671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Key_compare>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 153


 672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Unused _Is_pod_comparator is kept as it is part of mangled name.
 674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Key_compare,
 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
 676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	struct _Rb_tree_impl
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: public _Node_allocator
 679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	, public _Rb_tree_key_compare<_Key_compare>
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	, public _Rb_tree_header
 681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  typedef _Rb_tree_key_compare<_Key_compare> _Base_key_compare;
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl()
 685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _GLIBCXX_NOEXCEPT_IF(
 686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		is_nothrow_default_constructible<_Node_allocator>::value
 687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		&& is_nothrow_default_constructible<_Base_key_compare>::value )
 688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator()
 689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(const _Rb_tree_impl& __x)
 692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(_Alloc_traits::_S_select_on_copy(__x))
 693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  , _Base_key_compare(__x._M_key_compare)
 694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(const _Key_compare& __comp, const _Node_allocator& __a)
 698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(__a), _Base_key_compare(__comp)
 699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(_Rb_tree_impl&&) = default;
 702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  explicit
 704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(_Node_allocator&& __a)
 705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(std::move(__a))
 706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(_Rb_tree_impl&& __x, _Node_allocator&& __a)
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(std::move(__a)),
 710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _Base_key_compare(std::move(__x)),
 711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _Rb_tree_header(std::move(__x))
 712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	};
 719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_impl<_Compare> _M_impl;
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     protected:
 723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr&
 724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_root() _GLIBCXX_NOEXCEPT
 725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_parent; }
 726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Base_ptr
 728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_root() const _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 154


 729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_parent; }
 730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr&
 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_leftmost() _GLIBCXX_NOEXCEPT
 733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_left; }
 734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Base_ptr
 736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_leftmost() const _GLIBCXX_NOEXCEPT
 737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_left; }
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr&
 740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_rightmost() _GLIBCXX_NOEXCEPT
 741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_right; }
 742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Base_ptr
 744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_rightmost() const _GLIBCXX_NOEXCEPT
 745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_right; }
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_begin() _GLIBCXX_NOEXCEPT
 749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Link_type
 752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_begin() const _GLIBCXX_NOEXCEPT
 753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return static_cast<_Const_Link_type>
 755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  (this->_M_impl._M_header._M_parent);
 756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_end() _GLIBCXX_NOEXCEPT
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Base_ptr
 763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_end() const _GLIBCXX_NOEXCEPT
 764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static const _Key&
 767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_key(_Const_Link_type __x)
 768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// If we're asking for the key we're presumably using the comparison
 771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// object, and so this is a good place to sanity check it.
 772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	static_assert(__is_invocable<_Compare&, const _Key&, const _Key&>{},
 773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      "comparison object must be invocable "
 774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      "with two arguments of key type");
 775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** # if __cplusplus >= 201703L
 776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// 2542. Missing const requirements for associative containers
 778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if constexpr (__is_invocable<_Compare&, const _Key&, const _Key&>{})
 779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  static_assert(
 780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      is_invocable_v<const _Compare&, const _Key&, const _Key&>,
 781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      "comparison object must be invocable as const");
 782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** # endif // C++17
 783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif // C++11
 784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _KeyOfValue()(*__x->_M_valptr());
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 155


 786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Link_type
 789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_left); }
 791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Const_Link_type
 793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Const_Link_type>(__x->_M_left); }
 795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Link_type
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Const_Link_type
 801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Const_Link_type>(__x->_M_right); }
 803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static const _Key&
 805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_key(_Const_Base_ptr __x)
 806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _S_key(static_cast<_Const_Link_type>(__x)); }
 807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Base_ptr
 809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Rb_tree_node_base::_S_minimum(__x); }
 811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Const_Base_ptr
 813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_minimum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Rb_tree_node_base::_S_minimum(__x); }
 815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Base_ptr
 817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Rb_tree_node_base::_S_maximum(__x); }
 819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Const_Base_ptr
 821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_maximum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Rb_tree_node_base::_S_maximum(__x); }
 823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
 825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_iterator<value_type>       iterator;
 826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_const_iterator<value_type> const_iterator;
 827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef std::reverse_iterator<iterator>       reverse_iterator;
 829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
 830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus > 201402L
 832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       using node_type = _Node_handle<_Key, _Val, _Node_allocator>;
 833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       using insert_return_type = _Node_insert_return<
 834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	conditional_t<is_same_v<_Key, _Val>, const_iterator, iterator>,
 835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	node_type>;
 836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_insert_unique_pos(const key_type& __k);
 840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_insert_equal_pos(const key_type& __k);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 156


 843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_insert_hint_unique_pos(const_iterator __pos,
 846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				    const key_type& __k);
 847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_insert_hint_equal_pos(const_iterator __pos,
 850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				   const key_type& __k);
 851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     private:
 853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg, typename _NodeGen>
 855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
 856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_(_Base_ptr __x, _Base_ptr __y, _Arg&& __v, _NodeGen&);
 857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_node(_Base_ptr __x, _Base_ptr __y, _Link_type __z);
 860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
 862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
 863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_lower(_Base_ptr __y, _Arg&& __v);
 864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
 866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
 867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_equal_lower(_Arg&& __x);
 868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_lower_node(_Base_ptr __p, _Link_type __z);
 871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_equal_lower_node(_Link_type __z);
 874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
 876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
 877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_(_Base_ptr __x, _Base_ptr __y,
 878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		   const value_type& __v, _NodeGen&);
 879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // 233. Insertion hints in associative containers.
 882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_lower(_Base_ptr __y, const value_type& __v);
 884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_equal_lower(const value_type& __x);
 887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
 890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type
 891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_copy(_Const_Link_type __x, _Base_ptr __p, _NodeGen&);
 892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
 894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type
 895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_copy(const _Rb_tree& __x, _NodeGen& __gen)
 896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type __root = _M_copy(__x._M_begin(), _M_end(), __gen);
 898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_leftmost() = _S_minimum(__root);
 899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_rightmost() = _S_maximum(__root);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 157


 900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_impl._M_node_count = __x._M_impl._M_node_count;
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __root;
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type
 905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_copy(const _Rb_tree& __x)
 906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Alloc_node __an(*this);
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _M_copy(__x, __an);
 909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
 912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_erase(_Link_type __x);
 913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_lower_bound(_Link_type __x, _Base_ptr __y,
 916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		     const _Key& __k);
 917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
 920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		     const _Key& __k) const;
 921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_upper_bound(_Link_type __x, _Base_ptr __y,
 924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		     const _Key& __k);
 925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
 927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_upper_bound(_Const_Link_type __x, _Const_Base_ptr __y,
 928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		     const _Key& __k) const;
 929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
 931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // allocation/deallocation
 932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree() { }
 934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree() = default;
 936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(const _Compare& __comp,
 939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       const allocator_type& __a = allocator_type())
 940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(__comp, _Node_allocator(__a)) { }
 941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(const _Rb_tree& __x)
 943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(__x._M_impl)
 944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__x._M_root() != 0)
 946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_root() = _M_copy(__x);
 947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(const allocator_type& __a)
 951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(_Node_allocator(__a))
 952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(const _Rb_tree& __x, const allocator_type& __a)
 955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(__x._M_impl._M_key_compare, _Node_allocator(__a))
 956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 158


 957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__x._M_root() != nullptr)
 958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_root() = _M_copy(__x);
 959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(_Rb_tree&&) = default;
 962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, const allocator_type& __a)
 964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _Rb_tree(std::move(__x), _Node_allocator(__a))
 965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     private:
 968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a, true_type)
 969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       noexcept(is_nothrow_default_constructible<_Compare>::value)
 970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(std::move(__x._M_impl), std::move(__a))
 971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a, false_type)
 974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(__x._M_impl._M_key_compare, std::move(__a))
 975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__x._M_root() != nullptr)
 977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_move_data(__x, false_type{});
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
 981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a)
 982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       noexcept( noexcept(
 983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Rb_tree(std::declval<_Rb_tree&&>(), std::declval<_Node_allocator&&>(),
 984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		 std::declval<typename _Alloc_traits::is_always_equal>())) )
 985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _Rb_tree(std::move(__x), std::move(__a),
 986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		 typename _Alloc_traits::is_always_equal{})
 987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       ~_Rb_tree() _GLIBCXX_NOEXCEPT
 991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _M_erase(_M_begin()); }
 992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree&
 994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator=(const _Rb_tree& __x);
 995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Accessors.
 997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Compare
 998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       key_comp() const
 999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_impl._M_key_compare; }
1000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       begin() _GLIBCXX_NOEXCEPT
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(this->_M_impl._M_header._M_left); }
1004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
1006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       begin() const _GLIBCXX_NOEXCEPT
1007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return const_iterator(this->_M_impl._M_header._M_left); }
1008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       end() _GLIBCXX_NOEXCEPT
1011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(&this->_M_impl._M_header); }
1012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 159


1014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       end() const _GLIBCXX_NOEXCEPT
1015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return const_iterator(&this->_M_impl._M_header); }
1016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       reverse_iterator
1018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       rbegin() _GLIBCXX_NOEXCEPT
1019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return reverse_iterator(end()); }
1020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_reverse_iterator
1022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       rbegin() const _GLIBCXX_NOEXCEPT
1023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return const_reverse_iterator(end()); }
1024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       reverse_iterator
1026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       rend() _GLIBCXX_NOEXCEPT
1027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return reverse_iterator(begin()); }
1028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_reverse_iterator
1030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       rend() const _GLIBCXX_NOEXCEPT
1031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return const_reverse_iterator(begin()); }
1032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_NODISCARD bool
1034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       empty() const _GLIBCXX_NOEXCEPT
1035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_impl._M_node_count == 0; }
1036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       size_type
1038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       size() const _GLIBCXX_NOEXCEPT
1039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_impl._M_node_count; }
1040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       size_type
1042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       max_size() const _GLIBCXX_NOEXCEPT
1043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Alloc_traits::max_size(_M_get_Node_allocator()); }
1044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       swap(_Rb_tree& __t)
1047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Compare>::value);
1048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Insert/erase.
1050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
1052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	pair<iterator, bool>
1053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_unique(_Arg&& __x);
1054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
1056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_equal(_Arg&& __x);
1058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg, typename _NodeGen>
1060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_unique_(const_iterator __pos, _Arg&& __x, _NodeGen&);
1062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
1064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_unique_(const_iterator __pos, _Arg&& __x)
1066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return _M_insert_unique_(__pos, std::forward<_Arg>(__x), __an);
1069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 160


1071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg, typename _NodeGen>
1072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_equal_(const_iterator __pos, _Arg&& __x, _NodeGen&);
1074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
1076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_equal_(const_iterator __pos, _Arg&& __x)
1078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return _M_insert_equal_(__pos, std::forward<_Arg>(__x), __an);
1081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
1084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	pair<iterator, bool>
1085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_emplace_unique(_Args&&... __args);
1086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
1088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_emplace_equal(_Args&&... __args);
1090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
1092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_emplace_hint_unique(const_iterator __pos, _Args&&... __args);
1094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
1096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_emplace_hint_equal(const_iterator __pos, _Args&&... __args);
1098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Iter>
1100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	using __same_value_type
1101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  = is_same<value_type, typename iterator_traits<_Iter>::value_type>;
1102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__enable_if_t<__same_value_type<_InputIterator>::value>
1105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
1106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
1110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__enable_if_t<!__same_value_type<_InputIterator>::value>
1114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
1115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_emplace_unique(*__first);
1118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__enable_if_t<__same_value_type<_InputIterator>::value>
1122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_equal(_InputIterator __first, _InputIterator __last)
1123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_equal_(end(), *__first, __an);
1127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 161


1128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__enable_if_t<!__same_value_type<_InputIterator>::value>
1131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_equal(_InputIterator __first, _InputIterator __last)
1132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_emplace_equal(*__first);
1136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<iterator, bool>
1139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_unique(const value_type& __x);
1140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_equal(const value_type& __x);
1143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
1145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_unique_(const_iterator __pos, const value_type& __x,
1147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			  _NodeGen&);
1148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_unique_(const_iterator __pos, const value_type& __x)
1151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Alloc_node __an(*this);
1153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _M_insert_unique_(__pos, __x, __an);
1154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
1157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_equal_(const_iterator __pos, const value_type& __x,
1159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			 _NodeGen&);
1160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_equal_(const_iterator __pos, const value_type& __x)
1162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Alloc_node __an(*this);
1164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _M_insert_equal_(__pos, __x, __an);
1165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
1170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
1174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_equal(_InputIterator __first, _InputIterator __last)
1179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_equal_(end(), *__first, __an);
1183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 162


1185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     private:
1187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_erase_aux(const_iterator __position);
1189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_erase_aux(const_iterator __first, const_iterator __last);
1192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
1194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // DR 130. Associative erase should return an iterator.
1197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_ABI_TAG_CXX11
1198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(const_iterator __position)
1200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__glibcxx_assert(__position != end());
1202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	const_iterator __result = __position;
1203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	++__result;
1204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase_aux(__position);
1205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __result._M_const_cast();
1206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // LWG 2059.
1209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_ABI_TAG_CXX11
1210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(iterator __position)
1212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__glibcxx_assert(__position != end());
1214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator __result = __position;
1215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	++__result;
1216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase_aux(__position);
1217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __result;
1218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(iterator __position)
1222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__glibcxx_assert(__position != end());
1224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase_aux(__position);
1225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(const_iterator __position)
1229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__glibcxx_assert(__position != end());
1231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase_aux(__position);
1232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       size_type
1236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(const key_type& __x);
1237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // DR 130. Associative erase should return an iterator.
1241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_ABI_TAG_CXX11
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 163


1242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(const_iterator __first, const_iterator __last)
1244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase_aux(__first, __last);
1246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __last._M_const_cast();
1247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(iterator __first, iterator __last)
1251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _M_erase_aux(__first, __last); }
1252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(const_iterator __first, const_iterator __last)
1255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _M_erase_aux(__first, __last); }
1256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       clear() _GLIBCXX_NOEXCEPT
1260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase(_M_begin());
1262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_impl._M_reset();
1263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Set operations.
1266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       find(const key_type& __k);
1268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
1270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       find(const key_type& __k) const;
1271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       size_type
1273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       count(const key_type& __k) const;
1274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       lower_bound(const key_type& __k)
1277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_lower_bound(_M_begin(), _M_end(), __k); }
1278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
1280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       lower_bound(const key_type& __k) const
1281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_lower_bound(_M_begin(), _M_end(), __k); }
1282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       upper_bound(const key_type& __k)
1285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_upper_bound(_M_begin(), _M_end(), __k); }
1286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
1288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       upper_bound(const key_type& __k) const
1289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_upper_bound(_M_begin(), _M_end(), __k); }
1290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<iterator, iterator>
1292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       equal_range(const key_type& __k);
1293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<const_iterator, const_iterator>
1295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       equal_range(const key_type& __k) const;
1296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201402L
1298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 164


1299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_find_tr(const _Kt& __k)
1302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __const_this->_M_find_tr(__k)._M_const_cast();
1305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	const_iterator
1310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_find_tr(const _Kt& __k) const
1311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __j = _M_lower_bound_tr(__k);
1313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__j != end() && _M_impl._M_key_compare(__k, _S_key(__j._M_node)))
1314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __j = end();
1315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __j;
1316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	size_type
1321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_count_tr(const _Kt& __k) const
1322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __p = _M_equal_range_tr(__k);
1324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return std::distance(__p.first, __p.second);
1325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_lower_bound_tr(const _Kt& __k)
1331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __const_this->_M_lower_bound_tr(__k)._M_const_cast();
1334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	const_iterator
1339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_lower_bound_tr(const _Kt& __k) const
1340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __x = _M_begin();
1342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __y = _M_end();
1343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  while (__x != 0)
1344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (!_M_impl._M_key_compare(_S_key(__x), __k))
1345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__y = __x;
1347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__x = _S_left(__x);
1348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __x = _S_right(__x);
1351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return const_iterator(__y);
1352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 165


1356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_upper_bound_tr(const _Kt& __k)
1358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __const_this->_M_upper_bound_tr(__k)._M_const_cast();
1361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	const_iterator
1366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_upper_bound_tr(const _Kt& __k) const
1367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __x = _M_begin();
1369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __y = _M_end();
1370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  while (__x != 0)
1371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (_M_impl._M_key_compare(__k, _S_key(__x)))
1372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__y = __x;
1374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__x = _S_left(__x);
1375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __x = _S_right(__x);
1378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return const_iterator(__y);
1379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	pair<iterator, iterator>
1384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_equal_range_tr(const _Kt& __k)
1385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __ret = __const_this->_M_equal_range_tr(__k);
1388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return { __ret.first._M_const_cast(), __ret.second._M_const_cast() };
1389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	pair<const_iterator, const_iterator>
1394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_equal_range_tr(const _Kt& __k) const
1395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __low = _M_lower_bound_tr(__k);
1397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __high = __low;
1398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto& __cmp = _M_impl._M_key_compare;
1399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  while (__high != end() && !__cmp(__k, _S_key(__high._M_node)))
1400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    ++__high;
1401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return { __low, __high };
1402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Debugging.
1406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       bool
1407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       __rb_verify() const;
1408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree&
1411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator=(_Rb_tree&&)
1412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       noexcept(_Alloc_traits::_S_nothrow_move()
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 166


1413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       && is_nothrow_move_assignable<_Compare>::value);
1414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Iterator>
1416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_assign_unique(_Iterator, _Iterator);
1418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Iterator>
1420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_assign_equal(_Iterator, _Iterator);
1422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     private:
1424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Move elements from container with equal allocator.
1425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_move_data(_Rb_tree& __x, true_type)
1427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _M_impl._M_move_data(__x._M_impl); }
1428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Move elements from container with possibly non-equal allocator,
1430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // which might result in a copy not a move.
1431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_move_data(_Rb_tree&, false_type);
1433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Move assignment from container with equal allocator.
1435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_move_assign(_Rb_tree&, true_type);
1437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Move assignment from container with possibly non-equal allocator,
1439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // which might result in a copy not a move.
1440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_move_assign(_Rb_tree&, false_type);
1442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus > 201402L
1445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
1446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Re-insert an extracted node.
1447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       insert_return_type
1448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reinsert_node_unique(node_type&& __nh)
1449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	insert_return_type __ret;
1451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__nh.empty())
1452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __ret.position = end();
1453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
1456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    auto __res = _M_get_insert_unique_pos(__nh._M_key());
1458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__res.second)
1459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret.position
1461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
1462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__nh._M_ptr = nullptr;
1463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret.inserted = true;
1464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret.node = std::move(__nh);
1468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret.position = iterator(__res.first);
1469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret.inserted = false;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 167


1470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __ret;
1473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Re-insert an extracted node.
1476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reinsert_node_equal(node_type&& __nh)
1478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator __ret;
1480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__nh.empty())
1481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __ret = end();
1482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
1485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    auto __res = _M_get_insert_equal_pos(__nh._M_key());
1486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__res.second)
1487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __ret = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
1488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __ret = _M_insert_equal_lower_node(__nh._M_ptr);
1490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __nh._M_ptr = nullptr;
1491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __ret;
1493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Re-insert an extracted node.
1496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reinsert_node_hint_unique(const_iterator __hint, node_type&& __nh)
1498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator __ret;
1500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__nh.empty())
1501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __ret = end();
1502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
1505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    auto __res = _M_get_insert_hint_unique_pos(__hint, __nh._M_key());
1506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__res.second)
1507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
1509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__nh._M_ptr = nullptr;
1510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __ret = iterator(__res.first);
1513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __ret;
1515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Re-insert an extracted node.
1518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reinsert_node_hint_equal(const_iterator __hint, node_type&& __nh)
1520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator __ret;
1522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__nh.empty())
1523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __ret = end();
1524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 168


1527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    auto __res = _M_get_insert_hint_equal_pos(__hint, __nh._M_key());
1528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__res.second)
1529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __ret = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
1530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __ret = _M_insert_equal_lower_node(__nh._M_ptr);
1532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __nh._M_ptr = nullptr;
1533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __ret;
1535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Extract a node.
1538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       node_type
1539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       extract(const_iterator __pos)
1540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	auto __ptr = _Rb_tree_rebalance_for_erase(
1542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __pos._M_const_cast()._M_node, _M_impl._M_header);
1543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	--_M_impl._M_node_count;
1544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return { static_cast<_Link_type>(__ptr), _M_get_Node_allocator() };
1545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Extract a node.
1548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       node_type
1549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       extract(const key_type& __k)
1550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	node_type __nh;
1552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	auto __pos = find(__k);
1553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__pos != end())
1554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __nh = extract(const_iterator(__pos));
1555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __nh;
1556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Compare2>
1559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	using _Compatible_tree
1560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  = _Rb_tree<_Key, _Val, _KeyOfValue, _Compare2, _Alloc>;
1561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename, typename>
1563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	friend class _Rb_tree_merge_helper;
1564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Merge from a compatible container into one with unique keys.
1566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Compare2>
1567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_merge_unique(_Compatible_tree<_Compare2>& __src) noexcept
1569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  using _Merge_helper = _Rb_tree_merge_helper<_Rb_tree, _Compare2>;
1571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (auto __i = __src.begin(), __end = __src.end(); __i != __end;)
1572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
1573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto __pos = __i++;
1574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto __res = _M_get_insert_unique_pos(_KeyOfValue()(*__pos));
1575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (__res.second)
1576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		{
1577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  auto& __src_impl = _Merge_helper::_S_get_impl(__src);
1578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  auto __ptr = _Rb_tree_rebalance_for_erase(
1579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      __pos._M_node, __src_impl._M_header);
1580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  --__src_impl._M_node_count;
1581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  _M_insert_node(__res.first, __res.second,
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				 static_cast<_Link_type>(__ptr));
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 169


1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
1585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Merge from a compatible container into one with equivalent keys.
1588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Compare2>
1589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_merge_equal(_Compatible_tree<_Compare2>& __src) noexcept
1591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  using _Merge_helper = _Rb_tree_merge_helper<_Rb_tree, _Compare2>;
1593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (auto __i = __src.begin(), __end = __src.end(); __i != __end;)
1594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
1595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto __pos = __i++;
1596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto __res = _M_get_insert_equal_pos(_KeyOfValue()(*__pos));
1597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (__res.second)
1598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		{
1599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  auto& __src_impl = _Merge_helper::_S_get_impl(__src);
1600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  auto __ptr = _Rb_tree_rebalance_for_erase(
1601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      __pos._M_node, __src_impl._M_header);
1602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  --__src_impl._M_node_count;
1603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  _M_insert_node(__res.first, __res.second,
1604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				 static_cast<_Link_type>(__ptr));
1605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		}
1606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
1607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif // C++17
1609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
1611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator==(const _Rb_tree& __x, const _Rb_tree& __y)
1612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __x.size() == __y.size()
1614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  && std::equal(__x.begin(), __x.end(), __y.begin());
1615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cpp_lib_three_way_comparison
1618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend auto
1619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator<=>(const _Rb_tree& __x, const _Rb_tree& __y)
1620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if constexpr (requires { typename __detail::__synth3way_t<_Val>; })
1622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return std::lexicographical_compare_three_way(__x.begin(), __x.end(),
1623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 							__y.begin(), __y.end(),
1624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 							__detail::__synth3way);
1625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
1628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator<(const _Rb_tree& __x, const _Rb_tree& __y)
1629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return std::lexicographical_compare(__x.begin(), __x.end(),
1631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 					    __y.begin(), __y.end());
1632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool _GLIBCXX_DEPRECATED
1635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator!=(const _Rb_tree& __x, const _Rb_tree& __y)
1636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return !(__x == __y); }
1637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool _GLIBCXX_DEPRECATED
1639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator>(const _Rb_tree& __x, const _Rb_tree& __y)
1640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return __y < __x; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 170


1641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool _GLIBCXX_DEPRECATED
1643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator<=(const _Rb_tree& __x, const _Rb_tree& __y)
1644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return !(__y < __x); }
1645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool _GLIBCXX_DEPRECATED
1647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator>=(const _Rb_tree& __x, const _Rb_tree& __y)
1648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return !(__x < __y); }
1649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     };
1651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     inline void
1655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     swap(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
1656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
1657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     { __x.swap(__y); }
1658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
1663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_move_data(_Rb_tree& __x, false_type)
1665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (_M_get_Node_allocator() == __x._M_get_Node_allocator())
1667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_move_data(__x, true_type());
1668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else
1669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __lbd =
1672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    [&__an](const value_type& __cval)
1673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
1674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto& __val = const_cast<value_type&>(__cval);
1675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      return __an(std::move_if_noexcept(__val));
1676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    };
1677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_root() = _M_copy(__x, __lbd);
1678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     inline void
1684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_move_assign(_Rb_tree& __x, true_type)
1686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       clear();
1688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__x._M_root() != nullptr)
1689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_move_data(__x, true_type());
1690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       std::__alloc_on_move(_M_get_Node_allocator(),
1691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   __x._M_get_Node_allocator());
1692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
1697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 171


1698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_move_assign(_Rb_tree& __x, false_type)
1699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (_M_get_Node_allocator() == __x._M_get_Node_allocator())
1701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _M_move_assign(__x, true_type{});
1702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Try to move each node reusing existing nodes and copying __x nodes
1704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // structure.
1705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Reuse_or_alloc_node __roan(*this);
1706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_impl._M_reset();
1707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__x._M_root() != nullptr)
1708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __lbd =
1710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    [&__roan](const value_type& __cval)
1711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
1712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto& __val = const_cast<value_type&>(__cval);
1713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      return __roan(std::move(__val));
1714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    };
1715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_root() = _M_copy(__x, __lbd);
1716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x.clear();
1717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     inline _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&
1723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     operator=(_Rb_tree&& __x)
1725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     noexcept(_Alloc_traits::_S_nothrow_move()
1726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	     && is_nothrow_move_assignable<_Compare>::value)
1727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_impl._M_key_compare = std::move(__x._M_impl._M_key_compare);
1729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_move_assign(__x, __bool_constant<_Alloc_traits::_S_nothrow_move()>());
1730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return *this;
1731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Iterator>
1736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_assign_unique(_Iterator __first, _Iterator __last)
1739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Reuse_or_alloc_node __roan(*this);
1741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_impl._M_reset();
1742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	for (; __first != __last; ++__first)
1743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_insert_unique_(end(), *__first, __roan);
1744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Iterator>
1749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_assign_equal(_Iterator __first, _Iterator __last)
1752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Reuse_or_alloc_node __roan(*this);
1754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_impl._M_reset();
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 172


1755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	for (; __first != __last; ++__first)
1756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_insert_equal_(end(), *__first, __roan);
1757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&
1763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     operator=(const _Rb_tree& __x)
1765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (this != &__x)
1767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  // Note that _Key may be a constant type.
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
1771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
1772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto& __this_alloc = this->_M_get_Node_allocator();
1773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto& __that_alloc = __x._M_get_Node_allocator();
1774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (!_Alloc_traits::_S_always_equal()
1775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  && __this_alloc != __that_alloc)
1776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		{
1777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  // Replacement allocator cannot free existing storage, we need
1778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  // to erase nodes first.
1779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  clear();
1780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  std::__alloc_on_copy(__this_alloc, __that_alloc);
1781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		}
1782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
1783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Reuse_or_alloc_node __roan(*this);
1786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_impl._M_reset();
1787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_impl._M_key_compare = __x._M_impl._M_key_compare;
1788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__x._M_root() != 0)
1789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_root() = _M_copy(__x, __roan);
1790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return *this;
1793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg, typename _NodeGen>
1799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _NodeGen>
1801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_(_Base_ptr __x, _Base_ptr __p,
1805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		 _Arg&& __v,
1807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		 const _Val& __v,
1809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		 _NodeGen& __node_gen)
1811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 173


1812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	bool __insert_left = (__x != 0 || __p == _M_end()
1813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
1814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 							_S_key(__p)));
1815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
1817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
1819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				      this->_M_impl._M_header);
1820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	++_M_impl._M_node_count;
1821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return iterator(__z);
1822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg>
1828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_lower(_Base_ptr __p, _Arg&& __v)
1833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_lower(_Base_ptr __p, const _Val& __v)
1835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       bool __insert_left = (__p == _M_end()
1838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			    || !_M_impl._M_key_compare(_S_key(__p),
1839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 						       _KeyOfValue()(__v)));
1840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type __z = _M_create_node(_GLIBCXX_FORWARD(_Arg, __v));
1842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
1844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				    this->_M_impl._M_header);
1845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       ++_M_impl._M_node_count;
1846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return iterator(__z);
1847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg>
1853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_equal_lower(_Arg&& __v)
1858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_equal_lower(const _Val& __v)
1860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type __x = _M_begin();
1863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr __y = _M_end();
1864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
1865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x;
1867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = !_M_impl._M_key_compare(_S_key(__x), _KeyOfValue()(__v)) ?
1868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_S_left(__x) : _S_right(__x);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 174


1869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return _M_insert_lower(__y, _GLIBCXX_FORWARD(_Arg, __v));
1871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KoV,
1874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _NodeGen>
1876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::_Link_type
1877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::
1878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_copy(_Const_Link_type __x, _Base_ptr __p, _NodeGen& __node_gen)
1879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// Structural copy. __x and __p must be non-null.
1881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type __top = _M_clone_node(__x, __node_gen);
1882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__top->_M_parent = __p;
1883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__try
1885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__x->_M_right)
1887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __top->_M_right = _M_copy(_S_right(__x), __top, __node_gen);
1888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __p = __top;
1889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __x = _S_left(__x);
1890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    while (__x != 0)
1892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_Link_type __y = _M_clone_node(__x, __node_gen);
1894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__p->_M_left = __y;
1895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__y->_M_parent = __p;
1896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		if (__x->_M_right)
1897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  __y->_M_right = _M_copy(_S_right(__x), __y, __node_gen);
1898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__p = __y;
1899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__x = _S_left(__x);
1900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__catch(...)
1903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_erase(__top);
1905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __throw_exception_again;
1906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __top;
1908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
1913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 2289              		.loc 29 1913 5 is_stmt 1 view -0
 2290              		.cfi_startproc
 2291              		@ args = 0, pretend = 0, frame = 0
 2292              		@ frame_needed = 0, uses_anonymous_args = 0
1914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_erase(_Link_type __x)
1915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Erase without rebalancing.
1917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
 2293              		.loc 29 1917 18 view .LVU495
 2294 0000 E8B1     		cbz	r0, .L106
1913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_erase(_Link_type __x)
 2295              		.loc 29 1913 5 is_stmt 0 view .LVU496
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 175


 2296 0002 38B5     		push	{r3, r4, r5, lr}
 2297              		.cfi_def_cfa_offset 16
 2298              		.cfi_offset 3, -16
 2299              		.cfi_offset 4, -12
 2300              		.cfi_offset 5, -8
 2301              		.cfi_offset 14, -4
 2302 0004 0446     		mov	r4, r0
 2303              	.LVL131:
 2304              	.L97:
 2305              	.LBB5360:
 2306              	.LBB5361:
 2307              	.LBI5361:
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 2308              		.loc 29 797 7 is_stmt 1 view .LVU497
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 2309              		.loc 29 797 7 is_stmt 0 view .LVU498
 2310 0006 2546     		mov	r5, r4
 2311              	.LBE5361:
1918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_erase(_S_right(__x));
 2312              		.loc 29 1919 12 view .LVU499
 2313 0008 E068     		ldr	r0, [r4, #12]
 2314 000a FFF7F9FF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiE
 2315              	.LVL132:
 2316              	.LBB5362:
 2317              	.LBI5362:
 789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_left); }
 2318              		.loc 29 789 7 is_stmt 1 view .LVU500
 2319              	.LBB5363:
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 2320              		.loc 29 790 52 is_stmt 0 view .LVU501
 2321 000e A468     		ldr	r4, [r4, #8]
 2322              	.LVL133:
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 2323              		.loc 29 790 52 view .LVU502
 2324              	.LBE5363:
 2325              	.LBE5362:
 2326              	.LBB5364:
 2327              	.LBI5364:
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 2328              		.loc 29 652 7 is_stmt 1 view .LVU503
 2329              	.LBB5365:
 2330              	.LBI5365:
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 2331              		.loc 29 641 7 view .LVU504
 2332              	.LBB5366:
 2333              	.LBI5366:
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 2334              		.loc 25 527 2 view .LVU505
 2335              	.LBB5367:
 2336              	.LBI5367:
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			  , __t * sizeof(_Tp)
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			 );
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 176


 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       size_type
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return _M_max_size(); }
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up, typename... _Args>
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	construct(_Up* __p, _Args&&... __args)
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up>
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	destroy(_Up* __p)
 2337              		.loc 20 154 2 view .LVU506
 2338              	.LBB5368:
 2339              	.LBI5368:
 2340              		.file 30 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Pair implementation -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 177


  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Copyright (c) 1996,1997
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** /** @file bits/stl_pair.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #ifndef _STL_PAIR_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #define _STL_PAIR_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # include <type_traits> // for std::__decay_and_strip, std::is_reference_v
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus > 201703L
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # include <compare>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # define __cpp_lib_constexpr_utility 201811L
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** {
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /**
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @addtogroup utilities
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @{
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    */
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Tag type for piecewise construction of std::pair objects.
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   struct piecewise_construct_t { explicit piecewise_construct_t() = default; };
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Tag for piecewise construction of std::pair objects.
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   _GLIBCXX17_INLINE constexpr piecewise_construct_t piecewise_construct =
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     piecewise_construct_t();
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// @cond undocumented
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // Forward declarations.
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename...>
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     class tuple;
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<std::size_t...>
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _Index_tuple;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // Concept utility functions, reused in conditionally-explicit
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 178


  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // constructors.
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // See PR 70437, don't look at is_constructible or
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // is_convertible if the types are the same to
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // avoid querying those properties for incomplete types.
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template <bool, typename _T1, typename _T2>
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _PCC
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ConstructiblePair()
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, const _U2&>>::value;
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_convertible<const _U1&, _T1>,
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_convertible<const _U2&, _T2>>::value;
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, _U2&&>>::value;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_convertible<_U1&&, _T1>,
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_convertible<_U2&&, _T2>>::value;
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _CopyMovePair()
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __do_converts = __and_<is_convertible<const _U1&, _T1>,
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				  is_convertible<_U2&&, _T2>>;
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __converts = typename conditional<__implicit,
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __do_converts,
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __not_<__do_converts>>::type;
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, _U2&&>,
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      __converts
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      >::value;
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveCopyPair()
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __do_converts = __and_<is_convertible<_U1&&, _T1>,
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				  is_convertible<const _U2&, _T2>>;
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __converts = typename conditional<__implicit,
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __do_converts,
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __not_<__do_converts>>::type;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 179


 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, const _U2&&>,
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      __converts
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      >::value;
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template <typename _T1, typename _T2>
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _PCC<false, _T1, _T2>
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ConstructiblePair()
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif // C++11
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _U1, typename _U2> class __pair_base
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   {
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     template<typename _T1, typename _T2> friend struct pair;
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base() = default;
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     ~__pair_base() = default;
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base(const __pair_base&) = default;
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base& operator=(const __pair_base&) = delete;
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif // C++11
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// @endcond
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  /**
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @tparam _T1  Type of first object.
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @tparam _T2  Type of second object.
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  <https://gcc.gnu.org/onlinedocs/libstdc++/manual/utilities.html>
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 180


 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct pair
 2341              		.loc 30 211 12 view .LVU507
 2342              	.LBB5369:
 2343              	.LBI5369:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2344              		.loc 26 678 7 view .LVU508
 2345              	.LBB5370:
 2346              	.LBI5370:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2347              		.loc 26 276 7 view .LVU509
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2348              		.loc 26 276 7 is_stmt 0 view .LVU510
 2349              	.LBE5370:
 2350              	.LBB5371:
 2351              	.LBI5371:
 2352              		.loc 25 735 5 is_stmt 1 view .LVU511
 2353              		.loc 25 735 5 is_stmt 0 view .LVU512
 2354              	.LBE5371:
 2355              	.LBB5372:
 2356              	.LBI5372:
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2357              		.loc 26 333 7 is_stmt 1 view .LVU513
 2358              	.LBB5373:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 2359              		.loc 26 335 15 is_stmt 0 view .LVU514
 2360 0010 AB6A     		ldr	r3, [r5, #40]
 2361              	.LVL134:
 2362              	.LBB5374:
 2363              	.LBI5374:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2364              		.loc 26 350 7 is_stmt 1 view .LVU515
 2365              	.LBB5375:
 2366              	.LBB5376:
 2367              	.LBI5376:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2368              		.loc 25 491 7 view .LVU516
 2369              	.LBB5377:
 2370              	.LBB5378:
 2371              	.LBI5378:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2372              		.loc 20 120 7 view .LVU517
 2373              	.LBB5379:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2374              		.loc 20 133 19 is_stmt 0 view .LVU518
 2375 0012 1846     		mov	r0, r3
 2376              	.LBE5379:
 2377              	.LBE5378:
 2378              	.LBE5377:
 2379              	.LBE5376:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2380              		.loc 26 353 2 view .LVU519
 2381 0014 1BB1     		cbz	r3, .L95
 2382              	.LBE5375:
 2383              	.LBE5374:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 2384              		.loc 26 336 35 view .LVU520
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 181


 2385 0016 296B     		ldr	r1, [r5, #48]
 2386              	.LBB5385:
 2387              	.LBB5384:
 2388              	.LBB5383:
 2389              	.LBB5382:
 2390              	.LBB5381:
 2391              	.LBB5380:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2392              		.loc 20 133 19 view .LVU521
 2393 0018 C91A     		subs	r1, r1, r3
 2394 001a FFF7FEFF 		bl	_ZdlPvj
 2395              	.LVL135:
 2396              	.L95:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2397              		.loc 20 133 19 view .LVU522
 2398              	.LBE5380:
 2399              	.LBE5381:
 2400              	.LBE5382:
 2401              	.LBE5383:
 2402              	.LBE5384:
 2403              	.LBE5385:
 2404              	.LBB5386:
 2405              	.LBI5386:
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2406              		.loc 26 128 14 is_stmt 1 view .LVU523
 2407              	.LBB5387:
 2408              	.LBI5387:
 2409              		.loc 19 162 7 view .LVU524
 2410              	.LBB5388:
 2411              	.LBI5388:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2412              		.loc 20 89 7 view .LVU525
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2413              		.loc 20 89 7 is_stmt 0 view .LVU526
 2414              	.LBE5388:
 2415              	.LBE5387:
 2416              	.LBE5386:
 2417              	.LBE5373:
 2418              	.LBE5372:
 2419              	.LBE5369:
 2420              	.LBB5389:
 2421              	.LBI5389:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 2422              		.loc 18 657 7 is_stmt 1 view .LVU527
 2423              	.LBB5390:
 2424              	.LBI5390:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2425              		.loc 18 229 7 view .LVU528
 2426              	.LBB5391:
 2427              	.LBB5392:
 2428              	.LBI5392:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2429              		.loc 18 221 7 view .LVU529
 2430              	.LBB5393:
 2431              	.LBI5393:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2432              		.loc 18 186 7 view .LVU530
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 182


 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2433              		.loc 18 186 7 is_stmt 0 view .LVU531
 2434              	.LBE5393:
 2435              	.LBE5392:
 2436              	.LBB5399:
 2437              	.LBI5399:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2438              		.loc 18 236 7 is_stmt 1 view .LVU532
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2439              		.loc 18 236 7 is_stmt 0 view .LVU533
 2440              	.LBE5399:
 2441              	.LBB5407:
 2442              	.LBB5395:
 2443              	.LBB5394:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2444              		.loc 18 187 28 view .LVU534
 2445 001e 2869     		ldr	r0, [r5, #16]
 2446              	.LVL136:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2447              		.loc 18 187 28 view .LVU535
 2448              	.LBE5394:
 2449              	.LBE5395:
 2450              	.LBB5396:
 2451              	.LBI5396:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2452              		.loc 18 200 7 is_stmt 1 view .LVU536
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2453              		.loc 18 200 7 is_stmt 0 view .LVU537
 2454              	.LBE5396:
 2455              	.LBE5407:
 2456              	.LBB5408:
 2457              	.LBB5400:
 2458              	.LBB5401:
 2459              	.LBI5401:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2460              		.loc 25 491 7 is_stmt 1 view .LVU538
 2461              	.LBB5402:
 2462              	.LBI5402:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2463              		.loc 20 120 7 view .LVU539
 2464              	.LBE5402:
 2465              	.LBE5401:
 2466              	.LBE5400:
 2467              	.LBE5408:
 2468              	.LBB5409:
 2469              	.LBB5398:
 2470              	.LBB5397:
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2471              		.loc 18 203 57 is_stmt 0 view .LVU540
 2472 0020 05F11803 		add	r3, r5, #24
 2473              	.LVL137:
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2474              		.loc 18 203 57 view .LVU541
 2475              	.LBE5397:
 2476              	.LBE5398:
 2477              	.LBE5409:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 183


 2478              		.loc 18 231 2 view .LVU542
 2479 0024 9842     		cmp	r0, r3
 2480 0026 03D0     		beq	.L96
 2481              	.LBB5410:
 2482              	.LBB5406:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2483              		.loc 18 237 34 view .LVU543
 2484 0028 A969     		ldr	r1, [r5, #24]
 2485              	.LBB5405:
 2486              	.LBB5404:
 2487              	.LBB5403:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2488              		.loc 20 133 19 view .LVU544
 2489 002a 0131     		adds	r1, r1, #1
 2490              	.LVL138:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2491              		.loc 20 133 19 view .LVU545
 2492 002c FFF7FEFF 		bl	_ZdlPvj
 2493              	.LVL139:
 2494              	.L96:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2495              		.loc 20 133 19 view .LVU546
 2496              	.LBE5403:
 2497              	.LBE5404:
 2498              	.LBE5405:
 2499              	.LBE5406:
 2500              	.LBE5410:
 2501              	.LBE5391:
 2502              	.LBE5390:
 2503              	.LBB5411:
 2504              	.LBI5411:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2505              		.loc 18 150 14 is_stmt 1 view .LVU547
 2506              	.LBB5412:
 2507              	.LBI5412:
 2508              		.loc 19 162 7 view .LVU548
 2509              	.LBB5413:
 2510              	.LBI5413:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2511              		.loc 20 89 7 view .LVU549
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2512              		.loc 20 89 7 is_stmt 0 view .LVU550
 2513              	.LBE5413:
 2514              	.LBE5412:
 2515              	.LBE5411:
 2516              	.LBE5389:
 2517              	.LBE5368:
 2518              	.LBE5367:
 2519              	.LBE5366:
 2520              	.LBE5365:
 2521              	.LBB5414:
 2522              	.LBI5414:
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 2523              		.loc 29 587 7 is_stmt 1 view .LVU551
 2524              	.LBB5415:
 2525              	.LBI5415:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 184


 2526              		.loc 25 491 7 view .LVU552
 2527              	.LBB5416:
 2528              	.LBI5416:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2529              		.loc 20 120 7 view .LVU553
 2530              	.LBB5417:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2531              		.loc 20 133 19 is_stmt 0 view .LVU554
 2532 0030 3421     		movs	r1, #52
 2533 0032 2846     		mov	r0, r5
 2534 0034 FFF7FEFF 		bl	_ZdlPvj
 2535              	.LVL140:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2536              		.loc 20 133 19 view .LVU555
 2537              	.LBE5417:
 2538              	.LBE5416:
 2539              	.LBE5415:
 2540              	.LBE5414:
 2541              	.LBE5364:
 2542              	.LBE5360:
1917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 2543              		.loc 29 1917 18 is_stmt 1 view .LVU556
 2544 0038 002C     		cmp	r4, #0
 2545 003a E4D1     		bne	.L97
1920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type __y = _S_left(__x);
1921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_drop_node(__x);
1922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = __y;
1923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 2546              		.loc 29 1924 5 is_stmt 0 view .LVU557
 2547 003c 38BD     		pop	{r3, r4, r5, pc}
 2548              	.LVL141:
 2549              	.L106:
 2550              		.cfi_def_cfa_offset 0
 2551              		.cfi_restore 3
 2552              		.cfi_restore 4
 2553              		.cfi_restore 5
 2554              		.cfi_restore 14
 2555              		.loc 29 1924 5 view .LVU558
 2556 003e 7047     		bx	lr
 2557              		.cfi_endproc
 2558              	.LFE6213:
 2560              		.section	.text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4l
 2561              		.align	1
 2562              		.p2align 2,,3
 2563              		.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ES
 2564              		.syntax unified
 2565              		.thumb
 2566              		.thumb_func
 2567              		.fpu fpv5-d16
 2569              	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pa
 2570              	.LVL142:
 2571              	.LFB6187:
 2572              		.file 31 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // Map implementation -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 185


   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Copyright (c) 1996,1997
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** /** @file bits/stl_map.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *  Do not attempt to use it directly. @headername{map}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #ifndef _STL_MAP_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #define _STL_MAP_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #include <bits/functexcept.h>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #include <bits/concept_check.h>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 186


  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus >= 201103L
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #include <initializer_list>
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #include <tuple>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** namespace std _GLIBCXX_VISIBILITY(default)
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** {
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****   template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     class multimap;
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****   /**
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @brief A standard container made up of (key,value) pairs, which can be
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  retrieved based on a key, in logarithmic time.
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @ingroup associative_containers
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @tparam _Key  Type of key objects.
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @tparam  _Tp  Type of mapped objects.
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @tparam _Compare  Comparison function object type, defaults to less<_Key>.
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @tparam _Alloc  Allocator type, defaults to
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *                  allocator<pair<const _Key, _Tp>.
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  <a href="tables.html#66">reversible container</a>, and an
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  <a href="tables.html#69">associative container</a> (using unique keys).
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  For a @c map<Key,T> the key_type is Key, the mapped_type is T, and the
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  value_type is std::pair<const Key,T>.
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  Maps support bidirectional iterators.
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  The private tree data is declared exactly the same way for map and
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  multimap; the distinction is made entirely in how the tree functions are
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  called (*_unique versus *_equal, same as the standard).
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****   */
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****   template <typename _Key, typename _Tp, typename _Compare = std::less<_Key>,
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	    typename _Alloc = std::allocator<std::pair<const _Key, _Tp> > >
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     class map
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     {
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     public:
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef _Key					key_type;
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef _Tp					mapped_type;
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef std::pair<const _Key, _Tp>		value_type;
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef _Compare					key_compare;
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef _Alloc					allocator_type;
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     private:
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       // concept requirements
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** # if __cplusplus < 201103L
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** # endif
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       __glibcxx_class_requires4(_Compare, bool, _Key, _Key,
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 				_BinaryFunctionConcept)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 187


 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       __glibcxx_class_requires2(value_type, _Alloc_value_type, _SameTypeConcept)
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus >= 201103L
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus > 201703L || defined __STRICT_ANSI__
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       static_assert(is_same<typename _Alloc::value_type, value_type>::value,
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	  "std::map must have the same value_type as its allocator");
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     public:
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       class value_compare
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : public std::binary_function<value_type, value_type, bool>
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       {
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	friend class map<_Key, _Tp, _Compare, _Alloc>;
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       protected:
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	_Compare comp;
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	value_compare(_Compare __c)
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	: comp(__c) { }
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       public:
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	bool operator()(const value_type& __x, const value_type& __y) const
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	{ return comp(__x.first, __y.first); }
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       };
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     private:
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// This turns a red-black tree into a [multi]map.
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	rebind<value_type>::other _Pair_alloc_type;
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef _Rb_tree<key_type, value_type, _Select1st<value_type>,
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 		       key_compare, _Pair_alloc_type> _Rep_type;
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// The actual tree structure.
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       _Rep_type _M_t;
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef __gnu_cxx::__alloc_traits<_Pair_alloc_type> _Alloc_traits;
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     public:
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       // many of these are specified differently in ISO, but the following are
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       // "functionally equivalent"
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Alloc_traits::pointer		 pointer;
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Alloc_traits::const_pointer	 const_pointer;
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Alloc_traits::reference		 reference;
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Alloc_traits::const_reference	 const_reference;
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::iterator		 iterator;
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::const_iterator	 const_iterator;
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::size_type		 size_type;
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::difference_type	 difference_type;
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::reverse_iterator	 reverse_iterator;
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::const_reverse_iterator const_reverse_iterator;
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus > 201402L
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       using node_type = typename _Rep_type::node_type;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       using insert_return_type = typename _Rep_type::insert_return_type;
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 188


 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       // [23.3.1.1] construct/copy/destroy
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       // (get_allocator() is also listed in this section)
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  Default constructor creates no elements.
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus < 201103L
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map() : _M_t() { }
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #else
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map() = default;
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  Creates a %map with no elements.
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __comp  A comparison object.
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __a  An allocator object.
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       explicit
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(const _Compare& __comp,
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	  const allocator_type& __a = allocator_type())
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(__comp, _Pair_alloc_type(__a)) { }
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  %Map copy constructor.
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  Whether the allocator is copied depends on the allocator traits.
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus < 201103L
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(const map& __x)
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(__x._M_t) { }
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #else
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(const map&) = default;
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  %Map move constructor.
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  The newly-created %map contains the exact contents of the moved
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  instance. The moved instance is a valid, but unspecified, %map.
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(map&&) = default;
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  Builds a %map from an initializer_list.
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __l  An initializer_list.
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __comp  A comparison object.
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __a  An allocator object.
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  Create a %map consisting of copies of the elements in the
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  initializer_list @a __l.
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  This is linear in N if the range is already sorted, and NlogN
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  otherwise (where N is @a __l.size()).
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(initializer_list<value_type> __l,
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	  const _Compare& __comp = _Compare(),
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	  const allocator_type& __a = allocator_type())
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(__comp, _Pair_alloc_type(__a))
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 189


 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// Allocator-extended default constructor.
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       explicit
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(const allocator_type& __a)
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(_Pair_alloc_type(__a)) { }
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// Allocator-extended copy constructor.
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(const map& __m, const allocator_type& __a)
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(__m._M_t, _Pair_alloc_type(__a)) { }
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// Allocator-extended move constructor.
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(map&& __m, const allocator_type& __a)
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       noexcept(is_nothrow_copy_constructible<_Compare>::value
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	       && _Alloc_traits::_S_always_equal())
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(std::move(__m._M_t), _Pair_alloc_type(__a)) { }
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// Allocator-extended initialier-list constructor.
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(initializer_list<value_type> __l, const allocator_type& __a)
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(_Pair_alloc_type(__a))
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// Allocator-extended range constructor.
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       template<typename _InputIterator>
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	map(_InputIterator __first, _InputIterator __last,
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	    const allocator_type& __a)
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	: _M_t(_Pair_alloc_type(__a))
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	{ _M_t._M_insert_range_unique(__first, __last); }
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  Builds a %map from a range.
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __first  An input iterator.
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __last  An input iterator.
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  Create a %map consisting of copies of the elements from
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  [__first,__last).  This is linear in N if the range is
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  already sorted, and NlogN otherwise (where N is
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  distance(__first,__last)).
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       template<typename _InputIterator>
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	map(_InputIterator __first, _InputIterator __last)
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	: _M_t()
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	{ _M_t._M_insert_range_unique(__first, __last); }
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  Builds a %map from a range.
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __first  An input iterator.
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __last  An input iterator.
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __comp  A comparison functor.
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __a  An allocator object.
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  Create a %map consisting of copies of the elements from
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  [__first,__last).  This is linear in N if the range is
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  already sorted, and NlogN otherwise (where N is
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  distance(__first,__last)).
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 190


 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       template<typename _InputIterator>
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	map(_InputIterator __first, _InputIterator __last,
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	    const _Compare& __comp,
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	    const allocator_type& __a = allocator_type())
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	: _M_t(__comp, _Pair_alloc_type(__a))
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	{ _M_t._M_insert_range_unique(__first, __last); }
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus >= 201103L
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  The dtor only erases the elements, and note that if the elements
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  themselves are pointers, the pointed-to memory is not touched in any
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  way.  Managing the pointer is the user's responsibility.
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       ~map() = default;
 2573              		.loc 31 302 7 is_stmt 1 view -0
 2574              		.cfi_startproc
 2575              		@ args = 0, pretend = 0, frame = 0
 2576              		@ frame_needed = 0, uses_anonymous_args = 0
 2577              		.loc 31 302 7 is_stmt 0 view .LVU560
 2578 0000 10B5     		push	{r4, lr}
 2579              		.cfi_def_cfa_offset 8
 2580              		.cfi_offset 4, -8
 2581              		.cfi_offset 14, -4
 2582              		.loc 31 302 7 view .LVU561
 2583 0002 0446     		mov	r4, r0
 2584              	.LVL143:
 2585              	.LBB5418:
 2586              	.LBI5418:
 990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _M_erase(_M_begin()); }
 2587              		.loc 29 990 7 is_stmt 1 view .LVU562
 2588              	.LBB5419:
 2589              	.LBB5420:
 2590              	.LBI5420:
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 2591              		.loc 29 748 7 view .LVU563
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 2592              		.loc 29 748 7 is_stmt 0 view .LVU564
 2593              	.LBE5420:
 991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 2594              		.loc 29 991 17 view .LVU565
 2595 0004 8068     		ldr	r0, [r0, #8]
 2596              	.LVL144:
 991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 2597              		.loc 29 991 17 view .LVU566
 2598 0006 FFF7FEFF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiE
 2599              	.LVL145:
 2600              	.LBB5421:
 2601              	.LBI5421:
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: public _Node_allocator
 2602              		.loc 29 677 9 is_stmt 1 view .LVU567
 2603              	.LBB5422:
 2604              	.LBI5422:
 2605              		.loc 19 162 7 view .LVU568
 2606              	.LBB5423:
 2607              	.LBI5423:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2608              		.loc 20 89 7 view .LVU569
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 191


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2609              		.loc 20 89 7 is_stmt 0 view .LVU570
 2610              	.LBE5423:
 2611              	.LBE5422:
 2612              	.LBE5421:
 2613              	.LBE5419:
 2614              	.LBE5418:
 2615              		.loc 31 302 7 view .LVU571
 2616 000a 2046     		mov	r0, r4
 2617 000c 10BD     		pop	{r4, pc}
 2618              		.loc 31 302 7 view .LVU572
 2619              		.cfi_endproc
 2620              	.LFE6187:
 2622              		.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ES
 2623              		.thumb_set _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessI
 2624 000e 00BF     		.section	.text._Z9cbPatternv,"ax",%progbits
 2625              		.align	1
 2626              		.p2align 2,,3
 2627              		.global	_Z9cbPatternv
 2628              		.syntax unified
 2629              		.thumb
 2630              		.thumb_func
 2631              		.fpu fpv5-d16
 2633              	_Z9cbPatternv:
 2634              	.LFB5112:
  98:Jellybeans.cpp **** };
  99:Jellybeans.cpp **** 
 100:Jellybeans.cpp **** void cbPattern(){
 2635              		.loc 17 100 17 is_stmt 1 view -0
 2636              		.cfi_startproc
 2637              		@ args = 0, pretend = 0, frame = 24
 2638              		@ frame_needed = 0, uses_anonymous_args = 0
 101:Jellybeans.cpp ****     arp->setPattern(mPattern->value());
 2639              		.loc 17 101 5 view .LVU574
 100:Jellybeans.cpp ****     arp->setPattern(mPattern->value());
 2640              		.loc 17 100 17 is_stmt 0 view .LVU575
 2641 0000 30B5     		push	{r4, r5, lr}
 2642              		.cfi_def_cfa_offset 12
 2643              		.cfi_offset 4, -12
 2644              		.cfi_offset 5, -8
 2645              		.cfi_offset 14, -4
 2646              		.loc 17 101 20 view .LVU576
 2647 0002 0D4C     		ldr	r4, .L114
 100:Jellybeans.cpp ****     arp->setPattern(mPattern->value());
 2648              		.loc 17 100 17 view .LVU577
 2649 0004 87B0     		sub	sp, sp, #28
 2650              		.cfi_def_cfa_offset 40
 2651              		.loc 17 101 37 view .LVU578
 2652 0006 0D4B     		ldr	r3, .L114+4
 2653              		.loc 17 101 20 view .LVU579
 2654 0008 2568     		ldr	r5, [r4]
 2655              		.loc 17 101 37 view .LVU580
 2656 000a 6846     		mov	r0, sp
 2657 000c 1968     		ldr	r1, [r3]
 2658 000e FFF7FEFF 		bl	_ZN10jellybeans8MenuItem5valueB5cxx11Ev
 2659              	.LVL146:
 2660              		.loc 17 101 20 view .LVU581
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 192


 2661 0012 2846     		mov	r0, r5
 2662 0014 6946     		mov	r1, sp
 2663 0016 FFF7FEFF 		bl	_ZN10jellybeans3Arp10setPatternENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 2664              	.LVL147:
 2665              	.LBB5441:
 2666              	.LBI5441:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 2667              		.loc 18 657 7 is_stmt 1 view .LVU582
 2668              	.LBB5442:
 2669              	.LBB5443:
 2670              	.LBI5443:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2671              		.loc 18 229 7 view .LVU583
 2672              	.LBB5444:
 2673              	.LBB5445:
 2674              	.LBI5445:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2675              		.loc 18 221 7 view .LVU584
 2676              	.LBB5446:
 2677              	.LBI5446:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2678              		.loc 18 186 7 view .LVU585
 2679              	.LBB5447:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2680              		.loc 18 187 28 is_stmt 0 view .LVU586
 2681 001a 0098     		ldr	r0, [sp]
 2682              	.LVL148:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2683              		.loc 18 187 28 view .LVU587
 2684              	.LBE5447:
 2685              	.LBE5446:
 2686              	.LBB5448:
 2687              	.LBI5448:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2688              		.loc 18 200 7 is_stmt 1 view .LVU588
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2689              		.loc 18 200 7 is_stmt 0 view .LVU589
 2690              	.LBE5448:
 2691              	.LBE5445:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2692              		.loc 18 231 2 view .LVU590
 2693 001c 02AB     		add	r3, sp, #8
 2694 001e 9842     		cmp	r0, r3
 2695 0020 03D0     		beq	.L112
 2696              	.LVL149:
 2697              	.LBB5449:
 2698              	.LBI5449:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2699              		.loc 18 236 7 is_stmt 1 view .LVU591
 2700              	.LBB5450:
 2701              	.LBB5451:
 2702              	.LBI5451:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2703              		.loc 25 491 7 view .LVU592
 2704              	.LBB5452:
 2705              	.LBI5452:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 193


 2706              		.loc 20 120 7 view .LVU593
 2707              	.LBE5452:
 2708              	.LBE5451:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2709              		.loc 18 237 34 is_stmt 0 view .LVU594
 2710 0022 0299     		ldr	r1, [sp, #8]
 2711              	.LBB5455:
 2712              	.LBB5454:
 2713              	.LBB5453:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2714              		.loc 20 133 19 view .LVU595
 2715 0024 0131     		adds	r1, r1, #1
 2716              	.LVL150:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2717              		.loc 20 133 19 view .LVU596
 2718 0026 FFF7FEFF 		bl	_ZdlPvj
 2719              	.LVL151:
 2720              	.L112:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2721              		.loc 20 133 19 view .LVU597
 2722              	.LBE5453:
 2723              	.LBE5454:
 2724              	.LBE5455:
 2725              	.LBE5450:
 2726              	.LBE5449:
 2727              	.LBE5444:
 2728              	.LBE5443:
 2729              	.LBB5456:
 2730              	.LBI5456:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2731              		.loc 18 150 14 is_stmt 1 view .LVU598
 2732              	.LBB5457:
 2733              	.LBI5457:
 2734              		.loc 19 162 7 view .LVU599
 2735              	.LBB5458:
 2736              	.LBI5458:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2737              		.loc 20 89 7 view .LVU600
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2738              		.loc 20 89 7 is_stmt 0 view .LVU601
 2739              	.LBE5458:
 2740              	.LBE5457:
 2741              	.LBE5456:
 2742              	.LBE5442:
 2743              	.LBE5441:
 102:Jellybeans.cpp ****     arp->updateTraversal();
 2744              		.loc 17 102 5 is_stmt 1 view .LVU602
 2745              		.loc 17 102 25 is_stmt 0 view .LVU603
 2746 002a 2068     		ldr	r0, [r4]
 103:Jellybeans.cpp **** };
 2747              		.loc 17 103 1 view .LVU604
 2748 002c 07B0     		add	sp, sp, #28
 2749              		.cfi_def_cfa_offset 12
 2750              		@ sp needed
 2751 002e BDE83040 		pop	{r4, r5, lr}
 2752              		.cfi_restore 14
 2753              		.cfi_restore 5
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 194


 2754              		.cfi_restore 4
 2755              		.cfi_def_cfa_offset 0
 102:Jellybeans.cpp ****     arp->updateTraversal();
 2756              		.loc 17 102 25 view .LVU605
 2757 0032 FFF7FEBF 		b	_ZN10jellybeans3Arp15updateTraversalEv
 2758              	.LVL152:
 2759              	.L115:
 2760 0036 00BF     		.align	2
 2761              	.L114:
 2762 0038 00000000 		.word	.LANCHOR0
 2763 003c 00000000 		.word	.LANCHOR1
 2764              		.cfi_endproc
 2765              	.LFE5112:
 2767              		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 2768              		.align	1
 2769              		.p2align 2,,3
 2770              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 2771              		.syntax unified
 2772              		.thumb
 2773              		.thumb_func
 2774              		.fpu fpv5-d16
 2776              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 2777              	.LVL153:
 2778              	.LFB5759:
 220:../../libdaisy/src/hid/disp/display.h **** 
 221:../../libdaisy/src/hid/disp/display.h ****     void DrawLine(uint_fast8_t x1,
 222:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 223:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t x2,
 224:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y2,
 225:../../libdaisy/src/hid/disp/display.h ****                   bool         on) override
 226:../../libdaisy/src/hid/disp/display.h ****     {
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaX = abs((int_fast16_t)x2 - (int_fast16_t)x1);
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 231:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 232:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error2;
 233:../../libdaisy/src/hid/disp/display.h **** 
 234:../../libdaisy/src/hid/disp/display.h ****         // If we write "ChildType::DrawPixel(x2, y2, on);", we end up with
 235:../../libdaisy/src/hid/disp/display.h ****         // all sorts of weird compiler errors when the Child class is a template
 236:../../libdaisy/src/hid/disp/display.h ****         // class. The only way around this is to use this very verbose syntax:
 237:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::DrawPixel(x2, y2, on);
 238:../../libdaisy/src/hid/disp/display.h **** 
 239:../../libdaisy/src/hid/disp/display.h ****         while((x1 != x2) || (y1 != y2))
 240:../../libdaisy/src/hid/disp/display.h ****         {
 241:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawPixel(x1, y1, on);
 242:../../libdaisy/src/hid/disp/display.h ****             error2 = error * 2;
 243:../../libdaisy/src/hid/disp/display.h ****             if(error2 > -deltaY)
 244:../../libdaisy/src/hid/disp/display.h ****             {
 245:../../libdaisy/src/hid/disp/display.h ****                 error -= deltaY;
 246:../../libdaisy/src/hid/disp/display.h ****                 x1 += signX;
 247:../../libdaisy/src/hid/disp/display.h ****             }
 248:../../libdaisy/src/hid/disp/display.h **** 
 249:../../libdaisy/src/hid/disp/display.h ****             if(error2 < deltaX)
 250:../../libdaisy/src/hid/disp/display.h ****             {
 251:../../libdaisy/src/hid/disp/display.h ****                 error += deltaX;
 252:../../libdaisy/src/hid/disp/display.h ****                 y1 += signY;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 195


 253:../../libdaisy/src/hid/disp/display.h ****             }
 254:../../libdaisy/src/hid/disp/display.h ****         }
 255:../../libdaisy/src/hid/disp/display.h ****     }
 256:../../libdaisy/src/hid/disp/display.h **** 
 257:../../libdaisy/src/hid/disp/display.h ****     void DrawRect(uint_fast8_t x1,
 258:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 259:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t x2,
 260:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y2,
 261:../../libdaisy/src/hid/disp/display.h ****                   bool         on,
 262:../../libdaisy/src/hid/disp/display.h ****                   bool         fill = false) override
 263:../../libdaisy/src/hid/disp/display.h ****     {
 264:../../libdaisy/src/hid/disp/display.h ****         if(fill)
 265:../../libdaisy/src/hid/disp/display.h ****         {
 266:../../libdaisy/src/hid/disp/display.h ****             for(uint_fast8_t x = x1; x <= x2; x++)
 267:../../libdaisy/src/hid/disp/display.h ****             {
 268:../../libdaisy/src/hid/disp/display.h ****                 for(uint_fast8_t y = y1; y <= y2; y++)
 269:../../libdaisy/src/hid/disp/display.h ****                 {
 270:../../libdaisy/src/hid/disp/display.h ****                     ((ChildType*)(this))->ChildType::DrawPixel(x, y, on);
 271:../../libdaisy/src/hid/disp/display.h ****                 }
 272:../../libdaisy/src/hid/disp/display.h ****             }
 273:../../libdaisy/src/hid/disp/display.h ****         }
 274:../../libdaisy/src/hid/disp/display.h ****         else
 275:../../libdaisy/src/hid/disp/display.h ****         {
 276:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x1, y1, x2, y1, on);
 277:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x2, y1, x2, y2, on);
 278:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x2, y2, x1, y2, on);
 279:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x1, y2, x1, y1, on);
 280:../../libdaisy/src/hid/disp/display.h ****         }
 281:../../libdaisy/src/hid/disp/display.h ****     }
 282:../../libdaisy/src/hid/disp/display.h **** 
 283:../../libdaisy/src/hid/disp/display.h ****     void DrawArc(uint_fast8_t x,
 284:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 285:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t radius,
 286:../../libdaisy/src/hid/disp/display.h ****                  int_fast16_t start_angle,
 287:../../libdaisy/src/hid/disp/display.h ****                  int_fast16_t sweep,
 288:../../libdaisy/src/hid/disp/display.h ****                  bool         on) override
 289:../../libdaisy/src/hid/disp/display.h ****     {
 290:../../libdaisy/src/hid/disp/display.h ****         // Values to calculate the circle
 291:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t t_x, t_y, err, e2;
 292:../../libdaisy/src/hid/disp/display.h **** 
 293:../../libdaisy/src/hid/disp/display.h ****         // Temporary values to speed up comparisons
 294:../../libdaisy/src/hid/disp/display.h ****         float t_sxy, t_syx, t_sxny, t_synx;
 295:../../libdaisy/src/hid/disp/display.h ****         float t_exy, t_eyx, t_exny, t_eynx;
 296:../../libdaisy/src/hid/disp/display.h **** 
 297:../../libdaisy/src/hid/disp/display.h ****         float start_angle_rad, end_angle_rad;
 298:../../libdaisy/src/hid/disp/display.h ****         float start_x, start_y, end_x, end_y;
 299:../../libdaisy/src/hid/disp/display.h **** 
 300:../../libdaisy/src/hid/disp/display.h ****         bool d1, d2, d3, d4;
 301:../../libdaisy/src/hid/disp/display.h **** 
 302:../../libdaisy/src/hid/disp/display.h ****         d1 = d2 = d3 = d4 = true;
 303:../../libdaisy/src/hid/disp/display.h **** 
 304:../../libdaisy/src/hid/disp/display.h ****         bool circle = false;
 305:../../libdaisy/src/hid/disp/display.h **** 
 306:../../libdaisy/src/hid/disp/display.h ****         if(sweep < 0)
 307:../../libdaisy/src/hid/disp/display.h ****         {
 308:../../libdaisy/src/hid/disp/display.h ****             start_angle += sweep;
 309:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 196


 310:../../libdaisy/src/hid/disp/display.h ****         }
 311:../../libdaisy/src/hid/disp/display.h **** 
 312:../../libdaisy/src/hid/disp/display.h ****         start_angle_rad = deg2rad(start_angle);
 313:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 314:../../libdaisy/src/hid/disp/display.h **** 
 315:../../libdaisy/src/hid/disp/display.h ****         start_x = cos(start_angle_rad) * radius;
 316:../../libdaisy/src/hid/disp/display.h ****         start_y = -sin(start_angle_rad) * radius;
 317:../../libdaisy/src/hid/disp/display.h ****         end_x   = cos(end_angle_rad) * radius;
 318:../../libdaisy/src/hid/disp/display.h ****         end_y   = -sin(end_angle_rad) * radius;
 319:../../libdaisy/src/hid/disp/display.h **** 
 320:../../libdaisy/src/hid/disp/display.h ****         // Check if start and endpoint are very near
 321:../../libdaisy/src/hid/disp/display.h ****         if((end_x - start_x) * (end_x - start_x)
 322:../../libdaisy/src/hid/disp/display.h ****                + (end_y - start_y) * (end_y - start_y)
 323:../../libdaisy/src/hid/disp/display.h ****            < 2.0f)
 324:../../libdaisy/src/hid/disp/display.h ****         {
 325:../../libdaisy/src/hid/disp/display.h ****             if(sweep > 180)
 326:../../libdaisy/src/hid/disp/display.h ****                 circle = true;
 327:../../libdaisy/src/hid/disp/display.h ****             else
 328:../../libdaisy/src/hid/disp/display.h ****                 // Nothing to draw
 329:../../libdaisy/src/hid/disp/display.h ****                 return;
 330:../../libdaisy/src/hid/disp/display.h ****         }
 331:../../libdaisy/src/hid/disp/display.h **** 
 332:../../libdaisy/src/hid/disp/display.h ****         t_x = -radius;
 333:../../libdaisy/src/hid/disp/display.h ****         t_y = 0;
 334:../../libdaisy/src/hid/disp/display.h ****         err = 2 - 2 * radius;
 335:../../libdaisy/src/hid/disp/display.h **** 
 336:../../libdaisy/src/hid/disp/display.h ****         do
 337:../../libdaisy/src/hid/disp/display.h ****         {
 338:../../libdaisy/src/hid/disp/display.h ****             if(!circle)
 339:../../libdaisy/src/hid/disp/display.h ****             {
 340:../../libdaisy/src/hid/disp/display.h ****                 t_sxy  = start_x * t_y;
 341:../../libdaisy/src/hid/disp/display.h ****                 t_syx  = start_y * t_x;
 342:../../libdaisy/src/hid/disp/display.h ****                 t_sxny = start_x * -t_y;
 343:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 344:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 345:../../libdaisy/src/hid/disp/display.h ****                 t_eyx  = end_y * t_x;
 346:../../libdaisy/src/hid/disp/display.h ****                 t_exny = end_x * -t_y;
 347:../../libdaisy/src/hid/disp/display.h ****                 t_eynx = end_y * -t_x;
 348:../../libdaisy/src/hid/disp/display.h **** 
 349:../../libdaisy/src/hid/disp/display.h ****                 if(sweep > 180)
 350:../../libdaisy/src/hid/disp/display.h ****                 {
 351:../../libdaisy/src/hid/disp/display.h ****                     d1 = (t_sxy - t_synx < 0 || t_exy - t_eynx > 0);
 352:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 353:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 354:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 355:../../libdaisy/src/hid/disp/display.h ****                 }
 356:../../libdaisy/src/hid/disp/display.h ****                 else
 357:../../libdaisy/src/hid/disp/display.h ****                 {
 358:../../libdaisy/src/hid/disp/display.h ****                     d1 = (t_sxy - t_synx < 0 && t_exy - t_eynx > 0);
 359:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
 360:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 361:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 362:../../libdaisy/src/hid/disp/display.h ****                 }
 363:../../libdaisy/src/hid/disp/display.h ****             }
 364:../../libdaisy/src/hid/disp/display.h **** 
 365:../../libdaisy/src/hid/disp/display.h ****             if(d1)
 366:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 197


 367:../../libdaisy/src/hid/disp/display.h ****                     ->ChildType::DrawPixel(x - t_x, y + t_y, on);
 368:../../libdaisy/src/hid/disp/display.h ****             if(d2)
 369:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 370:../../libdaisy/src/hid/disp/display.h ****                     ->ChildType::DrawPixel(x + t_x, y + t_y, on);
 371:../../libdaisy/src/hid/disp/display.h ****             if(d3)
 372:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 373:../../libdaisy/src/hid/disp/display.h ****                     ->ChildType::DrawPixel(x + t_x, y - t_y, on);
 374:../../libdaisy/src/hid/disp/display.h ****             if(d4)
 375:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 376:../../libdaisy/src/hid/disp/display.h ****                     ->ChildType::DrawPixel(x - t_x, y - t_y, on);
 377:../../libdaisy/src/hid/disp/display.h **** 
 378:../../libdaisy/src/hid/disp/display.h ****             e2 = err;
 379:../../libdaisy/src/hid/disp/display.h ****             if(e2 <= t_y)
 380:../../libdaisy/src/hid/disp/display.h ****             {
 381:../../libdaisy/src/hid/disp/display.h ****                 t_y++;
 382:../../libdaisy/src/hid/disp/display.h ****                 err = err + (t_y * 2 + 1);
 383:../../libdaisy/src/hid/disp/display.h ****                 if(-t_x == t_y && e2 <= t_x)
 384:../../libdaisy/src/hid/disp/display.h ****                 {
 385:../../libdaisy/src/hid/disp/display.h ****                     e2 = 0;
 386:../../libdaisy/src/hid/disp/display.h ****                 }
 387:../../libdaisy/src/hid/disp/display.h ****             }
 388:../../libdaisy/src/hid/disp/display.h ****             if(e2 > t_x)
 389:../../libdaisy/src/hid/disp/display.h ****             {
 390:../../libdaisy/src/hid/disp/display.h ****                 t_x++;
 391:../../libdaisy/src/hid/disp/display.h ****                 err = err + (t_x * 2 + 1);
 392:../../libdaisy/src/hid/disp/display.h ****             }
 393:../../libdaisy/src/hid/disp/display.h ****         } while(t_x <= 0);
 394:../../libdaisy/src/hid/disp/display.h ****     }
 395:../../libdaisy/src/hid/disp/display.h **** 
 396:../../libdaisy/src/hid/disp/display.h ****     char WriteChar(char ch, FontDef font, bool on) override
 2779              		.loc 5 396 10 is_stmt 1 view -0
 2780              		.cfi_startproc
 2781              		@ args = 4, pretend = 0, frame = 16
 2782              		@ frame_needed = 0, uses_anonymous_args = 0
 2783              		.loc 5 396 10 is_stmt 0 view .LVU607
 2784 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2785              		.cfi_def_cfa_offset 36
 2786              		.cfi_offset 4, -36
 2787              		.cfi_offset 5, -32
 2788              		.cfi_offset 6, -28
 2789              		.cfi_offset 7, -24
 2790              		.cfi_offset 8, -20
 2791              		.cfi_offset 9, -16
 2792              		.cfi_offset 10, -12
 2793              		.cfi_offset 11, -8
 2794              		.cfi_offset 14, -4
 2795 0004 85B0     		sub	sp, sp, #20
 2796              		.cfi_def_cfa_offset 56
 2797              	.LVL154:
 397:../../libdaisy/src/hid/disp/display.h ****     {
 398:../../libdaisy/src/hid/disp/display.h ****         uint32_t i, b, j;
 399:../../libdaisy/src/hid/disp/display.h **** 
 400:../../libdaisy/src/hid/disp/display.h ****         // Check if character is valid
 401:../../libdaisy/src/hid/disp/display.h ****         if(ch < 32 || ch > 126)
 2798              		.loc 5 401 20 view .LVU608
 2799 0006 A1F12005 		sub	r5, r1, #32
 396:../../libdaisy/src/hid/disp/display.h ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 198


 2800              		.loc 5 396 10 view .LVU609
 2801 000a 04AC     		add	r4, sp, #16
 2802 000c 9DF83870 		ldrb	r7, [sp, #56]	@ zero_extendqisi2
 2803 0010 0091     		str	r1, [sp]
 2804 0012 04E90C00 		stmdb	r4, {r2, r3}
 2805              	.LVL155:
 2806              		.loc 5 401 9 view .LVU610
 2807 0016 EBB2     		uxtb	r3, r5
 2808 0018 5E2B     		cmp	r3, #94
 2809 001a 00F29580 		bhi	.L120
 402:../../libdaisy/src/hid/disp/display.h ****             return 0;
 403:../../libdaisy/src/hid/disp/display.h **** 
 404:../../libdaisy/src/hid/disp/display.h ****         // Check remaining space on current line
 405:../../libdaisy/src/hid/disp/display.h ****         if(Width() < (currentX_ + font.FontWidth)
 2810              		.loc 5 405 17 view .LVU611
 2811 001e 0368     		ldr	r3, [r0]
 2812 0020 8046     		mov	r8, r0
 2813 0022 5D4A     		ldr	r2, .L155
 2814 0024 DB68     		ldr	r3, [r3, #12]
 2815 0026 9DF80840 		ldrb	r4, [sp, #8]	@ zero_extendqisi2
 2816 002a 9342     		cmp	r3, r2
 2817 002c 9DF80960 		ldrb	r6, [sp, #9]	@ zero_extendqisi2
 2818 0030 40F09480 		bne	.L147
 2819 0034 8020     		movs	r0, #128
 2820              	.LVL156:
 2821              	.L119:
 2822              		.loc 5 405 23 view .LVU612
 2823 0036 B8F80430 		ldrh	r3, [r8, #4]
 2824              		.loc 5 405 33 view .LVU613
 2825 003a 2344     		add	r3, r3, r4
 406:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 2826              		.loc 5 406 12 view .LVU614
 2827 003c 8342     		cmp	r3, r0
 2828 003e 00F38380 		bgt	.L120
 2829              		.loc 5 406 21 discriminator 2 view .LVU615
 2830 0042 D8F80030 		ldr	r3, [r8]
 2831 0046 554A     		ldr	r2, .L155+4
 2832 0048 9B68     		ldr	r3, [r3, #8]
 2833 004a 9342     		cmp	r3, r2
 2834 004c 40F08880 		bne	.L148
 2835              		.loc 5 406 21 view .LVU616
 2836 0050 4020     		movs	r0, #64
 2837              	.L121:
 2838              		.loc 5 406 27 discriminator 2 view .LVU617
 2839 0052 B8F80620 		ldrh	r2, [r8, #6]
 2840              		.loc 5 406 37 discriminator 2 view .LVU618
 2841 0056 9319     		adds	r3, r2, r6
 2842              		.loc 5 406 27 discriminator 2 view .LVU619
 2843 0058 0192     		str	r2, [sp, #4]
 2844              		.loc 5 406 12 discriminator 2 view .LVU620
 2845 005a 8342     		cmp	r3, r0
 2846 005c 74DC     		bgt	.L120
 2847              	.LVL157:
 407:../../libdaisy/src/hid/disp/display.h ****         {
 408:../../libdaisy/src/hid/disp/display.h ****             // Not enough space on current line
 409:../../libdaisy/src/hid/disp/display.h ****             return 0;
 410:../../libdaisy/src/hid/disp/display.h ****         }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 199


 411:../../libdaisy/src/hid/disp/display.h **** 
 412:../../libdaisy/src/hid/disp/display.h ****         // Use the font to write
 413:../../libdaisy/src/hid/disp/display.h ****         for(i = 0; i < font.FontHeight; i++)
 2848              		.loc 5 413 22 is_stmt 1 view .LVU621
 2849 005e 002E     		cmp	r6, #0
 2850 0060 00F08980 		beq	.L122
 414:../../libdaisy/src/hid/disp/display.h ****         {
 415:../../libdaisy/src/hid/disp/display.h ****             b = font.data[(ch - 32) * font.FontHeight + i];
 2851              		.loc 5 415 37 is_stmt 0 view .LVU622
 2852 0064 06FB05F5 		mul	r5, r6, r5
 2853 0068 6FF00040 		mvn	r0, #-2147483648
 2854              		.loc 5 415 22 view .LVU623
 2855 006c 039B     		ldr	r3, [sp, #12]
 2856 006e 9646     		mov	lr, r2
 2857 0070 2844     		add	r0, r0, r5
 2858 0072 2E44     		add	r6, r6, r5
 416:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 417:../../libdaisy/src/hid/disp/display.h ****             {
 418:../../libdaisy/src/hid/disp/display.h ****                 if((b << j) & 0x8000)
 419:../../libdaisy/src/hid/disp/display.h ****                 {
 420:../../libdaisy/src/hid/disp/display.h ****                     ((ChildType*)(this))
 421:../../libdaisy/src/hid/disp/display.h ****                         ->ChildType::DrawPixel(
 422:../../libdaisy/src/hid/disp/display.h ****                             currentX_ + j, (currentY_ + i), on);
 423:../../libdaisy/src/hid/disp/display.h ****                 }
 424:../../libdaisy/src/hid/disp/display.h ****                 else
 425:../../libdaisy/src/hid/disp/display.h ****                 {
 426:../../libdaisy/src/hid/disp/display.h ****                     ((ChildType*)(this))
 427:../../libdaisy/src/hid/disp/display.h ****                         ->ChildType::DrawPixel(
 428:../../libdaisy/src/hid/disp/display.h ****                             currentX_ + j, (currentY_ + i), !on);
 429:../../libdaisy/src/hid/disp/display.h ****                 }
 430:../../libdaisy/src/hid/disp/display.h ****             }
 431:../../libdaisy/src/hid/disp/display.h ****         }
 432:../../libdaisy/src/hid/disp/display.h **** 
 433:../../libdaisy/src/hid/disp/display.h ****         // The current space is now taken
 434:../../libdaisy/src/hid/disp/display.h ****         SetCursor(currentX_ + font.FontWidth, currentY_);
 2859              		.loc 5 434 19 view .LVU624
 2860 0074 B8F804A0 		ldrh	r10, [r8, #4]
 2861 0078 03EB4000 		add	r0, r3, r0, lsl #1
 2862 007c 023B     		subs	r3, r3, #2
 2863 007e 03EB460B 		add	fp, r3, r6, lsl #1
 2864              	.LVL158:
 2865              	.L125:
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 2866              		.loc 5 415 15 view .LVU625
 2867 0082 30F8026F 		ldrh	r6, [r0, #2]!
 2868              	.LVL159:
 416:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 2869              		.loc 5 416 26 is_stmt 1 view .LVU626
 2870 0086 BCB3     		cbz	r4, .L130
 2871              	.LBB5489:
 2872              	.LBB5490:
 2873              	.LBB5491:
 2874              	.LBB5492:
 2875              	.LBB5493:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 2876              		.loc 14 246 55 is_stmt 0 view .LVU627
 2877 0088 0EF00703 		and	r3, lr, #7
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 200


 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 2878              		.loc 14 246 49 view .LVU628
 2879 008c 4FF0010C 		mov	ip, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 2880              		.loc 14 246 28 view .LVU629
 2881 0090 4FEADE02 		lsr	r2, lr, #3
 2882 0094 5146     		mov	r1, r10
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 2883              		.loc 14 246 49 view .LVU630
 2884 0096 0CFA03FC 		lsl	ip, ip, r3
 2885 009a 0AF11403 		add	r3, r10, #20
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 2886              		.loc 14 246 42 view .LVU631
 2887 009e 4FFA8CFC 		sxtb	ip, ip
 2888 00a2 03EBC212 		add	r2, r3, r2, lsl #7
 2889              	.LBE5493:
 2890              	.LBE5492:
 2891              	.LBE5491:
 2892              	.LBE5490:
 2893              	.LBE5489:
 416:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 2894              		.loc 5 416 19 view .LVU632
 2895 00a6 0023     		movs	r3, #0
 2896              	.LBB5511:
 2897              	.LBB5506:
 2898              	.LBB5501:
 2899              	.LBB5497:
 2900              	.LBB5494:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 2901              		.loc 14 246 42 view .LVU633
 2902 00a8 6FEA0C09 		mvn	r9, ip
 2903 00ac 4244     		add	r2, r2, r8
 2904 00ae 0EE0     		b	.L131
 2905              	.LVL160:
 2906              	.L149:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 2907              		.loc 14 246 42 view .LVU634
 2908              	.LBE5494:
 2909              	.LBE5497:
 2910              	.LBE5501:
 2911              	.LBE5506:
 2912              	.LBE5511:
 2913              	.LBB5512:
 2914              	.LBI5512:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 2915              		.loc 4 41 10 is_stmt 1 view .LVU635
 2916              	.LBB5513:
 2917              	.LBI5513:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 2918              		.loc 14 239 10 view .LVU636
 2919              	.LBB5514:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 2920              		.loc 14 241 9 is_stmt 0 view .LVU637
 2921 00b0 7F29     		cmp	r1, #127
 2922 00b2 07D8     		bhi	.L127
 2923 00b4 BEF13F0F 		cmp	lr, #63
 2924 00b8 04D8     		bhi	.L127
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 201


 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 2925              		.loc 14 244 42 view .LVU638
 2926 00ba 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 2927              		.loc 14 243 9 view .LVU639
 2928 00bc 9FB1     		cbz	r7, .L129
 2929              	.L146:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 2930              		.loc 14 243 9 view .LVU640
 2931              	.LBE5514:
 2932              	.LBE5513:
 2933              	.LBE5512:
 2934              	.LBB5515:
 2935              	.LBB5507:
 2936              	.LBB5502:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 2937              		.loc 14 244 42 view .LVU641
 2938 00be 4CEA0505 		orr	r5, ip, r5
 2939 00c2 1570     		strb	r5, [r2]
 2940              	.L127:
 2941              	.LBE5502:
 2942              	.LBE5507:
 2943              	.LBE5515:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 2944              		.loc 5 416 13 is_stmt 1 discriminator 2 view .LVU642
 2945 00c4 0133     		adds	r3, r3, #1
 2946              	.LVL161:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 2947              		.loc 5 416 26 discriminator 2 view .LVU643
 2948 00c6 0132     		adds	r2, r2, #1
 2949 00c8 0131     		adds	r1, r1, #1
 2950 00ca 9C42     		cmp	r4, r3
 2951 00cc 14D0     		beq	.L130
 2952              	.LVL162:
 2953              	.L131:
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 2954              		.loc 5 418 23 is_stmt 0 view .LVU644
 2955 00ce 06FA03F5 		lsl	r5, r6, r3
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 2956              		.loc 5 418 17 view .LVU645
 2957 00d2 2D04     		lsls	r5, r5, #16
 2958 00d4 ECD4     		bmi	.L149
 2959              	.LVL163:
 2960              	.LBB5516:
 2961              	.LBI5489:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 2962              		.loc 4 41 10 is_stmt 1 view .LVU646
 2963              	.LBB5508:
 2964              	.LBI5490:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 2965              		.loc 14 239 10 view .LVU647
 2966              	.LBB5503:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 2967              		.loc 14 241 9 is_stmt 0 view .LVU648
 2968 00d6 7F29     		cmp	r1, #127
 2969 00d8 F4D8     		bhi	.L127
 2970 00da BEF13F0F 		cmp	lr, #63
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 202


 2971 00de F1D8     		bhi	.L127
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 2972              		.loc 14 244 42 view .LVU649
 2973 00e0 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 2974              		.loc 14 243 9 view .LVU650
 2975 00e2 002F     		cmp	r7, #0
 2976 00e4 EBD0     		beq	.L146
 2977              	.L129:
 2978              	.LVL164:
 2979              	.LBB5498:
 2980              	.LBI5492:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 2981              		.loc 14 239 10 is_stmt 1 view .LVU651
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 2982              		.loc 14 239 10 is_stmt 0 view .LVU652
 2983              	.LBE5498:
 2984              	.LBE5503:
 2985              	.LBE5508:
 2986              	.LBE5516:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 2987              		.loc 5 416 13 view .LVU653
 2988 00e6 0133     		adds	r3, r3, #1
 2989              	.LVL165:
 2990              	.LBB5517:
 2991              	.LBB5509:
 2992              	.LBB5504:
 2993              	.LBB5499:
 2994              	.LBB5495:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 2995              		.loc 14 246 42 view .LVU654
 2996 00e8 09EA0505 		and	r5, r9, r5
 2997              	.LBE5495:
 2998              	.LBE5499:
 2999              	.LBE5504:
 3000              	.LBE5509:
 3001              	.LBE5517:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3002              		.loc 5 416 26 view .LVU655
 3003 00ec 0132     		adds	r2, r2, #1
 3004 00ee 0131     		adds	r1, r1, #1
 3005 00f0 9C42     		cmp	r4, r3
 3006              	.LBB5518:
 3007              	.LBB5510:
 3008              	.LBB5505:
 3009              	.LBB5500:
 3010              	.LBB5496:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3011              		.loc 14 246 42 view .LVU656
 3012 00f2 02F8015C 		strb	r5, [r2, #-1]
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3013              		.loc 14 246 42 view .LVU657
 3014              	.LBE5496:
 3015              	.LBE5500:
 3016              	.LBE5505:
 3017              	.LBE5510:
 3018              	.LBE5518:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 203


 416:../../libdaisy/src/hid/disp/display.h ****             {
 3019              		.loc 5 416 13 is_stmt 1 view .LVU658
 3020              	.LVL166:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3021              		.loc 5 416 26 view .LVU659
 3022 00f6 EAD1     		bne	.L131
 3023              	.LVL167:
 3024              	.L130:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 3025              		.loc 5 413 9 view .LVU660
 413:../../libdaisy/src/hid/disp/display.h ****         {
 3026              		.loc 5 413 22 view .LVU661
 3027 00f8 5845     		cmp	r0, fp
 3028 00fa 0EF1010E 		add	lr, lr, #1
 3029 00fe C0D1     		bne	.L125
 3030              	.LVL168:
 3031              	.L124:
 3032              	.LBB5519:
 3033              	.LBB5520:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3034              		.loc 5 173 33 is_stmt 0 view .LVU662
 3035 0100 D8F80030 		ldr	r3, [r8]
 3036              	.LBE5520:
 3037              	.LBE5519:
 3038              		.loc 5 434 18 view .LVU663
 3039 0104 5444     		add	r4, r4, r10
 3040 0106 2449     		ldr	r1, .L155
 3041              	.LBB5526:
 3042              	.LBB5521:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3043              		.loc 5 173 33 view .LVU664
 3044 0108 DA68     		ldr	r2, [r3, #12]
 3045              	.LBE5521:
 3046              	.LBE5526:
 3047              		.loc 5 434 18 view .LVU665
 3048 010a A4B2     		uxth	r4, r4
 3049              	.LVL169:
 3050              	.LBB5527:
 3051              	.LBI5519:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 3052              		.loc 5 171 10 is_stmt 1 view .LVU666
 3053              	.LBB5522:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3054              		.loc 5 173 9 view .LVU667
 3055 010c 8A42     		cmp	r2, r1
 3056 010e 2DD1     		bne	.L150
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3057              		.loc 5 173 33 is_stmt 0 view .LVU668
 3058 0110 8020     		movs	r0, #128
 3059              	.L132:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3060              		.loc 5 173 19 view .LVU669
 3061 0112 8442     		cmp	r4, r0
 3062 0114 1CD2     		bcs	.L151
 3063              	.LVL170:
 3064              	.L133:
 174:../../libdaisy/src/hid/disp/display.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 204


 3065              		.loc 5 174 34 view .LVU670
 3066 0116 9B68     		ldr	r3, [r3, #8]
 3067 0118 204A     		ldr	r2, .L155+4
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3068              		.loc 5 173 19 view .LVU671
 3069 011a A8F80440 		strh	r4, [r8, #4]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3070              		.loc 5 174 9 is_stmt 1 view .LVU672
 3071 011e 9342     		cmp	r3, r2
 3072 0120 21D1     		bne	.L152
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3073              		.loc 5 174 34 is_stmt 0 view .LVU673
 3074 0122 4020     		movs	r0, #64
 3075              	.L135:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3076              		.loc 5 174 19 view .LVU674
 3077 0124 019B     		ldr	r3, [sp, #4]
 3078 0126 8342     		cmp	r3, r0
 3079 0128 07D3     		bcc	.L136
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3080              		.loc 5 174 46 view .LVU675
 3081 012a D8F80030 		ldr	r3, [r8]
 3082 012e 1B4A     		ldr	r2, .L155+4
 3083 0130 9B68     		ldr	r3, [r3, #8]
 3084 0132 9342     		cmp	r3, r2
 3085 0134 29D1     		bne	.L153
 3086 0136 3F23     		movs	r3, #63
 3087 0138 0193     		str	r3, [sp, #4]
 3088              	.LVL171:
 3089              	.L136:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3090              		.loc 5 174 19 view .LVU676
 3091 013a DDE90003 		ldrd	r0, r3, [sp]
 3092 013e A8F80630 		strh	r3, [r8, #6]	@ movhi
 3093              	.LVL172:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3094              		.loc 5 174 19 view .LVU677
 3095              	.LBE5522:
 3096              	.LBE5527:
 435:../../libdaisy/src/hid/disp/display.h **** 
 436:../../libdaisy/src/hid/disp/display.h ****         // Return written char for validation
 437:../../libdaisy/src/hid/disp/display.h ****         return ch;
 438:../../libdaisy/src/hid/disp/display.h ****     }
 3097              		.loc 5 438 5 view .LVU678
 3098 0142 05B0     		add	sp, sp, #20
 3099              		.cfi_remember_state
 3100              		.cfi_def_cfa_offset 36
 3101              		@ sp needed
 3102 0144 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3103              	.LVL173:
 3104              	.L120:
 3105              		.cfi_restore_state
 402:../../libdaisy/src/hid/disp/display.h **** 
 3106              		.loc 5 402 20 view .LVU679
 3107 0148 0020     		movs	r0, #0
 3108              		.loc 5 438 5 view .LVU680
 3109 014a 05B0     		add	sp, sp, #20
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 205


 3110              		.cfi_remember_state
 3111              		.cfi_def_cfa_offset 36
 3112              		@ sp needed
 3113 014c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3114              	.LVL174:
 3115              	.L151:
 3116              		.cfi_restore_state
 3117              	.LBB5528:
 3118              	.LBB5523:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3119              		.loc 5 173 44 view .LVU681
 3120 0150 DA68     		ldr	r2, [r3, #12]
 3121 0152 1149     		ldr	r1, .L155
 3122 0154 8A42     		cmp	r2, r1
 3123 0156 11D1     		bne	.L154
 3124 0158 7F24     		movs	r4, #127
 3125              	.LVL175:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3126              		.loc 5 173 44 view .LVU682
 3127 015a DCE7     		b	.L133
 3128              	.LVL176:
 3129              	.L147:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3130              		.loc 5 173 44 view .LVU683
 3131              	.LBE5523:
 3132              	.LBE5528:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 3133              		.loc 5 405 17 view .LVU684
 3134 015c 9847     		blx	r3
 3135              	.LVL177:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 3136              		.loc 5 405 17 view .LVU685
 3137 015e 6AE7     		b	.L119
 3138              	.L148:
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3139              		.loc 5 406 21 discriminator 2 view .LVU686
 3140 0160 4046     		mov	r0, r8
 3141 0162 9847     		blx	r3
 3142              	.LVL178:
 3143 0164 75E7     		b	.L121
 3144              	.LVL179:
 3145              	.L152:
 3146              	.LBB5529:
 3147              	.LBB5524:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3148              		.loc 5 174 33 view .LVU687
 3149 0166 4046     		mov	r0, r8
 3150 0168 9847     		blx	r3
 3151              	.LVL180:
 3152 016a DBE7     		b	.L135
 3153              	.LVL181:
 3154              	.L150:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3155              		.loc 5 173 32 view .LVU688
 3156 016c 4046     		mov	r0, r8
 3157 016e 9047     		blx	r2
 3158              	.LVL182:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 206


 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3159              		.loc 5 173 44 view .LVU689
 3160 0170 D8F80030 		ldr	r3, [r8]
 3161 0174 CDE7     		b	.L132
 3162              	.LVL183:
 3163              	.L122:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3164              		.loc 5 173 44 view .LVU690
 3165              	.LBE5524:
 3166              	.LBE5529:
 434:../../libdaisy/src/hid/disp/display.h **** 
 3167              		.loc 5 434 19 view .LVU691
 3168 0176 B8F804A0 		ldrh	r10, [r8, #4]
 3169 017a C1E7     		b	.L124
 3170              	.LVL184:
 3171              	.L154:
 3172              	.LBB5530:
 3173              	.LBB5525:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3174              		.loc 5 173 43 view .LVU692
 3175 017c 4046     		mov	r0, r8
 3176 017e 9047     		blx	r2
 3177              	.LVL185:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3178              		.loc 5 173 19 view .LVU693
 3179 0180 0138     		subs	r0, r0, #1
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3180              		.loc 5 174 34 view .LVU694
 3181 0182 D8F80030 		ldr	r3, [r8]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3182              		.loc 5 173 19 view .LVU695
 3183 0186 84B2     		uxth	r4, r0
 3184              	.LVL186:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3185              		.loc 5 173 19 view .LVU696
 3186 0188 C5E7     		b	.L133
 3187              	.L153:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3188              		.loc 5 174 45 view .LVU697
 3189 018a 4046     		mov	r0, r8
 3190 018c 9847     		blx	r3
 3191              	.LVL187:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3192              		.loc 5 174 19 view .LVU698
 3193 018e 0138     		subs	r0, r0, #1
 3194 0190 83B2     		uxth	r3, r0
 3195 0192 0193     		str	r3, [sp, #4]
 3196              	.LVL188:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3197              		.loc 5 174 19 view .LVU699
 3198 0194 D1E7     		b	.L136
 3199              	.L156:
 3200 0196 00BF     		.align	2
 3201              	.L155:
 3202 0198 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 3203 019c 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 3204              	.LBE5525:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 207


 3205              	.LBE5530:
 3206              		.cfi_endproc
 3207              	.LFE5759:
 3209              		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 3210              		.align	1
 3211              		.p2align 2,,3
 3212              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 3213              		.syntax unified
 3214              		.thumb
 3215              		.thumb_func
 3216              		.fpu fpv5-d16
 3218              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 3219              	.LVL189:
 3220              	.LFB5545:
 439:../../libdaisy/src/hid/disp/display.h **** 
 440:../../libdaisy/src/hid/disp/display.h ****     char WriteString(const char* str, FontDef font, bool on) override
 3221              		.loc 5 440 10 is_stmt 1 view -0
 3222              		.cfi_startproc
 3223              		@ args = 4, pretend = 0, frame = 32
 3224              		@ frame_needed = 0, uses_anonymous_args = 0
 3225              		.loc 5 440 10 is_stmt 0 view .LVU701
 3226 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3227              		.cfi_def_cfa_offset 36
 3228              		.cfi_offset 4, -36
 3229              		.cfi_offset 5, -32
 3230              		.cfi_offset 6, -28
 3231              		.cfi_offset 7, -24
 3232              		.cfi_offset 8, -20
 3233              		.cfi_offset 9, -16
 3234              		.cfi_offset 10, -12
 3235              		.cfi_offset 11, -8
 3236              		.cfi_offset 14, -4
 3237 0004 89B0     		sub	sp, sp, #36
 3238              		.cfi_def_cfa_offset 72
 3239              		.loc 5 440 10 view .LVU702
 3240 0006 08AC     		add	r4, sp, #32
 3241 0008 9DF84870 		ldrb	r7, [sp, #72]	@ zero_extendqisi2
 3242 000c 0191     		str	r1, [sp, #4]
 3243 000e 04E90C00 		stmdb	r4, {r2, r3}
 441:../../libdaisy/src/hid/disp/display.h ****     {
 442:../../libdaisy/src/hid/disp/display.h ****         // Write until null-byte
 443:../../libdaisy/src/hid/disp/display.h ****         while(*str)
 3244              		.loc 5 443 9 is_stmt 1 view .LVU703
 3245 0012 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 3246 0014 002B     		cmp	r3, #0
 3247 0016 00F0AB80 		beq	.L181
 3248 001a 1A46     		mov	r2, r3
 3249 001c 9DF81880 		ldrb	r8, [sp, #24]	@ zero_extendqisi2
 3250 0020 9DF81930 		ldrb	r3, [sp, #25]	@ zero_extendqisi2
 3251 0024 0646     		mov	r6, r0
 3252 0026 4546     		mov	r5, r8
 3253 0028 9046     		mov	r8, r2
 3254 002a 0393     		str	r3, [sp, #12]
 3255 002c 079B     		ldr	r3, [sp, #28]
 3256 002e 0593     		str	r3, [sp, #20]
 3257              	.LVL190:
 3258              	.L182:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 208


 3259              	.LBB5559:
 3260              	.LBI5559:
 396:../../libdaisy/src/hid/disp/display.h ****     {
 3261              		.loc 5 396 10 view .LVU704
 3262              	.LBB5560:
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 3263              		.loc 5 401 20 is_stmt 0 view .LVU705
 3264 0030 A8F12004 		sub	r4, r8, #32
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 3265              		.loc 5 401 9 view .LVU706
 3266 0034 E3B2     		uxtb	r3, r4
 3267 0036 5E2B     		cmp	r3, #94
 3268 0038 00F29E80 		bhi	.L163
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 3269              		.loc 5 405 17 view .LVU707
 3270 003c 3368     		ldr	r3, [r6]
 3271 003e 5E4A     		ldr	r2, .L203
 3272 0040 DB68     		ldr	r3, [r3, #12]
 3273 0042 9342     		cmp	r3, r2
 3274 0044 40F09B80 		bne	.L196
 3275 0048 8020     		movs	r0, #128
 3276              	.L162:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 3277              		.loc 5 405 23 view .LVU708
 3278 004a B388     		ldrh	r3, [r6, #4]
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 3279              		.loc 5 405 33 view .LVU709
 3280 004c 2B44     		add	r3, r3, r5
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3281              		.loc 5 406 12 view .LVU710
 3282 004e 8342     		cmp	r3, r0
 3283 0050 00F39280 		bgt	.L163
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3284              		.loc 5 406 21 view .LVU711
 3285 0054 3368     		ldr	r3, [r6]
 3286 0056 594A     		ldr	r2, .L203+4
 3287 0058 9B68     		ldr	r3, [r3, #8]
 3288 005a 9342     		cmp	r3, r2
 3289 005c 40F09280 		bne	.L197
 3290 0060 4020     		movs	r0, #64
 3291              	.L164:
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3292              		.loc 5 406 27 view .LVU712
 3293 0062 F188     		ldrh	r1, [r6, #6]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3294              		.loc 5 406 37 view .LVU713
 3295 0064 039A     		ldr	r2, [sp, #12]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3296              		.loc 5 406 27 view .LVU714
 3297 0066 0291     		str	r1, [sp, #8]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3298              		.loc 5 406 37 view .LVU715
 3299 0068 8B18     		adds	r3, r1, r2
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3300              		.loc 5 406 12 view .LVU716
 3301 006a 8342     		cmp	r3, r0
 3302 006c 00F38480 		bgt	.L163
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 209


 3303              	.LVL191:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 3304              		.loc 5 413 22 is_stmt 1 view .LVU717
 3305 0070 002A     		cmp	r2, #0
 3306 0072 00F09180 		beq	.L165
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 3307              		.loc 5 415 37 is_stmt 0 view .LVU718
 3308 0076 02FB04F4 		mul	r4, r2, r4
 3309 007a 6FF00049 		mvn	r9, #-2147483648
 3310 007e 059B     		ldr	r3, [sp, #20]
 3311 0080 A144     		add	r9, r9, r4
 3312 0082 1444     		add	r4, r4, r2
 434:../../libdaisy/src/hid/disp/display.h **** 
 3313              		.loc 5 434 19 view .LVU719
 3314 0084 B6F804B0 		ldrh	fp, [r6, #4]
 3315 0088 03EB4909 		add	r9, r3, r9, lsl #1
 3316 008c 023B     		subs	r3, r3, #2
 3317 008e CDF81080 		str	r8, [sp, #16]
 3318 0092 03EB4403 		add	r3, r3, r4, lsl #1
 3319 0096 0C46     		mov	r4, r1
 3320 0098 9A46     		mov	r10, r3
 3321              	.LVL192:
 3322              	.L168:
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 3323              		.loc 5 415 15 view .LVU720
 3324 009a 39F802CF 		ldrh	ip, [r9, #2]!
 3325              	.LVL193:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3326              		.loc 5 416 26 is_stmt 1 view .LVU721
 3327 009e A5B3     		cbz	r5, .L173
 3328              	.LBB5561:
 3329              	.LBB5562:
 3330              	.LBB5563:
 3331              	.LBB5564:
 3332              	.LBB5565:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3333              		.loc 14 246 55 is_stmt 0 view .LVU722
 3334 00a0 04F00703 		and	r3, r4, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3335              		.loc 14 246 49 view .LVU723
 3336 00a4 4FF0010E 		mov	lr, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3337              		.loc 14 246 28 view .LVU724
 3338 00a8 E208     		lsrs	r2, r4, #3
 3339 00aa 5946     		mov	r1, fp
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3340              		.loc 14 246 49 view .LVU725
 3341 00ac 0EFA03FE 		lsl	lr, lr, r3
 3342 00b0 0BF11403 		add	r3, fp, #20
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3343              		.loc 14 246 42 view .LVU726
 3344 00b4 4FFA8EFE 		sxtb	lr, lr
 3345 00b8 03EBC212 		add	r2, r3, r2, lsl #7
 3346              	.LBE5565:
 3347              	.LBE5564:
 3348              	.LBE5563:
 3349              	.LBE5562:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 210


 3350              	.LBE5561:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3351              		.loc 5 416 19 view .LVU727
 3352 00bc 0023     		movs	r3, #0
 3353              	.LBB5583:
 3354              	.LBB5578:
 3355              	.LBB5573:
 3356              	.LBB5569:
 3357              	.LBB5566:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3358              		.loc 14 246 42 view .LVU728
 3359 00be 6FEA0E08 		mvn	r8, lr
 3360 00c2 3244     		add	r2, r2, r6
 3361 00c4 0DE0     		b	.L174
 3362              	.LVL194:
 3363              	.L198:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3364              		.loc 14 246 42 view .LVU729
 3365              	.LBE5566:
 3366              	.LBE5569:
 3367              	.LBE5573:
 3368              	.LBE5578:
 3369              	.LBE5583:
 3370              	.LBB5584:
 3371              	.LBI5584:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 3372              		.loc 4 41 10 is_stmt 1 view .LVU730
 3373              	.LBB5585:
 3374              	.LBI5585:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3375              		.loc 14 239 10 view .LVU731
 3376              	.LBB5586:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3377              		.loc 14 241 9 is_stmt 0 view .LVU732
 3378 00c6 7F29     		cmp	r1, #127
 3379 00c8 06D8     		bhi	.L170
 3380 00ca 3F2C     		cmp	r4, #63
 3381 00cc 04D8     		bhi	.L170
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3382              		.loc 14 244 42 view .LVU733
 3383 00ce 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3384              		.loc 14 243 9 view .LVU734
 3385 00d0 97B1     		cbz	r7, .L172
 3386              	.L195:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3387              		.loc 14 243 9 view .LVU735
 3388              	.LBE5586:
 3389              	.LBE5585:
 3390              	.LBE5584:
 3391              	.LBB5587:
 3392              	.LBB5579:
 3393              	.LBB5574:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3394              		.loc 14 244 42 view .LVU736
 3395 00d2 4EEA0000 		orr	r0, lr, r0
 3396 00d6 1070     		strb	r0, [r2]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 211


 3397              	.L170:
 3398              	.LBE5574:
 3399              	.LBE5579:
 3400              	.LBE5587:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3401              		.loc 5 416 13 is_stmt 1 view .LVU737
 3402 00d8 0133     		adds	r3, r3, #1
 3403              	.LVL195:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3404              		.loc 5 416 26 view .LVU738
 3405 00da 0132     		adds	r2, r2, #1
 3406 00dc 0131     		adds	r1, r1, #1
 3407 00de AB42     		cmp	r3, r5
 3408 00e0 13D0     		beq	.L173
 3409              	.LVL196:
 3410              	.L174:
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 3411              		.loc 5 418 23 is_stmt 0 view .LVU739
 3412 00e2 0CFA03F0 		lsl	r0, ip, r3
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 3413              		.loc 5 418 17 view .LVU740
 3414 00e6 0004     		lsls	r0, r0, #16
 3415 00e8 EDD4     		bmi	.L198
 3416              	.LVL197:
 3417              	.LBB5588:
 3418              	.LBI5561:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 3419              		.loc 4 41 10 is_stmt 1 view .LVU741
 3420              	.LBB5580:
 3421              	.LBI5562:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3422              		.loc 14 239 10 view .LVU742
 3423              	.LBB5575:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3424              		.loc 14 241 9 is_stmt 0 view .LVU743
 3425 00ea 7F29     		cmp	r1, #127
 3426 00ec F4D8     		bhi	.L170
 3427 00ee 3F2C     		cmp	r4, #63
 3428 00f0 F2D8     		bhi	.L170
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3429              		.loc 14 244 42 view .LVU744
 3430 00f2 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3431              		.loc 14 243 9 view .LVU745
 3432 00f4 002F     		cmp	r7, #0
 3433 00f6 ECD0     		beq	.L195
 3434              	.L172:
 3435              	.LVL198:
 3436              	.LBB5570:
 3437              	.LBI5564:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3438              		.loc 14 239 10 is_stmt 1 view .LVU746
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3439              		.loc 14 239 10 is_stmt 0 view .LVU747
 3440              	.LBE5570:
 3441              	.LBE5575:
 3442              	.LBE5580:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 212


 3443              	.LBE5588:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3444              		.loc 5 416 13 view .LVU748
 3445 00f8 0133     		adds	r3, r3, #1
 3446              	.LVL199:
 3447              	.LBB5589:
 3448              	.LBB5581:
 3449              	.LBB5576:
 3450              	.LBB5571:
 3451              	.LBB5567:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3452              		.loc 14 246 42 view .LVU749
 3453 00fa 08EA0000 		and	r0, r8, r0
 3454              	.LBE5567:
 3455              	.LBE5571:
 3456              	.LBE5576:
 3457              	.LBE5581:
 3458              	.LBE5589:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3459              		.loc 5 416 26 view .LVU750
 3460 00fe 0132     		adds	r2, r2, #1
 3461 0100 0131     		adds	r1, r1, #1
 3462 0102 AB42     		cmp	r3, r5
 3463              	.LBB5590:
 3464              	.LBB5582:
 3465              	.LBB5577:
 3466              	.LBB5572:
 3467              	.LBB5568:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3468              		.loc 14 246 42 view .LVU751
 3469 0104 02F8010C 		strb	r0, [r2, #-1]
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3470              		.loc 14 246 42 view .LVU752
 3471              	.LBE5568:
 3472              	.LBE5572:
 3473              	.LBE5577:
 3474              	.LBE5582:
 3475              	.LBE5590:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3476              		.loc 5 416 13 is_stmt 1 view .LVU753
 3477              	.LVL200:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3478              		.loc 5 416 26 view .LVU754
 3479 0108 EBD1     		bne	.L174
 3480              	.LVL201:
 3481              	.L173:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 3482              		.loc 5 413 9 view .LVU755
 413:../../libdaisy/src/hid/disp/display.h ****         {
 3483              		.loc 5 413 22 view .LVU756
 3484 010a D145     		cmp	r9, r10
 3485 010c 04F10104 		add	r4, r4, #1
 3486 0110 C3D1     		bne	.L168
 3487 0112 DDF81080 		ldr	r8, [sp, #16]
 3488              	.LVL202:
 3489              	.L167:
 3490              	.LBB5591:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 213


 3491              	.LBB5592:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3492              		.loc 5 173 33 is_stmt 0 view .LVU757
 3493 0116 3268     		ldr	r2, [r6]
 3494              	.LBE5592:
 3495              	.LBE5591:
 434:../../libdaisy/src/hid/disp/display.h **** 
 3496              		.loc 5 434 18 view .LVU758
 3497 0118 0BEB0504 		add	r4, fp, r5
 3498 011c 2649     		ldr	r1, .L203
 3499              	.LBB5597:
 3500              	.LBB5593:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3501              		.loc 5 173 33 view .LVU759
 3502 011e D368     		ldr	r3, [r2, #12]
 3503              	.LBE5593:
 3504              	.LBE5597:
 434:../../libdaisy/src/hid/disp/display.h **** 
 3505              		.loc 5 434 18 view .LVU760
 3506 0120 A4B2     		uxth	r4, r4
 3507              	.LVL203:
 3508              	.LBB5598:
 3509              	.LBI5591:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 3510              		.loc 5 171 10 is_stmt 1 view .LVU761
 3511              	.LBB5594:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3512              		.loc 5 173 9 view .LVU762
 3513 0122 8B42     		cmp	r3, r1
 3514 0124 34D1     		bne	.L199
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3515              		.loc 5 173 33 is_stmt 0 view .LVU763
 3516 0126 8020     		movs	r0, #128
 3517              	.L175:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3518              		.loc 5 173 19 view .LVU764
 3519 0128 8442     		cmp	r4, r0
 3520 012a 04D3     		bcc	.L176
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3521              		.loc 5 173 44 view .LVU765
 3522 012c D368     		ldr	r3, [r2, #12]
 3523 012e 2249     		ldr	r1, .L203
 3524 0130 8B42     		cmp	r3, r1
 3525 0132 3AD1     		bne	.L200
 3526 0134 7F24     		movs	r4, #127
 3527              	.LVL204:
 3528              	.L176:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3529              		.loc 5 174 34 view .LVU766
 3530 0136 9368     		ldr	r3, [r2, #8]
 3531 0138 204A     		ldr	r2, .L203+4
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3532              		.loc 5 173 19 view .LVU767
 3533 013a B480     		strh	r4, [r6, #4]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3534              		.loc 5 174 9 is_stmt 1 view .LVU768
 3535 013c 9342     		cmp	r3, r2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 214


 3536 013e 24D1     		bne	.L201
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3537              		.loc 5 174 34 is_stmt 0 view .LVU769
 3538 0140 4020     		movs	r0, #64
 3539              	.L178:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3540              		.loc 5 174 19 view .LVU770
 3541 0142 029B     		ldr	r3, [sp, #8]
 3542 0144 8342     		cmp	r3, r0
 3543 0146 06D3     		bcc	.L179
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3544              		.loc 5 174 46 view .LVU771
 3545 0148 3368     		ldr	r3, [r6]
 3546 014a 1C4A     		ldr	r2, .L203+4
 3547 014c 9B68     		ldr	r3, [r3, #8]
 3548 014e 9342     		cmp	r3, r2
 3549 0150 25D1     		bne	.L202
 3550 0152 3F23     		movs	r3, #63
 3551 0154 0293     		str	r3, [sp, #8]
 3552              	.LVL205:
 3553              	.L179:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3554              		.loc 5 174 19 view .LVU772
 3555 0156 029B     		ldr	r3, [sp, #8]
 3556 0158 F380     		strh	r3, [r6, #6]	@ movhi
 3557              	.LVL206:
 3558              	.L161:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3559              		.loc 5 174 19 view .LVU773
 3560              	.LBE5594:
 3561              	.LBE5598:
 3562              	.LBE5560:
 3563              	.LBE5559:
 444:../../libdaisy/src/hid/disp/display.h ****         {
 445:../../libdaisy/src/hid/disp/display.h ****             if(((ChildType*)(this))->ChildType::WriteChar(*str, font, on)
 446:../../libdaisy/src/hid/disp/display.h ****                != *str)
 3564              		.loc 5 446 16 view .LVU774
 3565 015a 019B     		ldr	r3, [sp, #4]
 3566 015c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 445:../../libdaisy/src/hid/disp/display.h ****                != *str)
 3567              		.loc 5 445 13 view .LVU775
 3568 015e 4045     		cmp	r0, r8
 3569 0160 07D1     		bne	.L159
 3570              	.LVL207:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 3571              		.loc 5 443 9 is_stmt 1 view .LVU776
 3572 0162 13F8018F 		ldrb	r8, [r3, #1]!	@ zero_extendqisi2
 3573              	.LVL208:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 3574              		.loc 5 443 9 is_stmt 0 view .LVU777
 3575 0166 0193     		str	r3, [sp, #4]
 3576 0168 B8F1000F 		cmp	r8, #0
 3577 016c 7FF460AF 		bne	.L182
 3578              	.LVL209:
 3579              	.L181:
 3580              	.LBB5603:
 3581              	.LBB5601:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 215


 402:../../libdaisy/src/hid/disp/display.h **** 
 3582              		.loc 5 402 20 view .LVU778
 3583 0170 0020     		movs	r0, #0
 3584              	.L159:
 3585              	.LBE5601:
 3586              	.LBE5603:
 447:../../libdaisy/src/hid/disp/display.h ****             {
 448:../../libdaisy/src/hid/disp/display.h ****                 // Char could not be written
 449:../../libdaisy/src/hid/disp/display.h ****                 return *str;
 450:../../libdaisy/src/hid/disp/display.h ****             }
 451:../../libdaisy/src/hid/disp/display.h **** 
 452:../../libdaisy/src/hid/disp/display.h ****             // Next char
 453:../../libdaisy/src/hid/disp/display.h ****             str++;
 454:../../libdaisy/src/hid/disp/display.h ****         }
 455:../../libdaisy/src/hid/disp/display.h **** 
 456:../../libdaisy/src/hid/disp/display.h ****         // Everything ok
 457:../../libdaisy/src/hid/disp/display.h ****         return *str;
 458:../../libdaisy/src/hid/disp/display.h ****     }
 3587              		.loc 5 458 5 view .LVU779
 3588 0172 09B0     		add	sp, sp, #36
 3589              		.cfi_remember_state
 3590              		.cfi_def_cfa_offset 36
 3591              		@ sp needed
 3592 0174 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3593              	.LVL210:
 3594              	.L163:
 3595              		.cfi_restore_state
 3596              	.LBB5604:
 3597              	.LBB5602:
 402:../../libdaisy/src/hid/disp/display.h **** 
 3598              		.loc 5 402 20 view .LVU780
 3599 0178 4FF00008 		mov	r8, #0
 3600              	.LVL211:
 402:../../libdaisy/src/hid/disp/display.h **** 
 3601              		.loc 5 402 20 view .LVU781
 3602 017c EDE7     		b	.L161
 3603              	.LVL212:
 3604              	.L196:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 3605              		.loc 5 405 17 view .LVU782
 3606 017e 3046     		mov	r0, r6
 3607 0180 9847     		blx	r3
 3608              	.LVL213:
 3609 0182 62E7     		b	.L162
 3610              	.L197:
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3611              		.loc 5 406 21 view .LVU783
 3612 0184 3046     		mov	r0, r6
 3613 0186 9847     		blx	r3
 3614              	.LVL214:
 3615 0188 6BE7     		b	.L164
 3616              	.LVL215:
 3617              	.L201:
 3618              	.LBB5599:
 3619              	.LBB5595:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3620              		.loc 5 174 33 view .LVU784
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 216


 3621 018a 3046     		mov	r0, r6
 3622 018c 9847     		blx	r3
 3623              	.LVL216:
 3624 018e D8E7     		b	.L178
 3625              	.LVL217:
 3626              	.L199:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3627              		.loc 5 173 32 view .LVU785
 3628 0190 3046     		mov	r0, r6
 3629 0192 9847     		blx	r3
 3630              	.LVL218:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3631              		.loc 5 173 44 view .LVU786
 3632 0194 3268     		ldr	r2, [r6]
 3633 0196 C7E7     		b	.L175
 3634              	.LVL219:
 3635              	.L165:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3636              		.loc 5 173 44 view .LVU787
 3637              	.LBE5595:
 3638              	.LBE5599:
 434:../../libdaisy/src/hid/disp/display.h **** 
 3639              		.loc 5 434 19 view .LVU788
 3640 0198 B6F804B0 		ldrh	fp, [r6, #4]
 3641 019c BBE7     		b	.L167
 3642              	.LVL220:
 3643              	.L202:
 3644              	.LBB5600:
 3645              	.LBB5596:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3646              		.loc 5 174 45 view .LVU789
 3647 019e 3046     		mov	r0, r6
 3648 01a0 9847     		blx	r3
 3649              	.LVL221:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3650              		.loc 5 174 19 view .LVU790
 3651 01a2 431E     		subs	r3, r0, #1
 3652 01a4 9BB2     		uxth	r3, r3
 3653 01a6 0293     		str	r3, [sp, #8]
 3654              	.LVL222:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3655              		.loc 5 174 19 view .LVU791
 3656 01a8 D5E7     		b	.L179
 3657              	.LVL223:
 3658              	.L200:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3659              		.loc 5 173 43 view .LVU792
 3660 01aa 3046     		mov	r0, r6
 3661 01ac 9847     		blx	r3
 3662              	.LVL224:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3663              		.loc 5 173 19 view .LVU793
 3664 01ae 0138     		subs	r0, r0, #1
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3665              		.loc 5 174 34 view .LVU794
 3666 01b0 3268     		ldr	r2, [r6]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 217


 3667              		.loc 5 173 19 view .LVU795
 3668 01b2 84B2     		uxth	r4, r0
 3669              	.LVL225:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3670              		.loc 5 173 19 view .LVU796
 3671 01b4 BFE7     		b	.L176
 3672              	.L204:
 3673 01b6 00BF     		.align	2
 3674              	.L203:
 3675 01b8 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 3676 01bc 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 3677              	.LBE5596:
 3678              	.LBE5600:
 3679              	.LBE5602:
 3680              	.LBE5604:
 3681              		.cfi_endproc
 3682              	.LFE5545:
 3684              		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 3685              		.align	1
 3686              		.p2align 2,,3
 3687              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawP
 3688              		.syntax unified
 3689              		.thumb
 3690              		.thumb_func
 3691              		.fpu fpv5-d16
 3693              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawPixelEjj
 3694              	.LVL226:
 3695              	.LFB5754:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 3696              		.loc 4 41 10 is_stmt 1 view -0
 3697              		.cfi_startproc
 3698              		@ args = 0, pretend = 0, frame = 0
 3699              		@ frame_needed = 0, uses_anonymous_args = 0
 3700              		@ link register save eliminated.
 3701              	.LBB5609:
 3702              	.LBI5609:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3703              		.loc 14 239 10 view .LVU798
 3704              	.LBB5610:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3705              		.loc 14 241 9 is_stmt 0 view .LVU799
 3706 0000 7F29     		cmp	r1, #127
 3707 0002 1ED8     		bhi	.L205
 3708 0004 3F2A     		cmp	r2, #63
 3709 0006 1CD8     		bhi	.L205
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3710              		.loc 14 243 9 view .LVU800
 3711 0008 6BB1     		cbz	r3, .L207
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3712              		.loc 14 244 28 view .LVU801
 3713 000a D308     		lsrs	r3, r2, #3
 3714              	.LVL227:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3715              		.loc 14 244 48 view .LVU802
 3716 000c 4FF0010C 		mov	ip, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3717              		.loc 14 244 54 view .LVU803
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 218


 3718 0010 02F00702 		and	r2, r2, #7
 3719              	.LVL228:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3720              		.loc 14 244 42 view .LVU804
 3721 0014 01EBC313 		add	r3, r1, r3, lsl #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3722              		.loc 14 244 48 view .LVU805
 3723 0018 0CFA02F2 		lsl	r2, ip, r2
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3724              		.loc 14 244 42 view .LVU806
 3725 001c C118     		adds	r1, r0, r3
 3726              	.LVL229:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3727              		.loc 14 244 42 view .LVU807
 3728 001e 0B7D     		ldrb	r3, [r1, #20]	@ zero_extendqisi2
 3729 0020 1A43     		orrs	r2, r2, r3
 3730 0022 0A75     		strb	r2, [r1, #20]
 3731 0024 7047     		bx	lr
 3732              	.LVL230:
 3733              	.L207:
 3734              	.LBB5611:
 3735              	.LBI5611:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3736              		.loc 14 239 10 is_stmt 1 view .LVU808
 3737              	.LBB5612:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3738              		.loc 14 246 28 is_stmt 0 view .LVU809
 3739 0026 D308     		lsrs	r3, r2, #3
 3740              	.LVL231:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3741              		.loc 14 246 49 view .LVU810
 3742 0028 4FF0010C 		mov	ip, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3743              		.loc 14 246 55 view .LVU811
 3744 002c 02F00702 		and	r2, r2, #7
 3745              	.LVL232:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3746              		.loc 14 246 42 view .LVU812
 3747 0030 01EBC313 		add	r3, r1, r3, lsl #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3748              		.loc 14 246 49 view .LVU813
 3749 0034 0CFA02FC 		lsl	ip, ip, r2
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3750              		.loc 14 246 42 view .LVU814
 3751 0038 C118     		adds	r1, r0, r3
 3752              	.LVL233:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3753              		.loc 14 246 42 view .LVU815
 3754 003a 0A7D     		ldrb	r2, [r1, #20]	@ zero_extendqisi2
 3755 003c 22EA0C02 		bic	r2, r2, ip
 3756 0040 0A75     		strb	r2, [r1, #20]
 3757              	.LVL234:
 3758              	.L205:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3759              		.loc 14 246 42 view .LVU816
 3760              	.LBE5612:
 3761              	.LBE5611:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 219


 3762              	.LBE5610:
 3763              	.LBE5609:
  44:../../libdaisy/src/hid/disp/oled_display.h **** 
 3764              		.loc 4 44 5 view .LVU817
 3765 0042 7047     		bx	lr
 3766              		.cfi_endproc
 3767              	.LFE5754:
 3769              		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 3770              		.align	1
 3771              		.p2align 2,,3
 3772              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 3773              		.syntax unified
 3774              		.thumb
 3775              		.thumb_func
 3776              		.fpu fpv5-d16
 3778              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 3779              	.LVL235:
 3780              	.LFB5540:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 3781              		.loc 5 221 10 is_stmt 1 view -0
 3782              		.cfi_startproc
 3783              		@ args = 8, pretend = 0, frame = 8
 3784              		@ frame_needed = 0, uses_anonymous_args = 0
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 3785              		.loc 5 221 10 is_stmt 0 view .LVU819
 3786 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3787              		.cfi_def_cfa_offset 36
 3788              		.cfi_offset 4, -36
 3789              		.cfi_offset 5, -32
 3790              		.cfi_offset 6, -28
 3791              		.cfi_offset 7, -24
 3792              		.cfi_offset 8, -20
 3793              		.cfi_offset 9, -16
 3794              		.cfi_offset 10, -12
 3795              		.cfi_offset 11, -8
 3796              		.cfi_offset 14, -4
 3797 0004 83B0     		sub	sp, sp, #12
 3798              		.cfi_def_cfa_offset 48
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 3799              		.loc 5 227 52 view .LVU820
 3800 0006 5C1A     		subs	r4, r3, r1
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 3801              		.loc 5 221 10 view .LVU821
 3802 0008 0C9E     		ldr	r6, [sp, #48]
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 3803              		.loc 5 227 22 view .LVU822
 3804 000a 002C     		cmp	r4, #0
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 3805              		.loc 5 221 10 view .LVU823
 3806 000c 9DF83490 		ldrb	r9, [sp, #52]	@ zero_extendqisi2
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 3807              		.loc 5 228 52 view .LVU824
 3808 0010 A6EB0208 		sub	r8, r6, r2
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 3809              		.loc 5 227 22 view .LVU825
 3810 0014 B8BF     		it	lt
 3811 0016 6442     		rsblt	r4, r4, #0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 220


 3812              	.LVL236:
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 3813              		.loc 5 228 22 view .LVU826
 3814 0018 B8F1000F 		cmp	r8, #0
 3815 001c B8BF     		it	lt
 3816 001e C8F10008 		rsblt	r8, r8, #0
 3817              	.LVL237:
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 3818              		.loc 5 229 42 view .LVU827
 3819 0022 8B42     		cmp	r3, r1
 3820 0024 8CBF     		ite	hi
 3821 0026 4FF0010A 		movhi	r10, #1
 3822 002a 4FF0FF3A 		movls	r10, #-1
 3823              	.LVL238:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 3824              		.loc 5 230 42 view .LVU828
 3825 002e 9642     		cmp	r6, r2
 231:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error2;
 3826              		.loc 5 231 22 view .LVU829
 3827 0030 A4EB080C 		sub	ip, r4, r8
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 3828              		.loc 5 230 42 view .LVU830
 3829 0034 51D8     		bhi	.L210
 3830              	.LVL239:
 3831              	.LBB5629:
 3832              	.LBI5629:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 3833              		.loc 4 41 10 is_stmt 1 discriminator 4 view .LVU831
 3834              	.LBB5630:
 3835              	.LBI5630:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3836              		.loc 14 239 10 discriminator 4 view .LVU832
 3837              	.LBE5630:
 3838              	.LBE5629:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 3839              		.loc 5 230 42 is_stmt 0 discriminator 4 view .LVU833
 3840 0036 4FF0FF35 		mov	r5, #-1
 3841              	.LBB5646:
 3842              	.LBB5640:
 3843              	.LBB5631:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3844              		.loc 14 241 9 discriminator 4 view .LVU834
 3845 003a 7F2B     		cmp	r3, #127
 3846              	.LBE5631:
 3847              	.LBE5640:
 3848              	.LBE5646:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 3849              		.loc 5 230 42 discriminator 4 view .LVU835
 3850 003c 0195     		str	r5, [sp, #4]
 3851              	.LBB5647:
 3852              	.LBB5641:
 3853              	.LBB5636:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3854              		.loc 14 241 9 discriminator 4 view .LVU836
 3855 003e 12D8     		bhi	.L211
 3856 0040 3F2E     		cmp	r6, #63
 3857 0042 10D8     		bhi	.L211
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 221


 3858              	.LVL240:
 3859              	.L222:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3860              		.loc 14 244 28 view .LVU837
 3861 0044 F508     		lsrs	r5, r6, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3862              		.loc 14 244 54 view .LVU838
 3863 0046 06F0070E 		and	lr, r6, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3864              		.loc 14 244 48 view .LVU839
 3865 004a 0127     		movs	r7, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3866              		.loc 14 244 42 view .LVU840
 3867 004c 03EBC515 		add	r5, r3, r5, lsl #7
 3868 0050 0544     		add	r5, r5, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3869              		.loc 14 243 9 view .LVU841
 3870 0052 B9F1000F 		cmp	r9, #0
 3871 0056 47D0     		beq	.L212
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3872              		.loc 14 244 48 view .LVU842
 3873 0058 07FA0EF7 		lsl	r7, r7, lr
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3874              		.loc 14 244 42 view .LVU843
 3875 005c 95F814E0 		ldrb	lr, [r5, #20]	@ zero_extendqisi2
 3876 0060 47EA0E07 		orr	r7, r7, lr
 3877 0064 2F75     		strb	r7, [r5, #20]
 3878              	.LVL241:
 3879              	.L211:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3880              		.loc 14 244 42 view .LVU844
 3881              	.LBE5636:
 3882              	.LBE5641:
 3883              	.LBE5647:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 3884              		.loc 5 239 26 is_stmt 1 view .LVU845
 3885 0066 9642     		cmp	r6, r2
 3886 0068 01D1     		bne	.L215
 3887              	.L234:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 3888              		.loc 5 239 26 is_stmt 0 view .LVU846
 3889 006a 8B42     		cmp	r3, r1
 3890 006c 29D0     		beq	.L208
 3891              	.L215:
 3892              	.LVL242:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 3893              		.loc 5 243 23 view .LVU847
 3894 006e C8F10007 		rsb	r7, r8, #0
 3895              	.L217:
 3896              	.LVL243:
 3897              	.LBB5648:
 3898              	.LBI5648:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 3899              		.loc 4 41 10 is_stmt 1 view .LVU848
 3900              	.LBB5649:
 3901              	.LBI5649:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 222


 3902              		.loc 14 239 10 view .LVU849
 3903              	.LBB5650:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3904              		.loc 14 241 9 is_stmt 0 view .LVU850
 3905 0072 7F29     		cmp	r1, #127
 3906 0074 14D8     		bhi	.L218
 3907 0076 3F2A     		cmp	r2, #63
 3908 0078 12D8     		bhi	.L218
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3909              		.loc 14 244 28 view .LVU851
 3910 007a D508     		lsrs	r5, r2, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3911              		.loc 14 244 54 view .LVU852
 3912 007c 02F0070B 		and	fp, r2, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3913              		.loc 14 244 48 view .LVU853
 3914 0080 4FF0010E 		mov	lr, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3915              		.loc 14 244 42 view .LVU854
 3916 0084 01EBC515 		add	r5, r1, r5, lsl #7
 3917 0088 0544     		add	r5, r5, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3918              		.loc 14 243 9 view .LVU855
 3919 008a B9F1000F 		cmp	r9, #0
 3920 008e 1BD0     		beq	.L219
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3921              		.loc 14 244 48 view .LVU856
 3922 0090 0EFA0BFE 		lsl	lr, lr, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3923              		.loc 14 244 42 view .LVU857
 3924 0094 95F814B0 		ldrb	fp, [r5, #20]	@ zero_extendqisi2
 3925 0098 4EEA0B0E 		orr	lr, lr, fp
 3926 009c 85F814E0 		strb	lr, [r5, #20]
 3927              	.L218:
 3928              	.LVL244:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3929              		.loc 14 244 42 view .LVU858
 3930              	.LBE5650:
 3931              	.LBE5649:
 3932              	.LBE5648:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 3933              		.loc 5 243 13 view .LVU859
 3934 00a0 B7EB4C0F 		cmp	r7, ip, lsl #1
 242:../../libdaisy/src/hid/disp/display.h ****             if(error2 > -deltaY)
 3935              		.loc 5 242 20 view .LVU860
 3936 00a4 4FEA4C05 		lsl	r5, ip, #1
 3937              	.LVL245:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 3938              		.loc 5 243 13 view .LVU861
 3939 00a8 02DA     		bge	.L220
 245:../../libdaisy/src/hid/disp/display.h ****                 x1 += signX;
 3940              		.loc 5 245 23 view .LVU862
 3941 00aa ACEB080C 		sub	ip, ip, r8
 3942              	.LVL246:
 246:../../libdaisy/src/hid/disp/display.h ****             }
 3943              		.loc 5 246 20 view .LVU863
 3944 00ae 5144     		add	r1, r1, r10
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 223


 3945              	.LVL247:
 3946              	.L220:
 249:../../libdaisy/src/hid/disp/display.h ****             {
 3947              		.loc 5 249 13 view .LVU864
 3948 00b0 AC42     		cmp	r4, r5
 3949 00b2 02DD     		ble	.L221
 252:../../libdaisy/src/hid/disp/display.h ****             }
 3950              		.loc 5 252 20 view .LVU865
 3951 00b4 019D     		ldr	r5, [sp, #4]
 3952              	.LVL248:
 251:../../libdaisy/src/hid/disp/display.h ****                 y1 += signY;
 3953              		.loc 5 251 23 view .LVU866
 3954 00b6 A444     		add	ip, ip, r4
 3955              	.LVL249:
 252:../../libdaisy/src/hid/disp/display.h ****             }
 3956              		.loc 5 252 20 view .LVU867
 3957 00b8 2A44     		add	r2, r2, r5
 3958              	.LVL250:
 3959              	.L221:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 3960              		.loc 5 239 26 is_stmt 1 view .LVU868
 3961 00ba 9942     		cmp	r1, r3
 3962 00bc D9D1     		bne	.L217
 239:../../libdaisy/src/hid/disp/display.h ****         {
 3963              		.loc 5 239 26 is_stmt 0 view .LVU869
 3964 00be 9642     		cmp	r6, r2
 3965 00c0 D7D1     		bne	.L217
 3966              	.L208:
 255:../../libdaisy/src/hid/disp/display.h **** 
 3967              		.loc 5 255 5 view .LVU870
 3968 00c2 03B0     		add	sp, sp, #12
 3969              		.cfi_remember_state
 3970              		.cfi_def_cfa_offset 36
 3971              		@ sp needed
 3972 00c4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3973              	.LVL251:
 3974              	.L219:
 3975              		.cfi_restore_state
 3976              	.LBB5655:
 3977              	.LBB5654:
 3978              	.LBB5653:
 3979              	.LBB5651:
 3980              	.LBI5651:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3981              		.loc 14 239 10 is_stmt 1 view .LVU871
 3982              	.LBB5652:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3983              		.loc 14 246 49 is_stmt 0 view .LVU872
 3984 00c8 0EFA0BFB 		lsl	fp, lr, fp
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3985              		.loc 14 246 42 view .LVU873
 3986 00cc 95F814E0 		ldrb	lr, [r5, #20]	@ zero_extendqisi2
 3987 00d0 2EEA0B0E 		bic	lr, lr, fp
 3988 00d4 85F814E0 		strb	lr, [r5, #20]
 3989 00d8 E2E7     		b	.L218
 3990              	.LVL252:
 3991              	.L210:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 224


 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3992              		.loc 14 246 42 view .LVU874
 3993              	.LBE5652:
 3994              	.LBE5651:
 3995              	.LBE5653:
 3996              	.LBE5654:
 3997              	.LBE5655:
 3998              	.LBB5656:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 3999              		.loc 4 41 10 is_stmt 1 view .LVU875
 4000              	.LBB5642:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4001              		.loc 14 239 10 view .LVU876
 4002              	.LBE5642:
 4003              	.LBE5656:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 4004              		.loc 5 230 42 is_stmt 0 view .LVU877
 4005 00da 0125     		movs	r5, #1
 4006              	.LBB5657:
 4007              	.LBB5643:
 4008              	.LBB5637:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4009              		.loc 14 241 9 view .LVU878
 4010 00dc 7F2B     		cmp	r3, #127
 4011              	.LBE5637:
 4012              	.LBE5643:
 4013              	.LBE5657:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 4014              		.loc 5 230 42 view .LVU879
 4015 00de 0195     		str	r5, [sp, #4]
 4016              	.LBB5658:
 4017              	.LBB5644:
 4018              	.LBB5638:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4019              		.loc 14 241 9 view .LVU880
 4020 00e0 C5D8     		bhi	.L215
 4021 00e2 3F2E     		cmp	r6, #63
 4022 00e4 AED9     		bls	.L222
 4023 00e6 C2E7     		b	.L215
 4024              	.LVL253:
 4025              	.L212:
 4026              	.LBB5632:
 4027              	.LBI5632:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4028              		.loc 14 239 10 is_stmt 1 view .LVU881
 4029              	.LBB5633:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4030              		.loc 14 246 49 is_stmt 0 view .LVU882
 4031 00e8 07FA0EFE 		lsl	lr, r7, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4032              		.loc 14 246 42 view .LVU883
 4033 00ec 2F7D     		ldrb	r7, [r5, #20]	@ zero_extendqisi2
 4034              	.LBE5633:
 4035              	.LBE5632:
 4036              	.LBE5638:
 4037              	.LBE5644:
 4038              	.LBE5658:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 225


 239:../../libdaisy/src/hid/disp/display.h ****         {
 4039              		.loc 5 239 26 view .LVU884
 4040 00ee 9642     		cmp	r6, r2
 4041              	.LBB5659:
 4042              	.LBB5645:
 4043              	.LBB5639:
 4044              	.LBB5635:
 4045              	.LBB5634:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4046              		.loc 14 246 42 view .LVU885
 4047 00f0 27EA0E07 		bic	r7, r7, lr
 4048 00f4 2F75     		strb	r7, [r5, #20]
 4049              	.LVL254:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4050              		.loc 14 246 42 view .LVU886
 4051              	.LBE5634:
 4052              	.LBE5635:
 4053              	.LBE5639:
 4054              	.LBE5645:
 4055              	.LBE5659:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 4056              		.loc 5 239 26 is_stmt 1 view .LVU887
 4057 00f6 B8D0     		beq	.L234
 4058 00f8 B9E7     		b	.L215
 4059              		.cfi_endproc
 4060              	.LFE5540:
 4062 00fa 00BF     		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 4063              		.align	1
 4064              		.p2align 2,,3
 4065              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 4066              		.syntax unified
 4067              		.thumb
 4068              		.thumb_func
 4069              		.fpu fpv5-d16
 4071              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 4072              	.LVL255:
 4073              	.LFB6195:
 283:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 4074              		.loc 5 283 10 view -0
 4075              		.cfi_startproc
 4076              		@ args = 12, pretend = 0, frame = 8
 4077              		@ frame_needed = 0, uses_anonymous_args = 0
 283:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 4078              		.loc 5 283 10 is_stmt 0 view .LVU889
 4079 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4080              		.cfi_def_cfa_offset 36
 4081              		.cfi_offset 4, -36
 4082              		.cfi_offset 5, -32
 4083              		.cfi_offset 6, -28
 4084              		.cfi_offset 7, -24
 4085              		.cfi_offset 8, -20
 4086              		.cfi_offset 9, -16
 4087              		.cfi_offset 10, -12
 4088              		.cfi_offset 11, -8
 4089              		.cfi_offset 14, -4
 4090 0004 2DED068B 		vpush.64	{d8, d9, d10}
 4091              		.cfi_def_cfa_offset 60
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 226


 4092              		.cfi_offset 80, -60
 4093              		.cfi_offset 81, -56
 4094              		.cfi_offset 82, -52
 4095              		.cfi_offset 83, -48
 4096              		.cfi_offset 84, -44
 4097              		.cfi_offset 85, -40
 4098 0008 83B0     		sub	sp, sp, #12
 4099              		.cfi_def_cfa_offset 72
 283:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 4100              		.loc 5 283 10 view .LVU890
 4101 000a 1F46     		mov	r7, r3
 4102 000c 8046     		mov	r8, r0
 4103 000e 0D46     		mov	r5, r1
 4104 0010 9DF85030 		ldrb	r3, [sp, #80]	@ zero_extendqisi2
 4105              	.LVL256:
 283:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 4106              		.loc 5 283 10 view .LVU891
 4107 0014 1646     		mov	r6, r2
 4108 0016 0193     		str	r3, [sp, #4]
 306:../../libdaisy/src/hid/disp/display.h ****         {
 4109              		.loc 5 306 9 view .LVU892
 4110 0018 139B     		ldr	r3, [sp, #76]
 4111 001a 002B     		cmp	r3, #0
 4112 001c C0F22182 		blt	.L236
 313:../../libdaisy/src/hid/disp/display.h **** 
 4113              		.loc 5 313 27 view .LVU893
 4114 0020 129A     		ldr	r2, [sp, #72]
 4115              	.LVL257:
 313:../../libdaisy/src/hid/disp/display.h **** 
 4116              		.loc 5 313 27 view .LVU894
 4117 0022 1344     		add	r3, r3, r2
 4118 0024 06EE103A 		vmov	s12, r3	@ int
 4119              	.LVL258:
 4120              	.L237:
 312:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 4121              		.loc 5 312 27 view .LVU895
 4122 0028 DDED127A 		vldr.32	s15, [sp, #72]	@ int
 313:../../libdaisy/src/hid/disp/display.h **** 
 4123              		.loc 5 313 27 view .LVU896
 4124 002c B8EEC66B 		vcvt.f64.s32	d6, s12
 312:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 4125              		.loc 5 312 27 view .LVU897
 4126 0030 9FEDCD4B 		vldr.64	d4, .L312
 4127 0034 B8EEE77B 		vcvt.f64.s32	d7, s15
 4128 0038 9FEDCD5B 		vldr.64	d5, .L312+8
 4129 003c 27EE047B 		vmul.f64	d7, d7, d4
 313:../../libdaisy/src/hid/disp/display.h **** 
 4130              		.loc 5 313 27 view .LVU898
 4131 0040 26EE046B 		vmul.f64	d6, d6, d4
 312:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 4132              		.loc 5 312 27 view .LVU899
 4133 0044 87EE050B 		vdiv.f64	d0, d7, d5
 313:../../libdaisy/src/hid/disp/display.h **** 
 4134              		.loc 5 313 27 view .LVU900
 4135 0048 86EE05AB 		vdiv.f64	d10, d6, d5
 312:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 4136              		.loc 5 312 25 view .LVU901
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 227


 4137 004c F7EEC08B 		vcvt.f32.f64	s17, d0
 4138              	.LVL259:
 4139              	.LBB5692:
 4140              	.LBB5693:
 4141              		.file 32 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** /** @file include/cmath
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  as macros in C).
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  */
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** //
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** //
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #pragma GCC system_header
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/c++config.h>
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #include <ext/type_traits.h>
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #include_next <math.h>
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/std_abs.h>
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 228


  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef div
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acos
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asin
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan2
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ceil
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cos
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cosh
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fabs
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef floor
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmod
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef frexp
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ldexp
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log10
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef modf
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef pow
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sin
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sinh
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sqrt
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tan
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tanh
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** extern "C++"
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** {
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** {
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acos;
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(float __x)
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(long double __x)
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     acos(_Tp __x)
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_acos(__x); }
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asin;
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(float __x)
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 229


 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(long double __x)
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     asin(_Tp __x)
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_asin(__x); }
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(float __x)
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(long double __x)
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     atan(_Tp __x)
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_atan(__x); }
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan2;
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(float __y, float __x)
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(long double __y, long double __x)
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ceil;
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(float __x)
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceilf(__x); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 230


 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(long double __x)
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     ceil(_Tp __x)
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cos;
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(float __x)
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 4142              		.loc 32 185 26 view .LVU902
 4143 0050 B0EE680A 		vmov.f32	s0, s17
 4144 0054 FFF7FEFF 		bl	cosf
 4145              	.LVL260:
 4146              		.loc 32 185 26 view .LVU903
 4147              	.LBE5693:
 4148              	.LBE5692:
 315:../../libdaisy/src/hid/disp/display.h ****         start_y = -sin(start_angle_rad) * radius;
 4149              		.loc 5 315 17 view .LVU904
 4150 0058 07EE907A 		vmov	s15, r7	@ int
 313:../../libdaisy/src/hid/disp/display.h **** 
 4151              		.loc 5 313 25 view .LVU905
 4152 005c B7EECAAB 		vcvt.f32.f64	s20, d10
 4153              	.LVL261:
 4154              	.LBB5696:
 4155              	.LBI5692:
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 4156              		.loc 32 184 3 is_stmt 1 view .LVU906
 4157              	.LBB5694:
 4158              		.loc 32 185 5 view .LVU907
 4159              		.loc 32 185 5 is_stmt 0 view .LVU908
 4160              	.LBE5694:
 4161              	.LBE5696:
 315:../../libdaisy/src/hid/disp/display.h ****         start_y = -sin(start_angle_rad) * radius;
 4162              		.loc 5 315 17 view .LVU909
 4163 0060 F8EE679A 		vcvt.f32.u32	s19, s15
 4164              	.LBB5697:
 4165              	.LBB5695:
 4166              		.loc 32 185 26 view .LVU910
 4167 0064 B0EE408A 		vmov.f32	s16, s0
 4168              	.LBE5695:
 4169              	.LBE5697:
 4170              	.LBB5698:
 4171              	.LBB5699:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(long double __x)
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosl(__x); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 231


 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     cos(_Tp __x)
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cos(__x); }
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cosh;
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(float __x)
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(long double __x)
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshl(__x); }
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     cosh(_Tp __x)
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cosh(__x); }
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp;
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(float __x)
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expf(__x); }
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(long double __x)
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expl(__x); }
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     exp(_Tp __x)
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_exp(__x); }
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fabs;
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(float __x)
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsf(__x); }
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(long double __x)
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsl(__x); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 232


 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     fabs(_Tp __x)
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_fabs(__x); }
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::floor;
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(float __x)
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorf(__x); }
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(long double __x)
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorl(__x); }
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     floor(_Tp __x)
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_floor(__x); }
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmod;
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(float __x, float __y)
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodf(__x, __y); }
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(long double __x, long double __y)
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodl(__x, __y); }
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     fmod(_Tp __x, _Up __y)
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       return fmod(__type(__x), __type(__y));
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::frexp;
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(float __x, int* __exp)
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 233


 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(long double __x, int* __exp)
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     frexp(_Tp __x, int* __exp)
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_frexp(__x, __exp); }
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ldexp;
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(float __x, int __exp)
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(long double __x, int __exp)
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     ldexp(_Tp __x, int __exp)
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log;
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   log(float __x)
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logf(__x); }
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   log(long double __x)
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logl(__x); }
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     log(_Tp __x)
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log(__x); }
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log10;
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(float __x)
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10f(__x); }
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 234


 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(long double __x)
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10l(__x); }
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     log10(_Tp __x)
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log10(__x); }
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::modf;
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(float __x, float* __iptr)
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modff(__x, __iptr); }
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(long double __x, long double* __iptr)
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::pow;
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, float __y)
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powf(__x, __y); }
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, long double __y)
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powl(__x, __y); }
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #if __cplusplus < 201103L
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline double
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(double __x, int __i)
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powi(__x, __i); }
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, int __n)
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powif(__x, __n); }
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, int __n)
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powil(__x, __n); }
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     pow(_Tp __x, _Up __y)
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 235


 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       return pow(__type(__x), __type(__y));
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sin;
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   sin(float __x)
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
 4172              		.loc 32 426 26 view .LVU911
 4173 0068 B0EE680A 		vmov.f32	s0, s17
 4174 006c FFF7FEFF 		bl	sinf
 4175              	.LVL262:
 4176              	.LBE5699:
 4177              	.LBE5698:
 316:../../libdaisy/src/hid/disp/display.h ****         end_x   = cos(end_angle_rad) * radius;
 4178              		.loc 5 316 17 view .LVU912
 4179 0070 60EE698A 		vnmul.f32	s17, s0, s19
 4180              	.LVL263:
 4181              	.LBB5701:
 4182              	.LBB5702:
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 4183              		.loc 32 185 26 view .LVU913
 4184 0074 B0EE4A0A 		vmov.f32	s0, s20
 4185 0078 FFF7FEFF 		bl	cosf
 4186              	.LVL264:
 4187 007c B0EE409A 		vmov.f32	s18, s0
 4188              	.LBE5702:
 4189              	.LBE5701:
 4190              	.LBB5704:
 4191              	.LBB5705:
 4192              		.loc 32 426 26 view .LVU914
 4193 0080 B0EE4A0A 		vmov.f32	s0, s20
 4194 0084 FFF7FEFF 		bl	sinf
 4195              	.LVL265:
 4196              	.LBE5705:
 4197              	.LBE5704:
 318:../../libdaisy/src/hid/disp/display.h **** 
 4198              		.loc 5 318 17 view .LVU915
 4199 0088 20EE690A 		vnmul.f32	s0, s0, s19
 315:../../libdaisy/src/hid/disp/display.h ****         start_y = -sin(start_angle_rad) * radius;
 4200              		.loc 5 315 17 view .LVU916
 4201 008c 29EE888A 		vmul.f32	s16, s19, s16
 4202              	.LVL266:
 4203              	.LBB5707:
 4204              	.LBI5698:
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
 4205              		.loc 32 425 3 is_stmt 1 view .LVU917
 4206              	.LBB5700:
 4207              		.loc 32 426 5 view .LVU918
 4208              		.loc 32 426 5 is_stmt 0 view .LVU919
 4209              	.LBE5700:
 4210              	.LBE5707:
 4211              	.LBB5708:
 4212              	.LBI5701:
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 4213              		.loc 32 184 3 is_stmt 1 view .LVU920
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 236


 4214              	.LBB5703:
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 4215              		.loc 32 185 5 view .LVU921
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 4216              		.loc 32 185 5 is_stmt 0 view .LVU922
 4217              	.LBE5703:
 4218              	.LBE5708:
 317:../../libdaisy/src/hid/disp/display.h ****         end_y   = -sin(end_angle_rad) * radius;
 4219              		.loc 5 317 17 view .LVU923
 4220 0090 29EE899A 		vmul.f32	s18, s19, s18
 4221              	.LVL267:
 4222              	.LBB5709:
 4223              	.LBI5704:
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
 4224              		.loc 32 425 3 is_stmt 1 view .LVU924
 4225              	.LBB5706:
 4226              		.loc 32 426 5 view .LVU925
 4227              		.loc 32 426 5 is_stmt 0 view .LVU926
 4228              	.LBE5706:
 4229              	.LBE5709:
 322:../../libdaisy/src/hid/disp/display.h ****            < 2.0f)
 4230              		.loc 5 322 25 view .LVU927
 4231 0094 70EE687A 		vsub.f32	s15, s0, s17
 321:../../libdaisy/src/hid/disp/display.h ****                + (end_y - start_y) * (end_y - start_y)
 4232              		.loc 5 321 9 view .LVU928
 4233 0098 F0EE006A 		vmov.f32	s13, #2.0e+0
 321:../../libdaisy/src/hid/disp/display.h ****                + (end_y - start_y) * (end_y - start_y)
 4234              		.loc 5 321 19 view .LVU929
 4235 009c 39EE487A 		vsub.f32	s14, s18, s16
 322:../../libdaisy/src/hid/disp/display.h ****            < 2.0f)
 4236              		.loc 5 322 36 view .LVU930
 4237 00a0 67EEA77A 		vmul.f32	s15, s15, s15
 322:../../libdaisy/src/hid/disp/display.h ****            < 2.0f)
 4238              		.loc 5 322 16 view .LVU931
 4239 00a4 E7EE077A 		vfma.f32	s15, s14, s14
 321:../../libdaisy/src/hid/disp/display.h ****                + (end_y - start_y) * (end_y - start_y)
 4240              		.loc 5 321 9 view .LVU932
 4241 00a8 F4EEE67A 		vcmpe.f32	s15, s13
 4242 00ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4243 00b0 06D5     		bpl	.L294
 325:../../libdaisy/src/hid/disp/display.h ****                 circle = true;
 4244              		.loc 5 325 13 view .LVU933
 4245 00b2 139B     		ldr	r3, [sp, #76]
 4246 00b4 B42B     		cmp	r3, #180
 4247 00b6 40F39680 		ble	.L235
 326:../../libdaisy/src/hid/disp/display.h ****             else
 4248              		.loc 5 326 24 view .LVU934
 4249 00ba 4FF00109 		mov	r9, #1
 4250 00be 01E0     		b	.L238
 4251              	.L294:
 304:../../libdaisy/src/hid/disp/display.h **** 
 4252              		.loc 5 304 14 view .LVU935
 4253 00c0 4FF00009 		mov	r9, #0
 4254              	.L238:
 4255              	.LVL268:
 302:../../libdaisy/src/hid/disp/display.h **** 
 4256              		.loc 5 302 27 view .LVU936
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 237


 4257 00c4 0124     		movs	r4, #1
 332:../../libdaisy/src/hid/disp/display.h ****         t_y = 0;
 4258              		.loc 5 332 13 view .LVU937
 4259 00c6 7842     		rsbs	r0, r7, #0
 4260              	.LVL269:
 333:../../libdaisy/src/hid/disp/display.h ****         err = 2 - 2 * radius;
 4261              		.loc 5 333 13 view .LVU938
 4262 00c8 4FF0000C 		mov	ip, #0
 4263 00cc 0095     		str	r5, [sp]
 334:../../libdaisy/src/hid/disp/display.h **** 
 4264              		.loc 5 334 17 view .LVU939
 4265 00ce E31B     		subs	r3, r4, r7
 302:../../libdaisy/src/hid/disp/display.h **** 
 4266              		.loc 5 302 17 view .LVU940
 4267 00d0 2146     		mov	r1, r4
 302:../../libdaisy/src/hid/disp/display.h **** 
 4268              		.loc 5 302 22 view .LVU941
 4269 00d2 2746     		mov	r7, r4
 4270              	.LVL270:
 302:../../libdaisy/src/hid/disp/display.h **** 
 4271              		.loc 5 302 12 view .LVU942
 4272 00d4 2246     		mov	r2, r4
 334:../../libdaisy/src/hid/disp/display.h **** 
 4273              		.loc 5 334 17 view .LVU943
 4274 00d6 A340     		lsls	r3, r3, r4
 4275              	.LVL271:
 4276              	.L264:
 338:../../libdaisy/src/hid/disp/display.h ****             {
 4277              		.loc 5 338 13 view .LVU944
 4278 00d8 B9F1000F 		cmp	r9, #0
 4279 00dc 6AD1     		bne	.L240
 343:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 4280              		.loc 5 343 34 view .LVU945
 4281 00de 4242     		rsbs	r2, r0, #0
 4282              	.LVL272:
 340:../../libdaisy/src/hid/disp/display.h ****                 t_syx  = start_y * t_x;
 4283              		.loc 5 340 24 view .LVU946
 4284 00e0 06EE90CA 		vmov	s13, ip	@ int
 342:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 4285              		.loc 5 342 34 view .LVU947
 4286 00e4 CCF10001 		rsb	r1, ip, #0
 4287              	.LVL273:
 343:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 4288              		.loc 5 343 34 view .LVU948
 4289 00e8 07EE102A 		vmov	s14, r2	@ int
 340:../../libdaisy/src/hid/disp/display.h ****                 t_syx  = start_y * t_x;
 4290              		.loc 5 340 24 view .LVU949
 4291 00ec B8EEE66A 		vcvt.f32.s32	s12, s13
 342:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 4292              		.loc 5 342 34 view .LVU950
 4293 00f0 07EE901A 		vmov	s15, r1	@ int
 341:../../libdaisy/src/hid/disp/display.h ****                 t_sxny = start_x * -t_y;
 4294              		.loc 5 341 24 view .LVU951
 4295 00f4 06EE900A 		vmov	s13, r0	@ int
 343:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 4296              		.loc 5 343 34 view .LVU952
 4297 00f8 B8EEC77A 		vcvt.f32.s32	s14, s14
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 238


 349:../../libdaisy/src/hid/disp/display.h ****                 {
 4298              		.loc 5 349 17 view .LVU953
 4299 00fc 139A     		ldr	r2, [sp, #76]
 340:../../libdaisy/src/hid/disp/display.h ****                 t_syx  = start_y * t_x;
 4300              		.loc 5 340 24 view .LVU954
 4301 00fe 66EE084A 		vmul.f32	s9, s12, s16
 4302              	.LVL274:
 342:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 4303              		.loc 5 342 34 view .LVU955
 4304 0102 F8EEE77A 		vcvt.f32.s32	s15, s15
 349:../../libdaisy/src/hid/disp/display.h ****                 {
 4305              		.loc 5 349 17 view .LVU956
 4306 0106 B42A     		cmp	r2, #180
 343:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 4307              		.loc 5 343 24 view .LVU957
 4308 0108 27EE284A 		vmul.f32	s8, s14, s17
 341:../../libdaisy/src/hid/disp/display.h ****                 t_sxny = start_x * -t_y;
 4309              		.loc 5 341 24 view .LVU958
 4310 010c F8EEE66A 		vcvt.f32.s32	s13, s13
 342:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 4311              		.loc 5 342 24 view .LVU959
 4312 0110 67EE885A 		vmul.f32	s11, s15, s16
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4313              		.loc 5 351 33 view .LVU960
 4314 0114 74EEC43A 		vsub.f32	s7, s9, s8
 341:../../libdaisy/src/hid/disp/display.h ****                 t_sxny = start_x * -t_y;
 4315              		.loc 5 341 24 view .LVU961
 4316 0118 26EEA85A 		vmul.f32	s10, s13, s17
 4317              	.LVL275:
 344:../../libdaisy/src/hid/disp/display.h ****                 t_eyx  = end_y * t_x;
 4318              		.loc 5 344 24 view .LVU962
 4319 011c 26EE096A 		vmul.f32	s12, s12, s18
 4320              	.LVL276:
 345:../../libdaisy/src/hid/disp/display.h ****                 t_exny = end_x * -t_y;
 4321              		.loc 5 345 24 view .LVU963
 4322 0120 66EE806A 		vmul.f32	s13, s13, s0
 4323              	.LVL277:
 346:../../libdaisy/src/hid/disp/display.h ****                 t_eynx = end_y * -t_x;
 4324              		.loc 5 346 24 view .LVU964
 4325 0124 67EE897A 		vmul.f32	s15, s15, s18
 4326              	.LVL278:
 347:../../libdaisy/src/hid/disp/display.h **** 
 4327              		.loc 5 347 24 view .LVU965
 4328 0128 27EE007A 		vmul.f32	s14, s14, s0
 4329              	.LVL279:
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4330              		.loc 5 351 46 view .LVU966
 4331 012c F5EEC03A 		vcmpe.f32	s7, #0
 349:../../libdaisy/src/hid/disp/display.h ****                 {
 4332              		.loc 5 349 17 view .LVU967
 4333 0130 40F3F280 		ble	.L241
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4334              		.loc 5 351 46 view .LVU968
 4335 0134 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4336 0138 00F17F81 		bmi	.L267
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4337              		.loc 5 351 55 discriminator 2 view .LVU969
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 239


 4338 013c 76EE473A 		vsub.f32	s7, s12, s14
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4339              		.loc 5 352 33 discriminator 2 view .LVU970
 4340 0140 74EEC54A 		vsub.f32	s9, s9, s10
 4341              	.LVL280:
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4342              		.loc 5 351 46 discriminator 2 view .LVU971
 4343 0144 F5EEC03A 		vcmpe.f32	s7, #0
 4344 0148 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4345              		.loc 5 352 45 discriminator 2 view .LVU972
 4346 014c F5EEC04A 		vcmpe.f32	s9, #0
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4347              		.loc 5 351 46 discriminator 2 view .LVU973
 4348 0150 CCBF     		ite	gt
 4349 0152 0122     		movgt	r2, #1
 4350 0154 0022     		movle	r2, #0
 4351              	.LVL281:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4352              		.loc 5 352 45 discriminator 2 view .LVU974
 4353 0156 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4354 015a 00F17781 		bmi	.L268
 4355              	.L310:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4356              		.loc 5 352 54 discriminator 2 view .LVU975
 4357 015e 36EE666A 		vsub.f32	s12, s12, s13
 4358              	.LVL282:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4359              		.loc 5 353 34 discriminator 2 view .LVU976
 4360 0162 35EEC55A 		vsub.f32	s10, s11, s10
 4361              	.LVL283:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4362              		.loc 5 352 45 discriminator 2 view .LVU977
 4363 0166 B5EEC06A 		vcmpe.f32	s12, #0
 4364 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4365              		.loc 5 353 46 discriminator 2 view .LVU978
 4366 016e B5EEC05A 		vcmpe.f32	s10, #0
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4367              		.loc 5 352 45 discriminator 2 view .LVU979
 4368 0172 CCBF     		ite	gt
 4369 0174 0121     		movgt	r1, #1
 4370 0176 0021     		movle	r1, #0
 4371              	.LVL284:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4372              		.loc 5 353 46 discriminator 2 view .LVU980
 4373 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4374 017c 00F16F81 		bmi	.L269
 4375              	.L311:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4376              		.loc 5 353 56 discriminator 2 view .LVU981
 4377 0180 77EEE66A 		vsub.f32	s13, s15, s13
 4378              	.LVL285:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4379              		.loc 5 353 46 discriminator 2 view .LVU982
 4380 0184 F5EEC06A 		vcmpe.f32	s13, #0
 4381 0188 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 240


 4382 018c CCBF     		ite	gt
 4383 018e 0127     		movgt	r7, #1
 4384              	.LVL286:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4385              		.loc 5 353 46 discriminator 2 view .LVU983
 4386 0190 0027     		movle	r7, #0
 4387              	.L244:
 4388              	.LVL287:
 354:../../libdaisy/src/hid/disp/display.h ****                 }
 4389              		.loc 5 354 34 discriminator 6 view .LVU984
 4390 0192 75EEC45A 		vsub.f32	s11, s11, s8
 4391              	.LVL288:
 354:../../libdaisy/src/hid/disp/display.h ****                 }
 4392              		.loc 5 354 47 discriminator 6 view .LVU985
 4393 0196 F5EEC05A 		vcmpe.f32	s11, #0
 4394 019a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4395 019e 00F14781 		bmi	.L270
 4396              	.L300:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 4397              		.loc 5 361 57 discriminator 1 view .LVU986
 4398 01a2 77EEC77A 		vsub.f32	s15, s15, s14
 4399              	.LVL289:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 4400              		.loc 5 361 47 discriminator 1 view .LVU987
 4401 01a6 F5EEC07A 		vcmpe.f32	s15, #0
 4402 01aa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4403 01ae CCBF     		ite	gt
 4404 01b0 0124     		movgt	r4, #1
 4405              	.LVL290:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 4406              		.loc 5 361 47 discriminator 1 view .LVU988
 4407 01b2 0024     		movle	r4, #0
 4408              	.LVL291:
 4409              	.L240:
 365:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4410              		.loc 5 365 13 view .LVU989
 4411 01b4 002A     		cmp	r2, #0
 4412 01b6 40F08A80 		bne	.L301
 4413              	.L252:
 368:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4414              		.loc 5 368 13 view .LVU990
 4415 01ba 0029     		cmp	r1, #0
 4416 01bc 64D1     		bne	.L302
 4417              	.L254:
 371:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4418              		.loc 5 371 13 view .LVU991
 4419 01be BFB9     		cbnz	r7, .L303
 4420              	.L256:
 374:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4421              		.loc 5 374 13 view .LVU992
 4422 01c0 C4BB     		cbnz	r4, .L304
 4423              	.L258:
 4424              	.LVL292:
 379:../../libdaisy/src/hid/disp/display.h ****             {
 4425              		.loc 5 379 13 view .LVU993
 4426 01c2 9C45     		cmp	ip, r3
 4427 01c4 58DB     		blt	.L275
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 241


 4428              	.L306:
 381:../../libdaisy/src/hid/disp/display.h ****                 err = err + (t_y * 2 + 1);
 4429              		.loc 5 381 17 view .LVU994
 4430 01c6 0CF1010C 		add	ip, ip, #1
 4431              	.LVL293:
 382:../../libdaisy/src/hid/disp/display.h ****                 if(-t_x == t_y && e2 <= t_x)
 4432              		.loc 5 382 38 view .LVU995
 4433 01ca 03EB4C0E 		add	lr, r3, ip, lsl #1
 383:../../libdaisy/src/hid/disp/display.h ****                 {
 4434              		.loc 5 383 17 view .LVU996
 4435 01ce 1CEB000F 		cmn	ip, r0
 382:../../libdaisy/src/hid/disp/display.h ****                 if(-t_x == t_y && e2 <= t_x)
 4436              		.loc 5 382 21 view .LVU997
 4437 01d2 0EF1010E 		add	lr, lr, #1
 4438              	.LVL294:
 383:../../libdaisy/src/hid/disp/display.h ****                 {
 4439              		.loc 5 383 17 view .LVU998
 4440 01d6 00F0C080 		beq	.L305
 4441              	.LVL295:
 4442              	.L260:
 388:../../libdaisy/src/hid/disp/display.h ****             {
 4443              		.loc 5 388 13 view .LVU999
 4444 01da 9842     		cmp	r0, r3
 4445 01dc 4FDB     		blt	.L261
 4446              	.L276:
 388:../../libdaisy/src/hid/disp/display.h ****             {
 4447              		.loc 5 388 13 view .LVU1000
 4448 01de 7346     		mov	r3, lr
 4449              	.LVL296:
 4450              	.L262:
 393:../../libdaisy/src/hid/disp/display.h ****     }
 4451              		.loc 5 393 21 is_stmt 1 view .LVU1001
 4452 01e0 0028     		cmp	r0, #0
 4453 01e2 7FF779AF 		ble	.L264
 4454              	.LVL297:
 4455              	.L235:
 394:../../libdaisy/src/hid/disp/display.h **** 
 4456              		.loc 5 394 5 is_stmt 0 view .LVU1002
 4457 01e6 03B0     		add	sp, sp, #12
 4458              		.cfi_remember_state
 4459              		.cfi_def_cfa_offset 60
 4460              		@ sp needed
 4461 01e8 BDEC068B 		vldm	sp!, {d8-d10}
 4462              		.cfi_restore 84
 4463              		.cfi_restore 85
 4464              		.cfi_restore 82
 4465              		.cfi_restore 83
 4466              		.cfi_restore 80
 4467              		.cfi_restore 81
 4468              		.cfi_def_cfa_offset 36
 4469              	.LVL298:
 394:../../libdaisy/src/hid/disp/display.h **** 
 4470              		.loc 5 394 5 view .LVU1003
 4471 01ec BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4472              	.LVL299:
 4473              	.L303:
 4474              		.cfi_restore_state
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 242


 373:../../libdaisy/src/hid/disp/display.h ****             if(d4)
 4475              		.loc 5 373 43 view .LVU1004
 4476 01f0 009D     		ldr	r5, [sp]
 4477 01f2 A6EB0C0E 		sub	lr, r6, ip
 4478 01f6 00EB050A 		add	r10, r0, r5
 4479              	.LVL300:
 4480              	.LBB5710:
 4481              	.LBI5710:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 4482              		.loc 4 41 10 is_stmt 1 view .LVU1005
 4483              	.LBB5711:
 4484              	.LBI5711:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4485              		.loc 14 239 10 view .LVU1006
 4486              	.LBB5712:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4487              		.loc 14 241 9 is_stmt 0 view .LVU1007
 4488 01fa BAF17F0F 		cmp	r10, #127
 4489 01fe DFD8     		bhi	.L256
 4490 0200 BEF13F0F 		cmp	lr, #63
 4491 0204 DCD8     		bhi	.L256
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4492              		.loc 14 244 28 view .LVU1008
 4493 0206 4FEADE0B 		lsr	fp, lr, #3
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4494              		.loc 14 243 9 view .LVU1009
 4495 020a 019D     		ldr	r5, [sp, #4]
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4496              		.loc 14 244 42 view .LVU1010
 4497 020c 0AEBCB1A 		add	r10, r10, fp, lsl #7
 4498              	.LVL301:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4499              		.loc 14 243 9 view .LVU1011
 4500 0210 002D     		cmp	r5, #0
 4501 0212 00F0B180 		beq	.L257
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4502              		.loc 14 244 54 view .LVU1012
 4503 0216 0EF0070B 		and	fp, lr, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4504              		.loc 14 244 42 view .LVU1013
 4505 021a C244     		add	r10, r10, r8
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4506              		.loc 14 244 48 view .LVU1014
 4507 021c 4FF0010E 		mov	lr, #1
 4508              	.LVL302:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4509              		.loc 14 244 48 view .LVU1015
 4510 0220 0EFA0BFE 		lsl	lr, lr, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4511              		.loc 14 244 42 view .LVU1016
 4512 0224 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4513 0228 4EEA0B0E 		orr	lr, lr, fp
 4514 022c 8AF814E0 		strb	lr, [r10, #20]
 4515              	.LVL303:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4516              		.loc 14 244 42 view .LVU1017
 4517              	.LBE5712:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 243


 4518              	.LBE5711:
 4519              	.LBE5710:
 374:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4520              		.loc 5 374 13 view .LVU1018
 4521 0230 002C     		cmp	r4, #0
 4522 0232 C6D0     		beq	.L258
 4523              	.L304:
 376:../../libdaisy/src/hid/disp/display.h **** 
 4524              		.loc 5 376 43 view .LVU1019
 4525 0234 009D     		ldr	r5, [sp]
 4526 0236 A6EB0C0E 		sub	lr, r6, ip
 4527 023a A5EB000A 		sub	r10, r5, r0
 4528              	.LVL304:
 4529              	.LBB5717:
 4530              	.LBI5717:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 4531              		.loc 4 41 10 is_stmt 1 view .LVU1020
 4532              	.LBB5718:
 4533              	.LBI5718:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4534              		.loc 14 239 10 view .LVU1021
 4535              	.LBB5719:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4536              		.loc 14 241 9 is_stmt 0 view .LVU1022
 4537 023e BAF17F0F 		cmp	r10, #127
 4538 0242 BED8     		bhi	.L258
 4539 0244 BEF13F0F 		cmp	lr, #63
 4540 0248 BBD8     		bhi	.L258
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4541              		.loc 14 244 28 view .LVU1023
 4542 024a 4FEADE0B 		lsr	fp, lr, #3
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4543              		.loc 14 243 9 view .LVU1024
 4544 024e 019D     		ldr	r5, [sp, #4]
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4545              		.loc 14 244 42 view .LVU1025
 4546 0250 0AEBCB1A 		add	r10, r10, fp, lsl #7
 4547              	.LVL305:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4548              		.loc 14 243 9 view .LVU1026
 4549 0254 002D     		cmp	r5, #0
 4550 0256 00F0AE80 		beq	.L259
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4551              		.loc 14 244 54 view .LVU1027
 4552 025a 0EF0070B 		and	fp, lr, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4553              		.loc 14 244 42 view .LVU1028
 4554 025e C244     		add	r10, r10, r8
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4555              		.loc 14 244 48 view .LVU1029
 4556 0260 4FF0010E 		mov	lr, #1
 4557              	.LVL306:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4558              		.loc 14 244 48 view .LVU1030
 4559              	.LBE5719:
 4560              	.LBE5718:
 4561              	.LBE5717:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 244


 379:../../libdaisy/src/hid/disp/display.h ****             {
 4562              		.loc 5 379 13 view .LVU1031
 4563 0264 9C45     		cmp	ip, r3
 4564              	.LBB5726:
 4565              	.LBB5724:
 4566              	.LBB5722:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4567              		.loc 14 244 48 view .LVU1032
 4568 0266 0EFA0BFE 		lsl	lr, lr, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4569              		.loc 14 244 42 view .LVU1033
 4570 026a 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4571 026e 4EEA0B0E 		orr	lr, lr, fp
 4572 0272 8AF814E0 		strb	lr, [r10, #20]
 4573              	.LVL307:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4574              		.loc 14 244 42 view .LVU1034
 4575              	.LBE5722:
 4576              	.LBE5724:
 4577              	.LBE5726:
 379:../../libdaisy/src/hid/disp/display.h ****             {
 4578              		.loc 5 379 13 view .LVU1035
 4579 0276 A6DA     		bge	.L306
 4580              	.L275:
 388:../../libdaisy/src/hid/disp/display.h ****             {
 4581              		.loc 5 388 13 view .LVU1036
 4582 0278 9842     		cmp	r0, r3
 4583 027a 9E46     		mov	lr, r3
 4584              	.LVL308:
 388:../../libdaisy/src/hid/disp/display.h ****             {
 4585              		.loc 5 388 13 view .LVU1037
 4586 027c AFDA     		bge	.L276
 4587              	.LVL309:
 4588              	.L261:
 390:../../libdaisy/src/hid/disp/display.h ****                 err = err + (t_x * 2 + 1);
 4589              		.loc 5 390 17 view .LVU1038
 4590 027e 0130     		adds	r0, r0, #1
 4591              	.LVL310:
 391:../../libdaisy/src/hid/disp/display.h ****             }
 4592              		.loc 5 391 38 view .LVU1039
 4593 0280 0EEB4003 		add	r3, lr, r0, lsl #1
 391:../../libdaisy/src/hid/disp/display.h ****             }
 4594              		.loc 5 391 21 view .LVU1040
 4595 0284 0133     		adds	r3, r3, #1
 4596              	.LVL311:
 391:../../libdaisy/src/hid/disp/display.h ****             }
 4597              		.loc 5 391 21 view .LVU1041
 4598 0286 ABE7     		b	.L262
 4599              	.L302:
 370:../../libdaisy/src/hid/disp/display.h ****             if(d3)
 4600              		.loc 5 370 43 view .LVU1042
 4601 0288 009D     		ldr	r5, [sp]
 4602 028a 0CEB060E 		add	lr, ip, r6
 4603 028e 00EB050A 		add	r10, r0, r5
 4604              	.LVL312:
 4605              	.LBB5727:
 4606              	.LBI5727:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 245


  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 4607              		.loc 4 41 10 is_stmt 1 view .LVU1043
 4608              	.LBB5728:
 4609              	.LBI5728:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4610              		.loc 14 239 10 view .LVU1044
 4611              	.LBB5729:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4612              		.loc 14 241 9 is_stmt 0 view .LVU1045
 4613 0292 BAF17F0F 		cmp	r10, #127
 4614 0296 92D8     		bhi	.L254
 4615 0298 BEF13F0F 		cmp	lr, #63
 4616 029c 8FD8     		bhi	.L254
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4617              		.loc 14 244 28 view .LVU1046
 4618 029e 4FEADE0B 		lsr	fp, lr, #3
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4619              		.loc 14 243 9 view .LVU1047
 4620 02a2 019D     		ldr	r5, [sp, #4]
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4621              		.loc 14 244 42 view .LVU1048
 4622 02a4 0AEBCB1A 		add	r10, r10, fp, lsl #7
 4623              	.LVL313:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4624              		.loc 14 243 9 view .LVU1049
 4625 02a8 002D     		cmp	r5, #0
 4626 02aa 73D0     		beq	.L255
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4627              		.loc 14 244 54 view .LVU1050
 4628 02ac 0EF0070B 		and	fp, lr, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4629              		.loc 14 244 42 view .LVU1051
 4630 02b0 C244     		add	r10, r10, r8
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4631              		.loc 14 244 48 view .LVU1052
 4632 02b2 4FF0010E 		mov	lr, #1
 4633              	.LVL314:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4634              		.loc 14 244 48 view .LVU1053
 4635 02b6 0EFA0BFE 		lsl	lr, lr, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4636              		.loc 14 244 42 view .LVU1054
 4637 02ba 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4638 02be 4EEA0B0E 		orr	lr, lr, fp
 4639 02c2 8AF814E0 		strb	lr, [r10, #20]
 4640              	.LVL315:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4641              		.loc 14 244 42 view .LVU1055
 4642              	.LBE5729:
 4643              	.LBE5728:
 4644              	.LBE5727:
 371:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4645              		.loc 5 371 13 view .LVU1056
 4646 02c6 002F     		cmp	r7, #0
 4647 02c8 3FF47AAF 		beq	.L256
 4648 02cc 90E7     		b	.L303
 4649              	.L301:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 246


 367:../../libdaisy/src/hid/disp/display.h ****             if(d2)
 4650              		.loc 5 367 43 view .LVU1057
 4651 02ce 009D     		ldr	r5, [sp]
 4652 02d0 0CEB060E 		add	lr, ip, r6
 4653 02d4 A5EB000A 		sub	r10, r5, r0
 4654              	.LVL316:
 4655              	.LBB5734:
 4656              	.LBI5734:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 4657              		.loc 4 41 10 is_stmt 1 view .LVU1058
 4658              	.LBB5735:
 4659              	.LBI5735:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4660              		.loc 14 239 10 view .LVU1059
 4661              	.LBB5736:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4662              		.loc 14 241 9 is_stmt 0 view .LVU1060
 4663 02d8 BAF17F0F 		cmp	r10, #127
 4664 02dc 3FF66DAF 		bhi	.L252
 4665 02e0 BEF13F0F 		cmp	lr, #63
 4666 02e4 3FF669AF 		bhi	.L252
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4667              		.loc 14 244 28 view .LVU1061
 4668 02e8 4FEADE0B 		lsr	fp, lr, #3
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4669              		.loc 14 243 9 view .LVU1062
 4670 02ec 019D     		ldr	r5, [sp, #4]
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4671              		.loc 14 244 42 view .LVU1063
 4672 02ee 0AEBCB1A 		add	r10, r10, fp, lsl #7
 4673              	.LVL317:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4674              		.loc 14 243 9 view .LVU1064
 4675 02f2 002D     		cmp	r5, #0
 4676 02f4 6DD0     		beq	.L253
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4677              		.loc 14 244 54 view .LVU1065
 4678 02f6 0EF0070B 		and	fp, lr, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4679              		.loc 14 244 42 view .LVU1066
 4680 02fa C244     		add	r10, r10, r8
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4681              		.loc 14 244 48 view .LVU1067
 4682 02fc 4FF0010E 		mov	lr, #1
 4683              	.LVL318:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4684              		.loc 14 244 48 view .LVU1068
 4685 0300 0EFA0BFE 		lsl	lr, lr, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4686              		.loc 14 244 42 view .LVU1069
 4687 0304 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4688 0308 4EEA0B0E 		orr	lr, lr, fp
 4689 030c 8AF814E0 		strb	lr, [r10, #20]
 4690              	.LVL319:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4691              		.loc 14 244 42 view .LVU1070
 4692              	.LBE5736:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 247


 4693              	.LBE5735:
 4694              	.LBE5734:
 368:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4695              		.loc 5 368 13 view .LVU1071
 4696 0310 0029     		cmp	r1, #0
 4697 0312 3FF454AF 		beq	.L254
 4698 0316 B7E7     		b	.L302
 4699              	.LVL320:
 4700              	.L241:
 358:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
 4701              		.loc 5 358 46 view .LVU1072
 4702 0318 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4703 031c 7ED4     		bmi	.L307
 4704 031e 4A46     		mov	r2, r9
 4705              	.L245:
 4706              	.LVL321:
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 4707              		.loc 5 359 33 discriminator 6 view .LVU1073
 4708 0320 74EEC54A 		vsub.f32	s9, s9, s10
 4709              	.LVL322:
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 4710              		.loc 5 359 45 discriminator 6 view .LVU1074
 4711 0324 F5EEC04A 		vcmpe.f32	s9, #0
 4712 0328 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4713 032c 6CD4     		bmi	.L308
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 4714              		.loc 5 359 45 view .LVU1075
 4715 032e 0021     		movs	r1, #0
 4716              	.LVL323:
 4717              	.L247:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 4718              		.loc 5 360 34 discriminator 6 view .LVU1076
 4719 0330 35EEC55A 		vsub.f32	s10, s11, s10
 4720              	.LVL324:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 4721              		.loc 5 360 46 discriminator 6 view .LVU1077
 4722 0334 B5EEC05A 		vcmpe.f32	s10, #0
 4723 0338 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4724 033c 5AD4     		bmi	.L309
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 4725              		.loc 5 360 46 view .LVU1078
 4726 033e 0027     		movs	r7, #0
 4727              	.LVL325:
 4728              	.L249:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 4729              		.loc 5 361 34 discriminator 6 view .LVU1079
 4730 0340 75EEC45A 		vsub.f32	s11, s11, s8
 4731              	.LVL326:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 4732              		.loc 5 361 47 discriminator 6 view .LVU1080
 4733 0344 F5EEC05A 		vcmpe.f32	s11, #0
 4734 0348 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4735 034c 3FF529AF 		bmi	.L300
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 4736              		.loc 5 361 47 view .LVU1081
 4737 0350 0024     		movs	r4, #0
 4738              	.LVL327:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 248


 365:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4739              		.loc 5 365 13 view .LVU1082
 4740 0352 002A     		cmp	r2, #0
 4741 0354 3FF431AF 		beq	.L252
 4742 0358 B9E7     		b	.L301
 4743              	.LVL328:
 4744              	.L305:
 383:../../libdaisy/src/hid/disp/display.h ****                 {
 4745              		.loc 5 383 32 discriminator 1 view .LVU1083
 4746 035a 9842     		cmp	r0, r3
 4747 035c 8FDB     		blt	.L261
 385:../../libdaisy/src/hid/disp/display.h ****                 }
 4748              		.loc 5 385 24 view .LVU1084
 4749 035e 0023     		movs	r3, #0
 4750              	.LVL329:
 385:../../libdaisy/src/hid/disp/display.h ****                 }
 4751              		.loc 5 385 24 view .LVU1085
 4752 0360 3BE7     		b	.L260
 4753              	.L313:
 4754 0362 00BFAFF3 		.align	3
 4754      0080
 4755              	.L312:
 4756 0368 7A008BFC 		.word	-57999238
 4757 036c FA210940 		.word	1074340346
 4758 0370 00000000 		.word	0
 4759 0374 00806640 		.word	1080459264
 4760              	.LVL330:
 4761              	.L257:
 4762              	.LBB5741:
 4763              	.LBB5716:
 4764              	.LBB5715:
 4765              	.LBB5713:
 4766              	.LBI5713:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4767              		.loc 14 239 10 is_stmt 1 view .LVU1086
 4768              	.LBB5714:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4769              		.loc 14 246 42 is_stmt 0 view .LVU1087
 4770 0378 C244     		add	r10, r10, r8
 4771              	.LVL331:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4772              		.loc 14 246 49 view .LVU1088
 4773 037a 4FF0010B 		mov	fp, #1
 4774              	.LVL332:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4775              		.loc 14 246 55 view .LVU1089
 4776 037e 0EF0070E 		and	lr, lr, #7
 4777              	.LVL333:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4778              		.loc 14 246 49 view .LVU1090
 4779 0382 0BFA0EFE 		lsl	lr, fp, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4780              		.loc 14 246 42 view .LVU1091
 4781 0386 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4782 038a 2BEA0E0E 		bic	lr, fp, lr
 4783 038e 8AF814E0 		strb	lr, [r10, #20]
 4784              	.LVL334:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 249


 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4785              		.loc 14 246 42 view .LVU1092
 4786 0392 15E7     		b	.L256
 4787              	.LVL335:
 4788              	.L255:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4789              		.loc 14 246 42 view .LVU1093
 4790              	.LBE5714:
 4791              	.LBE5713:
 4792              	.LBE5715:
 4793              	.LBE5716:
 4794              	.LBE5741:
 4795              	.LBB5742:
 4796              	.LBB5733:
 4797              	.LBB5732:
 4798              	.LBB5730:
 4799              	.LBI5730:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4800              		.loc 14 239 10 is_stmt 1 view .LVU1094
 4801              	.LBB5731:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4802              		.loc 14 246 42 is_stmt 0 view .LVU1095
 4803 0394 C244     		add	r10, r10, r8
 4804              	.LVL336:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4805              		.loc 14 246 49 view .LVU1096
 4806 0396 4FF0010B 		mov	fp, #1
 4807              	.LVL337:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4808              		.loc 14 246 55 view .LVU1097
 4809 039a 0EF0070E 		and	lr, lr, #7
 4810              	.LVL338:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4811              		.loc 14 246 49 view .LVU1098
 4812 039e 0BFA0EFE 		lsl	lr, fp, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4813              		.loc 14 246 42 view .LVU1099
 4814 03a2 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4815 03a6 2BEA0E0E 		bic	lr, fp, lr
 4816 03aa 8AF814E0 		strb	lr, [r10, #20]
 4817              	.LVL339:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4818              		.loc 14 246 42 view .LVU1100
 4819              	.LBE5731:
 4820              	.LBE5730:
 4821              	.LBE5732:
 4822              	.LBE5733:
 4823              	.LBE5742:
 371:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4824              		.loc 5 371 13 view .LVU1101
 4825 03ae 002F     		cmp	r7, #0
 4826 03b0 3FF406AF 		beq	.L256
 4827 03b4 1CE7     		b	.L303
 4828              	.LVL340:
 4829              	.L259:
 4830              	.LBB5743:
 4831              	.LBB5725:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 250


 4832              	.LBB5723:
 4833              	.LBB5720:
 4834              	.LBI5720:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4835              		.loc 14 239 10 is_stmt 1 view .LVU1102
 4836              	.LBB5721:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4837              		.loc 14 246 42 is_stmt 0 view .LVU1103
 4838 03b6 C244     		add	r10, r10, r8
 4839              	.LVL341:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4840              		.loc 14 246 49 view .LVU1104
 4841 03b8 4FF0010B 		mov	fp, #1
 4842              	.LVL342:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4843              		.loc 14 246 55 view .LVU1105
 4844 03bc 0EF0070E 		and	lr, lr, #7
 4845              	.LVL343:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4846              		.loc 14 246 49 view .LVU1106
 4847 03c0 0BFA0EFE 		lsl	lr, fp, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4848              		.loc 14 246 42 view .LVU1107
 4849 03c4 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4850 03c8 2BEA0E0E 		bic	lr, fp, lr
 4851 03cc 8AF814E0 		strb	lr, [r10, #20]
 4852              	.LVL344:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4853              		.loc 14 246 42 view .LVU1108
 4854 03d0 F7E6     		b	.L258
 4855              	.LVL345:
 4856              	.L253:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4857              		.loc 14 246 42 view .LVU1109
 4858              	.LBE5721:
 4859              	.LBE5720:
 4860              	.LBE5723:
 4861              	.LBE5725:
 4862              	.LBE5743:
 4863              	.LBB5744:
 4864              	.LBB5740:
 4865              	.LBB5739:
 4866              	.LBB5737:
 4867              	.LBI5737:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4868              		.loc 14 239 10 is_stmt 1 view .LVU1110
 4869              	.LBB5738:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4870              		.loc 14 246 42 is_stmt 0 view .LVU1111
 4871 03d2 C244     		add	r10, r10, r8
 4872              	.LVL346:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4873              		.loc 14 246 49 view .LVU1112
 4874 03d4 4FF0010B 		mov	fp, #1
 4875              	.LVL347:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4876              		.loc 14 246 55 view .LVU1113
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 251


 4877 03d8 0EF0070E 		and	lr, lr, #7
 4878              	.LVL348:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4879              		.loc 14 246 49 view .LVU1114
 4880 03dc 0BFA0EFE 		lsl	lr, fp, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4881              		.loc 14 246 42 view .LVU1115
 4882 03e0 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4883 03e4 2BEA0E0E 		bic	lr, fp, lr
 4884 03e8 8AF814E0 		strb	lr, [r10, #20]
 4885              	.LVL349:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4886              		.loc 14 246 42 view .LVU1116
 4887              	.LBE5738:
 4888              	.LBE5737:
 4889              	.LBE5739:
 4890              	.LBE5740:
 4891              	.LBE5744:
 368:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4892              		.loc 5 368 13 view .LVU1117
 4893 03ec 0029     		cmp	r1, #0
 4894 03ee 3FF4E6AE 		beq	.L254
 4895 03f2 49E7     		b	.L302
 4896              	.LVL350:
 4897              	.L309:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 4898              		.loc 5 360 56 discriminator 1 view .LVU1118
 4899 03f4 77EEE66A 		vsub.f32	s13, s15, s13
 4900              	.LVL351:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 4901              		.loc 5 360 46 discriminator 1 view .LVU1119
 4902 03f8 F5EEC06A 		vcmpe.f32	s13, #0
 4903 03fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4904 0400 CCBF     		ite	gt
 4905 0402 0127     		movgt	r7, #1
 4906              	.LVL352:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 4907              		.loc 5 360 46 discriminator 1 view .LVU1120
 4908 0404 0027     		movle	r7, #0
 4909 0406 9BE7     		b	.L249
 4910              	.LVL353:
 4911              	.L308:
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 4912              		.loc 5 359 54 discriminator 1 view .LVU1121
 4913 0408 36EE666A 		vsub.f32	s12, s12, s13
 4914              	.LVL354:
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 4915              		.loc 5 359 45 discriminator 1 view .LVU1122
 4916 040c B5EEC06A 		vcmpe.f32	s12, #0
 4917 0410 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4918 0414 CCBF     		ite	gt
 4919 0416 0121     		movgt	r1, #1
 4920 0418 0021     		movle	r1, #0
 4921 041a 89E7     		b	.L247
 4922              	.LVL355:
 4923              	.L307:
 358:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 252


 4924              		.loc 5 358 55 discriminator 1 view .LVU1123
 4925 041c 76EE473A 		vsub.f32	s7, s12, s14
 358:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
 4926              		.loc 5 358 46 discriminator 1 view .LVU1124
 4927 0420 F5EEC03A 		vcmpe.f32	s7, #0
 4928 0424 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4929 0428 CCBF     		ite	gt
 4930 042a 0122     		movgt	r2, #1
 4931 042c 0022     		movle	r2, #0
 4932 042e 77E7     		b	.L245
 4933              	.LVL356:
 4934              	.L270:
 354:../../libdaisy/src/hid/disp/display.h ****                 }
 4935              		.loc 5 354 47 view .LVU1125
 4936 0430 0124     		movs	r4, #1
 4937              	.LVL357:
 365:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4938              		.loc 5 365 13 view .LVU1126
 4939 0432 002A     		cmp	r2, #0
 4940 0434 3FF4C1AE 		beq	.L252
 365:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4941              		.loc 5 365 13 view .LVU1127
 4942 0438 49E7     		b	.L301
 4943              	.LVL358:
 4944              	.L267:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4945              		.loc 5 352 33 view .LVU1128
 4946 043a 74EEC54A 		vsub.f32	s9, s9, s10
 4947              	.LVL359:
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4948              		.loc 5 351 46 view .LVU1129
 4949 043e 0122     		movs	r2, #1
 4950              	.LVL360:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4951              		.loc 5 352 45 view .LVU1130
 4952 0440 F5EEC04A 		vcmpe.f32	s9, #0
 4953 0444 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4954 0448 7FF589AE 		bpl	.L310
 4955              	.L268:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4956              		.loc 5 353 34 view .LVU1131
 4957 044c 35EEC55A 		vsub.f32	s10, s11, s10
 4958              	.LVL361:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4959              		.loc 5 352 45 view .LVU1132
 4960 0450 0121     		movs	r1, #1
 4961              	.LVL362:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4962              		.loc 5 353 46 view .LVU1133
 4963 0452 B5EEC05A 		vcmpe.f32	s10, #0
 4964 0456 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4965 045a 7FF591AE 		bpl	.L311
 4966              	.LVL363:
 4967              	.L269:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4968              		.loc 5 353 46 view .LVU1134
 4969 045e 0127     		movs	r7, #1
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 253


 4970              	.LVL364:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4971              		.loc 5 353 46 view .LVU1135
 4972 0460 97E6     		b	.L244
 4973              	.LVL365:
 4974              	.L236:
 308:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 4975              		.loc 5 308 25 view .LVU1136
 4976 0462 DDE91223 		ldrd	r2, r3, [sp, #72]
 4977              	.LVL366:
 308:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 4978              		.loc 5 308 25 view .LVU1137
 4979 0466 1344     		add	r3, r3, r2
 4980              	.LVL367:
 308:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 4981              		.loc 5 308 25 view .LVU1138
 4982 0468 06EE102A 		vmov	s12, r2	@ int
 4983 046c 1293     		str	r3, [sp, #72]
 4984 046e 139B     		ldr	r3, [sp, #76]
 4985              	.LVL368:
 308:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 4986              		.loc 5 308 25 view .LVU1139
 4987 0470 5B42     		rsbs	r3, r3, #0
 4988 0472 1393     		str	r3, [sp, #76]
 4989              	.LVL369:
 308:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 4990              		.loc 5 308 25 view .LVU1140
 4991 0474 D8E5     		b	.L237
 4992              		.cfi_endproc
 4993              	.LFE6195:
 4995 0476 00BF     		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 4996              		.align	1
 4997              		.p2align 2,,3
 4998              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 4999              		.syntax unified
 5000              		.thumb
 5001              		.thumb_func
 5002              		.fpu fpv5-d16
 5004              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 5005              	.LVL370:
 5006              	.LFB6196:
 459:../../libdaisy/src/hid/disp/display.h **** 
 460:../../libdaisy/src/hid/disp/display.h ****     Rectangle WriteStringAligned(const char*    str,
 5007              		.loc 5 460 15 is_stmt 1 view -0
 5008              		.cfi_startproc
 5009              		@ args = 12, pretend = 0, frame = 32
 5010              		@ frame_needed = 0, uses_anonymous_args = 0
 5011              		.loc 5 460 15 is_stmt 0 view .LVU1142
 5012 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5013              		.cfi_def_cfa_offset 36
 5014              		.cfi_offset 4, -36
 5015              		.cfi_offset 5, -32
 5016              		.cfi_offset 6, -28
 5017              		.cfi_offset 7, -24
 5018              		.cfi_offset 8, -20
 5019              		.cfi_offset 9, -16
 5020              		.cfi_offset 10, -12
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 254


 5021              		.cfi_offset 11, -8
 5022              		.cfi_offset 14, -4
 5023 0004 89B0     		sub	sp, sp, #36
 5024              		.cfi_def_cfa_offset 72
 5025              		.loc 5 460 15 view .LVU1143
 5026 0006 1D46     		mov	r5, r3
 5027 0008 8846     		mov	r8, r1
 5028              	.LVL371:
 5029              	.LBB5883:
 5030              	.LBI5883:
 461:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 462:../../libdaisy/src/hid/disp/display.h ****                                  Rectangle      boundingBox,
 463:../../libdaisy/src/hid/disp/display.h ****                                  Alignment      alignment,
 464:../../libdaisy/src/hid/disp/display.h ****                                  bool           on) override
 465:../../libdaisy/src/hid/disp/display.h ****     {
 466:../../libdaisy/src/hid/disp/display.h ****         const auto alignedRect
 467:../../libdaisy/src/hid/disp/display.h ****             = GetTextRect(str, font).AlignedWithin(boundingBox, alignment);
 468:../../libdaisy/src/hid/disp/display.h ****         SetCursor(alignedRect.GetX(), alignedRect.GetY());
 469:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 470:../../libdaisy/src/hid/disp/display.h ****         return alignedRect;
 471:../../libdaisy/src/hid/disp/display.h ****     }
 472:../../libdaisy/src/hid/disp/display.h **** 
 473:../../libdaisy/src/hid/disp/display.h ****   private:
 474:../../libdaisy/src/hid/disp/display.h ****     uint32_t strlen(const char* string)
 475:../../libdaisy/src/hid/disp/display.h ****     {
 476:../../libdaisy/src/hid/disp/display.h ****         uint32_t result = 0;
 477:../../libdaisy/src/hid/disp/display.h ****         while(*string++ != '\0')
 478:../../libdaisy/src/hid/disp/display.h ****             result++;
 479:../../libdaisy/src/hid/disp/display.h ****         return result;
 480:../../libdaisy/src/hid/disp/display.h ****     }
 481:../../libdaisy/src/hid/disp/display.h **** 
 482:../../libdaisy/src/hid/disp/display.h ****     Rectangle GetTextRect(const char* text, const FontDef& font)
 5031              		.loc 5 482 15 is_stmt 1 view .LVU1144
 5032              	.LBB5884:
 5033              	.LBB5885:
 5034              	.LBI5885:
 474:../../libdaisy/src/hid/disp/display.h ****     {
 5035              		.loc 5 474 14 view .LVU1145
 5036              	.LBB5886:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5037              		.loc 5 477 25 view .LVU1146
 5038              	.LBE5886:
 5039              	.LBE5885:
 5040              	.LBE5884:
 5041              	.LBE5883:
 460:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 5042              		.loc 5 460 15 is_stmt 0 view .LVU1147
 5043 000a 0690     		str	r0, [sp, #24]
 5044              	.LBB5901:
 5045              	.LBB5897:
 5046              	.LBB5890:
 5047              	.LBB5887:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5048              		.loc 5 477 25 view .LVU1148
 5049 000c 1046     		mov	r0, r2
 5050              	.LVL372:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 255


 5051              		.loc 5 477 25 view .LVU1149
 5052              	.LBE5887:
 5053              	.LBE5890:
 5054              	.LBE5897:
 5055              	.LBE5901:
 460:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 5056              		.loc 5 460 15 view .LVU1150
 5057 000e 129C     		ldr	r4, [sp, #72]
 5058              	.LBB5902:
 5059              	.LBB5898:
 5060              	.LBB5891:
 5061              	.LBB5888:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5062              		.loc 5 477 25 view .LVU1151
 5063 0010 10F8013B 		ldrb	r3, [r0], #1	@ zero_extendqisi2
 5064              	.LVL373:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5065              		.loc 5 477 25 view .LVU1152
 5066              	.LBE5888:
 5067              	.LBE5891:
 5068              	.LBE5898:
 5069              	.LBE5902:
 460:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 5070              		.loc 5 460 15 view .LVU1153
 5071 0014 1399     		ldr	r1, [sp, #76]
 5072              	.LVL374:
 460:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 5073              		.loc 5 460 15 view .LVU1154
 5074 0016 9DF85060 		ldrb	r6, [sp, #80]	@ zero_extendqisi2
 5075 001a 0092     		str	r2, [sp]
 5076              	.LBB5903:
 5077              	.LBB5899:
 5078              	.LBB5892:
 5079              	.LBB5889:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5080              		.loc 5 477 25 view .LVU1155
 5081 001c 33B1     		cbz	r3, .L315
 476:../../libdaisy/src/hid/disp/display.h ****         while(*string++ != '\0')
 5082              		.loc 5 476 18 view .LVU1156
 5083 001e 0022     		movs	r2, #0
 5084              	.LVL375:
 5085              	.L316:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5086              		.loc 5 477 25 view .LVU1157
 5087 0020 10F8013B 		ldrb	r3, [r0], #1	@ zero_extendqisi2
 5088              	.LVL376:
 478:../../libdaisy/src/hid/disp/display.h ****         return result;
 5089              		.loc 5 478 13 view .LVU1158
 5090 0024 0132     		adds	r2, r2, #1
 5091              	.LVL377:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5092              		.loc 5 477 25 is_stmt 1 view .LVU1159
 5093 0026 002B     		cmp	r3, #0
 5094 0028 FAD1     		bne	.L316
 5095              	.LBE5889:
 5096              	.LBE5892:
 483:../../libdaisy/src/hid/disp/display.h ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 256


 484:../../libdaisy/src/hid/disp/display.h ****         const auto numChars = strlen(text);
 485:../../libdaisy/src/hid/disp/display.h ****         return {int16_t(numChars * font.FontWidth), font.FontHeight};
 5097              		.loc 5 485 68 is_stmt 0 view .LVU1160
 5098 002a 93B2     		uxth	r3, r2
 5099              	.LVL378:
 5100              	.L315:
 5101              		.loc 5 485 68 view .LVU1161
 5102 002c 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 5103              		.loc 5 485 58 view .LVU1162
 5104 002e 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 5105              		.loc 5 485 68 view .LVU1163
 5106 0030 12FB03F3 		smulbb	r3, r2, r3
 5107 0034 02B2     		sxth	r2, r0
 5108              	.LVL379:
 5109              	.LBB5893:
 5110              	.LBI5893:
 5111              		.file 33 "../../libdaisy/src/hid/disp/graphics_common.h"
   1:../../libdaisy/src/hid/disp/graphics_common.h **** #pragma once
   2:../../libdaisy/src/hid/disp/graphics_common.h **** 
   3:../../libdaisy/src/hid/disp/graphics_common.h **** #include <cstdint>
   4:../../libdaisy/src/hid/disp/graphics_common.h **** 
   5:../../libdaisy/src/hid/disp/graphics_common.h **** namespace daisy
   6:../../libdaisy/src/hid/disp/graphics_common.h **** {
   7:../../libdaisy/src/hid/disp/graphics_common.h **** /** Justifications */
   8:../../libdaisy/src/hid/disp/graphics_common.h **** enum class Alignment
   9:../../libdaisy/src/hid/disp/graphics_common.h **** {
  10:../../libdaisy/src/hid/disp/graphics_common.h ****     centered,
  11:../../libdaisy/src/hid/disp/graphics_common.h ****     topLeft,
  12:../../libdaisy/src/hid/disp/graphics_common.h ****     topCentered,
  13:../../libdaisy/src/hid/disp/graphics_common.h ****     topRight,
  14:../../libdaisy/src/hid/disp/graphics_common.h ****     bottomLeft,
  15:../../libdaisy/src/hid/disp/graphics_common.h ****     bottomCentered,
  16:../../libdaisy/src/hid/disp/graphics_common.h ****     bottomRight,
  17:../../libdaisy/src/hid/disp/graphics_common.h ****     centeredLeft,
  18:../../libdaisy/src/hid/disp/graphics_common.h ****     centeredRight
  19:../../libdaisy/src/hid/disp/graphics_common.h **** };
  20:../../libdaisy/src/hid/disp/graphics_common.h **** 
  21:../../libdaisy/src/hid/disp/graphics_common.h **** class Rectangle
  22:../../libdaisy/src/hid/disp/graphics_common.h **** {
  23:../../libdaisy/src/hid/disp/graphics_common.h ****   public:
  24:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle() : x_(0), y_(0), width_(0), height_(0) {}
  25:../../libdaisy/src/hid/disp/graphics_common.h **** 
  26:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle(int16_t width, int16_t height)
 5112              		.loc 33 26 5 is_stmt 1 view .LVU1164
 5113              	.LBB5894:
 5114              	.LBI5894:
  27:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(0), y_(0), width_(max(0, width)), height_(max(0, height))
  28:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  29:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  30:../../libdaisy/src/hid/disp/graphics_common.h **** 
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle(int16_t x, int16_t y, int16_t width, int16_t height)
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
  33:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  34:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  35:../../libdaisy/src/hid/disp/graphics_common.h **** 
  36:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle(const Rectangle& other) { *this = other; }
  37:../../libdaisy/src/hid/disp/graphics_common.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 257


  38:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle& operator=(const Rectangle& other)
  39:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  40:../../libdaisy/src/hid/disp/graphics_common.h ****         x_      = other.x_;
  41:../../libdaisy/src/hid/disp/graphics_common.h ****         y_      = other.y_;
  42:../../libdaisy/src/hid/disp/graphics_common.h ****         width_  = other.width_;
  43:../../libdaisy/src/hid/disp/graphics_common.h ****         height_ = other.height_;
  44:../../libdaisy/src/hid/disp/graphics_common.h ****         return *this;
  45:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  46:../../libdaisy/src/hid/disp/graphics_common.h **** 
  47:../../libdaisy/src/hid/disp/graphics_common.h ****     bool operator==(const Rectangle& other) const
  48:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  49:../../libdaisy/src/hid/disp/graphics_common.h ****         return (x_ == other.x_) && (y_ == other.y_) && (width_ == other.width_)
  50:../../libdaisy/src/hid/disp/graphics_common.h ****                && (height_ == other.height_);
  51:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  52:../../libdaisy/src/hid/disp/graphics_common.h ****     bool operator!=(const Rectangle& other) const { return !(*this == other); }
  53:../../libdaisy/src/hid/disp/graphics_common.h **** 
  54:../../libdaisy/src/hid/disp/graphics_common.h ****     bool IsEmpty() const { return (width_ <= 0) || (height_ <= 0); }
  55:../../libdaisy/src/hid/disp/graphics_common.h **** 
  56:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetX() const { return x_; }
  57:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetY() const { return y_; }
  58:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetWidth() const { return width_; }
  59:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetHeight() const { return height_; }
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetRight() const { return x_ + width_; }
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
  63:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
  64:../../libdaisy/src/hid/disp/graphics_common.h **** 
  65:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithX(int16_t x) const { return {x, y_, width_, height_}; }
  66:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithY(int16_t y) const { return {x_, y, width_, height_}; }
  67:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithWidth(int16_t width) const
  68:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  69:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width, height_};
  70:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  71:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithHeight(int16_t height) const
  72:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  73:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width_, height};
  74:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  75:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithSize(int16_t width, int16_t height) const
  76:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  77:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width, height};
  78:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  79:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithWidthKeepingCenter(int16_t width) const
  80:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  81:../../libdaisy/src/hid/disp/graphics_common.h ****         return Rectangle(x_, y_, width, height_)
  82:../../libdaisy/src/hid/disp/graphics_common.h ****             .WithCenter(GetCenterX(), GetCenterY());
  83:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  84:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithHeightKeepingCenter(int16_t height) const
  85:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  86:../../libdaisy/src/hid/disp/graphics_common.h ****         return Rectangle(x_, y_, width_, height)
  87:../../libdaisy/src/hid/disp/graphics_common.h ****             .WithCenter(GetCenterX(), GetCenterY());
  88:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  89:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithSizeKeepingCenter(int16_t width, int16_t height) const
  90:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  91:../../libdaisy/src/hid/disp/graphics_common.h ****         return Rectangle(x_, y_, width, height)
  92:../../libdaisy/src/hid/disp/graphics_common.h ****             .WithCenter(GetCenterX(), GetCenterY());
  93:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  94:../../libdaisy/src/hid/disp/graphics_common.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 258


  95:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle Reduced(int16_t sizeToReduce) const
  96:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  97:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + sizeToReduce),
  98:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(y_ + sizeToReduce),
  99:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(width_ - 2 * sizeToReduce),
 100:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(height_ - 2 * sizeToReduce)};
 101:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 102:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle Reduced(int16_t xToReduce, int16_t yToReduce) const
 103:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 104:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + xToReduce),
 105:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(y_ + yToReduce),
 106:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(width_ - 2 * xToReduce),
 107:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(height_ - 2 * yToReduce)};
 108:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 109:../../libdaisy/src/hid/disp/graphics_common.h **** 
 110:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle Translated(int16_t x, int16_t y) const
 111:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 112:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + x), int16_t(y_ + y), width_, height_};
 113:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 114:../../libdaisy/src/hid/disp/graphics_common.h **** 
 115:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithLeft(int16_t left) const
 116:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 117:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto newWidth = int16_t((x_ - left) + width_);
 118:../../libdaisy/src/hid/disp/graphics_common.h ****         return {left, y_, newWidth, height_};
 119:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 120:../../libdaisy/src/hid/disp/graphics_common.h **** 
 121:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithRight(int16_t right) const
 122:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 123:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto newWidth = int16_t(right - x_);
 124:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, newWidth, height_};
 125:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 126:../../libdaisy/src/hid/disp/graphics_common.h **** 
 127:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTop(int16_t top) const
 128:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 129:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto newHeight = int16_t((y_ - top) + height_);
 130:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, top, width_, newHeight};
 131:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 132:../../libdaisy/src/hid/disp/graphics_common.h **** 
 133:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithBottom(int16_t bottom) const
 134:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 135:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto newHeight = int16_t(bottom - y_);
 136:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width_, newHeight};
 137:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 138:../../libdaisy/src/hid/disp/graphics_common.h **** 
 139:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTrimmedLeft(int16_t pxToTrim) const
 140:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 141:../../libdaisy/src/hid/disp/graphics_common.h ****         return {
 142:../../libdaisy/src/hid/disp/graphics_common.h ****             int16_t(x_ + pxToTrim), y_, int16_t(width_ - pxToTrim), height_};
 143:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 144:../../libdaisy/src/hid/disp/graphics_common.h **** 
 145:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTrimmedRight(int16_t pxToTrim) const
 146:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 147:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, int16_t(width_ - pxToTrim), height_};
 148:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 149:../../libdaisy/src/hid/disp/graphics_common.h **** 
 150:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTrimmedTop(int16_t pxToTrim) const
 151:../../libdaisy/src/hid/disp/graphics_common.h ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 259


 152:../../libdaisy/src/hid/disp/graphics_common.h ****         return {
 153:../../libdaisy/src/hid/disp/graphics_common.h ****             x_, int16_t(y_ + pxToTrim), width_, int16_t(height_ - pxToTrim)};
 154:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 155:../../libdaisy/src/hid/disp/graphics_common.h **** 
 156:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTrimmedBottom(int16_t pxToTrim) const
 157:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 158:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width_, int16_t(height_ - pxToTrim)};
 159:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 160:../../libdaisy/src/hid/disp/graphics_common.h **** 
 161:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithCenterX(int16_t centerX) const
 162:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 163:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + centerX - GetCenterX()), y_, width_, height_};
 164:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 165:../../libdaisy/src/hid/disp/graphics_common.h **** 
 166:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithCenterY(int16_t centerY) const
 167:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 168:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, int16_t(y_ + centerY - GetCenterY()), width_, height_};
 169:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 170:../../libdaisy/src/hid/disp/graphics_common.h **** 
 171:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithCenter(int16_t centerX, int16_t centerY) const
 172:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 173:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + centerX - GetCenterX()),
 174:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(y_ + centerY - GetCenterY()),
 175:../../libdaisy/src/hid/disp/graphics_common.h ****                 width_,
 176:../../libdaisy/src/hid/disp/graphics_common.h ****                 height_};
 177:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 178:../../libdaisy/src/hid/disp/graphics_common.h **** 
 179:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle RemoveFromLeft(int16_t pxToRemove)
 180:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 181:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto result = this->WithWidth(min(pxToRemove, width_));
 182:../../libdaisy/src/hid/disp/graphics_common.h ****         x_ += min(pxToRemove, width_);
 183:../../libdaisy/src/hid/disp/graphics_common.h ****         width_ = max(int16_t(width_ - pxToRemove), 0);
 184:../../libdaisy/src/hid/disp/graphics_common.h ****         return result;
 185:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 186:../../libdaisy/src/hid/disp/graphics_common.h **** 
 187:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle RemoveFromRight(int16_t pxToRemove)
 188:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 189:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto canRemove = min(pxToRemove, width_);
 190:../../libdaisy/src/hid/disp/graphics_common.h ****         width_ -= canRemove;
 191:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + width_), y_, canRemove, height_};
 192:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 193:../../libdaisy/src/hid/disp/graphics_common.h **** 
 194:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle RemoveFromTop(int16_t pxToRemove)
 195:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 196:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto result = this->WithHeight(min(pxToRemove, height_));
 197:../../libdaisy/src/hid/disp/graphics_common.h ****         y_ += min(pxToRemove, height_);
 198:../../libdaisy/src/hid/disp/graphics_common.h ****         height_ = max(height_ - pxToRemove, 0);
 199:../../libdaisy/src/hid/disp/graphics_common.h ****         return result;
 200:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 201:../../libdaisy/src/hid/disp/graphics_common.h **** 
 202:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle RemoveFromBottom(int16_t pxToRemove)
 203:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 204:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto canRemove = min(pxToRemove, height_);
 205:../../libdaisy/src/hid/disp/graphics_common.h ****         height_ -= canRemove;
 206:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, int16_t(y_ + height_), width_, canRemove};
 207:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 208:../../libdaisy/src/hid/disp/graphics_common.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 260


 209:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle AlignedWithin(const Rectangle& other, Alignment alignment) const
 210:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 211:../../libdaisy/src/hid/disp/graphics_common.h ****         switch(alignment)
 212:../../libdaisy/src/hid/disp/graphics_common.h ****         {
 213:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topLeft:
 214:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_, other.y_, width_, height_};
 215:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topRight:
 216:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 217:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 218:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 219:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 220:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topCentered:
 221:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 222:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 223:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 224:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 225:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::bottomLeft:
 226:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_,
 227:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 228:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 229:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 230:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::bottomRight:
 231:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 232:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 233:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 234:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 235:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::bottomCentered:
 236:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 237:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 238:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 239:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 240:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::centeredLeft:
 241:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_,
 242:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 243:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 244:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 245:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::centeredRight:
 246:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 247:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 248:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 249:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 250:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::centered:
 251:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 252:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 253:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 254:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 255:../../libdaisy/src/hid/disp/graphics_common.h ****             default: return {};
 256:../../libdaisy/src/hid/disp/graphics_common.h ****         }
 257:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 258:../../libdaisy/src/hid/disp/graphics_common.h **** 
 259:../../libdaisy/src/hid/disp/graphics_common.h ****   private:
 260:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t x_, y_, width_, height_;
 261:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t max(int16_t a, int16_t b) { return (a > b) ? a : b; }
 5115              		.loc 33 261 13 view .LVU1165
 5116              	.LBE5894:
 5117              	.LBE5893:
 5118              	.LBE5899:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 261


 5119              	.LBE5903:
 5120              		.loc 33 261 41 view .LVU1166
 5121              	.LBB5904:
 5122              	.LBB5900:
 5123              	.LBB5896:
 5124              	.LBB5895:
 5125              	.LBI5895:
 5126              		.loc 33 261 13 view .LVU1167
 5127              	.LBE5895:
 5128              	.LBE5896:
 5129              	.LBE5900:
 5130              	.LBE5904:
 5131              		.loc 33 261 41 view .LVU1168
 5132              	.LBB5905:
 5133              	.LBI5905:
 209:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5134              		.loc 33 209 15 view .LVU1169
 5135              	.LBB5906:
 211:../../libdaisy/src/hid/disp/graphics_common.h ****         {
 5136              		.loc 33 211 9 view .LVU1170
 5137 0036 1BB2     		sxth	r3, r3
 5138 0038 23EAE373 		bic	r3, r3, r3, asr #31
 5139 003c 0829     		cmp	r1, #8
 5140 003e 00F2A981 		bhi	.L317
 5141 0042 DFE811F0 		tbh	[pc, r1, lsl #1]
 5142              	.L319:
 5143 0046 0201     		.2byte	(.L327-.L319)/2
 5144 0048 1401     		.2byte	(.L326-.L319)/2
 5145 004a 2001     		.2byte	(.L325-.L319)/2
 5146 004c 3401     		.2byte	(.L324-.L319)/2
 5147 004e 4201     		.2byte	(.L323-.L319)/2
 5148 0050 5001     		.2byte	(.L322-.L319)/2
 5149 0052 6701     		.2byte	(.L321-.L319)/2
 5150 0054 7101     		.2byte	(.L320-.L319)/2
 5151 0056 0900     		.2byte	(.L318-.L319)/2
 5152              		.p2align 1
 5153              	.L318:
 245:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 5154              		.loc 33 245 13 view .LVU1171
 246:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5155              		.loc 33 246 17 view .LVU1172
 5156              	.LVL380:
 5157              	.LBB5907:
 5158              	.LBI5907:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5159              		.loc 33 60 13 view .LVU1173
 5160              	.LBB5908:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5161              		.loc 33 60 32 view .LVU1174
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5162              		.loc 33 60 42 is_stmt 0 view .LVU1175
 5163 0058 A188     		ldrh	r1, [r4, #4]
 5164              	.LVL381:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5165              		.loc 33 60 42 view .LVU1176
 5166 005a 2788     		ldrh	r7, [r4]
 5167 005c 0F44     		add	r7, r7, r1
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 262


 5168              	.LBE5908:
 5169              	.LBE5907:
 5170              	.LBB5909:
 5171              	.LBB5910:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5172              		.loc 33 63 54 view .LVU1177
 5173 005e B4F90610 		ldrsh	r1, [r4, #6]
 5174              	.LBE5910:
 5175              	.LBE5909:
 246:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5176              		.loc 33 246 50 view .LVU1178
 5177 0062 FF1A     		subs	r7, r7, r3
 5178              	.LBB5914:
 5179              	.LBB5911:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5180              		.loc 33 63 54 view .LVU1179
 5181 0064 0029     		cmp	r1, #0
 5182              	.LBE5911:
 5183              	.LBE5914:
 246:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5184              		.loc 33 246 50 view .LVU1180
 5185 0066 BFB2     		uxth	r7, r7
 5186              	.LVL382:
 5187              	.LBB5915:
 5188              	.LBI5909:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5189              		.loc 33 63 13 is_stmt 1 view .LVU1181
 5190              	.LBB5912:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5191              		.loc 33 63 34 view .LVU1182
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5192              		.loc 33 63 34 is_stmt 0 view .LVU1183
 5193              	.LBE5912:
 5194              	.LBE5915:
 5195              	.LBB5916:
 5196              	.LBI5916:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5197              		.loc 33 63 13 is_stmt 1 view .LVU1184
 5198              	.LBB5917:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5199              		.loc 33 63 34 view .LVU1185
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5200              		.loc 33 63 34 is_stmt 0 view .LVU1186
 5201              	.LBE5917:
 5202              	.LBE5916:
 5203              	.LBB5918:
 5204              	.LBB5913:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5205              		.loc 33 63 54 view .LVU1187
 5206 0068 C0F2FF80 		blt	.L390
 5207              	.L334:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5208              		.loc 33 63 54 view .LVU1188
 5209              	.LBE5913:
 5210              	.LBE5918:
 5211              	.LBB5919:
 5212              	.LBB5920:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 263


  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5213              		.loc 33 63 44 view .LVU1189
 5214 006c B4F802C0 		ldrh	ip, [r4, #2]
 5215              	.LBE5920:
 5216              	.LBE5919:
 5217              	.LBB5926:
 5218              	.LBB5927:
 5219              	.LBB5928:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5220              		.loc 33 32 66 view .LVU1190
 5221 0070 0698     		ldr	r0, [sp, #24]
 5222              	.LBE5928:
 5223              	.LBE5927:
 5224              	.LBE5926:
 5225              	.LBB5939:
 5226              	.LBB5921:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5227              		.loc 33 63 44 view .LVU1191
 5228 0072 0CEB6104 		add	r4, ip, r1, asr #1
 5229              	.LVL383:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5230              		.loc 33 63 44 view .LVU1192
 5231              	.LBE5921:
 5232              	.LBE5939:
 5233              	.LBB5940:
 5234              	.LBB5935:
 5235              	.LBB5931:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5236              		.loc 33 32 66 view .LVU1193
 5237 0076 C280     		strh	r2, [r0, #6]	@ movhi
 5238              	.LBE5931:
 5239              	.LBE5935:
 5240              	.LBE5940:
 252:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 5241              		.loc 33 252 58 view .LVU1194
 5242 0078 A4EB5202 		sub	r2, r4, r2, lsr #1
 5243              	.LBB5941:
 5244              	.LBB5936:
 5245              	.LBB5932:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5246              		.loc 33 32 66 view .LVU1195
 5247 007c 8380     		strh	r3, [r0, #4]	@ movhi
 5248 007e 0780     		strh	r7, [r0]	@ movhi
 5249              	.LBE5932:
 5250              	.LBE5936:
 5251              	.LBE5941:
 252:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 5252              		.loc 33 252 58 view .LVU1196
 5253 0080 94B2     		uxth	r4, r2
 5254              	.LVL384:
 5255              	.LBB5942:
 5256              	.LBI5926:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 5257              		.loc 33 31 5 is_stmt 1 view .LVU1197
 5258              	.LBB5937:
 5259              	.LBB5933:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 264


 5260              		.loc 33 32 66 is_stmt 0 view .LVU1198
 5261 0082 4480     		strh	r4, [r0, #2]	@ movhi
 5262              	.LVL385:
 5263              	.LBB5929:
 5264              	.LBI5929:
 5265              		.loc 33 261 13 is_stmt 1 view .LVU1199
 5266              	.LBE5929:
 5267              	.LBE5933:
 5268              	.LBE5937:
 5269              	.LBE5942:
 5270              	.LBE5906:
 5271              	.LBE5905:
 5272              		.loc 33 261 41 view .LVU1200
 5273              	.LBB6129:
 5274              	.LBB6107:
 5275              	.LBB5943:
 5276              	.LBB5938:
 5277              	.LBB5934:
 5278              	.LBB5930:
 5279              	.LBI5930:
 5280              		.loc 33 261 13 view .LVU1201
 5281              	.LBE5930:
 5282              	.LBE5934:
 5283              	.LBE5938:
 5284              	.LBE5943:
 5285              	.LBE6107:
 5286              	.LBE6129:
 5287              		.loc 33 261 41 view .LVU1202
 5288              	.L328:
  56:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetY() const { return y_; }
 5289              		.loc 33 56 28 view .LVU1203
  57:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetWidth() const { return width_; }
 5290              		.loc 33 57 28 view .LVU1204
 5291              	.LBB6130:
 5292              	.LBI6130:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 5293              		.loc 5 171 10 view .LVU1205
 5294              	.LBB6131:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5295              		.loc 5 173 9 view .LVU1206
 5296 0084 A64A     		ldr	r2, .L400
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5297              		.loc 5 173 33 is_stmt 0 view .LVU1207
 5298 0086 D8F80030 		ldr	r3, [r8]
 5299 008a 1146     		mov	r1, r2
 5300 008c 0192     		str	r2, [sp, #4]
 5301 008e DA68     		ldr	r2, [r3, #12]
 5302 0090 8A42     		cmp	r2, r1
 5303 0092 40F08D81 		bne	.L336
 5304 0096 8020     		movs	r0, #128
 5305              	.LVL386:
 5306              	.L337:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5307              		.loc 5 173 19 view .LVU1208
 5308 0098 B842     		cmp	r0, r7
 5309 009a 05D8     		bhi	.L338
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 265


 5310              		.loc 5 173 44 view .LVU1209
 5311 009c DA68     		ldr	r2, [r3, #12]
 5312 009e 0199     		ldr	r1, [sp, #4]
 5313 00a0 8A42     		cmp	r2, r1
 5314 00a2 40F09A81 		bne	.L391
 5315 00a6 7F27     		movs	r7, #127
 5316              	.L338:
 5317 00a8 9E4A     		ldr	r2, .L400+4
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5318              		.loc 5 174 34 view .LVU1210
 5319 00aa 9B68     		ldr	r3, [r3, #8]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5320              		.loc 5 173 19 view .LVU1211
 5321 00ac A8F80470 		strh	r7, [r8, #4]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5322              		.loc 5 174 9 is_stmt 1 view .LVU1212
 5323 00b0 9342     		cmp	r3, r2
 5324 00b2 0392     		str	r2, [sp, #12]
 5325 00b4 40F08981 		bne	.L368
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5326              		.loc 5 174 34 is_stmt 0 view .LVU1213
 5327 00b8 4020     		movs	r0, #64
 5328              	.L340:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5329              		.loc 5 174 19 view .LVU1214
 5330 00ba A042     		cmp	r0, r4
 5331 00bc 07D8     		bhi	.L342
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5332              		.loc 5 174 46 view .LVU1215
 5333 00be D8F80030 		ldr	r3, [r8]
 5334 00c2 039A     		ldr	r2, [sp, #12]
 5335 00c4 9B68     		ldr	r3, [r3, #8]
 5336 00c6 9342     		cmp	r3, r2
 5337 00c8 40F08281 		bne	.L392
 5338 00cc 3F24     		movs	r4, #63
 5339              	.L342:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5340              		.loc 5 174 46 view .LVU1216
 5341              	.LBE6131:
 5342              	.LBE6130:
 5343              	.LBB6135:
 5344              	.LBB6136:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5345              		.loc 5 443 9 view .LVU1217
 5346 00ce 009B     		ldr	r3, [sp]
 5347              	.LBE6136:
 5348              	.LBE6135:
 5349              	.LBB6184:
 5350              	.LBB6132:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5351              		.loc 5 174 19 view .LVU1218
 5352 00d0 A8F80640 		strh	r4, [r8, #6]	@ movhi
 5353              	.LVL387:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5354              		.loc 5 174 19 view .LVU1219
 5355              	.LBE6132:
 5356              	.LBE6184:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 266


 5357              	.LBB6185:
 5358              	.LBB6181:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5359              		.loc 5 443 9 view .LVU1220
 5360 00d4 93F800B0 		ldrb	fp, [r3]	@ zero_extendqisi2
 5361 00d8 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 5362              	.LVL388:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5363              		.loc 5 443 9 view .LVU1221
 5364 00da 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 5365              	.LVL389:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5366              		.loc 5 443 9 view .LVU1222
 5367 00dc 0493     		str	r3, [sp, #16]
 5368              	.LVL390:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5369              		.loc 5 443 9 view .LVU1223
 5370 00de 6B68     		ldr	r3, [r5, #4]
 5371 00e0 0793     		str	r3, [sp, #28]
 5372              	.LVL391:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5373              		.loc 5 443 9 view .LVU1224
 5374              	.LBE6181:
 5375              	.LBI6135:
 440:../../libdaisy/src/hid/disp/display.h ****     {
 5376              		.loc 5 440 10 is_stmt 1 view .LVU1225
 5377              	.LBB6182:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5378              		.loc 5 443 9 view .LVU1226
 5379 00e2 BBF1000F 		cmp	fp, #0
 5380 00e6 00F0AC80 		beq	.L314
 5381              	.LVL392:
 5382              	.L344:
 5383              	.LBB6137:
 5384              	.LBI6137:
 396:../../libdaisy/src/hid/disp/display.h ****     {
 5385              		.loc 5 396 10 view .LVU1227
 5386              	.LBB6138:
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 5387              		.loc 5 401 20 is_stmt 0 view .LVU1228
 5388 00ea ABF12005 		sub	r5, fp, #32
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 5389              		.loc 5 401 9 view .LVU1229
 5390 00ee EBB2     		uxtb	r3, r5
 5391 00f0 5E2B     		cmp	r3, #94
 5392 00f2 00F22E81 		bhi	.L348
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 5393              		.loc 5 405 17 view .LVU1230
 5394 00f6 D8F80030 		ldr	r3, [r8]
 5395 00fa 019A     		ldr	r2, [sp, #4]
 5396 00fc DB68     		ldr	r3, [r3, #12]
 5397 00fe 9342     		cmp	r3, r2
 5398 0100 40F02A81 		bne	.L393
 5399 0104 8020     		movs	r0, #128
 5400              	.L347:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 5401              		.loc 5 405 23 view .LVU1231
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 267


 5402 0106 B8F80430 		ldrh	r3, [r8, #4]
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 5403              		.loc 5 405 33 view .LVU1232
 5404 010a 2344     		add	r3, r3, r4
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5405              		.loc 5 406 12 view .LVU1233
 5406 010c 9842     		cmp	r0, r3
 5407 010e C0F22081 		blt	.L348
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5408              		.loc 5 406 21 view .LVU1234
 5409 0112 D8F80030 		ldr	r3, [r8]
 5410 0116 039A     		ldr	r2, [sp, #12]
 5411 0118 9B68     		ldr	r3, [r3, #8]
 5412 011a 9342     		cmp	r3, r2
 5413 011c 40F01F81 		bne	.L394
 5414 0120 4020     		movs	r0, #64
 5415              	.L349:
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5416              		.loc 5 406 27 view .LVU1235
 5417 0122 B8F80610 		ldrh	r1, [r8, #6]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5418              		.loc 5 406 37 view .LVU1236
 5419 0126 049A     		ldr	r2, [sp, #16]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5420              		.loc 5 406 27 view .LVU1237
 5421 0128 0291     		str	r1, [sp, #8]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5422              		.loc 5 406 37 view .LVU1238
 5423 012a 8B18     		adds	r3, r1, r2
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5424              		.loc 5 406 12 view .LVU1239
 5425 012c 9842     		cmp	r0, r3
 5426 012e C0F21081 		blt	.L348
 5427              	.LVL393:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 5428              		.loc 5 413 22 is_stmt 1 view .LVU1240
 5429 0132 002A     		cmp	r2, #0
 5430 0134 00F01E81 		beq	.L350
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 5431              		.loc 5 415 37 is_stmt 0 view .LVU1241
 5432 0138 02FB05F5 		mul	r5, r2, r5
 5433 013c 6FF0004E 		mvn	lr, #-2147483648
 5434 0140 079B     		ldr	r3, [sp, #28]
 5435 0142 AE44     		add	lr, lr, r5
 5436 0144 1544     		add	r5, r5, r2
 5437 0146 CDF814B0 		str	fp, [sp, #20]
 5438 014a 03EB4E0E 		add	lr, r3, lr, lsl #1
 5439 014e 023B     		subs	r3, r3, #2
 434:../../libdaisy/src/hid/disp/display.h **** 
 5440              		.loc 5 434 19 view .LVU1242
 5441 0150 B8F804A0 		ldrh	r10, [r8, #4]
 5442 0154 03EB4503 		add	r3, r3, r5, lsl #1
 5443 0158 0D46     		mov	r5, r1
 5444 015a 9B46     		mov	fp, r3
 5445              	.LVL394:
 5446              	.L353:
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 268


 5447              		.loc 5 415 15 view .LVU1243
 5448 015c 3EF8027F 		ldrh	r7, [lr, #2]!
 5449              	.LVL395:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5450              		.loc 5 416 26 is_stmt 1 view .LVU1244
 5451 0160 A4B3     		cbz	r4, .L358
 5452              	.LBB6139:
 5453              	.LBB6140:
 5454              	.LBB6141:
 5455              	.LBB6142:
 5456              	.LBB6143:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5457              		.loc 14 246 55 is_stmt 0 view .LVU1245
 5458 0162 05F00703 		and	r3, r5, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5459              		.loc 14 246 49 view .LVU1246
 5460 0166 4FF0010C 		mov	ip, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5461              		.loc 14 246 28 view .LVU1247
 5462 016a EA08     		lsrs	r2, r5, #3
 5463 016c 5146     		mov	r1, r10
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5464              		.loc 14 246 49 view .LVU1248
 5465 016e 0CFA03FC 		lsl	ip, ip, r3
 5466 0172 0AF11403 		add	r3, r10, #20
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5467              		.loc 14 246 42 view .LVU1249
 5468 0176 4FFA8CFC 		sxtb	ip, ip
 5469 017a 03EBC212 		add	r2, r3, r2, lsl #7
 5470              	.LBE6143:
 5471              	.LBE6142:
 5472              	.LBE6141:
 5473              	.LBE6140:
 5474              	.LBE6139:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5475              		.loc 5 416 19 view .LVU1250
 5476 017e 0023     		movs	r3, #0
 5477              	.LBB6161:
 5478              	.LBB6156:
 5479              	.LBB6151:
 5480              	.LBB6147:
 5481              	.LBB6144:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5482              		.loc 14 246 42 view .LVU1251
 5483 0180 6FEA0C09 		mvn	r9, ip
 5484 0184 4244     		add	r2, r2, r8
 5485 0186 0DE0     		b	.L359
 5486              	.LVL396:
 5487              	.L395:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5488              		.loc 14 246 42 view .LVU1252
 5489              	.LBE6144:
 5490              	.LBE6147:
 5491              	.LBE6151:
 5492              	.LBE6156:
 5493              	.LBE6161:
 5494              	.LBB6162:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 269


 5495              	.LBI6162:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 5496              		.loc 4 41 10 is_stmt 1 view .LVU1253
 5497              	.LBB6163:
 5498              	.LBI6163:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 5499              		.loc 14 239 10 view .LVU1254
 5500              	.LBB6164:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 5501              		.loc 14 241 9 is_stmt 0 view .LVU1255
 5502 0188 7F29     		cmp	r1, #127
 5503 018a 06D8     		bhi	.L355
 5504 018c 3F2D     		cmp	r5, #63
 5505 018e 04D8     		bhi	.L355
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5506              		.loc 14 244 42 view .LVU1256
 5507 0190 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 5508              		.loc 14 243 9 view .LVU1257
 5509 0192 96B1     		cbz	r6, .L357
 5510              	.L389:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 5511              		.loc 14 243 9 view .LVU1258
 5512              	.LBE6164:
 5513              	.LBE6163:
 5514              	.LBE6162:
 5515              	.LBB6165:
 5516              	.LBB6157:
 5517              	.LBB6152:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5518              		.loc 14 244 42 view .LVU1259
 5519 0194 4CEA0000 		orr	r0, ip, r0
 5520 0198 1070     		strb	r0, [r2]
 5521              	.L355:
 5522              	.LBE6152:
 5523              	.LBE6157:
 5524              	.LBE6165:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5525              		.loc 5 416 13 is_stmt 1 view .LVU1260
 5526 019a 0133     		adds	r3, r3, #1
 5527              	.LVL397:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5528              		.loc 5 416 26 view .LVU1261
 5529 019c 0132     		adds	r2, r2, #1
 5530 019e 0131     		adds	r1, r1, #1
 5531 01a0 9C42     		cmp	r4, r3
 5532 01a2 13D0     		beq	.L358
 5533              	.LVL398:
 5534              	.L359:
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 5535              		.loc 5 418 23 is_stmt 0 view .LVU1262
 5536 01a4 07FA03F0 		lsl	r0, r7, r3
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 5537              		.loc 5 418 17 view .LVU1263
 5538 01a8 0004     		lsls	r0, r0, #16
 5539 01aa EDD4     		bmi	.L395
 5540              	.LVL399:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 270


 5541              	.LBB6166:
 5542              	.LBI6139:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 5543              		.loc 4 41 10 is_stmt 1 view .LVU1264
 5544              	.LBB6158:
 5545              	.LBI6140:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 5546              		.loc 14 239 10 view .LVU1265
 5547              	.LBB6153:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 5548              		.loc 14 241 9 is_stmt 0 view .LVU1266
 5549 01ac 7F29     		cmp	r1, #127
 5550 01ae F4D8     		bhi	.L355
 5551 01b0 3F2D     		cmp	r5, #63
 5552 01b2 F2D8     		bhi	.L355
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5553              		.loc 14 244 42 view .LVU1267
 5554 01b4 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 5555              		.loc 14 243 9 view .LVU1268
 5556 01b6 002E     		cmp	r6, #0
 5557 01b8 ECD0     		beq	.L389
 5558              	.L357:
 5559              	.LVL400:
 5560              	.LBB6148:
 5561              	.LBI6142:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 5562              		.loc 14 239 10 is_stmt 1 view .LVU1269
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 5563              		.loc 14 239 10 is_stmt 0 view .LVU1270
 5564              	.LBE6148:
 5565              	.LBE6153:
 5566              	.LBE6158:
 5567              	.LBE6166:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5568              		.loc 5 416 13 view .LVU1271
 5569 01ba 0133     		adds	r3, r3, #1
 5570              	.LVL401:
 5571              	.LBB6167:
 5572              	.LBB6159:
 5573              	.LBB6154:
 5574              	.LBB6149:
 5575              	.LBB6145:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5576              		.loc 14 246 42 view .LVU1272
 5577 01bc 09EA0000 		and	r0, r9, r0
 5578              	.LBE6145:
 5579              	.LBE6149:
 5580              	.LBE6154:
 5581              	.LBE6159:
 5582              	.LBE6167:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5583              		.loc 5 416 26 view .LVU1273
 5584 01c0 0132     		adds	r2, r2, #1
 5585 01c2 0131     		adds	r1, r1, #1
 5586 01c4 9C42     		cmp	r4, r3
 5587              	.LBB6168:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 271


 5588              	.LBB6160:
 5589              	.LBB6155:
 5590              	.LBB6150:
 5591              	.LBB6146:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5592              		.loc 14 246 42 view .LVU1274
 5593 01c6 02F8010C 		strb	r0, [r2, #-1]
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5594              		.loc 14 246 42 view .LVU1275
 5595              	.LBE6146:
 5596              	.LBE6150:
 5597              	.LBE6155:
 5598              	.LBE6160:
 5599              	.LBE6168:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5600              		.loc 5 416 13 is_stmt 1 view .LVU1276
 5601              	.LVL402:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5602              		.loc 5 416 26 view .LVU1277
 5603 01ca EBD1     		bne	.L359
 5604              	.LVL403:
 5605              	.L358:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 5606              		.loc 5 413 9 view .LVU1278
 413:../../libdaisy/src/hid/disp/display.h ****         {
 5607              		.loc 5 413 22 view .LVU1279
 5608 01cc F345     		cmp	fp, lr
 5609 01ce 05F10105 		add	r5, r5, #1
 5610 01d2 C3D1     		bne	.L353
 5611 01d4 DDF814B0 		ldr	fp, [sp, #20]
 5612              	.LVL404:
 5613              	.L352:
 5614              	.LBB6169:
 5615              	.LBB6170:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5616              		.loc 5 173 33 is_stmt 0 view .LVU1280
 5617 01d8 D8F80020 		ldr	r2, [r8]
 5618              	.LBE6170:
 5619              	.LBE6169:
 434:../../libdaisy/src/hid/disp/display.h **** 
 5620              		.loc 5 434 18 view .LVU1281
 5621 01dc 0AEB0405 		add	r5, r10, r4
 5622 01e0 0199     		ldr	r1, [sp, #4]
 5623              	.LBB6175:
 5624              	.LBB6171:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5625              		.loc 5 173 33 view .LVU1282
 5626 01e2 D368     		ldr	r3, [r2, #12]
 5627              	.LBE6171:
 5628              	.LBE6175:
 434:../../libdaisy/src/hid/disp/display.h **** 
 5629              		.loc 5 434 18 view .LVU1283
 5630 01e4 ADB2     		uxth	r5, r5
 5631              	.LVL405:
 5632              	.LBB6176:
 5633              	.LBI6169:
 171:../../libdaisy/src/hid/disp/display.h ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 272


 5634              		.loc 5 171 10 is_stmt 1 view .LVU1284
 5635              	.LBB6172:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5636              		.loc 5 173 9 view .LVU1285
 5637 01e6 8B42     		cmp	r3, r1
 5638 01e8 40F0BF80 		bne	.L396
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5639              		.loc 5 173 33 is_stmt 0 view .LVU1286
 5640 01ec 8020     		movs	r0, #128
 5641              	.L360:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5642              		.loc 5 173 19 view .LVU1287
 5643 01ee 8542     		cmp	r5, r0
 5644 01f0 05D3     		bcc	.L361
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5645              		.loc 5 173 44 view .LVU1288
 5646 01f2 D368     		ldr	r3, [r2, #12]
 5647 01f4 0199     		ldr	r1, [sp, #4]
 5648 01f6 8B42     		cmp	r3, r1
 5649 01f8 40F0C580 		bne	.L397
 5650 01fc 7F25     		movs	r5, #127
 5651              	.LVL406:
 5652              	.L361:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5653              		.loc 5 174 34 view .LVU1289
 5654 01fe 9368     		ldr	r3, [r2, #8]
 5655 0200 039A     		ldr	r2, [sp, #12]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5656              		.loc 5 173 19 view .LVU1290
 5657 0202 A8F80450 		strh	r5, [r8, #4]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5658              		.loc 5 174 9 is_stmt 1 view .LVU1291
 5659 0206 9342     		cmp	r3, r2
 5660 0208 40F0AC80 		bne	.L398
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5661              		.loc 5 174 34 is_stmt 0 view .LVU1292
 5662 020c 4020     		movs	r0, #64
 5663              	.L363:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5664              		.loc 5 174 19 view .LVU1293
 5665 020e 029B     		ldr	r3, [sp, #8]
 5666 0210 8342     		cmp	r3, r0
 5667 0212 08D3     		bcc	.L364
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5668              		.loc 5 174 46 view .LVU1294
 5669 0214 D8F80030 		ldr	r3, [r8]
 5670 0218 039A     		ldr	r2, [sp, #12]
 5671 021a 9B68     		ldr	r3, [r3, #8]
 5672 021c 9342     		cmp	r3, r2
 5673 021e 40F0AC80 		bne	.L399
 5674 0222 3F23     		movs	r3, #63
 5675 0224 0293     		str	r3, [sp, #8]
 5676              	.LVL407:
 5677              	.L364:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5678              		.loc 5 174 19 view .LVU1295
 5679 0226 029B     		ldr	r3, [sp, #8]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 273


 5680 0228 A8F80630 		strh	r3, [r8, #6]	@ movhi
 5681              	.LVL408:
 5682              	.L346:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5683              		.loc 5 174 19 view .LVU1296
 5684              	.LBE6172:
 5685              	.LBE6176:
 5686              	.LBE6138:
 5687              	.LBE6137:
 445:../../libdaisy/src/hid/disp/display.h ****                != *str)
 5688              		.loc 5 445 13 view .LVU1297
 5689 022c 009A     		ldr	r2, [sp]
 5690 022e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 5691 0230 5B45     		cmp	r3, fp
 5692 0232 06D1     		bne	.L314
 5693              	.LVL409:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5694              		.loc 5 443 9 is_stmt 1 view .LVU1298
 5695 0234 12F801BF 		ldrb	fp, [r2, #1]!	@ zero_extendqisi2
 5696              	.LVL410:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5697              		.loc 5 443 9 is_stmt 0 view .LVU1299
 5698 0238 0092     		str	r2, [sp]
 5699 023a BBF1000F 		cmp	fp, #0
 5700 023e 7FF454AF 		bne	.L344
 5701              	.LVL411:
 5702              	.L314:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5703              		.loc 5 443 9 view .LVU1300
 5704              	.LBE6182:
 5705              	.LBE6185:
 471:../../libdaisy/src/hid/disp/display.h **** 
 5706              		.loc 5 471 5 view .LVU1301
 5707 0242 0698     		ldr	r0, [sp, #24]
 5708 0244 09B0     		add	sp, sp, #36
 5709              		.cfi_remember_state
 5710              		.cfi_def_cfa_offset 36
 5711              		@ sp needed
 5712 0246 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5713              	.LVL412:
 5714              	.L327:
 5715              		.cfi_restore_state
 5716              	.LBB6186:
 5717              	.LBB6108:
 250:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 5718              		.loc 33 250 13 is_stmt 1 view .LVU1302
 251:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5719              		.loc 33 251 17 view .LVU1303
 5720              	.LBB5944:
 5721              	.LBI5944:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5722              		.loc 33 62 13 view .LVU1304
 5723              	.LBB5945:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5724              		.loc 33 62 34 view .LVU1305
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5725              		.loc 33 62 34 is_stmt 0 view .LVU1306
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 274


 5726              	.LBE5945:
 5727              	.LBE5944:
 5728              	.LBB5947:
 5729              	.LBI5947:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5730              		.loc 33 62 13 is_stmt 1 view .LVU1307
 5731              	.LBB5948:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5732              		.loc 33 62 34 view .LVU1308
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5733              		.loc 33 62 34 is_stmt 0 view .LVU1309
 5734              	.LBE5948:
 5735              	.LBE5947:
 5736              	.LBB5949:
 5737              	.LBB5946:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5738              		.loc 33 62 53 view .LVU1310
 5739 024a B4F90410 		ldrsh	r1, [r4, #4]
 5740              	.LVL413:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5741              		.loc 33 62 44 view .LVU1311
 5742 024e 2788     		ldrh	r7, [r4]
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5743              		.loc 33 62 53 view .LVU1312
 5744 0250 0029     		cmp	r1, #0
 5745 0252 B8BF     		it	lt
 5746 0254 0131     		addlt	r1, r1, #1
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5747              		.loc 33 62 44 view .LVU1313
 5748 0256 07EB6107 		add	r7, r7, r1, asr #1
 5749              	.LBE5946:
 5750              	.LBE5949:
 5751              	.LBB5950:
 5752              	.LBB5922:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5753              		.loc 33 63 54 view .LVU1314
 5754 025a B4F90610 		ldrsh	r1, [r4, #6]
 5755              	.LBE5922:
 5756              	.LBE5950:
 251:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5757              		.loc 33 251 58 view .LVU1315
 5758 025e A7EB6307 		sub	r7, r7, r3, asr #1
 5759              	.LBB5951:
 5760              	.LBB5923:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5761              		.loc 33 63 54 view .LVU1316
 5762 0262 0029     		cmp	r1, #0
 5763              	.LBE5923:
 5764              	.LBE5951:
 251:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5765              		.loc 33 251 58 view .LVU1317
 5766 0264 BFB2     		uxth	r7, r7
 5767              	.LVL414:
 5768              	.LBB5952:
 5769              	.LBI5919:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5770              		.loc 33 63 13 is_stmt 1 view .LVU1318
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 275


 5771              	.LBB5924:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5772              		.loc 33 63 34 view .LVU1319
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5773              		.loc 33 63 34 is_stmt 0 view .LVU1320
 5774              	.LBE5924:
 5775              	.LBE5952:
 5776              	.LBB5953:
 5777              	.LBI5953:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5778              		.loc 33 63 13 is_stmt 1 view .LVU1321
 5779              	.LBB5954:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5780              		.loc 33 63 34 view .LVU1322
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5781              		.loc 33 63 34 is_stmt 0 view .LVU1323
 5782              	.LBE5954:
 5783              	.LBE5953:
 5784              	.LBB5955:
 5785              	.LBB5925:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5786              		.loc 33 63 54 view .LVU1324
 5787 0266 BFF601AF 		bge	.L334
 5788              	.L390:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5789              		.loc 33 63 54 view .LVU1325
 5790 026a 0131     		adds	r1, r1, #1
 5791 026c FEE6     		b	.L334
 5792              	.LVL415:
 5793              	.L326:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5794              		.loc 33 63 54 view .LVU1326
 5795              	.LBE5925:
 5796              	.LBE5955:
 213:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_, other.y_, width_, height_};
 5797              		.loc 33 213 13 is_stmt 1 view .LVU1327
 214:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topRight:
 5798              		.loc 33 214 17 view .LVU1328
 214:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topRight:
 5799              		.loc 33 214 31 is_stmt 0 view .LVU1329
 5800 026e B4F90070 		ldrsh	r7, [r4]
 5801              	.LBB5956:
 5802              	.LBB5957:
 5803              	.LBB5958:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5804              		.loc 33 32 66 view .LVU1330
 5805 0272 0699     		ldr	r1, [sp, #24]
 5806              	.LVL416:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5807              		.loc 33 32 66 view .LVU1331
 5808              	.LBE5958:
 5809              	.LBE5957:
 5810              	.LBE5956:
 214:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topRight:
 5811              		.loc 33 214 41 view .LVU1332
 5812 0274 B4F90240 		ldrsh	r4, [r4, #2]
 5813              	.LVL417:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 276


 5814              	.LBB5971:
 5815              	.LBI5956:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 5816              		.loc 33 31 5 is_stmt 1 view .LVU1333
 5817              	.LBB5966:
 5818              	.LBB5961:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5819              		.loc 33 32 66 is_stmt 0 view .LVU1334
 5820 0278 0F80     		strh	r7, [r1]	@ movhi
 5821              	.LBE5961:
 5822              	.LBE5966:
 5823              	.LBE5971:
 5824              	.LBE6108:
 5825              	.LBE6186:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 5826              		.loc 5 468 18 view .LVU1335
 5827 027a BFB2     		uxth	r7, r7
 5828              	.LVL418:
 5829              	.LBB6187:
 5830              	.LBB6109:
 5831              	.LBB5972:
 5832              	.LBB5967:
 5833              	.LBB5962:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5834              		.loc 33 32 66 view .LVU1336
 5835 027c 4C80     		strh	r4, [r1, #2]	@ movhi
 5836              	.LBE5962:
 5837              	.LBE5967:
 5838              	.LBE5972:
 5839              	.LBE6109:
 5840              	.LBE6187:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 5841              		.loc 5 468 18 view .LVU1337
 5842 027e A4B2     		uxth	r4, r4
 5843              	.LVL419:
 5844              	.LBB6188:
 5845              	.LBB6110:
 5846              	.LBB5973:
 5847              	.LBB5968:
 5848              	.LBB5963:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5849              		.loc 33 32 66 view .LVU1338
 5850 0280 8B80     		strh	r3, [r1, #4]	@ movhi
 5851              	.LVL420:
 5852              	.LBB5959:
 5853              	.LBI5959:
 5854              		.loc 33 261 13 is_stmt 1 view .LVU1339
 5855              	.LBE5959:
 5856              	.LBE5963:
 5857              	.LBE5968:
 5858              	.LBE5973:
 5859              	.LBE6110:
 5860              	.LBE6188:
 5861              		.loc 33 261 41 view .LVU1340
 5862              	.LBB6189:
 5863              	.LBB6111:
 5864              	.LBB5974:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 277


 5865              	.LBB5969:
 5866              	.LBB5964:
 5867              	.LBB5960:
 5868              	.LBI5960:
 5869              		.loc 33 261 13 view .LVU1341
 5870              	.LBE5960:
 5871              	.LBE5964:
 5872              	.LBE5969:
 5873              	.LBE5974:
 5874              	.LBE6111:
 5875              	.LBE6189:
 5876              		.loc 33 261 41 view .LVU1342
 5877              	.LBB6190:
 5878              	.LBB6112:
 5879              	.LBB5975:
 5880              	.LBB5970:
 5881              	.LBB5965:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5882              		.loc 33 32 66 is_stmt 0 view .LVU1343
 5883 0282 CA80     		strh	r2, [r1, #6]	@ movhi
 5884              	.LBE5965:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5885              		.loc 33 34 5 view .LVU1344
 5886 0284 FEE6     		b	.L328
 5887              	.LVL421:
 5888              	.L325:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5889              		.loc 33 34 5 view .LVU1345
 5890              	.LBE5970:
 5891              	.LBE5975:
 220:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 5892              		.loc 33 220 13 is_stmt 1 view .LVU1346
 221:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 5893              		.loc 33 221 17 view .LVU1347
 5894              	.LBB5976:
 5895              	.LBI5976:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5896              		.loc 33 62 13 view .LVU1348
 5897              	.LBB5977:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5898              		.loc 33 62 34 view .LVU1349
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5899              		.loc 33 62 34 is_stmt 0 view .LVU1350
 5900              	.LBE5977:
 5901              	.LBE5976:
 5902              	.LBB5980:
 5903              	.LBI5980:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5904              		.loc 33 62 13 is_stmt 1 view .LVU1351
 5905              	.LBB5981:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5906              		.loc 33 62 34 view .LVU1352
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5907              		.loc 33 62 34 is_stmt 0 view .LVU1353
 5908              	.LBE5981:
 5909              	.LBE5980:
 5910              	.LBB5982:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 278


 5911              	.LBB5978:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5912              		.loc 33 62 53 view .LVU1354
 5913 0286 B4F90410 		ldrsh	r1, [r4, #4]
 5914              	.LVL422:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5915              		.loc 33 62 44 view .LVU1355
 5916 028a 2788     		ldrh	r7, [r4]
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5917              		.loc 33 62 53 view .LVU1356
 5918 028c 0029     		cmp	r1, #0
 5919              	.LBE5978:
 5920              	.LBE5982:
 222:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 5921              		.loc 33 222 31 view .LVU1357
 5922 028e B4F90240 		ldrsh	r4, [r4, #2]
 5923              	.LVL423:
 5924              	.LBB5983:
 5925              	.LBB5979:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5926              		.loc 33 62 53 view .LVU1358
 5927 0292 B8BF     		it	lt
 5928 0294 0131     		addlt	r1, r1, #1
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5929              		.loc 33 62 44 view .LVU1359
 5930 0296 07EB6107 		add	r7, r7, r1, asr #1
 5931              	.LBE5979:
 5932              	.LBE5983:
 5933              	.LBB5984:
 5934              	.LBB5985:
 5935              	.LBB5986:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5936              		.loc 33 32 66 view .LVU1360
 5937 029a 0699     		ldr	r1, [sp, #24]
 5938 029c 8B80     		strh	r3, [r1, #4]	@ movhi
 5939              	.LBE5986:
 5940              	.LBE5985:
 5941              	.LBE5984:
 221:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 5942              		.loc 33 221 58 view .LVU1361
 5943 029e A7EB6303 		sub	r3, r7, r3, asr #1
 5944              	.LBB5997:
 5945              	.LBB5993:
 5946              	.LBB5989:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5947              		.loc 33 32 66 view .LVU1362
 5948 02a2 4C80     		strh	r4, [r1, #2]	@ movhi
 5949              	.LBE5989:
 5950              	.LBE5993:
 5951              	.LBE5997:
 5952              	.LBE6112:
 5953              	.LBE6190:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 5954              		.loc 5 468 18 view .LVU1363
 5955 02a4 A4B2     		uxth	r4, r4
 5956              	.LBB6191:
 5957              	.LBB6113:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 279


 221:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 5958              		.loc 33 221 58 view .LVU1364
 5959 02a6 9FB2     		uxth	r7, r3
 5960              	.LVL424:
 5961              	.LBB5998:
 5962              	.LBI5984:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 5963              		.loc 33 31 5 is_stmt 1 view .LVU1365
 5964              	.LBB5994:
 5965              	.LBB5990:
 5966              	.LBB5987:
 5967              	.LBI5987:
 5968              		.loc 33 261 13 view .LVU1366
 5969              	.LBE5987:
 5970              	.LBE5990:
 5971              	.LBE5994:
 5972              	.LBE5998:
 5973              	.LBE6113:
 5974              	.LBE6191:
 5975              		.loc 33 261 41 view .LVU1367
 5976              	.LBB6192:
 5977              	.LBB6114:
 5978              	.LBB5999:
 5979              	.LBB5995:
 5980              	.LBB5991:
 5981              	.LBB5988:
 5982              	.LBI5988:
 5983              		.loc 33 261 13 view .LVU1368
 5984              	.LBE5988:
 5985              	.LBE5991:
 5986              	.LBE5995:
 5987              	.LBE5999:
 5988              	.LBE6114:
 5989              	.LBE6192:
 5990              		.loc 33 261 41 view .LVU1369
 5991              	.LBB6193:
 5992              	.LBB6115:
 5993              	.LBB6000:
 5994              	.LBB5996:
 5995              	.LBB5992:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5996              		.loc 33 32 66 is_stmt 0 view .LVU1370
 5997 02a8 CA80     		strh	r2, [r1, #6]	@ movhi
 5998 02aa 0F80     		strh	r7, [r1]	@ movhi
 5999              	.LBE5992:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6000              		.loc 33 34 5 view .LVU1371
 6001 02ac EAE6     		b	.L328
 6002              	.LVL425:
 6003              	.L324:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6004              		.loc 33 34 5 view .LVU1372
 6005              	.LBE5996:
 6006              	.LBE6000:
 215:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 6007              		.loc 33 215 13 is_stmt 1 view .LVU1373
 216:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 280


 6008              		.loc 33 216 17 view .LVU1374
 6009              	.LBB6001:
 6010              	.LBI6001:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6011              		.loc 33 60 13 view .LVU1375
 6012              	.LBB6002:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6013              		.loc 33 60 32 view .LVU1376
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6014              		.loc 33 60 42 is_stmt 0 view .LVU1377
 6015 02ae A188     		ldrh	r1, [r4, #4]
 6016              	.LVL426:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6017              		.loc 33 60 42 view .LVU1378
 6018 02b0 2788     		ldrh	r7, [r4]
 6019              	.LBE6002:
 6020              	.LBE6001:
 217:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 6021              		.loc 33 217 31 view .LVU1379
 6022 02b2 B4F90240 		ldrsh	r4, [r4, #2]
 6023              	.LVL427:
 6024              	.LBB6004:
 6025              	.LBB6003:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6026              		.loc 33 60 42 view .LVU1380
 6027 02b6 0F44     		add	r7, r7, r1
 6028              	.LBE6003:
 6029              	.LBE6004:
 6030              	.LBB6005:
 6031              	.LBB6006:
 6032              	.LBB6007:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6033              		.loc 33 32 66 view .LVU1381
 6034 02b8 0699     		ldr	r1, [sp, #24]
 6035 02ba 8B80     		strh	r3, [r1, #4]	@ movhi
 6036              	.LBE6007:
 6037              	.LBE6006:
 6038              	.LBE6005:
 216:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 6039              		.loc 33 216 50 view .LVU1382
 6040 02bc FB1A     		subs	r3, r7, r3
 6041              	.LBB6018:
 6042              	.LBB6014:
 6043              	.LBB6010:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6044              		.loc 33 32 66 view .LVU1383
 6045 02be 4C80     		strh	r4, [r1, #2]	@ movhi
 6046              	.LBE6010:
 6047              	.LBE6014:
 6048              	.LBE6018:
 6049              	.LBE6115:
 6050              	.LBE6193:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 6051              		.loc 5 468 18 view .LVU1384
 6052 02c0 A4B2     		uxth	r4, r4
 6053              	.LBB6194:
 6054              	.LBB6116:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 281


 216:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 6055              		.loc 33 216 50 view .LVU1385
 6056 02c2 9FB2     		uxth	r7, r3
 6057              	.LVL428:
 6058              	.LBB6019:
 6059              	.LBI6005:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 6060              		.loc 33 31 5 is_stmt 1 view .LVU1386
 6061              	.LBB6015:
 6062              	.LBB6011:
 6063              	.LBB6008:
 6064              	.LBI6008:
 6065              		.loc 33 261 13 view .LVU1387
 6066              	.LBE6008:
 6067              	.LBE6011:
 6068              	.LBE6015:
 6069              	.LBE6019:
 6070              	.LBE6116:
 6071              	.LBE6194:
 6072              		.loc 33 261 41 view .LVU1388
 6073              	.LBB6195:
 6074              	.LBB6117:
 6075              	.LBB6020:
 6076              	.LBB6016:
 6077              	.LBB6012:
 6078              	.LBB6009:
 6079              	.LBI6009:
 6080              		.loc 33 261 13 view .LVU1389
 6081              	.LBE6009:
 6082              	.LBE6012:
 6083              	.LBE6016:
 6084              	.LBE6020:
 6085              	.LBE6117:
 6086              	.LBE6195:
 6087              		.loc 33 261 41 view .LVU1390
 6088              	.LBB6196:
 6089              	.LBB6118:
 6090              	.LBB6021:
 6091              	.LBB6017:
 6092              	.LBB6013:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6093              		.loc 33 32 66 is_stmt 0 view .LVU1391
 6094 02c4 CA80     		strh	r2, [r1, #6]	@ movhi
 6095 02c6 0F80     		strh	r7, [r1]	@ movhi
 6096              	.LBE6013:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6097              		.loc 33 34 5 view .LVU1392
 6098 02c8 DCE6     		b	.L328
 6099              	.LVL429:
 6100              	.L323:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6101              		.loc 33 34 5 view .LVU1393
 6102              	.LBE6017:
 6103              	.LBE6021:
 225:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_,
 6104              		.loc 33 225 13 is_stmt 1 view .LVU1394
 226:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 282


 6105              		.loc 33 226 17 view .LVU1395
 6106              	.LBB6022:
 6107              	.LBB6023:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6108              		.loc 33 61 43 is_stmt 0 view .LVU1396
 6109 02ca E788     		ldrh	r7, [r4, #6]
 6110 02cc 6188     		ldrh	r1, [r4, #2]
 6111              	.LVL430:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6112              		.loc 33 61 43 view .LVU1397
 6113 02ce 3944     		add	r1, r1, r7
 6114              	.LBE6023:
 6115              	.LBE6022:
 226:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6116              		.loc 33 226 31 view .LVU1398
 6117 02d0 B4F90070 		ldrsh	r7, [r4]
 227:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 6118              		.loc 33 227 51 view .LVU1399
 6119 02d4 081A     		subs	r0, r1, r0
 6120              	.LVL431:
 6121              	.LBB6025:
 6122              	.LBI6022:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6123              		.loc 33 61 13 is_stmt 1 view .LVU1400
 6124              	.LBB6024:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6125              		.loc 33 61 33 view .LVU1401
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6126              		.loc 33 61 33 is_stmt 0 view .LVU1402
 6127              	.LBE6024:
 6128              	.LBE6025:
 6129              	.LBB6026:
 6130              	.LBB6027:
 6131              	.LBB6028:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6132              		.loc 33 32 66 view .LVU1403
 6133 02d6 0699     		ldr	r1, [sp, #24]
 6134              	.LBE6028:
 6135              	.LBE6027:
 6136              	.LBE6026:
 227:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 6137              		.loc 33 227 51 view .LVU1404
 6138 02d8 84B2     		uxth	r4, r0
 6139              	.LVL432:
 6140              	.LBB6038:
 6141              	.LBB6034:
 6142              	.LBB6031:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6143              		.loc 33 32 66 view .LVU1405
 6144 02da 0F80     		strh	r7, [r1]	@ movhi
 6145 02dc 8B80     		strh	r3, [r1, #4]	@ movhi
 6146              	.LVL433:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6147              		.loc 33 32 66 view .LVU1406
 6148              	.LBE6031:
 6149              	.LBE6034:
 6150              	.LBI6026:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 283


  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 6151              		.loc 33 31 5 is_stmt 1 view .LVU1407
 6152              	.LBE6038:
 6153              	.LBE6118:
 6154              	.LBE6196:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 6155              		.loc 5 468 18 is_stmt 0 view .LVU1408
 6156 02de BFB2     		uxth	r7, r7
 6157              	.LVL434:
 6158              	.LBB6197:
 6159              	.LBB6119:
 6160              	.LBB6039:
 6161              	.LBB6035:
 6162              	.LBB6032:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6163              		.loc 33 32 66 view .LVU1409
 6164 02e0 CA80     		strh	r2, [r1, #6]	@ movhi
 6165 02e2 4C80     		strh	r4, [r1, #2]	@ movhi
 6166              	.LVL435:
 6167              	.LBB6029:
 6168              	.LBI6029:
 6169              		.loc 33 261 13 is_stmt 1 view .LVU1410
 6170              	.LBE6029:
 6171              	.LBE6032:
 6172              	.LBE6035:
 6173              	.LBE6039:
 6174              	.LBE6119:
 6175              	.LBE6197:
 6176              		.loc 33 261 41 view .LVU1411
 6177              	.LBB6198:
 6178              	.LBB6120:
 6179              	.LBB6040:
 6180              	.LBB6036:
 6181              	.LBB6033:
 6182              	.LBB6030:
 6183              	.LBI6030:
 6184              		.loc 33 261 13 view .LVU1412
 6185              	.LBE6030:
 6186              	.LBE6033:
 6187              	.LBE6036:
 6188              	.LBE6040:
 6189              	.LBE6120:
 6190              	.LBE6198:
 6191              		.loc 33 261 41 view .LVU1413
 6192              	.LBB6199:
 6193              	.LBB6121:
 6194              	.LBB6041:
 6195              	.LBB6037:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6196              		.loc 33 34 5 is_stmt 0 view .LVU1414
 6197 02e4 CEE6     		b	.L328
 6198              	.LVL436:
 6199              	.L322:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6200              		.loc 33 34 5 view .LVU1415
 6201              	.LBE6037:
 6202              	.LBE6041:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 284


 235:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 6203              		.loc 33 235 13 is_stmt 1 view .LVU1416
 236:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6204              		.loc 33 236 17 view .LVU1417
 6205              	.LBB6042:
 6206              	.LBI6042:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6207              		.loc 33 62 13 view .LVU1418
 6208              	.LBB6043:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6209              		.loc 33 62 34 view .LVU1419
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6210              		.loc 33 62 34 is_stmt 0 view .LVU1420
 6211              	.LBE6043:
 6212              	.LBE6042:
 6213              	.LBB6045:
 6214              	.LBI6045:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6215              		.loc 33 62 13 is_stmt 1 view .LVU1421
 6216              	.LBB6046:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6217              		.loc 33 62 34 view .LVU1422
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6218              		.loc 33 62 34 is_stmt 0 view .LVU1423
 6219              	.LBE6046:
 6220              	.LBE6045:
 6221              	.LBB6047:
 6222              	.LBB6044:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6223              		.loc 33 62 53 view .LVU1424
 6224 02e6 B4F90410 		ldrsh	r1, [r4, #4]
 6225              	.LVL437:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6226              		.loc 33 62 44 view .LVU1425
 6227 02ea 2788     		ldrh	r7, [r4]
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6228              		.loc 33 62 53 view .LVU1426
 6229 02ec 0029     		cmp	r1, #0
 6230 02ee B8BF     		it	lt
 6231 02f0 0131     		addlt	r1, r1, #1
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6232              		.loc 33 62 44 view .LVU1427
 6233 02f2 07EB6107 		add	r7, r7, r1, asr #1
 6234              	.LBE6044:
 6235              	.LBE6047:
 236:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6236              		.loc 33 236 58 view .LVU1428
 6237 02f6 A7EB6307 		sub	r7, r7, r3, asr #1
 6238              	.L388:
 6239              	.LBB6048:
 6240              	.LBB6049:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6241              		.loc 33 61 43 view .LVU1429
 6242 02fa B4F802C0 		ldrh	ip, [r4, #2]
 6243              	.LBE6049:
 6244              	.LBE6048:
 236:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 285


 6245              		.loc 33 236 58 view .LVU1430
 6246 02fe BFB2     		uxth	r7, r7
 6247              	.LVL438:
 6248              	.LBB6052:
 6249              	.LBI6048:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6250              		.loc 33 61 13 is_stmt 1 view .LVU1431
 6251              	.LBB6050:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6252              		.loc 33 61 33 view .LVU1432
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6253              		.loc 33 61 43 is_stmt 0 view .LVU1433
 6254 0300 E488     		ldrh	r4, [r4, #6]
 6255              	.LVL439:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6256              		.loc 33 61 43 view .LVU1434
 6257              	.LBE6050:
 6258              	.LBE6052:
 6259              	.LBB6053:
 6260              	.LBB6054:
 6261              	.LBB6055:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6262              		.loc 33 32 66 view .LVU1435
 6263 0302 0699     		ldr	r1, [sp, #24]
 6264              	.LBE6055:
 6265              	.LBE6054:
 6266              	.LBE6053:
 6267              	.LBB6067:
 6268              	.LBB6051:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6269              		.loc 33 61 43 view .LVU1436
 6270 0304 6444     		add	r4, r4, ip
 6271              	.LBE6051:
 6272              	.LBE6067:
 6273              	.LBB6068:
 6274              	.LBB6062:
 6275              	.LBB6058:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6276              		.loc 33 32 66 view .LVU1437
 6277 0306 8B80     		strh	r3, [r1, #4]	@ movhi
 6278              	.LBE6058:
 6279              	.LBE6062:
 6280              	.LBE6068:
 237:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 6281              		.loc 33 237 51 view .LVU1438
 6282 0308 201A     		subs	r0, r4, r0
 6283              	.LBB6069:
 6284              	.LBB6063:
 6285              	.LBB6059:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6286              		.loc 33 32 66 view .LVU1439
 6287 030a CA80     		strh	r2, [r1, #6]	@ movhi
 6288 030c 0F80     		strh	r7, [r1]	@ movhi
 6289              	.LBE6059:
 6290              	.LBE6063:
 6291              	.LBE6069:
 237:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 286


 6292              		.loc 33 237 51 view .LVU1440
 6293 030e 84B2     		uxth	r4, r0
 6294              	.LVL440:
 6295              	.LBB6070:
 6296              	.LBI6053:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 6297              		.loc 33 31 5 is_stmt 1 view .LVU1441
 6298              	.LBB6064:
 6299              	.LBB6060:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6300              		.loc 33 32 66 is_stmt 0 view .LVU1442
 6301 0310 4C80     		strh	r4, [r1, #2]	@ movhi
 6302              	.LVL441:
 6303              	.LBB6056:
 6304              	.LBI6056:
 6305              		.loc 33 261 13 is_stmt 1 view .LVU1443
 6306              	.LBE6056:
 6307              	.LBE6060:
 6308              	.LBE6064:
 6309              	.LBE6070:
 6310              	.LBE6121:
 6311              	.LBE6199:
 6312              		.loc 33 261 41 view .LVU1444
 6313              	.LBB6200:
 6314              	.LBB6122:
 6315              	.LBB6071:
 6316              	.LBB6065:
 6317              	.LBB6061:
 6318              	.LBB6057:
 6319              	.LBI6057:
 6320              		.loc 33 261 13 view .LVU1445
 6321              	.LBE6057:
 6322              	.LBE6061:
 6323              	.LBE6065:
 6324              	.LBE6071:
 6325              	.LBE6122:
 6326              	.LBE6200:
 6327              		.loc 33 261 41 view .LVU1446
 6328              	.LBB6201:
 6329              	.LBB6123:
 6330              	.LBB6072:
 6331              	.LBB6066:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6332              		.loc 33 34 5 is_stmt 0 view .LVU1447
 6333 0312 B7E6     		b	.L328
 6334              	.LVL442:
 6335              	.L321:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6336              		.loc 33 34 5 view .LVU1448
 6337              	.LBE6066:
 6338              	.LBE6072:
 230:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 6339              		.loc 33 230 13 is_stmt 1 view .LVU1449
 231:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6340              		.loc 33 231 17 view .LVU1450
 6341              	.LBB6073:
 6342              	.LBI6073:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 287


  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6343              		.loc 33 60 13 view .LVU1451
 6344              	.LBB6074:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6345              		.loc 33 60 32 view .LVU1452
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6346              		.loc 33 60 42 is_stmt 0 view .LVU1453
 6347 0314 2788     		ldrh	r7, [r4]
 6348 0316 A188     		ldrh	r1, [r4, #4]
 6349              	.LVL443:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6350              		.loc 33 60 42 view .LVU1454
 6351 0318 0F44     		add	r7, r7, r1
 6352              	.LBE6074:
 6353              	.LBE6073:
 231:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6354              		.loc 33 231 50 view .LVU1455
 6355 031a FF1A     		subs	r7, r7, r3
 6356 031c EDE7     		b	.L388
 6357              	.L401:
 6358 031e 00BF     		.align	2
 6359              	.L400:
 6360 0320 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 6361 0324 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 6362              	.LVL444:
 6363              	.L320:
 240:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_,
 6364              		.loc 33 240 13 is_stmt 1 view .LVU1456
 241:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 6365              		.loc 33 241 17 view .LVU1457
 6366              	.LBB6075:
 6367              	.LBB6076:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6368              		.loc 33 63 54 is_stmt 0 view .LVU1458
 6369 0328 B4F90610 		ldrsh	r1, [r4, #6]
 6370              	.LVL445:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6371              		.loc 33 63 44 view .LVU1459
 6372 032c B4F802C0 		ldrh	ip, [r4, #2]
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6373              		.loc 33 63 54 view .LVU1460
 6374 0330 0029     		cmp	r1, #0
 6375              	.LBE6076:
 6376              	.LBE6075:
 241:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 6377              		.loc 33 241 31 view .LVU1461
 6378 0332 B4F90070 		ldrsh	r7, [r4]
 6379              	.LVL446:
 6380              	.LBB6080:
 6381              	.LBI6075:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6382              		.loc 33 63 13 is_stmt 1 view .LVU1462
 6383              	.LBB6077:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6384              		.loc 33 63 34 view .LVU1463
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6385              		.loc 33 63 34 is_stmt 0 view .LVU1464
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 288


 6386              	.LBE6077:
 6387              	.LBE6080:
 6388              	.LBB6081:
 6389              	.LBI6081:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6390              		.loc 33 63 13 is_stmt 1 view .LVU1465
 6391              	.LBB6082:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6392              		.loc 33 63 34 view .LVU1466
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6393              		.loc 33 63 34 is_stmt 0 view .LVU1467
 6394              	.LBE6082:
 6395              	.LBE6081:
 6396              	.LBB6083:
 6397              	.LBB6084:
 6398              	.LBB6085:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6399              		.loc 33 32 66 view .LVU1468
 6400 0336 0698     		ldr	r0, [sp, #24]
 6401              	.LBE6085:
 6402              	.LBE6084:
 6403              	.LBE6083:
 6404              	.LBB6097:
 6405              	.LBB6078:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6406              		.loc 33 63 54 view .LVU1469
 6407 0338 B8BF     		it	lt
 6408 033a 0131     		addlt	r1, r1, #1
 6409              	.LBE6078:
 6410              	.LBE6097:
 6411              	.LBB6098:
 6412              	.LBB6092:
 6413              	.LBB6088:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6414              		.loc 33 32 66 view .LVU1470
 6415 033c C280     		strh	r2, [r0, #6]	@ movhi
 6416              	.LBE6088:
 6417              	.LBE6092:
 6418              	.LBE6098:
 6419              	.LBB6099:
 6420              	.LBB6079:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6421              		.loc 33 63 44 view .LVU1471
 6422 033e 0CEB6104 		add	r4, ip, r1, asr #1
 6423              	.LVL447:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6424              		.loc 33 63 44 view .LVU1472
 6425              	.LBE6079:
 6426              	.LBE6099:
 6427              	.LBB6100:
 6428              	.LBB6093:
 6429              	.LBB6089:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6430              		.loc 33 32 66 view .LVU1473
 6431 0342 0780     		strh	r7, [r0]	@ movhi
 6432 0344 8380     		strh	r3, [r0, #4]	@ movhi
 6433              	.LBE6089:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 289


 6434              	.LBE6093:
 6435              	.LBE6100:
 6436              	.LBE6123:
 6437              	.LBE6201:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 6438              		.loc 5 468 18 view .LVU1474
 6439 0346 BFB2     		uxth	r7, r7
 6440              	.LBB6202:
 6441              	.LBB6124:
 242:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 6442              		.loc 33 242 58 view .LVU1475
 6443 0348 A4EB5202 		sub	r2, r4, r2, lsr #1
 6444 034c 94B2     		uxth	r4, r2
 6445              	.LVL448:
 6446              	.LBB6101:
 6447              	.LBI6083:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 6448              		.loc 33 31 5 is_stmt 1 view .LVU1476
 6449              	.LBB6094:
 6450              	.LBB6090:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6451              		.loc 33 32 66 is_stmt 0 view .LVU1477
 6452 034e 4480     		strh	r4, [r0, #2]	@ movhi
 6453              	.LVL449:
 6454              	.LBB6086:
 6455              	.LBI6086:
 6456              		.loc 33 261 13 is_stmt 1 view .LVU1478
 6457              	.LBE6086:
 6458              	.LBE6090:
 6459              	.LBE6094:
 6460              	.LBE6101:
 6461              	.LBE6124:
 6462              	.LBE6202:
 6463              		.loc 33 261 41 view .LVU1479
 6464              	.LBB6203:
 6465              	.LBB6125:
 6466              	.LBB6102:
 6467              	.LBB6095:
 6468              	.LBB6091:
 6469              	.LBB6087:
 6470              	.LBI6087:
 6471              		.loc 33 261 13 view .LVU1480
 6472              	.LBE6087:
 6473              	.LBE6091:
 6474              	.LBE6095:
 6475              	.LBE6102:
 6476              	.LBE6125:
 6477              	.LBE6203:
 6478              		.loc 33 261 41 view .LVU1481
 6479              	.LBB6204:
 6480              	.LBB6126:
 6481              	.LBB6103:
 6482              	.LBB6096:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6483              		.loc 33 34 5 is_stmt 0 view .LVU1482
 6484 0350 98E6     		b	.L328
 6485              	.LVL450:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 290


 6486              	.L348:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6487              		.loc 33 34 5 view .LVU1483
 6488              	.LBE6096:
 6489              	.LBE6103:
 6490              	.LBE6126:
 6491              	.LBE6204:
 6492              	.LBB6205:
 6493              	.LBB6183:
 6494              	.LBB6180:
 6495              	.LBB6179:
 402:../../libdaisy/src/hid/disp/display.h **** 
 6496              		.loc 5 402 20 view .LVU1484
 6497 0352 4FF0000B 		mov	fp, #0
 6498              	.LVL451:
 402:../../libdaisy/src/hid/disp/display.h **** 
 6499              		.loc 5 402 20 view .LVU1485
 6500 0356 69E7     		b	.L346
 6501              	.LVL452:
 6502              	.L393:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 6503              		.loc 5 405 17 view .LVU1486
 6504 0358 4046     		mov	r0, r8
 6505 035a 9847     		blx	r3
 6506              	.LVL453:
 6507 035c D3E6     		b	.L347
 6508              	.L394:
 406:../../libdaisy/src/hid/disp/display.h ****         {
 6509              		.loc 5 406 21 view .LVU1487
 6510 035e 4046     		mov	r0, r8
 6511 0360 9847     		blx	r3
 6512              	.LVL454:
 6513 0362 DEE6     		b	.L349
 6514              	.LVL455:
 6515              	.L398:
 6516              	.LBB6177:
 6517              	.LBB6173:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6518              		.loc 5 174 33 view .LVU1488
 6519 0364 4046     		mov	r0, r8
 6520 0366 9847     		blx	r3
 6521              	.LVL456:
 6522 0368 51E7     		b	.L363
 6523              	.LVL457:
 6524              	.L396:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6525              		.loc 5 173 32 view .LVU1489
 6526 036a 4046     		mov	r0, r8
 6527 036c 9847     		blx	r3
 6528              	.LVL458:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6529              		.loc 5 173 44 view .LVU1490
 6530 036e D8F80020 		ldr	r2, [r8]
 6531 0372 3CE7     		b	.L360
 6532              	.LVL459:
 6533              	.L350:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 291


 6534              		.loc 5 173 44 view .LVU1491
 6535              	.LBE6173:
 6536              	.LBE6177:
 434:../../libdaisy/src/hid/disp/display.h **** 
 6537              		.loc 5 434 19 view .LVU1492
 6538 0374 B8F804A0 		ldrh	r10, [r8, #4]
 6539 0378 2EE7     		b	.L352
 6540              	.LVL460:
 6541              	.L399:
 6542              	.LBB6178:
 6543              	.LBB6174:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6544              		.loc 5 174 45 view .LVU1493
 6545 037a 4046     		mov	r0, r8
 6546 037c 9847     		blx	r3
 6547              	.LVL461:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6548              		.loc 5 174 19 view .LVU1494
 6549 037e 0138     		subs	r0, r0, #1
 6550 0380 83B2     		uxth	r3, r0
 6551 0382 0293     		str	r3, [sp, #8]
 6552              	.LVL462:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6553              		.loc 5 174 19 view .LVU1495
 6554 0384 4FE7     		b	.L364
 6555              	.LVL463:
 6556              	.L397:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6557              		.loc 5 173 43 view .LVU1496
 6558 0386 4046     		mov	r0, r8
 6559 0388 9847     		blx	r3
 6560              	.LVL464:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6561              		.loc 5 173 19 view .LVU1497
 6562 038a 0138     		subs	r0, r0, #1
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6563              		.loc 5 174 34 view .LVU1498
 6564 038c D8F80020 		ldr	r2, [r8]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6565              		.loc 5 173 19 view .LVU1499
 6566 0390 85B2     		uxth	r5, r0
 6567              	.LVL465:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6568              		.loc 5 173 19 view .LVU1500
 6569 0392 34E7     		b	.L361
 6570              	.LVL466:
 6571              	.L317:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6572              		.loc 5 173 19 view .LVU1501
 6573              	.LBE6174:
 6574              	.LBE6178:
 6575              	.LBE6179:
 6576              	.LBE6180:
 6577              	.LBE6183:
 6578              	.LBE6205:
 6579              	.LBB6206:
 6580              	.LBB6127:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 292


 255:../../libdaisy/src/hid/disp/graphics_common.h ****         }
 6581              		.loc 33 255 13 is_stmt 1 view .LVU1502
 255:../../libdaisy/src/hid/disp/graphics_common.h ****         }
 6582              		.loc 33 255 22 view .LVU1503
 6583              	.LBB6104:
 6584              	.LBI6104:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6585              		.loc 33 24 5 view .LVU1504
 6586              	.LBE6104:
 6587              	.LBE6127:
 6588              	.LBE6206:
 6589              	.LBB6207:
 6590              	.LBB6133:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6591              		.loc 5 173 33 is_stmt 0 view .LVU1505
 6592 0394 D8F80030 		ldr	r3, [r8]
 6593              	.LBE6133:
 6594              	.LBE6207:
 6595              	.LBB6208:
 6596              	.LBB6128:
 6597              	.LBB6106:
 6598              	.LBB6105:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6599              		.loc 33 24 53 view .LVU1506
 6600 0398 0024     		movs	r4, #0
 6601              	.LVL467:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6602              		.loc 33 24 53 view .LVU1507
 6603 039a 069A     		ldr	r2, [sp, #24]
 6604 039c 1249     		ldr	r1, .L402
 6605              	.LVL468:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6606              		.loc 33 24 53 view .LVU1508
 6607 039e 1480     		strh	r4, [r2]	@ movhi
 6608 03a0 5480     		strh	r4, [r2, #2]	@ movhi
 6609 03a2 9480     		strh	r4, [r2, #4]	@ movhi
 6610 03a4 D480     		strh	r4, [r2, #6]	@ movhi
 6611              	.LVL469:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6612              		.loc 33 24 53 view .LVU1509
 6613              	.LBE6105:
 6614              	.LBE6106:
 6615              	.LBE6128:
 6616              	.LBE6208:
  56:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetY() const { return y_; }
 6617              		.loc 33 56 28 is_stmt 1 view .LVU1510
  57:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetWidth() const { return width_; }
 6618              		.loc 33 57 28 view .LVU1511
 6619              	.LBB6209:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 6620              		.loc 5 171 10 view .LVU1512
 6621              	.LBB6134:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6622              		.loc 5 173 9 view .LVU1513
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6623              		.loc 5 173 33 is_stmt 0 view .LVU1514
 6624 03a6 DA68     		ldr	r2, [r3, #12]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 293


 6625 03a8 0191     		str	r1, [sp, #4]
 6626 03aa 8A42     		cmp	r2, r1
 6627 03ac 05D0     		beq	.L335
 6628 03ae 2746     		mov	r7, r4
 6629              	.LVL470:
 6630              	.L336:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6631              		.loc 5 173 32 view .LVU1515
 6632 03b0 4046     		mov	r0, r8
 6633 03b2 9047     		blx	r2
 6634              	.LVL471:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6635              		.loc 5 173 44 view .LVU1516
 6636 03b4 D8F80030 		ldr	r3, [r8]
 6637 03b8 6EE6     		b	.L337
 6638              	.LVL472:
 6639              	.L335:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6640              		.loc 5 174 34 view .LVU1517
 6641 03ba 9B68     		ldr	r3, [r3, #8]
 6642 03bc 0B4A     		ldr	r2, .L402+4
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6643              		.loc 5 173 19 view .LVU1518
 6644 03be A8F80440 		strh	r4, [r8, #4]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6645              		.loc 5 174 9 is_stmt 1 view .LVU1519
 6646 03c2 9342     		cmp	r3, r2
 6647 03c4 0392     		str	r2, [sp, #12]
 6648 03c6 3FF482AE 		beq	.L342
 6649              	.LVL473:
 6650              	.L368:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6651              		.loc 5 174 33 is_stmt 0 view .LVU1520
 6652 03ca 4046     		mov	r0, r8
 6653 03cc 9847     		blx	r3
 6654              	.LVL474:
 6655 03ce 74E6     		b	.L340
 6656              	.L392:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6657              		.loc 5 174 45 view .LVU1521
 6658 03d0 4046     		mov	r0, r8
 6659 03d2 9847     		blx	r3
 6660              	.LVL475:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6661              		.loc 5 174 19 view .LVU1522
 6662 03d4 0138     		subs	r0, r0, #1
 6663 03d6 84B2     		uxth	r4, r0
 6664 03d8 79E6     		b	.L342
 6665              	.L391:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6666              		.loc 5 173 43 view .LVU1523
 6667 03da 4046     		mov	r0, r8
 6668 03dc 9047     		blx	r2
 6669              	.LVL476:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6670              		.loc 5 173 19 view .LVU1524
 6671 03de 0138     		subs	r0, r0, #1
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 294


 174:../../libdaisy/src/hid/disp/display.h ****     }
 6672              		.loc 5 174 34 view .LVU1525
 6673 03e0 D8F80030 		ldr	r3, [r8]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6674              		.loc 5 173 19 view .LVU1526
 6675 03e4 87B2     		uxth	r7, r0
 6676 03e6 5FE6     		b	.L338
 6677              	.L403:
 6678              		.align	2
 6679              	.L402:
 6680 03e8 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 6681 03ec 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 6682              	.LBE6134:
 6683              	.LBE6209:
 6684              		.cfi_endproc
 6685              	.LFE6196:
 6687              		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 6688              		.align	1
 6689              		.p2align 2,,3
 6690              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 6691              		.syntax unified
 6692              		.thumb
 6693              		.thumb_func
 6694              		.fpu fpv5-d16
 6696              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 6697              	.LVL477:
 6698              	.LFB6194:
 257:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 6699              		.loc 5 257 10 is_stmt 1 view -0
 6700              		.cfi_startproc
 6701              		@ args = 12, pretend = 0, frame = 24
 6702              		@ frame_needed = 0, uses_anonymous_args = 0
 257:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 6703              		.loc 5 257 10 is_stmt 0 view .LVU1528
 6704 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6705              		.cfi_def_cfa_offset 36
 6706              		.cfi_offset 4, -36
 6707              		.cfi_offset 5, -32
 6708              		.cfi_offset 6, -28
 6709              		.cfi_offset 7, -24
 6710              		.cfi_offset 8, -20
 6711              		.cfi_offset 9, -16
 6712              		.cfi_offset 10, -12
 6713              		.cfi_offset 11, -8
 6714              		.cfi_offset 14, -4
 6715 0004 87B0     		sub	sp, sp, #28
 6716              		.cfi_def_cfa_offset 64
 257:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 6717              		.loc 5 257 10 view .LVU1529
 6718 0006 9DF84850 		ldrb	r5, [sp, #72]	@ zero_extendqisi2
 6719 000a 109C     		ldr	r4, [sp, #64]
 6720 000c 2E46     		mov	r6, r5
 6721 000e 0195     		str	r5, [sp, #4]
 6722 0010 9DF84450 		ldrb	r5, [sp, #68]	@ zero_extendqisi2
 6723              	.LBB6279:
 264:../../libdaisy/src/hid/disp/display.h ****         {
 6724              		.loc 5 264 9 view .LVU1530
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 295


 6725 0014 9EB3     		cbz	r6, .L405
 6726              	.LVL478:
 264:../../libdaisy/src/hid/disp/display.h ****         {
 6727              		.loc 5 264 9 view .LVU1531
 6728              	.LBE6279:
 6729              	.LBB6401:
 6730              	.LBB6402:
 266:../../libdaisy/src/hid/disp/display.h ****             {
 6731              		.loc 5 266 40 is_stmt 1 view .LVU1532
 6732 0016 9942     		cmp	r1, r3
 6733 0018 2ED8     		bhi	.L404
 6734 001a 9946     		mov	r9, r3
 6735              	.LVL479:
 6736              	.L408:
 6737              	.LBB6403:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6738              		.loc 5 268 44 view .LVU1533
 6739 001c A242     		cmp	r2, r4
 6740 001e 28D8     		bhi	.L411
 6741              	.LBB6404:
 6742              	.LBB6405:
 6743              	.LBB6406:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6744              		.loc 14 241 14 is_stmt 0 view .LVU1534
 6745 0020 7F29     		cmp	r1, #127
 6746 0022 1646     		mov	r6, r2
 6747 0024 94BF     		ite	ls
 6748 0026 0023     		movls	r3, #0
 6749 0028 0123     		movhi	r3, #1
 6750 002a 08E0     		b	.L412
 6751              	.LVL480:
 6752              	.L495:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6753              		.loc 14 244 42 view .LVU1535
 6754 002c 9CF81480 		ldrb	r8, [ip, #20]	@ zero_extendqisi2
 6755 0030 4EEA080E 		orr	lr, lr, r8
 6756 0034 8CF814E0 		strb	lr, [ip, #20]
 6757              	.LVL481:
 6758              	.L409:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6759              		.loc 14 244 42 view .LVU1536
 6760              	.LBE6406:
 6761              	.LBE6405:
 6762              	.LBE6404:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6763              		.loc 5 268 17 is_stmt 1 view .LVU1537
 6764 0038 0136     		adds	r6, r6, #1
 6765              	.LVL482:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6766              		.loc 5 268 44 view .LVU1538
 6767 003a B442     		cmp	r4, r6
 6768 003c 19D3     		bcc	.L411
 6769              	.L412:
 6770              	.LVL483:
 6771              	.LBB6420:
 6772              	.LBI6404:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 296


 6773              		.loc 4 41 10 view .LVU1539
 6774              	.LBB6417:
 6775              	.LBI6405:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 6776              		.loc 14 239 10 view .LVU1540
 6777              	.LBB6414:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6778              		.loc 14 241 9 is_stmt 0 view .LVU1541
 6779 003e 3F2E     		cmp	r6, #63
 6780 0040 FAD8     		bhi	.L409
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6781              		.loc 14 241 9 view .LVU1542
 6782 0042 002B     		cmp	r3, #0
 6783 0044 F8D1     		bne	.L409
 6784              	.LVL484:
 6785              	.LBB6407:
 6786              	.LBI6407:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 6787              		.loc 14 239 10 is_stmt 1 view .LVU1543
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 6788              		.loc 14 239 10 is_stmt 0 view .LVU1544
 6789              	.LBE6407:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6790              		.loc 14 244 28 view .LVU1545
 6791 0046 4FEAD60C 		lsr	ip, r6, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6792              		.loc 14 244 54 view .LVU1546
 6793 004a 06F0070E 		and	lr, r6, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6794              		.loc 14 244 48 view .LVU1547
 6795 004e 4FF00108 		mov	r8, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6796              		.loc 14 244 42 view .LVU1548
 6797 0052 01EBCC1C 		add	ip, r1, ip, lsl #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6798              		.loc 14 244 48 view .LVU1549
 6799 0056 08FA0EFE 		lsl	lr, r8, lr
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6800              		.loc 14 244 42 view .LVU1550
 6801 005a 8444     		add	ip, ip, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 6802              		.loc 14 243 9 view .LVU1551
 6803 005c 002D     		cmp	r5, #0
 6804 005e E5D1     		bne	.L495
 6805              	.LBB6411:
 6806              	.LBB6408:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 6807              		.loc 14 246 42 view .LVU1552
 6808 0060 9CF814B0 		ldrb	fp, [ip, #20]	@ zero_extendqisi2
 6809              	.LBE6408:
 6810              	.LBE6411:
 6811              	.LBE6414:
 6812              	.LBE6417:
 6813              	.LBE6420:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6814              		.loc 5 268 17 view .LVU1553
 6815 0064 0136     		adds	r6, r6, #1
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 297


 6816              	.LVL485:
 6817              	.LBB6421:
 6818              	.LBB6418:
 6819              	.LBB6415:
 6820              	.LBB6412:
 6821              	.LBB6409:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 6822              		.loc 14 246 42 view .LVU1554
 6823 0066 2BEA0E0A 		bic	r10, fp, lr
 6824              	.LBE6409:
 6825              	.LBE6412:
 6826              	.LBE6415:
 6827              	.LBE6418:
 6828              	.LBE6421:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6829              		.loc 5 268 44 view .LVU1555
 6830 006a B442     		cmp	r4, r6
 6831              	.LBB6422:
 6832              	.LBB6419:
 6833              	.LBB6416:
 6834              	.LBB6413:
 6835              	.LBB6410:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 6836              		.loc 14 246 42 view .LVU1556
 6837 006c 8CF814A0 		strb	r10, [ip, #20]
 6838              	.LVL486:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 6839              		.loc 14 246 42 view .LVU1557
 6840              	.LBE6410:
 6841              	.LBE6413:
 6842              	.LBE6416:
 6843              	.LBE6419:
 6844              	.LBE6422:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6845              		.loc 5 268 17 is_stmt 1 view .LVU1558
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6846              		.loc 5 268 44 view .LVU1559
 6847 0070 E5D2     		bcs	.L412
 6848              	.LVL487:
 6849              	.L411:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6850              		.loc 5 268 44 is_stmt 0 view .LVU1560
 6851              	.LBE6403:
 266:../../libdaisy/src/hid/disp/display.h ****             {
 6852              		.loc 5 266 13 is_stmt 1 view .LVU1561
 6853 0072 0131     		adds	r1, r1, #1
 6854              	.LVL488:
 266:../../libdaisy/src/hid/disp/display.h ****             {
 6855              		.loc 5 266 40 view .LVU1562
 6856 0074 8945     		cmp	r9, r1
 6857 0076 D1D2     		bcs	.L408
 6858              	.LVL489:
 6859              	.L404:
 266:../../libdaisy/src/hid/disp/display.h ****             {
 6860              		.loc 5 266 40 is_stmt 0 view .LVU1563
 6861              	.LBE6402:
 6862              	.LBE6401:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 298


 281:../../libdaisy/src/hid/disp/display.h **** 
 6863              		.loc 5 281 5 view .LVU1564
 6864 0078 07B0     		add	sp, sp, #28
 6865              		.cfi_remember_state
 6866              		.cfi_def_cfa_offset 36
 6867              		@ sp needed
 6868 007a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6869              	.LVL490:
 6870              	.L405:
 6871              		.cfi_restore_state
 6872              	.LBB6423:
 6873              	.LBB6280:
 6874              	.LBI6280:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 6875              		.loc 5 221 10 is_stmt 1 view .LVU1565
 6876              	.LBB6281:
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 6877              		.loc 5 227 52 is_stmt 0 view .LVU1566
 6878 007e A3EB0108 		sub	r8, r3, r1
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 6879              		.loc 5 227 22 view .LVU1567
 6880 0082 B8F1000F 		cmp	r8, #0
 6881 0086 B8BF     		it	lt
 6882 0088 C8F10008 		rsblt	r8, r8, #0
 6883              	.LVL491:
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 6884              		.loc 5 229 42 view .LVU1568
 6885 008c 9942     		cmp	r1, r3
 6886 008e C0F04E81 		bcc	.L413
 6887              	.LVL492:
 6888              	.LBB6282:
 6889              	.LBI6282:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 6890              		.loc 4 41 10 is_stmt 1 view .LVU1569
 6891              	.LBB6283:
 6892              	.LBI6283:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 6893              		.loc 14 239 10 view .LVU1570
 6894              	.LBB6284:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6895              		.loc 14 241 14 is_stmt 0 view .LVU1571
 6896 0092 7F2B     		cmp	r3, #127
 6897              	.LBE6284:
 6898              	.LBE6283:
 6899              	.LBE6282:
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 6900              		.loc 5 229 42 view .LVU1572
 6901 0094 4FF0FF3A 		mov	r10, #-1
 6902              	.LBB6295:
 6903              	.LBB6291:
 6904              	.LBB6287:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6905              		.loc 14 241 14 view .LVU1573
 6906 0098 94BF     		ite	ls
 6907 009a 0026     		movls	r6, #0
 6908 009c 0126     		movhi	r6, #1
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 299


 6909              		.loc 14 241 28 view .LVU1574
 6910 009e 3F2A     		cmp	r2, #63
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6911              		.loc 14 241 14 view .LVU1575
 6912 00a0 0096     		str	r6, [sp]
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6913              		.loc 14 241 28 view .LVU1576
 6914 00a2 94BF     		ite	ls
 6915 00a4 0027     		movls	r7, #0
 6916 00a6 0127     		movhi	r7, #1
 6917 00a8 0297     		str	r7, [sp, #8]
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6918              		.loc 14 241 9 view .LVU1577
 6919 00aa A6B9     		cbnz	r6, .L414
 6920 00ac 9FB9     		cbnz	r7, .L414
 6921              	.LVL493:
 6922              	.L455:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6923              		.loc 14 244 28 view .LVU1578
 6924 00ae D608     		lsrs	r6, r2, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6925              		.loc 14 244 54 view .LVU1579
 6926 00b0 02F0070C 		and	ip, r2, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6927              		.loc 14 244 48 view .LVU1580
 6928 00b4 0127     		movs	r7, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6929              		.loc 14 244 42 view .LVU1581
 6930 00b6 03EBC616 		add	r6, r3, r6, lsl #7
 6931 00ba 0644     		add	r6, r6, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 6932              		.loc 14 243 9 view .LVU1582
 6933 00bc 002D     		cmp	r5, #0
 6934 00be 00F09481 		beq	.L415
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6935              		.loc 14 244 48 view .LVU1583
 6936 00c2 07FA0CF7 		lsl	r7, r7, ip
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6937              		.loc 14 244 42 view .LVU1584
 6938 00c6 96F814C0 		ldrb	ip, [r6, #20]	@ zero_extendqisi2
 6939 00ca 47EA0C07 		orr	r7, r7, ip
 6940 00ce 3775     		strb	r7, [r6, #20]
 6941 00d0 0026     		movs	r6, #0
 6942 00d2 0296     		str	r6, [sp, #8]
 6943 00d4 0096     		str	r6, [sp]
 6944              	.L414:
 6945              	.LVL494:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6946              		.loc 14 244 42 view .LVU1585
 6947              	.LBE6287:
 6948              	.LBE6291:
 6949              	.LBE6295:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 6950              		.loc 5 239 26 is_stmt 1 view .LVU1586
 6951 00d6 9942     		cmp	r1, r3
 6952 00d8 00F09781 		beq	.L496
 6953              	.L417:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 300


 6954              	.LVL495:
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 6955              		.loc 5 227 22 is_stmt 0 view .LVU1587
 6956 00dc 4646     		mov	r6, r8
 6957 00de 9446     		mov	ip, r2
 6958 00e0 8E46     		mov	lr, r1
 6959              	.LVL496:
 6960              	.L419:
 6961              	.LBB6296:
 6962              	.LBI6296:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 6963              		.loc 4 41 10 is_stmt 1 view .LVU1588
 6964              	.LBB6297:
 6965              	.LBI6297:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 6966              		.loc 14 239 10 view .LVU1589
 6967              	.LBB6298:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6968              		.loc 14 241 9 is_stmt 0 view .LVU1590
 6969 00e2 BEF17F0F 		cmp	lr, #127
 6970 00e6 16D8     		bhi	.L420
 6971 00e8 BCF13F0F 		cmp	ip, #63
 6972 00ec 13D8     		bhi	.L420
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6973              		.loc 14 244 28 view .LVU1591
 6974 00ee 4FEADC07 		lsr	r7, ip, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6975              		.loc 14 244 54 view .LVU1592
 6976 00f2 0CF0070B 		and	fp, ip, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6977              		.loc 14 244 48 view .LVU1593
 6978 00f6 4FF00109 		mov	r9, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6979              		.loc 14 244 42 view .LVU1594
 6980 00fa 0EEBC717 		add	r7, lr, r7, lsl #7
 6981 00fe 0744     		add	r7, r7, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 6982              		.loc 14 243 9 view .LVU1595
 6983 0100 002D     		cmp	r5, #0
 6984 0102 00F03981 		beq	.L421
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6985              		.loc 14 244 48 view .LVU1596
 6986 0106 09FA0BF9 		lsl	r9, r9, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6987              		.loc 14 244 42 view .LVU1597
 6988 010a 97F814B0 		ldrb	fp, [r7, #20]	@ zero_extendqisi2
 6989 010e 49EA0B09 		orr	r9, r9, fp
 6990 0112 87F81490 		strb	r9, [r7, #20]
 6991              	.L420:
 6992              	.LVL497:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6993              		.loc 14 244 42 view .LVU1598
 6994              	.LBE6298:
 6995              	.LBE6297:
 6996              	.LBE6296:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 6997              		.loc 5 243 13 view .LVU1599
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 301


 6998 0116 7700     		lsls	r7, r6, #1
 6999              	.LVL498:
 246:../../libdaisy/src/hid/disp/display.h ****             }
 7000              		.loc 5 246 20 view .LVU1600
 7001 0118 18BF     		it	ne
 7002 011a D644     		addne	lr, lr, r10
 7003              	.LVL499:
 249:../../libdaisy/src/hid/disp/display.h ****             {
 7004              		.loc 5 249 13 view .LVU1601
 7005 011c B845     		cmp	r8, r7
 7006 011e 02DD     		ble	.L423
 251:../../libdaisy/src/hid/disp/display.h ****                 y1 += signY;
 7007              		.loc 5 251 23 view .LVU1602
 7008 0120 4644     		add	r6, r6, r8
 7009              	.LVL500:
 252:../../libdaisy/src/hid/disp/display.h ****             }
 7010              		.loc 5 252 20 view .LVU1603
 7011 0122 0CF1FF3C 		add	ip, ip, #-1
 7012              	.LVL501:
 7013              	.L423:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7014              		.loc 5 239 26 is_stmt 1 view .LVU1604
 7015 0126 7345     		cmp	r3, lr
 7016 0128 DBD1     		bne	.L419
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7017              		.loc 5 239 26 is_stmt 0 view .LVU1605
 7018 012a 6245     		cmp	r2, ip
 7019 012c D9D1     		bne	.L419
 7020 012e 0026     		movs	r6, #0
 7021              	.LVL502:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7022              		.loc 5 239 26 view .LVU1606
 7023 0130 0496     		str	r6, [sp, #16]
 7024              	.LVL503:
 7025              	.L416:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7026              		.loc 5 239 26 view .LVU1607
 7027              	.LBE6281:
 7028              	.LBE6280:
 7029              	.LBB6311:
 7030              	.LBI6311:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 7031              		.loc 5 221 10 is_stmt 1 view .LVU1608
 7032              	.LBB6312:
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 7033              		.loc 5 228 52 is_stmt 0 view .LVU1609
 7034 0132 A4EB0209 		sub	r9, r4, r2
 7035              	.LBB6313:
 7036              	.LBB6314:
 7037              	.LBB6315:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7038              		.loc 14 241 9 view .LVU1610
 7039 0136 009F     		ldr	r7, [sp]
 7040              	.LBE6315:
 7041              	.LBE6314:
 7042              	.LBE6313:
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 302


 7043              		.loc 5 228 22 view .LVU1611
 7044 0138 B9F1000F 		cmp	r9, #0
 7045 013c B8BF     		it	lt
 7046 013e C9F10009 		rsblt	r9, r9, #0
 7047              	.LVL504:
 7048              	.LBB6330:
 7049              	.LBB6324:
 7050              	.LBB6318:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7051              		.loc 14 241 28 view .LVU1612
 7052 0142 3F2C     		cmp	r4, #63
 7053 0144 94BF     		ite	ls
 7054 0146 0026     		movls	r6, #0
 7055 0148 0126     		movhi	r6, #1
 7056              	.LBE6318:
 7057              	.LBE6324:
 7058              	.LBE6330:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7059              		.loc 5 230 42 view .LVU1613
 7060 014a A242     		cmp	r2, r4
 231:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error2;
 7061              		.loc 5 231 22 view .LVU1614
 7062 014c C9F10008 		rsb	r8, r9, #0
 7063              	.LVL505:
 7064              	.LBB6331:
 7065              	.LBI6313:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7066              		.loc 4 41 10 is_stmt 1 view .LVU1615
 7067              	.LBB6325:
 7068              	.LBI6314:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7069              		.loc 14 239 10 view .LVU1616
 7070              	.LBB6319:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7071              		.loc 14 241 28 is_stmt 0 view .LVU1617
 7072 0150 0396     		str	r6, [sp, #12]
 7073              	.LBE6319:
 7074              	.LBE6325:
 7075              	.LBE6331:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7076              		.loc 5 230 42 view .LVU1618
 7077 0152 C0F02381 		bcc	.L424
 7078              	.LVL506:
 7079              	.LBB6332:
 7080              	.LBB6326:
 7081              	.LBB6320:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7082              		.loc 14 241 9 view .LVU1619
 7083 0156 002F     		cmp	r7, #0
 7084 0158 40F05081 		bne	.L459
 7085 015c 002E     		cmp	r6, #0
 7086 015e 40F04D81 		bne	.L459
 7087              	.LBE6320:
 7088              	.LBE6326:
 7089              	.LBE6332:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7090              		.loc 5 230 42 view .LVU1620
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 303


 7091 0162 4FF0FF36 		mov	r6, #-1
 7092 0166 0096     		str	r6, [sp]
 7093              	.LBB6333:
 7094              	.LBB6327:
 7095              	.LBB6321:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7096              		.loc 14 244 28 view .LVU1621
 7097 0168 E608     		lsrs	r6, r4, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7098              		.loc 14 244 42 view .LVU1622
 7099 016a 03EBC616 		add	r6, r3, r6, lsl #7
 7100 016e 0644     		add	r6, r6, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7101              		.loc 14 243 9 view .LVU1623
 7102 0170 002D     		cmp	r5, #0
 7103 0172 00F01E81 		beq	.L426
 7104              	.LVL507:
 7105              	.L498:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7106              		.loc 14 244 48 view .LVU1624
 7107 0176 4FF0010C 		mov	ip, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7108              		.loc 14 244 54 view .LVU1625
 7109 017a 04F00707 		and	r7, r4, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7110              		.loc 14 244 48 view .LVU1626
 7111 017e 0CFA07F7 		lsl	r7, ip, r7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7112              		.loc 14 244 42 view .LVU1627
 7113 0182 96F814C0 		ldrb	ip, [r6, #20]	@ zero_extendqisi2
 7114 0186 47EA0C07 		orr	r7, r7, ip
 7115 018a 3775     		strb	r7, [r6, #20]
 7116 018c 0026     		movs	r6, #0
 7117 018e 0396     		str	r6, [sp, #12]
 7118              	.L425:
 7119              	.LVL508:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7120              		.loc 14 244 42 view .LVU1628
 7121              	.LBE6321:
 7122              	.LBE6327:
 7123              	.LBE6333:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7124              		.loc 5 239 26 is_stmt 1 view .LVU1629
 7125 0190 A242     		cmp	r2, r4
 7126 0192 00F03D81 		beq	.L497
 7127              	.L428:
 7128              	.LVL509:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7129              		.loc 5 230 42 is_stmt 0 view .LVU1630
 7130 0196 C446     		mov	ip, r8
 7131 0198 1646     		mov	r6, r2
 7132 019a 1F46     		mov	r7, r3
 7133 019c 0592     		str	r2, [sp, #20]
 7134              	.LVL510:
 7135              	.L430:
 7136              	.LBB6334:
 7137              	.LBI6334:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 304


  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7138              		.loc 4 41 10 is_stmt 1 view .LVU1631
 7139              	.LBB6335:
 7140              	.LBI6335:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7141              		.loc 14 239 10 view .LVU1632
 7142              	.LBB6336:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7143              		.loc 14 241 9 is_stmt 0 view .LVU1633
 7144 019e 7F2F     		cmp	r7, #127
 7145 01a0 15D8     		bhi	.L431
 7146 01a2 3F2E     		cmp	r6, #63
 7147 01a4 13D8     		bhi	.L431
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7148              		.loc 14 244 28 view .LVU1634
 7149 01a6 4FEAD60E 		lsr	lr, r6, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7150              		.loc 14 244 54 view .LVU1635
 7151 01aa 06F0070B 		and	fp, r6, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7152              		.loc 14 244 48 view .LVU1636
 7153 01ae 4FF0010A 		mov	r10, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7154              		.loc 14 244 42 view .LVU1637
 7155 01b2 07EBCE1E 		add	lr, r7, lr, lsl #7
 7156 01b6 8644     		add	lr, lr, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7157              		.loc 14 243 9 view .LVU1638
 7158 01b8 002D     		cmp	r5, #0
 7159 01ba 00F0E680 		beq	.L432
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7160              		.loc 14 244 48 view .LVU1639
 7161 01be 0AFA0BFA 		lsl	r10, r10, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7162              		.loc 14 244 42 view .LVU1640
 7163 01c2 9EF814B0 		ldrb	fp, [lr, #20]	@ zero_extendqisi2
 7164 01c6 4AEA0B0A 		orr	r10, r10, fp
 7165 01ca 8EF814A0 		strb	r10, [lr, #20]
 7166              	.L431:
 7167              	.LVL511:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7168              		.loc 14 244 42 view .LVU1641
 7169              	.LBE6336:
 7170              	.LBE6335:
 7171              	.LBE6334:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 7172              		.loc 5 243 13 view .LVU1642
 7173 01ce B8EB4C0F 		cmp	r8, ip, lsl #1
 242:../../libdaisy/src/hid/disp/display.h ****             if(error2 > -deltaY)
 7174              		.loc 5 242 20 view .LVU1643
 7175 01d2 4FEA4C0E 		lsl	lr, ip, #1
 7176              	.LVL512:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 7177              		.loc 5 243 13 view .LVU1644
 7178 01d6 02DA     		bge	.L433
 245:../../libdaisy/src/hid/disp/display.h ****                 x1 += signX;
 7179              		.loc 5 245 23 view .LVU1645
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 305


 7180 01d8 ACEB090C 		sub	ip, ip, r9
 7181              	.LVL513:
 246:../../libdaisy/src/hid/disp/display.h ****             }
 7182              		.loc 5 246 20 view .LVU1646
 7183 01dc 013F     		subs	r7, r7, #1
 7184              	.LVL514:
 7185              	.L433:
 249:../../libdaisy/src/hid/disp/display.h ****             {
 7186              		.loc 5 249 13 view .LVU1647
 7187 01de BEF1000F 		cmp	lr, #0
 7188 01e2 01D0     		beq	.L434
 252:../../libdaisy/src/hid/disp/display.h ****             }
 7189              		.loc 5 252 20 view .LVU1648
 7190 01e4 009A     		ldr	r2, [sp]
 7191 01e6 1644     		add	r6, r6, r2
 7192              	.LVL515:
 7193              	.L434:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7194              		.loc 5 239 26 is_stmt 1 view .LVU1649
 7195 01e8 BB42     		cmp	r3, r7
 7196 01ea D8D1     		bne	.L430
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7197              		.loc 5 239 26 is_stmt 0 view .LVU1650
 7198 01ec B442     		cmp	r4, r6
 7199 01ee D6D1     		bne	.L430
 7200 01f0 059A     		ldr	r2, [sp, #20]
 7201              	.LVL516:
 7202              	.L427:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7203              		.loc 5 239 26 view .LVU1651
 7204              	.LBE6312:
 7205              	.LBE6311:
 7206              	.LBB6347:
 7207              	.LBI6347:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 7208              		.loc 5 221 10 is_stmt 1 view .LVU1652
 7209              	.LBB6348:
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 7210              		.loc 5 227 52 is_stmt 0 view .LVU1653
 7211 01f2 A1EB030E 		sub	lr, r1, r3
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 7212              		.loc 5 227 22 view .LVU1654
 7213 01f6 BEF1000F 		cmp	lr, #0
 7214 01fa B8BF     		it	lt
 7215 01fc CEF1000E 		rsblt	lr, lr, #0
 7216              	.LVL517:
 7217              	.LBB6349:
 7218              	.LBB6350:
 7219              	.LBB6351:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7220              		.loc 14 241 14 view .LVU1655
 7221 0200 7F29     		cmp	r1, #127
 7222 0202 94BF     		ite	ls
 7223 0204 4FF0000A 		movls	r10, #0
 7224 0208 4FF0010A 		movhi	r10, #1
 7225              	.LBE6351:
 7226              	.LBE6350:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 306


 7227              	.LBE6349:
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 7228              		.loc 5 229 42 view .LVU1656
 7229 020c 9942     		cmp	r1, r3
 7230 020e 8CBF     		ite	hi
 7231 0210 4FF00109 		movhi	r9, #1
 7232 0214 4FF0FF39 		movls	r9, #-1
 7233              	.LVL518:
 7234              	.LBB6358:
 7235              	.LBI6349:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7236              		.loc 4 41 10 is_stmt 1 view .LVU1657
 7237              	.LBB6356:
 7238              	.LBI6350:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7239              		.loc 14 239 10 view .LVU1658
 7240              	.LBB6354:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7241              		.loc 14 241 9 is_stmt 0 view .LVU1659
 7242 0218 BAF1000F 		cmp	r10, #0
 7243 021c 13D1     		bne	.L436
 7244 021e 039E     		ldr	r6, [sp, #12]
 7245 0220 8EB9     		cbnz	r6, .L436
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7246              		.loc 14 244 28 view .LVU1660
 7247 0222 E608     		lsrs	r6, r4, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7248              		.loc 14 244 42 view .LVU1661
 7249 0224 01EBC616 		add	r6, r1, r6, lsl #7
 7250 0228 0644     		add	r6, r6, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7251              		.loc 14 243 9 view .LVU1662
 7252 022a 002D     		cmp	r5, #0
 7253 022c 00F0D380 		beq	.L437
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7254              		.loc 14 244 48 view .LVU1663
 7255 0230 4FF0010C 		mov	ip, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7256              		.loc 14 244 54 view .LVU1664
 7257 0234 04F00707 		and	r7, r4, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7258              		.loc 14 244 48 view .LVU1665
 7259 0238 0CFA07F7 		lsl	r7, ip, r7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7260              		.loc 14 244 42 view .LVU1666
 7261 023c 96F814C0 		ldrb	ip, [r6, #20]	@ zero_extendqisi2
 7262 0240 47EA0C07 		orr	r7, r7, ip
 7263 0244 3775     		strb	r7, [r6, #20]
 7264              	.L436:
 7265              	.LVL519:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7266              		.loc 14 244 42 view .LVU1667
 7267              	.LBE6354:
 7268              	.LBE6356:
 7269              	.LBE6358:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7270              		.loc 5 239 26 is_stmt 1 view .LVU1668
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 307


 7271 0246 049E     		ldr	r6, [sp, #16]
 7272 0248 26BB     		cbnz	r6, .L438
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 7273              		.loc 5 227 22 is_stmt 0 view .LVU1669
 7274 024a 7746     		mov	r7, lr
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7275              		.loc 5 239 26 view .LVU1670
 7276 024c 2646     		mov	r6, r4
 7277              	.LVL520:
 7278              	.L439:
 7279              	.LBB6359:
 7280              	.LBI6359:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7281              		.loc 4 41 10 is_stmt 1 view .LVU1671
 7282              	.LBB6360:
 7283              	.LBI6360:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7284              		.loc 14 239 10 view .LVU1672
 7285              	.LBB6361:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7286              		.loc 14 241 9 is_stmt 0 view .LVU1673
 7287 024e 7F2B     		cmp	r3, #127
 7288 0250 14D8     		bhi	.L441
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7289              		.loc 14 241 9 view .LVU1674
 7290 0252 3F2E     		cmp	r6, #63
 7291 0254 12D8     		bhi	.L441
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7292              		.loc 14 244 28 view .LVU1675
 7293 0256 4FEAD60C 		lsr	ip, r6, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7294              		.loc 14 244 54 view .LVU1676
 7295 025a 06F0070B 		and	fp, r6, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7296              		.loc 14 244 48 view .LVU1677
 7297 025e 4FF00108 		mov	r8, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7298              		.loc 14 244 42 view .LVU1678
 7299 0262 03EBCC1C 		add	ip, r3, ip, lsl #7
 7300 0266 8444     		add	ip, ip, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7301              		.loc 14 243 9 view .LVU1679
 7302 0268 002D     		cmp	r5, #0
 7303 026a 73D0     		beq	.L442
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7304              		.loc 14 244 48 view .LVU1680
 7305 026c 08FA0BF8 		lsl	r8, r8, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7306              		.loc 14 244 42 view .LVU1681
 7307 0270 9CF814B0 		ldrb	fp, [ip, #20]	@ zero_extendqisi2
 7308 0274 48EA0B08 		orr	r8, r8, fp
 7309 0278 8CF81480 		strb	r8, [ip, #20]
 7310              	.L441:
 7311              	.LVL521:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7312              		.loc 14 244 42 view .LVU1682
 7313              	.LBE6361:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 308


 7314              	.LBE6360:
 7315              	.LBE6359:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 7316              		.loc 5 243 13 view .LVU1683
 7317 027c 5FEA470C 		lsls	ip, r7, #1
 7318              	.LVL522:
 246:../../libdaisy/src/hid/disp/display.h ****             }
 7319              		.loc 5 246 20 view .LVU1684
 7320 0280 18BF     		it	ne
 7321 0282 4B44     		addne	r3, r3, r9
 7322              	.LVL523:
 249:../../libdaisy/src/hid/disp/display.h ****             {
 7323              		.loc 5 249 13 view .LVU1685
 7324 0284 E645     		cmp	lr, ip
 7325 0286 01DD     		ble	.L444
 251:../../libdaisy/src/hid/disp/display.h ****                 y1 += signY;
 7326              		.loc 5 251 23 view .LVU1686
 7327 0288 7744     		add	r7, r7, lr
 7328              	.LVL524:
 252:../../libdaisy/src/hid/disp/display.h ****             }
 7329              		.loc 5 252 20 view .LVU1687
 7330 028a 013E     		subs	r6, r6, #1
 7331              	.LVL525:
 7332              	.L444:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7333              		.loc 5 239 26 is_stmt 1 view .LVU1688
 7334 028c 9942     		cmp	r1, r3
 7335 028e DED1     		bne	.L439
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7336              		.loc 5 239 26 is_stmt 0 view .LVU1689
 7337 0290 B442     		cmp	r4, r6
 7338 0292 DCD1     		bne	.L439
 7339              	.LVL526:
 7340              	.L438:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7341              		.loc 5 239 26 view .LVU1690
 7342              	.LBE6348:
 7343              	.LBE6347:
 7344              	.LBB6370:
 7345              	.LBI6370:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 7346              		.loc 5 221 10 is_stmt 1 view .LVU1691
 7347              	.LBB6371:
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 7348              		.loc 5 228 52 is_stmt 0 view .LVU1692
 7349 0294 A2EB040E 		sub	lr, r2, r4
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 7350              		.loc 5 228 22 view .LVU1693
 7351 0298 BEF1000F 		cmp	lr, #0
 7352 029c B8BF     		it	lt
 7353 029e CEF1000E 		rsblt	lr, lr, #0
 7354              	.LVL527:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7355              		.loc 5 230 42 view .LVU1694
 7356 02a2 A242     		cmp	r2, r4
 7357 02a4 8CBF     		ite	hi
 7358 02a6 4FF00108 		movhi	r8, #1
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 309


 7359 02aa 4FF0FF38 		movls	r8, #-1
 7360              	.LVL528:
 231:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error2;
 7361              		.loc 5 231 22 view .LVU1695
 7362 02ae CEF1000C 		rsb	ip, lr, #0
 7363              	.LVL529:
 7364              	.LBB6372:
 7365              	.LBI6372:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7366              		.loc 4 41 10 is_stmt 1 view .LVU1696
 7367              	.LBB6373:
 7368              	.LBI6373:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7369              		.loc 14 239 10 view .LVU1697
 7370              	.LBB6374:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7371              		.loc 14 241 9 is_stmt 0 view .LVU1698
 7372 02b2 BAF1000F 		cmp	r10, #0
 7373 02b6 0ED1     		bne	.L446
 7374 02b8 029B     		ldr	r3, [sp, #8]
 7375 02ba 63B9     		cbnz	r3, .L446
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7376              		.loc 14 244 28 view .LVU1699
 7377 02bc D308     		lsrs	r3, r2, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7378              		.loc 14 244 54 view .LVU1700
 7379 02be 02F00707 		and	r7, r2, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7380              		.loc 14 244 48 view .LVU1701
 7381 02c2 0126     		movs	r6, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7382              		.loc 14 244 42 view .LVU1702
 7383 02c4 01EBC313 		add	r3, r1, r3, lsl #7
 7384 02c8 0344     		add	r3, r3, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7385              		.loc 14 243 9 view .LVU1703
 7386 02ca 002D     		cmp	r5, #0
 7387 02cc 7CD0     		beq	.L447
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7388              		.loc 14 244 48 view .LVU1704
 7389 02ce BE40     		lsls	r6, r6, r7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7390              		.loc 14 244 42 view .LVU1705
 7391 02d0 1F7D     		ldrb	r7, [r3, #20]	@ zero_extendqisi2
 7392 02d2 3E43     		orrs	r6, r6, r7
 7393 02d4 1E75     		strb	r6, [r3, #20]
 7394              	.L446:
 7395              	.LVL530:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7396              		.loc 14 244 42 view .LVU1706
 7397              	.LBE6374:
 7398              	.LBE6373:
 7399              	.LBE6372:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7400              		.loc 5 239 26 is_stmt 1 view .LVU1707
 7401 02d6 019B     		ldr	r3, [sp, #4]
 7402 02d8 002B     		cmp	r3, #0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 310


 7403 02da 7FF4CDAE 		bne	.L404
 7404 02de 6646     		mov	r6, ip
 7405 02e0 0B46     		mov	r3, r1
 7406              	.LVL531:
 7407              	.L448:
 7408              	.LBB6379:
 7409              	.LBI6379:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7410              		.loc 4 41 10 view .LVU1708
 7411              	.LBB6380:
 7412              	.LBI6380:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7413              		.loc 14 239 10 view .LVU1709
 7414              	.LBB6381:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7415              		.loc 14 241 9 is_stmt 0 view .LVU1710
 7416 02e2 7F2B     		cmp	r3, #127
 7417 02e4 12D8     		bhi	.L450
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7418              		.loc 14 241 9 view .LVU1711
 7419 02e6 3F2C     		cmp	r4, #63
 7420 02e8 10D8     		bhi	.L450
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7421              		.loc 14 244 28 view .LVU1712
 7422 02ea E708     		lsrs	r7, r4, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7423              		.loc 14 244 54 view .LVU1713
 7424 02ec 04F0070A 		and	r10, r4, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7425              		.loc 14 244 48 view .LVU1714
 7426 02f0 4FF00109 		mov	r9, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7427              		.loc 14 244 42 view .LVU1715
 7428 02f4 03EBC717 		add	r7, r3, r7, lsl #7
 7429 02f8 0744     		add	r7, r7, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7430              		.loc 14 243 9 view .LVU1716
 7431 02fa A5B3     		cbz	r5, .L451
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7432              		.loc 14 244 48 view .LVU1717
 7433 02fc 09FA0AF9 		lsl	r9, r9, r10
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7434              		.loc 14 244 42 view .LVU1718
 7435 0300 97F814A0 		ldrb	r10, [r7, #20]	@ zero_extendqisi2
 7436 0304 49EA0A09 		orr	r9, r9, r10
 7437 0308 87F81490 		strb	r9, [r7, #20]
 7438              	.L450:
 7439              	.LVL532:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7440              		.loc 14 244 42 view .LVU1719
 7441              	.LBE6381:
 7442              	.LBE6380:
 7443              	.LBE6379:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 7444              		.loc 5 243 13 view .LVU1720
 7445 030c BCEB460F 		cmp	ip, r6, lsl #1
 242:../../libdaisy/src/hid/disp/display.h ****             if(error2 > -deltaY)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 311


 7446              		.loc 5 242 20 view .LVU1721
 7447 0310 4FEA4607 		lsl	r7, r6, #1
 7448              	.LVL533:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 7449              		.loc 5 243 13 view .LVU1722
 7450 0314 02DA     		bge	.L452
 245:../../libdaisy/src/hid/disp/display.h ****                 x1 += signX;
 7451              		.loc 5 245 23 view .LVU1723
 7452 0316 A6EB0E06 		sub	r6, r6, lr
 7453              	.LVL534:
 246:../../libdaisy/src/hid/disp/display.h ****             }
 7454              		.loc 5 246 20 view .LVU1724
 7455 031a 013B     		subs	r3, r3, #1
 7456              	.LVL535:
 7457              	.L452:
 249:../../libdaisy/src/hid/disp/display.h ****             {
 7458              		.loc 5 249 13 view .LVU1725
 7459 031c 07B1     		cbz	r7, .L453
 252:../../libdaisy/src/hid/disp/display.h ****             }
 7460              		.loc 5 252 20 view .LVU1726
 7461 031e 4444     		add	r4, r4, r8
 7462              	.LVL536:
 7463              	.L453:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7464              		.loc 5 239 26 is_stmt 1 view .LVU1727
 7465 0320 9942     		cmp	r1, r3
 7466 0322 DED1     		bne	.L448
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7467              		.loc 5 239 26 is_stmt 0 view .LVU1728
 7468 0324 A242     		cmp	r2, r4
 7469 0326 DCD1     		bne	.L448
 7470              	.LBE6371:
 7471              	.LBE6370:
 7472              	.LBE6423:
 281:../../libdaisy/src/hid/disp/display.h **** 
 7473              		.loc 5 281 5 view .LVU1729
 7474 0328 07B0     		add	sp, sp, #28
 7475              		.cfi_remember_state
 7476              		.cfi_def_cfa_offset 36
 7477              		@ sp needed
 7478 032a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7479              	.LVL537:
 7480              	.L413:
 7481              		.cfi_restore_state
 7482              	.LBB6424:
 7483              	.LBB6390:
 7484              	.LBB6307:
 7485              	.LBB6303:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7486              		.loc 4 41 10 is_stmt 1 view .LVU1730
 7487              	.LBB6292:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7488              		.loc 14 239 10 view .LVU1731
 7489              	.LBB6288:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7490              		.loc 14 241 28 is_stmt 0 view .LVU1732
 7491 032e 3F2A     		cmp	r2, #63
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 312


 7492              	.LBE6288:
 7493              	.LBE6292:
 7494              	.LBE6303:
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 7495              		.loc 5 229 42 view .LVU1733
 7496 0330 4FF0010A 		mov	r10, #1
 7497              	.LBB6304:
 7498              	.LBB6293:
 7499              	.LBB6289:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7500              		.loc 14 241 28 view .LVU1734
 7501 0334 94BF     		ite	ls
 7502 0336 0026     		movls	r6, #0
 7503 0338 0126     		movhi	r6, #1
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7504              		.loc 14 241 14 view .LVU1735
 7505 033a 7F2B     		cmp	r3, #127
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7506              		.loc 14 241 28 view .LVU1736
 7507 033c 0296     		str	r6, [sp, #8]
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7508              		.loc 14 241 14 view .LVU1737
 7509 033e 94BF     		ite	ls
 7510 0340 0027     		movls	r7, #0
 7511 0342 0127     		movhi	r7, #1
 7512 0344 0097     		str	r7, [sp]
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7513              		.loc 14 241 9 view .LVU1738
 7514 0346 002E     		cmp	r6, #0
 7515 0348 7FF4C8AE 		bne	.L417
 7516 034c 002F     		cmp	r7, #0
 7517 034e 3FF4AEAE 		beq	.L455
 7518 0352 C3E6     		b	.L417
 7519              	.LVL538:
 7520              	.L442:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7521              		.loc 14 241 9 view .LVU1739
 7522              	.LBE6289:
 7523              	.LBE6293:
 7524              	.LBE6304:
 7525              	.LBE6307:
 7526              	.LBE6390:
 7527              	.LBB6391:
 7528              	.LBB6368:
 7529              	.LBB6366:
 7530              	.LBB6365:
 7531              	.LBB6364:
 7532              	.LBB6362:
 7533              	.LBI6362:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7534              		.loc 14 239 10 is_stmt 1 view .LVU1740
 7535              	.LBB6363:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7536              		.loc 14 246 49 is_stmt 0 view .LVU1741
 7537 0354 08FA0BFB 		lsl	fp, r8, fp
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7538              		.loc 14 246 42 view .LVU1742
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 313


 7539 0358 9CF81480 		ldrb	r8, [ip, #20]	@ zero_extendqisi2
 7540 035c 28EA0B08 		bic	r8, r8, fp
 7541 0360 8CF81480 		strb	r8, [ip, #20]
 7542 0364 8AE7     		b	.L441
 7543              	.LVL539:
 7544              	.L451:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7545              		.loc 14 246 42 view .LVU1743
 7546              	.LBE6363:
 7547              	.LBE6362:
 7548              	.LBE6364:
 7549              	.LBE6365:
 7550              	.LBE6366:
 7551              	.LBE6368:
 7552              	.LBE6391:
 7553              	.LBB6392:
 7554              	.LBB6388:
 7555              	.LBB6386:
 7556              	.LBB6385:
 7557              	.LBB6384:
 7558              	.LBB6382:
 7559              	.LBI6382:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7560              		.loc 14 239 10 is_stmt 1 view .LVU1744
 7561              	.LBB6383:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7562              		.loc 14 246 49 is_stmt 0 view .LVU1745
 7563 0366 09FA0AFA 		lsl	r10, r9, r10
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7564              		.loc 14 246 42 view .LVU1746
 7565 036a 97F81490 		ldrb	r9, [r7, #20]	@ zero_extendqisi2
 7566 036e 29EA0A09 		bic	r9, r9, r10
 7567 0372 87F81490 		strb	r9, [r7, #20]
 7568 0376 C9E7     		b	.L450
 7569              	.LVL540:
 7570              	.L421:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7571              		.loc 14 246 42 view .LVU1747
 7572              	.LBE6383:
 7573              	.LBE6382:
 7574              	.LBE6384:
 7575              	.LBE6385:
 7576              	.LBE6386:
 7577              	.LBE6388:
 7578              	.LBE6392:
 7579              	.LBB6393:
 7580              	.LBB6308:
 7581              	.LBB6305:
 7582              	.LBB6302:
 7583              	.LBB6301:
 7584              	.LBB6299:
 7585              	.LBI6299:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7586              		.loc 14 239 10 is_stmt 1 view .LVU1748
 7587              	.LBB6300:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7588              		.loc 14 246 49 is_stmt 0 view .LVU1749
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 314


 7589 0378 09FA0BFB 		lsl	fp, r9, fp
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7590              		.loc 14 246 42 view .LVU1750
 7591 037c 97F81490 		ldrb	r9, [r7, #20]	@ zero_extendqisi2
 7592 0380 29EA0B09 		bic	r9, r9, fp
 7593 0384 87F81490 		strb	r9, [r7, #20]
 7594 0388 C5E6     		b	.L420
 7595              	.LVL541:
 7596              	.L432:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7597              		.loc 14 246 42 view .LVU1751
 7598              	.LBE6300:
 7599              	.LBE6299:
 7600              	.LBE6301:
 7601              	.LBE6302:
 7602              	.LBE6305:
 7603              	.LBE6308:
 7604              	.LBE6393:
 7605              	.LBB6394:
 7606              	.LBB6344:
 7607              	.LBB6341:
 7608              	.LBB6340:
 7609              	.LBB6339:
 7610              	.LBB6337:
 7611              	.LBI6337:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7612              		.loc 14 239 10 is_stmt 1 view .LVU1752
 7613              	.LBB6338:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7614              		.loc 14 246 49 is_stmt 0 view .LVU1753
 7615 038a 0AFA0BFB 		lsl	fp, r10, fp
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7616              		.loc 14 246 42 view .LVU1754
 7617 038e 9EF814A0 		ldrb	r10, [lr, #20]	@ zero_extendqisi2
 7618 0392 2AEA0B0A 		bic	r10, r10, fp
 7619 0396 8EF814A0 		strb	r10, [lr, #20]
 7620 039a 18E7     		b	.L431
 7621              	.LVL542:
 7622              	.L424:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7623              		.loc 14 246 42 view .LVU1755
 7624              	.LBE6338:
 7625              	.LBE6337:
 7626              	.LBE6339:
 7627              	.LBE6340:
 7628              	.LBE6341:
 7629              	.LBB6342:
 7630              	.LBB6328:
 7631              	.LBB6322:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7632              		.loc 14 241 9 view .LVU1756
 7633 039c 97BB     		cbnz	r7, .L463
 7634 039e 8EBB     		cbnz	r6, .L463
 7635              	.LBE6322:
 7636              	.LBE6328:
 7637              	.LBE6342:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 315


 7638              		.loc 5 230 42 view .LVU1757
 7639 03a0 0126     		movs	r6, #1
 7640 03a2 0096     		str	r6, [sp]
 7641              	.LBB6343:
 7642              	.LBB6329:
 7643              	.LBB6323:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7644              		.loc 14 244 28 view .LVU1758
 7645 03a4 E608     		lsrs	r6, r4, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7646              		.loc 14 244 42 view .LVU1759
 7647 03a6 03EBC616 		add	r6, r3, r6, lsl #7
 7648 03aa 0644     		add	r6, r6, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7649              		.loc 14 243 9 view .LVU1760
 7650 03ac 002D     		cmp	r5, #0
 7651 03ae 7FF4E2AE 		bne	.L498
 7652              	.LVL543:
 7653              	.L426:
 7654              	.LBB6316:
 7655              	.LBI6316:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7656              		.loc 14 239 10 is_stmt 1 view .LVU1761
 7657              	.LBB6317:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7658              		.loc 14 246 49 is_stmt 0 view .LVU1762
 7659 03b2 0127     		movs	r7, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7660              		.loc 14 246 55 view .LVU1763
 7661 03b4 04F0070C 		and	ip, r4, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7662              		.loc 14 246 42 view .LVU1764
 7663 03b8 0395     		str	r5, [sp, #12]
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7664              		.loc 14 246 49 view .LVU1765
 7665 03ba 07FA0CFC 		lsl	ip, r7, ip
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7666              		.loc 14 246 42 view .LVU1766
 7667 03be 377D     		ldrb	r7, [r6, #20]	@ zero_extendqisi2
 7668 03c0 27EA0C07 		bic	r7, r7, ip
 7669 03c4 3775     		strb	r7, [r6, #20]
 7670 03c6 E3E6     		b	.L425
 7671              	.LVL544:
 7672              	.L447:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7673              		.loc 14 246 42 view .LVU1767
 7674              	.LBE6317:
 7675              	.LBE6316:
 7676              	.LBE6323:
 7677              	.LBE6329:
 7678              	.LBE6343:
 7679              	.LBE6344:
 7680              	.LBE6394:
 7681              	.LBB6395:
 7682              	.LBB6389:
 7683              	.LBB6387:
 7684              	.LBB6378:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 316


 7685              	.LBB6377:
 7686              	.LBB6375:
 7687              	.LBI6375:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7688              		.loc 14 239 10 is_stmt 1 view .LVU1768
 7689              	.LBB6376:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7690              		.loc 14 246 49 is_stmt 0 view .LVU1769
 7691 03c8 06FA07F7 		lsl	r7, r6, r7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7692              		.loc 14 246 42 view .LVU1770
 7693 03cc 1E7D     		ldrb	r6, [r3, #20]	@ zero_extendqisi2
 7694 03ce 26EA0706 		bic	r6, r6, r7
 7695 03d2 1E75     		strb	r6, [r3, #20]
 7696 03d4 7FE7     		b	.L446
 7697              	.LVL545:
 7698              	.L437:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7699              		.loc 14 246 42 view .LVU1771
 7700              	.LBE6376:
 7701              	.LBE6375:
 7702              	.LBE6377:
 7703              	.LBE6378:
 7704              	.LBE6387:
 7705              	.LBE6389:
 7706              	.LBE6395:
 7707              	.LBB6396:
 7708              	.LBB6369:
 7709              	.LBB6367:
 7710              	.LBB6357:
 7711              	.LBB6355:
 7712              	.LBB6352:
 7713              	.LBI6352:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7714              		.loc 14 239 10 is_stmt 1 view .LVU1772
 7715              	.LBB6353:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7716              		.loc 14 246 49 is_stmt 0 view .LVU1773
 7717 03d6 0127     		movs	r7, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7718              		.loc 14 246 55 view .LVU1774
 7719 03d8 04F0070C 		and	ip, r4, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7720              		.loc 14 246 49 view .LVU1775
 7721 03dc 07FA0CFC 		lsl	ip, r7, ip
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7722              		.loc 14 246 42 view .LVU1776
 7723 03e0 377D     		ldrb	r7, [r6, #20]	@ zero_extendqisi2
 7724 03e2 27EA0C07 		bic	r7, r7, ip
 7725 03e6 3775     		strb	r7, [r6, #20]
 7726 03e8 2DE7     		b	.L436
 7727              	.LVL546:
 7728              	.L415:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7729              		.loc 14 246 42 view .LVU1777
 7730              	.LBE6353:
 7731              	.LBE6352:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 317


 7732              	.LBE6355:
 7733              	.LBE6357:
 7734              	.LBE6367:
 7735              	.LBE6369:
 7736              	.LBE6396:
 7737              	.LBB6397:
 7738              	.LBB6309:
 7739              	.LBB6306:
 7740              	.LBB6294:
 7741              	.LBB6290:
 7742              	.LBB6285:
 7743              	.LBI6285:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7744              		.loc 14 239 10 is_stmt 1 view .LVU1778
 7745              	.LBB6286:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7746              		.loc 14 246 49 is_stmt 0 view .LVU1779
 7747 03ea 07FA0CFC 		lsl	ip, r7, ip
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7748              		.loc 14 246 42 view .LVU1780
 7749 03ee 377D     		ldrb	r7, [r6, #20]	@ zero_extendqisi2
 7750 03f0 0295     		str	r5, [sp, #8]
 7751 03f2 27EA0C07 		bic	r7, r7, ip
 7752 03f6 0095     		str	r5, [sp]
 7753 03f8 3775     		strb	r7, [r6, #20]
 7754 03fa 6CE6     		b	.L414
 7755              	.LVL547:
 7756              	.L459:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7757              		.loc 14 246 42 view .LVU1781
 7758              	.LBE6286:
 7759              	.LBE6285:
 7760              	.LBE6290:
 7761              	.LBE6294:
 7762              	.LBE6306:
 7763              	.LBE6309:
 7764              	.LBE6397:
 7765              	.LBB6398:
 7766              	.LBB6345:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7767              		.loc 5 230 42 view .LVU1782
 7768 03fc 4FF0FF36 		mov	r6, #-1
 7769 0400 0096     		str	r6, [sp]
 7770 0402 C5E6     		b	.L425
 7771              	.LVL548:
 7772              	.L463:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7773              		.loc 5 230 42 view .LVU1783
 7774 0404 0126     		movs	r6, #1
 7775 0406 0096     		str	r6, [sp]
 7776 0408 C5E6     		b	.L428
 7777              	.LVL549:
 7778              	.L496:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7779              		.loc 5 230 42 view .LVU1784
 7780              	.LBE6345:
 7781              	.LBE6398:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 318


 7782              	.LBB6399:
 7783              	.LBB6310:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7784              		.loc 5 239 19 view .LVU1785
 7785 040a 0126     		movs	r6, #1
 7786 040c 0496     		str	r6, [sp, #16]
 7787 040e 90E6     		b	.L416
 7788              	.LVL550:
 7789              	.L497:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7790              		.loc 5 239 19 view .LVU1786
 7791              	.LBE6310:
 7792              	.LBE6399:
 7793              	.LBB6400:
 7794              	.LBB6346:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7795              		.loc 5 239 33 view .LVU1787
 7796 0410 0126     		movs	r6, #1
 7797 0412 0196     		str	r6, [sp, #4]
 7798 0414 EDE6     		b	.L427
 7799              	.LBE6346:
 7800              	.LBE6400:
 7801              	.LBE6424:
 7802              		.cfi_endproc
 7803              	.LFE6194:
 7805 0416 00BF     		.section	.text._ZNSt14_Function_baseD2Ev,"axG",%progbits,_ZNSt14_Function_baseD5Ev,comdat
 7806              		.align	1
 7807              		.p2align 2,,3
 7808              		.weak	_ZNSt14_Function_baseD2Ev
 7809              		.syntax unified
 7810              		.thumb
 7811              		.thumb_func
 7812              		.fpu fpv5-d16
 7814              	_ZNSt14_Function_baseD2Ev:
 7815              	.LVL551:
 7816              	.LFB5034:
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 7817              		.loc 15 242 5 is_stmt 1 view -0
 7818              		.cfi_startproc
 7819              		@ args = 0, pretend = 0, frame = 0
 7820              		@ frame_needed = 0, uses_anonymous_args = 0
 7821              	.LBB6426:
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 7822              		.loc 15 244 7 view .LVU1789
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 7823              		.loc 15 244 11 is_stmt 0 view .LVU1790
 7824 0000 8368     		ldr	r3, [r0, #8]
 7825              	.LBE6426:
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 7826              		.loc 15 242 5 view .LVU1791
 7827 0002 10B5     		push	{r4, lr}
 7828              		.cfi_def_cfa_offset 8
 7829              		.cfi_offset 4, -8
 7830              		.cfi_offset 14, -4
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 7831              		.loc 15 242 5 view .LVU1792
 7832 0004 0446     		mov	r4, r0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 319


 7833              	.LBB6427:
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 7834              		.loc 15 244 7 view .LVU1793
 7835 0006 13B1     		cbz	r3, .L500
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 7836              		.loc 15 245 2 is_stmt 1 view .LVU1794
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 7837              		.loc 15 245 12 is_stmt 0 view .LVU1795
 7838 0008 0322     		movs	r2, #3
 7839 000a 0146     		mov	r1, r0
 7840 000c 9847     		blx	r3
 7841              	.LVL552:
 7842              	.L500:
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 7843              		.loc 15 245 12 view .LVU1796
 7844              	.LBE6427:
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 7845              		.loc 15 246 5 view .LVU1797
 7846 000e 2046     		mov	r0, r4
 7847 0010 10BD     		pop	{r4, pc}
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 7848              		.loc 15 246 5 view .LVU1798
 7849              		.cfi_endproc
 7850              	.LFE5034:
 7852              		.weak	_ZNSt14_Function_baseD1Ev
 7853              		.thumb_set _ZNSt14_Function_baseD1Ev,_ZNSt14_Function_baseD2Ev
 7854 0012 00BF     		.section	.text._ZN10jellybeans8MenuItemaSEOS0_.isra.0,"ax",%progbits
 7855              		.align	1
 7856              		.p2align 2,,3
 7857              		.syntax unified
 7858              		.thumb
 7859              		.thumb_func
 7860              		.fpu fpv5-d16
 7862              	_ZN10jellybeans8MenuItemaSEOS0_.isra.0:
 7863              	.LVL553:
 7864              	.LFB6205:
 7865              		.loc 28 21 11 is_stmt 1 view -0
 7866              		.cfi_startproc
 7867              		@ args = 0, pretend = 0, frame = 24
 7868              		@ frame_needed = 0, uses_anonymous_args = 0
 7869              		.loc 28 21 11 is_stmt 0 view .LVU1800
 7870 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 7871              		.cfi_def_cfa_offset 20
 7872              		.cfi_offset 4, -20
 7873              		.cfi_offset 5, -16
 7874              		.cfi_offset 6, -12
 7875              		.cfi_offset 7, -8
 7876              		.cfi_offset 14, -4
 7877 0002 0D46     		mov	r5, r1
 7878 0004 51F8043B 		ldr	r3, [r1], #4
 7879 0008 0446     		mov	r4, r0
 7880 000a 87B0     		sub	sp, sp, #28
 7881              		.cfi_def_cfa_offset 48
 7882              		.loc 28 21 11 view .LVU1801
 7883 000c 40F8043B 		str	r3, [r0], #4
 7884              	.LVL554:
 7885              	.LBB6484:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 320


 7886              	.LBB6485:
 7887              	.LBB6486:
 7888              	.LBB6487:
 7889              	.LBB6488:
 7890              	.LBB6489:
 7891              	.LBB6490:
 7892              	.LBB6491:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 7893              		.loc 26 111 13 view .LVU1802
 7894 0010 0027     		movs	r7, #0
 7895              	.LBE6491:
 7896              	.LBE6490:
 7897              	.LBE6489:
 7898              	.LBE6488:
 7899              	.LBE6487:
 7900              	.LBE6486:
 7901              	.LBE6485:
 7902              	.LBE6484:
 7903              		.loc 28 21 11 view .LVU1803
 7904 0012 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.isra.0
 7905              	.LVL555:
 7906 0016 05F11C01 		add	r1, r5, #28
 7907 001a 04F11C00 		add	r0, r4, #28
 7908              	.LBB6546:
 7909              	.LBB6544:
 7910              	.LBB6542:
 7911              	.LBB6540:
 684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector assignment operator.
 687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x will not be copied.
 691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is copied depends on the allocator traits.
 693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(const vector& __x);
 696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move assignment operator.
 700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  if the allocators permit it).
 704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Afterwards @a __x is a valid, but unspecified %vector.
 705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is moved depends on the allocator traits.
 707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	constexpr bool __move_storage =
 712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
 713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  || _Alloc_traits::_S_always_equal();
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 321


 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector list assignment operator.
 720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(initializer_list<value_type> __l)
 731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __val  Value to be assigned.
 742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  value.  Note that the assignment completely changes the
 745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the number of elements assigned.
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(size_type __n, const value_type& __val)
 750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_assign(__n, __val); }
 751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
 756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  range [__first,__last).
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
 770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 322


 771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(initializer_list<value_type> __l)
 795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Get a copy of the memory allocation object.
 802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::get_allocator;
 803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // iterators
 805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points to the first
 807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 323


 828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(end()); }
 849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  in reverse element order.
 863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(begin()); }
 867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cbegin() const noexcept
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 324


 885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cend() const noexcept
 894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crbegin() const noexcept
 903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crend() const noexcept
 912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.2] capacity
 916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _S_max_size(_M_get_Tp_allocator()); }
 925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  default constructed elements are appended.
 935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size)
 938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_default_append(__new_size - size());
 941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 325


 942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       shrink_to_fit()
 990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_shrink_to_fit(); }
 991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns the total number of elements that the %vector can
 995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  hold before needing to allocate more memory.
 996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 326


 999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
1000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 - this->_M_impl._M_start); }
1001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
1004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  equal end().)
1005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _GLIBCXX_NODISCARD bool
1007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
1008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return begin() == end(); }
1009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *          elements.
1013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements required.
1014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
1015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function attempts to reserve enough memory for the
1017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
1018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number requested is more than max_size(), length_error is
1019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  thrown.
1020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The advantage of this function is that if optimal code is a
1022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  necessity and the user can determine the number of elements
1023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that will be required, the user can reserve the memory in
1024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
1025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and copying of %vector data.
1026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reserve(size_type __n);
1029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // element access
1031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
1044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 327


1056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
1062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Safety check used only from at().
1069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_range_check(size_type __n) const
1071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n >= this->size())
1073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
1074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu) >= this->size() "
1075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu)"),
1076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				   __n, this->size());
1077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
1080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n)
1093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n) const
1111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 328


1113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the first
1118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
1122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
1129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
1133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the last
1140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
1144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
1151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element of the %vector.
1152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
1155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
1162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // data access
1163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
1165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
1166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp*
1168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
1169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 329


1170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp*
1172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
1173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.3] modifiers
1176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Add data to the end of the %vector.
1178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be added.
1179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation.  The function creates an
1181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element at the end of the %vector and assigns the given data
1182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
1183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  done in constant time if the %vector has preallocated space
1184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  available.
1185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(const value_type& __x)
1188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
1190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
1192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
1193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     __x);
1194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    ++this->_M_impl._M_finish;
1195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
1196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
1198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_realloc_insert(end(), __x);
1199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(value_type&& __x)
1204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
1205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201402L
1208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	reference
1209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace_back(_Args&&... __args);
1213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Removes last element.
1217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
1219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that no data is returned, and if the last element's
1221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
1222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  called.
1223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
1226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 330


1227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	--this->_M_impl._M_finish;
1229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
1230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
1231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
1236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __args  Arguments.
1238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert an object of type T constructed
1241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
1242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
1243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and if it is frequently used the user should consider using
1244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::list.
1245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace(const_iterator __position, _Args&&... __args)
1249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ return _M_emplace_aux(__position, std::forward<_Args>(__args)...); }
1250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
1264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, const value_type& __x);
1278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 331


1284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__x)); }
1295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
1300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the
1302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  specified by @a position.
1304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	auto __offset = __position - cbegin();
1313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(begin() + __offset, __l.begin(), __l.end(),
1314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			std::random_access_iterator_tag());
1315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	difference_type __offset = __position - cbegin();
1338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 332


1341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
1377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(const_iterator __position, _InputIterator __first,
1380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     __first, __last, __false_type());
1385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  return begin() + __offset;
1386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 333


1398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(iterator __position, _InputIterator __first,
1405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove element at given position.
1415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the element at the given position and thus
1419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  shorten the %vector by one.
1420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointer is the user's responsibility.
1427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __position)
1431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __position)
1434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__position); }
1435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove a range of elements.
1439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *                  erased.
1442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *           prior to erasing (or end()).
1444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the elements in the range
1446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the elements, and that if the elements themselves are
1452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 334


1455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __beg = begin();
1460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __cbeg = cbegin();
1461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __first, iterator __last)
1465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__first, __last); }
1466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Swaps data with another %vector.
1470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocators are swapped depends on the allocator traits.
1478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       swap(vector& __x) _GLIBCXX_NOEXCEPT
1481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_assert(_Alloc_traits::propagate_on_container_swap::value
1484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 || _M_get_Tp_allocator() == __x._M_get_Tp_allocator());
1485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				  __x._M_get_Tp_allocator());
1489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the user's responsibility.
1496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer
1508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_allocate_and_copy(size_type __n,
1509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 335


1512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try
1513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
1516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      return __result;
1517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __catch(...)
1519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _M_deallocate(__result, __n);
1521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __throw_exception_again;
1522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal constructor functions follow.
1527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(_S_check_init_len(
1538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		static_cast<size_type>(__n), _M_get_Tp_allocator()));
1539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			       __false_type)
1549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
1551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
1552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_InputIterator __first, _InputIterator __last,
1559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::input_iterator_tag)
1560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try {
1562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    for (; __first != __last; ++__first)
1563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      emplace_back(*__first);
1565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      push_back(*__first);
1567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  } __catch(...) {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 336


1569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    clear();
1570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __throw_exception_again;
1571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
1578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
1579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
1585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					this->_M_impl._M_start,
1587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // vector(n,value,a) constructor.
1592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
1597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the vector(n) constructor.
1602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_initialize(size_type __n)
1604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
1607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					   _M_get_Tp_allocator());
1608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // assignment work for the range versions.
1613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_assign(__n, __val); }
1622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 337


1626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __false_type)
1628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
1629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_InputIterator __first, _InputIterator __last,
1634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::input_iterator_tag);
1635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::forward_iterator_tag);
1641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by assign(n,t), and the range assign when it turns out
1643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // to be the same thing.
1644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_assign(size_type __n, const value_type& __val);
1646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal insert functions follow.
1648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,
1656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __true_type)
1657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_insert(__pos, __n, __val); }
1658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _InputIterator __first,
1663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   _InputIterator __last, __false_type)
1664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_insert(__pos, __first, __last,
1666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  std::__iterator_category(__first));
1667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _InputIterator __first,
1673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_InputIterator __last, std::input_iterator_tag);
1674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _ForwardIterator __first,
1679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
1682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // the same thing.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 338


1683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
1685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by resize(n).
1688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_append(size_type __n);
1690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       bool
1692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_shrink_to_fit();
1693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x)
1697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_aux(iterator __position, const value_type& __x);
1699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_realloc_insert(iterator __position, const value_type& __x);
1702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // A value_type object constructed with _Alloc_traits::construct()
1704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // and destroyed with _Alloc_traits::destroy().
1705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Temporary_value
1706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename... _Args>
1708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  explicit
1709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Temporary_value(vector* __vec, _Args&&... __args) : _M_this(__vec)
1710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(_M_this->_M_impl, _M_ptr(),
1712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     std::forward<_Args>(__args)...);
1713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	~_Temporary_value()
1716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _Alloc_traits::destroy(_M_this->_M_impl, _M_ptr()); }
1717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	value_type&
1719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_val() { return *_M_ptr(); }
1720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       private:
1722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Tp*
1723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_ptr() { return reinterpret_cast<_Tp*>(&__buf); }
1724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector* _M_this;
1726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typename aligned_storage<sizeof(_Tp), alignof(_Tp)>::type __buf;
1727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
1728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x) and other functions when insertion needs to
1730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // reallocate or move existing elements. _Arg is either _Tp& or _Tp.
1731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Arg>
1732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_aux(iterator __position, _Arg&& __arg);
1734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_realloc_insert(iterator __position, _Args&&... __args);
1738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Either move-construct at the end, or forward to _M_insert_aux.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 339


1740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_rval(const_iterator __position, value_type&& __v);
1742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Try to emplace at the end, otherwise forward to _M_insert_aux.
1744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_emplace_aux(const_iterator __position, _Args&&... __args);
1747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Emplacing an rvalue of the correct type can use _M_insert_rval.
1749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_emplace_aux(const_iterator __position, value_type&& __v)
1751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__v)); }
1752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by _M_fill_insert, _M_insert_aux etc.
1755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
1756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_check_len(size_type __n, const char* __s) const
1757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (max_size() - size() < __n)
1759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
1760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_type __len = size() + (std::max)(size(), __n);
1762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
1763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by constructors to check initial size.
1766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static size_type
1767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_check_init_len(size_type __n, const allocator_type& __a)
1768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n > _S_max_size(_Tp_alloc_type(__a)))
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
1771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
1772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n;
1773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static size_type
1776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
1777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
1779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
1780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// (even if std::allocator_traits::max_size says we can).
1781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_t __diffmax
1782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
1783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_t __allocmax = _Alloc_traits::max_size(__a);
1784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (std::min)(__diffmax, __allocmax);
1785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal erase functions follow.
1788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
1790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _M_assign_aux.
1791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
1793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (size_type __n = this->_M_impl._M_finish - __pos)
1795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::_Destroy(__pos, this->_M_impl._M_finish,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 340


1797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  _M_get_Tp_allocator());
1798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish = __pos;
1799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_SHRINK(__n);
1800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_erase(iterator __position);
1805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_erase(iterator __first, iterator __last);
1808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
1811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Constant-time move assignment when source object's memory can be
1812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // moved, either because the source's allocator will move too
1813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // or because the allocators are equal.
1814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_move_assign(vector&& __x, true_type) noexcept
1816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector __tmp(get_allocator());
 7912              		.loc 26 1817 9 view .LVU1804
 7913 001e 02AE     		add	r6, sp, #8
 7914              	.LBE6540:
 7915              	.LBE6542:
 7916              	.LBE6544:
 7917              	.LBE6546:
 7918              		.loc 28 21 11 view .LVU1805
 7919 0020 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.isra.0
 7920              	.LVL556:
 7921              	.LBB6547:
 7922              	.LBI6484:
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7923              		.loc 26 709 7 is_stmt 1 view .LVU1806
 7924              	.LBB6545:
 7925              	.LBB6543:
 7926              	.LBI6486:
1815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7927              		.loc 26 1815 7 view .LVU1807
 7928              	.LBB6541:
 7929              	.LBB6507:
 7930              	.LBI6507:
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 7931              		.loc 26 284 7 view .LVU1808
 7932              	.LBB6508:
 7933              	.LBI6508:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7934              		.loc 19 147 7 view .LVU1809
 7935              	.LBB6509:
 7936              	.LBI6509:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7937              		.loc 20 82 7 view .LVU1810
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7938              		.loc 20 82 7 is_stmt 0 view .LVU1811
 7939              	.LBE6509:
 7940              	.LBE6508:
 7941              	.LBE6507:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 341


 7942              	.LBB6510:
 7943              	.LBI6510:
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a) { }
 7944              		.loc 26 497 7 is_stmt 1 view .LVU1812
 7945              	.LBB6511:
 7946              	.LBI6511:
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 7947              		.loc 26 293 7 view .LVU1813
 7948              	.LBB6512:
 7949              	.LBI6512:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 7950              		.loc 26 136 2 view .LVU1814
 7951              	.LBB6513:
 7952              	.LBI6513:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7953              		.loc 19 147 7 view .LVU1815
 7954              	.LBB6514:
 7955              	.LBI6514:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7956              		.loc 20 82 7 view .LVU1816
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7957              		.loc 20 82 7 is_stmt 0 view .LVU1817
 7958              	.LBE6514:
 7959              	.LBE6513:
 7960              	.LBB6515:
 7961              	.LBI6515:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 7962              		.loc 26 97 2 is_stmt 1 view .LVU1818
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 7963              		.loc 26 97 2 is_stmt 0 view .LVU1819
 7964              	.LBE6515:
 7965              	.LBE6512:
 7966              	.LBE6511:
 7967              	.LBE6510:
 7968              	.LBB6516:
 7969              	.LBI6516:
 7970              		.loc 19 162 7 is_stmt 1 view .LVU1820
 7971              	.LBB6517:
 7972              	.LBI6517:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7973              		.loc 20 89 7 view .LVU1821
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7974              		.loc 20 89 7 is_stmt 0 view .LVU1822
 7975              	.LBE6517:
 7976              	.LBE6516:
 7977              	.LBB6518:
 7978              	.LBI6518:
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 7979              		.loc 26 117 2 is_stmt 1 view .LVU1823
 7980              	.LBB6519:
 7981              	.LBB6520:
 7982              	.LBI6520:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 7983              		.loc 26 97 2 view .LVU1824
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 7984              		.loc 26 97 2 is_stmt 0 view .LVU1825
 7985              	.LBE6520:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 342


 7986              	.LBB6521:
 7987              	.LBI6521:
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 7988              		.loc 26 109 2 is_stmt 1 view .LVU1826
 7989              	.LBB6522:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 7990              		.loc 26 111 19 is_stmt 0 view .LVU1827
 7991 0024 636B     		ldr	r3, [r4, #52]
 7992              	.LVL557:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 7993              		.loc 26 111 19 view .LVU1828
 7994              	.LBE6522:
 7995              	.LBE6521:
 7996              	.LBB6525:
 7997              	.LBB6526:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 7998              		.loc 26 113 28 view .LVU1829
 7999 0026 EA6B     		ldr	r2, [r5, #60]
 8000              	.LBE6526:
 8001              	.LBE6525:
 8002              	.LBE6519:
 8003              	.LBE6518:
 8004              		.loc 26 1817 9 view .LVU1830
 8005 0028 3046     		mov	r0, r6
 8006              	.LBB6535:
 8007              	.LBB6504:
 8008              	.LBB6494:
 8009              	.LBB6495:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 8010              		.loc 26 111 13 view .LVU1831
 8011 002a 0293     		str	r3, [sp, #8]
 8012              	.LBE6495:
 8013              	.LBE6494:
 8014              	.LBE6504:
 8015              	.LBE6535:
 8016              	.LBB6536:
 8017              	.LBB6533:
 8018              	.LBB6529:
 8019              	.LBB6523:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 8020              		.loc 26 112 20 view .LVU1832
 8021 002c A36B     		ldr	r3, [r4, #56]
 8022              	.LVL558:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 8023              		.loc 26 112 20 view .LVU1833
 8024              	.LBE6523:
 8025              	.LBE6529:
 8026              	.LBE6533:
 8027              	.LBE6536:
 8028              	.LBB6537:
 8029              	.LBB6505:
 8030              	.LBB6498:
 8031              	.LBB6496:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 8032              		.loc 26 112 14 view .LVU1834
 8033 002e 0393     		str	r3, [sp, #12]
 8034              	.LBE6496:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 343


 8035              	.LBE6498:
 8036              	.LBE6505:
 8037              	.LBE6537:
 8038              	.LBB6538:
 8039              	.LBB6534:
 8040              	.LBB6530:
 8041              	.LBB6527:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 8042              		.loc 26 111 19 view .LVU1835
 8043 0030 6B6B     		ldr	r3, [r5, #52]
 8044              	.LVL559:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 8045              		.loc 26 111 13 view .LVU1836
 8046 0032 6363     		str	r3, [r4, #52]
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 8047              		.loc 26 112 20 view .LVU1837
 8048 0034 AB6B     		ldr	r3, [r5, #56]
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 8049              		.loc 26 112 14 view .LVU1838
 8050 0036 A363     		str	r3, [r4, #56]
 8051              	.LVL560:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 8052              		.loc 26 112 14 view .LVU1839
 8053              	.LBE6527:
 8054              	.LBE6530:
 8055              	.LBB6531:
 8056              	.LBB6524:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 8057              		.loc 26 113 28 view .LVU1840
 8058 0038 E36B     		ldr	r3, [r4, #60]
 8059              	.LVL561:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 8060              		.loc 26 113 28 view .LVU1841
 8061              	.LBE6524:
 8062              	.LBE6531:
 8063              	.LBB6532:
 8064              	.LBI6525:
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 8065              		.loc 26 109 2 is_stmt 1 view .LVU1842
 8066              	.LBB6528:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 8067              		.loc 26 113 22 is_stmt 0 view .LVU1843
 8068 003a E263     		str	r2, [r4, #60]
 8069              	.LVL562:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 8070              		.loc 26 113 22 view .LVU1844
 8071              	.LBE6528:
 8072              	.LBE6532:
 8073              	.LBE6534:
 8074              	.LBE6538:
 8075              	.LBB6539:
 8076              	.LBI6488:
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 8077              		.loc 26 117 2 is_stmt 1 view .LVU1845
 8078              	.LBB6506:
 8079              	.LBB6499:
 8080              	.LBI6499:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 344


  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8081              		.loc 26 97 2 view .LVU1846
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8082              		.loc 26 97 2 is_stmt 0 view .LVU1847
 8083              	.LBE6499:
 8084              	.LBB6500:
 8085              	.LBI6494:
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 8086              		.loc 26 109 2 is_stmt 1 view .LVU1848
 8087              	.LBE6500:
 8088              	.LBB6501:
 8089              	.LBB6492:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 8090              		.loc 26 113 22 is_stmt 0 view .LVU1849
 8091 003c EF63     		str	r7, [r5, #60]
 8092              	.LBE6492:
 8093              	.LBE6501:
 8094              	.LBB6502:
 8095              	.LBB6497:
 8096 003e 0493     		str	r3, [sp, #16]
 8097              	.LVL563:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 8098              		.loc 26 113 22 view .LVU1850
 8099              	.LBE6497:
 8100              	.LBE6502:
 8101              	.LBB6503:
 8102              	.LBI6490:
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 8103              		.loc 26 109 2 is_stmt 1 view .LVU1851
 8104              	.LBB6493:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 8105              		.loc 26 112 14 is_stmt 0 view .LVU1852
 8106 0040 C5E90D77 		strd	r7, r7, [r5, #52]
 8107              	.LBE6493:
 8108              	.LBE6503:
 8109              	.LBE6506:
 8110              	.LBE6539:
 8111              		.loc 26 1817 9 view .LVU1853
 8112 0044 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 8113              	.LVL564:
 8114              		.loc 26 1817 9 view .LVU1854
 8115              	.LBE6541:
 8116              	.LBE6543:
 8117              	.LBE6545:
 8118              	.LBE6547:
 8119              	.LBB6548:
 8120              	.LBI6548:
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       private _Function_base
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Func,
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	       typename _Res2 = __invoke_result<_Func&, _ArgTypes...>>
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	struct _Callable
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	: __is_invocable_impl<_Res2, _Res>::type
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ };
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // Used so the return type convertibility checks aren't done when
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 345


 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // performing overload resolution for copy construction/assignment.
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Tp>
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	struct _Callable<function, _Tp> : false_type { };
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Cond, typename _Tp>
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	using _Requires = typename enable_if<_Cond::value, _Tp>::type;
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     public:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       typedef _Res result_type;
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // [3.7.2.1] construct/copy/destroy
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Default construct creates an empty function call wrapper.
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @post @c !(bool)*this
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function() noexcept
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       : _Function_base() { }
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Creates an empty function call wrapper.
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @post @c !(bool)*this
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(nullptr_t) noexcept
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       : _Function_base() { }
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function copy constructor.
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __x A %function object with identical call signature.
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @post @c bool(*this) == bool(__x)
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The newly-created %function contains a copy of the target of @a
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  __x (if it has one).
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(const function& __x);
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function move constructor.
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __x A %function object rvalue with identical call signature.
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The newly-created %function contains the target of @a __x
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  (if it has one).
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(function&& __x) noexcept : _Function_base()
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	__x.swap(*this);
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Builds a %function that targets a copy of the incoming
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  function object.
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __f A %function object that is callable with parameters of
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  type @c T1, @c T2, ..., @c TN and returns a value convertible
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  to @c Res.
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The newly-created %function object will target a copy of
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @a __f. If @a __f is @c reference_wrapper<F>, then this function
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 346


 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  object will contain a reference to the function object @c
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  __f.get(). If @a __f is a NULL function pointer or NULL
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  pointer-to-member, the newly-created object will be empty.
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  If @a __f is a non-NULL function pointer or an object of type @c
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  reference_wrapper<F>, this function will not throw.
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Functor,
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	       typename = _Requires<__not_<is_same<_Functor, function>>, void>,
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	       typename = _Requires<_Callable<_Functor>, void>>
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	function(_Functor);
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function assignment operator.
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __x A %function with identical call signature.
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @post @c (bool)*this == (bool)x
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @returns @c *this
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The target of @a __x is copied to @c *this. If @a __x has no
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  target, then @c *this will be empty.
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  If @a __x targets a function pointer or a reference to a function
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  object, then this operation will not throw an %exception.
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function&
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       operator=(const function& __x)
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	function(__x).swap(*this);
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	return *this;
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function move-assignment operator.
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __x A %function rvalue with identical call signature.
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @returns @c *this
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The target of @a __x is moved to @c *this. If @a __x has no
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  target, then @c *this will be empty.
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  If @a __x targets a function pointer or a reference to a function
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  object, then this operation will not throw an %exception.
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function&
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       operator=(function&& __x) noexcept
 8121              		.loc 15 414 7 is_stmt 1 view .LVU1855
 8122              	.LBB6549:
 8123              	.LBB6550:
 8124              	.LBI6550:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 8125              		.loc 15 357 7 view .LVU1856
 8126              	.LBB6551:
 8127              	.LBB6552:
 8128              	.LBI6552:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 8129              		.loc 15 240 5 view .LVU1857
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 8130              		.loc 15 240 5 is_stmt 0 view .LVU1858
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 347


 8131              	.LBE6552:
 8132              	.LBB6553:
 8133              	.LBI6553:
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	function(std::move(__x)).swap(*this);
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	return *this;
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function assignment to zero.
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @post @c !(bool)*this
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @returns @c *this
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The target of @c *this is deallocated, leaving it empty.
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function&
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       operator=(nullptr_t) noexcept
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	if (_M_manager)
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  {
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _M_manager(_M_functor, _M_functor, __destroy_functor);
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _M_manager = nullptr;
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _M_invoker = nullptr;
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  }
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	return *this;
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function assignment to a new target.
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __f A %function object that is callable with parameters of
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  type @c T1, @c T2, ..., @c TN and returns a value convertible
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  to @c Res.
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @return @c *this
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  This  %function object wrapper will target a copy of @a
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  __f. If @a __f is @c reference_wrapper<F>, then this function
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  object will contain a reference to the function object @c
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  __f.get(). If @a __f is a NULL function pointer or NULL
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  pointer-to-member, @c this object will be empty.
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  If @a __f is a non-NULL function pointer or an object of type @c
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  reference_wrapper<F>, this function will not throw.
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Functor>
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_Requires<_Callable<typename decay<_Functor>::type>, function&>
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	operator=(_Functor&& __f)
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  function(std::forward<_Functor>(__f)).swap(*this);
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  return *this;
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /// @overload
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Functor>
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	function&
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	operator=(reference_wrapper<_Functor> __f) noexcept
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  function(__f).swap(*this);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 348


 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  return *this;
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // [3.7.2.2] function modifiers
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Swap the targets of two %function objects.
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __x A %function with identical call signature.
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  Swap the targets of @c this function object and @a __f. This
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  function will not throw an %exception.
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       void swap(function& __x) noexcept
 8134              		.loc 15 481 12 is_stmt 1 view .LVU1859
 8135              	.LBB6554:
 8136              	.LBI6554:
 8137              		.file 34 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\mov
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Move, forward and identity for C++11 + swap -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** /** @file bits/move.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #ifndef _MOVE_H
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _MOVE_H 1
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #include <bits/c++config.h>
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus < 201103L
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** # include <bits/concept_check.h>
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** {
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 349


  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // Used, in C++03 mode too, by allocators, etc.
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief Same as C++11 std::addressof
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @ingroup utilities
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     inline _GLIBCXX_CONSTEXPR _Tp*
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return __builtin_addressof(__r); }
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus >= 201103L
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** } // namespace
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #include <type_traits> // Brings in std::declval too.
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** {
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @addtogroup utilities
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @{
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Forward an lvalue.
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to the specified type.
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr _Tp&&
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Forward an rvalue.
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to the specified type.
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr _Tp&&
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     {
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 		    " substituting _Tp is an lvalue reference type");
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       return static_cast<_Tp&&>(__t);
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     }
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Convert a value to an rvalue.
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __t  A thing of arbitrary type.
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 350


  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   */
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     move(_Tp&& __t) noexcept
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     struct __move_if_noexcept_cond
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     : public __and_<__not_<is_nothrow_move_constructible<_Tp>>,
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****                     is_copy_constructible<_Tp>>::type { };
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Conditionally convert a value to an rvalue.
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __x  A thing of arbitrary type.
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter, possibly cast to an rvalue-reference.
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  Same as std::move unless the type's move constructor could throw and the
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  type is copyable, in which case an lvalue-reference is returned instead.
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr typename
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     conditional<__move_if_noexcept_cond<_Tp>::value, const _Tp&, _Tp&&>::type
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     move_if_noexcept(_Tp& __x) noexcept
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return std::move(__x); }
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // declval, from type_traits.
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus > 201402L
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // 2296. std::addressof should be constexpr
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** # define __cpp_lib_addressof_constexpr 201603
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief Returns the actual address of the object or function
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *         referenced by r, even in the presence of an overloaded
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *         operator&.
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __r  Reference to an object or function.
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return   The actual address.
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   */
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     inline _GLIBCXX17_CONSTEXPR _Tp*
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     addressof(_Tp& __r) noexcept
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return std::__addressof(__r); }
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // 2598. addressof works on temporaries
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     const _Tp* addressof(const _Tp&&) = delete;
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // C++11 version of std::exchange for internal use.
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template <typename _Tp, typename _Up = _Tp>
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX20_CONSTEXPR
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     inline _Tp
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     __exchange(_Tp& __obj, _Up&& __new_val)
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     {
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       _Tp __old_val = std::move(__obj);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 351


 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __obj = std::forward<_Up>(__new_val);
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       return __old_val;
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     }
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /// @} group utilities
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _GLIBCXX_MOVE(__val) std::move(__val)
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _GLIBCXX_FORWARD(_Tp, __val) std::forward<_Tp>(__val)
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #else
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _GLIBCXX_MOVE(__val) (__val)
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _GLIBCXX_FORWARD(_Tp, __val) (__val)
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @addtogroup utilities
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @{
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief Swaps two values.
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __a  A thing of arbitrary type.
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __b  Another thing of arbitrary type.
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return   Nothing.
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   */
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX20_CONSTEXPR
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     inline
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus >= 201103L
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     typename enable_if<__and_<__not_<__is_tuple_like<_Tp>>,
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 			      is_move_constructible<_Tp>,
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 			      is_move_assignable<_Tp>>::value>::type
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #else
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     void
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     swap(_Tp& __a, _Tp& __b)
 8138              		.loc 34 189 5 view .LVU1860
 8139              	.LBB6555:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 				is_nothrow_move_assignable<_Tp>>::value)
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     {
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus < 201103L
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       // concept requirements
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       _Tp __tmp = _GLIBCXX_MOVE(__a);
 8140              		.loc 34 197 11 is_stmt 0 view .LVU1861
 8141 0048 05F1400C 		add	ip, r5, #64
 8142              	.LVL565:
 8143              		.loc 34 197 11 view .LVU1862
 8144 004c 6B46     		mov	r3, sp
 8145              	.LBE6555:
 8146              	.LBE6554:
 8147              	.LBE6553:
 8148              	.LBE6551:
 8149              	.LBE6550:
 8150              	.LBB6568:
 8151              	.LBB6569:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 352


 8152              	.LBB6570:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __a = _GLIBCXX_MOVE(__b);
 8153              		.loc 34 198 7 view .LVU1863
 8154 004e 04F14002 		add	r2, r4, #64
 8155              	.LVL566:
 8156              		.loc 34 198 7 view .LVU1864
 8157              	.LBE6570:
 8158              	.LBE6569:
 8159              	.LBE6568:
 8160              	.LBB6579:
 8161              	.LBB6567:
 8162              	.LBB6566:
 8163              	.LBB6558:
 8164              	.LBB6556:
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __a = _GLIBCXX_MOVE(__b);
 8165              		.loc 34 197 11 view .LVU1865
 8166 0052 9CE80300 		ldm	ip, {r0, r1}
 8167 0056 83E80300 		stm	r3, {r0, r1}
 8168              		.loc 34 198 7 view .LVU1866
 8169 005a 96E80300 		ldm	r6, {r0, r1}
 8170 005e 8CE80300 		stm	ip, {r0, r1}
 8171              	.LBE6556:
 8172              	.LBE6558:
 8173              	.LBB6559:
 8174              	.LBB6560:
 8175              		.loc 34 198 11 view .LVU1867
 8176 0062 0599     		ldr	r1, [sp, #20]
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __a = _GLIBCXX_MOVE(__b);
 8177              		.loc 34 197 11 view .LVU1868
 8178 0064 D5F84CC0 		ldr	ip, [r5, #76]
 8179              	.LVL567:
 8180              		.loc 34 198 11 view .LVU1869
 8181 0068 E964     		str	r1, [r5, #76]
 8182              	.LBE6560:
 8183              	.LBE6559:
 8184              	.LBB6561:
 8185              	.LBB6562:
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __a = _GLIBCXX_MOVE(__b);
 8186              		.loc 34 197 11 view .LVU1870
 8187 006a D5F848E0 		ldr	lr, [r5, #72]
 8188              		.loc 34 198 11 view .LVU1871
 8189 006e AF64     		str	r7, [r5, #72]
 8190              	.LBE6562:
 8191              	.LBE6561:
 8192              	.LBB6563:
 8193              	.LBB6557:
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8194              		.loc 34 199 7 view .LVU1872
 8195 0070 93E80300 		ldm	r3, {r0, r1}
 8196 0074 86E80300 		stm	r6, {r0, r1}
 8197              	.LVL568:
 8198              		.loc 34 199 7 view .LVU1873
 8199              	.LBE6557:
 8200              	.LBE6563:
 8201              	.LBB6564:
 8202              	.LBI6561:
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 353


 8203              		.loc 34 189 5 is_stmt 1 view .LVU1874
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8204              		.loc 34 189 5 is_stmt 0 view .LVU1875
 8205              	.LBE6564:
 8206              	.LBB6565:
 8207              	.LBI6559:
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8208              		.loc 34 189 5 is_stmt 1 view .LVU1876
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8209              		.loc 34 189 5 is_stmt 0 view .LVU1877
 8210              	.LBE6565:
 8211              	.LBE6566:
 8212              	.LBE6567:
 8213              	.LBE6579:
 8214              	.LBB6580:
 8215              	.LBI6568:
 8216              		.loc 15 481 12 is_stmt 1 view .LVU1878
 8217              	.LBB6572:
 8218              	.LBI6569:
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8219              		.loc 34 189 5 view .LVU1879
 8220              	.LBB6571:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8221              		.loc 34 198 7 is_stmt 0 view .LVU1880
 8222 0078 92E80300 		ldm	r2, {r0, r1}
 8223 007c 86E80300 		stm	r6, {r0, r1}
 8224              		.loc 34 199 7 view .LVU1881
 8225 0080 93E80300 		ldm	r3, {r0, r1}
 8226 0084 82E80300 		stm	r2, {r0, r1}
 8227              	.LVL569:
 8228              		.loc 34 199 7 view .LVU1882
 8229              	.LBE6571:
 8230              	.LBE6572:
 8231              	.LBB6573:
 8232              	.LBI6573:
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8233              		.loc 34 189 5 is_stmt 1 view .LVU1883
 8234              	.LBB6574:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8235              		.loc 34 198 11 is_stmt 0 view .LVU1884
 8236 0088 A36C     		ldr	r3, [r4, #72]
 8237              	.LBE6574:
 8238              	.LBE6573:
 8239              	.LBE6580:
 8240              	.LBB6581:
 8241              	.LBB6582:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 8242              		.loc 15 303 11 view .LVU1885
 8243 008a 3046     		mov	r0, r6
 8244              	.LBE6582:
 8245              	.LBE6581:
 8246              	.LBB6584:
 8247              	.LBB6576:
 8248              	.LBB6575:
 8249              		.loc 34 199 11 view .LVU1886
 8250 008c C4F848E0 		str	lr, [r4, #72]
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 354


 8251              		.loc 34 198 11 view .LVU1887
 8252 0090 0493     		str	r3, [sp, #16]
 8253              	.LVL570:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8254              		.loc 34 198 11 view .LVU1888
 8255              	.LBE6575:
 8256              	.LBE6576:
 8257              	.LBB6577:
 8258              	.LBI6577:
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8259              		.loc 34 189 5 is_stmt 1 view .LVU1889
 8260              	.LBB6578:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8261              		.loc 34 198 11 is_stmt 0 view .LVU1890
 8262 0092 E36C     		ldr	r3, [r4, #76]
 8263              		.loc 34 199 11 view .LVU1891
 8264 0094 C4F84CC0 		str	ip, [r4, #76]
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8265              		.loc 34 198 11 view .LVU1892
 8266 0098 0593     		str	r3, [sp, #20]
 8267              	.LVL571:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8268              		.loc 34 198 11 view .LVU1893
 8269              	.LBE6578:
 8270              	.LBE6577:
 8271              	.LBE6584:
 8272              	.LBB6585:
 8273              	.LBI6581:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 8274              		.loc 15 303 11 is_stmt 1 view .LVU1894
 8275              	.LBB6583:
 8276 009a FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 8277              	.LVL572:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 8278              		.loc 15 303 11 is_stmt 0 view .LVU1895
 8279              	.LBE6583:
 8280              	.LBE6585:
 8281              	.LBE6549:
 8282              	.LBE6548:
 8283              		.loc 28 21 11 view .LVU1896
 8284 009e 07B0     		add	sp, sp, #28
 8285              		.cfi_def_cfa_offset 20
 8286              		@ sp needed
 8287 00a0 F0BD     		pop	{r4, r5, r6, r7, pc}
 8288              		.loc 28 21 11 view .LVU1897
 8289              		.cfi_endproc
 8290              	.LFE6205:
 8292 00a2 00BF     		.section	.text._ZN10jellybeans8MenuItemD2Ev,"axG",%progbits,_ZN10jellybeans8MenuItemD5Ev,comdat
 8293              		.align	1
 8294              		.p2align 2,,3
 8295              		.weak	_ZN10jellybeans8MenuItemD2Ev
 8296              		.syntax unified
 8297              		.thumb
 8298              		.thumb_func
 8299              		.fpu fpv5-d16
 8301              	_ZN10jellybeans8MenuItemD2Ev:
 8302              	.LVL573:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 355


 8303              	.LFB5107:
 8304              		.loc 28 21 11 is_stmt 1 view -0
 8305              		.cfi_startproc
 8306              		@ args = 0, pretend = 0, frame = 0
 8307              		@ frame_needed = 0, uses_anonymous_args = 0
 8308              		.loc 28 21 11 is_stmt 0 view .LVU1899
 8309 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 8310              		.cfi_def_cfa_offset 24
 8311              		.cfi_offset 3, -24
 8312              		.cfi_offset 4, -20
 8313              		.cfi_offset 5, -16
 8314              		.cfi_offset 6, -12
 8315              		.cfi_offset 7, -8
 8316              		.cfi_offset 14, -4
 8317              	.LBB6665:
 8318              	.LBB6666:
 8319              	.LBB6667:
 8320              	.LBB6668:
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 8321              		.loc 15 244 11 view .LVU1900
 8322 0002 836C     		ldr	r3, [r0, #72]
 8323              	.LBE6668:
 8324              	.LBE6667:
 8325              	.LBE6666:
 8326              	.LBE6665:
 8327              		.loc 28 21 11 view .LVU1901
 8328 0004 0646     		mov	r6, r0
 8329              	.LVL574:
 8330              	.LBB6674:
 8331              	.LBI6665:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 8332              		.loc 15 303 11 is_stmt 1 view .LVU1902
 8333              	.LBB6673:
 8334              	.LBB6671:
 8335              	.LBI6667:
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 8336              		.loc 15 242 5 view .LVU1903
 8337              	.LBB6669:
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 8338              		.loc 15 244 7 view .LVU1904
 8339 0006 23B1     		cbz	r3, .L508
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 8340              		.loc 15 245 2 view .LVU1905
 8341              	.LBE6669:
 8342              	.LBE6671:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 8343              		.loc 15 303 11 is_stmt 0 view .LVU1906
 8344 0008 00F14001 		add	r1, r0, #64
 8345              	.LVL575:
 8346              	.LBB6672:
 8347              	.LBB6670:
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 8348              		.loc 15 245 12 view .LVU1907
 8349 000c 0322     		movs	r2, #3
 8350 000e 0846     		mov	r0, r1
 8351              	.LVL576:
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 356


 8352              		.loc 15 245 12 view .LVU1908
 8353 0010 9847     		blx	r3
 8354              	.LVL577:
 8355              	.L508:
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 8356              		.loc 15 245 12 view .LVU1909
 8357              	.LBE6670:
 8358              	.LBE6672:
 8359              	.LBE6673:
 8360              	.LBE6674:
 8361              	.LBB6675:
 8362              	.LBI6675:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8363              		.loc 26 678 7 is_stmt 1 view .LVU1910
 8364              	.LBB6676:
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 8365              		.loc 26 680 15 is_stmt 0 view .LVU1911
 8366 0012 D6E90D57 		ldrd	r5, r7, [r6, #52]
 8367              	.LVL578:
 8368              	.LBB6677:
 8369              	.LBI6677:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 8370              		.loc 26 276 7 is_stmt 1 view .LVU1912
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 8371              		.loc 26 276 7 is_stmt 0 view .LVU1913
 8372              	.LBE6677:
 8373              	.LBB6678:
 8374              	.LBI6678:
 8375              		.loc 25 735 5 is_stmt 1 view .LVU1914
 8376              	.LBB6679:
 8377              	.LBB6680:
 8378              	.LBB6681:
 8379              	.LBB6682:
 8380              		.loc 27 151 19 view .LVU1915
 8381 0016 BD42     		cmp	r5, r7
 8382 0018 0FD0     		beq	.L509
 8383 001a 05F10804 		add	r4, r5, #8
 8384              	.LVL579:
 8385              	.L511:
 8386              	.LBB6683:
 8387              	.LBI6683:
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 8388              		.loc 27 135 5 view .LVU1916
 8389              	.LBB6684:
 8390              	.LBI6684:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 8391              		.loc 18 657 7 view .LVU1917
 8392              	.LBB6685:
 8393              	.LBI6685:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8394              		.loc 18 229 7 view .LVU1918
 8395              	.LBB6686:
 8396              	.LBB6687:
 8397              	.LBI6687:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 8398              		.loc 18 221 7 view .LVU1919
 8399              	.LBB6688:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 357


 8400              	.LBI6688:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8401              		.loc 18 186 7 view .LVU1920
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8402              		.loc 18 186 7 is_stmt 0 view .LVU1921
 8403              	.LBE6688:
 8404              	.LBE6687:
 8405              	.LBB6691:
 8406              	.LBI6691:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8407              		.loc 18 236 7 is_stmt 1 view .LVU1922
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8408              		.loc 18 236 7 is_stmt 0 view .LVU1923
 8409              	.LBE6691:
 8410              	.LBB6699:
 8411              	.LBB6690:
 8412              	.LBB6689:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8413              		.loc 18 187 28 view .LVU1924
 8414 001e 54F8080C 		ldr	r0, [r4, #-8]
 8415              	.LVL580:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8416              		.loc 18 187 28 view .LVU1925
 8417              	.LBE6689:
 8418              	.LBE6690:
 8419              	.LBE6699:
 8420              	.LBB6700:
 8421              	.LBB6692:
 8422              	.LBB6693:
 8423              	.LBI6693:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8424              		.loc 25 491 7 is_stmt 1 view .LVU1926
 8425              	.LBB6694:
 8426              	.LBI6694:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8427              		.loc 20 120 7 view .LVU1927
 8428              	.LBE6694:
 8429              	.LBE6693:
 8430              	.LBE6692:
 8431              	.LBE6700:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8432              		.loc 18 231 2 is_stmt 0 view .LVU1928
 8433 0022 8442     		cmp	r4, r0
 8434              	.LBE6686:
 8435              	.LBE6685:
 8436              	.LBE6684:
 8437              	.LBE6683:
 8438              		.loc 27 151 19 view .LVU1929
 8439 0024 04F11804 		add	r4, r4, #24
 8440              	.LBB6708:
 8441              	.LBB6707:
 8442              	.LBB6703:
 8443              	.LBB6702:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8444              		.loc 18 231 2 view .LVU1930
 8445 0028 03D0     		beq	.L510
 8446              	.LBB6701:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 358


 8447              	.LBB6698:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8448              		.loc 18 237 34 view .LVU1931
 8449 002a A968     		ldr	r1, [r5, #8]
 8450              	.LBB6697:
 8451              	.LBB6696:
 8452              	.LBB6695:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8453              		.loc 20 133 19 view .LVU1932
 8454 002c 0131     		adds	r1, r1, #1
 8455              	.LVL581:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8456              		.loc 20 133 19 view .LVU1933
 8457 002e FFF7FEFF 		bl	_ZdlPvj
 8458              	.LVL582:
 8459              	.L510:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8460              		.loc 20 133 19 view .LVU1934
 8461              	.LBE6695:
 8462              	.LBE6696:
 8463              	.LBE6697:
 8464              	.LBE6698:
 8465              	.LBE6701:
 8466              	.LBE6702:
 8467              	.LBE6703:
 8468              	.LBB6704:
 8469              	.LBI6704:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8470              		.loc 18 150 14 is_stmt 1 view .LVU1935
 8471              	.LBB6705:
 8472              	.LBI6705:
 8473              		.loc 19 162 7 view .LVU1936
 8474              	.LBB6706:
 8475              	.LBI6706:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8476              		.loc 20 89 7 view .LVU1937
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8477              		.loc 20 89 7 is_stmt 0 view .LVU1938
 8478              	.LBE6706:
 8479              	.LBE6705:
 8480              	.LBE6704:
 8481              	.LBE6707:
 8482              	.LBE6708:
 8483              		.loc 27 151 4 is_stmt 1 view .LVU1939
 8484 0032 1835     		adds	r5, r5, #24
 8485              	.LVL583:
 8486              		.loc 27 151 19 view .LVU1940
 8487 0034 AF42     		cmp	r7, r5
 8488 0036 F2D1     		bne	.L511
 8489              	.LBE6682:
 8490              	.LBE6681:
 8491              	.LBE6680:
 8492              	.LBE6679:
 8493              	.LBE6678:
 8494              	.LBB6709:
 8495              	.LBB6710:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 359


 8496              		.loc 26 335 15 is_stmt 0 view .LVU1941
 8497 0038 776B     		ldr	r7, [r6, #52]
 8498              	.LVL584:
 8499              	.L509:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 8500              		.loc 26 335 15 view .LVU1942
 8501              	.LBE6710:
 8502              	.LBI6709:
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8503              		.loc 26 333 7 is_stmt 1 view .LVU1943
 8504              	.LBB6725:
 8505              	.LBB6711:
 8506              	.LBI6711:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8507              		.loc 26 350 7 view .LVU1944
 8508              	.LBB6712:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 8509              		.loc 26 353 2 is_stmt 0 view .LVU1945
 8510 003a 27B1     		cbz	r7, .L512
 8511              	.LVL585:
 8512              	.LBB6713:
 8513              	.LBI6713:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8514              		.loc 25 491 7 is_stmt 1 view .LVU1946
 8515              	.LBB6714:
 8516              	.LBB6715:
 8517              	.LBI6715:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8518              		.loc 20 120 7 view .LVU1947
 8519              	.LBE6715:
 8520              	.LBE6714:
 8521              	.LBE6713:
 8522              	.LBE6712:
 8523              	.LBE6711:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 8524              		.loc 26 336 35 is_stmt 0 view .LVU1948
 8525 003c F16B     		ldr	r1, [r6, #60]
 8526              	.LBB6721:
 8527              	.LBB6720:
 8528              	.LBB6719:
 8529              	.LBB6718:
 8530              	.LBB6717:
 8531              	.LBB6716:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8532              		.loc 20 133 19 view .LVU1949
 8533 003e 3846     		mov	r0, r7
 8534 0040 C91B     		subs	r1, r1, r7
 8535 0042 FFF7FEFF 		bl	_ZdlPvj
 8536              	.LVL586:
 8537              	.L512:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8538              		.loc 20 133 19 view .LVU1950
 8539              	.LBE6716:
 8540              	.LBE6717:
 8541              	.LBE6718:
 8542              	.LBE6719:
 8543              	.LBE6720:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 360


 8544              	.LBE6721:
 8545              	.LBB6722:
 8546              	.LBI6722:
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 8547              		.loc 26 128 14 is_stmt 1 view .LVU1951
 8548              	.LBB6723:
 8549              	.LBI6723:
 8550              		.loc 19 162 7 view .LVU1952
 8551              	.LBB6724:
 8552              	.LBI6724:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8553              		.loc 20 89 7 view .LVU1953
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8554              		.loc 20 89 7 is_stmt 0 view .LVU1954
 8555              	.LBE6724:
 8556              	.LBE6723:
 8557              	.LBE6722:
 8558              	.LBE6725:
 8559              	.LBE6709:
 8560              	.LBE6676:
 8561              	.LBE6675:
 8562              	.LBB6726:
 8563              	.LBI6726:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 8564              		.loc 18 657 7 is_stmt 1 view .LVU1955
 8565              	.LBB6727:
 8566              	.LBI6727:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8567              		.loc 18 229 7 view .LVU1956
 8568              	.LBB6728:
 8569              	.LBB6729:
 8570              	.LBI6729:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 8571              		.loc 18 221 7 view .LVU1957
 8572              	.LBB6730:
 8573              	.LBI6730:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8574              		.loc 18 186 7 view .LVU1958
 8575              	.LBB6731:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8576              		.loc 18 187 28 is_stmt 0 view .LVU1959
 8577 0046 F069     		ldr	r0, [r6, #28]
 8578              	.LVL587:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8579              		.loc 18 187 28 view .LVU1960
 8580              	.LBE6731:
 8581              	.LBE6730:
 8582              	.LBB6732:
 8583              	.LBI6732:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8584              		.loc 18 200 7 is_stmt 1 view .LVU1961
 8585              	.LBB6733:
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 8586              		.loc 18 203 57 is_stmt 0 view .LVU1962
 8587 0048 06F12403 		add	r3, r6, #36
 8588              	.LBE6733:
 8589              	.LBE6732:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 361


 8590              	.LBE6729:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8591              		.loc 18 231 2 view .LVU1963
 8592 004c 9842     		cmp	r0, r3
 8593 004e 03D0     		beq	.L513
 8594              	.LVL588:
 8595              	.LBB6734:
 8596              	.LBI6734:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8597              		.loc 18 236 7 is_stmt 1 view .LVU1964
 8598              	.LBB6735:
 8599              	.LBB6736:
 8600              	.LBI6736:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8601              		.loc 25 491 7 view .LVU1965
 8602              	.LBB6737:
 8603              	.LBI6737:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8604              		.loc 20 120 7 view .LVU1966
 8605              	.LBE6737:
 8606              	.LBE6736:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8607              		.loc 18 237 34 is_stmt 0 view .LVU1967
 8608 0050 716A     		ldr	r1, [r6, #36]
 8609              	.LBB6740:
 8610              	.LBB6739:
 8611              	.LBB6738:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8612              		.loc 20 133 19 view .LVU1968
 8613 0052 0131     		adds	r1, r1, #1
 8614              	.LVL589:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8615              		.loc 20 133 19 view .LVU1969
 8616 0054 FFF7FEFF 		bl	_ZdlPvj
 8617              	.LVL590:
 8618              	.L513:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8619              		.loc 20 133 19 view .LVU1970
 8620              	.LBE6738:
 8621              	.LBE6739:
 8622              	.LBE6740:
 8623              	.LBE6735:
 8624              	.LBE6734:
 8625              	.LBE6728:
 8626              	.LBE6727:
 8627              	.LBB6741:
 8628              	.LBI6741:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8629              		.loc 18 150 14 is_stmt 1 view .LVU1971
 8630              	.LBB6742:
 8631              	.LBI6742:
 8632              		.loc 19 162 7 view .LVU1972
 8633              	.LBB6743:
 8634              	.LBI6743:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8635              		.loc 20 89 7 view .LVU1973
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 362


 8636              		.loc 20 89 7 is_stmt 0 view .LVU1974
 8637              	.LBE6743:
 8638              	.LBE6742:
 8639              	.LBE6741:
 8640              	.LBE6726:
 8641              	.LBB6744:
 8642              	.LBI6744:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 8643              		.loc 18 657 7 is_stmt 1 view .LVU1975
 8644              	.LBB6745:
 8645              	.LBI6745:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8646              		.loc 18 229 7 view .LVU1976
 8647              	.LBB6746:
 8648              	.LBB6747:
 8649              	.LBI6747:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 8650              		.loc 18 221 7 view .LVU1977
 8651              	.LBB6748:
 8652              	.LBI6748:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8653              		.loc 18 186 7 view .LVU1978
 8654              	.LBB6749:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8655              		.loc 18 187 28 is_stmt 0 view .LVU1979
 8656 0058 7068     		ldr	r0, [r6, #4]
 8657              	.LVL591:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8658              		.loc 18 187 28 view .LVU1980
 8659              	.LBE6749:
 8660              	.LBE6748:
 8661              	.LBB6750:
 8662              	.LBI6750:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8663              		.loc 18 200 7 is_stmt 1 view .LVU1981
 8664              	.LBB6751:
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 8665              		.loc 18 203 57 is_stmt 0 view .LVU1982
 8666 005a 06F10C03 		add	r3, r6, #12
 8667              	.LBE6751:
 8668              	.LBE6750:
 8669              	.LBE6747:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8670              		.loc 18 231 2 view .LVU1983
 8671 005e 9842     		cmp	r0, r3
 8672 0060 03D0     		beq	.L514
 8673              	.LVL592:
 8674              	.LBB6752:
 8675              	.LBI6752:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8676              		.loc 18 236 7 is_stmt 1 view .LVU1984
 8677              	.LBB6753:
 8678              	.LBB6754:
 8679              	.LBI6754:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8680              		.loc 25 491 7 view .LVU1985
 8681              	.LBB6755:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 363


 8682              	.LBI6755:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8683              		.loc 20 120 7 view .LVU1986
 8684              	.LBE6755:
 8685              	.LBE6754:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8686              		.loc 18 237 34 is_stmt 0 view .LVU1987
 8687 0062 F168     		ldr	r1, [r6, #12]
 8688              	.LBB6758:
 8689              	.LBB6757:
 8690              	.LBB6756:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8691              		.loc 20 133 19 view .LVU1988
 8692 0064 0131     		adds	r1, r1, #1
 8693              	.LVL593:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8694              		.loc 20 133 19 view .LVU1989
 8695 0066 FFF7FEFF 		bl	_ZdlPvj
 8696              	.LVL594:
 8697              	.L514:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8698              		.loc 20 133 19 view .LVU1990
 8699              	.LBE6756:
 8700              	.LBE6757:
 8701              	.LBE6758:
 8702              	.LBE6753:
 8703              	.LBE6752:
 8704              	.LBE6746:
 8705              	.LBE6745:
 8706              	.LBB6759:
 8707              	.LBI6759:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8708              		.loc 18 150 14 is_stmt 1 view .LVU1991
 8709              	.LBB6760:
 8710              	.LBI6760:
 8711              		.loc 19 162 7 view .LVU1992
 8712              	.LBB6761:
 8713              	.LBI6761:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8714              		.loc 20 89 7 view .LVU1993
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8715              		.loc 20 89 7 is_stmt 0 view .LVU1994
 8716              	.LBE6761:
 8717              	.LBE6760:
 8718              	.LBE6759:
 8719              	.LBE6744:
 8720              		.loc 28 21 11 view .LVU1995
 8721 006a 3046     		mov	r0, r6
 8722 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8723              		.loc 28 21 11 view .LVU1996
 8724              		.cfi_endproc
 8725              	.LFE5107:
 8727              		.weak	_ZN10jellybeans8MenuItemD1Ev
 8728              		.thumb_set _ZN10jellybeans8MenuItemD1Ev,_ZN10jellybeans8MenuItemD2Ev
 8729 006e 00BF     		.section	.text._Z14updateControlsv,"ax",%progbits
 8730              		.align	1
 8731              		.p2align 2,,3
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 364


 8732              		.global	_Z14updateControlsv
 8733              		.syntax unified
 8734              		.thumb
 8735              		.thumb_func
 8736              		.fpu fpv5-d16
 8738              	_Z14updateControlsv:
 8739              	.LFB5122:
 104:Jellybeans.cpp **** 
 105:Jellybeans.cpp **** void cbVoicing(){
 106:Jellybeans.cpp ****     arp->getChord()->setVoicing(mVoicing->value());
 107:Jellybeans.cpp ****     updateOled();
 108:Jellybeans.cpp ****     arp->updateTraversal();
 109:Jellybeans.cpp ****     updateOled();
 110:Jellybeans.cpp **** };
 111:Jellybeans.cpp **** 
 112:Jellybeans.cpp **** int main(void) {
 113:Jellybeans.cpp ****     // Initialize hardware
 114:Jellybeans.cpp ****     patch.Init();
 115:Jellybeans.cpp **** 
 116:Jellybeans.cpp ****     // Initialize arp
 117:Jellybeans.cpp ****     arp = new Arp();
 118:Jellybeans.cpp **** 
 119:Jellybeans.cpp ****     // Initialize menu items
 120:Jellybeans.cpp ****     // Note that the positions of items 0-3 need to remain fixed
 121:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 122:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 123:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 124:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 125:Jellybeans.cpp ****     menuItems[4] = MenuItem("Tonic    ", allNotes,       0, cb);
 126:Jellybeans.cpp ****     menuItems[5] = MenuItem("Scale    ", modes,          0, cb);
 127:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", arpRhythms,     0, cb); // Rhythm
 128:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 129:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cb);
 130:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 131:Jellybeans.cpp **** 
 132:Jellybeans.cpp ****     // Initialize CV params
 133:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 134:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 135:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 136:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 137:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 138:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 139:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 140:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 141:Jellybeans.cpp **** 
 142:Jellybeans.cpp ****     // Initialize variables
 143:Jellybeans.cpp ****     arpNoteDacOutput1 = 0.f;
 144:Jellybeans.cpp ****     menuPos     = 0;
 145:Jellybeans.cpp ****     isEditing   = false;
 146:Jellybeans.cpp ****     debugString = "I'm a debug string";
 147:Jellybeans.cpp **** 
 148:Jellybeans.cpp ****     patch.StartAdc();
 149:Jellybeans.cpp **** 
 150:Jellybeans.cpp ****     // Main event loop
 151:Jellybeans.cpp ****     while(1){
 152:Jellybeans.cpp ****         updateControls();
 153:Jellybeans.cpp ****         updateOled();
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 365


 154:Jellybeans.cpp ****         updateOutputs();
 155:Jellybeans.cpp ****     }
 156:Jellybeans.cpp **** }
 157:Jellybeans.cpp **** 
 158:Jellybeans.cpp **** // Handle any input to Patches' controls
 159:Jellybeans.cpp **** void updateControls() {
 8740              		.loc 17 159 23 is_stmt 1 view -0
 8741              		.cfi_startproc
 8742              		@ args = 0, pretend = 0, frame = 0
 8743              		@ frame_needed = 0, uses_anonymous_args = 0
 160:Jellybeans.cpp ****     patch.ProcessAnalogControls();
 8744              		.loc 17 160 5 view .LVU1998
 159:Jellybeans.cpp ****     patch.ProcessAnalogControls();
 8745              		.loc 17 159 23 is_stmt 0 view .LVU1999
 8746 0000 38B5     		push	{r3, r4, r5, lr}
 8747              		.cfi_def_cfa_offset 16
 8748              		.cfi_offset 3, -16
 8749              		.cfi_offset 4, -12
 8750              		.cfi_offset 5, -8
 8751              		.cfi_offset 14, -4
 8752              		.loc 17 160 32 view .LVU2000
 8753 0002 4A48     		ldr	r0, .L540
 8754 0004 FFF7FEFF 		bl	_ZN5daisy10DaisyPatch21ProcessAnalogControlsEv
 8755              	.LVL595:
 161:Jellybeans.cpp ****     patch.ProcessDigitalControls();
 8756              		.loc 17 161 5 is_stmt 1 view .LVU2001
 8757              		.loc 17 161 33 is_stmt 0 view .LVU2002
 8758 0008 4848     		ldr	r0, .L540
 8759 000a FFF7FEFF 		bl	_ZN5daisy10DaisyPatch22ProcessDigitalControlsEv
 8760              	.LVL596:
 162:Jellybeans.cpp **** 
 163:Jellybeans.cpp ****     // Parse CV values
 164:Jellybeans.cpp ****     int curCvVal;
 8761              		.loc 17 164 5 is_stmt 1 view .LVU2003
 165:Jellybeans.cpp ****     // Pattern
 166:Jellybeans.cpp ****     curCvVal = static_cast<int>(patternParam.Process());
 8762              		.loc 17 166 5 view .LVU2004
 8763              		.loc 17 166 53 is_stmt 0 view .LVU2005
 8764 000e 4848     		ldr	r0, .L540+4
 8765 0010 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 8766              	.LVL597:
 8767              		.loc 17 166 14 view .LVU2006
 8768 0014 FDEEC07A 		vcvt.s32.f32	s15, s0
 167:Jellybeans.cpp ****     if(curCvVal != patternCurCvVal){
 8769              		.loc 17 167 17 view .LVU2007
 8770 0018 464D     		ldr	r5, .L540+8
 166:Jellybeans.cpp ****     if(curCvVal != patternCurCvVal){
 8771              		.loc 17 166 14 view .LVU2008
 8772 001a 17EE904A 		vmov	r4, s15	@ int
 8773              	.LVL598:
 8774              		.loc 17 167 5 is_stmt 1 view .LVU2009
 8775 001e 2B68     		ldr	r3, [r5]
 8776 0020 A342     		cmp	r3, r4
 8777 0022 05D0     		beq	.L524
 168:Jellybeans.cpp ****         menuItems[0].setIndex(curCvVal);
 8778              		.loc 17 168 9 view .LVU2010
 8779              	.LVL599:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 366


 8780              	.LBB6762:
 8781              	.LBI6762:
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef _Tp 	    			      value_type;
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef value_type*			      pointer;
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef const value_type*                       const_pointer;
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef value_type&                   	      reference;
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef const value_type&             	      const_reference;
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef value_type*          		      iterator;
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef const value_type*			      const_iterator;
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::size_t                    	      size_type;
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::ptrdiff_t                   	      difference_type;
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::reverse_iterator<iterator>	      reverse_iterator;
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // Support for zero-sized arrays mandatory.
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef _GLIBCXX_STD_C::__array_traits<_Tp, _Nm> _AT_Type;
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typename _AT_Type::_Type                         _M_elems;
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // No explicit construct/copy/destroy for aggregate type.
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // DR 776.
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX20_CONSTEXPR void
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       fill(const value_type& __u)
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { std::fill_n(begin(), size(), __u); }
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX20_CONSTEXPR void
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       swap(array& __other)
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       noexcept(_AT_Type::_Is_nothrow_swappable::value)
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { std::swap_ranges(begin(), end(), __other.begin()); }
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // Iterators.
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR iterator
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       begin() noexcept
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return iterator(data()); }
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       begin() const noexcept
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data()); }
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR iterator
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       end() noexcept
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return iterator(data() + _Nm); }
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       end() const noexcept
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data() + _Nm); }
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       rbegin() noexcept
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return reverse_iterator(end()); }
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       rbegin() const noexcept
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(end()); }
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 367


 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       rend() noexcept
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return reverse_iterator(begin()); }
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       rend() const noexcept
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(begin()); }
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       cbegin() const noexcept
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data()); }
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       cend() const noexcept
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data() + _Nm); }
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       crbegin() const noexcept
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(end()); }
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       crend() const noexcept
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(begin()); }
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // Capacity.
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       constexpr size_type
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       size() const noexcept { return _Nm; }
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       constexpr size_type
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       max_size() const noexcept { return _Nm; }
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX_NODISCARD constexpr bool
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       empty() const noexcept { return size() == 0; }
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // Element access.
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR reference
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       operator[](size_type __n) noexcept
 8782              		.loc 24 185 7 view .LVU2011
 8783              	.LBB6763:
 8784              	.LBI6763:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8785              		.loc 24 55 7 view .LVU2012
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8786              		.loc 24 55 7 is_stmt 0 view .LVU2013
 8787              	.LBE6763:
 8788              	.LBE6762:
 8789              		.loc 17 168 30 view .LVU2014
 8790 0024 17EE901A 		vmov	r1, s15	@ int
 8791 0028 4348     		ldr	r0, .L540+12
 8792 002a FFF7FEFF 		bl	_ZN10jellybeans8MenuItem8setIndexEi
 8793              	.LVL600:
 169:Jellybeans.cpp ****         patternCurCvVal = curCvVal;
 8794              		.loc 17 169 9 is_stmt 1 view .LVU2015
 8795              		.loc 17 169 25 is_stmt 0 view .LVU2016
 8796 002e 2C60     		str	r4, [r5]
 8797              	.L524:
 170:Jellybeans.cpp ****     }
 171:Jellybeans.cpp ****     // Division
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 368


 172:Jellybeans.cpp ****     curCvVal = static_cast<int>(divisionParam.Process());
 8798              		.loc 17 172 5 is_stmt 1 view .LVU2017
 8799              		.loc 17 172 54 is_stmt 0 view .LVU2018
 8800 0030 4248     		ldr	r0, .L540+16
 8801 0032 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 8802              	.LVL601:
 8803              		.loc 17 172 14 view .LVU2019
 8804 0036 FDEEC07A 		vcvt.s32.f32	s15, s0
 173:Jellybeans.cpp ****     if(curCvVal != divisionCurCvVal){
 8805              		.loc 17 173 17 view .LVU2020
 8806 003a 414D     		ldr	r5, .L540+20
 172:Jellybeans.cpp ****     if(curCvVal != divisionCurCvVal){
 8807              		.loc 17 172 14 view .LVU2021
 8808 003c 17EE904A 		vmov	r4, s15	@ int
 8809              	.LVL602:
 8810              		.loc 17 173 5 is_stmt 1 view .LVU2022
 8811 0040 2B68     		ldr	r3, [r5]
 8812 0042 A342     		cmp	r3, r4
 8813 0044 05D0     		beq	.L525
 174:Jellybeans.cpp ****         menuItems[1].setIndex(curCvVal);
 8814              		.loc 17 174 9 view .LVU2023
 8815              	.LVL603:
 8816              	.LBB6764:
 8817              	.LBI6764:
 8818              		.loc 24 185 7 view .LVU2024
 8819              	.LBB6765:
 8820              	.LBI6765:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8821              		.loc 24 55 7 view .LVU2025
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8822              		.loc 24 55 7 is_stmt 0 view .LVU2026
 8823              	.LBE6765:
 8824              	.LBE6764:
 8825              		.loc 17 174 30 view .LVU2027
 8826 0046 17EE901A 		vmov	r1, s15	@ int
 8827 004a 3E48     		ldr	r0, .L540+24
 8828 004c FFF7FEFF 		bl	_ZN10jellybeans8MenuItem8setIndexEi
 8829              	.LVL604:
 175:Jellybeans.cpp ****         divisionCurCvVal = curCvVal;
 8830              		.loc 17 175 9 is_stmt 1 view .LVU2028
 8831              		.loc 17 175 26 is_stmt 0 view .LVU2029
 8832 0050 2C60     		str	r4, [r5]
 8833              	.L525:
 176:Jellybeans.cpp ****     }
 177:Jellybeans.cpp ****     // Voicing
 178:Jellybeans.cpp ****     curCvVal = static_cast<int>(voicingParam.Process());
 8834              		.loc 17 178 5 is_stmt 1 view .LVU2030
 8835              		.loc 17 178 53 is_stmt 0 view .LVU2031
 8836 0052 3D48     		ldr	r0, .L540+28
 8837 0054 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 8838              	.LVL605:
 8839              		.loc 17 178 14 view .LVU2032
 8840 0058 FDEEC07A 		vcvt.s32.f32	s15, s0
 179:Jellybeans.cpp ****     if(curCvVal != voicingCurCvVal){
 8841              		.loc 17 179 17 view .LVU2033
 8842 005c 3B4D     		ldr	r5, .L540+32
 178:Jellybeans.cpp ****     if(curCvVal != voicingCurCvVal){
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 369


 8843              		.loc 17 178 14 view .LVU2034
 8844 005e 17EE904A 		vmov	r4, s15	@ int
 8845              	.LVL606:
 8846              		.loc 17 179 5 is_stmt 1 view .LVU2035
 8847 0062 2B68     		ldr	r3, [r5]
 8848 0064 A342     		cmp	r3, r4
 8849 0066 05D0     		beq	.L526
 180:Jellybeans.cpp ****         menuItems[2].setIndex(curCvVal);
 8850              		.loc 17 180 9 view .LVU2036
 8851              	.LVL607:
 8852              	.LBB6766:
 8853              	.LBI6766:
 8854              		.loc 24 185 7 view .LVU2037
 8855              	.LBB6767:
 8856              	.LBI6767:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8857              		.loc 24 55 7 view .LVU2038
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8858              		.loc 24 55 7 is_stmt 0 view .LVU2039
 8859              	.LBE6767:
 8860              	.LBE6766:
 8861              		.loc 17 180 30 view .LVU2040
 8862 0068 17EE901A 		vmov	r1, s15	@ int
 8863 006c 3848     		ldr	r0, .L540+36
 8864 006e FFF7FEFF 		bl	_ZN10jellybeans8MenuItem8setIndexEi
 8865              	.LVL608:
 181:Jellybeans.cpp ****         voicingCurCvVal = curCvVal;
 8866              		.loc 17 181 9 is_stmt 1 view .LVU2041
 8867              		.loc 17 181 25 is_stmt 0 view .LVU2042
 8868 0072 2C60     		str	r4, [r5]
 8869              	.L526:
 182:Jellybeans.cpp ****     }
 183:Jellybeans.cpp ****     // Inversion
 184:Jellybeans.cpp ****     curCvVal = static_cast<int>(inversionParam.Process());
 8870              		.loc 17 184 5 is_stmt 1 view .LVU2043
 8871              		.loc 17 184 55 is_stmt 0 view .LVU2044
 8872 0074 3748     		ldr	r0, .L540+40
 8873 0076 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 8874              	.LVL609:
 8875              		.loc 17 184 14 view .LVU2045
 8876 007a FDEEC07A 		vcvt.s32.f32	s15, s0
 185:Jellybeans.cpp ****     if(curCvVal != inversionCurCvVal){
 8877              		.loc 17 185 17 view .LVU2046
 8878 007e 364D     		ldr	r5, .L540+44
 184:Jellybeans.cpp ****     if(curCvVal != inversionCurCvVal){
 8879              		.loc 17 184 14 view .LVU2047
 8880 0080 17EE904A 		vmov	r4, s15	@ int
 8881              	.LVL610:
 8882              		.loc 17 185 5 is_stmt 1 view .LVU2048
 8883 0084 2B68     		ldr	r3, [r5]
 8884 0086 A342     		cmp	r3, r4
 8885 0088 05D0     		beq	.L527
 186:Jellybeans.cpp ****         menuItems[3].setIndex(curCvVal);
 8886              		.loc 17 186 9 view .LVU2049
 8887              	.LVL611:
 8888              	.LBB6768:
 8889              	.LBI6768:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 370


 8890              		.loc 24 185 7 view .LVU2050
 8891              	.LBB6769:
 8892              	.LBI6769:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8893              		.loc 24 55 7 view .LVU2051
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8894              		.loc 24 55 7 is_stmt 0 view .LVU2052
 8895              	.LBE6769:
 8896              	.LBE6768:
 8897              		.loc 17 186 30 view .LVU2053
 8898 008a 17EE901A 		vmov	r1, s15	@ int
 8899 008e 3348     		ldr	r0, .L540+48
 8900 0090 FFF7FEFF 		bl	_ZN10jellybeans8MenuItem8setIndexEi
 8901              	.LVL612:
 187:Jellybeans.cpp ****         inversionCurCvVal = curCvVal;
 8902              		.loc 17 187 9 is_stmt 1 view .LVU2054
 8903              		.loc 17 187 27 is_stmt 0 view .LVU2055
 8904 0094 2C60     		str	r4, [r5]
 8905              	.L527:
 188:Jellybeans.cpp ****     }
 189:Jellybeans.cpp **** 
 190:Jellybeans.cpp ****     if(!isEditing)
 8906              		.loc 17 190 5 is_stmt 1 view .LVU2056
 8907              	.LBB6770:
 8908              		.loc 17 190 8 is_stmt 0 view .LVU2057
 8909 0096 324C     		ldr	r4, .L540+52
 8910              	.LVL613:
 8911              		.loc 17 190 5 view .LVU2058
 8912 0098 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 8913 009a DBB9     		cbnz	r3, .L528
 191:Jellybeans.cpp ****     {
 192:Jellybeans.cpp ****         // Update menu position
 193:Jellybeans.cpp ****         menuPos += patch.encoder.Increment();
 8914              		.loc 17 193 9 is_stmt 1 view .LVU2059
 8915              	.LVL614:
 8916              	.LBB6771:
 8917              	.LBI6771:
  22:../../libdaisy/src/hid/encoder.h **** 
  23:../../libdaisy/src/hid/encoder.h ****     /** Initializes the encoder with the specified hardware pins.
  24:../../libdaisy/src/hid/encoder.h ****      * Update rate is to be deprecated in a future release
  25:../../libdaisy/src/hid/encoder.h ****      */
  26:../../libdaisy/src/hid/encoder.h ****     void Init(dsy_gpio_pin a,
  27:../../libdaisy/src/hid/encoder.h ****               dsy_gpio_pin b,
  28:../../libdaisy/src/hid/encoder.h ****               dsy_gpio_pin click,
  29:../../libdaisy/src/hid/encoder.h ****               float        update_rate = 0.f);
  30:../../libdaisy/src/hid/encoder.h ****     /** Called at update_rate to debounce and handle timing for the switch.
  31:../../libdaisy/src/hid/encoder.h ****      * In order for events not to be missed, its important that the Edge/Pressed checks be made at 
  32:../../libdaisy/src/hid/encoder.h ****      */
  33:../../libdaisy/src/hid/encoder.h ****     void Debounce();
  34:../../libdaisy/src/hid/encoder.h **** 
  35:../../libdaisy/src/hid/encoder.h ****     /** Returns +1 if the encoder was turned clockwise, -1 if it was turned counter-clockwise, or 0
  36:../../libdaisy/src/hid/encoder.h ****     inline int32_t Increment() const { return inc_; }
 8918              		.loc 7 36 20 view .LVU2060
 8919              	.LBB6772:
 8920              		.loc 7 36 40 view .LVU2061
 8921              		.loc 7 36 40 is_stmt 0 view .LVU2062
 8922              	.LBE6772:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 371


 8923              	.LBE6771:
 8924              		.loc 17 193 17 view .LVU2063
 8925 009c 3149     		ldr	r1, .L540+56
 8926              	.LBB6774:
 8927              	.LBB6773:
 8928              		.loc 7 36 47 view .LVU2064
 8929 009e 234D     		ldr	r5, .L540
 8930              	.LBE6773:
 8931              	.LBE6774:
 8932              		.loc 17 193 17 view .LVU2065
 8933 00a0 0A68     		ldr	r2, [r1]
 8934 00a2 686D     		ldr	r0, [r5, #84]
 8935 00a4 0244     		add	r2, r2, r0
 194:Jellybeans.cpp ****     
 195:Jellybeans.cpp ****         if (menuPos > (int) menuItems.size() - 1) {
 8936              		.loc 17 195 9 is_stmt 1 view .LVU2066
 8937 00a6 092A     		cmp	r2, #9
 8938 00a8 23DC     		bgt	.L538
 196:Jellybeans.cpp ****             menuPos = (int) menuItems.size() - 1;
 197:Jellybeans.cpp ****         } else if (menuPos <= 0) {
 8939              		.loc 17 197 16 view .LVU2067
 193:Jellybeans.cpp ****     
 8940              		.loc 17 193 17 is_stmt 0 view .LVU2068
 8941 00aa 002A     		cmp	r2, #0
 8942 00ac C8BF     		it	gt
 8943 00ae 1346     		movgt	r3, r2
 8944 00b0 0B60     		str	r3, [r1]
 8945              	.L530:
 198:Jellybeans.cpp ****             menuPos = 0;
 199:Jellybeans.cpp ****         }
 200:Jellybeans.cpp **** 
 201:Jellybeans.cpp ****         isEditing = patch.encoder.RisingEdge();
 8946              		.loc 17 201 9 is_stmt 1 view .LVU2069
 8947              	.LVL615:
 8948              	.LBB6775:
 8949              	.LBI6775:
  37:../../libdaisy/src/hid/encoder.h **** 
  38:../../libdaisy/src/hid/encoder.h ****     /** Returns true if the encoder was just pressed. */
  39:../../libdaisy/src/hid/encoder.h ****     inline bool RisingEdge() const { return sw_.RisingEdge(); }
 8950              		.loc 7 39 17 view .LVU2070
 8951              	.LBE6775:
 8952              	.LBE6770:
 8953              		.loc 7 39 38 view .LVU2071
 8954              	.LBB6805:
 8955              	.LBB6782:
 8956              	.LBB6776:
 8957              	.LBI6776:
  43:../../libdaisy/src/hid/switch.h **** 
  44:../../libdaisy/src/hid/switch.h ****     /** 
  45:../../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../../libdaisy/src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../../libdaisy/src/hid/switch.h ****     */
  52:../../libdaisy/src/hid/switch.h ****     void
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 372


  53:../../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../libdaisy/src/hid/switch.h **** 
  55:../../libdaisy/src/hid/switch.h ****     /**
  56:../../libdaisy/src/hid/switch.h ****        Simplified Init.
  57:../../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../../libdaisy/src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../libdaisy/src/hid/switch.h ****     */
  60:../../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../../libdaisy/src/hid/switch.h **** 
  62:../../libdaisy/src/hid/switch.h ****     /** 
  63:../../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../libdaisy/src/hid/switch.h ****     */
  67:../../libdaisy/src/hid/switch.h ****     void Debounce();
  68:../../libdaisy/src/hid/switch.h **** 
  69:../../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 8958              		.loc 8 70 17 view .LVU2072
 8959              	.LBB6777:
 8960              		.loc 8 70 38 view .LVU2073
 8961              		.loc 8 70 38 is_stmt 0 view .LVU2074
 8962              	.LBE6777:
 8963              	.LBE6776:
 8964              	.LBE6782:
 8965              	.LBE6805:
 202:Jellybeans.cpp ****     }
 203:Jellybeans.cpp ****     else
 204:Jellybeans.cpp ****     {
 205:Jellybeans.cpp ****         // Update selected menu item's value
 206:Jellybeans.cpp ****         int inc = patch.encoder.Increment();
 207:Jellybeans.cpp ****         if (inc > 0){
 208:Jellybeans.cpp ****             menuItems[menuPos].increment();
 209:Jellybeans.cpp ****         } else if (inc < 0){
 210:Jellybeans.cpp ****             menuItems[menuPos].decrement();
 211:Jellybeans.cpp ****         }
 212:Jellybeans.cpp **** 
 213:Jellybeans.cpp ****         isEditing = !patch.encoder.RisingEdge();
 214:Jellybeans.cpp ****     }
 215:Jellybeans.cpp **** 
 216:Jellybeans.cpp ****     // Update step with respect to clock
 217:Jellybeans.cpp ****     // Accept input from either GATE IN
 218:Jellybeans.cpp ****     //
 219:Jellybeans.cpp ****     // Currently, we'll just do 1 step per clock pulse
 220:Jellybeans.cpp ****     if(patch.gate_input[0].Trig() || patch.gate_input[1].Trig())
 8966              		.loc 17 220 5 is_stmt 1 view .LVU2075
 8967              	.LBB6806:
 8968              	.LBB6783:
 8969              	.LBB6780:
 8970              	.LBB6778:
 8971              		.loc 8 70 55 is_stmt 0 view .LVU2076
 8972 00b2 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 8973              	.LBE6778:
 8974              	.LBE6780:
 8975              	.LBE6783:
 8976              	.LBE6806:
 8977              		.loc 17 220 32 view .LVU2077
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 373


 8978 00b6 2C48     		ldr	r0, .L540+60
 8979              	.LBB6807:
 8980              	.LBB6784:
 8981              	.LBB6781:
 8982              	.LBB6779:
 8983              		.loc 8 70 55 view .LVU2078
 8984 00b8 A3F17F03 		sub	r3, #127
 8985 00bc B3FA83F3 		clz	r3, r3
 8986 00c0 5B09     		lsrs	r3, r3, #5
 8987 00c2 2370     		strb	r3, [r4]
 8988              	.LBE6779:
 8989              	.LBE6781:
 8990              	.LBE6784:
 8991              	.LBE6807:
 8992              		.loc 17 220 32 view .LVU2079
 8993 00c4 FFF7FEFF 		bl	_ZN5daisy6GateIn4TrigEv
 8994              	.LVL616:
 8995              		.loc 17 220 35 view .LVU2080
 8996 00c8 50BB     		cbnz	r0, .L536
 8997              	.L535:
 8998              		.loc 17 220 62 discriminator 2 view .LVU2081
 8999 00ca 2848     		ldr	r0, .L540+64
 9000 00cc FFF7FEFF 		bl	_ZN5daisy6GateIn4TrigEv
 9001              	.LVL617:
 9002              		.loc 17 220 35 discriminator 2 view .LVU2082
 9003 00d0 30BB     		cbnz	r0, .L536
 221:Jellybeans.cpp ****     {
 222:Jellybeans.cpp ****         arp->onClockPulse();
 223:Jellybeans.cpp ****     }
 224:Jellybeans.cpp **** }
 9004              		.loc 17 224 1 view .LVU2083
 9005 00d2 38BD     		pop	{r3, r4, r5, pc}
 9006              	.L528:
 9007              	.LBB6808:
 9008              	.LBB6785:
 206:Jellybeans.cpp ****         if (inc > 0){
 9009              		.loc 17 206 9 is_stmt 1 view .LVU2084
 9010              	.LVL618:
 9011              	.LBB6786:
 9012              	.LBI6786:
  36:../../libdaisy/src/hid/encoder.h **** 
 9013              		.loc 7 36 20 view .LVU2085
 9014              	.LBB6787:
  36:../../libdaisy/src/hid/encoder.h **** 
 9015              		.loc 7 36 40 view .LVU2086
  36:../../libdaisy/src/hid/encoder.h **** 
 9016              		.loc 7 36 47 is_stmt 0 view .LVU2087
 9017 00d4 154D     		ldr	r5, .L540
 9018 00d6 6B6D     		ldr	r3, [r5, #84]
 9019              	.LVL619:
  36:../../libdaisy/src/hid/encoder.h **** 
 9020              		.loc 7 36 47 view .LVU2088
 9021              	.LBE6787:
 9022              	.LBE6786:
 207:Jellybeans.cpp ****             menuItems[menuPos].increment();
 9023              		.loc 17 207 9 is_stmt 1 view .LVU2089
 9024 00d8 002B     		cmp	r3, #0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 374


 9025 00da 0DDC     		bgt	.L539
 209:Jellybeans.cpp ****             menuItems[menuPos].decrement();
 9026              		.loc 17 209 16 view .LVU2090
 9027 00dc 15D0     		beq	.L534
 210:Jellybeans.cpp ****         }
 9028              		.loc 17 210 13 view .LVU2091
 9029              	.LVL620:
 9030              	.LBB6788:
 9031              	.LBI6788:
 9032              		.loc 24 185 7 view .LVU2092
 9033              	.LBB6789:
 9034              	.LBI6789:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9035              		.loc 24 55 7 view .LVU2093
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9036              		.loc 24 55 7 is_stmt 0 view .LVU2094
 9037              	.LBE6789:
 9038              	.LBE6788:
 210:Jellybeans.cpp ****         }
 9039              		.loc 17 210 30 view .LVU2095
 9040 00de 214B     		ldr	r3, .L540+56
 9041              	.LVL621:
 9042              	.LBB6792:
 9043              	.LBB6791:
 9044              	.LBB6790:
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 9045              		.loc 24 56 41 view .LVU2096
 9046 00e0 1548     		ldr	r0, .L540+12
 9047 00e2 1B68     		ldr	r3, [r3]
 9048 00e4 03EB8303 		add	r3, r3, r3, lsl #2
 9049              	.LBE6790:
 9050              	.LBE6791:
 9051              	.LBE6792:
 210:Jellybeans.cpp ****         }
 9052              		.loc 17 210 41 view .LVU2097
 9053 00e8 00EB0310 		add	r0, r0, r3, lsl #4
 9054 00ec FFF7FEFF 		bl	_ZN10jellybeans8MenuItem9decrementEv
 9055              	.LVL622:
 210:Jellybeans.cpp ****         }
 9056              		.loc 17 210 41 view .LVU2098
 9057 00f0 0BE0     		b	.L534
 9058              	.L538:
 210:Jellybeans.cpp ****         }
 9059              		.loc 17 210 41 view .LVU2099
 9060              	.LBE6785:
 196:Jellybeans.cpp ****         } else if (menuPos <= 0) {
 9061              		.loc 17 196 13 is_stmt 1 view .LVU2100
 196:Jellybeans.cpp ****         } else if (menuPos <= 0) {
 9062              		.loc 17 196 21 is_stmt 0 view .LVU2101
 9063 00f2 0923     		movs	r3, #9
 9064 00f4 0B60     		str	r3, [r1]
 9065 00f6 DCE7     		b	.L530
 9066              	.LVL623:
 9067              	.L539:
 9068              	.LBB6802:
 208:Jellybeans.cpp ****         } else if (inc < 0){
 9069              		.loc 17 208 13 is_stmt 1 view .LVU2102
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 375


 9070              	.LBB6793:
 9071              	.LBI6793:
 9072              		.loc 24 185 7 view .LVU2103
 9073              	.LBB6794:
 9074              	.LBI6794:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9075              		.loc 24 55 7 view .LVU2104
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9076              		.loc 24 55 7 is_stmt 0 view .LVU2105
 9077              	.LBE6794:
 9078              	.LBE6793:
 208:Jellybeans.cpp ****         } else if (inc < 0){
 9079              		.loc 17 208 30 view .LVU2106
 9080 00f8 1A4B     		ldr	r3, .L540+56
 9081              	.LVL624:
 9082              	.LBB6797:
 9083              	.LBB6796:
 9084              	.LBB6795:
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 9085              		.loc 24 56 41 view .LVU2107
 9086 00fa 0F48     		ldr	r0, .L540+12
 9087 00fc 1B68     		ldr	r3, [r3]
 9088 00fe 03EB8303 		add	r3, r3, r3, lsl #2
 9089              	.LBE6795:
 9090              	.LBE6796:
 9091              	.LBE6797:
 208:Jellybeans.cpp ****         } else if (inc < 0){
 9092              		.loc 17 208 41 view .LVU2108
 9093 0102 00EB0310 		add	r0, r0, r3, lsl #4
 9094 0106 FFF7FEFF 		bl	_ZN10jellybeans8MenuItem9incrementEv
 9095              	.LVL625:
 9096              	.L534:
 213:Jellybeans.cpp ****     }
 9097              		.loc 17 213 9 is_stmt 1 view .LVU2109
 9098              	.LBB6798:
 9099              	.LBI6798:
 9100              		.loc 7 39 17 view .LVU2110
 9101              	.LBE6798:
 9102              	.LBE6802:
 9103              	.LBE6808:
 9104              		.loc 7 39 38 view .LVU2111
 9105              	.LBB6809:
 9106              	.LBB6803:
 9107              	.LBB6801:
 9108              	.LBB6799:
 9109              	.LBI6799:
 9110              		.loc 8 70 17 view .LVU2112
 9111              	.LBB6800:
 9112              		.loc 8 70 38 view .LVU2113
 9113              		.loc 8 70 38 is_stmt 0 view .LVU2114
 9114              	.LBE6800:
 9115              	.LBE6799:
 9116              	.LBE6801:
 213:Jellybeans.cpp ****     }
 9117              		.loc 17 213 21 view .LVU2115
 9118 010a 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 9119              	.LBE6803:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 376


 9120              	.LBE6809:
 220:Jellybeans.cpp ****     {
 9121              		.loc 17 220 32 view .LVU2116
 9122 010e 1648     		ldr	r0, .L540+60
 9123              	.LBB6810:
 9124              	.LBB6804:
 213:Jellybeans.cpp ****     }
 9125              		.loc 17 213 21 view .LVU2117
 9126 0110 7F3B     		subs	r3, r3, #127
 9127 0112 18BF     		it	ne
 9128 0114 0123     		movne	r3, #1
 9129 0116 2370     		strb	r3, [r4]
 9130              	.LBE6804:
 9131              	.LBE6810:
 220:Jellybeans.cpp ****     {
 9132              		.loc 17 220 5 is_stmt 1 view .LVU2118
 220:Jellybeans.cpp ****     {
 9133              		.loc 17 220 32 is_stmt 0 view .LVU2119
 9134 0118 FFF7FEFF 		bl	_ZN5daisy6GateIn4TrigEv
 9135              	.LVL626:
 220:Jellybeans.cpp ****     {
 9136              		.loc 17 220 35 view .LVU2120
 9137 011c 0028     		cmp	r0, #0
 9138 011e D4D0     		beq	.L535
 9139              	.L536:
 222:Jellybeans.cpp ****     }
 9140              		.loc 17 222 9 is_stmt 1 view .LVU2121
 222:Jellybeans.cpp ****     }
 9141              		.loc 17 222 26 is_stmt 0 view .LVU2122
 9142 0120 134B     		ldr	r3, .L540+68
 9143 0122 1868     		ldr	r0, [r3]
 9144              		.loc 17 224 1 view .LVU2123
 9145 0124 BDE83840 		pop	{r3, r4, r5, lr}
 9146              		.cfi_restore 14
 9147              		.cfi_restore 5
 9148              		.cfi_restore 4
 9149              		.cfi_restore 3
 9150              		.cfi_def_cfa_offset 0
 222:Jellybeans.cpp ****     }
 9151              		.loc 17 222 26 view .LVU2124
 9152 0128 FFF7FEBF 		b	_ZN10jellybeans3Arp12onClockPulseEv
 9153              	.LVL627:
 9154              	.L541:
 9155              		.align	2
 9156              	.L540:
 9157 012c 00000000 		.word	patch
 9158 0130 00000000 		.word	.LANCHOR2
 9159 0134 00000000 		.word	.LANCHOR3
 9160 0138 00000000 		.word	.LANCHOR4
 9161 013c 00000000 		.word	.LANCHOR5
 9162 0140 00000000 		.word	.LANCHOR6
 9163 0144 50000000 		.word	.LANCHOR4+80
 9164 0148 00000000 		.word	.LANCHOR7
 9165 014c 00000000 		.word	.LANCHOR8
 9166 0150 A0000000 		.word	.LANCHOR4+160
 9167 0154 00000000 		.word	.LANCHOR9
 9168 0158 00000000 		.word	.LANCHOR10
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 377


 9169 015c F0000000 		.word	.LANCHOR4+240
 9170 0160 00000000 		.word	.LANCHOR11
 9171 0164 00000000 		.word	.LANCHOR12
 9172 0168 D8000000 		.word	patch+216
 9173 016c DE000000 		.word	patch+222
 9174 0170 00000000 		.word	.LANCHOR0
 9175              		.cfi_endproc
 9176              	.LFE5122:
 9178              		.section	.text._Z13updateOutputsv,"ax",%progbits
 9179              		.align	1
 9180              		.p2align 2,,3
 9181              		.global	_Z13updateOutputsv
 9182              		.syntax unified
 9183              		.thumb
 9184              		.thumb_func
 9185              		.fpu fpv5-d16
 9187              	_Z13updateOutputsv:
 9188              	.LFB5125:
 225:Jellybeans.cpp **** 
 226:Jellybeans.cpp **** // Update Patches' screen
 227:Jellybeans.cpp **** //
 228:Jellybeans.cpp **** // Display on Daisy Patch is 128x64p
 229:Jellybeans.cpp **** // With 7x10 font, this means it's limited to:
 230:Jellybeans.cpp **** //  - 18 chars horizontally (w/2p to spare)
 231:Jellybeans.cpp **** //  - 6 chars vertically (w/4p to spare)
 232:Jellybeans.cpp **** void updateOled() {
 233:Jellybeans.cpp ****     // Clear display
 234:Jellybeans.cpp ****     patch.display.Fill(false);  
 235:Jellybeans.cpp **** 
 236:Jellybeans.cpp ****     // Draw the top bar
 237:Jellybeans.cpp ****     drawString(arp->toString(), 0, 0);
 238:Jellybeans.cpp ****     patch.display.DrawLine(0, 11, 128, 11, true);
 239:Jellybeans.cpp **** 
 240:Jellybeans.cpp ****     // Draw the cursor indicator
 241:Jellybeans.cpp ****     drawString(">", 0, 11);
 242:Jellybeans.cpp **** 
 243:Jellybeans.cpp ****     int listSize = 5;
 244:Jellybeans.cpp **** 
 245:Jellybeans.cpp ****     if (debugMode){
 246:Jellybeans.cpp ****         // If in debug mode, reserve the bottom menu item's space for debug data
 247:Jellybeans.cpp ****         debugString = arp->getChord()->toString();
 248:Jellybeans.cpp ****         listSize--;
 249:Jellybeans.cpp ****         patch.display.DrawLine(0, 53, 128, 53, true);
 250:Jellybeans.cpp ****         drawString(debugString, 2, 54);
 251:Jellybeans.cpp ****     }
 252:Jellybeans.cpp **** 
 253:Jellybeans.cpp ****     // Draw each menu item
 254:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 255:Jellybeans.cpp ****         if (i < (int) menuItems.size()){
 256:Jellybeans.cpp ****             drawString(menuItems[i].displayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 257:Jellybeans.cpp ****         }    
 258:Jellybeans.cpp ****     }
 259:Jellybeans.cpp **** 
 260:Jellybeans.cpp ****     // Write display buffer to OLED
 261:Jellybeans.cpp ****     patch.display.Update();
 262:Jellybeans.cpp **** }
 263:Jellybeans.cpp **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 378


 264:Jellybeans.cpp **** // Updates Patches' output values
 265:Jellybeans.cpp **** void updateOutputs()
 266:Jellybeans.cpp **** {
 9189              		.loc 17 266 1 is_stmt 1 view -0
 9190              		.cfi_startproc
 9191              		@ args = 0, pretend = 0, frame = 0
 9192              		@ frame_needed = 0, uses_anonymous_args = 0
 267:Jellybeans.cpp ****     patch.seed.dac.WriteValue(DacHandle::Channel::ONE, arp->getDacValue());
 9193              		.loc 17 267 5 view .LVU2126
 266:Jellybeans.cpp ****     patch.seed.dac.WriteValue(DacHandle::Channel::ONE, arp->getDacValue());
 9194              		.loc 17 266 1 is_stmt 0 view .LVU2127
 9195 0000 10B5     		push	{r4, lr}
 9196              		.cfi_def_cfa_offset 8
 9197              		.cfi_offset 4, -8
 9198              		.cfi_offset 14, -4
 9199              		.loc 17 267 72 view .LVU2128
 9200 0002 0B4C     		ldr	r4, .L544
 9201 0004 2068     		ldr	r0, [r4]
 9202 0006 FFF7FEFF 		bl	_ZN10jellybeans3Arp11getDacValueEv
 9203              	.LVL628:
 9204              		.loc 17 267 30 view .LVU2129
 9205 000a BCEEC00A 		vcvt.u32.f32	s0, s0
 9206 000e 0021     		movs	r1, #0
 9207 0010 0848     		ldr	r0, .L544+4
 9208 0012 10EE103A 		vmov	r3, s0	@ int
 9209 0016 9AB2     		uxth	r2, r3
 9210 0018 FFF7FEFF 		bl	_ZN5daisy9DacHandle10WriteValueENS0_7ChannelEt
 9211              	.LVL629:
 268:Jellybeans.cpp **** 
 269:Jellybeans.cpp ****     dsy_gpio_write(&patch.gate_output, arp->getNewNote());
 9212              		.loc 17 269 5 is_stmt 1 view .LVU2130
 9213              		.loc 17 269 55 is_stmt 0 view .LVU2131
 9214 001c 2068     		ldr	r0, [r4]
 9215 001e FFF7FEFF 		bl	_ZN10jellybeans3Arp10getNewNoteEv
 9216              	.LVL630:
 9217 0022 0146     		mov	r1, r0
 9218              		.loc 17 269 19 view .LVU2132
 9219 0024 0448     		ldr	r0, .L544+8
 270:Jellybeans.cpp **** }
 9220              		.loc 17 270 1 view .LVU2133
 9221 0026 BDE81040 		pop	{r4, lr}
 9222              		.cfi_restore 14
 9223              		.cfi_restore 4
 9224              		.cfi_def_cfa_offset 0
 269:Jellybeans.cpp **** }
 9225              		.loc 17 269 19 view .LVU2134
 9226 002a FFF7FEBF 		b	dsy_gpio_write
 9227              	.LVL631:
 9228              	.L545:
 9229 002e 00BF     		.align	2
 9230              	.L544:
 9231 0030 00000000 		.word	.LANCHOR0
 9232 0034 20000000 		.word	patch+32
 9233 0038 B4950000 		.word	patch+38324
 9234              		.cfi_endproc
 9235              	.LFE5125:
 9237              		.section	.text._Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii,"ax",%progbits
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 379


 9238              		.align	1
 9239              		.p2align 2,,3
 9240              		.global	_Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
 9241              		.syntax unified
 9242              		.thumb
 9243              		.thumb_func
 9244              		.fpu fpv5-d16
 9246              	_Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii:
 9247              	.LVL632:
 9248              	.LFB5126:
 271:Jellybeans.cpp **** 
 272:Jellybeans.cpp **** /*
 273:Jellybeans.cpp ****  * Utility functions
 274:Jellybeans.cpp ****  */
 275:Jellybeans.cpp **** 
 276:Jellybeans.cpp **** // Utility to perform a silly little dance where we set the cursor, 
 277:Jellybeans.cpp **** // convert a std::string to char*, and pass it to WriteString()
 278:Jellybeans.cpp **** void drawString(std::string str, int x, int y){
 9249              		.loc 17 278 47 is_stmt 1 view -0
 9250              		.cfi_startproc
 9251              		@ args = 0, pretend = 0, frame = 16
 9252              		@ frame_needed = 0, uses_anonymous_args = 0
 279:Jellybeans.cpp ****     patch.display.SetCursor(x, y);
 9253              		.loc 17 279 5 view .LVU2136
 9254              	.LBB6852:
 9255              	.LBI6852:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 9256              		.loc 5 171 10 view .LVU2137
 9257              	.LBB6853:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9258              		.loc 5 173 9 view .LVU2138
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9259              		.loc 5 173 19 is_stmt 0 view .LVU2139
 9260 0000 89B2     		uxth	r1, r1
 9261              	.LVL633:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9262              		.loc 5 173 19 view .LVU2140
 9263 0002 4A4B     		ldr	r3, .L568
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9264              		.loc 5 174 19 view .LVU2141
 9265 0004 92B2     		uxth	r2, r2
 9266              	.LVL634:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9267              		.loc 5 173 19 view .LVU2142
 9268 0006 7F29     		cmp	r1, #127
 9269 0008 28BF     		it	cs
 9270 000a 7F21     		movcs	r1, #127
 9271              	.LVL635:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9272              		.loc 5 174 19 view .LVU2143
 9273 000c 3F2A     		cmp	r2, #63
 9274              	.LBE6853:
 9275              	.LBE6852:
 278:Jellybeans.cpp ****     patch.display.SetCursor(x, y);
 9276              		.loc 17 278 47 view .LVU2144
 9277 000e 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 9278              		.cfi_def_cfa_offset 36
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 380


 9279              		.cfi_offset 4, -36
 9280              		.cfi_offset 5, -32
 9281              		.cfi_offset 6, -28
 9282              		.cfi_offset 7, -24
 9283              		.cfi_offset 8, -20
 9284              		.cfi_offset 9, -16
 9285              		.cfi_offset 10, -12
 9286              		.cfi_offset 11, -8
 9287              		.cfi_offset 14, -4
 9288              	.LBB6857:
 9289              	.LBB6854:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9290              		.loc 5 174 19 view .LVU2145
 9291 0012 28BF     		it	cs
 9292 0014 3F22     		movcs	r2, #63
 9293              	.LVL636:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9294              		.loc 5 174 19 view .LVU2146
 9295              	.LBE6854:
 9296              	.LBE6857:
 9297              	.LBB6858:
 9298              	.LBB6859:
 9299              	.LBB6860:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9300              		.loc 18 187 28 view .LVU2147
 9301 0016 D0F800A0 		ldr	r10, [r0]
 9302              	.LBE6860:
 9303              	.LBE6859:
 9304              	.LBE6858:
 9305              	.LBB6862:
 9306              	.LBB6855:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9307              		.loc 5 173 19 view .LVU2148
 9308 001a 4548     		ldr	r0, .L568+4
 9309              	.LVL637:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9310              		.loc 5 173 19 view .LVU2149
 9311              	.LBE6855:
 9312              	.LBE6862:
 278:Jellybeans.cpp ****     patch.display.SetCursor(x, y);
 9313              		.loc 17 278 47 view .LVU2150
 9314 001c 85B0     		sub	sp, sp, #20
 9315              		.cfi_def_cfa_offset 56
 9316 001e 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 9317              	.LBB6863:
 9318              	.LBB6856:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9319              		.loc 5 174 19 view .LVU2151
 9320 0020 A0F8A621 		strh	r2, [r0, #422]	@ movhi
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9321              		.loc 5 173 19 view .LVU2152
 9322 0024 A0F8A411 		strh	r1, [r0, #420]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9323              		.loc 5 174 9 is_stmt 1 view .LVU2153
 9324              	.LVL638:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9325              		.loc 5 174 9 is_stmt 0 view .LVU2154
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 381


 9326              	.LBE6856:
 9327              	.LBE6863:
 280:Jellybeans.cpp ****     char* cstr = &str[0];
 9328              		.loc 17 280 5 is_stmt 1 view .LVU2155
 9329              	.LBB6864:
 9330              	.LBI6858:
 995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
 999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  <code>*this == ""</code>.
1000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NODISCARD bool
1002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->size() == 0; }
1004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Element access:
1006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
1009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
1012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
1013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
1015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
1020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
1021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
1026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
1027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
1029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
1030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
1032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[](size_type __pos)
 9331              		.loc 18 1034 7 view .LVU2156
 9332              	.LBB6861:
 9333              	.LBI6859:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9334              		.loc 18 186 7 view .LVU2157
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9335              		.loc 18 186 7 is_stmt 0 view .LVU2158
 9336              	.LBE6861:
 9337              	.LBE6864:
 281:Jellybeans.cpp ****     patch.display.WriteString(cstr, font, true);
 9338              		.loc 17 281 5 is_stmt 1 view .LVU2159
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 382


 9339              		.loc 17 281 5 is_stmt 0 view .LVU2160
 9340 0028 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 9341              	.LBB6865:
 9342              	.LBB6866:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 9343              		.loc 5 443 9 view .LVU2161
 9344 002a 9AF800B0 		ldrb	fp, [r10]	@ zero_extendqisi2
 9345 002e 5B68     		ldr	r3, [r3, #4]
 9346 0030 0292     		str	r2, [sp, #8]
 9347              	.LVL639:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 9348              		.loc 5 443 9 view .LVU2162
 9349 0032 0393     		str	r3, [sp, #12]
 9350              	.LVL640:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 9351              		.loc 5 443 9 view .LVU2163
 9352              	.LBE6866:
 9353              	.LBI6865:
 440:../../libdaisy/src/hid/disp/display.h ****     {
 9354              		.loc 5 440 10 is_stmt 1 view .LVU2164
 9355              	.LBB6906:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 9356              		.loc 5 443 9 view .LVU2165
 9357 0034 BBF1000F 		cmp	fp, #0
 9358 0038 72D0     		beq	.L546
 9359              	.LVL641:
 9360              	.L547:
 9361              	.LBB6867:
 9362              	.LBI6867:
 396:../../libdaisy/src/hid/disp/display.h ****     {
 9363              		.loc 5 396 10 view .LVU2166
 9364              	.LBB6868:
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 9365              		.loc 5 401 20 is_stmt 0 view .LVU2167
 9366 003a ABF12003 		sub	r3, fp, #32
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 9367              		.loc 5 401 9 view .LVU2168
 9368 003e DAB2     		uxtb	r2, r3
 9369 0040 5E2A     		cmp	r2, #94
 9370 0042 70D8     		bhi	.L560
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 9371              		.loc 5 405 23 view .LVU2169
 9372 0044 3A49     		ldr	r1, .L568+4
 9373 0046 B1F8A4E1 		ldrh	lr, [r1, #420]
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 9374              		.loc 5 405 33 view .LVU2170
 9375 004a 0EEB0502 		add	r2, lr, r5
 406:../../libdaisy/src/hid/disp/display.h ****         {
 9376              		.loc 5 406 12 view .LVU2171
 9377 004e 802A     		cmp	r2, #128
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 9378              		.loc 5 405 33 view .LVU2172
 9379 0050 0192     		str	r2, [sp, #4]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 9380              		.loc 5 406 12 view .LVU2173
 9381 0052 68DC     		bgt	.L560
 406:../../libdaisy/src/hid/disp/display.h ****         {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 383


 9382              		.loc 5 406 27 view .LVU2174
 9383 0054 B1F8A621 		ldrh	r2, [r1, #422]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 9384              		.loc 5 406 37 view .LVU2175
 9385 0058 0299     		ldr	r1, [sp, #8]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 9386              		.loc 5 406 27 view .LVU2176
 9387 005a 0092     		str	r2, [sp]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 9388              		.loc 5 406 37 view .LVU2177
 9389 005c 0A44     		add	r2, r2, r1
 406:../../libdaisy/src/hid/disp/display.h ****         {
 9390              		.loc 5 406 12 view .LVU2178
 9391 005e 402A     		cmp	r2, #64
 9392 0060 61DC     		bgt	.L560
 9393              	.LVL642:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 9394              		.loc 5 413 22 is_stmt 1 view .LVU2179
 9395 0062 0029     		cmp	r1, #0
 9396 0064 45D0     		beq	.L551
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 9397              		.loc 5 415 37 is_stmt 0 view .LVU2180
 9398 0066 029A     		ldr	r2, [sp, #8]
 9399 0068 6FF00047 		mvn	r7, #-2147483648
 9400 006c 0098     		ldr	r0, [sp]
 9401 006e 02FB03F3 		mul	r3, r2, r3
 9402 0072 1F44     		add	r7, r7, r3
 9403 0074 1344     		add	r3, r3, r2
 9404 0076 039A     		ldr	r2, [sp, #12]
 9405 0078 A2F10209 		sub	r9, r2, #2
 9406 007c 02EB4707 		add	r7, r2, r7, lsl #1
 9407 0080 09EB4309 		add	r9, r9, r3, lsl #1
 9408              	.LVL643:
 9409              	.L552:
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 9410              		.loc 5 415 15 view .LVU2181
 9411 0084 37F802CF 		ldrh	ip, [r7, #2]!
 9412              	.LVL644:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9413              		.loc 5 416 26 is_stmt 1 view .LVU2182
 9414 0088 7DB3     		cbz	r5, .L555
 9415              	.LBB6869:
 9416              	.LBB6870:
 9417              	.LBB6871:
 9418              	.LBB6872:
 9419              	.LBB6873:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9420              		.loc 14 246 55 is_stmt 0 view .LVU2183
 9421 008a 00F00703 		and	r3, r0, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9422              		.loc 14 246 49 view .LVU2184
 9423 008e 0126     		movs	r6, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9424              		.loc 14 246 28 view .LVU2185
 9425 0090 C208     		lsrs	r2, r0, #3
 9426              	.LBE6873:
 9427              	.LBE6872:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 384


 9428              	.LBE6871:
 9429              	.LBE6870:
 9430              	.LBE6869:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9431              		.loc 5 416 19 view .LVU2186
 9432 0092 0024     		movs	r4, #0
 9433              	.LBB6892:
 9434              	.LBB6887:
 9435              	.LBB6883:
 9436              	.LBB6878:
 9437              	.LBB6874:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9438              		.loc 14 246 49 view .LVU2187
 9439 0094 9E40     		lsls	r6, r6, r3
 9440 0096 49F2B413 		movw	r3, #37300
 9441 009a 7344     		add	r3, r3, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9442              		.loc 14 246 42 view .LVU2188
 9443 009c 76B2     		sxtb	r6, r6
 9444 009e 03EBC213 		add	r3, r3, r2, lsl #7
 9445 00a2 244A     		ldr	r2, .L568+8
 9446 00a4 6FEA0608 		mvn	r8, r6
 9447 00a8 1344     		add	r3, r3, r2
 9448 00aa 7246     		mov	r2, lr
 9449 00ac 0BE0     		b	.L556
 9450              	.LVL645:
 9451              	.L567:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9452              		.loc 14 246 42 view .LVU2189
 9453              	.LBE6874:
 9454              	.LBE6878:
 9455              	.LBE6883:
 9456              	.LBE6887:
 9457              	.LBE6892:
 9458              	.LBB6893:
 9459              	.LBB6894:
 9460              	.LBB6895:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 9461              		.loc 14 241 9 view .LVU2190
 9462 00ae 7F2A     		cmp	r2, #127
 9463 00b0 04D8     		bhi	.L554
 9464 00b2 3F28     		cmp	r0, #63
 9465 00b4 02D8     		bhi	.L554
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 9466              		.loc 14 244 42 view .LVU2191
 9467 00b6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 9468 00b8 3143     		orrs	r1, r1, r6
 9469 00ba 1970     		strb	r1, [r3]
 9470              	.L554:
 9471              	.LVL646:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 9472              		.loc 14 244 42 view .LVU2192
 9473              	.LBE6895:
 9474              	.LBE6894:
 9475              	.LBE6893:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9476              		.loc 5 416 13 is_stmt 1 view .LVU2193
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 385


 9477 00bc 0134     		adds	r4, r4, #1
 9478              	.LVL647:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9479              		.loc 5 416 26 view .LVU2194
 9480 00be 0133     		adds	r3, r3, #1
 9481 00c0 0132     		adds	r2, r2, #1
 9482 00c2 A542     		cmp	r5, r4
 9483 00c4 11D0     		beq	.L555
 9484              	.LVL648:
 9485              	.L556:
 9486              	.LBB6897:
 9487              	.LBI6893:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 9488              		.loc 4 41 10 view .LVU2195
 9489              	.LBB6896:
 9490              	.LBI6894:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 9491              		.loc 14 239 10 view .LVU2196
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 9492              		.loc 14 239 10 is_stmt 0 view .LVU2197
 9493              	.LBE6896:
 9494              	.LBE6897:
 9495              	.LBB6898:
 9496              	.LBI6869:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 9497              		.loc 4 41 10 is_stmt 1 view .LVU2198
 9498              	.LBB6888:
 9499              	.LBI6870:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 9500              		.loc 14 239 10 view .LVU2199
 9501              	.LBE6888:
 9502              	.LBE6898:
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 9503              		.loc 5 418 23 is_stmt 0 view .LVU2200
 9504 00c6 0CFA04F1 		lsl	r1, ip, r4
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 9505              		.loc 5 418 17 view .LVU2201
 9506 00ca 0904     		lsls	r1, r1, #16
 9507 00cc EFD4     		bmi	.L567
 9508              	.LVL649:
 9509              	.LBB6899:
 9510              	.LBB6889:
 9511              	.LBB6884:
 9512              	.LBB6879:
 9513              	.LBI6872:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 9514              		.loc 14 239 10 is_stmt 1 view .LVU2202
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 9515              		.loc 14 239 10 is_stmt 0 view .LVU2203
 9516              	.LBE6879:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 9517              		.loc 14 241 9 view .LVU2204
 9518 00ce 7F2A     		cmp	r2, #127
 9519 00d0 F4D8     		bhi	.L554
 9520 00d2 3F28     		cmp	r0, #63
 9521 00d4 F2D8     		bhi	.L554
 9522              	.LBB6880:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 386


 9523              	.LBB6875:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9524              		.loc 14 246 42 view .LVU2205
 9525 00d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 9526              	.LBE6875:
 9527              	.LBE6880:
 9528              	.LBE6884:
 9529              	.LBE6889:
 9530              	.LBE6899:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9531              		.loc 5 416 13 view .LVU2206
 9532 00d8 0134     		adds	r4, r4, #1
 9533              	.LVL650:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9534              		.loc 5 416 26 view .LVU2207
 9535 00da 0133     		adds	r3, r3, #1
 9536 00dc 0132     		adds	r2, r2, #1
 9537              	.LBB6900:
 9538              	.LBB6890:
 9539              	.LBB6885:
 9540              	.LBB6881:
 9541              	.LBB6876:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9542              		.loc 14 246 42 view .LVU2208
 9543 00de 08EA0101 		and	r1, r8, r1
 9544              	.LBE6876:
 9545              	.LBE6881:
 9546              	.LBE6885:
 9547              	.LBE6890:
 9548              	.LBE6900:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9549              		.loc 5 416 26 view .LVU2209
 9550 00e2 A542     		cmp	r5, r4
 9551              	.LBB6901:
 9552              	.LBB6891:
 9553              	.LBB6886:
 9554              	.LBB6882:
 9555              	.LBB6877:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9556              		.loc 14 246 42 view .LVU2210
 9557 00e4 03F8011C 		strb	r1, [r3, #-1]
 9558              	.LVL651:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9559              		.loc 14 246 42 view .LVU2211
 9560              	.LBE6877:
 9561              	.LBE6882:
 9562              	.LBE6886:
 9563              	.LBE6891:
 9564              	.LBE6901:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9565              		.loc 5 416 13 is_stmt 1 view .LVU2212
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9566              		.loc 5 416 26 view .LVU2213
 9567 00e8 EDD1     		bne	.L556
 9568              	.LVL652:
 9569              	.L555:
 413:../../libdaisy/src/hid/disp/display.h ****         {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 387


 9570              		.loc 5 413 9 view .LVU2214
 413:../../libdaisy/src/hid/disp/display.h ****         {
 9571              		.loc 5 413 22 view .LVU2215
 9572 00ea B945     		cmp	r9, r7
 9573 00ec 00F10100 		add	r0, r0, #1
 9574 00f0 C8D1     		bne	.L552
 9575              	.LVL653:
 9576              	.L551:
 9577              	.LBB6902:
 9578              	.LBI6902:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 9579              		.loc 5 171 10 view .LVU2216
 9580              	.LBB6903:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9581              		.loc 5 173 9 view .LVU2217
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9582              		.loc 5 174 19 is_stmt 0 view .LVU2218
 9583 00f2 009A     		ldr	r2, [sp]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9584              		.loc 5 173 19 view .LVU2219
 9585 00f4 BDF80430 		ldrh	r3, [sp, #4]
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9586              		.loc 5 174 19 view .LVU2220
 9587 00f8 3F2A     		cmp	r2, #63
 9588 00fa 0D49     		ldr	r1, .L568+4
 9589 00fc 28BF     		it	cs
 9590 00fe 3F22     		movcs	r2, #63
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9591              		.loc 5 173 19 view .LVU2221
 9592 0100 7F2B     		cmp	r3, #127
 9593 0102 28BF     		it	cs
 9594 0104 7F23     		movcs	r3, #127
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9595              		.loc 5 174 19 view .LVU2222
 9596 0106 A1F8A621 		strh	r2, [r1, #422]	@ movhi
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9597              		.loc 5 173 19 view .LVU2223
 9598 010a A1F8A431 		strh	r3, [r1, #420]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9599              		.loc 5 174 9 is_stmt 1 view .LVU2224
 9600              	.LVL654:
 9601              	.L548:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9602              		.loc 5 174 9 is_stmt 0 view .LVU2225
 9603              	.LBE6903:
 9604              	.LBE6902:
 9605              	.LBE6868:
 9606              	.LBE6867:
 445:../../libdaisy/src/hid/disp/display.h ****                != *str)
 9607              		.loc 5 445 13 view .LVU2226
 9608 010e 9AF80030 		ldrb	r3, [r10]	@ zero_extendqisi2
 9609 0112 5B45     		cmp	r3, fp
 9610 0114 04D1     		bne	.L546
 9611              	.LVL655:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 9612              		.loc 5 443 9 is_stmt 1 view .LVU2227
 9613 0116 1AF801BF 		ldrb	fp, [r10, #1]!	@ zero_extendqisi2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 388


 9614              	.LVL656:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 9615              		.loc 5 443 9 is_stmt 0 view .LVU2228
 9616 011a BBF1000F 		cmp	fp, #0
 9617 011e 8CD1     		bne	.L547
 9618              	.L546:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 9619              		.loc 5 443 9 view .LVU2229
 9620              	.LBE6906:
 9621              	.LBE6865:
 282:Jellybeans.cpp **** }...
 9622              		.loc 17 282 1 view .LVU2230
 9623 0120 05B0     		add	sp, sp, #20
 9624              		.cfi_remember_state
 9625              		.cfi_def_cfa_offset 36
 9626              		@ sp needed
 9627 0122 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 9628              	.LVL657:
 9629              	.L560:
 9630              		.cfi_restore_state
 9631              	.LBB6908:
 9632              	.LBB6907:
 9633              	.LBB6905:
 9634              	.LBB6904:
 402:../../libdaisy/src/hid/disp/display.h **** 
 9635              		.loc 5 402 20 view .LVU2231
 9636 0126 4FF0000B 		mov	fp, #0
 9637              	.LVL658:
 402:../../libdaisy/src/hid/disp/display.h **** 
 9638              		.loc 5 402 20 view .LVU2232
 9639 012a F0E7     		b	.L548
 9640              	.L569:
 9641              		.align	2
 9642              	.L568:
 9643 012c 00000000 		.word	.LANCHOR13
 9644 0130 00900000 		.word	patch+36864
 9645 0134 00000000 		.word	patch
 9646              	.LBE6904:
 9647              	.LBE6905:
 9648              	.LBE6907:
 9649              	.LBE6908:
 9650              		.cfi_endproc
 9651              	.LFE5126:
 9653              		.section	.text._Z10updateOledv,"ax",%progbits
 9654              		.align	1
 9655              		.p2align 2,,3
 9656              		.global	_Z10updateOledv
 9657              		.syntax unified
 9658              		.thumb
 9659              		.thumb_func
 9660              		.fpu fpv5-d16
 9662              	_Z10updateOledv:
 9663              	.LFB5124:
 232:Jellybeans.cpp **** void updateOled() {
 9664              		.loc 17 232 19 is_stmt 1 view -0
 9665              		.cfi_startproc
 9666              		@ args = 0, pretend = 0, frame = 32
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 389


 9667              		@ frame_needed = 0, uses_anonymous_args = 0
 234:Jellybeans.cpp ****     patch.display.Fill(false);  
 9668              		.loc 17 234 5 view .LVU2234
 9669              	.LVL659:
 9670              	.LBB7208:
 9671              	.LBI7208:
  33:../../libdaisy/src/hid/disp/oled_display.h **** 
 9672              		.loc 4 33 10 view .LVU2235
 9673              	.LBB7209:
 9674              	.LBI7209:
 249:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 9675              		.loc 14 249 10 view .LVU2236
 9676              	.LBB7210:
 251:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 9677              		.loc 14 251 29 view .LVU2237
 9678              	.LBE7210:
 9679              	.LBE7209:
 9680              	.LBE7208:
 232:Jellybeans.cpp **** void updateOled() {
 9681              		.loc 17 232 19 is_stmt 0 view .LVU2238
 9682 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 9683              		.cfi_def_cfa_offset 20
 9684              		.cfi_offset 4, -20
 9685              		.cfi_offset 5, -16
 9686              		.cfi_offset 6, -12
 9687              		.cfi_offset 7, -8
 9688              		.cfi_offset 14, -4
 237:Jellybeans.cpp ****     drawString(arp->toString(), 0, 0);
 9689              		.loc 17 237 30 view .LVU2239
 9690 0002 8B4C     		ldr	r4, .L617
 232:Jellybeans.cpp **** void updateOled() {
 9691              		.loc 17 232 19 view .LVU2240
 9692 0004 89B0     		sub	sp, sp, #36
 9693              		.cfi_def_cfa_offset 56
 9694              	.LBB7215:
 9695              	.LBB7213:
 9696              	.LBB7211:
 253:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 9697              		.loc 14 253 24 view .LVU2241
 9698 0006 4FF48062 		mov	r2, #1024
 9699 000a 0021     		movs	r1, #0
 9700 000c 8948     		ldr	r0, .L617+4
 9701              	.LBE7211:
 9702              	.LBE7213:
 9703              	.LBE7215:
 9704              	.LBB7216:
 9705              	.LBB7217:
 9706              	.LBB7218:
 9707              	.LBB7219:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 9708              		.loc 18 231 2 view .LVU2242
 9709 000e 04AD     		add	r5, sp, #16
 9710              	.LBE7219:
 9711              	.LBE7218:
 9712              	.LBE7217:
 9713              	.LBE7216:
 9714              	.LBB7237:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 390


 9715              	.LBB7214:
 9716              	.LBB7212:
 253:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 9717              		.loc 14 253 24 view .LVU2243
 9718 0010 FFF7FEFF 		bl	memset
 9719              	.LVL660:
 253:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 9720              		.loc 14 253 24 view .LVU2244
 9721              	.LBE7212:
 9722              	.LBE7214:
 9723              	.LBE7237:
 237:Jellybeans.cpp ****     drawString(arp->toString(), 0, 0);
 9724              		.loc 17 237 5 is_stmt 1 view .LVU2245
 237:Jellybeans.cpp ****     drawString(arp->toString(), 0, 0);
 9725              		.loc 17 237 30 is_stmt 0 view .LVU2246
 9726 0014 2168     		ldr	r1, [r4]
 9727 0016 02A8     		add	r0, sp, #8
 9728 0018 FFF7FEFF 		bl	_ZN10jellybeans3Arp8toStringB5cxx11Ev
 9729              	.LVL661:
 237:Jellybeans.cpp ****     drawString(arp->toString(), 0, 0);
 9730              		.loc 17 237 15 view .LVU2247
 9731 001c 0022     		movs	r2, #0
 9732 001e 02A8     		add	r0, sp, #8
 9733 0020 1146     		mov	r1, r2
 9734 0022 FFF7FEFF 		bl	_Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
 9735              	.LVL662:
 9736              	.LBB7238:
 9737              	.LBI7216:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 9738              		.loc 18 657 7 is_stmt 1 view .LVU2248
 9739              	.LBB7236:
 9740              	.LBB7232:
 9741              	.LBI7218:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9742              		.loc 18 229 7 view .LVU2249
 9743              	.LBB7231:
 9744              	.LBB7220:
 9745              	.LBI7220:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 9746              		.loc 18 221 7 view .LVU2250
 9747              	.LBB7221:
 9748              	.LBI7221:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9749              		.loc 18 186 7 view .LVU2251
 9750              	.LBB7222:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9751              		.loc 18 187 28 is_stmt 0 view .LVU2252
 9752 0026 0298     		ldr	r0, [sp, #8]
 9753              	.LVL663:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9754              		.loc 18 187 28 view .LVU2253
 9755              	.LBE7222:
 9756              	.LBE7221:
 9757              	.LBB7223:
 9758              	.LBI7223:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9759              		.loc 18 200 7 is_stmt 1 view .LVU2254
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 391


 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9760              		.loc 18 200 7 is_stmt 0 view .LVU2255
 9761              	.LBE7223:
 9762              	.LBE7220:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 9763              		.loc 18 231 2 view .LVU2256
 9764 0028 A842     		cmp	r0, r5
 9765 002a 03D0     		beq	.L571
 9766              	.LVL664:
 9767              	.LBB7224:
 9768              	.LBI7224:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 9769              		.loc 18 236 7 is_stmt 1 view .LVU2257
 9770              	.LBB7225:
 9771              	.LBB7226:
 9772              	.LBI7226:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 9773              		.loc 25 491 7 view .LVU2258
 9774              	.LBB7227:
 9775              	.LBI7227:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 9776              		.loc 20 120 7 view .LVU2259
 9777              	.LBE7227:
 9778              	.LBE7226:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9779              		.loc 18 237 34 is_stmt 0 view .LVU2260
 9780 002c 0499     		ldr	r1, [sp, #16]
 9781              	.LBB7230:
 9782              	.LBB7229:
 9783              	.LBB7228:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9784              		.loc 20 133 19 view .LVU2261
 9785 002e 0131     		adds	r1, r1, #1
 9786              	.LVL665:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9787              		.loc 20 133 19 view .LVU2262
 9788 0030 FFF7FEFF 		bl	_ZdlPvj
 9789              	.LVL666:
 9790              	.L571:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9791              		.loc 20 133 19 view .LVU2263
 9792              	.LBE7228:
 9793              	.LBE7229:
 9794              	.LBE7230:
 9795              	.LBE7225:
 9796              	.LBE7224:
 9797              	.LBE7231:
 9798              	.LBE7232:
 9799              	.LBB7233:
 9800              	.LBI7233:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9801              		.loc 18 150 14 is_stmt 1 view .LVU2264
 9802              	.LBB7234:
 9803              	.LBI7234:
 9804              		.loc 19 162 7 view .LVU2265
 9805              	.LBB7235:
 9806              	.LBI7235:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 392


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9807              		.loc 20 89 7 view .LVU2266
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9808              		.loc 20 89 7 is_stmt 0 view .LVU2267
 9809              	.LBE7235:
 9810              	.LBE7234:
 9811              	.LBE7233:
 9812              	.LBE7236:
 9813              	.LBE7238:
 238:Jellybeans.cpp ****     patch.display.DrawLine(0, 11, 128, 11, true);
 9814              		.loc 17 238 5 is_stmt 1 view .LVU2268
 9815              	.LBB7239:
 9816              	.LBI7239:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 9817              		.loc 5 221 10 view .LVU2269
 9818              	.LBB7240:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 9819              		.loc 5 239 26 view .LVU2270
 9820 0034 804B     		ldr	r3, .L617+8
 9821 0036 03F18001 		add	r1, r3, #128
 9822              	.LVL667:
 9823              	.L572:
 9824              	.LBB7241:
 9825              	.LBI7241:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 9826              		.loc 4 41 10 view .LVU2271
 9827              	.LBB7242:
 9828              	.LBI7242:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 9829              		.loc 14 239 10 view .LVU2272
 9830              	.LBB7243:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 9831              		.loc 14 244 42 is_stmt 0 view .LVU2273
 9832 003a 13F8012F 		ldrb	r2, [r3, #1]!	@ zero_extendqisi2
 9833              	.LVL668:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 9834              		.loc 14 244 42 view .LVU2274
 9835 003e 42F00802 		orr	r2, r2, #8
 9836              	.LBE7243:
 9837              	.LBE7242:
 9838              	.LBE7241:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 9839              		.loc 5 239 26 view .LVU2275
 9840 0042 9942     		cmp	r1, r3
 9841              	.LBB7246:
 9842              	.LBB7245:
 9843              	.LBB7244:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 9844              		.loc 14 244 42 view .LVU2276
 9845 0044 1A70     		strb	r2, [r3]
 9846              	.LVL669:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 9847              		.loc 14 244 42 view .LVU2277
 9848              	.LBE7244:
 9849              	.LBE7245:
 9850              	.LBE7246:
 239:../../libdaisy/src/hid/disp/display.h ****         {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 393


 9851              		.loc 5 239 26 is_stmt 1 view .LVU2278
 9852 0046 F8D1     		bne	.L572
 9853              	.LVL670:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 9854              		.loc 5 239 26 is_stmt 0 view .LVU2279
 9855              	.LBE7240:
 9856              	.LBE7239:
 241:Jellybeans.cpp ****     drawString(">", 0, 11);
 9857              		.loc 17 241 5 is_stmt 1 view .LVU2280
 9858              	.LBB7247:
 9859              	.LBI7247:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 9860              		.loc 19 144 7 view .LVU2281
 9861              	.LBB7248:
 9862              	.LBI7248:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9863              		.loc 20 79 7 view .LVU2282
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9864              		.loc 20 79 7 is_stmt 0 view .LVU2283
 9865              	.LBE7248:
 9866              	.LBE7247:
 9867              	.LBB7249:
 9868              	.LBI7249:
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 9869              		.loc 18 525 7 is_stmt 1 view .LVU2284
 9870              	.LBB7250:
 9871              	.LBB7251:
 9872              	.LBI7251:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9873              		.loc 18 190 7 view .LVU2285
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9874              		.loc 18 190 7 is_stmt 0 view .LVU2286
 9875              	.LBE7251:
 9876              	.LBB7252:
 9877              	.LBI7252:
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 9878              		.loc 18 156 2 is_stmt 1 view .LVU2287
 9879              	.LBB7253:
 9880              	.LBB7254:
 9881              	.LBB7255:
 9882              	.LBI7255:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9883              		.loc 19 147 7 view .LVU2288
 9884              	.LBB7256:
 9885              	.LBI7256:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9886              		.loc 20 82 7 view .LVU2289
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9887              		.loc 20 82 7 is_stmt 0 view .LVU2290
 9888              	.LBE7256:
 9889              	.LBE7255:
 9890              	.LBE7254:
 9891              	.LBE7253:
 9892              	.LBE7252:
 9893              	.LBB7257:
 9894              	.LBB7258:
 9895              	.LBB7259:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 394


 9896              	.LBB7260:
 9897              	.LBB7261:
 9898              	.LBB7262:
 9899              	.LBB7263:
 9900              	.LBB7264:
 9901              	.LBB7265:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9902              		.loc 18 183 26 view .LVU2291
 9903 0048 0122     		movs	r2, #1
 9904              	.LBE7265:
 9905              	.LBE7264:
 9906              	.LBE7263:
 9907              	.LBB7268:
 9908              	.LBB7269:
 9909              	.LBB7270:
 9910              	.LBB7271:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9911              		.loc 21 322 14 view .LVU2292
 9912 004a 3E23     		movs	r3, #62
 9913              	.LBE7271:
 9914              	.LBE7270:
 9915              	.LBE7269:
 9916              	.LBE7268:
 9917              	.LBE7262:
 9918              	.LBE7261:
 9919              	.LBE7260:
 9920              	.LBE7259:
 9921              	.LBE7258:
 9922              	.LBE7257:
 9923              	.LBE7250:
 9924              	.LBE7249:
 241:Jellybeans.cpp ****     drawString(">", 0, 11);
 9925              		.loc 17 241 15 view .LVU2293
 9926 004c 02A8     		add	r0, sp, #8
 9927              	.LVL671:
 241:Jellybeans.cpp ****     drawString(">", 0, 11);
 9928              		.loc 17 241 15 view .LVU2294
 9929 004e 0021     		movs	r1, #0
 9930              	.LBB7284:
 9931              	.LBB7283:
 9932              	.LBB7282:
 9933              	.LBB7281:
 9934              	.LBB7280:
 9935              	.LBB7279:
 9936              	.LBB7278:
 9937              	.LBB7277:
 9938              	.LBB7275:
 9939              	.LBB7274:
 9940              	.LBB7273:
 9941              	.LBB7272:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9942              		.loc 21 322 14 view .LVU2295
 9943 0050 ADF81030 		strh	r3, [sp, #16]	@ movhi
 9944              	.LVL672:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9945              		.loc 21 322 14 view .LVU2296
 9946              	.LBE7272:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 395


 9947              	.LBE7273:
 9948              	.LBE7274:
 9949              	.LBE7275:
 9950              	.LBB7276:
 9951              	.LBB7267:
 9952              	.LBB7266:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9953              		.loc 18 183 26 view .LVU2297
 9954 0054 CDE90252 		strd	r5, r2, [sp, #8]
 9955              	.LBE7266:
 9956              	.LBE7267:
 9957              	.LBE7276:
 9958              	.LBE7277:
 9959              	.LBE7278:
 9960              	.LBE7279:
 9961              	.LBE7280:
 9962              	.LBE7281:
 9963              	.LBE7282:
 9964              	.LBE7283:
 9965              	.LBE7284:
 241:Jellybeans.cpp ****     drawString(">", 0, 11);
 9966              		.loc 17 241 15 view .LVU2298
 9967 0058 0B22     		movs	r2, #11
 9968 005a FFF7FEFF 		bl	_Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
 9969              	.LVL673:
 9970              	.LBB7285:
 9971              	.LBI7285:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 9972              		.loc 18 657 7 is_stmt 1 view .LVU2299
 9973              	.LBB7286:
 9974              	.LBB7287:
 9975              	.LBI7287:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9976              		.loc 18 229 7 view .LVU2300
 9977              	.LBB7288:
 9978              	.LBB7289:
 9979              	.LBI7289:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 9980              		.loc 18 221 7 view .LVU2301
 9981              	.LBB7290:
 9982              	.LBI7290:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9983              		.loc 18 186 7 view .LVU2302
 9984              	.LBB7291:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9985              		.loc 18 187 28 is_stmt 0 view .LVU2303
 9986 005e 0298     		ldr	r0, [sp, #8]
 9987              	.LVL674:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9988              		.loc 18 187 28 view .LVU2304
 9989              	.LBE7291:
 9990              	.LBE7290:
 9991              	.LBB7292:
 9992              	.LBI7292:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9993              		.loc 18 200 7 is_stmt 1 view .LVU2305
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 396


 9994              		.loc 18 200 7 is_stmt 0 view .LVU2306
 9995              	.LBE7292:
 9996              	.LBE7289:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 9997              		.loc 18 231 2 view .LVU2307
 9998 0060 A842     		cmp	r0, r5
 9999 0062 03D0     		beq	.L573
 10000              	.LVL675:
 10001              	.LBB7293:
 10002              	.LBI7293:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10003              		.loc 18 236 7 is_stmt 1 view .LVU2308
 10004              	.LBB7294:
 10005              	.LBB7295:
 10006              	.LBI7295:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10007              		.loc 25 491 7 view .LVU2309
 10008              	.LBB7296:
 10009              	.LBI7296:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10010              		.loc 20 120 7 view .LVU2310
 10011              	.LBE7296:
 10012              	.LBE7295:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10013              		.loc 18 237 34 is_stmt 0 view .LVU2311
 10014 0064 0499     		ldr	r1, [sp, #16]
 10015              	.LBB7299:
 10016              	.LBB7298:
 10017              	.LBB7297:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10018              		.loc 20 133 19 view .LVU2312
 10019 0066 0131     		adds	r1, r1, #1
 10020              	.LVL676:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10021              		.loc 20 133 19 view .LVU2313
 10022 0068 FFF7FEFF 		bl	_ZdlPvj
 10023              	.LVL677:
 10024              	.L573:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10025              		.loc 20 133 19 view .LVU2314
 10026              	.LBE7297:
 10027              	.LBE7298:
 10028              	.LBE7299:
 10029              	.LBE7294:
 10030              	.LBE7293:
 10031              	.LBE7288:
 10032              	.LBE7287:
 10033              	.LBB7300:
 10034              	.LBI7300:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10035              		.loc 18 150 14 is_stmt 1 view .LVU2315
 10036              	.LBB7301:
 10037              	.LBI7301:
 10038              		.loc 19 162 7 view .LVU2316
 10039              	.LBB7302:
 10040              	.LBI7302:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 397


 10041              		.loc 20 89 7 view .LVU2317
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10042              		.loc 20 89 7 is_stmt 0 view .LVU2318
 10043              	.LBE7302:
 10044              	.LBE7301:
 10045              	.LBE7300:
 10046              	.LBE7286:
 10047              	.LBE7285:
 10048              	.LBB7303:
 10049              	.LBI7303:
 10050              		.loc 19 162 7 is_stmt 1 view .LVU2319
 10051              	.LBB7304:
 10052              	.LBI7304:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10053              		.loc 20 89 7 view .LVU2320
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10054              		.loc 20 89 7 is_stmt 0 view .LVU2321
 10055              	.LBE7304:
 10056              	.LBE7303:
 243:Jellybeans.cpp ****     int listSize = 5;
 10057              		.loc 17 243 5 is_stmt 1 view .LVU2322
 245:Jellybeans.cpp ****     if (debugMode){
 10058              		.loc 17 245 5 view .LVU2323
 247:Jellybeans.cpp ****         debugString = arp->getChord()->toString();
 10059              		.loc 17 247 9 view .LVU2324
 247:Jellybeans.cpp ****         debugString = arp->getChord()->toString();
 10060              		.loc 17 247 49 is_stmt 0 view .LVU2325
 10061 006c 2068     		ldr	r0, [r4]
 10062 006e FFF7FEFF 		bl	_ZN10jellybeans3Arp8getChordEv
 10063              	.LVL678:
 10064 0072 0146     		mov	r1, r0
 10065 0074 02A8     		add	r0, sp, #8
 10066              	.LVL679:
 10067              	.LBB7305:
 10068              	.LBB7306:
 10069              	.LBB7307:
 10070              	.LBB7308:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10071              		.loc 18 187 28 view .LVU2326
 10072 0076 714C     		ldr	r4, .L617+12
 10073              	.LBE7308:
 10074              	.LBE7307:
 10075              	.LBE7306:
 10076              	.LBE7305:
 247:Jellybeans.cpp ****         debugString = arp->getChord()->toString();
 10077              		.loc 17 247 49 view .LVU2327
 10078 0078 FFF7FEFF 		bl	_ZN10jellybeans13DiatonicChord8toStringB5cxx11Ev
 10079              	.LVL680:
 10080              	.LBB7402:
 10081              	.LBI7305:
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 10082              		.loc 18 703 7 is_stmt 1 view .LVU2328
 10083              	.LBB7313:
 10084              	.LBI7306:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 10085              		.loc 18 221 7 view .LVU2329
 10086              	.LBB7310:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 398


 10087              	.LBI7307:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10088              		.loc 18 186 7 view .LVU2330
 10089              	.LBE7310:
 10090              	.LBE7313:
 10091              	.LBB7314:
 10092              	.LBB7315:
 10093              	.LBB7316:
 10094              	.LBB7317:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10095              		.loc 18 187 28 is_stmt 0 view .LVU2331
 10096 007c 029B     		ldr	r3, [sp, #8]
 10097              	.LBE7317:
 10098              	.LBE7316:
 10099              	.LBE7315:
 10100              	.LBE7314:
 10101              	.LBB7386:
 10102              	.LBB7311:
 10103              	.LBB7309:
 10104 007e 2068     		ldr	r0, [r4]
 10105              	.LVL681:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10106              		.loc 18 187 28 view .LVU2332
 10107              	.LBE7309:
 10108              	.LBE7311:
 10109              	.LBB7312:
 10110              	.LBI7312:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10111              		.loc 18 200 7 is_stmt 1 view .LVU2333
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10112              		.loc 18 200 7 is_stmt 0 view .LVU2334
 10113              	.LBE7312:
 10114              	.LBE7386:
 10115              	.LBB7387:
 10116              	.LBB7320:
 10117              	.LBI7315:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 10118              		.loc 18 221 7 is_stmt 1 view .LVU2335
 10119              	.LBB7318:
 10120              	.LBI7316:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10121              		.loc 18 186 7 view .LVU2336
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10122              		.loc 18 186 7 is_stmt 0 view .LVU2337
 10123              	.LBE7318:
 10124              	.LBB7319:
 10125              	.LBI7319:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10126              		.loc 18 200 7 is_stmt 1 view .LVU2338
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10127              		.loc 18 200 7 is_stmt 0 view .LVU2339
 10128              	.LBE7319:
 10129              	.LBE7320:
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 10130              		.loc 18 718 2 view .LVU2340
 10131 0080 AB42     		cmp	r3, r5
 10132 0082 00F0BC80 		beq	.L610
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 399


 10133              	.LVL682:
 10134              	.LBB7321:
 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 10135              		.loc 18 732 6 view .LVU2341
 10136 0086 04F10802 		add	r2, r4, #8
 10137 008a 9042     		cmp	r0, r2
 10138 008c 63D0     		beq	.L611
 10139              	.LVL683:
 10140              	.LBB7322:
 10141              	.LBB7323:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10142              		.loc 18 211 31 view .LVU2342
 10143 008e 049A     		ldr	r2, [sp, #16]
 10144              	.LBE7323:
 10145              	.LBE7322:
 10146              	.LBB7326:
 10147              	.LBB7327:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10148              		.loc 18 179 26 view .LVU2343
 10149 0090 2360     		str	r3, [r4]
 10150              	.LBE7327:
 10151              	.LBE7326:
 10152              	.LBB7328:
 10153              	.LBB7329:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10154              		.loc 18 183 26 view .LVU2344
 10155 0092 039B     		ldr	r3, [sp, #12]
 10156 0094 6360     		str	r3, [r4, #4]
 10157              	.LBE7329:
 10158              	.LBE7328:
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
 10159              		.loc 18 738 18 view .LVU2345
 10160 0096 A368     		ldr	r3, [r4, #8]
 10161              	.LVL684:
 10162              	.LBB7331:
 10163              	.LBI7326:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 10164              		.loc 18 178 7 is_stmt 1 view .LVU2346
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 10165              		.loc 18 178 7 is_stmt 0 view .LVU2347
 10166              	.LBE7331:
 10167              	.LBB7332:
 10168              	.LBI7332:
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 10169              		.loc 18 907 7 is_stmt 1 view .LVU2348
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 10170              		.loc 18 907 7 is_stmt 0 view .LVU2349
 10171              	.LBE7332:
 10172              	.LBB7333:
 10173              	.LBI7328:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 10174              		.loc 18 182 7 is_stmt 1 view .LVU2350
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 10175              		.loc 18 182 7 is_stmt 0 view .LVU2351
 10176              	.LBE7333:
 10177              	.LBB7334:
 10178              	.LBI7322:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 400


 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 10179              		.loc 18 210 7 is_stmt 1 view .LVU2352
 10180              	.LBB7324:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10181              		.loc 18 211 31 is_stmt 0 view .LVU2353
 10182 0098 A260     		str	r2, [r4, #8]
 10183              	.LVL685:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10184              		.loc 18 211 31 view .LVU2354
 10185              	.LBE7324:
 10186              	.LBE7334:
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 10187              		.loc 18 747 6 view .LVU2355
 10188 009a 0028     		cmp	r0, #0
 10189 009c 60D0     		beq	.L579
 10190              	.LVL686:
 10191              	.LBB7335:
 10192              	.LBI7335:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 10193              		.loc 18 178 7 is_stmt 1 view .LVU2356
 10194              	.LBB7336:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10195              		.loc 18 179 26 is_stmt 0 view .LVU2357
 10196 009e 0290     		str	r0, [sp, #8]
 10197              	.LVL687:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10198              		.loc 18 179 26 view .LVU2358
 10199              	.LBE7336:
 10200              	.LBE7335:
 10201              	.LBB7337:
 10202              	.LBI7337:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 10203              		.loc 18 210 7 is_stmt 1 view .LVU2359
 10204              	.LBB7338:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10205              		.loc 18 211 31 is_stmt 0 view .LVU2360
 10206 00a0 0493     		str	r3, [sp, #16]
 10207              	.LVL688:
 10208              	.L577:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10209              		.loc 18 211 31 view .LVU2361
 10210              	.LBE7338:
 10211              	.LBE7337:
 10212              	.LBE7321:
 10213              	.LBE7387:
 10214              	.LBB7388:
 10215              	.LBI7388:
 994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 10216              		.loc 18 994 7 is_stmt 1 view .LVU2362
 10217              	.LBB7389:
 10218              	.LBI7389:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10219              		.loc 18 214 7 view .LVU2363
 10220              	.LBB7390:
 10221              	.LBI7390:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 10222              		.loc 18 182 7 view .LVU2364
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 401


 10223              	.LBB7391:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10224              		.loc 18 183 26 is_stmt 0 view .LVU2365
 10225 00a2 0023     		movs	r3, #0
 10226 00a4 0393     		str	r3, [sp, #12]
 10227              	.LVL689:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10228              		.loc 18 183 26 view .LVU2366
 10229              	.LBE7391:
 10230              	.LBE7390:
 10231              	.LBB7392:
 10232              	.LBI7392:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10233              		.loc 18 186 7 is_stmt 1 view .LVU2367
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10234              		.loc 18 186 7 is_stmt 0 view .LVU2368
 10235              	.LBE7392:
 10236              	.LBB7394:
 10237              	.LBI7394:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 10238              		.loc 21 321 7 is_stmt 1 view .LVU2369
 10239              	.LBB7395:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10240              		.loc 21 322 9 view .LVU2370
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10241              		.loc 21 322 14 is_stmt 0 view .LVU2371
 10242 00a6 0370     		strb	r3, [r0]
 10243              	.LVL690:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10244              		.loc 21 322 14 view .LVU2372
 10245              	.LBE7395:
 10246              	.LBE7394:
 10247              	.LBE7389:
 10248              	.LBE7388:
 10249              	.LBE7402:
 10250              	.LBB7403:
 10251              	.LBI7403:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 10252              		.loc 18 657 7 is_stmt 1 view .LVU2373
 10253              	.LBB7404:
 10254              	.LBB7405:
 10255              	.LBI7405:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10256              		.loc 18 229 7 view .LVU2374
 10257              	.LBB7406:
 10258              	.LBB7407:
 10259              	.LBI7407:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 10260              		.loc 18 221 7 view .LVU2375
 10261              	.LBB7408:
 10262              	.LBI7408:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10263              		.loc 18 186 7 view .LVU2376
 10264              	.LBB7409:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10265              		.loc 18 187 28 is_stmt 0 view .LVU2377
 10266 00a8 0298     		ldr	r0, [sp, #8]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 402


 10267              	.LVL691:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10268              		.loc 18 187 28 view .LVU2378
 10269              	.LBE7409:
 10270              	.LBE7408:
 10271              	.LBB7410:
 10272              	.LBI7410:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10273              		.loc 18 200 7 is_stmt 1 view .LVU2379
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10274              		.loc 18 200 7 is_stmt 0 view .LVU2380
 10275              	.LBE7410:
 10276              	.LBE7407:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10277              		.loc 18 231 2 view .LVU2381
 10278 00aa A842     		cmp	r0, r5
 10279 00ac 03D0     		beq	.L580
 10280              	.LVL692:
 10281              	.LBB7411:
 10282              	.LBI7411:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10283              		.loc 18 236 7 is_stmt 1 view .LVU2382
 10284              	.LBB7412:
 10285              	.LBB7413:
 10286              	.LBI7413:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10287              		.loc 25 491 7 view .LVU2383
 10288              	.LBB7414:
 10289              	.LBI7414:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10290              		.loc 20 120 7 view .LVU2384
 10291              	.LBE7414:
 10292              	.LBE7413:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10293              		.loc 18 237 34 is_stmt 0 view .LVU2385
 10294 00ae 0499     		ldr	r1, [sp, #16]
 10295              	.LBB7417:
 10296              	.LBB7416:
 10297              	.LBB7415:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10298              		.loc 20 133 19 view .LVU2386
 10299 00b0 0131     		adds	r1, r1, #1
 10300              	.LVL693:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10301              		.loc 20 133 19 view .LVU2387
 10302 00b2 FFF7FEFF 		bl	_ZdlPvj
 10303              	.LVL694:
 10304              	.L580:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10305              		.loc 20 133 19 view .LVU2388
 10306              	.LBE7415:
 10307              	.LBE7416:
 10308              	.LBE7417:
 10309              	.LBE7412:
 10310              	.LBE7411:
 10311              	.LBE7406:
 10312              	.LBE7405:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 403


 10313              	.LBB7418:
 10314              	.LBI7418:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10315              		.loc 18 150 14 is_stmt 1 view .LVU2389
 10316              	.LBB7419:
 10317              	.LBI7419:
 10318              		.loc 19 162 7 view .LVU2390
 10319              	.LBB7420:
 10320              	.LBI7420:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10321              		.loc 20 89 7 view .LVU2391
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10322              		.loc 20 89 7 is_stmt 0 view .LVU2392
 10323              	.LBE7420:
 10324              	.LBE7419:
 10325              	.LBE7418:
 10326              	.LBE7404:
 10327              	.LBE7403:
 248:Jellybeans.cpp ****         listSize--;
 10328              		.loc 17 248 9 is_stmt 1 view .LVU2393
 249:Jellybeans.cpp ****         patch.display.DrawLine(0, 53, 128, 53, true);
 10329              		.loc 17 249 9 view .LVU2394
 10330              	.LBB7421:
 10331              	.LBI7421:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 10332              		.loc 5 221 10 view .LVU2395
 10333              	.LBB7422:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 10334              		.loc 5 239 26 view .LVU2396
 10335 00b6 624B     		ldr	r3, .L617+16
 10336 00b8 03F18001 		add	r1, r3, #128
 10337              	.LVL695:
 10338              	.L581:
 10339              	.LBB7423:
 10340              	.LBI7423:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 10341              		.loc 4 41 10 view .LVU2397
 10342              	.LBB7424:
 10343              	.LBI7424:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 10344              		.loc 14 239 10 view .LVU2398
 10345              	.LBB7425:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 10346              		.loc 14 244 42 is_stmt 0 view .LVU2399
 10347 00bc 13F8012F 		ldrb	r2, [r3, #1]!	@ zero_extendqisi2
 10348              	.LVL696:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 10349              		.loc 14 244 42 view .LVU2400
 10350 00c0 42F02002 		orr	r2, r2, #32
 10351              	.LBE7425:
 10352              	.LBE7424:
 10353              	.LBE7423:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 10354              		.loc 5 239 26 view .LVU2401
 10355 00c4 9942     		cmp	r1, r3
 10356              	.LBB7428:
 10357              	.LBB7427:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 404


 10358              	.LBB7426:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 10359              		.loc 14 244 42 view .LVU2402
 10360 00c6 1A70     		strb	r2, [r3]
 10361              	.LVL697:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 10362              		.loc 14 244 42 view .LVU2403
 10363              	.LBE7426:
 10364              	.LBE7427:
 10365              	.LBE7428:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 10366              		.loc 5 239 26 is_stmt 1 view .LVU2404
 10367 00c8 F8D1     		bne	.L581
 10368              	.LVL698:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 10369              		.loc 5 239 26 is_stmt 0 view .LVU2405
 10370              	.LBE7422:
 10371              	.LBE7421:
 250:Jellybeans.cpp ****         drawString(debugString, 2, 54);
 10372              		.loc 17 250 9 is_stmt 1 view .LVU2406
 10373              	.LBB7429:
 10374              	.LBI7429:
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 10375              		.loc 18 448 7 view .LVU2407
 10376              	.LBB7430:
 10377              	.LBB7431:
 10378              	.LBB7432:
 10379              	.LBI7432:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10380              		.loc 18 190 7 view .LVU2408
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10381              		.loc 18 190 7 is_stmt 0 view .LVU2409
 10382              	.LBE7432:
 10383              	.LBB7433:
 10384              	.LBI7433:
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 10385              		.loc 18 290 7 is_stmt 1 view .LVU2410
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 10386              		.loc 18 290 7 is_stmt 0 view .LVU2411
 10387              	.LBE7433:
 10388              	.LBB7434:
 10389              	.LBI7434:
 10390              		.file 35 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\allo
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // GNU General Public License for more details.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 405


  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** /** @file ext/alloc_traits.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  */
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #pragma GCC system_header
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** # include <bits/alloc_traits.h>
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus < 201103L
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #endif
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** {
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** /**
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++11 allocators.
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  * @ingroup allocators
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** */
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** template<typename _Alloc, typename = typename _Alloc::value_type>
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   struct __alloc_traits
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   : std::allocator_traits<_Alloc>
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #endif
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   {
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef _Alloc allocator_type;
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef value_type&                             reference;
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef const value_type&                       const_reference;
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::allocate;
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::deallocate;
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::construct;
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::destroy;
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::max_size;
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   private:
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 406


  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       using __is_custom_pointer
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   public:
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // overload construct for non-standard pointer types
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr, typename... _Args>
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       noexcept(noexcept(_Base_type::construct(__a, std::__to_address(__p),
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 					      std::forward<_Args>(__args)...)))
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       {
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 	_Base_type::construct(__a, std::__to_address(__p),
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 			      std::forward<_Args>(__args)...);
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       }
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // overload destroy for non-standard pointer types
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr>
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       { _Base_type::destroy(__a, std::__to_address(__p)); }
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
 10391              		.loc 35 97 29 is_stmt 1 view .LVU2412
 10392              	.LBB7435:
 10393              	.LBI7435:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 10394              		.loc 25 558 7 view .LVU2413
 10395              	.LBB7436:
 10396              	.LBI7436:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10397              		.loc 19 147 7 view .LVU2414
 10398              	.LBB7437:
 10399              	.LBI7437:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10400              		.loc 20 82 7 view .LVU2415
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10401              		.loc 20 82 7 is_stmt 0 view .LVU2416
 10402              	.LBE7437:
 10403              	.LBE7436:
 10404              	.LBE7435:
 10405              	.LBE7434:
 10406              	.LBB7438:
 10407              	.LBI7438:
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 10408              		.loc 18 159 2 is_stmt 1 view .LVU2417
 10409              	.LBB7439:
 10410              	.LBB7440:
 10411              	.LBB7441:
 10412              	.LBI7441:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 10413              		.loc 34 101 5 view .LVU2418
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 10414              		.loc 34 101 5 is_stmt 0 view .LVU2419
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 407


 10415              	.LBE7441:
 10416              	.LBB7442:
 10417              	.LBI7442:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10418              		.loc 19 147 7 is_stmt 1 view .LVU2420
 10419              	.LBB7443:
 10420              	.LBI7443:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10421              		.loc 20 82 7 view .LVU2421
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10422              		.loc 20 82 7 is_stmt 0 view .LVU2422
 10423              	.LBE7443:
 10424              	.LBE7442:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 10425              		.loc 18 160 46 view .LVU2423
 10426 00ca 0295     		str	r5, [sp, #8]
 10427              	.LVL699:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 10428              		.loc 18 160 46 view .LVU2424
 10429              	.LBE7440:
 10430              	.LBE7439:
 10431              	.LBE7438:
 10432              	.LBB7444:
 10433              	.LBI7444:
 10434              		.loc 19 162 7 is_stmt 1 view .LVU2425
 10435              	.LBB7445:
 10436              	.LBI7445:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10437              		.loc 20 89 7 view .LVU2426
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10438              		.loc 20 89 7 is_stmt 0 view .LVU2427
 10439              	.LBE7445:
 10440              	.LBE7444:
 10441              	.LBB7446:
 10442              	.LBI7446:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10443              		.loc 18 186 7 is_stmt 1 view .LVU2428
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10444              		.loc 18 186 7 is_stmt 0 view .LVU2429
 10445              	.LBE7446:
 10446              	.LBB7447:
 10447              	.LBI7447:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10448              		.loc 18 186 7 is_stmt 1 view .LVU2430
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10449              		.loc 18 186 7 is_stmt 0 view .LVU2431
 10450              	.LBE7447:
 10451              	.LBB7448:
 10452              	.LBI7448:
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 10453              		.loc 18 907 7 is_stmt 1 view .LVU2432
 10454              	.LBB7449:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10455              		.loc 18 908 16 is_stmt 0 view .LVU2433
 10456 00cc D4E90064 		ldrd	r6, r4, [r4]
 10457              	.LVL700:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 408


 10458              		.loc 18 908 16 view .LVU2434
 10459              	.LBE7449:
 10460              	.LBE7448:
 10461              	.LBB7450:
 10462              	.LBI7450:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 10463              		.loc 18 263 9 is_stmt 1 view .LVU2435
 10464              	.LBB7451:
 10465              	.LBB7452:
 10466              	.LBI7452:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 10467              		.loc 18 243 9 view .LVU2436
 10468              	.LBB7453:
 10469              	.LBB7454:
 10470              	.LBI7454:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 10471              		.loc 22 206 7 view .LVU2437
 10472              	.LBB7455:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 10473              		.loc 22 211 42 is_stmt 0 view .LVU2438
 10474 00d0 E642     		cmn	r6, r4
 10475 00d2 02D0     		beq	.L582
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 10476              		.loc 22 211 42 view .LVU2439
 10477 00d4 002E     		cmp	r6, #0
 10478 00d6 00F0A880 		beq	.L612
 10479              	.L582:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 10480              		.loc 22 217 2 view .LVU2440
 10481 00da 0F2C     		cmp	r4, #15
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 10482              		.loc 22 215 12 view .LVU2441
 10483 00dc 0194     		str	r4, [sp, #4]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 10484              		.loc 22 217 2 view .LVU2442
 10485 00de 7FD8     		bhi	.L613
 10486              	.LVL701:
 10487              	.LBB7456:
 10488              	.LBI7456:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10489              		.loc 18 186 7 is_stmt 1 view .LVU2443
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10490              		.loc 18 186 7 is_stmt 0 view .LVU2444
 10491              	.LBE7456:
 10492              	.LBB7458:
 10493              	.LBI7458:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 10494              		.loc 18 392 7 is_stmt 1 view .LVU2445
 10495              	.LBB7459:
 10496              	.LBI7459:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10497              		.loc 18 346 7 view .LVU2446
 10498              	.LBB7460:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 10499              		.loc 18 348 2 is_stmt 0 view .LVU2447
 10500 00e0 012C     		cmp	r4, #1
 10501 00e2 7AD1     		bne	.L585
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 409


 10502              	.LVL702:
 10503              	.LBB7461:
 10504              	.LBI7461:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 10505              		.loc 21 321 7 is_stmt 1 view .LVU2448
 10506              	.LBB7462:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10507              		.loc 21 322 9 view .LVU2449
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10508              		.loc 21 322 16 is_stmt 0 view .LVU2450
 10509 00e4 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10510              		.loc 21 322 22 view .LVU2451
 10511 00e6 2A46     		mov	r2, r5
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10512              		.loc 21 322 14 view .LVU2452
 10513 00e8 8DF81030 		strb	r3, [sp, #16]
 10514              	.LVL703:
 10515              	.L586:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10516              		.loc 21 322 14 view .LVU2453
 10517              	.LBE7462:
 10518              	.LBE7461:
 10519              	.LBE7460:
 10520              	.LBE7459:
 10521              	.LBE7458:
 10522              	.LBB7478:
 10523              	.LBI7478:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10524              		.loc 18 214 7 is_stmt 1 view .LVU2454
 10525              	.LBB7479:
 10526              	.LBB7480:
 10527              	.LBI7480:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 10528              		.loc 18 182 7 view .LVU2455
 10529              	.LBE7480:
 10530              	.LBB7482:
 10531              	.LBB7483:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10532              		.loc 21 322 14 is_stmt 0 view .LVU2456
 10533 00ec 0023     		movs	r3, #0
 10534              	.LBE7483:
 10535              	.LBE7482:
 10536              	.LBE7479:
 10537              	.LBE7478:
 10538              	.LBE7455:
 10539              	.LBE7454:
 10540              	.LBE7453:
 10541              	.LBE7452:
 10542              	.LBE7451:
 10543              	.LBE7450:
 10544              	.LBE7431:
 10545              	.LBE7430:
 10546              	.LBE7429:
 250:Jellybeans.cpp ****         drawString(debugString, 2, 54);
 10547              		.loc 17 250 19 view .LVU2457
 10548 00ee 02A8     		add	r0, sp, #8
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 410


 10549              	.LVL704:
 10550              	.LBB7542:
 10551              	.LBB7538:
 10552              	.LBB7534:
 10553              	.LBB7530:
 10554              	.LBB7526:
 10555              	.LBB7522:
 10556              	.LBB7518:
 10557              	.LBB7514:
 10558              	.LBB7510:
 10559              	.LBB7495:
 10560              	.LBB7492:
 10561              	.LBB7486:
 10562              	.LBB7481:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10563              		.loc 18 183 26 view .LVU2458
 10564 00f0 0394     		str	r4, [sp, #12]
 10565              	.LVL705:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10566              		.loc 18 183 26 view .LVU2459
 10567              	.LBE7481:
 10568              	.LBE7486:
 10569              	.LBB7487:
 10570              	.LBI7487:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10571              		.loc 18 186 7 is_stmt 1 view .LVU2460
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10572              		.loc 18 186 7 is_stmt 0 view .LVU2461
 10573              	.LBE7487:
 10574              	.LBB7489:
 10575              	.LBI7482:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 10576              		.loc 21 321 7 is_stmt 1 view .LVU2462
 10577              	.LBB7484:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10578              		.loc 21 322 9 view .LVU2463
 10579              	.LBE7484:
 10580              	.LBE7489:
 10581              	.LBE7492:
 10582              	.LBE7495:
 10583              	.LBE7510:
 10584              	.LBE7514:
 10585              	.LBE7518:
 10586              	.LBE7522:
 10587              	.LBE7526:
 10588              	.LBE7530:
 10589              	.LBE7534:
 10590              	.LBE7538:
 10591              	.LBE7542:
 250:Jellybeans.cpp ****         drawString(debugString, 2, 54);
 10592              		.loc 17 250 19 is_stmt 0 view .LVU2464
 10593 00f2 0221     		movs	r1, #2
 10594              	.LBB7543:
 10595              	.LBB7539:
 10596              	.LBB7535:
 10597              	.LBB7531:
 10598              	.LBB7527:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 411


 10599              	.LBB7523:
 10600              	.LBB7519:
 10601              	.LBB7515:
 10602              	.LBB7511:
 10603              	.LBB7496:
 10604              	.LBB7493:
 10605              	.LBB7490:
 10606              	.LBB7485:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10607              		.loc 21 322 14 view .LVU2465
 10608 00f4 1355     		strb	r3, [r2, r4]
 10609              	.LVL706:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10610              		.loc 21 322 14 view .LVU2466
 10611              	.LBE7485:
 10612              	.LBE7490:
 10613              	.LBE7493:
 10614              	.LBE7496:
 10615              	.LBE7511:
 10616              	.LBE7515:
 10617              	.LBE7519:
 10618              	.LBE7523:
 10619              	.LBE7527:
 10620              	.LBE7531:
 10621              	.LBE7535:
 10622              	.LBE7539:
 10623              	.LBE7543:
 250:Jellybeans.cpp ****         drawString(debugString, 2, 54);
 10624              		.loc 17 250 19 view .LVU2467
 10625 00f6 3622     		movs	r2, #54
 10626 00f8 FFF7FEFF 		bl	_Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
 10627              	.LVL707:
 10628              	.LBB7544:
 10629              	.LBI7544:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 10630              		.loc 18 657 7 is_stmt 1 view .LVU2468
 10631              	.LBB7545:
 10632              	.LBB7546:
 10633              	.LBI7546:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10634              		.loc 18 229 7 view .LVU2469
 10635              	.LBB7547:
 10636              	.LBB7548:
 10637              	.LBI7548:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 10638              		.loc 18 221 7 view .LVU2470
 10639              	.LBB7549:
 10640              	.LBI7549:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10641              		.loc 18 186 7 view .LVU2471
 10642              	.LBB7550:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10643              		.loc 18 187 28 is_stmt 0 view .LVU2472
 10644 00fc 0298     		ldr	r0, [sp, #8]
 10645              	.LVL708:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10646              		.loc 18 187 28 view .LVU2473
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 412


 10647              	.LBE7550:
 10648              	.LBE7549:
 10649              	.LBB7551:
 10650              	.LBI7551:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10651              		.loc 18 200 7 is_stmt 1 view .LVU2474
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10652              		.loc 18 200 7 is_stmt 0 view .LVU2475
 10653              	.LBE7551:
 10654              	.LBE7548:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10655              		.loc 18 231 2 view .LVU2476
 10656 00fe A842     		cmp	r0, r5
 10657 0100 03D0     		beq	.L587
 10658              	.LVL709:
 10659              	.LBB7552:
 10660              	.LBI7552:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10661              		.loc 18 236 7 is_stmt 1 view .LVU2477
 10662              	.LBB7553:
 10663              	.LBB7554:
 10664              	.LBI7554:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10665              		.loc 25 491 7 view .LVU2478
 10666              	.LBB7555:
 10667              	.LBI7555:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10668              		.loc 20 120 7 view .LVU2479
 10669              	.LBE7555:
 10670              	.LBE7554:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10671              		.loc 18 237 34 is_stmt 0 view .LVU2480
 10672 0102 0499     		ldr	r1, [sp, #16]
 10673              	.LBB7558:
 10674              	.LBB7557:
 10675              	.LBB7556:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10676              		.loc 20 133 19 view .LVU2481
 10677 0104 0131     		adds	r1, r1, #1
 10678              	.LVL710:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10679              		.loc 20 133 19 view .LVU2482
 10680 0106 FFF7FEFF 		bl	_ZdlPvj
 10681              	.LVL711:
 10682              	.L587:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10683              		.loc 20 133 19 view .LVU2483
 10684              	.LBE7556:
 10685              	.LBE7557:
 10686              	.LBE7558:
 10687              	.LBE7553:
 10688              	.LBE7552:
 10689              	.LBE7547:
 10690              	.LBE7546:
 10691              	.LBB7559:
 10692              	.LBI7559:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 413


 10693              		.loc 18 150 14 is_stmt 1 view .LVU2484
 10694              	.LBB7560:
 10695              	.LBI7560:
 10696              		.loc 19 162 7 view .LVU2485
 10697              	.LBB7561:
 10698              	.LBI7561:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10699              		.loc 20 89 7 view .LVU2486
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10700              		.loc 20 89 7 is_stmt 0 view .LVU2487
 10701              	.LBE7561:
 10702              	.LBE7560:
 10703              	.LBE7559:
 10704              	.LBE7545:
 10705              	.LBE7544:
 254:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10706              		.loc 17 254 5 is_stmt 1 view .LVU2488
 10707              	.LBB7562:
 254:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10708              		.loc 17 254 13 is_stmt 0 view .LVU2489
 10709 010a 4E4F     		ldr	r7, .L617+20
 10710 010c 4E4E     		ldr	r6, .L617+24
 10711 010e 3C68     		ldr	r4, [r7]
 10712              	.LVL712:
 254:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10713              		.loc 17 254 28 is_stmt 1 view .LVU2490
 10714 0110 04EB8403 		add	r3, r4, r4, lsl #2
 10715 0114 06EB0316 		add	r6, r6, r3, lsl #4
 10716 0118 05E0     		b	.L590
 10717              	.L588:
 254:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10718              		.loc 17 254 5 discriminator 2 view .LVU2491
 254:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10719              		.loc 17 254 38 is_stmt 0 discriminator 2 view .LVU2492
 10720 011a 3B68     		ldr	r3, [r7]
 254:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10721              		.loc 17 254 5 discriminator 2 view .LVU2493
 10722 011c 0134     		adds	r4, r4, #1
 10723              	.LVL713:
 254:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10724              		.loc 17 254 28 is_stmt 1 discriminator 2 view .LVU2494
 10725 011e 5036     		adds	r6, r6, #80
 254:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10726              		.loc 17 254 38 is_stmt 0 discriminator 2 view .LVU2495
 10727 0120 0433     		adds	r3, r3, #4
 254:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10728              		.loc 17 254 28 discriminator 2 view .LVU2496
 10729 0122 A342     		cmp	r3, r4
 10730 0124 20DD     		ble	.L614
 10731              	.L590:
 255:Jellybeans.cpp ****         if (i < (int) menuItems.size()){
 10732              		.loc 17 255 9 is_stmt 1 view .LVU2497
 10733 0126 092C     		cmp	r4, #9
 10734 0128 F7DC     		bgt	.L588
 256:Jellybeans.cpp ****             drawString(menuItems[i].displayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10735              		.loc 17 256 13 view .LVU2498
 10736              	.LVL714:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 414


 10737              	.LBB7563:
 10738              	.LBI7563:
 10739              		.loc 24 185 7 view .LVU2499
 10740              	.LBB7564:
 10741              	.LBI7564:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 10742              		.loc 24 55 7 view .LVU2500
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 10743              		.loc 24 55 7 is_stmt 0 view .LVU2501
 10744              	.LBE7564:
 10745              	.LBE7563:
 256:Jellybeans.cpp ****             drawString(menuItems[i].displayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10746              		.loc 17 256 50 view .LVU2502
 10747 012a 3146     		mov	r1, r6
 10748 012c 02A8     		add	r0, sp, #8
 10749              	.LVL715:
 256:Jellybeans.cpp ****             drawString(menuItems[i].displayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10750              		.loc 17 256 50 view .LVU2503
 10751 012e FFF7FEFF 		bl	_ZN10jellybeans8MenuItem12displayValueB5cxx11Ev
 10752              	.LVL716:
 256:Jellybeans.cpp ****             drawString(menuItems[i].displayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10753              		.loc 17 256 67 view .LVU2504
 10754 0132 3B68     		ldr	r3, [r7]
 256:Jellybeans.cpp ****             drawString(menuItems[i].displayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10755              		.loc 17 256 23 view .LVU2505
 10756 0134 02A8     		add	r0, sp, #8
 10757              	.LVL717:
 256:Jellybeans.cpp ****             drawString(menuItems[i].displayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10758              		.loc 17 256 23 view .LVU2506
 10759 0136 0721     		movs	r1, #7
 256:Jellybeans.cpp ****             drawString(menuItems[i].displayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10760              		.loc 17 256 67 view .LVU2507
 10761 0138 E31A     		subs	r3, r4, r3
 256:Jellybeans.cpp ****             drawString(menuItems[i].displayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10762              		.loc 17 256 78 view .LVU2508
 10763 013a 03EB8303 		add	r3, r3, r3, lsl #2
 10764 013e 5A00     		lsls	r2, r3, #1
 256:Jellybeans.cpp ****             drawString(menuItems[i].displayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10765              		.loc 17 256 23 view .LVU2509
 10766 0140 0C32     		adds	r2, r2, #12
 10767 0142 FFF7FEFF 		bl	_Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
 10768              	.LVL718:
 10769              	.LBB7565:
 10770              	.LBI7565:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 10771              		.loc 18 657 7 is_stmt 1 view .LVU2510
 10772              	.LBB7566:
 10773              	.LBB7567:
 10774              	.LBI7567:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10775              		.loc 18 229 7 view .LVU2511
 10776              	.LBB7568:
 10777              	.LBB7569:
 10778              	.LBI7569:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 10779              		.loc 18 221 7 view .LVU2512
 10780              	.LBB7570:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 415


 10781              	.LBI7570:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10782              		.loc 18 186 7 view .LVU2513
 10783              	.LBB7571:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10784              		.loc 18 187 28 is_stmt 0 view .LVU2514
 10785 0146 0298     		ldr	r0, [sp, #8]
 10786              	.LVL719:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10787              		.loc 18 187 28 view .LVU2515
 10788              	.LBE7571:
 10789              	.LBE7570:
 10790              	.LBB7572:
 10791              	.LBI7572:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10792              		.loc 18 200 7 is_stmt 1 view .LVU2516
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10793              		.loc 18 200 7 is_stmt 0 view .LVU2517
 10794              	.LBE7572:
 10795              	.LBE7569:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10796              		.loc 18 231 2 view .LVU2518
 10797 0148 A842     		cmp	r0, r5
 10798 014a E6D0     		beq	.L588
 10799              	.LVL720:
 10800              	.LBB7573:
 10801              	.LBI7573:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10802              		.loc 18 236 7 is_stmt 1 view .LVU2519
 10803              	.LBB7574:
 10804              	.LBB7575:
 10805              	.LBI7575:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10806              		.loc 25 491 7 view .LVU2520
 10807              	.LBB7576:
 10808              	.LBI7576:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10809              		.loc 20 120 7 view .LVU2521
 10810              	.LBE7576:
 10811              	.LBE7575:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10812              		.loc 18 237 34 is_stmt 0 view .LVU2522
 10813 014c 0499     		ldr	r1, [sp, #16]
 10814              	.LBB7579:
 10815              	.LBB7578:
 10816              	.LBB7577:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10817              		.loc 20 133 19 view .LVU2523
 10818 014e 0131     		adds	r1, r1, #1
 10819              	.LVL721:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10820              		.loc 20 133 19 view .LVU2524
 10821 0150 FFF7FEFF 		bl	_ZdlPvj
 10822              	.LVL722:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10823              		.loc 20 133 19 view .LVU2525
 10824              	.LBE7577:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 416


 10825              	.LBE7578:
 10826              	.LBE7579:
 10827              	.LBE7574:
 10828              	.LBE7573:
 10829              	.LBE7568:
 10830              	.LBE7567:
 10831              	.LBB7583:
 10832              	.LBI7583:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10833              		.loc 18 150 14 is_stmt 1 view .LVU2526
 10834              	.LBB7584:
 10835              	.LBI7584:
 10836              		.loc 19 162 7 view .LVU2527
 10837              	.LBB7585:
 10838              	.LBI7585:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10839              		.loc 20 89 7 view .LVU2528
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10840              		.loc 20 89 7 is_stmt 0 view .LVU2529
 10841              	.LBE7585:
 10842              	.LBE7584:
 10843              	.LBE7583:
 10844              	.LBB7586:
 10845              	.LBB7582:
 10846              	.LBB7581:
 10847              	.LBB7580:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10848              		.loc 18 237 79 view .LVU2530
 10849 0154 E1E7     		b	.L588
 10850              	.LVL723:
 10851              	.L611:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10852              		.loc 18 237 79 view .LVU2531
 10853              	.LBE7580:
 10854              	.LBE7581:
 10855              	.LBE7582:
 10856              	.LBE7586:
 10857              	.LBE7566:
 10858              	.LBE7565:
 10859              	.LBE7562:
 10860              	.LBB7587:
 10861              	.LBB7398:
 10862              	.LBB7344:
 10863              	.LBB7339:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 10864              		.loc 18 178 7 is_stmt 1 view .LVU2532
 10865              	.LBE7339:
 10866              	.LBB7340:
 10867              	.LBB7330:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10868              		.loc 18 183 26 is_stmt 0 view .LVU2533
 10869 0156 039A     		ldr	r2, [sp, #12]
 10870 0158 C4E90032 		strd	r3, r2, [r4]
 10871              	.LVL724:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10872              		.loc 18 183 26 view .LVU2534
 10873              	.LBE7330:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 417


 10874              	.LBE7340:
 10875              	.LBB7341:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 10876              		.loc 18 210 7 is_stmt 1 view .LVU2535
 10877              	.LBB7325:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10878              		.loc 18 211 31 is_stmt 0 view .LVU2536
 10879 015c 049B     		ldr	r3, [sp, #16]
 10880              	.LVL725:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10881              		.loc 18 211 31 view .LVU2537
 10882 015e A360     		str	r3, [r4, #8]
 10883              	.LVL726:
 10884              	.L579:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10885              		.loc 18 211 31 view .LVU2538
 10886              	.LBE7325:
 10887              	.LBE7341:
 10888              	.LBB7342:
 10889              	.LBI7342:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 10890              		.loc 18 178 7 is_stmt 1 view .LVU2539
 10891              	.LBB7343:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10892              		.loc 18 179 26 is_stmt 0 view .LVU2540
 10893 0160 0295     		str	r5, [sp, #8]
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10894              		.loc 18 179 33 view .LVU2541
 10895 0162 04AD     		add	r5, sp, #16
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10896              		.loc 18 179 33 view .LVU2542
 10897 0164 2846     		mov	r0, r5
 10898 0166 9CE7     		b	.L577
 10899              	.LVL727:
 10900              	.L614:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10901              		.loc 18 179 33 view .LVU2543
 10902 0168 324E     		ldr	r6, .L617+4
 10903              	.LBE7343:
 10904              	.LBE7342:
 10905              	.LBE7344:
 10906              	.LBE7398:
 10907              	.LBE7587:
 10908              	.LBB7588:
 254:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10909              		.loc 17 254 28 view .LVU2544
 10910 016a B024     		movs	r4, #176
 10911              	.LVL728:
 10912              	.L591:
 254:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10913              		.loc 17 254 28 view .LVU2545
 10914 016c 0025     		movs	r5, #0
 10915              	.LBE7588:
 10916              	.LBB7589:
 10917              	.LBB7590:
 10918              	.LBB7591:
 10919              	.LBB7592:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 418


 10920              	.LBB7593:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 10921              		.loc 14 111 23 view .LVU2546
 10922 016e 3748     		ldr	r0, .L617+28
 10923 0170 8DF80840 		strb	r4, [sp, #8]
 10924              	.LVL729:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 10925              		.loc 14 111 23 view .LVU2547
 10926              	.LBE7593:
 10927              	.LBI7592:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 10928              		.loc 14 109 10 is_stmt 1 view .LVU2548
 10929              	.LBB7594:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 10930              		.loc 14 111 9 view .LVU2549
 10931              	.LBE7594:
 10932              	.LBE7592:
 10933              		.loc 14 270 22 is_stmt 0 view .LVU2550
 10934 0174 0134     		adds	r4, r4, #1
 10935              	.LVL730:
 10936              	.LBB7597:
 10937              	.LBB7595:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 10938              		.loc 14 111 23 view .LVU2551
 10939 0176 2946     		mov	r1, r5
 10940 0178 FFF7FEFF 		bl	dsy_gpio_write
 10941              	.LVL731:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10942              		.loc 14 112 9 is_stmt 1 view .LVU2552
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10943              		.loc 14 112 30 is_stmt 0 view .LVU2553
 10944 017c 6423     		movs	r3, #100
 10945 017e 0122     		movs	r2, #1
 10946 0180 02A9     		add	r1, sp, #8
 10947              	.LVL732:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10948              		.loc 14 112 30 view .LVU2554
 10949 0182 3348     		ldr	r0, .L617+32
 10950              	.LVL733:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10951              		.loc 14 112 30 view .LVU2555
 10952              	.LBE7595:
 10953              	.LBE7597:
 10954              		.loc 14 270 22 view .LVU2556
 10955 0184 E4B2     		uxtb	r4, r4
 10956              	.LBB7598:
 10957              	.LBB7596:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10958              		.loc 14 112 30 view .LVU2557
 10959 0186 FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 10960              	.LVL734:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10961              		.loc 14 112 30 view .LVU2558
 10962              	.LBE7596:
 10963              	.LBE7598:
 10964              	.LBB7599:
 10965              	.LBB7600:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 419


 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 10966              		.loc 14 111 23 view .LVU2559
 10967 018a 2946     		mov	r1, r5
 10968 018c 2F48     		ldr	r0, .L617+28
 10969 018e 8DF80850 		strb	r5, [sp, #8]
 10970              	.LVL735:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 10971              		.loc 14 111 23 view .LVU2560
 10972              	.LBE7600:
 10973              	.LBI7599:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 10974              		.loc 14 109 10 is_stmt 1 view .LVU2561
 10975              	.LBB7601:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 10976              		.loc 14 111 9 view .LVU2562
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 10977              		.loc 14 111 23 is_stmt 0 view .LVU2563
 10978 0192 FFF7FEFF 		bl	dsy_gpio_write
 10979              	.LVL736:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10980              		.loc 14 112 9 is_stmt 1 view .LVU2564
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10981              		.loc 14 112 30 is_stmt 0 view .LVU2565
 10982 0196 0122     		movs	r2, #1
 10983 0198 6423     		movs	r3, #100
 10984 019a 02A9     		add	r1, sp, #8
 10985              	.LVL737:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10986              		.loc 14 112 30 view .LVU2566
 10987 019c 2C48     		ldr	r0, .L617+32
 10988              	.LVL738:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10989              		.loc 14 112 30 view .LVU2567
 10990 019e FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 10991              	.LVL739:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10992              		.loc 14 112 30 view .LVU2568
 10993 01a2 1023     		movs	r3, #16
 10994              	.LBE7601:
 10995              	.LBE7599:
 10996              	.LBB7602:
 10997              	.LBB7603:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 10998              		.loc 14 111 23 view .LVU2569
 10999 01a4 2946     		mov	r1, r5
 11000 01a6 2948     		ldr	r0, .L617+28
 11001 01a8 8DF80830 		strb	r3, [sp, #8]
 11002              	.LVL740:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11003              		.loc 14 111 23 view .LVU2570
 11004              	.LBE7603:
 11005              	.LBI7602:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 11006              		.loc 14 109 10 is_stmt 1 view .LVU2571
 11007              	.LBB7604:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11008              		.loc 14 111 9 view .LVU2572
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 420


 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11009              		.loc 14 111 23 is_stmt 0 view .LVU2573
 11010 01ac FFF7FEFF 		bl	dsy_gpio_write
 11011              	.LVL741:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11012              		.loc 14 112 9 is_stmt 1 view .LVU2574
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11013              		.loc 14 112 30 is_stmt 0 view .LVU2575
 11014 01b0 6423     		movs	r3, #100
 11015 01b2 0122     		movs	r2, #1
 11016 01b4 02A9     		add	r1, sp, #8
 11017              	.LVL742:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11018              		.loc 14 112 30 view .LVU2576
 11019 01b6 2648     		ldr	r0, .L617+32
 11020              	.LVL743:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11021              		.loc 14 112 30 view .LVU2577
 11022 01b8 FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 11023              	.LVL744:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11024              		.loc 14 112 30 view .LVU2578
 11025              	.LBE7604:
 11026              	.LBE7602:
 11027              	.LBB7605:
 11028              	.LBI7605:
 115:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 11029              		.loc 14 115 10 is_stmt 1 view .LVU2579
 11030              	.LBB7606:
 117:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 11031              		.loc 14 117 9 view .LVU2580
 117:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 11032              		.loc 14 117 23 is_stmt 0 view .LVU2581
 11033 01bc 0121     		movs	r1, #1
 11034 01be 2348     		ldr	r0, .L617+28
 11035 01c0 FFF7FEFF 		bl	dsy_gpio_write
 11036              	.LVL745:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11037              		.loc 14 118 9 is_stmt 1 view .LVU2582
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11038              		.loc 14 118 30 is_stmt 0 view .LVU2583
 11039 01c4 8022     		movs	r2, #128
 11040 01c6 3146     		mov	r1, r6
 11041 01c8 6423     		movs	r3, #100
 11042 01ca 2148     		ldr	r0, .L617+32
 11043              	.LVL746:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11044              		.loc 14 118 30 view .LVU2584
 11045              	.LBE7606:
 11046              	.LBE7605:
 11047              		.loc 14 270 22 view .LVU2585
 11048 01cc 1644     		add	r6, r6, r2
 11049              	.LVL747:
 11050              	.LBB7608:
 11051              	.LBB7607:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11052              		.loc 14 118 30 view .LVU2586
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 421


 11053 01ce FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 11054              	.LVL748:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11055              		.loc 14 118 30 view .LVU2587
 11056              	.LBE7607:
 11057              	.LBE7608:
 11058              		.loc 14 270 9 is_stmt 1 view .LVU2588
 11059              		.loc 14 270 22 view .LVU2589
 11060 01d2 B82C     		cmp	r4, #184
 11061 01d4 CAD1     		bne	.L591
 11062              	.LBE7591:
 11063              	.LBE7590:
 11064              	.LBE7589:
 262:Jellybeans.cpp **** }
 11065              		.loc 17 262 1 is_stmt 0 view .LVU2590
 11066 01d6 09B0     		add	sp, sp, #36
 11067              		.cfi_remember_state
 11068              		.cfi_def_cfa_offset 20
 11069              		@ sp needed
 11070 01d8 F0BD     		pop	{r4, r5, r6, r7, pc}
 11071              	.LVL749:
 11072              	.L585:
 11073              		.cfi_restore_state
 11074              	.LBB7609:
 11075              	.LBB7540:
 11076              	.LBB7536:
 11077              	.LBB7532:
 11078              	.LBB7528:
 11079              	.LBB7524:
 11080              	.LBB7520:
 11081              	.LBB7516:
 11082              	.LBB7512:
 11083              	.LBB7497:
 11084              	.LBB7475:
 11085              	.LBB7472:
 11086              	.LBB7463:
 11087              	.LBI7463:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11088              		.loc 18 346 7 is_stmt 1 view .LVU2591
 11089              	.LBB7464:
 11090              	.LBI7464:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 11091              		.loc 21 387 7 view .LVU2592
 11092              	.LBB7465:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11093              		.loc 21 389 2 view .LVU2593
 11094 01da 24BB     		cbnz	r4, .L615
 11095 01dc 2A46     		mov	r2, r5
 11096 01de 85E7     		b	.L586
 11097              	.LVL750:
 11098              	.L613:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11099              		.loc 21 389 2 is_stmt 0 view .LVU2594
 11100              	.LBE7465:
 11101              	.LBE7464:
 11102              	.LBE7463:
 11103              	.LBE7472:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 422


 11104              	.LBE7475:
 11105              	.LBE7497:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 11106              		.loc 22 219 13 view .LVU2595
 11107 01e0 0022     		movs	r2, #0
 11108 01e2 01A9     		add	r1, sp, #4
 11109 01e4 02A8     		add	r0, sp, #8
 11110              	.LVL751:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 11111              		.loc 22 219 13 view .LVU2596
 11112 01e6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 11113              	.LVL752:
 11114              	.LBB7498:
 11115              	.LBI7498:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 11116              		.loc 18 178 7 is_stmt 1 view .LVU2597
 11117              	.LBE7498:
 11118              	.LBB7500:
 11119              	.LBB7501:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11120              		.loc 18 211 31 is_stmt 0 view .LVU2598
 11121 01ea 019B     		ldr	r3, [sp, #4]
 11122              	.LBE7501:
 11123              	.LBE7500:
 11124              	.LBB7503:
 11125              	.LBB7499:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11126              		.loc 18 179 26 view .LVU2599
 11127 01ec 0290     		str	r0, [sp, #8]
 11128              	.LVL753:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11129              		.loc 18 179 26 view .LVU2600
 11130              	.LBE7499:
 11131              	.LBE7503:
 11132              	.LBB7504:
 11133              	.LBI7500:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 11134              		.loc 18 210 7 is_stmt 1 view .LVU2601
 11135              	.LBB7502:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11136              		.loc 18 211 31 is_stmt 0 view .LVU2602
 11137 01ee 0493     		str	r3, [sp, #16]
 11138              	.LVL754:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11139              		.loc 18 211 31 view .LVU2603
 11140              	.LBE7502:
 11141              	.LBE7504:
 11142              	.LBB7505:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11143              		.loc 18 186 7 is_stmt 1 view .LVU2604
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11144              		.loc 18 186 7 is_stmt 0 view .LVU2605
 11145              	.LBE7505:
 11146              	.LBB7506:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 11147              		.loc 18 392 7 is_stmt 1 view .LVU2606
 11148              	.LBB7476:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 423


 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11149              		.loc 18 346 7 view .LVU2607
 11150              	.LBB7473:
 11151              	.LBB7470:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11152              		.loc 18 346 7 view .LVU2608
 11153              	.LBB7468:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 11154              		.loc 21 387 7 view .LVU2609
 11155              	.LBB7466:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11156              		.loc 21 389 2 view .LVU2610
 11157              	.L584:
 11158              		.loc 21 395 2 view .LVU2611
 11159              		.loc 21 395 49 is_stmt 0 view .LVU2612
 11160 01f0 2246     		mov	r2, r4
 11161 01f2 3146     		mov	r1, r6
 11162 01f4 FFF7FEFF 		bl	memcpy
 11163              	.LVL755:
 11164              		.loc 21 395 49 view .LVU2613
 11165              	.LBE7466:
 11166              	.LBE7468:
 11167              	.LBE7470:
 11168              	.LBE7473:
 11169              	.LBE7476:
 11170              	.LBE7506:
 11171              	.LBB7507:
 11172              	.LBB7494:
 11173              	.LBB7491:
 11174              	.LBB7488:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11175              		.loc 18 187 28 view .LVU2614
 11176 01f8 DDE90142 		ldrd	r4, r2, [sp, #4]
 11177              	.LVL756:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11178              		.loc 18 187 28 view .LVU2615
 11179              	.LBE7488:
 11180              	.LBE7491:
 11181              	.LBE7494:
 11182              	.LBE7507:
 11183              	.LBB7508:
 11184              	.LBB7477:
 11185              	.LBB7474:
 11186              	.LBB7471:
 11187              	.LBB7469:
 11188              	.LBB7467:
 11189              		.loc 21 395 66 view .LVU2616
 11190 01fc 76E7     		b	.L586
 11191              	.LVL757:
 11192              	.L610:
 11193              		.loc 21 395 66 view .LVU2617
 11194              	.LBE7467:
 11195              	.LBE7469:
 11196              	.LBE7471:
 11197              	.LBE7474:
 11198              	.LBE7477:
 11199              	.LBE7508:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 424


 11200              	.LBE7512:
 11201              	.LBE7516:
 11202              	.LBE7520:
 11203              	.LBE7524:
 11204              	.LBE7528:
 11205              	.LBE7532:
 11206              	.LBE7536:
 11207              	.LBE7540:
 11208              	.LBE7609:
 11209              	.LBB7610:
 11210              	.LBB7399:
 11211              	.LBB7345:
 11212              	.LBI7345:
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11213              		.loc 18 901 7 is_stmt 1 view .LVU2618
 11214              	.LBB7346:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11215              		.loc 18 902 16 is_stmt 0 view .LVU2619
 11216 01fe 039A     		ldr	r2, [sp, #12]
 11217              	.LVL758:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11218              		.loc 18 902 16 view .LVU2620
 11219              	.LBE7346:
 11220              	.LBE7345:
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 11221              		.loc 18 721 6 view .LVU2621
 11222 0200 32B1     		cbz	r2, .L575
 11223              	.LVL759:
 11224              	.LBB7347:
 11225              	.LBI7347:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11226              		.loc 18 346 7 is_stmt 1 view .LVU2622
 11227              	.LBB7348:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 11228              		.loc 18 348 2 is_stmt 0 view .LVU2623
 11229 0202 012A     		cmp	r2, #1
 11230 0204 09D0     		beq	.L616
 11231              	.LVL760:
 11232              	.LBB7349:
 11233              	.LBI7349:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11234              		.loc 18 346 7 is_stmt 1 view .LVU2624
 11235              	.LBB7350:
 11236              	.LBB7351:
 11237              	.LBI7351:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 11238              		.loc 21 387 7 view .LVU2625
 11239              	.LBB7352:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11240              		.loc 21 389 2 view .LVU2626
 11241              		.loc 21 395 2 view .LVU2627
 11242              		.loc 21 395 49 is_stmt 0 view .LVU2628
 11243 0206 2946     		mov	r1, r5
 11244 0208 FFF7FEFF 		bl	memcpy
 11245              	.LVL761:
 11246              		.loc 21 395 49 view .LVU2629
 11247              	.LBE7352:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 425


 11248              	.LBE7351:
 11249              	.LBE7350:
 11250              	.LBE7349:
 11251              	.LBE7348:
 11252              	.LBE7347:
 11253              	.LBB7359:
 11254              	.LBB7360:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11255              		.loc 18 902 16 view .LVU2630
 11256 020c 039A     		ldr	r2, [sp, #12]
 11257              	.LBE7360:
 11258              	.LBE7359:
 11259              	.LBB7362:
 11260              	.LBB7363:
 11261              	.LBB7364:
 11262              	.LBB7365:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11263              		.loc 18 187 28 view .LVU2631
 11264 020e 2068     		ldr	r0, [r4]
 11265              	.LVL762:
 11266              	.L575:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11267              		.loc 18 187 28 view .LVU2632
 11268              	.LBE7365:
 11269              	.LBE7364:
 11270              	.LBE7363:
 11271              	.LBE7362:
 11272              	.LBB7379:
 11273              	.LBI7359:
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11274              		.loc 18 901 7 is_stmt 1 view .LVU2633
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11275              		.loc 18 901 7 is_stmt 0 view .LVU2634
 11276              	.LBE7379:
 11277              	.LBB7380:
 11278              	.LBI7362:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11279              		.loc 18 214 7 is_stmt 1 view .LVU2635
 11280              	.LBB7376:
 11281              	.LBB7367:
 11282              	.LBI7367:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 11283              		.loc 18 182 7 view .LVU2636
 11284              	.LBE7367:
 11285              	.LBB7369:
 11286              	.LBB7370:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11287              		.loc 21 322 14 is_stmt 0 view .LVU2637
 11288 0210 0023     		movs	r3, #0
 11289              	.LBE7370:
 11290              	.LBE7369:
 11291              	.LBB7372:
 11292              	.LBB7368:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11293              		.loc 18 183 26 view .LVU2638
 11294 0212 6260     		str	r2, [r4, #4]
 11295              	.LVL763:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 426


 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11296              		.loc 18 183 26 view .LVU2639
 11297              	.LBE7368:
 11298              	.LBE7372:
 11299              	.LBB7373:
 11300              	.LBI7364:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11301              		.loc 18 186 7 is_stmt 1 view .LVU2640
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11302              		.loc 18 186 7 is_stmt 0 view .LVU2641
 11303              	.LBE7373:
 11304              	.LBB7374:
 11305              	.LBI7369:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 11306              		.loc 21 321 7 is_stmt 1 view .LVU2642
 11307              	.LBB7371:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11308              		.loc 21 322 9 view .LVU2643
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11309              		.loc 21 322 14 is_stmt 0 view .LVU2644
 11310 0214 8354     		strb	r3, [r0, r2]
 11311              	.LVL764:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11312              		.loc 21 322 14 view .LVU2645
 11313              	.LBE7371:
 11314              	.LBE7374:
 11315              	.LBE7376:
 11316              	.LBE7380:
 11317              	.LBE7399:
 11318              	.LBB7400:
 11319              	.LBB7397:
 11320              	.LBB7396:
 11321              	.LBB7393:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11322              		.loc 18 187 28 view .LVU2646
 11323 0216 0298     		ldr	r0, [sp, #8]
 11324              	.LBE7393:
 11325              	.LBE7396:
 11326              	.LBE7397:
 11327              	.LBE7400:
 11328              	.LBB7401:
 11329              	.LBB7381:
 11330              	.LBB7377:
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11331              		.loc 18 218 7 view .LVU2647
 11332 0218 43E7     		b	.L577
 11333              	.LVL765:
 11334              	.L616:
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11335              		.loc 18 218 7 view .LVU2648
 11336              	.LBE7377:
 11337              	.LBE7381:
 11338              	.LBB7382:
 11339              	.LBB7357:
 11340              	.LBB7353:
 11341              	.LBI7353:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 427


 11342              		.loc 21 321 7 is_stmt 1 view .LVU2649
 11343              	.LBB7354:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11344              		.loc 21 322 9 view .LVU2650
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11345              		.loc 21 322 16 is_stmt 0 view .LVU2651
 11346 021a 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11347              		.loc 21 322 14 view .LVU2652
 11348 021e 0370     		strb	r3, [r0]
 11349              	.LBE7354:
 11350              	.LBE7353:
 11351              	.LBE7357:
 11352              	.LBE7382:
 11353              	.LBB7383:
 11354              	.LBB7361:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11355              		.loc 18 902 16 view .LVU2653
 11356 0220 039A     		ldr	r2, [sp, #12]
 11357              	.LVL766:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11358              		.loc 18 902 16 view .LVU2654
 11359              	.LBE7361:
 11360              	.LBE7383:
 11361              	.LBB7384:
 11362              	.LBB7378:
 11363              	.LBB7375:
 11364              	.LBB7366:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11365              		.loc 18 187 28 view .LVU2655
 11366 0222 2068     		ldr	r0, [r4]
 11367              	.LVL767:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11368              		.loc 18 187 28 view .LVU2656
 11369              	.LBE7366:
 11370              	.LBE7375:
 11371              	.LBE7378:
 11372              	.LBE7384:
 11373              	.LBB7385:
 11374              	.LBB7358:
 11375              	.LBB7356:
 11376              	.LBB7355:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11377              		.loc 21 322 22 view .LVU2657
 11378 0224 F4E7     		b	.L575
 11379              	.LVL768:
 11380              	.L615:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11381              		.loc 21 322 22 view .LVU2658
 11382              	.LBE7355:
 11383              	.LBE7356:
 11384              	.LBE7358:
 11385              	.LBE7385:
 11386              	.LBE7401:
 11387              	.LBE7610:
 11388              	.LBB7611:
 11389              	.LBB7541:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 428


 11390              	.LBB7537:
 11391              	.LBB7533:
 11392              	.LBB7529:
 11393              	.LBB7525:
 11394              	.LBB7521:
 11395              	.LBB7517:
 11396              	.LBB7513:
 11397              	.LBB7509:
 11398              	.LBB7457:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11399              		.loc 18 187 28 view .LVU2659
 11400 0226 2846     		mov	r0, r5
 11401 0228 E2E7     		b	.L584
 11402              	.LVL769:
 11403              	.L612:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11404              		.loc 18 187 28 view .LVU2660
 11405              	.LBE7457:
 11406              	.LBE7509:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 11407              		.loc 22 212 28 view .LVU2661
 11408 022a 0A48     		ldr	r0, .L617+36
 11409 022c FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 11410              	.LVL770:
 11411              	.L618:
 11412              		.align	2
 11413              	.L617:
 11414 0230 00000000 		.word	.LANCHOR0
 11415 0234 B4910000 		.word	patch+37300
 11416 0238 33920000 		.word	patch+37427
 11417 023c 00000000 		.word	.LANCHOR14
 11418 0240 B3940000 		.word	patch+38067
 11419 0244 00000000 		.word	.LANCHOR12
 11420 0248 00000000 		.word	.LANCHOR4
 11421 024c B0910000 		.word	patch+37296
 11422 0250 A8910000 		.word	patch+37288
 11423 0254 00000000 		.word	.LC9
 11424              	.LBE7513:
 11425              	.LBE7517:
 11426              	.LBE7521:
 11427              	.LBE7525:
 11428              	.LBE7529:
 11429              	.LBE7533:
 11430              	.LBE7537:
 11431              	.LBE7541:
 11432              	.LBE7611:
 11433              		.cfi_endproc
 11434              	.LFE5124:
 11436              		.section	.text._Z9cbVoicingv,"ax",%progbits
 11437              		.align	1
 11438              		.p2align 2,,3
 11439              		.global	_Z9cbVoicingv
 11440              		.syntax unified
 11441              		.thumb
 11442              		.thumb_func
 11443              		.fpu fpv5-d16
 11445              	_Z9cbVoicingv:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 429


 11446              	.LFB5113:
 105:Jellybeans.cpp **** void cbVoicing(){
 11447              		.loc 17 105 17 is_stmt 1 view -0
 11448              		.cfi_startproc
 11449              		@ args = 0, pretend = 0, frame = 24
 11450              		@ frame_needed = 0, uses_anonymous_args = 0
 106:Jellybeans.cpp ****     arp->getChord()->setVoicing(mVoicing->value());
 11451              		.loc 17 106 5 view .LVU2663
 105:Jellybeans.cpp **** void cbVoicing(){
 11452              		.loc 17 105 17 is_stmt 0 view .LVU2664
 11453 0000 30B5     		push	{r4, r5, lr}
 11454              		.cfi_def_cfa_offset 12
 11455              		.cfi_offset 4, -12
 11456              		.cfi_offset 5, -8
 11457              		.cfi_offset 14, -4
 106:Jellybeans.cpp ****     arp->getChord()->setVoicing(mVoicing->value());
 11458              		.loc 17 106 32 view .LVU2665
 11459 0002 104D     		ldr	r5, .L622
 105:Jellybeans.cpp **** void cbVoicing(){
 11460              		.loc 17 105 17 view .LVU2666
 11461 0004 87B0     		sub	sp, sp, #28
 11462              		.cfi_def_cfa_offset 40
 106:Jellybeans.cpp ****     arp->getChord()->setVoicing(mVoicing->value());
 11463              		.loc 17 106 32 view .LVU2667
 11464 0006 2868     		ldr	r0, [r5]
 11465 0008 FFF7FEFF 		bl	_ZN10jellybeans3Arp8getChordEv
 11466              	.LVL771:
 106:Jellybeans.cpp ****     arp->getChord()->setVoicing(mVoicing->value());
 11467              		.loc 17 106 49 view .LVU2668
 11468 000c 0E4B     		ldr	r3, .L622+4
 106:Jellybeans.cpp ****     arp->getChord()->setVoicing(mVoicing->value());
 11469              		.loc 17 106 32 view .LVU2669
 11470 000e 0446     		mov	r4, r0
 106:Jellybeans.cpp ****     arp->getChord()->setVoicing(mVoicing->value());
 11471              		.loc 17 106 49 view .LVU2670
 11472 0010 6846     		mov	r0, sp
 11473 0012 1968     		ldr	r1, [r3]
 11474 0014 FFF7FEFF 		bl	_ZN10jellybeans8MenuItem5valueB5cxx11Ev
 11475              	.LVL772:
 106:Jellybeans.cpp ****     arp->getChord()->setVoicing(mVoicing->value());
 11476              		.loc 17 106 32 view .LVU2671
 11477 0018 2046     		mov	r0, r4
 11478 001a 6946     		mov	r1, sp
 11479 001c FFF7FEFF 		bl	_ZN10jellybeans13DiatonicChord10setVoicingENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 11480              	.LVL773:
 11481              	.LBB7629:
 11482              	.LBI7629:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 11483              		.loc 18 657 7 is_stmt 1 view .LVU2672
 11484              	.LBB7630:
 11485              	.LBB7631:
 11486              	.LBI7631:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11487              		.loc 18 229 7 view .LVU2673
 11488              	.LBB7632:
 11489              	.LBB7633:
 11490              	.LBI7633:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 430


 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 11491              		.loc 18 221 7 view .LVU2674
 11492              	.LBB7634:
 11493              	.LBI7634:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11494              		.loc 18 186 7 view .LVU2675
 11495              	.LBB7635:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11496              		.loc 18 187 28 is_stmt 0 view .LVU2676
 11497 0020 0098     		ldr	r0, [sp]
 11498              	.LVL774:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11499              		.loc 18 187 28 view .LVU2677
 11500              	.LBE7635:
 11501              	.LBE7634:
 11502              	.LBB7636:
 11503              	.LBI7636:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11504              		.loc 18 200 7 is_stmt 1 view .LVU2678
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11505              		.loc 18 200 7 is_stmt 0 view .LVU2679
 11506              	.LBE7636:
 11507              	.LBE7633:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 11508              		.loc 18 231 2 view .LVU2680
 11509 0022 02AB     		add	r3, sp, #8
 11510 0024 9842     		cmp	r0, r3
 11511 0026 03D0     		beq	.L620
 11512              	.LVL775:
 11513              	.LBB7637:
 11514              	.LBI7637:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 11515              		.loc 18 236 7 is_stmt 1 view .LVU2681
 11516              	.LBB7638:
 11517              	.LBB7639:
 11518              	.LBI7639:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 11519              		.loc 25 491 7 view .LVU2682
 11520              	.LBB7640:
 11521              	.LBI7640:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 11522              		.loc 20 120 7 view .LVU2683
 11523              	.LBE7640:
 11524              	.LBE7639:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11525              		.loc 18 237 34 is_stmt 0 view .LVU2684
 11526 0028 0299     		ldr	r1, [sp, #8]
 11527              	.LBB7643:
 11528              	.LBB7642:
 11529              	.LBB7641:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 11530              		.loc 20 133 19 view .LVU2685
 11531 002a 0131     		adds	r1, r1, #1
 11532              	.LVL776:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 11533              		.loc 20 133 19 view .LVU2686
 11534 002c FFF7FEFF 		bl	_ZdlPvj
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 431


 11535              	.LVL777:
 11536              	.L620:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 11537              		.loc 20 133 19 view .LVU2687
 11538              	.LBE7641:
 11539              	.LBE7642:
 11540              	.LBE7643:
 11541              	.LBE7638:
 11542              	.LBE7637:
 11543              	.LBE7632:
 11544              	.LBE7631:
 11545              	.LBB7644:
 11546              	.LBI7644:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11547              		.loc 18 150 14 is_stmt 1 view .LVU2688
 11548              	.LBB7645:
 11549              	.LBI7645:
 11550              		.loc 19 162 7 view .LVU2689
 11551              	.LBB7646:
 11552              	.LBI7646:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11553              		.loc 20 89 7 view .LVU2690
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11554              		.loc 20 89 7 is_stmt 0 view .LVU2691
 11555              	.LBE7646:
 11556              	.LBE7645:
 11557              	.LBE7644:
 11558              	.LBE7630:
 11559              	.LBE7629:
 107:Jellybeans.cpp ****     updateOled();
 11560              		.loc 17 107 5 is_stmt 1 view .LVU2692
 107:Jellybeans.cpp ****     updateOled();
 11561              		.loc 17 107 15 is_stmt 0 view .LVU2693
 11562 0030 FFF7FEFF 		bl	_Z10updateOledv
 11563              	.LVL778:
 108:Jellybeans.cpp ****     arp->updateTraversal();
 11564              		.loc 17 108 5 is_stmt 1 view .LVU2694
 108:Jellybeans.cpp ****     arp->updateTraversal();
 11565              		.loc 17 108 25 is_stmt 0 view .LVU2695
 11566 0034 2868     		ldr	r0, [r5]
 11567 0036 FFF7FEFF 		bl	_ZN10jellybeans3Arp15updateTraversalEv
 11568              	.LVL779:
 109:Jellybeans.cpp ****     updateOled();
 11569              		.loc 17 109 5 is_stmt 1 view .LVU2696
 110:Jellybeans.cpp **** };
 11570              		.loc 17 110 1 is_stmt 0 view .LVU2697
 11571 003a 07B0     		add	sp, sp, #28
 11572              		.cfi_def_cfa_offset 12
 11573              		@ sp needed
 11574 003c BDE83040 		pop	{r4, r5, lr}
 11575              		.cfi_restore 14
 11576              		.cfi_restore 5
 11577              		.cfi_restore 4
 11578              		.cfi_def_cfa_offset 0
 109:Jellybeans.cpp ****     updateOled();
 11579              		.loc 17 109 15 view .LVU2698
 11580 0040 FFF7FEBF 		b	_Z10updateOledv
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 432


 11581              	.LVL780:
 11582              	.L623:
 11583              		.align	2
 11584              	.L622:
 11585 0044 00000000 		.word	.LANCHOR0
 11586 0048 00000000 		.word	.LANCHOR15
 11587              		.cfi_endproc
 11588              	.LFE5113:
 11590              		.section	.rodata._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16i
 11591              		.align	2
 11592              	.LC10:
 11593 0000 63616E6E 		.ascii	"cannot create std::vector larger than max_size()\000"
 11593      6F742063 
 11593      72656174 
 11593      65207374 
 11593      643A3A76 
 11594              		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16ini
 11595              		.align	1
 11596              		.p2align 2,,3
 11597              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_
 11598              		.syntax unified
 11599              		.thumb
 11600              		.thumb_func
 11601              		.fpu fpv5-d16
 11603              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5
 11604              	.LVL781:
 11605              	.LFB5463:
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 11606              		.loc 26 625 7 is_stmt 1 view -0
 11607              		.cfi_startproc
 11608              		@ args = 0, pretend = 0, frame = 16
 11609              		@ frame_needed = 0, uses_anonymous_args = 0
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 11610              		.loc 26 625 7 is_stmt 0 view .LVU2700
 11611 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 11612              		.cfi_def_cfa_offset 32
 11613              		.cfi_offset 4, -32
 11614              		.cfi_offset 5, -28
 11615              		.cfi_offset 6, -24
 11616              		.cfi_offset 7, -20
 11617              		.cfi_offset 8, -16
 11618              		.cfi_offset 9, -12
 11619              		.cfi_offset 10, -8
 11620              		.cfi_offset 14, -4
 11621 0004 84B0     		sub	sp, sp, #16
 11622              		.cfi_def_cfa_offset 48
 11623              	.LBB7744:
 11624              	.LBB7745:
 11625              	.LBB7746:
 11626              	.LBB7747:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 11627              		.loc 26 98 47 view .LVU2701
 11628 0006 0024     		movs	r4, #0
 11629              	.LBE7747:
 11630              	.LBE7746:
 11631              	.LBE7745:
 11632              	.LBE7744:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 433


 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 11633              		.loc 26 625 7 view .LVU2702
 11634 0008 6B46     		mov	r3, sp
 11635              	.LVL782:
 11636              	.LBB7758:
 11637              	.LBB7755:
 11638              	.LBB7750:
 11639              	.LBB7748:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 11640              		.loc 26 98 47 view .LVU2703
 11641 000a 8460     		str	r4, [r0, #8]
 11642              	.LBE7748:
 11643              	.LBE7750:
 11644              	.LBE7755:
 11645              	.LBE7758:
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 11646              		.loc 26 625 7 view .LVU2704
 11647 000c 83E80600 		stm	r3, {r1, r2}
 11648              	.LVL783:
 11649              	.LBB7759:
 11650              	.LBI7744:
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 11651              		.loc 26 293 7 is_stmt 1 view .LVU2705
 11652              	.LBB7756:
 11653              	.LBI7745:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 11654              		.loc 26 136 2 view .LVU2706
 11655              	.LBB7751:
 11656              	.LBI7751:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11657              		.loc 19 147 7 view .LVU2707
 11658              	.LBB7752:
 11659              	.LBI7752:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11660              		.loc 20 82 7 view .LVU2708
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11661              		.loc 20 82 7 is_stmt 0 view .LVU2709
 11662              	.LBE7752:
 11663              	.LBE7751:
 11664              	.LBB7753:
 11665              	.LBI7746:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 11666              		.loc 26 97 2 is_stmt 1 view .LVU2710
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 11667              		.loc 26 97 2 is_stmt 0 view .LVU2711
 11668              	.LBE7753:
 11669              	.LBE7756:
 11670              	.LBE7759:
 11671              	.LBB7760:
 11672              	.LBI7760:
 11673              		.file 36 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\initializ
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // std::initializer_list support -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // Copyright (C) 2008-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // This file is part of GCC.
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 434


   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GCC is free software; you can redistribute it and/or modify
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // it under the terms of the GNU General Public License as published by
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // the Free Software Foundation; either version 3, or (at your option)
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // any later version.
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GCC is distributed in the hope that it will be useful,
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GNU General Public License for more details.
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // Under Section 7 of GPL version 3, you are granted additional
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // permissions described in the GCC Runtime Library Exception, version
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // 3.1, as published by the Free Software Foundation.
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // You should have received a copy of the GNU General Public License and
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // a copy of the GCC Runtime Library Exception along with this program;
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // <http://www.gnu.org/licenses/>.
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** /** @file initializer_list
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****  *  This is a Standard C++ Library header.
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #ifndef _INITIALIZER_LIST
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #define _INITIALIZER_LIST
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #pragma GCC system_header
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #if __cplusplus < 201103L
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** # include <bits/c++0x_warning.h>
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #else // C++0x
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #pragma GCC visibility push(default)
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #include <bits/c++config.h>
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** namespace std
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** {
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****   /// initializer_list
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****   template<class _E>
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****     class initializer_list
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****     {
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****     public:
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef _E 		value_type;
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E& 	reference;
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E& 	const_reference;
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef size_t 		size_type;
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E* 	iterator;
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E* 	const_iterator;
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****     private:
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       iterator			_M_array;
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       size_type			_M_len;
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // The compiler can call a private constructor.
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr initializer_list(const_iterator __a, size_type __l)
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       : _M_array(__a), _M_len(__l) { }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 435


  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****     public:
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr initializer_list() noexcept
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       : _M_array(0), _M_len(0) { }
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // Number of elements.
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr size_type
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       size() const noexcept { return _M_len; }
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // First element.
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr const_iterator
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       begin() const noexcept { return _M_array; }
 11674              		.loc 36 75 7 is_stmt 1 view .LVU2712
 11675              		.loc 36 75 7 is_stmt 0 view .LVU2713
 11676              	.LBE7760:
 11677              	.LBB7761:
 11678              	.LBI7761:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // One past the last element.
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr const_iterator
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       end() const noexcept { return begin() + size(); }
 11679              		.loc 36 79 7 is_stmt 1 view .LVU2714
 11680              	.LBB7762:
 11681              	.LBB7763:
 11682              	.LBI7763:
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 11683              		.loc 36 71 7 view .LVU2715
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 11684              		.loc 36 71 7 is_stmt 0 view .LVU2716
 11685              	.LBE7763:
 11686              		.loc 36 79 45 view .LVU2717
 11687 0010 02EB4203 		add	r3, r2, r2, lsl #1
 11688              	.LVL784:
 11689              		.loc 36 79 45 view .LVU2718
 11690              	.LBE7762:
 11691              	.LBE7761:
 11692              	.LBB7765:
 11693              	.LBB7766:
 11694              	.LBB7767:
 11695              	.LBB7768:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 11696              		.loc 26 1769 2 view .LVU2719
 11697 0014 2F4A     		ldr	r2, .L650
 11698 0016 B2EBC30F 		cmp	r2, r3, lsl #3
 11699              	.LBE7768:
 11700              	.LBE7767:
 11701              	.LBE7766:
 11702              	.LBE7765:
 11703              	.LBB7947:
 11704              	.LBB7764:
 11705              		.loc 36 79 52 view .LVU2720
 11706 001a 01EBC309 		add	r9, r1, r3, lsl #3
 11707              	.LVL785:
 11708              		.loc 36 79 52 view .LVU2721
 11709              	.LBE7764:
 11710              	.LBE7947:
 11711              	.LBB7948:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 436


 11712              	.LBI7765:
1577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
 11713              		.loc 26 1577 2 is_stmt 1 view .LVU2722
 11714              	.LBB7942:
 11715              	.LBB7776:
 11716              	.LBI7767:
1767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 11717              		.loc 26 1767 7 view .LVU2723
 11718              	.LBB7773:
 11719              	.LBB7769:
 11720              	.LBI7769:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11721              		.loc 19 147 7 view .LVU2724
 11722              	.LBB7770:
 11723              	.LBI7770:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11724              		.loc 20 82 7 view .LVU2725
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11725              		.loc 20 82 7 is_stmt 0 view .LVU2726
 11726              	.LBE7770:
 11727              	.LBE7769:
 11728              	.LBB7771:
 11729              	.LBI7771:
 11730              		.loc 19 162 7 is_stmt 1 view .LVU2727
 11731              	.LBB7772:
 11732              	.LBI7772:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11733              		.loc 20 89 7 view .LVU2728
 11734              	.LBE7772:
 11735              	.LBE7771:
 11736              	.LBE7773:
 11737              	.LBE7776:
 11738              	.LBE7942:
 11739              	.LBE7948:
 11740              	.LBB7949:
 11741              	.LBB7757:
 11742              	.LBB7754:
 11743              	.LBB7749:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 11744              		.loc 26 98 47 is_stmt 0 view .LVU2729
 11745 001e C0E90044 		strd	r4, r4, [r0]
 11746              	.LBE7749:
 11747              	.LBE7754:
 11748              	.LBE7757:
 11749              	.LBE7949:
 11750              	.LBB7950:
 11751              	.LBB7943:
 11752              	.LBB7777:
 11753              	.LBB7774:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 11754              		.loc 26 1769 2 view .LVU2730
 11755 0022 53D3     		bcc	.L646
 11756              	.LVL786:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 11757              		.loc 26 1769 2 view .LVU2731
 11758              	.LBE7774:
 11759              	.LBE7777:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 437


 11760              	.LBB7778:
 11761              	.LBI7778:
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 11762              		.loc 26 343 7 is_stmt 1 view .LVU2732
 11763 0024 DC00     		lsls	r4, r3, #3
 11764              	.LVL787:
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 11765              		.loc 26 343 7 is_stmt 0 view .LVU2733
 11766 0026 8046     		mov	r8, r0
 11767              	.LBB7779:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 11768              		.loc 26 346 18 view .LVU2734
 11769 0028 002C     		cmp	r4, #0
 11770 002a 43D0     		beq	.L626
 11771 002c 0E46     		mov	r6, r1
 11772              	.LVL788:
 11773              	.LBB7780:
 11774              	.LBI7780:
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 11775              		.loc 25 459 7 is_stmt 1 view .LVU2735
 11776              	.LBB7781:
 11777              	.LBI7781:
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 11778              		.loc 20 103 7 view .LVU2736
 11779              	.LBB7782:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 11780              		.loc 20 115 41 is_stmt 0 view .LVU2737
 11781 002e 2046     		mov	r0, r4
 11782              	.LVL789:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 11783              		.loc 20 115 41 view .LVU2738
 11784 0030 FFF7FEFF 		bl	_Znwj
 11785              	.LVL790:
 11786              	.LBE7782:
 11787              	.LBE7781:
 11788              	.LBE7780:
 11789              	.LBE7779:
 11790              	.LBE7778:
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 11791              		.loc 26 1583 61 view .LVU2739
 11792 0034 0444     		add	r4, r4, r0
 11793              	.LVL791:
 11794              	.LBB7788:
 11795              	.LBB7789:
 11796              	.LBB7790:
 11797              	.LBB7791:
 11798              	.LBB7792:
 11799              		.file 37 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // any later version.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 438


  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus > 201402L
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <bits/stl_pair.h>
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <type_traits>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 439


  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <ext/alloc_traits.h>
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** {
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /** @addtogroup memory
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @{
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    */
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __first != __last; ++__first, (void)++__cur)
 11800              		.loc 37 90 23 view .LVU2740
 11801 0036 B145     		cmp	r9, r6
 11802              	.LBE7792:
 11803              	.LBE7791:
 11804              	.LBE7790:
 11805              	.LBE7789:
 11806              	.LBE7788:
 11807              	.LBB7934:
 11808              	.LBB7786:
 11809              	.LBB7785:
 11810              	.LBB7784:
 11811              	.LBB7783:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 11812              		.loc 20 115 41 view .LVU2741
 11813 0038 0746     		mov	r7, r0
 11814              	.LVL792:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 11815              		.loc 20 115 41 view .LVU2742
 11816              	.LBE7783:
 11817              	.LBE7784:
 11818              	.LBE7785:
 11819              	.LBE7786:
 11820              	.LBE7934:
 11821              	.LBB7935:
 11822              	.LBI7788:
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 440


  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy<true>
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType1;
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType2;
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::copy
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType2, decltype(*__first)>::value,
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from value type of input range");
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::copy
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::copy:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __assignable>::
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 441


 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill<true>
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       const _Tp& __x)
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 442


 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 443


 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  any of the POD optimizations.
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __first != __last; ++__first, (void)++__cur)
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 11823              		.loc 37 323 5 is_stmt 1 view .LVU2743
 11824              	.LBB7929:
 11825              	.LBB7924:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 444


 11826              	.LBB7919:
 11827              	.LBB7914:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 11828              		.loc 37 90 23 view .LVU2744
 11829              	.LBE7914:
 11830              	.LBE7919:
 11831              	.LBE7924:
 11832              	.LBE7929:
 11833              	.LBE7935:
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 11834              		.loc 26 1583 36 is_stmt 0 view .LVU2745
 11835 003a C8F80840 		str	r4, [r8, #8]
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 11836              		.loc 26 1582 6 view .LVU2746
 11837 003e C8F80000 		str	r0, [r8]
 11838              	.LBB7936:
 11839              	.LBB7930:
 11840              	.LBB7925:
 11841              	.LBB7920:
 11842              	.LBB7915:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 11843              		.loc 37 90 23 view .LVU2747
 11844 0042 3AD0     		beq	.L627
 11845 0044 00F11804 		add	r4, r0, #24
 11846 0048 0BE0     		b	.L633
 11847              	.LVL793:
 11848              	.L649:
 11849              	.LBB7793:
 11850              	.LBB7794:
 11851              	.LBB7795:
 11852              	.LBB7796:
 11853              	.LBB7797:
 11854              	.LBB7798:
 11855              	.LBB7799:
 11856              	.LBB7800:
 11857              	.LBB7801:
 11858              	.LBB7802:
 11859              	.LBB7803:
 11860              	.LBB7804:
 11861              	.LBB7805:
 11862              	.LBI7805:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 11863              		.loc 21 321 7 is_stmt 1 view .LVU2748
 11864              	.LBB7806:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11865              		.loc 21 322 9 view .LVU2749
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11866              		.loc 21 322 16 is_stmt 0 view .LVU2750
 11867 004a 9AF80030 		ldrb	r3, [r10]	@ zero_extendqisi2
 11868              	.LVL794:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11869              		.loc 21 322 14 view .LVU2751
 11870 004e 04F8103C 		strb	r3, [r4, #-16]
 11871              	.LVL795:
 11872              	.L632:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11873              		.loc 21 322 14 view .LVU2752
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 445


 11874              	.LBE7806:
 11875              	.LBE7805:
 11876              	.LBE7804:
 11877              	.LBE7803:
 11878              	.LBE7802:
 11879              	.LBB7827:
 11880              	.LBI7827:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11881              		.loc 18 214 7 is_stmt 1 view .LVU2753
 11882              	.LBB7828:
 11883              	.LBB7829:
 11884              	.LBI7829:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 11885              		.loc 18 182 7 view .LVU2754
 11886              	.LBE7829:
 11887              	.LBE7828:
 11888              	.LBE7827:
 11889              	.LBE7801:
 11890              	.LBE7800:
 11891              	.LBE7799:
 11892              	.LBE7798:
 11893              	.LBE7797:
 11894              	.LBE7796:
 11895              	.LBE7795:
 11896              	.LBE7794:
 11897              	.LBE7793:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 11898              		.loc 37 90 8 is_stmt 0 view .LVU2755
 11899 0052 1836     		adds	r6, r6, #24
 11900              	.LBB7909:
 11901              	.LBB7905:
 11902              	.LBB7901:
 11903              	.LBB7880:
 11904              	.LBB7876:
 11905              	.LBB7872:
 11906              	.LBB7868:
 11907              	.LBB7864:
 11908              	.LBB7860:
 11909              	.LBB7844:
 11910              	.LBB7841:
 11911              	.LBB7831:
 11912              	.LBB7832:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11913              		.loc 21 322 14 view .LVU2756
 11914 0054 0023     		movs	r3, #0
 11915              	.LBE7832:
 11916              	.LBE7831:
 11917              	.LBB7835:
 11918              	.LBB7830:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11919              		.loc 18 183 26 view .LVU2757
 11920 0056 44F8145C 		str	r5, [r4, #-20]
 11921              	.LVL796:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11922              		.loc 18 183 26 view .LVU2758
 11923              	.LBE7830:
 11924              	.LBE7835:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 446


 11925              	.LBB7836:
 11926              	.LBI7836:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11927              		.loc 18 186 7 is_stmt 1 view .LVU2759
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11928              		.loc 18 186 7 is_stmt 0 view .LVU2760
 11929              	.LBE7836:
 11930              	.LBB7838:
 11931              	.LBI7831:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 11932              		.loc 21 321 7 is_stmt 1 view .LVU2761
 11933              	.LBB7833:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11934              		.loc 21 322 9 view .LVU2762
 11935              	.LBE7833:
 11936              	.LBE7838:
 11937              	.LBE7841:
 11938              	.LBE7844:
 11939              	.LBE7860:
 11940              	.LBE7864:
 11941              	.LBE7868:
 11942              	.LBE7872:
 11943              	.LBE7876:
 11944              	.LBE7880:
 11945              	.LBE7901:
 11946              	.LBE7905:
 11947              	.LBE7909:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 11948              		.loc 37 90 23 is_stmt 0 view .LVU2763
 11949 005a 1834     		adds	r4, r4, #24
 11950              	.LVL797:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 11951              		.loc 37 90 23 view .LVU2764
 11952 005c B145     		cmp	r9, r6
 11953              	.LBB7910:
 11954              	.LBB7906:
 11955              	.LBB7902:
 11956              	.LBB7881:
 11957              	.LBB7877:
 11958              	.LBB7873:
 11959              	.LBB7869:
 11960              	.LBB7865:
 11961              	.LBB7861:
 11962              	.LBB7845:
 11963              	.LBB7842:
 11964              	.LBB7839:
 11965              	.LBB7834:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11966              		.loc 21 322 14 view .LVU2765
 11967 005e 4355     		strb	r3, [r0, r5]
 11968              	.LVL798:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11969              		.loc 21 322 14 view .LVU2766
 11970              	.LBE7834:
 11971              	.LBE7839:
 11972              	.LBE7842:
 11973              	.LBE7845:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 447


 11974              	.LBE7861:
 11975              	.LBE7865:
 11976              	.LBE7869:
 11977              	.LBE7873:
 11978              	.LBE7877:
 11979              	.LBE7881:
 11980              	.LBE7902:
 11981              	.LBE7906:
 11982              	.LBE7910:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 11983              		.loc 37 90 8 is_stmt 1 view .LVU2767
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 11984              		.loc 37 90 23 view .LVU2768
 11985 0060 2BD0     		beq	.L627
 11986              	.L633:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 11987              		.loc 37 90 23 is_stmt 0 view .LVU2769
 11988 0062 A4F11000 		sub	r0, r4, #16
 11989 0066 A4F11803 		sub	r3, r4, #24
 11990              	.LVL799:
 11991              	.LBB7911:
 11992              	.LBI7793:
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 11993              		.loc 27 108 5 is_stmt 1 view .LVU2770
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 11994              		.loc 27 108 5 is_stmt 0 view .LVU2771
 11995              	.LBE7911:
 11996              	.LBE7915:
 11997              	.LBE7920:
 11998              	.LBE7925:
 11999              	.LBE7930:
 12000              	.LBE7936:
 12001              	.LBE7943:
 12002              	.LBE7950:
 12003              		.loc 23 175 3 is_stmt 1 view .LVU2772
 12004              	.LBB7951:
 12005              	.LBB7944:
 12006              	.LBB7937:
 12007              	.LBB7931:
 12008              	.LBB7926:
 12009              	.LBB7921:
 12010              	.LBB7916:
 12011              	.LBB7912:
 12012              	.LBB7907:
 12013              	.LBI7794:
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 12014              		.loc 18 448 7 view .LVU2773
 12015              	.LBB7903:
 12016              	.LBB7882:
 12017              	.LBI7882:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12018              		.loc 18 190 7 view .LVU2774
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12019              		.loc 18 190 7 is_stmt 0 view .LVU2775
 12020              	.LBE7882:
 12021              	.LBB7883:
 12022              	.LBI7883:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 448


 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 12023              		.loc 18 290 7 is_stmt 1 view .LVU2776
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 12024              		.loc 18 290 7 is_stmt 0 view .LVU2777
 12025              	.LBE7883:
 12026              	.LBB7884:
 12027              	.LBI7884:
 12028              		.loc 35 97 29 is_stmt 1 view .LVU2778
 12029              	.LBB7885:
 12030              	.LBI7885:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 12031              		.loc 25 558 7 view .LVU2779
 12032              	.LBB7886:
 12033              	.LBI7886:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12034              		.loc 19 147 7 view .LVU2780
 12035              	.LBB7887:
 12036              	.LBI7887:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12037              		.loc 20 82 7 view .LVU2781
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12038              		.loc 20 82 7 is_stmt 0 view .LVU2782
 12039              	.LBE7887:
 12040              	.LBE7886:
 12041              	.LBE7885:
 12042              	.LBE7884:
 12043              	.LBB7888:
 12044              	.LBI7888:
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 12045              		.loc 18 159 2 is_stmt 1 view .LVU2783
 12046              	.LBB7889:
 12047              	.LBB7890:
 12048              	.LBI7890:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 12049              		.loc 34 101 5 view .LVU2784
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 12050              		.loc 34 101 5 is_stmt 0 view .LVU2785
 12051              	.LBE7890:
 12052              	.LBB7891:
 12053              	.LBI7891:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12054              		.loc 19 147 7 is_stmt 1 view .LVU2786
 12055              	.LBB7892:
 12056              	.LBI7892:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12057              		.loc 20 82 7 view .LVU2787
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12058              		.loc 20 82 7 is_stmt 0 view .LVU2788
 12059 006a 2746     		mov	r7, r4
 12060              	.LBE7892:
 12061              	.LBE7891:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 12062              		.loc 18 160 46 view .LVU2789
 12063 006c 44F8180C 		str	r0, [r4, #-24]
 12064              	.LVL800:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 12065              		.loc 18 160 46 view .LVU2790
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 449


 12066              	.LBE7889:
 12067              	.LBE7888:
 12068              	.LBB7893:
 12069              	.LBI7893:
 12070              		.loc 19 162 7 is_stmt 1 view .LVU2791
 12071              	.LBB7894:
 12072              	.LBI7894:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12073              		.loc 20 89 7 view .LVU2792
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12074              		.loc 20 89 7 is_stmt 0 view .LVU2793
 12075              	.LBE7894:
 12076              	.LBE7893:
 12077              	.LBB7895:
 12078              	.LBI7895:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12079              		.loc 18 186 7 is_stmt 1 view .LVU2794
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12080              		.loc 18 186 7 is_stmt 0 view .LVU2795
 12081              	.LBE7895:
 12082              	.LBB7896:
 12083              	.LBI7896:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12084              		.loc 18 186 7 is_stmt 1 view .LVU2796
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12085              		.loc 18 186 7 is_stmt 0 view .LVU2797
 12086              	.LBE7896:
 12087              	.LBB7897:
 12088              	.LBI7897:
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 12089              		.loc 18 907 7 is_stmt 1 view .LVU2798
 12090              	.LBB7898:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12091              		.loc 18 908 16 is_stmt 0 view .LVU2799
 12092 0070 D6E900A5 		ldrd	r10, r5, [r6]
 12093              	.LVL801:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12094              		.loc 18 908 16 view .LVU2800
 12095              	.LBE7898:
 12096              	.LBE7897:
 12097              	.LBB7899:
 12098              	.LBI7796:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 12099              		.loc 18 263 9 is_stmt 1 view .LVU2801
 12100              	.LBB7878:
 12101              	.LBB7874:
 12102              	.LBI7798:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 12103              		.loc 18 243 9 view .LVU2802
 12104              	.LBB7870:
 12105              	.LBB7866:
 12106              	.LBI7800:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 12107              		.loc 22 206 7 view .LVU2803
 12108              	.LBB7862:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 12109              		.loc 22 211 42 is_stmt 0 view .LVU2804
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 450


 12110 0074 1AEB050F 		cmn	r10, r5
 12111 0078 02D0     		beq	.L628
 12112 007a BAF1000F 		cmp	r10, #0
 12113 007e 22D0     		beq	.L647
 12114              	.L628:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 12115              		.loc 22 217 2 view .LVU2805
 12116 0080 0F2D     		cmp	r5, #15
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 12117              		.loc 22 215 12 view .LVU2806
 12118 0082 0395     		str	r5, [sp, #12]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 12119              		.loc 22 217 2 view .LVU2807
 12120 0084 04D8     		bhi	.L648
 12121              	.LVL802:
 12122              	.LBB7846:
 12123              	.LBI7846:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12124              		.loc 18 186 7 is_stmt 1 view .LVU2808
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12125              		.loc 18 186 7 is_stmt 0 view .LVU2809
 12126              	.LBE7846:
 12127              	.LBB7847:
 12128              	.LBI7802:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 12129              		.loc 18 392 7 is_stmt 1 view .LVU2810
 12130              	.LBB7823:
 12131              	.LBI7803:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12132              		.loc 18 346 7 view .LVU2811
 12133              	.LBB7819:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 12134              		.loc 18 348 2 is_stmt 0 view .LVU2812
 12135 0086 012D     		cmp	r5, #1
 12136 0088 DFD0     		beq	.L649
 12137              	.LVL803:
 12138              	.LBB7807:
 12139              	.LBI7807:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12140              		.loc 18 346 7 is_stmt 1 view .LVU2813
 12141              	.LBB7808:
 12142              	.LBI7808:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 12143              		.loc 21 387 7 view .LVU2814
 12144              	.LBB7809:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 12145              		.loc 21 389 2 view .LVU2815
 12146 008a 002D     		cmp	r5, #0
 12147 008c E1D0     		beq	.L632
 12148 008e 09E0     		b	.L630
 12149              	.LVL804:
 12150              	.L648:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 12151              		.loc 21 389 2 is_stmt 0 view .LVU2816
 12152              	.LBE7809:
 12153              	.LBE7808:
 12154              	.LBE7807:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 451


 12155              	.LBE7819:
 12156              	.LBE7823:
 12157              	.LBE7847:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 12158              		.loc 22 219 13 view .LVU2817
 12159 0090 1846     		mov	r0, r3
 12160 0092 0022     		movs	r2, #0
 12161 0094 03A9     		add	r1, sp, #12
 12162 0096 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 12163              	.LVL805:
 12164              	.LBB7848:
 12165              	.LBB7849:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12166              		.loc 18 211 31 view .LVU2818
 12167 009a 039B     		ldr	r3, [sp, #12]
 12168              	.LVL806:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12169              		.loc 18 211 31 view .LVU2819
 12170              	.LBE7849:
 12171              	.LBE7848:
 12172              	.LBB7851:
 12173              	.LBI7851:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 12174              		.loc 18 178 7 is_stmt 1 view .LVU2820
 12175              	.LBB7852:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12176              		.loc 18 179 26 is_stmt 0 view .LVU2821
 12177 009c 44F8180C 		str	r0, [r4, #-24]
 12178              	.LVL807:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12179              		.loc 18 179 26 view .LVU2822
 12180              	.LBE7852:
 12181              	.LBE7851:
 12182              	.LBB7853:
 12183              	.LBI7848:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 12184              		.loc 18 210 7 is_stmt 1 view .LVU2823
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 12185              		.loc 18 210 7 is_stmt 0 view .LVU2824
 12186              	.LBE7853:
 12187              	.LBB7854:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12188              		.loc 18 186 7 is_stmt 1 view .LVU2825
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12189              		.loc 18 186 7 is_stmt 0 view .LVU2826
 12190              	.LBE7854:
 12191              	.LBB7855:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 12192              		.loc 18 392 7 is_stmt 1 view .LVU2827
 12193              	.LBB7824:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12194              		.loc 18 346 7 view .LVU2828
 12195              	.LBB7820:
 12196              	.LBB7816:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12197              		.loc 18 346 7 view .LVU2829
 12198              	.LBB7813:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 452


 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 12199              		.loc 21 387 7 view .LVU2830
 12200              	.LBB7810:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 12201              		.loc 21 389 2 view .LVU2831
 12202              	.LBE7810:
 12203              	.LBE7813:
 12204              	.LBE7816:
 12205              	.LBE7820:
 12206              	.LBE7824:
 12207              	.LBE7855:
 12208              	.LBB7856:
 12209              	.LBB7850:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12210              		.loc 18 211 31 is_stmt 0 view .LVU2832
 12211 00a0 44F8103C 		str	r3, [r4, #-16]
 12212              	.L630:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12213              		.loc 18 211 31 view .LVU2833
 12214              	.LBE7850:
 12215              	.LBE7856:
 12216              	.LBB7857:
 12217              	.LBB7825:
 12218              	.LBB7821:
 12219              	.LBB7817:
 12220              	.LBB7814:
 12221              	.LBB7811:
 12222              		.loc 21 395 2 is_stmt 1 view .LVU2834
 12223              		.loc 21 395 49 is_stmt 0 view .LVU2835
 12224 00a4 2A46     		mov	r2, r5
 12225 00a6 5146     		mov	r1, r10
 12226 00a8 FFF7FEFF 		bl	memcpy
 12227              	.LVL808:
 12228              		.loc 21 395 49 view .LVU2836
 12229              	.LBE7811:
 12230              	.LBE7814:
 12231              	.LBE7817:
 12232              	.LBE7821:
 12233              	.LBE7825:
 12234              	.LBE7857:
 12235              		.loc 22 232 15 view .LVU2837
 12236 00ac 039D     		ldr	r5, [sp, #12]
 12237              	.LVL809:
 12238              	.LBB7858:
 12239              	.LBB7843:
 12240              	.LBB7840:
 12241              	.LBB7837:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12242              		.loc 18 187 28 view .LVU2838
 12243 00ae 54F8180C 		ldr	r0, [r4, #-24]
 12244              	.LBE7837:
 12245              	.LBE7840:
 12246              	.LBE7843:
 12247              	.LBE7858:
 12248              	.LBB7859:
 12249              	.LBB7826:
 12250              	.LBB7822:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 453


 12251              	.LBB7818:
 12252              	.LBB7815:
 12253              	.LBB7812:
 12254              		.loc 21 395 66 view .LVU2839
 12255 00b2 CEE7     		b	.L632
 12256              	.LVL810:
 12257              	.L626:
 12258              		.loc 21 395 66 view .LVU2840
 12259              	.LBE7812:
 12260              	.LBE7815:
 12261              	.LBE7818:
 12262              	.LBE7822:
 12263              	.LBE7826:
 12264              	.LBE7859:
 12265              	.LBE7862:
 12266              	.LBE7866:
 12267              	.LBE7870:
 12268              	.LBE7874:
 12269              	.LBE7878:
 12270              	.LBE7899:
 12271              	.LBE7903:
 12272              	.LBE7907:
 12273              	.LBE7912:
 12274              	.LBE7916:
 12275              	.LBE7921:
 12276              	.LBE7926:
 12277              	.LBE7931:
 12278              	.LBE7937:
 12279              	.LBB7938:
 12280              	.LBB7787:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 12281              		.loc 26 346 18 view .LVU2841
 12282 00b4 2746     		mov	r7, r4
 12283              	.LBE7787:
 12284              	.LBE7938:
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 12285              		.loc 26 1582 6 view .LVU2842
 12286 00b6 0460     		str	r4, [r0]
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 12287              		.loc 26 1583 36 view .LVU2843
 12288 00b8 8460     		str	r4, [r0, #8]
 12289              	.LVL811:
 12290              	.LBB7939:
 12291              		.loc 37 323 5 is_stmt 1 view .LVU2844
 12292              	.LBB7932:
 12293              	.LBB7927:
 12294              	.LBB7922:
 12295              	.LBB7917:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 12296              		.loc 37 90 23 view .LVU2845
 12297              	.L627:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 12298              		.loc 37 90 23 is_stmt 0 view .LVU2846
 12299              	.LBE7917:
 12300              	.LBE7922:
 12301              	.LBE7927:
 12302              	.LBE7932:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 454


 12303              	.LBE7939:
 12304              	.LBE7944:
 12305              	.LBE7951:
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 12306              		.loc 26 631 7 view .LVU2847
 12307 00ba 4046     		mov	r0, r8
 12308              	.LBB7952:
 12309              	.LBB7945:
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 12310              		.loc 26 1584 28 view .LVU2848
 12311 00bc C8F80470 		str	r7, [r8, #4]
 12312              	.LVL812:
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 12313              		.loc 26 1584 28 view .LVU2849
 12314              	.LBE7945:
 12315              	.LBE7952:
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 12316              		.loc 26 631 7 view .LVU2850
 12317 00c0 04B0     		add	sp, sp, #16
 12318              		.cfi_remember_state
 12319              		.cfi_def_cfa_offset 32
 12320              		@ sp needed
 12321 00c2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 12322              	.LVL813:
 12323              	.L647:
 12324              		.cfi_restore_state
 12325              	.LBB7953:
 12326              	.LBB7946:
 12327              	.LBB7940:
 12328              	.LBB7933:
 12329              	.LBB7928:
 12330              	.LBB7923:
 12331              	.LBB7918:
 12332              	.LBB7913:
 12333              	.LBB7908:
 12334              	.LBB7904:
 12335              	.LBB7900:
 12336              	.LBB7879:
 12337              	.LBB7875:
 12338              	.LBB7871:
 12339              	.LBB7867:
 12340              	.LBB7863:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 12341              		.loc 22 212 28 view .LVU2851
 12342 00c6 0448     		ldr	r0, .L650+4
 12343 00c8 FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 12344              	.LVL814:
 12345              	.L646:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 12346              		.loc 22 212 28 view .LVU2852
 12347              	.LBE7863:
 12348              	.LBE7867:
 12349              	.LBE7871:
 12350              	.LBE7875:
 12351              	.LBE7879:
 12352              	.LBE7900:
 12353              	.LBE7904:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 455


 12354              	.LBE7908:
 12355              	.LBE7913:
 12356              	.LBE7918:
 12357              	.LBE7923:
 12358              	.LBE7928:
 12359              	.LBE7933:
 12360              	.LBE7940:
 12361              	.LBB7941:
 12362              	.LBB7775:
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
 12363              		.loc 26 1770 24 view .LVU2853
 12364 00cc 0348     		ldr	r0, .L650+8
 12365              	.LVL815:
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
 12366              		.loc 26 1770 24 view .LVU2854
 12367 00ce FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 12368              	.LVL816:
 12369              	.L651:
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
 12370              		.loc 26 1770 24 view .LVU2855
 12371 00d2 00BF     		.align	2
 12372              	.L650:
 12373 00d4 F8FFFF7F 		.word	2147483640
 12374 00d8 00000000 		.word	.LC9
 12375 00dc 00000000 		.word	.LC10
 12376              	.LBE7775:
 12377              	.LBE7941:
 12378              	.LBE7946:
 12379              	.LBE7953:
 12380              		.cfi_endproc
 12381              	.LFE5463:
 12383              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_
 12384              		.thumb_set _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initial
 12385              		.section	.text._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_,"axG",%progbits,_ZNSt6vectorIiS
 12386              		.align	1
 12387              		.p2align 2,,3
 12388              		.weak	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_
 12389              		.syntax unified
 12390              		.thumb
 12391              		.thumb_func
 12392              		.fpu fpv5-d16
 12394              	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_:
 12395              	.LVL817:
 12396              	.LFB5475:
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 12397              		.loc 26 625 7 is_stmt 1 view -0
 12398              		.cfi_startproc
 12399              		@ args = 0, pretend = 0, frame = 8
 12400              		@ frame_needed = 0, uses_anonymous_args = 0
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 12401              		.loc 26 625 7 is_stmt 0 view .LVU2857
 12402 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 12403              		.cfi_def_cfa_offset 20
 12404              		.cfi_offset 4, -20
 12405              		.cfi_offset 5, -16
 12406              		.cfi_offset 6, -12
 12407              		.cfi_offset 7, -8
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 456


 12408              		.cfi_offset 14, -4
 12409 0002 83B0     		sub	sp, sp, #12
 12410              		.cfi_def_cfa_offset 32
 12411              	.LBB7997:
 12412              	.LBB7998:
 12413              	.LBB7999:
 12414              	.LBB8000:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 12415              		.loc 26 98 47 view .LVU2858
 12416 0004 0023     		movs	r3, #0
 12417              	.LVL818:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 12418              		.loc 26 98 47 view .LVU2859
 12419              	.LBE8000:
 12420              	.LBE7999:
 12421              	.LBE7998:
 12422              	.LBE7997:
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 12423              		.loc 26 625 7 view .LVU2860
 12424 0006 02AC     		add	r4, sp, #8
 12425 0008 04E90600 		stmdb	r4, {r1, r2}
 12426 000c 0446     		mov	r4, r0
 12427              	.LBB8011:
 12428              	.LBB8012:
 12429              	.LBB8013:
 12430              	.LBB8014:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 12431              		.loc 26 1769 2 view .LVU2861
 12432 000e 1148     		ldr	r0, .L659
 12433              	.LVL819:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 12434              		.loc 26 1769 2 view .LVU2862
 12435              	.LBE8014:
 12436              	.LBE8013:
 12437              	.LBE8012:
 12438              	.LBE8011:
 12439              	.LBB8073:
 12440              	.LBI7997:
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 12441              		.loc 26 293 7 is_stmt 1 view .LVU2863
 12442              	.LBB8008:
 12443              	.LBI7998:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 12444              		.loc 26 136 2 view .LVU2864
 12445              	.LBB8003:
 12446              	.LBI8003:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12447              		.loc 19 147 7 view .LVU2865
 12448              	.LBB8004:
 12449              	.LBI8004:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12450              		.loc 20 82 7 view .LVU2866
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12451              		.loc 20 82 7 is_stmt 0 view .LVU2867
 12452              	.LBE8004:
 12453              	.LBE8003:
 12454              	.LBB8005:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 457


 12455              	.LBI7999:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 12456              		.loc 26 97 2 is_stmt 1 view .LVU2868
 12457              	.LBE8005:
 12458              	.LBE8008:
 12459              	.LBE8073:
 12460              	.LBB8074:
 12461              	.LBB8066:
 12462              	.LBB8023:
 12463              	.LBB8019:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 12464              		.loc 26 1769 2 is_stmt 0 view .LVU2869
 12465 0010 B0EB820F 		cmp	r0, r2, lsl #2
 12466              	.LBE8019:
 12467              	.LBE8023:
 12468              	.LBE8066:
 12469              	.LBE8074:
 12470              	.LBB8075:
 12471              	.LBB8009:
 12472              	.LBB8006:
 12473              	.LBB8001:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 12474              		.loc 26 98 47 view .LVU2870
 12475 0014 A360     		str	r3, [r4, #8]
 12476              	.LVL820:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 12477              		.loc 26 98 47 view .LVU2871
 12478              	.LBE8001:
 12479              	.LBE8006:
 12480              	.LBE8009:
 12481              	.LBE8075:
 12482              	.LBB8076:
 12483              	.LBI8076:
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 12484              		.loc 36 75 7 is_stmt 1 view .LVU2872
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 12485              		.loc 36 75 7 is_stmt 0 view .LVU2873
 12486              	.LBE8076:
 12487              	.LBB8077:
 12488              	.LBI8077:
 12489              		.loc 36 79 7 is_stmt 1 view .LVU2874
 12490              	.LBB8078:
 12491              	.LBB8079:
 12492              	.LBI8079:
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 12493              		.loc 36 71 7 view .LVU2875
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 12494              		.loc 36 71 7 is_stmt 0 view .LVU2876
 12495              	.LBE8079:
 12496              	.LBE8078:
 12497              	.LBE8077:
 12498              	.LBB8080:
 12499              	.LBI8011:
1577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
 12500              		.loc 26 1577 2 is_stmt 1 view .LVU2877
 12501              	.LBB8067:
 12502              	.LBB8024:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 458


 12503              	.LBI8013:
1767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 12504              		.loc 26 1767 7 view .LVU2878
 12505              	.LBB8020:
 12506              	.LBB8015:
 12507              	.LBI8015:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12508              		.loc 19 147 7 view .LVU2879
 12509              	.LBB8016:
 12510              	.LBI8016:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12511              		.loc 20 82 7 view .LVU2880
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12512              		.loc 20 82 7 is_stmt 0 view .LVU2881
 12513              	.LBE8016:
 12514              	.LBE8015:
 12515              	.LBB8017:
 12516              	.LBI8017:
 12517              		.loc 19 162 7 is_stmt 1 view .LVU2882
 12518              	.LBB8018:
 12519              	.LBI8018:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12520              		.loc 20 89 7 view .LVU2883
 12521              	.LBE8018:
 12522              	.LBE8017:
 12523              	.LBE8020:
 12524              	.LBE8024:
 12525              	.LBE8067:
 12526              	.LBE8080:
 12527              	.LBB8081:
 12528              	.LBB8010:
 12529              	.LBB8007:
 12530              	.LBB8002:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 12531              		.loc 26 98 47 is_stmt 0 view .LVU2884
 12532 0016 C4E90033 		strd	r3, r3, [r4]
 12533              	.LBE8002:
 12534              	.LBE8007:
 12535              	.LBE8010:
 12536              	.LBE8081:
 12537              	.LBB8082:
 12538              	.LBB8068:
 12539              	.LBB8025:
 12540              	.LBB8021:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 12541              		.loc 26 1769 2 view .LVU2885
 12542 001a 18D3     		bcc	.L658
 12543              	.LVL821:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 12544              		.loc 26 1769 2 view .LVU2886
 12545              	.LBE8021:
 12546              	.LBE8025:
 12547              	.LBB8026:
 12548              	.LBI8026:
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 12549              		.loc 26 343 7 is_stmt 1 view .LVU2887
 12550 001c 9600     		lsls	r6, r2, #2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 459


 12551              	.LVL822:
 12552              	.LBB8027:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 12553              		.loc 26 346 18 is_stmt 0 view .LVU2888
 12554 001e 7EB1     		cbz	r6, .L654
 12555              	.LBB8028:
 12556              	.LBB8029:
 12557              	.LBB8030:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 12558              		.loc 20 115 41 view .LVU2889
 12559 0020 3046     		mov	r0, r6
 12560 0022 0F46     		mov	r7, r1
 12561              	.LVL823:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 12562              		.loc 20 115 41 view .LVU2890
 12563              	.LBE8030:
 12564              	.LBE8029:
 12565              	.LBI8028:
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 12566              		.loc 25 459 7 is_stmt 1 view .LVU2891
 12567              	.LBB8032:
 12568              	.LBI8029:
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 12569              		.loc 20 103 7 view .LVU2892
 12570              	.LBB8031:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 12571              		.loc 20 115 41 is_stmt 0 view .LVU2893
 12572 0024 FFF7FEFF 		bl	_Znwj
 12573              	.LVL824:
 12574 0028 0546     		mov	r5, r0
 12575              	.LVL825:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 12576              		.loc 20 115 41 view .LVU2894
 12577              	.LBE8031:
 12578              	.LBE8032:
 12579              	.LBE8028:
 12580              	.LBE8027:
 12581              	.LBE8026:
 12582              	.LBB8033:
 12583              	.LBB8034:
 12584              	.LBB8035:
 12585              	.LBB8036:
 12586              	.LBB8037:
 12587              	.LBB8038:
 12588              	.LBB8039:
 12589              	.LBB8040:
 12590              	.LBB8041:
 12591              	.LBB8042:
 12592              	.LBB8043:
 12593              		.file 38 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 460


   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/functexcept.h>
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_pair.h>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 461


  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <debug/debug.h>
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/predefined_ops.h>
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <type_traits>
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus > 201703L
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <compare>
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** {
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /*
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    */
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline int
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return 0;
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       else
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _BoolType>
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    _ValueType1;
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 462


 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__a = *__b;
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__b = __tmp;
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap<true>
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  swap(*__a, *__b);
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif // C++03
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   Nothing.
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  iterators themselves.
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType1;
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType2;
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType2>)
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType1>)
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType1;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType2;
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(__a, __b);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 463


 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #else
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // 187. iter_swap underspecified
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       swap(*__a, *__b);
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  The ranges must not overlap.
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _ForwardIterator2
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __first2;
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__b < __a)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 464


 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return  __a < __b ? __b : __a;
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__a < __b)
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__b, __a))
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 465


 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__a, __b))
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_base(_Iterator __it)
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __it; }
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _From, typename _To>
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _From
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __res; }
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // a for loop with an explicit count.
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = *__first;
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 466


 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Category>
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, _Category>
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = std::move(*__first);
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = *__first;
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = std::move(*__first);
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 467


 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove>
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _Tp>
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _Tp*
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_move_assignable<_Tp>,
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  // trivial types can have deleted assignment
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 12594              		.loc 38 426 23 view .LVU2895
 12595 002a 3946     		mov	r1, r7
 12596 002c 3246     		mov	r2, r6
 12597              	.LBE8043:
 12598              	.LBE8042:
 12599              	.LBE8041:
 12600              	.LBE8040:
 12601              	.LBE8039:
 12602              	.LBE8038:
 12603              	.LBE8037:
 12604              	.LBE8036:
 12605              	.LBE8035:
 12606              	.LBE8034:
 12607              	.LBE8033:
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 12608              		.loc 26 1583 61 view .LVU2896
 12609 002e 3544     		add	r5, r5, r6
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 12610              		.loc 26 1582 6 view .LVU2897
 12611 0030 2060     		str	r0, [r4]
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 12612              		.loc 26 1583 36 view .LVU2898
 12613 0032 A560     		str	r5, [r4, #8]
 12614              	.LVL826:
 12615              	.LBB8063:
 12616              	.LBI8033:
 12617              		.loc 37 323 5 is_stmt 1 view .LVU2899
 12618              	.LBB8061:
 12619              	.LBI8034:
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 12620              		.loc 37 125 5 view .LVU2900
 12621              	.LBB8059:
 12622              	.LBB8057:
 12623              	.LBI8036:
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 12624              		.loc 37 107 9 view .LVU2901
 12625              	.LBB8055:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 468


 12626              	.LBI8037:
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT>
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct char_traits;
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class istreambuf_iterator;
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class ostreambuf_iterator;
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				    _CharT*>::__type
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return std::__copy_move<_IsMove, false, _Category>::
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  __copy_m(__first, __last, __result);
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct _Deque_iterator;
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 469


 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _OI);
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II, _II, _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II __first, _II __last, _OI __result)
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__niter_wrap(__result,
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__last),
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__result)));
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  _OI);
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II, _II,
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 470


 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  An input iterator.
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   An input iterator.
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result An output iterator.
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result + (last - first)
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  within [first,last).
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _II, typename _OI>
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 12627              		.loc 38 560 5 view .LVU2902
 12628              	.LBB8053:
 12629              	.LBI8038:
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 12630              		.loc 38 511 5 view .LVU2903
 12631              	.LBB8051:
 12632              	.LBI8039:
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 12633              		.loc 38 505 5 view .LVU2904
 12634              	.LBB8049:
 12635              	.LBI8040:
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 12636              		.loc 38 463 5 view .LVU2905
 12637              	.LBB8047:
 12638              	.LBB8045:
 12639              	.LBI8042:
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 12640              		.loc 38 415 2 view .LVU2906
 12641              	.LBB8044:
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 12642              		.loc 38 426 23 is_stmt 0 view .LVU2907
 12643 0034 FFF7FEFF 		bl	memcpy
 12644              	.LVL827:
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 12645              		.loc 38 426 23 view .LVU2908
 12646              	.LBE8044:
 12647              	.LBE8045:
 12648              	.LBE8047:
 12649              	.LBE8049:
 12650              	.LBE8051:
 12651              	.LBE8053:
 12652              	.LBE8055:
 12653              	.LBE8057:
 12654              	.LBE8059:
 12655              	.LBE8061:
 12656              	.LBE8063:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 471


 12657              	.LBE8068:
 12658              	.LBE8082:
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 12659              		.loc 26 631 7 view .LVU2909
 12660 0038 2046     		mov	r0, r4
 12661              	.LBB8083:
 12662              	.LBB8069:
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 12663              		.loc 26 1584 28 view .LVU2910
 12664 003a 6560     		str	r5, [r4, #4]
 12665              	.LVL828:
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 12666              		.loc 26 1584 28 view .LVU2911
 12667              	.LBE8069:
 12668              	.LBE8083:
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 12669              		.loc 26 631 7 view .LVU2912
 12670 003c 03B0     		add	sp, sp, #12
 12671              		.cfi_remember_state
 12672              		.cfi_def_cfa_offset 20
 12673              		@ sp needed
 12674 003e F0BD     		pop	{r4, r5, r6, r7, pc}
 12675              	.LVL829:
 12676              	.L654:
 12677              		.cfi_restore_state
 12678              	.LBB8084:
 12679              	.LBB8070:
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 12680              		.loc 26 1583 61 view .LVU2913
 12681 0040 3546     		mov	r5, r6
 12682              	.LBE8070:
 12683              	.LBE8084:
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 12684              		.loc 26 631 7 view .LVU2914
 12685 0042 2046     		mov	r0, r4
 12686              	.LBB8085:
 12687              	.LBB8071:
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 12688              		.loc 26 1582 6 view .LVU2915
 12689 0044 2660     		str	r6, [r4]
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 12690              		.loc 26 1583 36 view .LVU2916
 12691 0046 A660     		str	r6, [r4, #8]
 12692              	.LVL830:
 12693              	.LBB8064:
 12694              		.loc 37 323 5 is_stmt 1 view .LVU2917
 12695              	.LBB8062:
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 12696              		.loc 37 125 5 view .LVU2918
 12697              	.LBB8060:
 12698              	.LBB8058:
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 12699              		.loc 37 107 9 view .LVU2919
 12700              	.LBB8056:
 12701              		.loc 38 560 5 view .LVU2920
 12702              	.LBB8054:
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 472


 12703              		.loc 38 511 5 view .LVU2921
 12704              	.LBB8052:
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 12705              		.loc 38 505 5 view .LVU2922
 12706              	.LBB8050:
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 12707              		.loc 38 463 5 view .LVU2923
 12708              	.LBB8048:
 12709              	.LBB8046:
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 12710              		.loc 38 415 2 view .LVU2924
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 12711              		.loc 38 415 2 is_stmt 0 view .LVU2925
 12712              	.LBE8046:
 12713              	.LBE8048:
 12714              	.LBE8050:
 12715              	.LBE8052:
 12716              	.LBE8054:
 12717              	.LBE8056:
 12718              	.LBE8058:
 12719              	.LBE8060:
 12720              	.LBE8062:
 12721              	.LBE8064:
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 12722              		.loc 26 1584 28 view .LVU2926
 12723 0048 6560     		str	r5, [r4, #4]
 12724              	.LVL831:
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 12725              		.loc 26 1584 28 view .LVU2927
 12726              	.LBE8071:
 12727              	.LBE8085:
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 12728              		.loc 26 631 7 view .LVU2928
 12729 004a 03B0     		add	sp, sp, #12
 12730              		.cfi_remember_state
 12731              		.cfi_def_cfa_offset 20
 12732              		@ sp needed
 12733 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 12734              	.LVL832:
 12735              	.L658:
 12736              		.cfi_restore_state
 12737              	.LBB8086:
 12738              	.LBB8072:
 12739              	.LBB8065:
 12740              	.LBB8022:
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
 12741              		.loc 26 1770 24 view .LVU2929
 12742 004e 0248     		ldr	r0, .L659+4
 12743 0050 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 12744              	.LVL833:
 12745              	.L660:
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
 12746              		.loc 26 1770 24 view .LVU2930
 12747              		.align	2
 12748              	.L659:
 12749 0054 FCFFFF7F 		.word	2147483644
 12750 0058 00000000 		.word	.LC10
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 473


 12751              	.LBE8022:
 12752              	.LBE8065:
 12753              	.LBE8072:
 12754              	.LBE8086:
 12755              		.cfi_endproc
 12756              	.LFE5475:
 12758              		.weak	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 12759              		.thumb_set _ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_,_ZNSt6vectorIiSaIiEEC2ESt16initiali
 12760              		.section	.text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC
 12761              		.align	1
 12762              		.p2align 2,,3
 12763              		.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS
 12764              		.syntax unified
 12765              		.thumb
 12766              		.thumb_func
 12767              		.fpu fpv5-d16
 12769              	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS9_Lb1EE
 12770              	.LVL834:
 12771              	.LFB5492:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       typedef _T1 first_type;    ///< The type of the `first` member
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       typedef _T2 second_type;   ///< The type of the `second` member
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _T1 first;                 ///< The first member
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _T2 second;                ///< The second member
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // 265.  std::pair::pair() effects overly restrictive
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /** The default constructor creates @c first and @c second using their
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        *  respective default constructors.  */
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1 = _T1,
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename _U2 = _T2,
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename enable_if<__and_<
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                      __is_implicitly_default_constructible<_U1>,
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                      __is_implicitly_default_constructible<_U2>>
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                    ::value, bool>::type = true>
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _GLIBCXX_CONSTEXPR pair()
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(), second() { }
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1 = _T1,
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename _U2 = _T2,
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename enable_if<__and_<
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        is_default_constructible<_U1>,
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        is_default_constructible<_U2>,
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        __not_<
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          __and_<__is_implicitly_default_constructible<_U1>,
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                 __is_implicitly_default_constructible<_U2>>>>
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                    ::value, bool>::type = false>
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       explicit constexpr pair()
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(), second() { }
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus < 201103L
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 474


 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Two objects may be passed to a @c pair constructor to be copied.
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       pair(const _T1& __a, const _T2& __b)
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #else
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // Shortcut for constraining the templates that don't take pairs.
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @cond undocumented
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       using _PCCP = _PCC<true, _T1, _T2>;
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @endcond
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Construct from two const lvalues, allowing implicit conversions.
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1 = _T1, typename _U2=_T2, typename
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                 && _PCCP::template
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(const _T1& __a, const _T2& __b)
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Construct from two const lvalues, disallowing implicit conversions.
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        template<typename _U1 = _T1, typename _U2=_T2, typename
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		enable_if<_PCCP::template
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _ConstructiblePair<_U1, _U2>()
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                  && !_PCCP::template
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _ImplicitlyConvertiblePair<_U1, _U2>(),
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       explicit constexpr pair(const _T1& __a, const _T2& __b)
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus < 201103L
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// There is also a templated constructor to convert from other pairs.
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2>
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	pair(const pair<_U1, _U2>& __p)
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #else
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // Shortcut for constraining the templates that take pairs.
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @cond undocumented
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         using _PCCFP = _PCC<!is_same<_T1, _U1>::value
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    || !is_same<_T2, _U2>::value,
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _T1, _T2>;
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @endcond
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                 && _PCCFP<_U1, _U2>::template
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			  bool>::type=true>
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         constexpr pair(const pair<_U1, _U2>& __p)
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         : first(__p.first), second(__p.second) { }
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			 && !_PCCFP<_U1, _U2>::template
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 475


 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	explicit constexpr pair(const pair<_U1, _U2>& __p)
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(const pair&) = default;	///< Copy constructor
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // DR 811.
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveCopyPair<true, _U1, _T2>(),
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        constexpr pair(_U1&& __x, const _T2& __y)
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveCopyPair<false, _U1, _T2>(),
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        explicit constexpr pair(_U1&& __x, const _T2& __y)
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U2, typename
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _CopyMovePair<true, _T1, _U2>(),
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        constexpr pair(const _T1& __x, _U2&& __y)
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U2, typename
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _CopyMovePair<false, _T1, _U2>(),
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        explicit pair(const _T1& __x, _U2&& __y)
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveConstructiblePair<_U1, _U2>()
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			  && _PCCP::template
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	constexpr pair(_U1&& __x, _U2&& __y)
 12772              		.loc 30 352 12 is_stmt 1 view -0
 12773              		.cfi_startproc
 12774              		@ args = 0, pretend = 0, frame = 8
 12775              		@ frame_needed = 0, uses_anonymous_args = 0
 12776              		.loc 30 352 12 is_stmt 0 view .LVU2932
 12777 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 12778              		.cfi_def_cfa_offset 24
 12779              		.cfi_offset 4, -24
 12780              		.cfi_offset 5, -20
 12781              		.cfi_offset 6, -16
 12782              		.cfi_offset 7, -12
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 476


 12783              		.cfi_offset 8, -8
 12784              		.cfi_offset 14, -4
 12785 0004 0446     		mov	r4, r0
 12786              	.LBB8151:
 12787              	.LBB8152:
 12788              	.LBB8153:
 12789              	.LBB8154:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 12790              		.loc 18 193 51 view .LVU2933
 12791 0006 00F10807 		add	r7, r0, #8
 12792              	.LBE8154:
 12793              	.LBE8153:
 12794              	.LBE8152:
 12795              	.LBE8151:
 12796              		.loc 30 352 12 view .LVU2934
 12797 000a 82B0     		sub	sp, sp, #8
 12798              		.cfi_def_cfa_offset 32
 12799              	.LBB8263:
 12800              	.LBB8243:
 12801              	.LBB8155:
 12802              	.LBB8156:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12803              		.loc 21 357 25 view .LVU2935
 12804 000c 0846     		mov	r0, r1
 12805              	.LVL835:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12806              		.loc 21 357 25 view .LVU2936
 12807              	.LBE8156:
 12808              	.LBE8155:
 12809              	.LBB8160:
 12810              	.LBB8161:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12811              		.loc 18 157 35 view .LVU2937
 12812 000e 2760     		str	r7, [r4]
 12813              	.LBE8161:
 12814              	.LBE8160:
 12815              	.LBE8243:
 12816              	.LBE8263:
 12817              		.loc 30 352 12 view .LVU2938
 12818 0010 8846     		mov	r8, r1
 12819              	.LVL836:
 12820              	.LBB8264:
 12821              	.LBB8244:
 12822              	.LBI8244:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 12823              		.loc 34 76 5 is_stmt 1 view .LVU2939
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 12824              		.loc 34 76 5 is_stmt 0 view .LVU2940
 12825              	.LBE8244:
 12826              	.LBB8245:
 12827              	.LBI8245:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 12828              		.loc 19 144 7 is_stmt 1 view .LVU2941
 12829              	.LBB8246:
 12830              	.LBI8246:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12831              		.loc 20 79 7 view .LVU2942
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 477


  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12832              		.loc 20 79 7 is_stmt 0 view .LVU2943
 12833              	.LBE8246:
 12834              	.LBE8245:
 12835              	.LBB8247:
 12836              	.LBI8152:
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 12837              		.loc 18 525 7 is_stmt 1 view .LVU2944
 12838              	.LBB8165:
 12839              	.LBI8153:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12840              		.loc 18 190 7 view .LVU2945
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12841              		.loc 18 190 7 is_stmt 0 view .LVU2946
 12842              	.LBE8165:
 12843              	.LBB8166:
 12844              	.LBI8160:
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 12845              		.loc 18 156 2 is_stmt 1 view .LVU2947
 12846              	.LBB8164:
 12847              	.LBB8162:
 12848              	.LBI8162:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12849              		.loc 19 147 7 view .LVU2948
 12850              	.LBB8163:
 12851              	.LBI8163:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12852              		.loc 20 82 7 view .LVU2949
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12853              		.loc 20 82 7 is_stmt 0 view .LVU2950
 12854              	.LBE8163:
 12855              	.LBE8162:
 12856              	.LBE8164:
 12857              	.LBE8166:
 12858              	.LBB8167:
 12859              	.LBI8155:
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 12860              		.loc 21 351 7 is_stmt 1 view .LVU2951
 12861              	.LBB8157:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12862              		.loc 21 357 2 view .LVU2952
 12863              	.LBE8157:
 12864              	.LBE8167:
 12865              	.LBE8247:
 12866              	.LBE8264:
 12867              		.loc 30 352 12 is_stmt 0 view .LVU2953
 12868 0012 1546     		mov	r5, r2
 12869              	.LBB8265:
 12870              	.LBB8248:
 12871              	.LBB8168:
 12872              	.LBB8158:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12873              		.loc 21 357 25 view .LVU2954
 12874 0014 FFF7FEFF 		bl	strlen
 12875              	.LVL837:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12876              		.loc 21 357 25 view .LVU2955
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 478


 12877              	.LBE8158:
 12878              	.LBE8168:
 12879              	.LBB8169:
 12880              	.LBB8170:
 12881              	.LBB8171:
 12882              	.LBB8172:
 12883              	.LBB8173:
 12884              	.LBB8174:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 12885              		.loc 22 217 2 view .LVU2956
 12886 0018 0F28     		cmp	r0, #15
 12887              	.LBE8174:
 12888              	.LBE8173:
 12889              	.LBE8172:
 12890              	.LBE8171:
 12891              	.LBE8170:
 12892              	.LBE8169:
 12893              	.LBB8239:
 12894              	.LBB8159:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12895              		.loc 21 357 25 view .LVU2957
 12896 001a 0646     		mov	r6, r0
 12897              	.LVL838:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12898              		.loc 21 357 25 view .LVU2958
 12899              	.LBE8159:
 12900              	.LBE8239:
 12901              	.LBB8240:
 12902              	.LBI8169:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 12903              		.loc 18 263 9 is_stmt 1 view .LVU2959
 12904              	.LBB8236:
 12905              	.LBB8233:
 12906              	.LBI8171:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 12907              		.loc 18 243 9 view .LVU2960
 12908              	.LBB8230:
 12909              	.LBB8227:
 12910              	.LBI8173:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 12911              		.loc 22 206 7 view .LVU2961
 12912              	.LBB8224:
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 12913              		.loc 22 215 12 is_stmt 0 view .LVU2962
 12914 001c 0190     		str	r0, [sp, #4]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 12915              		.loc 22 217 2 view .LVU2963
 12916 001e 17D8     		bhi	.L670
 12917              	.LVL839:
 12918              	.LBB8175:
 12919              	.LBI8175:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12920              		.loc 18 186 7 is_stmt 1 view .LVU2964
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12921              		.loc 18 186 7 is_stmt 0 view .LVU2965
 12922              	.LBE8175:
 12923              	.LBB8176:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 479


 12924              	.LBI8176:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 12925              		.loc 18 396 7 is_stmt 1 view .LVU2966
 12926              	.LBB8177:
 12927              	.LBI8177:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12928              		.loc 18 346 7 view .LVU2967
 12929              	.LBB8178:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 12930              		.loc 18 348 2 is_stmt 0 view .LVU2968
 12931 0020 0128     		cmp	r0, #1
 12932 0022 12D1     		bne	.L664
 12933              	.LVL840:
 12934              	.LBB8179:
 12935              	.LBI8179:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 12936              		.loc 21 321 7 is_stmt 1 view .LVU2969
 12937              	.LBB8180:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12938              		.loc 21 322 9 view .LVU2970
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12939              		.loc 21 322 14 is_stmt 0 view .LVU2971
 12940 0024 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 12941 0028 2372     		strb	r3, [r4, #8]
 12942              	.LVL841:
 12943              	.L665:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12944              		.loc 21 322 14 view .LVU2972
 12945              	.LBE8180:
 12946              	.LBE8179:
 12947              	.LBE8178:
 12948              	.LBE8177:
 12949              	.LBE8176:
 12950              	.LBB8196:
 12951              	.LBI8196:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12952              		.loc 18 214 7 is_stmt 1 view .LVU2973
 12953              	.LBB8197:
 12954              	.LBB8198:
 12955              	.LBI8198:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 12956              		.loc 18 182 7 view .LVU2974
 12957              	.LBE8198:
 12958              	.LBB8200:
 12959              	.LBB8201:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12960              		.loc 21 322 14 is_stmt 0 view .LVU2975
 12961 002a 0023     		movs	r3, #0
 12962              	.LBE8201:
 12963              	.LBE8200:
 12964              	.LBB8204:
 12965              	.LBB8199:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12966              		.loc 18 183 26 view .LVU2976
 12967 002c 6660     		str	r6, [r4, #4]
 12968              	.LVL842:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 480


 12969              		.loc 18 183 26 view .LVU2977
 12970              	.LBE8199:
 12971              	.LBE8204:
 12972              	.LBB8205:
 12973              	.LBI8205:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12974              		.loc 18 186 7 is_stmt 1 view .LVU2978
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12975              		.loc 18 186 7 is_stmt 0 view .LVU2979
 12976              	.LBE8205:
 12977              	.LBB8207:
 12978              	.LBI8200:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 12979              		.loc 21 321 7 is_stmt 1 view .LVU2980
 12980              	.LBB8202:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12981              		.loc 21 322 9 view .LVU2981
 12982              	.LBE8202:
 12983              	.LBE8207:
 12984              	.LBE8197:
 12985              	.LBE8196:
 12986              	.LBE8224:
 12987              	.LBE8227:
 12988              	.LBE8230:
 12989              	.LBE8233:
 12990              	.LBE8236:
 12991              	.LBE8240:
 12992              	.LBE8248:
 12993              	.LBE8265:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 12994              		.loc 30 353 68 is_stmt 0 view .LVU2982
 12995 002e 2046     		mov	r0, r4
 12996              	.LBB8266:
 12997              	.LBB8249:
 12998              	.LBB8241:
 12999              	.LBB8237:
 13000              	.LBB8234:
 13001              	.LBB8231:
 13002              	.LBB8228:
 13003              	.LBB8225:
 13004              	.LBB8212:
 13005              	.LBB8210:
 13006              	.LBB8208:
 13007              	.LBB8203:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13008              		.loc 21 322 14 view .LVU2983
 13009 0030 BB55     		strb	r3, [r7, r6]
 13010              	.LVL843:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13011              		.loc 21 322 14 view .LVU2984
 13012              	.LBE8203:
 13013              	.LBE8208:
 13014              	.LBE8210:
 13015              	.LBE8212:
 13016              	.LBE8225:
 13017              	.LBE8228:
 13018              	.LBE8231:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 481


 13019              	.LBE8234:
 13020              	.LBE8237:
 13021              	.LBE8241:
 13022              	.LBE8249:
 13023              	.LBB8250:
 13024              	.LBI8250:
 13025              		.loc 19 162 7 is_stmt 1 view .LVU2985
 13026              	.LBB8251:
 13027              	.LBI8251:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13028              		.loc 20 89 7 view .LVU2986
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13029              		.loc 20 89 7 is_stmt 0 view .LVU2987
 13030              	.LBE8251:
 13031              	.LBE8250:
 13032              	.LBB8252:
 13033              	.LBI8252:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 13034              		.loc 34 76 5 is_stmt 1 view .LVU2988
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 13035              		.loc 34 76 5 is_stmt 0 view .LVU2989
 13036              	.LBE8252:
 13037              	.LBB8253:
 13038              	.LBI8253:
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 13039              		.loc 26 572 7 is_stmt 1 view .LVU2990
 13040              	.LBB8254:
 13041              	.LBI8254:
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 13042              		.loc 26 308 7 view .LVU2991
 13043              	.LBB8255:
 13044              	.LBI8255:
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 13045              		.loc 26 143 2 view .LVU2992
 13046              	.LBB8256:
 13047              	.LBI8256:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13048              		.loc 34 101 5 view .LVU2993
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13049              		.loc 34 101 5 is_stmt 0 view .LVU2994
 13050              	.LBE8256:
 13051              	.LBB8257:
 13052              	.LBI8257:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13053              		.loc 19 147 7 is_stmt 1 view .LVU2995
 13054              	.LBB8258:
 13055              	.LBI8258:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13056              		.loc 20 82 7 view .LVU2996
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13057              		.loc 20 82 7 is_stmt 0 view .LVU2997
 13058              	.LBE8258:
 13059              	.LBE8257:
 13060              	.LBB8259:
 13061              	.LBI8259:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13062              		.loc 34 101 5 is_stmt 1 view .LVU2998
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 482


 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13063              		.loc 34 101 5 is_stmt 0 view .LVU2999
 13064              	.LBE8259:
 13065              	.LBB8260:
 13066              	.LBI8260:
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 13067              		.loc 26 102 2 is_stmt 1 view .LVU3000
 13068              	.LBB8261:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 13069              		.loc 26 104 43 is_stmt 0 view .LVU3001
 13070 0032 D5E90012 		ldrd	r1, r2, [r5]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 13071              		.loc 26 105 17 view .LVU3002
 13072 0036 2B60     		str	r3, [r5]
 13073              	.LVL844:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 13074              		.loc 26 104 43 view .LVU3003
 13075 0038 E261     		str	r2, [r4, #28]
 13076 003a AA68     		ldr	r2, [r5, #8]
 13077 003c A161     		str	r1, [r4, #24]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 13078              		.loc 26 105 33 view .LVU3004
 13079 003e 6B60     		str	r3, [r5, #4]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 13080              		.loc 26 105 57 view .LVU3005
 13081 0040 AB60     		str	r3, [r5, #8]
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 13082              		.loc 26 104 43 view .LVU3006
 13083 0042 2262     		str	r2, [r4, #32]
 13084              	.LBE8261:
 13085              	.LBE8260:
 13086              	.LBE8255:
 13087              	.LBE8254:
 13088              	.LBE8253:
 13089              	.LBE8266:
 13090              		.loc 30 353 68 view .LVU3007
 13091 0044 02B0     		add	sp, sp, #8
 13092              		.cfi_remember_state
 13093              		.cfi_def_cfa_offset 24
 13094              		@ sp needed
 13095 0046 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 13096              	.LVL845:
 13097              	.L664:
 13098              		.cfi_restore_state
 13099              	.LBB8267:
 13100              	.LBB8262:
 13101              	.LBB8242:
 13102              	.LBB8238:
 13103              	.LBB8235:
 13104              	.LBB8232:
 13105              	.LBB8229:
 13106              	.LBB8226:
 13107              	.LBB8213:
 13108              	.LBB8193:
 13109              	.LBB8190:
 13110              	.LBB8181:
 13111              	.LBI8181:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 483


 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13112              		.loc 18 346 7 is_stmt 1 view .LVU3008
 13113              	.LBB8182:
 13114              	.LBI8182:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 13115              		.loc 21 387 7 view .LVU3009
 13116              	.LBB8183:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13117              		.loc 21 389 2 view .LVU3010
 13118 004a 0028     		cmp	r0, #0
 13119 004c EDD0     		beq	.L665
 13120 004e 08E0     		b	.L663
 13121              	.LVL846:
 13122              	.L670:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13123              		.loc 21 389 2 is_stmt 0 view .LVU3011
 13124              	.LBE8183:
 13125              	.LBE8182:
 13126              	.LBE8181:
 13127              	.LBE8190:
 13128              	.LBE8193:
 13129              	.LBE8213:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 13130              		.loc 22 219 13 view .LVU3012
 13131 0050 0022     		movs	r2, #0
 13132 0052 01A9     		add	r1, sp, #4
 13133 0054 2046     		mov	r0, r4
 13134              	.LVL847:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 13135              		.loc 22 219 13 view .LVU3013
 13136 0056 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 13137              	.LVL848:
 13138              	.LBB8214:
 13139              	.LBB8215:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13140              		.loc 18 211 31 view .LVU3014
 13141 005a 019B     		ldr	r3, [sp, #4]
 13142              	.LBE8215:
 13143              	.LBE8214:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 13144              		.loc 22 219 13 view .LVU3015
 13145 005c 0746     		mov	r7, r0
 13146              	.LVL849:
 13147              	.LBB8217:
 13148              	.LBI8217:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 13149              		.loc 18 178 7 is_stmt 1 view .LVU3016
 13150              	.LBB8218:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13151              		.loc 18 179 26 is_stmt 0 view .LVU3017
 13152 005e 2060     		str	r0, [r4]
 13153              	.LVL850:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13154              		.loc 18 179 26 view .LVU3018
 13155              	.LBE8218:
 13156              	.LBE8217:
 13157              	.LBB8219:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 484


 13158              	.LBI8214:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 13159              		.loc 18 210 7 is_stmt 1 view .LVU3019
 13160              	.LBB8216:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13161              		.loc 18 211 31 is_stmt 0 view .LVU3020
 13162 0060 A360     		str	r3, [r4, #8]
 13163              	.LVL851:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13164              		.loc 18 211 31 view .LVU3021
 13165              	.LBE8216:
 13166              	.LBE8219:
 13167              	.LBB8220:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13168              		.loc 18 186 7 is_stmt 1 view .LVU3022
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13169              		.loc 18 186 7 is_stmt 0 view .LVU3023
 13170              	.LBE8220:
 13171              	.LBB8221:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 13172              		.loc 18 396 7 is_stmt 1 view .LVU3024
 13173              	.LBB8194:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13174              		.loc 18 346 7 view .LVU3025
 13175              	.LBB8191:
 13176              	.LBB8188:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13177              		.loc 18 346 7 view .LVU3026
 13178              	.LBB8186:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 13179              		.loc 21 387 7 view .LVU3027
 13180              	.LBB8184:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13181              		.loc 21 389 2 view .LVU3028
 13182              	.L663:
 13183              		.loc 21 395 2 view .LVU3029
 13184              		.loc 21 395 49 is_stmt 0 view .LVU3030
 13185 0062 3246     		mov	r2, r6
 13186 0064 3846     		mov	r0, r7
 13187 0066 4146     		mov	r1, r8
 13188 0068 FFF7FEFF 		bl	memcpy
 13189              	.LVL852:
 13190              	.LBE8184:
 13191              	.LBE8186:
 13192              	.LBE8188:
 13193              	.LBE8191:
 13194              	.LBE8194:
 13195              	.LBE8221:
 13196              		.loc 22 232 15 view .LVU3031
 13197 006c 019E     		ldr	r6, [sp, #4]
 13198              	.LVL853:
 13199              	.LBB8222:
 13200              	.LBB8211:
 13201              	.LBB8209:
 13202              	.LBB8206:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13203              		.loc 18 187 28 view .LVU3032
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 485


 13204 006e 2768     		ldr	r7, [r4]
 13205              	.LVL854:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13206              		.loc 18 187 28 view .LVU3033
 13207              	.LBE8206:
 13208              	.LBE8209:
 13209              	.LBE8211:
 13210              	.LBE8222:
 13211              	.LBB8223:
 13212              	.LBB8195:
 13213              	.LBB8192:
 13214              	.LBB8189:
 13215              	.LBB8187:
 13216              	.LBB8185:
 13217              		.loc 21 395 66 view .LVU3034
 13218 0070 DBE7     		b	.L665
 13219              	.LBE8185:
 13220              	.LBE8187:
 13221              	.LBE8189:
 13222              	.LBE8192:
 13223              	.LBE8195:
 13224              	.LBE8223:
 13225              	.LBE8226:
 13226              	.LBE8229:
 13227              	.LBE8232:
 13228              	.LBE8235:
 13229              	.LBE8238:
 13230              	.LBE8242:
 13231              	.LBE8262:
 13232              	.LBE8267:
 13233              		.cfi_endproc
 13234              	.LFE5492:
 13236              		.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA6_KcS
 13237              		.thumb_set _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA
 13238 0072 00BF     		.section	.text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC
 13239              		.align	1
 13240              		.p2align 2,,3
 13241              		.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS
 13242              		.syntax unified
 13243              		.thumb
 13244              		.thumb_func
 13245              		.fpu fpv5-d16
 13247              	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS9_Lb1EE
 13248              	.LVL855:
 13249              	.LFB5496:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 13250              		.loc 30 352 12 is_stmt 1 view -0
 13251              		.cfi_startproc
 13252              		@ args = 0, pretend = 0, frame = 8
 13253              		@ frame_needed = 0, uses_anonymous_args = 0
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 13254              		.loc 30 352 12 is_stmt 0 view .LVU3036
 13255 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 13256              		.cfi_def_cfa_offset 24
 13257              		.cfi_offset 4, -24
 13258              		.cfi_offset 5, -20
 13259              		.cfi_offset 6, -16
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 486


 13260              		.cfi_offset 7, -12
 13261              		.cfi_offset 8, -8
 13262              		.cfi_offset 14, -4
 13263 0004 0446     		mov	r4, r0
 13264              	.LBB8332:
 13265              	.LBB8333:
 13266              	.LBB8334:
 13267              	.LBB8335:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 13268              		.loc 18 193 51 view .LVU3037
 13269 0006 00F10807 		add	r7, r0, #8
 13270              	.LBE8335:
 13271              	.LBE8334:
 13272              	.LBE8333:
 13273              	.LBE8332:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 13274              		.loc 30 352 12 view .LVU3038
 13275 000a 82B0     		sub	sp, sp, #8
 13276              		.cfi_def_cfa_offset 32
 13277              	.LBB8444:
 13278              	.LBB8424:
 13279              	.LBB8336:
 13280              	.LBB8337:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13281              		.loc 21 357 25 view .LVU3039
 13282 000c 0846     		mov	r0, r1
 13283              	.LVL856:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13284              		.loc 21 357 25 view .LVU3040
 13285              	.LBE8337:
 13286              	.LBE8336:
 13287              	.LBB8341:
 13288              	.LBB8342:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13289              		.loc 18 157 35 view .LVU3041
 13290 000e 2760     		str	r7, [r4]
 13291              	.LBE8342:
 13292              	.LBE8341:
 13293              	.LBE8424:
 13294              	.LBE8444:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 13295              		.loc 30 352 12 view .LVU3042
 13296 0010 8846     		mov	r8, r1
 13297              	.LVL857:
 13298              	.LBB8445:
 13299              	.LBB8425:
 13300              	.LBI8425:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 13301              		.loc 34 76 5 is_stmt 1 view .LVU3043
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 13302              		.loc 34 76 5 is_stmt 0 view .LVU3044
 13303              	.LBE8425:
 13304              	.LBB8426:
 13305              	.LBI8426:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 13306              		.loc 19 144 7 is_stmt 1 view .LVU3045
 13307              	.LBB8427:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 487


 13308              	.LBI8427:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13309              		.loc 20 79 7 view .LVU3046
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13310              		.loc 20 79 7 is_stmt 0 view .LVU3047
 13311              	.LBE8427:
 13312              	.LBE8426:
 13313              	.LBB8428:
 13314              	.LBI8333:
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 13315              		.loc 18 525 7 is_stmt 1 view .LVU3048
 13316              	.LBB8346:
 13317              	.LBI8334:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13318              		.loc 18 190 7 view .LVU3049
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13319              		.loc 18 190 7 is_stmt 0 view .LVU3050
 13320              	.LBE8346:
 13321              	.LBB8347:
 13322              	.LBI8341:
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 13323              		.loc 18 156 2 is_stmt 1 view .LVU3051
 13324              	.LBB8345:
 13325              	.LBB8343:
 13326              	.LBI8343:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13327              		.loc 19 147 7 view .LVU3052
 13328              	.LBB8344:
 13329              	.LBI8344:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13330              		.loc 20 82 7 view .LVU3053
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13331              		.loc 20 82 7 is_stmt 0 view .LVU3054
 13332              	.LBE8344:
 13333              	.LBE8343:
 13334              	.LBE8345:
 13335              	.LBE8347:
 13336              	.LBB8348:
 13337              	.LBI8336:
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 13338              		.loc 21 351 7 is_stmt 1 view .LVU3055
 13339              	.LBB8338:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13340              		.loc 21 357 2 view .LVU3056
 13341              	.LBE8338:
 13342              	.LBE8348:
 13343              	.LBE8428:
 13344              	.LBE8445:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 13345              		.loc 30 352 12 is_stmt 0 view .LVU3057
 13346 0012 1546     		mov	r5, r2
 13347              	.LBB8446:
 13348              	.LBB8429:
 13349              	.LBB8349:
 13350              	.LBB8339:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13351              		.loc 21 357 25 view .LVU3058
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 488


 13352 0014 FFF7FEFF 		bl	strlen
 13353              	.LVL858:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13354              		.loc 21 357 25 view .LVU3059
 13355              	.LBE8339:
 13356              	.LBE8349:
 13357              	.LBB8350:
 13358              	.LBB8351:
 13359              	.LBB8352:
 13360              	.LBB8353:
 13361              	.LBB8354:
 13362              	.LBB8355:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 13363              		.loc 22 217 2 view .LVU3060
 13364 0018 0F28     		cmp	r0, #15
 13365              	.LBE8355:
 13366              	.LBE8354:
 13367              	.LBE8353:
 13368              	.LBE8352:
 13369              	.LBE8351:
 13370              	.LBE8350:
 13371              	.LBB8420:
 13372              	.LBB8340:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13373              		.loc 21 357 25 view .LVU3061
 13374 001a 0646     		mov	r6, r0
 13375              	.LVL859:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13376              		.loc 21 357 25 view .LVU3062
 13377              	.LBE8340:
 13378              	.LBE8420:
 13379              	.LBB8421:
 13380              	.LBI8350:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 13381              		.loc 18 263 9 is_stmt 1 view .LVU3063
 13382              	.LBB8417:
 13383              	.LBB8414:
 13384              	.LBI8352:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 13385              		.loc 18 243 9 view .LVU3064
 13386              	.LBB8411:
 13387              	.LBB8408:
 13388              	.LBI8354:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 13389              		.loc 22 206 7 view .LVU3065
 13390              	.LBB8405:
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 13391              		.loc 22 215 12 is_stmt 0 view .LVU3066
 13392 001c 0190     		str	r0, [sp, #4]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 13393              		.loc 22 217 2 view .LVU3067
 13394 001e 17D8     		bhi	.L680
 13395              	.LVL860:
 13396              	.LBB8356:
 13397              	.LBI8356:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13398              		.loc 18 186 7 is_stmt 1 view .LVU3068
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 489


 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13399              		.loc 18 186 7 is_stmt 0 view .LVU3069
 13400              	.LBE8356:
 13401              	.LBB8357:
 13402              	.LBI8357:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 13403              		.loc 18 396 7 is_stmt 1 view .LVU3070
 13404              	.LBB8358:
 13405              	.LBI8358:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13406              		.loc 18 346 7 view .LVU3071
 13407              	.LBB8359:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 13408              		.loc 18 348 2 is_stmt 0 view .LVU3072
 13409 0020 0128     		cmp	r0, #1
 13410 0022 12D1     		bne	.L674
 13411              	.LVL861:
 13412              	.LBB8360:
 13413              	.LBI8360:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 13414              		.loc 21 321 7 is_stmt 1 view .LVU3073
 13415              	.LBB8361:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13416              		.loc 21 322 9 view .LVU3074
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13417              		.loc 21 322 14 is_stmt 0 view .LVU3075
 13418 0024 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 13419 0028 2372     		strb	r3, [r4, #8]
 13420              	.LVL862:
 13421              	.L675:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13422              		.loc 21 322 14 view .LVU3076
 13423              	.LBE8361:
 13424              	.LBE8360:
 13425              	.LBE8359:
 13426              	.LBE8358:
 13427              	.LBE8357:
 13428              	.LBB8377:
 13429              	.LBI8377:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13430              		.loc 18 214 7 is_stmt 1 view .LVU3077
 13431              	.LBB8378:
 13432              	.LBB8379:
 13433              	.LBI8379:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 13434              		.loc 18 182 7 view .LVU3078
 13435              	.LBE8379:
 13436              	.LBB8381:
 13437              	.LBB8382:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13438              		.loc 21 322 14 is_stmt 0 view .LVU3079
 13439 002a 0023     		movs	r3, #0
 13440              	.LBE8382:
 13441              	.LBE8381:
 13442              	.LBB8385:
 13443              	.LBB8380:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 490


 13444              		.loc 18 183 26 view .LVU3080
 13445 002c 6660     		str	r6, [r4, #4]
 13446              	.LVL863:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13447              		.loc 18 183 26 view .LVU3081
 13448              	.LBE8380:
 13449              	.LBE8385:
 13450              	.LBB8386:
 13451              	.LBI8386:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13452              		.loc 18 186 7 is_stmt 1 view .LVU3082
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13453              		.loc 18 186 7 is_stmt 0 view .LVU3083
 13454              	.LBE8386:
 13455              	.LBB8388:
 13456              	.LBI8381:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 13457              		.loc 21 321 7 is_stmt 1 view .LVU3084
 13458              	.LBB8383:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13459              		.loc 21 322 9 view .LVU3085
 13460              	.LBE8383:
 13461              	.LBE8388:
 13462              	.LBE8378:
 13463              	.LBE8377:
 13464              	.LBE8405:
 13465              	.LBE8408:
 13466              	.LBE8411:
 13467              	.LBE8414:
 13468              	.LBE8417:
 13469              	.LBE8421:
 13470              	.LBE8429:
 13471              	.LBE8446:
 13472              		.loc 30 353 68 is_stmt 0 view .LVU3086
 13473 002e 2046     		mov	r0, r4
 13474              	.LBB8447:
 13475              	.LBB8430:
 13476              	.LBB8422:
 13477              	.LBB8418:
 13478              	.LBB8415:
 13479              	.LBB8412:
 13480              	.LBB8409:
 13481              	.LBB8406:
 13482              	.LBB8393:
 13483              	.LBB8391:
 13484              	.LBB8389:
 13485              	.LBB8384:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13486              		.loc 21 322 14 view .LVU3087
 13487 0030 BB55     		strb	r3, [r7, r6]
 13488              	.LVL864:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13489              		.loc 21 322 14 view .LVU3088
 13490              	.LBE8384:
 13491              	.LBE8389:
 13492              	.LBE8391:
 13493              	.LBE8393:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 491


 13494              	.LBE8406:
 13495              	.LBE8409:
 13496              	.LBE8412:
 13497              	.LBE8415:
 13498              	.LBE8418:
 13499              	.LBE8422:
 13500              	.LBE8430:
 13501              	.LBB8431:
 13502              	.LBI8431:
 13503              		.loc 19 162 7 is_stmt 1 view .LVU3089
 13504              	.LBB8432:
 13505              	.LBI8432:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13506              		.loc 20 89 7 view .LVU3090
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13507              		.loc 20 89 7 is_stmt 0 view .LVU3091
 13508              	.LBE8432:
 13509              	.LBE8431:
 13510              	.LBB8433:
 13511              	.LBI8433:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 13512              		.loc 34 76 5 is_stmt 1 view .LVU3092
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 13513              		.loc 34 76 5 is_stmt 0 view .LVU3093
 13514              	.LBE8433:
 13515              	.LBB8434:
 13516              	.LBI8434:
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 13517              		.loc 26 572 7 is_stmt 1 view .LVU3094
 13518              	.LBB8435:
 13519              	.LBI8435:
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 13520              		.loc 26 308 7 view .LVU3095
 13521              	.LBB8436:
 13522              	.LBI8436:
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 13523              		.loc 26 143 2 view .LVU3096
 13524              	.LBB8437:
 13525              	.LBI8437:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13526              		.loc 34 101 5 view .LVU3097
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13527              		.loc 34 101 5 is_stmt 0 view .LVU3098
 13528              	.LBE8437:
 13529              	.LBB8438:
 13530              	.LBI8438:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13531              		.loc 19 147 7 is_stmt 1 view .LVU3099
 13532              	.LBB8439:
 13533              	.LBI8439:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13534              		.loc 20 82 7 view .LVU3100
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13535              		.loc 20 82 7 is_stmt 0 view .LVU3101
 13536              	.LBE8439:
 13537              	.LBE8438:
 13538              	.LBB8440:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 492


 13539              	.LBI8440:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13540              		.loc 34 101 5 is_stmt 1 view .LVU3102
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13541              		.loc 34 101 5 is_stmt 0 view .LVU3103
 13542              	.LBE8440:
 13543              	.LBB8441:
 13544              	.LBI8441:
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 13545              		.loc 26 102 2 is_stmt 1 view .LVU3104
 13546              	.LBB8442:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 13547              		.loc 26 104 43 is_stmt 0 view .LVU3105
 13548 0032 D5E90012 		ldrd	r1, r2, [r5]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 13549              		.loc 26 105 17 view .LVU3106
 13550 0036 2B60     		str	r3, [r5]
 13551              	.LVL865:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 13552              		.loc 26 104 43 view .LVU3107
 13553 0038 E261     		str	r2, [r4, #28]
 13554 003a AA68     		ldr	r2, [r5, #8]
 13555 003c A161     		str	r1, [r4, #24]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 13556              		.loc 26 105 33 view .LVU3108
 13557 003e 6B60     		str	r3, [r5, #4]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 13558              		.loc 26 105 57 view .LVU3109
 13559 0040 AB60     		str	r3, [r5, #8]
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 13560              		.loc 26 104 43 view .LVU3110
 13561 0042 2262     		str	r2, [r4, #32]
 13562              	.LBE8442:
 13563              	.LBE8441:
 13564              	.LBE8436:
 13565              	.LBE8435:
 13566              	.LBE8434:
 13567              	.LBE8447:
 13568              		.loc 30 353 68 view .LVU3111
 13569 0044 02B0     		add	sp, sp, #8
 13570              		.cfi_remember_state
 13571              		.cfi_def_cfa_offset 24
 13572              		@ sp needed
 13573 0046 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 13574              	.LVL866:
 13575              	.L674:
 13576              		.cfi_restore_state
 13577              	.LBB8448:
 13578              	.LBB8443:
 13579              	.LBB8423:
 13580              	.LBB8419:
 13581              	.LBB8416:
 13582              	.LBB8413:
 13583              	.LBB8410:
 13584              	.LBB8407:
 13585              	.LBB8394:
 13586              	.LBB8374:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 493


 13587              	.LBB8371:
 13588              	.LBB8362:
 13589              	.LBI8362:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13590              		.loc 18 346 7 is_stmt 1 view .LVU3112
 13591              	.LBB8363:
 13592              	.LBI8363:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 13593              		.loc 21 387 7 view .LVU3113
 13594              	.LBB8364:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13595              		.loc 21 389 2 view .LVU3114
 13596 004a 0028     		cmp	r0, #0
 13597 004c EDD0     		beq	.L675
 13598 004e 08E0     		b	.L673
 13599              	.LVL867:
 13600              	.L680:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13601              		.loc 21 389 2 is_stmt 0 view .LVU3115
 13602              	.LBE8364:
 13603              	.LBE8363:
 13604              	.LBE8362:
 13605              	.LBE8371:
 13606              	.LBE8374:
 13607              	.LBE8394:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 13608              		.loc 22 219 13 view .LVU3116
 13609 0050 0022     		movs	r2, #0
 13610 0052 01A9     		add	r1, sp, #4
 13611 0054 2046     		mov	r0, r4
 13612              	.LVL868:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 13613              		.loc 22 219 13 view .LVU3117
 13614 0056 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 13615              	.LVL869:
 13616              	.LBB8395:
 13617              	.LBB8396:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13618              		.loc 18 211 31 view .LVU3118
 13619 005a 019B     		ldr	r3, [sp, #4]
 13620              	.LBE8396:
 13621              	.LBE8395:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 13622              		.loc 22 219 13 view .LVU3119
 13623 005c 0746     		mov	r7, r0
 13624              	.LVL870:
 13625              	.LBB8398:
 13626              	.LBI8398:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 13627              		.loc 18 178 7 is_stmt 1 view .LVU3120
 13628              	.LBB8399:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13629              		.loc 18 179 26 is_stmt 0 view .LVU3121
 13630 005e 2060     		str	r0, [r4]
 13631              	.LVL871:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13632              		.loc 18 179 26 view .LVU3122
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 494


 13633              	.LBE8399:
 13634              	.LBE8398:
 13635              	.LBB8400:
 13636              	.LBI8395:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 13637              		.loc 18 210 7 is_stmt 1 view .LVU3123
 13638              	.LBB8397:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13639              		.loc 18 211 31 is_stmt 0 view .LVU3124
 13640 0060 A360     		str	r3, [r4, #8]
 13641              	.LVL872:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13642              		.loc 18 211 31 view .LVU3125
 13643              	.LBE8397:
 13644              	.LBE8400:
 13645              	.LBB8401:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13646              		.loc 18 186 7 is_stmt 1 view .LVU3126
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13647              		.loc 18 186 7 is_stmt 0 view .LVU3127
 13648              	.LBE8401:
 13649              	.LBB8402:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 13650              		.loc 18 396 7 is_stmt 1 view .LVU3128
 13651              	.LBB8375:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13652              		.loc 18 346 7 view .LVU3129
 13653              	.LBB8372:
 13654              	.LBB8369:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13655              		.loc 18 346 7 view .LVU3130
 13656              	.LBB8367:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 13657              		.loc 21 387 7 view .LVU3131
 13658              	.LBB8365:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13659              		.loc 21 389 2 view .LVU3132
 13660              	.L673:
 13661              		.loc 21 395 2 view .LVU3133
 13662              		.loc 21 395 49 is_stmt 0 view .LVU3134
 13663 0062 3246     		mov	r2, r6
 13664 0064 3846     		mov	r0, r7
 13665 0066 4146     		mov	r1, r8
 13666 0068 FFF7FEFF 		bl	memcpy
 13667              	.LVL873:
 13668              	.LBE8365:
 13669              	.LBE8367:
 13670              	.LBE8369:
 13671              	.LBE8372:
 13672              	.LBE8375:
 13673              	.LBE8402:
 13674              		.loc 22 232 15 view .LVU3135
 13675 006c 019E     		ldr	r6, [sp, #4]
 13676              	.LVL874:
 13677              	.LBB8403:
 13678              	.LBB8392:
 13679              	.LBB8390:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 495


 13680              	.LBB8387:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13681              		.loc 18 187 28 view .LVU3136
 13682 006e 2768     		ldr	r7, [r4]
 13683              	.LVL875:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13684              		.loc 18 187 28 view .LVU3137
 13685              	.LBE8387:
 13686              	.LBE8390:
 13687              	.LBE8392:
 13688              	.LBE8403:
 13689              	.LBB8404:
 13690              	.LBB8376:
 13691              	.LBB8373:
 13692              	.LBB8370:
 13693              	.LBB8368:
 13694              	.LBB8366:
 13695              		.loc 21 395 66 view .LVU3138
 13696 0070 DBE7     		b	.L675
 13697              	.LBE8366:
 13698              	.LBE8368:
 13699              	.LBE8370:
 13700              	.LBE8373:
 13701              	.LBE8376:
 13702              	.LBE8404:
 13703              	.LBE8407:
 13704              	.LBE8410:
 13705              	.LBE8413:
 13706              	.LBE8416:
 13707              	.LBE8419:
 13708              	.LBE8423:
 13709              	.LBE8443:
 13710              	.LBE8448:
 13711              		.cfi_endproc
 13712              	.LFE5496:
 13714              		.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA7_KcS
 13715              		.thumb_set _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA
 13716 0072 00BF     		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,"
 13717              		.align	1
 13718              		.p2align 2,,3
 13719              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
 13720              		.syntax unified
 13721              		.thumb
 13722              		.thumb_func
 13723              		.fpu fpv5-d16
 13725              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:
 13726              	.LVL876:
 13727              	.LFB5522:
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 13728              		.loc 26 553 7 is_stmt 1 view -0
 13729              		.cfi_startproc
 13730              		@ args = 0, pretend = 0, frame = 8
 13731              		@ frame_needed = 0, uses_anonymous_args = 0
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 13732              		.loc 26 553 7 is_stmt 0 view .LVU3140
 13733 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 13734              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 496


 13735              		.cfi_offset 4, -32
 13736              		.cfi_offset 5, -28
 13737              		.cfi_offset 6, -24
 13738              		.cfi_offset 7, -20
 13739              		.cfi_offset 8, -16
 13740              		.cfi_offset 9, -12
 13741              		.cfi_offset 10, -8
 13742              		.cfi_offset 14, -4
 13743              	.LBB8549:
 13744              	.LBB8550:
 13745              	.LBB8551:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 13746              		.loc 26 919 50 view .LVU3141
 13747 0004 D1E90024 		ldrd	r2, r4, [r1]
 13748              	.LBE8551:
 13749              	.LBE8550:
 13750              	.LBB8552:
 13751              	.LBB8553:
 13752              	.LBB8554:
 13753              	.LBB8555:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 13754              		.loc 26 98 47 view .LVU3142
 13755 0008 0023     		movs	r3, #0
 13756              	.LBE8555:
 13757              	.LBE8554:
 13758              	.LBE8553:
 13759              	.LBE8552:
 13760              	.LBE8549:
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 13761              		.loc 26 553 7 view .LVU3143
 13762 000a 82B0     		sub	sp, sp, #8
 13763              		.cfi_def_cfa_offset 40
 13764              	.LBB8750:
 13765              	.LBB8589:
 13766              	.LBB8562:
 13767              	.LBB8563:
 13768              	.LBB8564:
 13769              	.LBB8565:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 13770              		.loc 26 346 18 view .LVU3144
 13771 000c A41A     		subs	r4, r4, r2
 13772              	.LBE8565:
 13773              	.LBE8564:
 13774              	.LBE8563:
 13775              	.LBE8562:
 13776              	.LBE8589:
 13777              	.LBE8750:
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 13778              		.loc 26 553 7 view .LVU3145
 13779 000e 0D46     		mov	r5, r1
 13780 0010 8046     		mov	r8, r0
 13781              	.LVL877:
 13782              	.LBB8751:
 13783              	.LBB8590:
 13784              	.LBI8550:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 13785              		.loc 26 918 7 is_stmt 1 view .LVU3146
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 497


 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 13786              		.loc 26 918 7 is_stmt 0 view .LVU3147
 13787              	.LBE8590:
 13788              	.LBB8591:
 13789              	.LBI8591:
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 13790              		.loc 26 280 7 is_stmt 1 view .LVU3148
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 13791              		.loc 26 280 7 is_stmt 0 view .LVU3149
 13792              	.LBE8591:
 13793              	.LBB8592:
 13794              	.LBI8592:
 13795              		.loc 35 97 29 is_stmt 1 view .LVU3150
 13796              	.LBB8593:
 13797              	.LBI8593:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 13798              		.loc 25 558 7 view .LVU3151
 13799              	.LBB8594:
 13800              	.LBI8594:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13801              		.loc 19 147 7 view .LVU3152
 13802              	.LBB8595:
 13803              	.LBI8595:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13804              		.loc 20 82 7 view .LVU3153
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13805              		.loc 20 82 7 is_stmt 0 view .LVU3154
 13806              	.LBE8595:
 13807              	.LBE8594:
 13808              	.LBE8593:
 13809              	.LBE8592:
 13810              	.LBB8596:
 13811              	.LBI8552:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 13812              		.loc 26 303 7 is_stmt 1 view .LVU3155
 13813              	.LBB8583:
 13814              	.LBI8553:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 13815              		.loc 26 136 2 view .LVU3156
 13816              	.LBB8558:
 13817              	.LBI8558:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13818              		.loc 19 147 7 view .LVU3157
 13819              	.LBB8559:
 13820              	.LBI8559:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13821              		.loc 20 82 7 view .LVU3158
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13822              		.loc 20 82 7 is_stmt 0 view .LVU3159
 13823              	.LBE8559:
 13824              	.LBE8558:
 13825              	.LBB8560:
 13826              	.LBI8554:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 13827              		.loc 26 97 2 is_stmt 1 view .LVU3160
 13828              	.LBB8556:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 498


 13829              		.loc 26 98 47 is_stmt 0 view .LVU3161
 13830 0012 8360     		str	r3, [r0, #8]
 13831              	.LVL878:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 13832              		.loc 26 98 47 view .LVU3162
 13833              	.LBE8556:
 13834              	.LBE8560:
 13835              	.LBE8583:
 13836              	.LBB8584:
 13837              	.LBI8562:
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 13838              		.loc 26 359 7 is_stmt 1 view .LVU3163
 13839              	.LBB8579:
 13840              	.LBB8575:
 13841              	.LBI8564:
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 13842              		.loc 26 343 7 view .LVU3164
 13843              	.LBE8575:
 13844              	.LBE8579:
 13845              	.LBE8584:
 13846              	.LBB8585:
 13847              	.LBB8561:
 13848              	.LBB8557:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 13849              		.loc 26 98 47 is_stmt 0 view .LVU3165
 13850 0014 C0E90033 		strd	r3, r3, [r0]
 13851              	.LBE8557:
 13852              	.LBE8561:
 13853              	.LBE8585:
 13854              	.LBB8586:
 13855              	.LBB8580:
 13856              	.LBB8576:
 13857              	.LBB8572:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 13858              		.loc 26 346 18 view .LVU3166
 13859 0018 49D0     		beq	.L691
 13860              	.LVL879:
 13861              	.LBB8566:
 13862              	.LBI8566:
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 13863              		.loc 25 459 7 is_stmt 1 view .LVU3167
 13864              	.LBB8567:
 13865              	.LBI8567:
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 13866              		.loc 20 103 7 view .LVU3168
 13867              	.LBB8568:
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 13868              		.loc 20 105 2 is_stmt 0 view .LVU3169
 13869 001a 284B     		ldr	r3, .L707
 13870 001c 9C42     		cmp	r4, r3
 13871 001e 4BD8     		bhi	.L703
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 13872              		.loc 20 115 41 view .LVU3170
 13873 0020 2046     		mov	r0, r4
 13874              	.LVL880:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 13875              		.loc 20 115 41 view .LVU3171
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 499


 13876 0022 FFF7FEFF 		bl	_Znwj
 13877              	.LVL881:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 13878              		.loc 20 115 41 view .LVU3172
 13879 0026 8246     		mov	r10, r0
 13880              	.LVL882:
 13881              	.L682:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 13882              		.loc 20 115 41 view .LVU3173
 13883              	.LBE8568:
 13884              	.LBE8567:
 13885              	.LBE8566:
 13886              	.LBE8572:
 13887              	.LBE8576:
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 13888              		.loc 26 363 59 view .LVU3174
 13889 0028 5444     		add	r4, r4, r10
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 13890              		.loc 26 362 26 view .LVU3175
 13891 002a C8E900AA 		strd	r10, r10, [r8]
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 13892              		.loc 26 363 34 view .LVU3176
 13893 002e C8F80840 		str	r4, [r8, #8]
 13894              	.LVL883:
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 13895              		.loc 26 363 34 view .LVU3177
 13896              	.LBE8580:
 13897              	.LBE8586:
 13898              	.LBE8596:
 13899              	.LBB8597:
 13900              	.LBI8597:
 13901              		.loc 19 162 7 is_stmt 1 view .LVU3178
 13902              	.LBB8598:
 13903              	.LBI8598:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13904              		.loc 20 89 7 view .LVU3179
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13905              		.loc 20 89 7 is_stmt 0 view .LVU3180
 13906              	.LBE8598:
 13907              	.LBE8597:
 13908              	.LBB8599:
 13909              	.LBI8599:
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 13910              		.loc 26 820 7 is_stmt 1 view .LVU3181
 13911              	.LBB8600:
 13912              	.LBI8600:
 13913              		.file 39 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Iterators -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 500


  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1996-1998
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /** @file bits/stl_iterator.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This file implements reverse_iterator, back_insert_iterator,
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  front_insert_iterator, insert_iterator, __normal_iterator, and their
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  supporting functions and overloaded operators.
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #ifndef _STL_ITERATOR_H
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #define _STL_ITERATOR_H 1
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/cpp_type_traits.h>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <ext/type_traits.h>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/move.h>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/ptr_traits.h>
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 501


  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <type_traits>
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201811L
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_constexpr_iterator 201811L
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #elif __cplusplus == 201703L
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201803L
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <compare>
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <new>
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <bits/iterator_concepts.h>
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @addtogroup iterators
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @{
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    */
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   namespace __detail
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   {
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // Weaken iterator_category _Cat to _Limit if it is derived from that,
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // otherwise use _Otherwise.
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<typename _Cat, typename _Limit, typename _Otherwise = _Cat>
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using __clamp_iter_cat
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<derived_from<_Cat, _Limit>, _Limit, _Otherwise>;
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   }
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.1 Reverse iterators
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Bidirectional and random access iterators have corresponding reverse
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator adaptors that iterate through the data structure in the
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  opposite direction.  They have the same signatures as the corresponding
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.  The fundamental relation between a reverse %iterator and its
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  corresponding %iterator @c i is established by the identity:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @code
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *      &*(reverse_iterator(i)) == &*(i - 1)
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @endcode
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  <em>This mapping is dictated by the fact that while there is always a
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  pointer past the end of an array, there might not be a valid pointer
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  before the beginning of an array.</em> [24.4.1]/1,2
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators can be tricky and surprising at first.  Their
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  semantics make sense, however, and the trickiness is a side effect of
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  the requirement that the iterators must be safe.
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 502


 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class reverse_iterator
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<typename iterator_traits<_Iterator>::iterator_category,
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::value_type,
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::difference_type,
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::pointer,
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****                       typename iterator_traits<_Iterator>::reference>
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator current;
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer		pointer;
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference		reference;
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<random_access_iterator<_Iterator>,
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			random_access_iterator_tag,
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			bidirectional_iterator_tag>;
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_category
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= __detail::__clamp_iter_cat<typename __traits_type::iterator_category,
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 				     random_access_iterator_tag>;
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The default constructor value-initializes member @p current.
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  If it is a pointer, that means it is zero-initialized.
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 235 No specification of default ctor for reverse_iterator
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 1012. reverse_iterator default ctor should value initialize
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator() : current() { }
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This %iterator will move in the opposite direction that @p x does.
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX17_CONSTEXPR
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(iterator_type __x) : current(__x) { }
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The copy constructor is normal.
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(const reverse_iterator& __x)
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : current(__x.current) { }
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator& operator=(const reverse_iterator&) = default;
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  A %reverse_iterator across other types can be copied if the
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 503


 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  underlying %iterator can be converted to the type of @c current.
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_GLIBCXX17_CONSTEXPR
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         reverse_iterator(const reverse_iterator<_Iter>& __x)
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	: current(__x.base()) { }
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c current, the %iterator used for underlying work.
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR iterator_type
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return current; }
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reference to the value at @c --current
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @warning This implementation requires that for an iterator of the
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           underlying iterator type, @c x, a reference obtained by
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           @c *x remains valid after @c x has been modified or
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *--__tmp;
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A pointer to the value at @c --current
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR pointer
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_concepts >= 201907L
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires is_pointer_v<_Iterator>
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	|| requires(const _Iterator __i) { __i.operator->(); }
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// 1052. operator-> should also support smart pointers
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--__tmp;
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return _S_to_pointer(__tmp);
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 504


 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The original value of @c *this
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--()
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator with the previous value of @c *this
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--(int)
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(difference_type __n) const
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current - __n); }
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator backwards @a __n steps.
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 505


 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+=(difference_type __n)
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current -= __n;
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(difference_type __n) const
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current + __n); }
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator forwards @a __n steps.
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-=(difference_type __n)
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current += __n;
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The value at @c current - @a __n - 1
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator[](difference_type __n) const
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *(*this + __n); }
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend constexpr iter_rvalue_reference_t<_Iterator>
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       iter_move(const reverse_iterator& __i)
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(is_nothrow_copy_constructible_v<_Iterator>
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       && noexcept(ranges::iter_move(--std::declval<_Iterator&>())))
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	auto __tmp = __i.base();
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return ranges::iter_move(--__tmp);
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<indirectly_swappable<_Iterator> _Iter2>
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	friend constexpr void
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter_swap(const reverse_iterator& __x,
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		  const reverse_iterator<_Iter2>& __y)
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	noexcept(is_nothrow_copy_constructible_v<_Iterator>
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && is_nothrow_copy_constructible_v<_Iter2>
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && noexcept(ranges::iter_swap(--std::declval<_Iterator&>(),
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					       --std::declval<_Iter2&>())))
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 506


 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __xtmp = __x.base();
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __ytmp = __y.base();
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  ranges::iter_swap(--__xtmp, --__ytmp);
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	}
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     private:
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR _Tp*
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp* __p)
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __p; }
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR pointer
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp __t)
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __t.operator->(); }
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@{
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A %reverse_iterator.
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __y  A %reverse_iterator.
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  A simple bool.
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators forward comparisons to their underlying base()
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus <= 201703L || ! defined __cpp_lib_concepts
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_Iterator>& __x,
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_Iterator>& __x,
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_Iterator>& __x,
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_Iterator>& __x,
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_Iterator>& __x,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 507


 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_Iterator>& __x,
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 280. Comparison of reverse_iterator to const reverse_iterator.
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else // C++20
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() == __y.base() } -> convertible_to<bool>; }
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 508


 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() != __y.base() } -> convertible_to<bool>; }
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() != __y.base(); }
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() > __y.base() } -> convertible_to<bool>; }
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() > __y.base(); }
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() < __y.base() } -> convertible_to<bool>; }
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() < __y.base(); }
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() >= __y.base() } -> convertible_to<bool>; }
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() >= __y.base(); }
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() <= __y.base() } -> convertible_to<bool>; }
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() <= __y.base(); }
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL,
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	   three_way_comparable_with<_IteratorL> _IteratorR>
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr compare_three_way_result_t<_IteratorL, _IteratorR>
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=>(const reverse_iterator<_IteratorL>& __x,
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const reverse_iterator<_IteratorR>& __y)
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() <=> __x.base(); }
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++20
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@}
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_Iterator>::difference_type
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_IteratorL>::difference_type
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 685. reverse_iterator/move_iterator difference has invalid signatures
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 509


 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR auto
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__y.base() - __x.base())
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __x)
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__x.base() - __n); }
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Same as C++14 make_reverse_iterator but used in C++11 mode too.
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __make_reverse_iterator(_Iterator __i)
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # if __cplusplus >= 201402L
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  define __cpp_lib_make_reverse_iterator 201402
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 2285. make_reverse_iterator
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /// Generator function for reverse_iterator.
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     make_reverse_iterator(_Iterator __i)
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  if __cplusplus > 201703L && defined __cpp_lib_concepts
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator1, typename _Iterator2>
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires (!sized_sentinel_for<_Iterator1, _Iterator2>)
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline constexpr bool
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     disable_sized_sentinel_for<reverse_iterator<_Iterator1>,
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			       reverse_iterator<_Iterator2>> = true;
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  endif // C++20
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # endif // C++14
 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __niter_base(reverse_iterator<_Iterator> __it)
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__niter_base(__it.base())))
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__niter_base(__it.base())); }
 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     struct __is_move_iterator<reverse_iterator<_Iterator> >
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : __is_move_iterator<_Iterator>
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { };
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __miter_base(reverse_iterator<_Iterator> __it)
 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__miter_base(__it.base())))
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 510


 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__miter_base(__it.base())); }
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++11
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.2.2.1 back_insert_iterator
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator appends it to the container using
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_back.
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the back_inserter function to create these iterators can
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class back_insert_iterator
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr back_insert_iterator() noexcept : container(nullptr) { }
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator(_Container& __x)
 614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the end, if you like).  Assigning a value to the %iterator will
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always append the value to the end of the container.
 626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 511


 638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(std::move(__value));
 648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator
 667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of back_insert_iterator working on @p __x.
 674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating back_insert_iterator instances.
 676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline back_insert_iterator<_Container>
 685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     back_inserter(_Container& __x)
 686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return back_insert_iterator<_Container>(__x); }
 687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator prepends it to the container using
 693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_front.
 694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 512


 695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the front_inserter function to create these iterators can
 696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class front_insert_iterator
 700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr front_insert_iterator() noexcept : container(nullptr) { }
 712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator(_Container& __x)
 717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the front, if you like).  Assigning a value to the %iterator will
 728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always prepend the value to the front of the container.
 729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(std::move(__value));
 751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 513


 752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator
 770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of front_insert_iterator working on @p x.
 777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating front_insert_iterator instances.
 779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline front_insert_iterator<_Container>
 788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     front_inserter(_Container& __x)
 789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return front_insert_iterator<_Container>(__x); }
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator inserts it in the container at the
 796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position, rather than overwriting the value at that
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  position.
 798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  (Sequences will actually insert a @e copy of the value before the
 800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position.)
 801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the inserter function to create these iterators can
 803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class insert_iterator
 807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 514


 809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using _Iter = std::__detail::__range_iter_t<_Container>;
 811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container = nullptr;
 814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter = _Iter();
 815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename _Container::iterator		_Iter;
 817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter;
 821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator() = default;
 831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The only way to create this %iterator is with a container and an
 835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  initial position (a normal %iterator into the container).
 836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator(_Container& __x, _Iter __i)
 839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)), iter(__i) {}
 840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator maintains its own position in the
 848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container.  Assigning a value to the %iterator will insert the
 849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  value into the container at the place before the %iterator.
 850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The position is maintained such that subsequent assignments will
 852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  insert values immediately after one another.  For example,
 853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @code
 854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A and Z
 855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     insert_iterator i (v, ++v.begin());
 857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 1;
 858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 2;
 859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 3;
 860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A, 1, 2, 3, and Z
 862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @endcode
 863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 515


 866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, std::move(__value));
 887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __x  A container of arbitrary type.
 913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __i  An iterator into the container.
 914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of insert_iterator working on @p __x.
 915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating insert_iterator instances.
 917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 516


 923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr insert_iterator<_Container>
 926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, std::__detail::__range_iter_t<_Container> __i)
 927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return insert_iterator<_Container>(__x, __i); }
 928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container, typename _Iterator>
 930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline insert_iterator<_Container>
 931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, _Iterator __i)
 932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       return insert_iterator<_Container>(__x,
 934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					 typename _Container::iterator(__i));
 935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     }
 936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // @} group iterators
 939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** } // namespace
 942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
 945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // This iterator adapter is @a normal in the sense that it does not
 948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // change the semantics of any of the operators of its iterator
 949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // parameter.  Its primary purpose is to convert an iterator that is
 950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // not a class, e.g. a pointer, into an iterator that is a class.
 951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // The _Container parameter exists solely so that different containers
 952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // using this template can instantiate different types, even if the
 953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _Iterator parameter is the same.
 954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
 955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class __normal_iterator
 956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator _M_current;
 959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef std::iterator_traits<_Iterator>		__traits_type;
 961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type 	difference_type;
 967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference 	reference;
 968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer   	pointer;
 969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept = std::__detail::__iter_concept<_Iterator>;
 972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
 975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(_Iterator()) { }
 976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 13914              		.loc 39 978 7 view .LVU3182
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 517


 13915              	.LBE8600:
 13916              	.LBE8599:
 13917              	.LBB8601:
 13918              	.LBB8602:
 13919              	.LBB8603:
 979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 13920              		.loc 39 979 23 is_stmt 0 view .LVU3183
 13921 0032 D5E90069 		ldrd	r6, r9, [r5]
 13922              	.LVL884:
 13923              		.loc 39 979 23 view .LVU3184
 13924              	.LBE8603:
 13925              	.LBE8602:
 13926              	.LBE8601:
 13927              	.LBB8604:
 13928              	.LBI8604:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 13929              		.loc 26 276 7 is_stmt 1 view .LVU3185
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 13930              		.loc 26 276 7 is_stmt 0 view .LVU3186
 13931              	.LBE8604:
 13932              	.LBB8605:
 13933              	.LBI8605:
 13934              		.loc 37 323 5 is_stmt 1 view .LVU3187
 13935              	.LBB8606:
 13936              	.LBI8606:
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 13937              		.loc 37 125 5 view .LVU3188
 13938              	.LBB8607:
 13939              	.LBB8608:
 13940              	.LBI8608:
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 13941              		.loc 37 84 9 view .LVU3189
 13942              	.LBB8609:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 13943              		.loc 37 90 23 view .LVU3190
 13944 0036 B145     		cmp	r9, r6
 13945 0038 33D0     		beq	.L684
 13946 003a 0AF11804 		add	r4, r10, #24
 13947 003e 0AE0     		b	.L690
 13948              	.LVL885:
 13949              	.L706:
 13950              	.LBB8610:
 13951              	.LBB8611:
 13952              	.LBB8612:
 13953              	.LBB8613:
 13954              	.LBB8614:
 13955              	.LBB8615:
 13956              	.LBB8616:
 13957              	.LBB8617:
 13958              	.LBB8618:
 13959              	.LBB8619:
 13960              	.LBB8620:
 13961              	.LBB8621:
 13962              	.LBB8622:
 13963              	.LBI8622:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 13964              		.loc 21 321 7 view .LVU3191
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 518


 13965              	.LBB8623:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13966              		.loc 21 322 9 view .LVU3192
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13967              		.loc 21 322 16 is_stmt 0 view .LVU3193
 13968 0040 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 13969              	.LVL886:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13970              		.loc 21 322 14 view .LVU3194
 13971 0042 04F8103C 		strb	r3, [r4, #-16]
 13972              	.LVL887:
 13973              	.L689:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13974              		.loc 21 322 14 view .LVU3195
 13975              	.LBE8623:
 13976              	.LBE8622:
 13977              	.LBE8621:
 13978              	.LBE8620:
 13979              	.LBE8619:
 13980              	.LBB8644:
 13981              	.LBI8644:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13982              		.loc 18 214 7 is_stmt 1 view .LVU3196
 13983              	.LBB8645:
 13984              	.LBB8646:
 13985              	.LBI8646:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 13986              		.loc 18 182 7 view .LVU3197
 13987              	.LBE8646:
 13988              	.LBE8645:
 13989              	.LBE8644:
 13990              	.LBE8618:
 13991              	.LBE8617:
 13992              	.LBE8616:
 13993              	.LBE8615:
 13994              	.LBE8614:
 13995              	.LBE8613:
 13996              	.LBE8612:
 13997              	.LBE8611:
 13998              	.LBE8610:
 13999              	.LBB8730:
 14000              	.LBB8731:
 980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Allow iterator to const_iterator conversion
 982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         _GLIBCXX20_CONSTEXPR
 984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         __normal_iterator(const __normal_iterator<_Iter,
 985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			  typename __enable_if<
 986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
 987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
 988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         : _M_current(__i.base()) { }
 989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Forward iterator requirements
 991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reference
 993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const _GLIBCXX_NOEXCEPT
 994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *_M_current; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 519


 995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       pointer
 998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const _GLIBCXX_NOEXCEPT
 999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++() _GLIBCXX_NOEXCEPT
1004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++_M_current;
 14001              		.loc 39 1005 2 is_stmt 0 view .LVU3198
 14002 0046 1836     		adds	r6, r6, #24
 14003              	.LVL888:
 14004              		.loc 39 1005 2 view .LVU3199
 14005              	.LBE8731:
 14006              	.LBE8730:
 14007              	.LBB8732:
 14008              	.LBB8725:
 14009              	.LBB8720:
 14010              	.LBB8697:
 14011              	.LBB8693:
 14012              	.LBB8689:
 14013              	.LBB8685:
 14014              	.LBB8681:
 14015              	.LBB8677:
 14016              	.LBB8661:
 14017              	.LBB8658:
 14018              	.LBB8648:
 14019              	.LBB8649:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14020              		.loc 21 322 14 view .LVU3200
 14021 0048 0023     		movs	r3, #0
 14022              	.LBE8649:
 14023              	.LBE8648:
 14024              	.LBB8652:
 14025              	.LBB8647:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14026              		.loc 18 183 26 view .LVU3201
 14027 004a 44F8145C 		str	r5, [r4, #-20]
 14028              	.LVL889:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14029              		.loc 18 183 26 view .LVU3202
 14030              	.LBE8647:
 14031              	.LBE8652:
 14032              	.LBB8653:
 14033              	.LBI8653:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14034              		.loc 18 186 7 is_stmt 1 view .LVU3203
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14035              		.loc 18 186 7 is_stmt 0 view .LVU3204
 14036              	.LBE8653:
 14037              	.LBB8655:
 14038              	.LBI8648:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 14039              		.loc 21 321 7 is_stmt 1 view .LVU3205
 14040              	.LBB8650:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 520


 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14041              		.loc 21 322 9 view .LVU3206
 14042              	.LBE8650:
 14043              	.LBE8655:
 14044              	.LBE8658:
 14045              	.LBE8661:
 14046              	.LBE8677:
 14047              	.LBE8681:
 14048              	.LBE8685:
 14049              	.LBE8689:
 14050              	.LBE8693:
 14051              	.LBE8697:
 14052              	.LBE8720:
 14053              	.LBE8725:
 14054              	.LBE8732:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 14055              		.loc 37 90 23 is_stmt 0 view .LVU3207
 14056 004e 1834     		adds	r4, r4, #24
 14057              	.LVL890:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 14058              		.loc 37 90 23 view .LVU3208
 14059 0050 4E45     		cmp	r6, r9
 14060              	.LBB8733:
 14061              	.LBB8726:
 14062              	.LBB8721:
 14063              	.LBB8698:
 14064              	.LBB8694:
 14065              	.LBB8690:
 14066              	.LBB8686:
 14067              	.LBB8682:
 14068              	.LBB8678:
 14069              	.LBB8662:
 14070              	.LBB8659:
 14071              	.LBB8656:
 14072              	.LBB8651:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14073              		.loc 21 322 14 view .LVU3209
 14074 0052 4355     		strb	r3, [r0, r5]
 14075              	.LVL891:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14076              		.loc 21 322 14 view .LVU3210
 14077              	.LBE8651:
 14078              	.LBE8656:
 14079              	.LBE8659:
 14080              	.LBE8662:
 14081              	.LBE8678:
 14082              	.LBE8682:
 14083              	.LBE8686:
 14084              	.LBE8690:
 14085              	.LBE8694:
 14086              	.LBE8698:
 14087              	.LBE8721:
 14088              	.LBE8726:
 14089              	.LBE8733:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 14090              		.loc 37 90 8 is_stmt 1 view .LVU3211
 14091              	.LBB8734:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 521


 14092              	.LBI8730:
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 14093              		.loc 39 1003 7 view .LVU3212
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 14094              		.loc 39 1003 7 is_stmt 0 view .LVU3213
 14095              	.LBE8734:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 14096              		.loc 37 90 23 is_stmt 1 view .LVU3214
 14097 0054 25D0     		beq	.L684
 14098              	.L690:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 14099              		.loc 37 90 23 is_stmt 0 view .LVU3215
 14100 0056 A4F11000 		sub	r0, r4, #16
 14101              	.LBB8735:
 14102              	.LBB8727:
 14103              	.LBB8722:
 14104              	.LBB8699:
 14105              	.LBB8700:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14106              		.loc 18 908 16 view .LVU3216
 14107 005a 7568     		ldr	r5, [r6, #4]
 14108 005c A4F11803 		sub	r3, r4, #24
 14109              	.LVL892:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14110              		.loc 18 908 16 view .LVU3217
 14111              	.LBE8700:
 14112              	.LBE8699:
 14113              	.LBE8722:
 14114              	.LBE8727:
 14115              	.LBI8610:
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 14116              		.loc 27 108 5 is_stmt 1 view .LVU3218
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 14117              		.loc 27 108 5 is_stmt 0 view .LVU3219
 14118              	.LBE8735:
 14119              	.LBE8609:
 14120              	.LBE8608:
 14121              	.LBE8607:
 14122              	.LBE8606:
 14123              	.LBE8605:
 14124              	.LBE8751:
 14125              		.loc 23 175 3 is_stmt 1 view .LVU3220
 14126              	.LBB8752:
 14127              	.LBB8746:
 14128              	.LBB8744:
 14129              	.LBB8742:
 14130              	.LBB8740:
 14131              	.LBB8738:
 14132              	.LBB8736:
 14133              	.LBB8728:
 14134              	.LBI8611:
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 14135              		.loc 18 448 7 view .LVU3221
 14136              	.LBB8723:
 14137              	.LBB8701:
 14138              	.LBI8701:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 522


 14139              		.loc 18 190 7 view .LVU3222
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14140              		.loc 18 190 7 is_stmt 0 view .LVU3223
 14141              	.LBE8701:
 14142              	.LBB8702:
 14143              	.LBI8702:
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 14144              		.loc 18 290 7 is_stmt 1 view .LVU3224
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 14145              		.loc 18 290 7 is_stmt 0 view .LVU3225
 14146              	.LBE8702:
 14147              	.LBB8703:
 14148              	.LBI8703:
 14149              		.loc 35 97 29 is_stmt 1 view .LVU3226
 14150              	.LBB8704:
 14151              	.LBI8704:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 14152              		.loc 25 558 7 view .LVU3227
 14153              	.LBB8705:
 14154              	.LBI8705:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 14155              		.loc 19 147 7 view .LVU3228
 14156              	.LBB8706:
 14157              	.LBI8706:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14158              		.loc 20 82 7 view .LVU3229
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14159              		.loc 20 82 7 is_stmt 0 view .LVU3230
 14160              	.LBE8706:
 14161              	.LBE8705:
 14162              	.LBE8704:
 14163              	.LBE8703:
 14164              	.LBB8707:
 14165              	.LBI8707:
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 14166              		.loc 18 159 2 is_stmt 1 view .LVU3231
 14167              	.LBB8708:
 14168              	.LBB8709:
 14169              	.LBI8709:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14170              		.loc 34 101 5 view .LVU3232
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14171              		.loc 34 101 5 is_stmt 0 view .LVU3233
 14172              	.LBE8709:
 14173              	.LBB8710:
 14174              	.LBI8710:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 14175              		.loc 19 147 7 is_stmt 1 view .LVU3234
 14176              	.LBB8711:
 14177              	.LBI8711:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14178              		.loc 20 82 7 view .LVU3235
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14179              		.loc 20 82 7 is_stmt 0 view .LVU3236
 14180 0060 A246     		mov	r10, r4
 14181              	.LBE8711:
 14182              	.LBE8710:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 523


 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 14183              		.loc 18 160 46 view .LVU3237
 14184 0062 44F8180C 		str	r0, [r4, #-24]
 14185              	.LVL893:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 14186              		.loc 18 160 46 view .LVU3238
 14187              	.LBE8708:
 14188              	.LBE8707:
 14189              	.LBB8712:
 14190              	.LBI8712:
 14191              		.loc 19 162 7 is_stmt 1 view .LVU3239
 14192              	.LBB8713:
 14193              	.LBI8713:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14194              		.loc 20 89 7 view .LVU3240
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14195              		.loc 20 89 7 is_stmt 0 view .LVU3241
 14196              	.LBE8713:
 14197              	.LBE8712:
 14198              	.LBB8714:
 14199              	.LBI8714:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14200              		.loc 18 186 7 is_stmt 1 view .LVU3242
 14201              	.LBB8715:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14202              		.loc 18 187 28 is_stmt 0 view .LVU3243
 14203 0066 3768     		ldr	r7, [r6]
 14204              	.LVL894:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14205              		.loc 18 187 28 view .LVU3244
 14206              	.LBE8715:
 14207              	.LBE8714:
 14208              	.LBB8716:
 14209              	.LBI8716:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14210              		.loc 18 186 7 is_stmt 1 view .LVU3245
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14211              		.loc 18 186 7 is_stmt 0 view .LVU3246
 14212              	.LBE8716:
 14213              	.LBB8717:
 14214              	.LBI8699:
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 14215              		.loc 18 907 7 is_stmt 1 view .LVU3247
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 14216              		.loc 18 907 7 is_stmt 0 view .LVU3248
 14217              	.LBE8717:
 14218              	.LBB8718:
 14219              	.LBI8613:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 14220              		.loc 18 263 9 is_stmt 1 view .LVU3249
 14221              	.LBB8695:
 14222              	.LBB8691:
 14223              	.LBI8615:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 14224              		.loc 18 243 9 view .LVU3250
 14225              	.LBB8687:
 14226              	.LBB8683:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 524


 14227              	.LBI8617:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 14228              		.loc 22 206 7 view .LVU3251
 14229              	.LBB8679:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 14230              		.loc 22 211 42 is_stmt 0 view .LVU3252
 14231 0068 EF42     		cmn	r7, r5
 14232 006a 00D0     		beq	.L685
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 14233              		.loc 22 211 42 view .LVU3253
 14234 006c 0FB3     		cbz	r7, .L704
 14235              	.L685:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 14236              		.loc 22 217 2 view .LVU3254
 14237 006e 0F2D     		cmp	r5, #15
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 14238              		.loc 22 215 12 view .LVU3255
 14239 0070 0195     		str	r5, [sp, #4]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 14240              		.loc 22 217 2 view .LVU3256
 14241 0072 04D8     		bhi	.L705
 14242              	.LVL895:
 14243              	.LBB8663:
 14244              	.LBI8663:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14245              		.loc 18 186 7 is_stmt 1 view .LVU3257
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14246              		.loc 18 186 7 is_stmt 0 view .LVU3258
 14247              	.LBE8663:
 14248              	.LBB8664:
 14249              	.LBI8619:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 14250              		.loc 18 392 7 is_stmt 1 view .LVU3259
 14251              	.LBB8640:
 14252              	.LBI8620:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14253              		.loc 18 346 7 view .LVU3260
 14254              	.LBB8636:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 14255              		.loc 18 348 2 is_stmt 0 view .LVU3261
 14256 0074 012D     		cmp	r5, #1
 14257 0076 E3D0     		beq	.L706
 14258              	.LVL896:
 14259              	.LBB8624:
 14260              	.LBI8624:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14261              		.loc 18 346 7 is_stmt 1 view .LVU3262
 14262              	.LBB8625:
 14263              	.LBI8625:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 14264              		.loc 21 387 7 view .LVU3263
 14265              	.LBB8626:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 14266              		.loc 21 389 2 view .LVU3264
 14267 0078 002D     		cmp	r5, #0
 14268 007a E4D0     		beq	.L689
 14269 007c 09E0     		b	.L687
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 525


 14270              	.LVL897:
 14271              	.L705:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 14272              		.loc 21 389 2 is_stmt 0 view .LVU3265
 14273              	.LBE8626:
 14274              	.LBE8625:
 14275              	.LBE8624:
 14276              	.LBE8636:
 14277              	.LBE8640:
 14278              	.LBE8664:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 14279              		.loc 22 219 13 view .LVU3266
 14280 007e 1846     		mov	r0, r3
 14281 0080 0022     		movs	r2, #0
 14282 0082 01A9     		add	r1, sp, #4
 14283 0084 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 14284              	.LVL898:
 14285              	.LBB8665:
 14286              	.LBB8666:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14287              		.loc 18 211 31 view .LVU3267
 14288 0088 019B     		ldr	r3, [sp, #4]
 14289              	.LVL899:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14290              		.loc 18 211 31 view .LVU3268
 14291              	.LBE8666:
 14292              	.LBE8665:
 14293              	.LBB8668:
 14294              	.LBI8668:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 14295              		.loc 18 178 7 is_stmt 1 view .LVU3269
 14296              	.LBB8669:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14297              		.loc 18 179 26 is_stmt 0 view .LVU3270
 14298 008a 44F8180C 		str	r0, [r4, #-24]
 14299              	.LVL900:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14300              		.loc 18 179 26 view .LVU3271
 14301              	.LBE8669:
 14302              	.LBE8668:
 14303              	.LBB8670:
 14304              	.LBI8665:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 14305              		.loc 18 210 7 is_stmt 1 view .LVU3272
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 14306              		.loc 18 210 7 is_stmt 0 view .LVU3273
 14307              	.LBE8670:
 14308              	.LBB8671:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14309              		.loc 18 186 7 is_stmt 1 view .LVU3274
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14310              		.loc 18 186 7 is_stmt 0 view .LVU3275
 14311              	.LBE8671:
 14312              	.LBB8672:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 14313              		.loc 18 392 7 is_stmt 1 view .LVU3276
 14314              	.LBB8641:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 526


 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14315              		.loc 18 346 7 view .LVU3277
 14316              	.LBB8637:
 14317              	.LBB8633:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14318              		.loc 18 346 7 view .LVU3278
 14319              	.LBB8630:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 14320              		.loc 21 387 7 view .LVU3279
 14321              	.LBB8627:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 14322              		.loc 21 389 2 view .LVU3280
 14323              	.LBE8627:
 14324              	.LBE8630:
 14325              	.LBE8633:
 14326              	.LBE8637:
 14327              	.LBE8641:
 14328              	.LBE8672:
 14329              	.LBB8673:
 14330              	.LBB8667:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14331              		.loc 18 211 31 is_stmt 0 view .LVU3281
 14332 008e 44F8103C 		str	r3, [r4, #-16]
 14333              	.L687:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14334              		.loc 18 211 31 view .LVU3282
 14335              	.LBE8667:
 14336              	.LBE8673:
 14337              	.LBB8674:
 14338              	.LBB8642:
 14339              	.LBB8638:
 14340              	.LBB8634:
 14341              	.LBB8631:
 14342              	.LBB8628:
 14343              		.loc 21 395 2 is_stmt 1 view .LVU3283
 14344              		.loc 21 395 49 is_stmt 0 view .LVU3284
 14345 0092 2A46     		mov	r2, r5
 14346 0094 3946     		mov	r1, r7
 14347 0096 FFF7FEFF 		bl	memcpy
 14348              	.LVL901:
 14349              		.loc 21 395 49 view .LVU3285
 14350              	.LBE8628:
 14351              	.LBE8631:
 14352              	.LBE8634:
 14353              	.LBE8638:
 14354              	.LBE8642:
 14355              	.LBE8674:
 14356              		.loc 22 232 15 view .LVU3286
 14357 009a 019D     		ldr	r5, [sp, #4]
 14358              	.LVL902:
 14359              	.LBB8675:
 14360              	.LBB8660:
 14361              	.LBB8657:
 14362              	.LBB8654:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14363              		.loc 18 187 28 view .LVU3287
 14364 009c 54F8180C 		ldr	r0, [r4, #-24]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 527


 14365              	.LBE8654:
 14366              	.LBE8657:
 14367              	.LBE8660:
 14368              	.LBE8675:
 14369              	.LBB8676:
 14370              	.LBB8643:
 14371              	.LBB8639:
 14372              	.LBB8635:
 14373              	.LBB8632:
 14374              	.LBB8629:
 14375              		.loc 21 395 66 view .LVU3288
 14376 00a0 D1E7     		b	.L689
 14377              	.LVL903:
 14378              	.L684:
 14379              		.loc 21 395 66 view .LVU3289
 14380              	.LBE8629:
 14381              	.LBE8632:
 14382              	.LBE8635:
 14383              	.LBE8639:
 14384              	.LBE8643:
 14385              	.LBE8676:
 14386              	.LBE8679:
 14387              	.LBE8683:
 14388              	.LBE8687:
 14389              	.LBE8691:
 14390              	.LBE8695:
 14391              	.LBE8718:
 14392              	.LBE8723:
 14393              	.LBE8728:
 14394              	.LBE8736:
 14395              	.LBE8738:
 14396              	.LBE8740:
 14397              	.LBE8742:
 14398              	.LBE8744:
 14399              	.LBE8746:
 14400              	.LBE8752:
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 14401              		.loc 26 561 7 view .LVU3290
 14402 00a2 4046     		mov	r0, r8
 14403              	.LBB8753:
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 14404              		.loc 26 557 26 view .LVU3291
 14405 00a4 C8F804A0 		str	r10, [r8, #4]
 14406              	.LBE8753:
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 14407              		.loc 26 561 7 view .LVU3292
 14408 00a8 02B0     		add	sp, sp, #8
 14409              		.cfi_remember_state
 14410              		.cfi_def_cfa_offset 32
 14411              		@ sp needed
 14412 00aa BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 14413              	.LVL904:
 14414              	.L691:
 14415              		.cfi_restore_state
 14416              	.LBB8754:
 14417              	.LBB8747:
 14418              	.LBB8587:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 528


 14419              	.LBB8581:
 14420              	.LBB8577:
 14421              	.LBB8573:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 14422              		.loc 26 346 18 view .LVU3293
 14423 00ae A246     		mov	r10, r4
 14424 00b0 BAE7     		b	.L682
 14425              	.LVL905:
 14426              	.L704:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 14427              		.loc 26 346 18 view .LVU3294
 14428              	.LBE8573:
 14429              	.LBE8577:
 14430              	.LBE8581:
 14431              	.LBE8587:
 14432              	.LBE8747:
 14433              	.LBB8748:
 14434              	.LBB8745:
 14435              	.LBB8743:
 14436              	.LBB8741:
 14437              	.LBB8739:
 14438              	.LBB8737:
 14439              	.LBB8729:
 14440              	.LBB8724:
 14441              	.LBB8719:
 14442              	.LBB8696:
 14443              	.LBB8692:
 14444              	.LBB8688:
 14445              	.LBB8684:
 14446              	.LBB8680:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 14447              		.loc 22 212 28 view .LVU3295
 14448 00b2 0348     		ldr	r0, .L707+4
 14449 00b4 FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 14450              	.LVL906:
 14451              	.L703:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 14452              		.loc 22 212 28 view .LVU3296
 14453              	.LBE8680:
 14454              	.LBE8684:
 14455              	.LBE8688:
 14456              	.LBE8692:
 14457              	.LBE8696:
 14458              	.LBE8719:
 14459              	.LBE8724:
 14460              	.LBE8729:
 14461              	.LBE8737:
 14462              	.LBE8739:
 14463              	.LBE8741:
 14464              	.LBE8743:
 14465              	.LBE8745:
 14466              	.LBE8748:
 14467              	.LBB8749:
 14468              	.LBB8588:
 14469              	.LBB8582:
 14470              	.LBB8578:
 14471              	.LBB8574:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 529


 14472              	.LBB8571:
 14473              	.LBB8570:
 14474              	.LBB8569:
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14475              		.loc 20 106 26 view .LVU3297
 14476 00b8 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 14477              	.LVL907:
 14478              	.L708:
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14479              		.loc 20 106 26 view .LVU3298
 14480              		.align	2
 14481              	.L707:
 14482 00bc F8FFFF7F 		.word	2147483640
 14483 00c0 00000000 		.word	.LC9
 14484              	.LBE8569:
 14485              	.LBE8570:
 14486              	.LBE8571:
 14487              	.LBE8574:
 14488              	.LBE8578:
 14489              	.LBE8582:
 14490              	.LBE8588:
 14491              	.LBE8749:
 14492              	.LBE8754:
 14493              		.cfi_endproc
 14494              	.LFE5522:
 14496              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 14497              		.thumb_set _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_,_ZNSt
 14498              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 14499              		.align	2
 14500              	.LC11:
 14501 0000 50617474 		.ascii	"Pattern  \000"
 14501      65726E20 
 14501      2000
 14502 000a 0000     		.align	2
 14503              	.LC12:
 14504 000c 4E2F4120 		.ascii	"N/A      \000"
 14504      20202020 
 14504      2000
 14505 0016 0000     		.align	2
 14506              	.LC13:
 14507 0018 566F6963 		.ascii	"Voicing  \000"
 14507      696E6720 
 14507      2000
 14508 0022 0000     		.align	2
 14509              	.LC14:
 14510 0024 546F6E69 		.ascii	"Tonic    \000"
 14510      63202020 
 14510      2000
 14511 002e 0000     		.align	2
 14512              	.LC15:
 14513 0030 5363616C 		.ascii	"Scale    \000"
 14513      65202020 
 14513      2000
 14514 003a 0000     		.align	2
 14515              	.LC16:
 14516 003c 4F637461 		.ascii	"Octave   \000"
 14516      76652020 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 530


 14516      2000
 14517 0046 0000     		.align	2
 14518              	.LC17:
 14519 0048 436C6F63 		.ascii	"Clock In \000"
 14519      6B20496E 
 14519      2000
 14520 0052 0000     		.align	2
 14521              	.LC18:
 14522 0054 49276D20 		.ascii	"I'm a debug string\000"
 14522      61206465 
 14522      62756720 
 14522      73747269 
 14522      6E6700
 14523              		.section	.text.startup.main,"ax",%progbits
 14524              		.align	1
 14525              		.p2align 2,,3
 14526              		.global	main
 14527              		.syntax unified
 14528              		.thumb
 14529              		.thumb_func
 14530              		.fpu fpv5-d16
 14532              	main:
 14533              	.LFB5114:
 112:Jellybeans.cpp **** int main(void) {
 14534              		.loc 17 112 16 is_stmt 1 view -0
 14535              		.cfi_startproc
 14536              		@ Volatile: function does not return.
 14537              		@ args = 0, pretend = 0, frame = 136
 14538              		@ frame_needed = 0, uses_anonymous_args = 0
 114:Jellybeans.cpp ****     patch.Init();
 14539              		.loc 17 114 5 view .LVU3300
 112:Jellybeans.cpp **** int main(void) {
 14540              		.loc 17 112 16 is_stmt 0 view .LVU3301
 14541 0000 2DE98048 		push	{r7, fp, lr}
 14542              		.cfi_def_cfa_offset 12
 14543              		.cfi_offset 7, -12
 14544              		.cfi_offset 11, -8
 14545              		.cfi_offset 14, -4
 114:Jellybeans.cpp ****     patch.Init();
 14546              		.loc 17 114 15 view .LVU3302
 14547 0004 0021     		movs	r1, #0
 112:Jellybeans.cpp **** int main(void) {
 14548              		.loc 17 112 16 view .LVU3303
 14549 0006 A5B0     		sub	sp, sp, #148
 14550              		.cfi_def_cfa_offset 160
 114:Jellybeans.cpp ****     patch.Init();
 14551              		.loc 17 114 15 view .LVU3304
 14552 0008 BA48     		ldr	r0, .L712
 14553 000a FFF7FEFF 		bl	_ZN5daisy10DaisyPatch4InitEb
 14554              	.LVL908:
 117:Jellybeans.cpp ****     arp = new Arp();
 14555              		.loc 17 117 5 is_stmt 1 view .LVU3305
 117:Jellybeans.cpp ****     arp = new Arp();
 14556              		.loc 17 117 19 is_stmt 0 view .LVU3306
 14557 000e 5420     		movs	r0, #84
 14558 0010 FFF7FEFF 		bl	_Znwj
 14559              	.LVL909:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 531


 121:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 14560              		.loc 17 121 70 view .LVU3307
 14561 0014 DFF850B3 		ldr	fp, .L712+116
 117:Jellybeans.cpp ****     arp = new Arp();
 14562              		.loc 17 117 19 view .LVU3308
 14563 0018 0446     		mov	r4, r0
 117:Jellybeans.cpp ****     arp = new Arp();
 14564              		.loc 17 117 9 view .LVU3309
 14565 001a FFF7FEFF 		bl	_ZN10jellybeans3ArpC1Ev
 14566              	.LVL910:
 14567 001e B64B     		ldr	r3, .L712+4
 121:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 14568              		.loc 17 121 70 view .LVU3310
 14569 0020 0AA8     		add	r0, sp, #40
 14570 0022 B649     		ldr	r1, .L712+8
 117:Jellybeans.cpp ****     arp = new Arp();
 14571              		.loc 17 117 9 view .LVU3311
 14572 0024 1C60     		str	r4, [r3]
 121:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 14573              		.loc 17 121 5 is_stmt 1 view .LVU3312
 14574              	.LVL911:
 14575              	.LBB9009:
 14576              	.LBI9009:
 14577              		.loc 24 185 7 view .LVU3313
 14578              	.LBB9010:
 14579              	.LBI9010:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14580              		.loc 24 55 7 view .LVU3314
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14581              		.loc 24 55 7 is_stmt 0 view .LVU3315
 14582              	.LBE9010:
 14583              	.LBE9009:
 14584              	.LBB9011:
 14585              	.LBI9011:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 14586              		.loc 19 144 7 is_stmt 1 view .LVU3316
 14587              	.LBB9012:
 14588              	.LBI9012:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14589              		.loc 20 79 7 view .LVU3317
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14590              		.loc 20 79 7 is_stmt 0 view .LVU3318
 14591              	.LBE9012:
 14592              	.LBE9011:
 121:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 14593              		.loc 17 121 70 view .LVU3319
 14594 0026 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 14595              	.LVL912:
 14596 002a 5946     		mov	r1, fp
 14597 002c 03A8     		add	r0, sp, #12
 14598 002e 06AC     		add	r4, sp, #24
 14599 0030 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 14600              	.LVL913:
 14601              	.LBB9013:
 14602              	.LBI9013:
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	std::swap(_M_functor, __x._M_functor);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 532


 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	std::swap(_M_manager, __x._M_manager);
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	std::swap(_M_invoker, __x._M_invoker);
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // [3.7.2.3] function capacity
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Determine if the %function wrapper has a target.
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @return @c true when this %function object contains a target,
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  or @c false when it is empty.
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  This function will not throw an %exception.
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       explicit operator bool() const noexcept
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       { return !_M_empty(); }
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // [3.7.2.4] function invocation
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Invokes the function targeted by @c *this.
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @returns the result of the target.
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @throws bad_function_call when @c !(bool)*this
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The function call operator invokes the target function object
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  stored by @c this.
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Res operator()(_ArgTypes... __args) const;
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cpp_rtti
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // [3.7.2.5] function target access
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Determine the type of the target of this function object
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  wrapper.
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @returns the type identifier of the target function object, or
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @c typeid(void) if @c !(bool)*this.
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  This function will not throw an %exception.
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       const type_info& target_type() const noexcept;
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Access the stored target function object.
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @return Returns a pointer to the stored target function object,
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  if @c typeid(_Functor).equals(target_type()); otherwise, a NULL
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  pointer.
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        * This function does not throw exceptions.
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        * @{
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Functor>       _Functor* target() noexcept;
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Functor> const _Functor* target() const noexcept;
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // @}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 533


 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #endif
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     private:
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       using _Invoker_type = _Res (*)(const _Any_data&, _ArgTypes&&...);
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Invoker_type _M_invoker;
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cpp_deduction_guides >= 201606
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename>
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __function_guide_helper
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { };
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename _Tp, bool _Nx, typename... _Args>
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __function_guide_helper<
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Res (_Tp::*) (_Args...) noexcept(_Nx)
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     >
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { using type = _Res(_Args...); };
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename _Tp, bool _Nx, typename... _Args>
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __function_guide_helper<
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Res (_Tp::*) (_Args...) & noexcept(_Nx)
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     >
 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { using type = _Res(_Args...); };
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename _Tp, bool _Nx, typename... _Args>
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __function_guide_helper<
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Res (_Tp::*) (_Args...) const noexcept(_Nx)
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     >
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { using type = _Res(_Args...); };
 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename _Tp, bool _Nx, typename... _Args>
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __function_guide_helper<
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Res (_Tp::*) (_Args...) const & noexcept(_Nx)
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     >
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { using type = _Res(_Args...); };
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename... _ArgTypes>
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     function(_Res(*)(_ArgTypes...)) -> function<_Res(_ArgTypes...)>;
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Functor, typename _Signature = typename
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	   __function_guide_helper<decltype(&_Functor::operator())>::type>
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     function(_Functor) -> function<_Signature>;
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #endif
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   // Out-of-line member definitions.
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename... _ArgTypes>
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     function<_Res(_ArgTypes...)>::
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     function(const function& __x)
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : _Function_base()
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       if (static_cast<bool>(__x))
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  __x._M_manager(_M_functor, __x._M_functor, __clone_functor);
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_invoker = __x._M_invoker;
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_manager = __x._M_manager;
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 534


 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename... _ArgTypes>
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     template<typename _Functor, typename, typename>
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function<_Res(_ArgTypes...)>::
 14603              		.loc 15 601 7 is_stmt 1 view .LVU3320
 14604              	.LBB9014:
 14605              	.LBB9015:
 14606              	.LBI9015:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14607              		.loc 15 240 5 view .LVU3321
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14608              		.loc 15 240 5 is_stmt 0 view .LVU3322
 14609              	.LBE9015:
 14610              	.LBB9016:
 14611              	.LBB9017:
 14612              	.LBI9017:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14613              		.loc 15 217 4 is_stmt 1 view .LVU3323
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14614              		.loc 15 217 4 is_stmt 0 view .LVU3324
 14615              	.LBE9017:
 14616              	.LBB9018:
 14617              	.LBI9018:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14618              		.loc 34 101 5 is_stmt 1 view .LVU3325
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14619              		.loc 34 101 5 is_stmt 0 view .LVU3326
 14620              	.LBE9018:
 14621              	.LBB9019:
 14622              	.LBI9019:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 14623              		.loc 15 207 2 is_stmt 1 view .LVU3327
 14624              	.LBB9020:
 14625              	.LBI9020:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14626              		.loc 15 232 2 view .LVU3328
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14627              		.loc 15 232 2 is_stmt 0 view .LVU3329
 14628              	.LBE9020:
 14629              	.LBE9019:
 14630              	.LBE9016:
 14631              	.LBE9014:
 14632              	.LBE9013:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 14633              		.loc 15 87 37 is_stmt 1 view .LVU3330
 14634              		.loc 23 175 3 view .LVU3331
 14635              	.LBB9037:
 14636              	.LBB9032:
 14637              	.LBB9027:
 14638              	.LBB9025:
 14639              	.LBB9023:
 14640              	.LBB9021:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14641              		.loc 15 233 4 is_stmt 0 view .LVU3332
 14642 0034 B24B     		ldr	r3, .L712+12
 14643              	.LBE9021:
 14644              	.LBE9023:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 535


 14645              	.LBE9025:
 14646              	.LBE9027:
 14647              	.LBE9032:
 14648              	.LBE9037:
 121:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 14649              		.loc 17 121 70 view .LVU3333
 14650 0036 03AA     		add	r2, sp, #12
 14651              	.LBB9038:
 14652              	.LBB9033:
 14653              	.LBB9028:
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       : _Function_base()
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	typedef _Function_handler<_Res(_ArgTypes...), _Functor> _My_handler;
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	if (_My_handler::_M_not_empty_function(__f))
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  {
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _My_handler::_M_init_functor(_M_functor, std::move(__f));
 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _M_invoker = &_My_handler::_M_invoke;
 14654              		.loc 15 610 17 view .LVU3334
 14655 0038 B24E     		ldr	r6, .L712+16
 14656              	.LBE9028:
 14657              	.LBE9033:
 14658              	.LBE9038:
 121:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 14659              		.loc 17 121 70 view .LVU3335
 14660 003a 0AA9     		add	r1, sp, #40
 14661              	.LBB9039:
 14662              	.LBB9034:
 14663              	.LBB9029:
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _M_manager = &_My_handler::_M_manager;
 14664              		.loc 15 611 17 view .LVU3336
 14665 003c B24D     		ldr	r5, .L712+20
 14666              	.LBE9029:
 14667              	.LBE9034:
 14668              	.LBE9039:
 121:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 14669              		.loc 17 121 70 view .LVU3337
 14670 003e 10A8     		add	r0, sp, #64
 14671              	.LBB9040:
 14672              	.LBB9035:
 14673              	.LBB9030:
 14674              	.LBB9026:
 14675              	.LBB9024:
 14676              	.LBB9022:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14677              		.loc 15 233 4 view .LVU3338
 14678 0040 0693     		str	r3, [sp, #24]
 14679              	.LVL914:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14680              		.loc 15 233 4 view .LVU3339
 14681              	.LBE9022:
 14682              	.LBE9024:
 14683              	.LBE9026:
 14684              	.LBE9030:
 14685              	.LBE9035:
 14686              	.LBE9040:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 536


 121:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 14687              		.loc 17 121 70 view .LVU3340
 14688 0042 0023     		movs	r3, #0
 14689 0044 0094     		str	r4, [sp]
 122:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 14690              		.loc 17 122 63 view .LVU3341
 14691 0046 DFF82493 		ldr	r9, .L712+120
 14692              	.LBB9041:
 14693              	.LBB9042:
 14694              	.LBB9043:
 14695              	.LBB9044:
 14696              	.LBB9045:
 14697              	.LBB9046:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14698              		.loc 15 233 4 view .LVU3342
 14699 004a DFF824A3 		ldr	r10, .L712+124
 14700              	.LBE9046:
 14701              	.LBE9045:
 14702              	.LBE9044:
 14703              	.LBE9043:
 14704              	.LBE9042:
 14705              	.LBE9041:
 123:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 14706              		.loc 17 123 70 view .LVU3343
 14707 004e DFF82483 		ldr	r8, .L712+128
 124:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 14708              		.loc 17 124 63 view .LVU3344
 14709 0052 AE4F     		ldr	r7, .L712+24
 133:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 14710              		.loc 17 133 22 view .LVU3345
 14711 0054 9FEDAE8A 		vldr.32	s16, .L712+28
 14712              	.LBB9059:
 14713              	.LBB9036:
 14714              	.LBB9031:
 14715              		.loc 15 611 17 view .LVU3346
 14716 0058 CDE90856 		strd	r5, r6, [sp, #32]
 14717              	.LVL915:
 14718              		.loc 15 611 17 view .LVU3347
 14719              	.LBE9031:
 14720              	.LBE9036:
 14721              	.LBE9059:
 121:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 14722              		.loc 17 121 70 view .LVU3348
 14723 005c FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 14724              	.LVL916:
 14725 0060 10A9     		add	r1, sp, #64
 14726 0062 AC48     		ldr	r0, .L712+32
 14727 0064 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 14728              	.LVL917:
 121:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 14729              		.loc 17 121 20 view .LVU3349
 14730 0068 10A8     		add	r0, sp, #64
 14731 006a FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 14732              	.LVL918:
 14733              	.LBB9060:
 14734              	.LBI9060:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 537


 14735              		.loc 15 303 11 is_stmt 1 view .LVU3350
 14736              	.LBB9061:
 14737 006e 2046     		mov	r0, r4
 14738 0070 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 14739              	.LVL919:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 14740              		.loc 15 303 11 is_stmt 0 view .LVU3351
 14741              	.LBE9061:
 14742              	.LBE9060:
 121:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 14743              		.loc 17 121 70 view .LVU3352
 14744 0074 03A8     		add	r0, sp, #12
 14745 0076 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 14746              	.LVL920:
 14747              	.LBB9062:
 14748              	.LBI9062:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 14749              		.loc 18 657 7 is_stmt 1 view .LVU3353
 14750              	.LBB9063:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14751              		.loc 18 658 19 is_stmt 0 view .LVU3354
 14752 007a 0AA8     		add	r0, sp, #40
 14753              	.LVL921:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14754              		.loc 18 658 19 view .LVU3355
 14755 007c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 14756              	.LVL922:
 14757              	.LBB9064:
 14758              	.LBI9064:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14759              		.loc 18 150 14 is_stmt 1 view .LVU3356
 14760              	.LBB9065:
 14761              	.LBI9065:
 14762              		.loc 19 162 7 view .LVU3357
 14763              	.LBB9066:
 14764              	.LBI9066:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14765              		.loc 20 89 7 view .LVU3358
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14766              		.loc 20 89 7 is_stmt 0 view .LVU3359
 14767              	.LBE9066:
 14768              	.LBE9065:
 14769              	.LBE9064:
 14770              	.LBE9063:
 14771              	.LBE9062:
 14772              	.LBB9067:
 14773              	.LBI9067:
 14774              		.loc 19 162 7 is_stmt 1 view .LVU3360
 14775              	.LBB9068:
 14776              	.LBI9068:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14777              		.loc 20 89 7 view .LVU3361
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14778              		.loc 20 89 7 is_stmt 0 view .LVU3362
 14779              	.LBE9068:
 14780              	.LBE9067:
 122:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 538


 14781              		.loc 17 122 5 is_stmt 1 view .LVU3363
 14782              	.LBB9069:
 14783              	.LBI9069:
 14784              		.loc 24 185 7 view .LVU3364
 14785              	.LBB9070:
 14786              	.LBI9070:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14787              		.loc 24 55 7 view .LVU3365
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14788              		.loc 24 55 7 is_stmt 0 view .LVU3366
 14789              	.LBE9070:
 14790              	.LBE9069:
 14791              	.LBB9071:
 14792              	.LBI9071:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 14793              		.loc 19 144 7 is_stmt 1 view .LVU3367
 14794              	.LBB9072:
 14795              	.LBI9072:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14796              		.loc 20 79 7 view .LVU3368
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14797              		.loc 20 79 7 is_stmt 0 view .LVU3369
 14798              	.LBE9072:
 14799              	.LBE9071:
 122:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 14800              		.loc 17 122 63 view .LVU3370
 14801 0080 A549     		ldr	r1, .L712+36
 14802 0082 0AA8     		add	r0, sp, #40
 14803 0084 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 14804              	.LVL923:
 14805 0088 4946     		mov	r1, r9
 14806 008a 03A8     		add	r0, sp, #12
 14807 008c FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 14808              	.LVL924:
 14809              	.LBB9073:
 14810              	.LBI9041:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 14811              		.loc 15 601 7 is_stmt 1 view .LVU3371
 14812              	.LBB9057:
 14813              	.LBB9054:
 14814              	.LBI9054:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14815              		.loc 15 240 5 view .LVU3372
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14816              		.loc 15 240 5 is_stmt 0 view .LVU3373
 14817              	.LBE9054:
 14818              	.LBB9055:
 14819              	.LBB9050:
 14820              	.LBI9050:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14821              		.loc 15 217 4 is_stmt 1 view .LVU3374
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14822              		.loc 15 217 4 is_stmt 0 view .LVU3375
 14823              	.LBE9050:
 14824              	.LBB9051:
 14825              	.LBI9051:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 539


 14826              		.loc 34 101 5 is_stmt 1 view .LVU3376
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14827              		.loc 34 101 5 is_stmt 0 view .LVU3377
 14828              	.LBE9051:
 14829              	.LBB9052:
 14830              	.LBI9044:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 14831              		.loc 15 207 2 is_stmt 1 view .LVU3378
 14832              	.LBB9048:
 14833              	.LBI9045:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14834              		.loc 15 232 2 view .LVU3379
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14835              		.loc 15 232 2 is_stmt 0 view .LVU3380
 14836              	.LBE9048:
 14837              	.LBE9052:
 14838              	.LBE9055:
 14839              	.LBE9057:
 14840              	.LBE9073:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 14841              		.loc 15 87 37 is_stmt 1 view .LVU3381
 14842              		.loc 23 175 3 view .LVU3382
 122:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 14843              		.loc 17 122 63 is_stmt 0 view .LVU3383
 14844 0090 0023     		movs	r3, #0
 14845 0092 03AA     		add	r2, sp, #12
 14846 0094 0AA9     		add	r1, sp, #40
 14847 0096 0094     		str	r4, [sp]
 14848 0098 10A8     		add	r0, sp, #64
 14849              	.LBB9074:
 14850              	.LBB9058:
 14851              	.LBB9056:
 14852              	.LBB9053:
 14853              	.LBB9049:
 14854              	.LBB9047:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14855              		.loc 15 233 4 view .LVU3384
 14856 009a CDF818A0 		str	r10, [sp, #24]
 14857              	.LVL925:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14858              		.loc 15 233 4 view .LVU3385
 14859              	.LBE9047:
 14860              	.LBE9049:
 14861              	.LBE9053:
 14862              		.loc 15 611 17 view .LVU3386
 14863 009e CDE90856 		strd	r5, r6, [sp, #32]
 14864              	.LVL926:
 14865              		.loc 15 611 17 view .LVU3387
 14866              	.LBE9056:
 14867              	.LBE9058:
 14868              	.LBE9074:
 122:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 14869              		.loc 17 122 63 view .LVU3388
 14870 00a2 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 14871              	.LVL927:
 14872 00a6 10A9     		add	r1, sp, #64
 14873 00a8 9C48     		ldr	r0, .L712+40
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 540


 14874 00aa FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 14875              	.LVL928:
 122:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 14876              		.loc 17 122 20 view .LVU3389
 14877 00ae 10A8     		add	r0, sp, #64
 14878 00b0 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 14879              	.LVL929:
 14880              	.LBB9075:
 14881              	.LBI9075:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 14882              		.loc 15 303 11 is_stmt 1 view .LVU3390
 14883              	.LBB9076:
 14884 00b4 2046     		mov	r0, r4
 14885 00b6 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 14886              	.LVL930:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 14887              		.loc 15 303 11 is_stmt 0 view .LVU3391
 14888              	.LBE9076:
 14889              	.LBE9075:
 122:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 14890              		.loc 17 122 63 view .LVU3392
 14891 00ba 03A8     		add	r0, sp, #12
 14892 00bc FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 14893              	.LVL931:
 14894              	.LBB9077:
 14895              	.LBI9077:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 14896              		.loc 18 657 7 is_stmt 1 view .LVU3393
 14897              	.LBB9078:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14898              		.loc 18 658 19 is_stmt 0 view .LVU3394
 14899 00c0 0AA8     		add	r0, sp, #40
 14900              	.LVL932:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14901              		.loc 18 658 19 view .LVU3395
 14902 00c2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 14903              	.LVL933:
 14904              	.LBB9079:
 14905              	.LBI9079:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14906              		.loc 18 150 14 is_stmt 1 view .LVU3396
 14907              	.LBB9080:
 14908              	.LBI9080:
 14909              		.loc 19 162 7 view .LVU3397
 14910              	.LBB9081:
 14911              	.LBI9081:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14912              		.loc 20 89 7 view .LVU3398
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14913              		.loc 20 89 7 is_stmt 0 view .LVU3399
 14914              	.LBE9081:
 14915              	.LBE9080:
 14916              	.LBE9079:
 14917              	.LBE9078:
 14918              	.LBE9077:
 14919              	.LBB9082:
 14920              	.LBI9082:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 541


 14921              		.loc 19 162 7 is_stmt 1 view .LVU3400
 14922              	.LBB9083:
 14923              	.LBI9083:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14924              		.loc 20 89 7 view .LVU3401
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14925              		.loc 20 89 7 is_stmt 0 view .LVU3402
 14926              	.LBE9083:
 14927              	.LBE9082:
 123:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 14928              		.loc 17 123 5 is_stmt 1 view .LVU3403
 14929              	.LBB9084:
 14930              	.LBI9084:
 14931              		.loc 24 185 7 view .LVU3404
 14932              	.LBB9085:
 14933              	.LBI9085:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14934              		.loc 24 55 7 view .LVU3405
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14935              		.loc 24 55 7 is_stmt 0 view .LVU3406
 14936              	.LBE9085:
 14937              	.LBE9084:
 14938              	.LBB9086:
 14939              	.LBI9086:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 14940              		.loc 19 144 7 is_stmt 1 view .LVU3407
 14941              	.LBB9087:
 14942              	.LBI9087:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14943              		.loc 20 79 7 view .LVU3408
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14944              		.loc 20 79 7 is_stmt 0 view .LVU3409
 14945              	.LBE9087:
 14946              	.LBE9086:
 123:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 14947              		.loc 17 123 70 view .LVU3410
 14948 00c6 9649     		ldr	r1, .L712+44
 14949 00c8 0AA8     		add	r0, sp, #40
 14950 00ca FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 14951              	.LVL934:
 14952 00ce 4146     		mov	r1, r8
 14953 00d0 03A8     		add	r0, sp, #12
 14954 00d2 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 14955              	.LVL935:
 14956              	.LBB9088:
 14957              	.LBI9088:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 14958              		.loc 15 601 7 is_stmt 1 view .LVU3411
 14959              	.LBB9089:
 14960              	.LBB9090:
 14961              	.LBI9090:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14962              		.loc 15 240 5 view .LVU3412
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14963              		.loc 15 240 5 is_stmt 0 view .LVU3413
 14964              	.LBE9090:
 14965              	.LBB9091:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 542


 14966              	.LBB9092:
 14967              	.LBI9092:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14968              		.loc 15 217 4 is_stmt 1 view .LVU3414
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14969              		.loc 15 217 4 is_stmt 0 view .LVU3415
 14970              	.LBE9092:
 14971              	.LBB9093:
 14972              	.LBI9093:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14973              		.loc 34 101 5 is_stmt 1 view .LVU3416
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14974              		.loc 34 101 5 is_stmt 0 view .LVU3417
 14975              	.LBE9093:
 14976              	.LBB9094:
 14977              	.LBI9094:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 14978              		.loc 15 207 2 is_stmt 1 view .LVU3418
 14979              	.LBB9095:
 14980              	.LBI9095:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14981              		.loc 15 232 2 view .LVU3419
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14982              		.loc 15 232 2 is_stmt 0 view .LVU3420
 14983              	.LBE9095:
 14984              	.LBE9094:
 14985              	.LBE9091:
 14986              	.LBE9089:
 14987              	.LBE9088:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 14988              		.loc 15 87 37 is_stmt 1 view .LVU3421
 14989              		.loc 23 175 3 view .LVU3422
 14990              	.LBB9108:
 14991              	.LBB9105:
 14992              	.LBB9102:
 14993              	.LBB9100:
 14994              	.LBB9098:
 14995              	.LBB9096:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14996              		.loc 15 233 4 is_stmt 0 view .LVU3423
 14997 00d6 934B     		ldr	r3, .L712+48
 14998              	.LBE9096:
 14999              	.LBE9098:
 15000              	.LBE9100:
 15001              	.LBE9102:
 15002              	.LBE9105:
 15003              	.LBE9108:
 123:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 15004              		.loc 17 123 70 view .LVU3424
 15005 00d8 03AA     		add	r2, sp, #12
 15006 00da 0AA9     		add	r1, sp, #40
 15007 00dc 0094     		str	r4, [sp]
 15008 00de 10A8     		add	r0, sp, #64
 15009              	.LBB9109:
 15010              	.LBB9106:
 15011              	.LBB9103:
 15012              	.LBB9101:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 543


 15013              	.LBB9099:
 15014              	.LBB9097:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15015              		.loc 15 233 4 view .LVU3425
 15016 00e0 0693     		str	r3, [sp, #24]
 15017              	.LVL936:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15018              		.loc 15 233 4 view .LVU3426
 15019              	.LBE9097:
 15020              	.LBE9099:
 15021              	.LBE9101:
 15022              	.LBE9103:
 15023              	.LBE9106:
 15024              	.LBE9109:
 123:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 15025              		.loc 17 123 70 view .LVU3427
 15026 00e2 0023     		movs	r3, #0
 15027              	.LBB9110:
 15028              	.LBB9107:
 15029              	.LBB9104:
 15030              		.loc 15 611 17 view .LVU3428
 15031 00e4 CDE90856 		strd	r5, r6, [sp, #32]
 15032              	.LBE9104:
 15033              	.LBE9107:
 15034              	.LBE9110:
 123:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 15035              		.loc 17 123 70 view .LVU3429
 15036 00e8 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 15037              	.LVL937:
 15038 00ec 10A9     		add	r1, sp, #64
 15039 00ee 8E48     		ldr	r0, .L712+52
 15040 00f0 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 15041              	.LVL938:
 123:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 15042              		.loc 17 123 20 view .LVU3430
 15043 00f4 10A8     		add	r0, sp, #64
 15044 00f6 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 15045              	.LVL939:
 15046              	.LBB9111:
 15047              	.LBI9111:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15048              		.loc 15 303 11 is_stmt 1 view .LVU3431
 15049              	.LBB9112:
 15050 00fa 2046     		mov	r0, r4
 15051 00fc FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 15052              	.LVL940:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15053              		.loc 15 303 11 is_stmt 0 view .LVU3432
 15054              	.LBE9112:
 15055              	.LBE9111:
 123:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 15056              		.loc 17 123 70 view .LVU3433
 15057 0100 03A8     		add	r0, sp, #12
 15058 0102 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 15059              	.LVL941:
 15060              	.LBB9113:
 15061              	.LBI9113:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 544


 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 15062              		.loc 18 657 7 is_stmt 1 view .LVU3434
 15063              	.LBB9114:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15064              		.loc 18 658 19 is_stmt 0 view .LVU3435
 15065 0106 0AA8     		add	r0, sp, #40
 15066              	.LVL942:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15067              		.loc 18 658 19 view .LVU3436
 15068 0108 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 15069              	.LVL943:
 15070              	.LBB9115:
 15071              	.LBI9115:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15072              		.loc 18 150 14 is_stmt 1 view .LVU3437
 15073              	.LBB9116:
 15074              	.LBI9116:
 15075              		.loc 19 162 7 view .LVU3438
 15076              	.LBB9117:
 15077              	.LBI9117:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15078              		.loc 20 89 7 view .LVU3439
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15079              		.loc 20 89 7 is_stmt 0 view .LVU3440
 15080              	.LBE9117:
 15081              	.LBE9116:
 15082              	.LBE9115:
 15083              	.LBE9114:
 15084              	.LBE9113:
 15085              	.LBB9118:
 15086              	.LBI9118:
 15087              		.loc 19 162 7 is_stmt 1 view .LVU3441
 15088              	.LBB9119:
 15089              	.LBI9119:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15090              		.loc 20 89 7 view .LVU3442
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15091              		.loc 20 89 7 is_stmt 0 view .LVU3443
 15092              	.LBE9119:
 15093              	.LBE9118:
 124:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 15094              		.loc 17 124 5 is_stmt 1 view .LVU3444
 15095              	.LBB9120:
 15096              	.LBI9120:
 15097              		.loc 24 185 7 view .LVU3445
 15098              	.LBB9121:
 15099              	.LBI9121:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15100              		.loc 24 55 7 view .LVU3446
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15101              		.loc 24 55 7 is_stmt 0 view .LVU3447
 15102              	.LBE9121:
 15103              	.LBE9120:
 15104              	.LBB9122:
 15105              	.LBI9122:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 15106              		.loc 19 144 7 is_stmt 1 view .LVU3448
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 545


 15107              	.LBB9123:
 15108              	.LBI9123:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15109              		.loc 20 79 7 view .LVU3449
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15110              		.loc 20 79 7 is_stmt 0 view .LVU3450
 15111              	.LBE9123:
 15112              	.LBE9122:
 124:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 15113              		.loc 17 124 63 view .LVU3451
 15114 010c 8249     		ldr	r1, .L712+36
 15115 010e 0AA8     		add	r0, sp, #40
 15116 0110 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 15117              	.LVL944:
 15118 0114 3946     		mov	r1, r7
 15119 0116 03A8     		add	r0, sp, #12
 15120 0118 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 15121              	.LVL945:
 15122              	.LBB9124:
 15123              	.LBI9124:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 15124              		.loc 15 601 7 is_stmt 1 view .LVU3452
 15125              	.LBB9125:
 15126              	.LBB9126:
 15127              	.LBI9126:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15128              		.loc 15 240 5 view .LVU3453
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15129              		.loc 15 240 5 is_stmt 0 view .LVU3454
 15130              	.LBE9126:
 15131              	.LBB9127:
 15132              	.LBB9128:
 15133              	.LBI9128:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15134              		.loc 15 217 4 is_stmt 1 view .LVU3455
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15135              		.loc 15 217 4 is_stmt 0 view .LVU3456
 15136              	.LBE9128:
 15137              	.LBB9129:
 15138              	.LBI9129:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15139              		.loc 34 101 5 is_stmt 1 view .LVU3457
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15140              		.loc 34 101 5 is_stmt 0 view .LVU3458
 15141              	.LBE9129:
 15142              	.LBB9130:
 15143              	.LBI9130:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 15144              		.loc 15 207 2 is_stmt 1 view .LVU3459
 15145              	.LBB9131:
 15146              	.LBI9131:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15147              		.loc 15 232 2 view .LVU3460
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15148              		.loc 15 232 2 is_stmt 0 view .LVU3461
 15149              	.LBE9131:
 15150              	.LBE9130:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 546


 15151              	.LBE9127:
 15152              	.LBE9125:
 15153              	.LBE9124:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 15154              		.loc 15 87 37 is_stmt 1 view .LVU3462
 15155              		.loc 23 175 3 view .LVU3463
 124:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 15156              		.loc 17 124 63 is_stmt 0 view .LVU3464
 15157 011c 0023     		movs	r3, #0
 15158 011e 03AA     		add	r2, sp, #12
 15159 0120 0AA9     		add	r1, sp, #40
 15160 0122 0094     		str	r4, [sp]
 15161 0124 10A8     		add	r0, sp, #64
 15162              	.LBB9137:
 15163              	.LBB9136:
 15164              	.LBB9135:
 15165              	.LBB9134:
 15166              	.LBB9133:
 15167              	.LBB9132:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15168              		.loc 15 233 4 view .LVU3465
 15169 0126 CDF818A0 		str	r10, [sp, #24]
 15170              	.LVL946:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15171              		.loc 15 233 4 view .LVU3466
 15172              	.LBE9132:
 15173              	.LBE9133:
 15174              	.LBE9134:
 15175              		.loc 15 611 17 view .LVU3467
 15176 012a CDE90856 		strd	r5, r6, [sp, #32]
 15177              	.LVL947:
 15178              		.loc 15 611 17 view .LVU3468
 15179              	.LBE9135:
 15180              	.LBE9136:
 15181              	.LBE9137:
 124:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 15182              		.loc 17 124 63 view .LVU3469
 15183 012e FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 15184              	.LVL948:
 15185 0132 10A9     		add	r1, sp, #64
 15186 0134 7D48     		ldr	r0, .L712+56
 15187 0136 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 15188              	.LVL949:
 124:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 15189              		.loc 17 124 20 view .LVU3470
 15190 013a 10A8     		add	r0, sp, #64
 15191 013c FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 15192              	.LVL950:
 15193              	.LBB9138:
 15194              	.LBI9138:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15195              		.loc 15 303 11 is_stmt 1 view .LVU3471
 15196              	.LBB9139:
 15197 0140 2046     		mov	r0, r4
 15198 0142 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 15199              	.LVL951:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 547


 15200              		.loc 15 303 11 is_stmt 0 view .LVU3472
 15201              	.LBE9139:
 15202              	.LBE9138:
 124:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 15203              		.loc 17 124 63 view .LVU3473
 15204 0146 03A8     		add	r0, sp, #12
 15205 0148 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 15206              	.LVL952:
 15207              	.LBB9140:
 15208              	.LBI9140:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 15209              		.loc 18 657 7 is_stmt 1 view .LVU3474
 15210              	.LBB9141:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15211              		.loc 18 658 19 is_stmt 0 view .LVU3475
 15212 014c 0AA8     		add	r0, sp, #40
 15213              	.LVL953:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15214              		.loc 18 658 19 view .LVU3476
 15215 014e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 15216              	.LVL954:
 15217              	.LBB9142:
 15218              	.LBI9142:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15219              		.loc 18 150 14 is_stmt 1 view .LVU3477
 15220              	.LBB9143:
 15221              	.LBI9143:
 15222              		.loc 19 162 7 view .LVU3478
 15223              	.LBB9144:
 15224              	.LBI9144:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15225              		.loc 20 89 7 view .LVU3479
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15226              		.loc 20 89 7 is_stmt 0 view .LVU3480
 15227              	.LBE9144:
 15228              	.LBE9143:
 15229              	.LBE9142:
 15230              	.LBE9141:
 15231              	.LBE9140:
 15232              	.LBB9145:
 15233              	.LBI9145:
 15234              		.loc 19 162 7 is_stmt 1 view .LVU3481
 15235              	.LBB9146:
 15236              	.LBI9146:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15237              		.loc 20 89 7 view .LVU3482
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15238              		.loc 20 89 7 is_stmt 0 view .LVU3483
 15239              	.LBE9146:
 15240              	.LBE9145:
 125:Jellybeans.cpp ****     menuItems[4] = MenuItem("Tonic    ", allNotes,       0, cb);
 15241              		.loc 17 125 5 is_stmt 1 view .LVU3484
 15242              	.LBB9147:
 15243              	.LBI9147:
 15244              		.loc 24 185 7 view .LVU3485
 15245              	.LBB9148:
 15246              	.LBI9148:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 548


  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15247              		.loc 24 55 7 view .LVU3486
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15248              		.loc 24 55 7 is_stmt 0 view .LVU3487
 15249              	.LBE9148:
 15250              	.LBE9147:
 15251              	.LBB9149:
 15252              	.LBI9149:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 15253              		.loc 19 144 7 is_stmt 1 view .LVU3488
 15254              	.LBB9150:
 15255              	.LBI9150:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15256              		.loc 20 79 7 view .LVU3489
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15257              		.loc 20 79 7 is_stmt 0 view .LVU3490
 15258              	.LBE9150:
 15259              	.LBE9149:
 125:Jellybeans.cpp ****     menuItems[4] = MenuItem("Tonic    ", allNotes,       0, cb);
 15260              		.loc 17 125 63 view .LVU3491
 15261 0152 7749     		ldr	r1, .L712+60
 15262 0154 0AA8     		add	r0, sp, #40
 15263 0156 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 15264              	.LVL955:
 15265 015a 7649     		ldr	r1, .L712+64
 15266 015c 03A8     		add	r0, sp, #12
 15267 015e FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 15268              	.LVL956:
 15269              	.LBB9151:
 15270              	.LBI9151:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 15271              		.loc 15 601 7 is_stmt 1 view .LVU3492
 15272              	.LBB9152:
 15273              	.LBB9153:
 15274              	.LBI9153:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15275              		.loc 15 240 5 view .LVU3493
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15276              		.loc 15 240 5 is_stmt 0 view .LVU3494
 15277              	.LBE9153:
 15278              	.LBB9154:
 15279              	.LBB9155:
 15280              	.LBI9155:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15281              		.loc 15 217 4 is_stmt 1 view .LVU3495
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15282              		.loc 15 217 4 is_stmt 0 view .LVU3496
 15283              	.LBE9155:
 15284              	.LBB9156:
 15285              	.LBI9156:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15286              		.loc 34 101 5 is_stmt 1 view .LVU3497
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15287              		.loc 34 101 5 is_stmt 0 view .LVU3498
 15288              	.LBE9156:
 15289              	.LBB9157:
 15290              	.LBI9157:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 549


 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 15291              		.loc 15 207 2 is_stmt 1 view .LVU3499
 15292              	.LBB9158:
 15293              	.LBI9158:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15294              		.loc 15 232 2 view .LVU3500
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15295              		.loc 15 232 2 is_stmt 0 view .LVU3501
 15296              	.LBE9158:
 15297              	.LBE9157:
 15298              	.LBE9154:
 15299              	.LBE9152:
 15300              	.LBE9151:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 15301              		.loc 15 87 37 is_stmt 1 view .LVU3502
 15302              		.loc 23 175 3 view .LVU3503
 125:Jellybeans.cpp ****     menuItems[4] = MenuItem("Tonic    ", allNotes,       0, cb);
 15303              		.loc 17 125 63 is_stmt 0 view .LVU3504
 15304 0162 0023     		movs	r3, #0
 15305 0164 03AA     		add	r2, sp, #12
 15306 0166 0AA9     		add	r1, sp, #40
 15307 0168 0094     		str	r4, [sp]
 15308 016a 10A8     		add	r0, sp, #64
 15309              	.LBB9164:
 15310              	.LBB9163:
 15311              	.LBB9162:
 15312              	.LBB9161:
 15313              	.LBB9160:
 15314              	.LBB9159:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15315              		.loc 15 233 4 view .LVU3505
 15316 016c CDF818A0 		str	r10, [sp, #24]
 15317              	.LVL957:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15318              		.loc 15 233 4 view .LVU3506
 15319              	.LBE9159:
 15320              	.LBE9160:
 15321              	.LBE9161:
 15322              		.loc 15 611 17 view .LVU3507
 15323 0170 CDE90856 		strd	r5, r6, [sp, #32]
 15324              	.LVL958:
 15325              		.loc 15 611 17 view .LVU3508
 15326              	.LBE9162:
 15327              	.LBE9163:
 15328              	.LBE9164:
 125:Jellybeans.cpp ****     menuItems[4] = MenuItem("Tonic    ", allNotes,       0, cb);
 15329              		.loc 17 125 63 view .LVU3509
 15330 0174 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 15331              	.LVL959:
 15332 0178 10A9     		add	r1, sp, #64
 15333 017a 6F48     		ldr	r0, .L712+68
 15334 017c FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 15335              	.LVL960:
 125:Jellybeans.cpp ****     menuItems[4] = MenuItem("Tonic    ", allNotes,       0, cb);
 15336              		.loc 17 125 20 view .LVU3510
 15337 0180 10A8     		add	r0, sp, #64
 15338 0182 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 550


 15339              	.LVL961:
 15340              	.LBB9165:
 15341              	.LBI9165:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15342              		.loc 15 303 11 is_stmt 1 view .LVU3511
 15343              	.LBB9166:
 15344 0186 2046     		mov	r0, r4
 15345 0188 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 15346              	.LVL962:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15347              		.loc 15 303 11 is_stmt 0 view .LVU3512
 15348              	.LBE9166:
 15349              	.LBE9165:
 125:Jellybeans.cpp ****     menuItems[4] = MenuItem("Tonic    ", allNotes,       0, cb);
 15350              		.loc 17 125 63 view .LVU3513
 15351 018c 03A8     		add	r0, sp, #12
 15352 018e FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 15353              	.LVL963:
 15354              	.LBB9167:
 15355              	.LBI9167:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 15356              		.loc 18 657 7 is_stmt 1 view .LVU3514
 15357              	.LBB9168:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15358              		.loc 18 658 19 is_stmt 0 view .LVU3515
 15359 0192 0AA8     		add	r0, sp, #40
 15360              	.LVL964:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15361              		.loc 18 658 19 view .LVU3516
 15362 0194 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 15363              	.LVL965:
 15364              	.LBB9169:
 15365              	.LBI9169:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15366              		.loc 18 150 14 is_stmt 1 view .LVU3517
 15367              	.LBB9170:
 15368              	.LBI9170:
 15369              		.loc 19 162 7 view .LVU3518
 15370              	.LBB9171:
 15371              	.LBI9171:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15372              		.loc 20 89 7 view .LVU3519
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15373              		.loc 20 89 7 is_stmt 0 view .LVU3520
 15374              	.LBE9171:
 15375              	.LBE9170:
 15376              	.LBE9169:
 15377              	.LBE9168:
 15378              	.LBE9167:
 15379              	.LBB9172:
 15380              	.LBI9172:
 15381              		.loc 19 162 7 is_stmt 1 view .LVU3521
 15382              	.LBB9173:
 15383              	.LBI9173:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15384              		.loc 20 89 7 view .LVU3522
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 551


 15385              		.loc 20 89 7 is_stmt 0 view .LVU3523
 15386              	.LBE9173:
 15387              	.LBE9172:
 126:Jellybeans.cpp ****     menuItems[5] = MenuItem("Scale    ", modes,          0, cb);
 15388              		.loc 17 126 5 is_stmt 1 view .LVU3524
 15389              	.LBB9174:
 15390              	.LBI9174:
 15391              		.loc 24 185 7 view .LVU3525
 15392              	.LBB9175:
 15393              	.LBI9175:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15394              		.loc 24 55 7 view .LVU3526
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15395              		.loc 24 55 7 is_stmt 0 view .LVU3527
 15396              	.LBE9175:
 15397              	.LBE9174:
 15398              	.LBB9176:
 15399              	.LBI9176:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 15400              		.loc 19 144 7 is_stmt 1 view .LVU3528
 15401              	.LBB9177:
 15402              	.LBI9177:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15403              		.loc 20 79 7 view .LVU3529
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15404              		.loc 20 79 7 is_stmt 0 view .LVU3530
 15405              	.LBE9177:
 15406              	.LBE9176:
 126:Jellybeans.cpp ****     menuItems[5] = MenuItem("Scale    ", modes,          0, cb);
 15407              		.loc 17 126 63 view .LVU3531
 15408 0198 6849     		ldr	r1, .L712+72
 15409 019a 0AA8     		add	r0, sp, #40
 15410 019c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 15411              	.LVL966:
 15412 01a0 6749     		ldr	r1, .L712+76
 15413 01a2 03A8     		add	r0, sp, #12
 15414 01a4 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 15415              	.LVL967:
 15416              	.LBB9178:
 15417              	.LBI9178:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 15418              		.loc 15 601 7 is_stmt 1 view .LVU3532
 15419              	.LBB9179:
 15420              	.LBB9180:
 15421              	.LBI9180:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15422              		.loc 15 240 5 view .LVU3533
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15423              		.loc 15 240 5 is_stmt 0 view .LVU3534
 15424              	.LBE9180:
 15425              	.LBB9181:
 15426              	.LBB9182:
 15427              	.LBI9182:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15428              		.loc 15 217 4 is_stmt 1 view .LVU3535
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15429              		.loc 15 217 4 is_stmt 0 view .LVU3536
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 552


 15430              	.LBE9182:
 15431              	.LBB9183:
 15432              	.LBI9183:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15433              		.loc 34 101 5 is_stmt 1 view .LVU3537
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15434              		.loc 34 101 5 is_stmt 0 view .LVU3538
 15435              	.LBE9183:
 15436              	.LBB9184:
 15437              	.LBI9184:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 15438              		.loc 15 207 2 is_stmt 1 view .LVU3539
 15439              	.LBB9185:
 15440              	.LBI9185:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15441              		.loc 15 232 2 view .LVU3540
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15442              		.loc 15 232 2 is_stmt 0 view .LVU3541
 15443              	.LBE9185:
 15444              	.LBE9184:
 15445              	.LBE9181:
 15446              	.LBE9179:
 15447              	.LBE9178:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 15448              		.loc 15 87 37 is_stmt 1 view .LVU3542
 15449              		.loc 23 175 3 view .LVU3543
 126:Jellybeans.cpp ****     menuItems[5] = MenuItem("Scale    ", modes,          0, cb);
 15450              		.loc 17 126 63 is_stmt 0 view .LVU3544
 15451 01a8 0023     		movs	r3, #0
 15452 01aa 03AA     		add	r2, sp, #12
 15453 01ac 0AA9     		add	r1, sp, #40
 15454 01ae 0094     		str	r4, [sp]
 15455 01b0 10A8     		add	r0, sp, #64
 15456              	.LBB9191:
 15457              	.LBB9190:
 15458              	.LBB9189:
 15459              	.LBB9188:
 15460              	.LBB9187:
 15461              	.LBB9186:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15462              		.loc 15 233 4 view .LVU3545
 15463 01b2 CDF818A0 		str	r10, [sp, #24]
 15464              	.LVL968:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15465              		.loc 15 233 4 view .LVU3546
 15466              	.LBE9186:
 15467              	.LBE9187:
 15468              	.LBE9188:
 15469              		.loc 15 611 17 view .LVU3547
 15470 01b6 CDE90856 		strd	r5, r6, [sp, #32]
 15471              	.LVL969:
 15472              		.loc 15 611 17 view .LVU3548
 15473              	.LBE9189:
 15474              	.LBE9190:
 15475              	.LBE9191:
 126:Jellybeans.cpp ****     menuItems[5] = MenuItem("Scale    ", modes,          0, cb);
 15476              		.loc 17 126 63 view .LVU3549
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 553


 15477 01ba FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 15478              	.LVL970:
 15479 01be 10A9     		add	r1, sp, #64
 15480 01c0 6048     		ldr	r0, .L712+80
 15481 01c2 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 15482              	.LVL971:
 126:Jellybeans.cpp ****     menuItems[5] = MenuItem("Scale    ", modes,          0, cb);
 15483              		.loc 17 126 20 view .LVU3550
 15484 01c6 10A8     		add	r0, sp, #64
 15485 01c8 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 15486              	.LVL972:
 15487              	.LBB9192:
 15488              	.LBI9192:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15489              		.loc 15 303 11 is_stmt 1 view .LVU3551
 15490              	.LBB9193:
 15491 01cc 2046     		mov	r0, r4
 15492 01ce FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 15493              	.LVL973:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15494              		.loc 15 303 11 is_stmt 0 view .LVU3552
 15495              	.LBE9193:
 15496              	.LBE9192:
 126:Jellybeans.cpp ****     menuItems[5] = MenuItem("Scale    ", modes,          0, cb);
 15497              		.loc 17 126 63 view .LVU3553
 15498 01d2 03A8     		add	r0, sp, #12
 15499 01d4 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 15500              	.LVL974:
 15501              	.LBB9194:
 15502              	.LBI9194:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 15503              		.loc 18 657 7 is_stmt 1 view .LVU3554
 15504              	.LBB9195:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15505              		.loc 18 658 19 is_stmt 0 view .LVU3555
 15506 01d8 0AA8     		add	r0, sp, #40
 15507              	.LVL975:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15508              		.loc 18 658 19 view .LVU3556
 15509 01da FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 15510              	.LVL976:
 15511              	.LBB9196:
 15512              	.LBI9196:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15513              		.loc 18 150 14 is_stmt 1 view .LVU3557
 15514              	.LBB9197:
 15515              	.LBI9197:
 15516              		.loc 19 162 7 view .LVU3558
 15517              	.LBB9198:
 15518              	.LBI9198:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15519              		.loc 20 89 7 view .LVU3559
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15520              		.loc 20 89 7 is_stmt 0 view .LVU3560
 15521              	.LBE9198:
 15522              	.LBE9197:
 15523              	.LBE9196:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 554


 15524              	.LBE9195:
 15525              	.LBE9194:
 15526              	.LBB9199:
 15527              	.LBI9199:
 15528              		.loc 19 162 7 is_stmt 1 view .LVU3561
 15529              	.LBB9200:
 15530              	.LBI9200:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15531              		.loc 20 89 7 view .LVU3562
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15532              		.loc 20 89 7 is_stmt 0 view .LVU3563
 15533              	.LBE9200:
 15534              	.LBE9199:
 127:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", arpRhythms,     0, cb); // Rhythm
 15535              		.loc 17 127 5 is_stmt 1 view .LVU3564
 15536              	.LBB9201:
 15537              	.LBI9201:
 15538              		.loc 24 185 7 view .LVU3565
 15539              	.LBB9202:
 15540              	.LBI9202:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15541              		.loc 24 55 7 view .LVU3566
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15542              		.loc 24 55 7 is_stmt 0 view .LVU3567
 15543              	.LBE9202:
 15544              	.LBE9201:
 15545              	.LBB9203:
 15546              	.LBI9203:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 15547              		.loc 19 144 7 is_stmt 1 view .LVU3568
 15548              	.LBB9204:
 15549              	.LBI9204:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15550              		.loc 20 79 7 view .LVU3569
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15551              		.loc 20 79 7 is_stmt 0 view .LVU3570
 15552              	.LBE9204:
 15553              	.LBE9203:
 127:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", arpRhythms,     0, cb); // Rhythm
 15554              		.loc 17 127 63 view .LVU3571
 15555 01de 4E49     		ldr	r1, .L712+36
 15556 01e0 0AA8     		add	r0, sp, #40
 15557 01e2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 15558              	.LVL977:
 15559 01e6 5849     		ldr	r1, .L712+84
 15560 01e8 03A8     		add	r0, sp, #12
 15561 01ea FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 15562              	.LVL978:
 15563              	.LBB9205:
 15564              	.LBI9205:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 15565              		.loc 15 601 7 is_stmt 1 view .LVU3572
 15566              	.LBB9206:
 15567              	.LBB9207:
 15568              	.LBI9207:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15569              		.loc 15 240 5 view .LVU3573
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 555


 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15570              		.loc 15 240 5 is_stmt 0 view .LVU3574
 15571              	.LBE9207:
 15572              	.LBB9208:
 15573              	.LBB9209:
 15574              	.LBI9209:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15575              		.loc 15 217 4 is_stmt 1 view .LVU3575
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15576              		.loc 15 217 4 is_stmt 0 view .LVU3576
 15577              	.LBE9209:
 15578              	.LBB9210:
 15579              	.LBI9210:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15580              		.loc 34 101 5 is_stmt 1 view .LVU3577
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15581              		.loc 34 101 5 is_stmt 0 view .LVU3578
 15582              	.LBE9210:
 15583              	.LBB9211:
 15584              	.LBI9211:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 15585              		.loc 15 207 2 is_stmt 1 view .LVU3579
 15586              	.LBB9212:
 15587              	.LBI9212:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15588              		.loc 15 232 2 view .LVU3580
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15589              		.loc 15 232 2 is_stmt 0 view .LVU3581
 15590              	.LBE9212:
 15591              	.LBE9211:
 15592              	.LBE9208:
 15593              	.LBE9206:
 15594              	.LBE9205:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 15595              		.loc 15 87 37 is_stmt 1 view .LVU3582
 15596              		.loc 23 175 3 view .LVU3583
 127:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", arpRhythms,     0, cb); // Rhythm
 15597              		.loc 17 127 63 is_stmt 0 view .LVU3584
 15598 01ee 0023     		movs	r3, #0
 15599 01f0 03AA     		add	r2, sp, #12
 15600 01f2 0AA9     		add	r1, sp, #40
 15601 01f4 0094     		str	r4, [sp]
 15602 01f6 10A8     		add	r0, sp, #64
 15603              	.LBB9218:
 15604              	.LBB9217:
 15605              	.LBB9216:
 15606              	.LBB9215:
 15607              	.LBB9214:
 15608              	.LBB9213:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15609              		.loc 15 233 4 view .LVU3585
 15610 01f8 CDF818A0 		str	r10, [sp, #24]
 15611              	.LVL979:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15612              		.loc 15 233 4 view .LVU3586
 15613              	.LBE9213:
 15614              	.LBE9214:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 556


 15615              	.LBE9215:
 15616              		.loc 15 611 17 view .LVU3587
 15617 01fc CDE90856 		strd	r5, r6, [sp, #32]
 15618              	.LVL980:
 15619              		.loc 15 611 17 view .LVU3588
 15620              	.LBE9216:
 15621              	.LBE9217:
 15622              	.LBE9218:
 127:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", arpRhythms,     0, cb); // Rhythm
 15623              		.loc 17 127 63 view .LVU3589
 15624 0200 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 15625              	.LVL981:
 15626 0204 10A9     		add	r1, sp, #64
 15627 0206 5148     		ldr	r0, .L712+88
 15628 0208 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 15629              	.LVL982:
 127:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", arpRhythms,     0, cb); // Rhythm
 15630              		.loc 17 127 20 view .LVU3590
 15631 020c 10A8     		add	r0, sp, #64
 15632 020e FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 15633              	.LVL983:
 15634              	.LBB9219:
 15635              	.LBI9219:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15636              		.loc 15 303 11 is_stmt 1 view .LVU3591
 15637              	.LBB9220:
 15638 0212 2046     		mov	r0, r4
 15639 0214 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 15640              	.LVL984:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15641              		.loc 15 303 11 is_stmt 0 view .LVU3592
 15642              	.LBE9220:
 15643              	.LBE9219:
 127:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", arpRhythms,     0, cb); // Rhythm
 15644              		.loc 17 127 63 view .LVU3593
 15645 0218 03A8     		add	r0, sp, #12
 15646 021a FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 15647              	.LVL985:
 15648              	.LBB9221:
 15649              	.LBI9221:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 15650              		.loc 18 657 7 is_stmt 1 view .LVU3594
 15651              	.LBB9222:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15652              		.loc 18 658 19 is_stmt 0 view .LVU3595
 15653 021e 0AA8     		add	r0, sp, #40
 15654              	.LVL986:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15655              		.loc 18 658 19 view .LVU3596
 15656 0220 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 15657              	.LVL987:
 15658              	.LBB9223:
 15659              	.LBI9223:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15660              		.loc 18 150 14 is_stmt 1 view .LVU3597
 15661              	.LBB9224:
 15662              	.LBI9224:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 557


 15663              		.loc 19 162 7 view .LVU3598
 15664              	.LBB9225:
 15665              	.LBI9225:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15666              		.loc 20 89 7 view .LVU3599
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15667              		.loc 20 89 7 is_stmt 0 view .LVU3600
 15668              	.LBE9225:
 15669              	.LBE9224:
 15670              	.LBE9223:
 15671              	.LBE9222:
 15672              	.LBE9221:
 15673              	.LBB9226:
 15674              	.LBI9226:
 15675              		.loc 19 162 7 is_stmt 1 view .LVU3601
 15676              	.LBB9227:
 15677              	.LBI9227:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15678              		.loc 20 89 7 view .LVU3602
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15679              		.loc 20 89 7 is_stmt 0 view .LVU3603
 15680              	.LBE9227:
 15681              	.LBE9226:
 128:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 15682              		.loc 17 128 5 is_stmt 1 view .LVU3604
 15683              	.LBB9228:
 15684              	.LBI9228:
 15685              		.loc 24 185 7 view .LVU3605
 15686              	.LBB9229:
 15687              	.LBI9229:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15688              		.loc 24 55 7 view .LVU3606
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15689              		.loc 24 55 7 is_stmt 0 view .LVU3607
 15690              	.LBE9229:
 15691              	.LBE9228:
 15692              	.LBB9230:
 15693              	.LBI9230:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 15694              		.loc 19 144 7 is_stmt 1 view .LVU3608
 15695              	.LBB9231:
 15696              	.LBI9231:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15697              		.loc 20 79 7 view .LVU3609
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15698              		.loc 20 79 7 is_stmt 0 view .LVU3610
 15699              	.LBE9231:
 15700              	.LBE9230:
 128:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 15701              		.loc 17 128 63 view .LVU3611
 15702 0224 3C49     		ldr	r1, .L712+36
 15703 0226 0AA8     		add	r0, sp, #40
 15704 0228 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 15705              	.LVL988:
 15706 022c 4849     		ldr	r1, .L712+92
 15707 022e 03A8     		add	r0, sp, #12
 15708 0230 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 558


 15709              	.LVL989:
 15710              	.LBB9232:
 15711              	.LBI9232:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 15712              		.loc 15 601 7 is_stmt 1 view .LVU3612
 15713              	.LBB9233:
 15714              	.LBB9234:
 15715              	.LBI9234:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15716              		.loc 15 240 5 view .LVU3613
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15717              		.loc 15 240 5 is_stmt 0 view .LVU3614
 15718              	.LBE9234:
 15719              	.LBB9235:
 15720              	.LBB9236:
 15721              	.LBI9236:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15722              		.loc 15 217 4 is_stmt 1 view .LVU3615
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15723              		.loc 15 217 4 is_stmt 0 view .LVU3616
 15724              	.LBE9236:
 15725              	.LBB9237:
 15726              	.LBI9237:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15727              		.loc 34 101 5 is_stmt 1 view .LVU3617
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15728              		.loc 34 101 5 is_stmt 0 view .LVU3618
 15729              	.LBE9237:
 15730              	.LBB9238:
 15731              	.LBI9238:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 15732              		.loc 15 207 2 is_stmt 1 view .LVU3619
 15733              	.LBB9239:
 15734              	.LBI9239:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15735              		.loc 15 232 2 view .LVU3620
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15736              		.loc 15 232 2 is_stmt 0 view .LVU3621
 15737              	.LBE9239:
 15738              	.LBE9238:
 15739              	.LBE9235:
 15740              	.LBE9233:
 15741              	.LBE9232:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 15742              		.loc 15 87 37 is_stmt 1 view .LVU3622
 15743              		.loc 23 175 3 view .LVU3623
 128:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 15744              		.loc 17 128 63 is_stmt 0 view .LVU3624
 15745 0234 0023     		movs	r3, #0
 15746 0236 03AA     		add	r2, sp, #12
 15747 0238 0AA9     		add	r1, sp, #40
 15748 023a 0094     		str	r4, [sp]
 15749 023c 10A8     		add	r0, sp, #64
 15750              	.LBB9245:
 15751              	.LBB9244:
 15752              	.LBB9243:
 15753              	.LBB9242:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 559


 15754              	.LBB9241:
 15755              	.LBB9240:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15756              		.loc 15 233 4 view .LVU3625
 15757 023e CDF818A0 		str	r10, [sp, #24]
 15758              	.LVL990:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15759              		.loc 15 233 4 view .LVU3626
 15760              	.LBE9240:
 15761              	.LBE9241:
 15762              	.LBE9242:
 15763              		.loc 15 611 17 view .LVU3627
 15764 0242 CDE90856 		strd	r5, r6, [sp, #32]
 15765              	.LVL991:
 15766              		.loc 15 611 17 view .LVU3628
 15767              	.LBE9243:
 15768              	.LBE9244:
 15769              	.LBE9245:
 128:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 15770              		.loc 17 128 63 view .LVU3629
 15771 0246 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 15772              	.LVL992:
 15773 024a 10A9     		add	r1, sp, #64
 15774 024c 4148     		ldr	r0, .L712+96
 15775 024e FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 15776              	.LVL993:
 128:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 15777              		.loc 17 128 20 view .LVU3630
 15778 0252 10A8     		add	r0, sp, #64
 15779 0254 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 15780              	.LVL994:
 15781              	.LBB9246:
 15782              	.LBI9246:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15783              		.loc 15 303 11 is_stmt 1 view .LVU3631
 15784              	.LBB9247:
 15785 0258 2046     		mov	r0, r4
 15786 025a FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 15787              	.LVL995:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15788              		.loc 15 303 11 is_stmt 0 view .LVU3632
 15789              	.LBE9247:
 15790              	.LBE9246:
 128:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 15791              		.loc 17 128 63 view .LVU3633
 15792 025e 03A8     		add	r0, sp, #12
 15793 0260 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 15794              	.LVL996:
 15795              	.LBB9248:
 15796              	.LBI9248:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 15797              		.loc 18 657 7 is_stmt 1 view .LVU3634
 15798              	.LBB9249:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15799              		.loc 18 658 19 is_stmt 0 view .LVU3635
 15800 0264 0AA8     		add	r0, sp, #40
 15801              	.LVL997:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 560


 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15802              		.loc 18 658 19 view .LVU3636
 15803 0266 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 15804              	.LVL998:
 15805              	.LBB9250:
 15806              	.LBI9250:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15807              		.loc 18 150 14 is_stmt 1 view .LVU3637
 15808              	.LBB9251:
 15809              	.LBI9251:
 15810              		.loc 19 162 7 view .LVU3638
 15811              	.LBB9252:
 15812              	.LBI9252:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15813              		.loc 20 89 7 view .LVU3639
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15814              		.loc 20 89 7 is_stmt 0 view .LVU3640
 15815              	.LBE9252:
 15816              	.LBE9251:
 15817              	.LBE9250:
 15818              	.LBE9249:
 15819              	.LBE9248:
 15820              	.LBB9253:
 15821              	.LBI9253:
 15822              		.loc 19 162 7 is_stmt 1 view .LVU3641
 15823              	.LBB9254:
 15824              	.LBI9254:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15825              		.loc 20 89 7 view .LVU3642
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15826              		.loc 20 89 7 is_stmt 0 view .LVU3643
 15827              	.LBE9254:
 15828              	.LBE9253:
 129:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cb);
 15829              		.loc 17 129 5 is_stmt 1 view .LVU3644
 15830              	.LBB9255:
 15831              	.LBI9255:
 15832              		.loc 24 185 7 view .LVU3645
 15833              	.LBB9256:
 15834              	.LBI9256:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15835              		.loc 24 55 7 view .LVU3646
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15836              		.loc 24 55 7 is_stmt 0 view .LVU3647
 15837              	.LBE9256:
 15838              	.LBE9255:
 15839              	.LBB9257:
 15840              	.LBI9257:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 15841              		.loc 19 144 7 is_stmt 1 view .LVU3648
 15842              	.LBB9258:
 15843              	.LBI9258:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15844              		.loc 20 79 7 view .LVU3649
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15845              		.loc 20 79 7 is_stmt 0 view .LVU3650
 15846              	.LBE9258:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 561


 15847              	.LBE9257:
 129:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cb);
 15848              		.loc 17 129 63 view .LVU3651
 15849 026a 3B49     		ldr	r1, .L712+100
 15850 026c 0AA8     		add	r0, sp, #40
 15851 026e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 15852              	.LVL999:
 15853 0272 3749     		ldr	r1, .L712+92
 15854 0274 03A8     		add	r0, sp, #12
 15855 0276 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 15856              	.LVL1000:
 15857              	.LBB9259:
 15858              	.LBI9259:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 15859              		.loc 15 601 7 is_stmt 1 view .LVU3652
 15860              	.LBB9260:
 15861              	.LBB9261:
 15862              	.LBI9261:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15863              		.loc 15 240 5 view .LVU3653
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15864              		.loc 15 240 5 is_stmt 0 view .LVU3654
 15865              	.LBE9261:
 15866              	.LBB9262:
 15867              	.LBB9263:
 15868              	.LBI9263:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15869              		.loc 15 217 4 is_stmt 1 view .LVU3655
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 15870              		.loc 15 217 4 is_stmt 0 view .LVU3656
 15871              	.LBE9263:
 15872              	.LBB9264:
 15873              	.LBI9264:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15874              		.loc 34 101 5 is_stmt 1 view .LVU3657
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15875              		.loc 34 101 5 is_stmt 0 view .LVU3658
 15876              	.LBE9264:
 15877              	.LBB9265:
 15878              	.LBI9265:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 15879              		.loc 15 207 2 is_stmt 1 view .LVU3659
 15880              	.LBB9266:
 15881              	.LBI9266:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15882              		.loc 15 232 2 view .LVU3660
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 15883              		.loc 15 232 2 is_stmt 0 view .LVU3661
 15884              	.LBE9266:
 15885              	.LBE9265:
 15886              	.LBE9262:
 15887              	.LBE9260:
 15888              	.LBE9259:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 15889              		.loc 15 87 37 is_stmt 1 view .LVU3662
 15890              		.loc 23 175 3 view .LVU3663
 129:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cb);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 562


 15891              		.loc 17 129 63 is_stmt 0 view .LVU3664
 15892 027a 0023     		movs	r3, #0
 15893 027c 03AA     		add	r2, sp, #12
 15894 027e 0AA9     		add	r1, sp, #40
 15895 0280 0094     		str	r4, [sp]
 15896 0282 10A8     		add	r0, sp, #64
 15897              	.LBB9272:
 15898              	.LBB9271:
 15899              	.LBB9270:
 15900              	.LBB9269:
 15901              	.LBB9268:
 15902              	.LBB9267:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15903              		.loc 15 233 4 view .LVU3665
 15904 0284 CDF818A0 		str	r10, [sp, #24]
 15905              	.LVL1001:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 15906              		.loc 15 233 4 view .LVU3666
 15907              	.LBE9267:
 15908              	.LBE9268:
 15909              	.LBE9269:
 15910              		.loc 15 611 17 view .LVU3667
 15911 0288 CDE90856 		strd	r5, r6, [sp, #32]
 15912              	.LVL1002:
 15913              		.loc 15 611 17 view .LVU3668
 15914              	.LBE9270:
 15915              	.LBE9271:
 15916              	.LBE9272:
 129:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cb);
 15917              		.loc 17 129 63 view .LVU3669
 15918 028c FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 15919              	.LVL1003:
 15920 0290 10A9     		add	r1, sp, #64
 15921 0292 3248     		ldr	r0, .L712+104
 15922 0294 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 15923              	.LVL1004:
 129:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cb);
 15924              		.loc 17 129 20 view .LVU3670
 15925 0298 10A8     		add	r0, sp, #64
 15926 029a FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 15927              	.LVL1005:
 15928              	.LBB9273:
 15929              	.LBI9273:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15930              		.loc 15 303 11 is_stmt 1 view .LVU3671
 15931              	.LBB9274:
 15932 029e 2046     		mov	r0, r4
 15933 02a0 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 15934              	.LVL1006:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15935              		.loc 15 303 11 is_stmt 0 view .LVU3672
 15936              	.LBE9274:
 15937              	.LBE9273:
 129:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cb);
 15938              		.loc 17 129 63 view .LVU3673
 15939 02a4 03A8     		add	r0, sp, #12
 15940 02a6 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 563


 15941              	.LVL1007:
 15942              	.LBB9275:
 15943              	.LBI9275:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 15944              		.loc 18 657 7 is_stmt 1 view .LVU3674
 15945              	.LBB9276:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15946              		.loc 18 658 19 is_stmt 0 view .LVU3675
 15947 02aa 0AA8     		add	r0, sp, #40
 15948              	.LVL1008:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15949              		.loc 18 658 19 view .LVU3676
 15950 02ac FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 15951              	.LVL1009:
 15952              	.LBB9277:
 15953              	.LBI9277:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15954              		.loc 18 150 14 is_stmt 1 view .LVU3677
 15955              	.LBB9278:
 15956              	.LBI9278:
 15957              		.loc 19 162 7 view .LVU3678
 15958              	.LBB9279:
 15959              	.LBI9279:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15960              		.loc 20 89 7 view .LVU3679
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15961              		.loc 20 89 7 is_stmt 0 view .LVU3680
 15962              	.LBE9279:
 15963              	.LBE9278:
 15964              	.LBE9277:
 15965              	.LBE9276:
 15966              	.LBE9275:
 15967              	.LBB9280:
 15968              	.LBI9280:
 15969              		.loc 19 162 7 is_stmt 1 view .LVU3681
 15970              	.LBB9281:
 15971              	.LBI9281:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15972              		.loc 20 89 7 view .LVU3682
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15973              		.loc 20 89 7 is_stmt 0 view .LVU3683
 15974              	.LBE9281:
 15975              	.LBE9280:
 130:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 15976              		.loc 17 130 5 is_stmt 1 view .LVU3684
 15977              	.LBB9282:
 15978              	.LBI9282:
 15979              		.loc 24 185 7 view .LVU3685
 15980              	.LBB9283:
 15981              	.LBI9283:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15982              		.loc 24 55 7 view .LVU3686
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 15983              		.loc 24 55 7 is_stmt 0 view .LVU3687
 15984              	.LBE9283:
 15985              	.LBE9282:
 15986              	.LBB9284:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 564


 15987              	.LBI9284:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 15988              		.loc 19 144 7 is_stmt 1 view .LVU3688
 15989              	.LBB9285:
 15990              	.LBI9285:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15991              		.loc 20 79 7 view .LVU3689
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15992              		.loc 20 79 7 is_stmt 0 view .LVU3690
 15993              	.LBE9285:
 15994              	.LBE9284:
 130:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 15995              		.loc 17 130 63 view .LVU3691
 15996 02b0 2B49     		ldr	r1, .L712+108
 15997 02b2 0AA8     		add	r0, sp, #40
 15998 02b4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 15999              	.LVL1010:
 16000 02b8 4946     		mov	r1, r9
 16001 02ba 03A8     		add	r0, sp, #12
 16002 02bc FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 16003              	.LVL1011:
 16004              	.LBB9286:
 16005              	.LBI9286:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 16006              		.loc 15 601 7 is_stmt 1 view .LVU3692
 16007              	.LBB9287:
 16008              	.LBB9288:
 16009              	.LBI9288:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16010              		.loc 15 240 5 view .LVU3693
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16011              		.loc 15 240 5 is_stmt 0 view .LVU3694
 16012              	.LBE9288:
 16013              	.LBB9289:
 16014              	.LBB9290:
 16015              	.LBI9290:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 16016              		.loc 15 217 4 is_stmt 1 view .LVU3695
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 16017              		.loc 15 217 4 is_stmt 0 view .LVU3696
 16018              	.LBE9290:
 16019              	.LBB9291:
 16020              	.LBI9291:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 16021              		.loc 34 101 5 is_stmt 1 view .LVU3697
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 16022              		.loc 34 101 5 is_stmt 0 view .LVU3698
 16023              	.LBE9291:
 16024              	.LBB9292:
 16025              	.LBI9292:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 16026              		.loc 15 207 2 is_stmt 1 view .LVU3699
 16027              	.LBB9293:
 16028              	.LBI9293:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 16029              		.loc 15 232 2 view .LVU3700
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 565


 16030              		.loc 15 232 2 is_stmt 0 view .LVU3701
 16031              	.LBE9293:
 16032              	.LBE9292:
 16033              	.LBE9289:
 16034              	.LBE9287:
 16035              	.LBE9286:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 16036              		.loc 15 87 37 is_stmt 1 view .LVU3702
 16037              		.loc 23 175 3 view .LVU3703
 130:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 16038              		.loc 17 130 63 is_stmt 0 view .LVU3704
 16039 02c0 0023     		movs	r3, #0
 16040 02c2 03AA     		add	r2, sp, #12
 16041 02c4 0AA9     		add	r1, sp, #40
 16042 02c6 0094     		str	r4, [sp]
 16043 02c8 10A8     		add	r0, sp, #64
 16044              	.LBB9299:
 16045              	.LBB9298:
 16046              	.LBB9297:
 16047              	.LBB9296:
 16048              	.LBB9295:
 16049              	.LBB9294:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16050              		.loc 15 233 4 view .LVU3705
 16051 02ca CDF818A0 		str	r10, [sp, #24]
 16052              	.LVL1012:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16053              		.loc 15 233 4 view .LVU3706
 16054              	.LBE9294:
 16055              	.LBE9295:
 16056              	.LBE9296:
 16057              		.loc 15 611 17 view .LVU3707
 16058 02ce CDE90856 		strd	r5, r6, [sp, #32]
 16059              	.LVL1013:
 16060              		.loc 15 611 17 view .LVU3708
 16061              	.LBE9297:
 16062              	.LBE9298:
 16063              	.LBE9299:
 130:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 16064              		.loc 17 130 63 view .LVU3709
 16065 02d2 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 16066              	.LVL1014:
 16067 02d6 10A9     		add	r1, sp, #64
 16068 02d8 2248     		ldr	r0, .L712+112
 16069 02da FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 16070              	.LVL1015:
 130:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 16071              		.loc 17 130 20 view .LVU3710
 16072 02de 10A8     		add	r0, sp, #64
 16073 02e0 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 16074              	.LVL1016:
 16075              	.LBB9300:
 16076              	.LBI9300:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 16077              		.loc 15 303 11 is_stmt 1 view .LVU3711
 16078              	.LBB9301:
 16079 02e4 2046     		mov	r0, r4
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 566


 16080 02e6 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 16081              	.LVL1017:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 16082              		.loc 15 303 11 is_stmt 0 view .LVU3712
 16083              	.LBE9301:
 16084              	.LBE9300:
 130:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 16085              		.loc 17 130 63 view .LVU3713
 16086 02ea 03A8     		add	r0, sp, #12
 16087 02ec FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 16088              	.LVL1018:
 16089 02f0 42E0     		b	.L713
 16090              	.L714:
 16091 02f2 00BF     		.align	2
 16092              	.L712:
 16093 02f4 00000000 		.word	patch
 16094 02f8 00000000 		.word	.LANCHOR0
 16095 02fc 00000000 		.word	.LC11
 16096 0300 00000000 		.word	_Z9cbPatternv
 16097 0304 00000000 		.word	_ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data
 16098 0308 00000000 		.word	_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation
 16099 030c 00000000 		.word	.LANCHOR19
 16100 0310 00000000 		.word	0
 16101 0314 00000000 		.word	.LANCHOR4
 16102 0318 0C000000 		.word	.LC12
 16103 031c 50000000 		.word	.LANCHOR4+80
 16104 0320 18000000 		.word	.LC13
 16105 0324 00000000 		.word	_Z9cbVoicingv
 16106 0328 A0000000 		.word	.LANCHOR4+160
 16107 032c F0000000 		.word	.LANCHOR4+240
 16108 0330 24000000 		.word	.LC14
 16109 0334 00000000 		.word	.LANCHOR20
 16110 0338 40010000 		.word	.LANCHOR4+320
 16111 033c 30000000 		.word	.LC15
 16112 0340 00000000 		.word	.LANCHOR21
 16113 0344 90010000 		.word	.LANCHOR4+400
 16114 0348 00000000 		.word	.LANCHOR22
 16115 034c E0010000 		.word	.LANCHOR4+480
 16116 0350 00000000 		.word	.LANCHOR23
 16117 0354 30020000 		.word	.LANCHOR4+560
 16118 0358 3C000000 		.word	.LC16
 16119 035c 80020000 		.word	.LANCHOR4+640
 16120 0360 48000000 		.word	.LC17
 16121 0364 D0020000 		.word	.LANCHOR4+720
 16122 0368 00000000 		.word	.LANCHOR16
 16123 036c 00000000 		.word	.LANCHOR17
 16124 0370 00000000 		.word	_Z2cbv
 16125 0374 00000000 		.word	.LANCHOR18
 16126              	.L713:
 16127              	.LVL1019:
 16128              	.LBB9302:
 16129              	.LBI9302:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 16130              		.loc 18 657 7 is_stmt 1 view .LVU3714
 16131              	.LBB9303:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16132              		.loc 18 658 19 is_stmt 0 view .LVU3715
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 567


 16133 0378 0AA8     		add	r0, sp, #40
 16134              	.LVL1020:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16135              		.loc 18 658 19 view .LVU3716
 16136 037a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 16137              	.LVL1021:
 16138              	.LBB9304:
 16139              	.LBI9304:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16140              		.loc 18 150 14 is_stmt 1 view .LVU3717
 16141              	.LBB9305:
 16142              	.LBI9305:
 16143              		.loc 19 162 7 view .LVU3718
 16144              	.LBB9306:
 16145              	.LBI9306:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16146              		.loc 20 89 7 view .LVU3719
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16147              		.loc 20 89 7 is_stmt 0 view .LVU3720
 16148              	.LBE9306:
 16149              	.LBE9305:
 16150              	.LBE9304:
 16151              	.LBE9303:
 16152              	.LBE9302:
 16153              	.LBB9307:
 16154              	.LBI9307:
 16155              		.loc 19 162 7 is_stmt 1 view .LVU3721
 16156              	.LBB9308:
 16157              	.LBI9308:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16158              		.loc 20 89 7 view .LVU3722
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16159              		.loc 20 89 7 is_stmt 0 view .LVU3723
 16160              	.LBE9308:
 16161              	.LBE9307:
 133:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 16162              		.loc 17 133 5 is_stmt 1 view .LVU3724
 16163              	.LBB9309:
 16164              	.LBB9310:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 16165              		.loc 26 919 50 is_stmt 0 view .LVU3725
 16166 037e 544E     		ldr	r6, .L715
 16167              	.LBE9310:
 16168              	.LBE9309:
 133:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 16169              		.loc 17 133 39 view .LVU3726
 16170 0380 544D     		ldr	r5, .L715+4
 16171 0382 10AC     		add	r4, sp, #64
 133:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 16172              		.loc 17 133 22 view .LVU3727
 16173 0384 B0EE480A 		vmov.f32	s0, s16
 16174              	.LBB9312:
 16175              	.LBB9311:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 16176              		.loc 26 919 50 view .LVU3728
 16177 0388 DBE90023 		ldrd	r2, r3, [fp]
 16178 038c 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 568


 16179 038e DB10     		asrs	r3, r3, #3
 16180 0390 06FB03F3 		mul	r3, r6, r3
 16181 0394 00EE903A 		vmov	s1, r3	@ int
 16182              	.LBE9311:
 16183              	.LBE9312:
 133:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 16184              		.loc 17 133 39 view .LVU3729
 16185 0398 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16186 039a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 16187 039c 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 133:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 16188              		.loc 17 133 22 view .LVU3730
 16189 03a0 F8EE600A 		vcvt.f32.u32	s1, s1
 133:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 16190              		.loc 17 133 39 view .LVU3731
 16191 03a4 84E80F00 		stm	r4, {r0, r1, r2, r3}
 16192              	.LVL1022:
 16193              	.LBB9313:
 16194              	.LBI9309:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 16195              		.loc 26 918 7 is_stmt 1 view .LVU3732
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 16196              		.loc 26 918 7 is_stmt 0 view .LVU3733
 16197              	.LBE9313:
 133:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 16198              		.loc 17 133 22 view .LVU3734
 16199 03a8 0022     		movs	r2, #0
 16200 03aa 10A9     		add	r1, sp, #64
 16201 03ac 4A48     		ldr	r0, .L715+8
 16202 03ae FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 16203              	.LVL1023:
 16204              	.LBB9314:
 16205              	.LBI9314:
 16206              		.loc 2 23 5 is_stmt 1 view .LVU3735
 16207              		.loc 2 23 5 is_stmt 0 view .LVU3736
 16208              	.LBE9314:
 134:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 16209              		.loc 17 134 5 is_stmt 1 view .LVU3737
 134:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 16210              		.loc 17 134 40 is_stmt 0 view .LVU3738
 16211 03b2 05F1100C 		add	ip, r5, #16
 16212 03b6 0DF1400E 		add	lr, sp, #64
 134:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 16213              		.loc 17 134 23 view .LVU3739
 16214 03ba B0EE480A 		vmov.f32	s0, s16
 16215              	.LBB9315:
 16216              	.LBB9316:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 16217              		.loc 26 919 50 view .LVU3740
 16218 03be D9E90023 		ldrd	r2, r3, [r9]
 16219 03c2 9B1A     		subs	r3, r3, r2
 16220 03c4 DB10     		asrs	r3, r3, #3
 16221 03c6 06FB03F3 		mul	r3, r6, r3
 16222 03ca 00EE903A 		vmov	s1, r3	@ int
 16223              	.LBE9316:
 16224              	.LBE9315:
 134:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 569


 16225              		.loc 17 134 40 view .LVU3741
 16226 03ce BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 16227 03d2 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 16228 03d6 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 134:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 16229              		.loc 17 134 23 view .LVU3742
 16230 03da F8EE600A 		vcvt.f32.u32	s1, s1
 134:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 16231              		.loc 17 134 40 view .LVU3743
 16232 03de 84E80F00 		stm	r4, {r0, r1, r2, r3}
 16233              	.LVL1024:
 16234              	.LBB9317:
 16235              	.LBI9315:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 16236              		.loc 26 918 7 is_stmt 1 view .LVU3744
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 16237              		.loc 26 918 7 is_stmt 0 view .LVU3745
 16238              	.LBE9317:
 134:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 16239              		.loc 17 134 23 view .LVU3746
 16240 03e2 0022     		movs	r2, #0
 16241 03e4 10A9     		add	r1, sp, #64
 16242 03e6 3D48     		ldr	r0, .L715+12
 16243 03e8 FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 16244              	.LVL1025:
 16245              	.LBB9318:
 16246              	.LBI9318:
 16247              		.loc 2 23 5 is_stmt 1 view .LVU3747
 16248              		.loc 2 23 5 is_stmt 0 view .LVU3748
 16249              	.LBE9318:
 135:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 16250              		.loc 17 135 5 is_stmt 1 view .LVU3749
 135:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 16251              		.loc 17 135 39 is_stmt 0 view .LVU3750
 16252 03ec 05F1300C 		add	ip, r5, #48
 16253 03f0 0DF1400E 		add	lr, sp, #64
 135:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 16254              		.loc 17 135 22 view .LVU3751
 16255 03f4 B0EE480A 		vmov.f32	s0, s16
 16256              	.LBB9319:
 16257              	.LBB9320:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 16258              		.loc 26 919 50 view .LVU3752
 16259 03f8 D8E90023 		ldrd	r2, r3, [r8]
 16260 03fc 9B1A     		subs	r3, r3, r2
 16261 03fe DB10     		asrs	r3, r3, #3
 16262 0400 06FB03F3 		mul	r3, r6, r3
 16263 0404 00EE903A 		vmov	s1, r3	@ int
 16264              	.LBE9320:
 16265              	.LBE9319:
 135:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 16266              		.loc 17 135 39 view .LVU3753
 16267 0408 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 16268 040c AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 16269 0410 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 135:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 16270              		.loc 17 135 22 view .LVU3754
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 570


 16271 0414 F8EE600A 		vcvt.f32.u32	s1, s1
 135:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 16272              		.loc 17 135 39 view .LVU3755
 16273 0418 84E80F00 		stm	r4, {r0, r1, r2, r3}
 16274              	.LVL1026:
 16275              	.LBB9321:
 16276              	.LBI9319:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 16277              		.loc 26 918 7 is_stmt 1 view .LVU3756
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 16278              		.loc 26 918 7 is_stmt 0 view .LVU3757
 16279              	.LBE9321:
 135:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 16280              		.loc 17 135 22 view .LVU3758
 16281 041c 0022     		movs	r2, #0
 16282 041e 10A9     		add	r1, sp, #64
 16283 0420 2F48     		ldr	r0, .L715+16
 16284 0422 FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 16285              	.LVL1027:
 16286              	.LBB9322:
 16287              	.LBI9322:
 16288              		.loc 2 23 5 is_stmt 1 view .LVU3759
 16289              		.loc 2 23 5 is_stmt 0 view .LVU3760
 16290              	.LBE9322:
 136:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 16291              		.loc 17 136 5 is_stmt 1 view .LVU3761
 136:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 16292              		.loc 17 136 41 is_stmt 0 view .LVU3762
 16293 0426 05F1500C 		add	ip, r5, #80
 136:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 16294              		.loc 17 136 24 view .LVU3763
 16295 042a B0EE480A 		vmov.f32	s0, s16
 16296              	.LBB9323:
 16297              	.LBB9324:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 16298              		.loc 26 919 50 view .LVU3764
 16299 042e D7E90023 		ldrd	r2, r3, [r7]
 16300 0432 9B1A     		subs	r3, r3, r2
 16301 0434 DB10     		asrs	r3, r3, #3
 16302 0436 06FB03F3 		mul	r3, r6, r3
 16303              	.LBE9324:
 16304              	.LBE9323:
 136:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 16305              		.loc 17 136 41 view .LVU3765
 16306 043a 10AE     		add	r6, sp, #64
 16307              	.LBB9326:
 16308              	.LBB9325:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 16309              		.loc 26 919 50 view .LVU3766
 16310 043c 00EE903A 		vmov	s1, r3	@ int
 16311              	.LBE9325:
 16312              	.LBE9326:
 136:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 16313              		.loc 17 136 41 view .LVU3767
 16314 0440 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 16315 0444 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 16316 0446 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 571


 136:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 16317              		.loc 17 136 24 view .LVU3768
 16318 044a F8EE600A 		vcvt.f32.u32	s1, s1
 136:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 16319              		.loc 17 136 41 view .LVU3769
 16320 044e 84E80F00 		stm	r4, {r0, r1, r2, r3}
 16321              	.LVL1028:
 16322              	.LBB9327:
 16323              	.LBI9323:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 16324              		.loc 26 918 7 is_stmt 1 view .LVU3770
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 16325              		.loc 26 918 7 is_stmt 0 view .LVU3771
 16326              	.LBE9327:
 136:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 16327              		.loc 17 136 24 view .LVU3772
 16328 0452 10A9     		add	r1, sp, #64
 16329 0454 0022     		movs	r2, #0
 16330 0456 2348     		ldr	r0, .L715+20
 16331 0458 FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 16332              	.LVL1029:
 16333              	.LBB9328:
 16334              	.LBI9328:
 16335              		.loc 2 23 5 is_stmt 1 view .LVU3773
 16336              		.loc 2 23 5 is_stmt 0 view .LVU3774
 16337              	.LBE9328:
 137:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 16338              		.loc 17 137 5 is_stmt 1 view .LVU3775
 137:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 16339              		.loc 17 137 62 is_stmt 0 view .LVU3776
 16340 045c 1E48     		ldr	r0, .L715+8
 16341 045e FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 16342              	.LVL1030:
 137:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 16343              		.loc 17 137 25 view .LVU3777
 16344 0462 BDEEC00A 		vcvt.s32.f32	s0, s0
 137:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 16345              		.loc 17 137 23 view .LVU3778
 16346 0466 204B     		ldr	r3, .L715+24
 138:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 16347              		.loc 17 138 63 view .LVU3779
 16348 0468 1C48     		ldr	r0, .L715+12
 137:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 16349              		.loc 17 137 25 view .LVU3780
 16350 046a 83ED000A 		vstr.32	s0, [r3]	@ int
 138:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 16351              		.loc 17 138 5 is_stmt 1 view .LVU3781
 138:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 16352              		.loc 17 138 63 is_stmt 0 view .LVU3782
 16353 046e FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 16354              	.LVL1031:
 138:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 16355              		.loc 17 138 25 view .LVU3783
 16356 0472 BDEEC00A 		vcvt.s32.f32	s0, s0
 138:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 16357              		.loc 17 138 23 view .LVU3784
 16358 0476 1D4B     		ldr	r3, .L715+28
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 572


 139:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 16359              		.loc 17 139 62 view .LVU3785
 16360 0478 1948     		ldr	r0, .L715+16
 138:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 16361              		.loc 17 138 25 view .LVU3786
 16362 047a 83ED000A 		vstr.32	s0, [r3]	@ int
 139:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 16363              		.loc 17 139 5 is_stmt 1 view .LVU3787
 139:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 16364              		.loc 17 139 62 is_stmt 0 view .LVU3788
 16365 047e FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 16366              	.LVL1032:
 139:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 16367              		.loc 17 139 25 view .LVU3789
 16368 0482 BDEEC00A 		vcvt.s32.f32	s0, s0
 139:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 16369              		.loc 17 139 23 view .LVU3790
 16370 0486 1A4B     		ldr	r3, .L715+32
 140:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 16371              		.loc 17 140 64 view .LVU3791
 16372 0488 1648     		ldr	r0, .L715+20
 139:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 16373              		.loc 17 139 25 view .LVU3792
 16374 048a 83ED000A 		vstr.32	s0, [r3]	@ int
 140:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 16375              		.loc 17 140 5 is_stmt 1 view .LVU3793
 140:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 16376              		.loc 17 140 64 is_stmt 0 view .LVU3794
 16377 048e FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 16378              	.LVL1033:
 140:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 16379              		.loc 17 140 25 view .LVU3795
 16380 0492 BDEEC00A 		vcvt.s32.f32	s0, s0
 140:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 16381              		.loc 17 140 23 view .LVU3796
 16382 0496 174B     		ldr	r3, .L715+36
 144:Jellybeans.cpp ****     menuPos     = 0;
 16383              		.loc 17 144 17 view .LVU3797
 16384 0498 0021     		movs	r1, #0
 16385 049a 174A     		ldr	r2, .L715+40
 16386              	.LBB9329:
 16387              	.LBB9330:
 16388              	.LBB9331:
 16389              	.LBB9332:
 16390              	.LBB9333:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16391              		.loc 18 902 16 view .LVU3798
 16392 049c 1748     		ldr	r0, .L715+44
 16393              	.LBE9333:
 16394              	.LBE9332:
 16395              	.LBE9331:
 16396              	.LBE9330:
 16397              	.LBE9329:
 140:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 16398              		.loc 17 140 25 view .LVU3799
 16399 049e 83ED000A 		vstr.32	s0, [r3]	@ int
 143:Jellybeans.cpp ****     arpNoteDacOutput1 = 0.f;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 573


 16400              		.loc 17 143 5 is_stmt 1 view .LVU3800
 143:Jellybeans.cpp ****     arpNoteDacOutput1 = 0.f;
 16401              		.loc 17 143 23 is_stmt 0 view .LVU3801
 16402 04a2 174B     		ldr	r3, .L715+48
 16403 04a4 83ED008A 		vstr.32	s16, [r3]
 144:Jellybeans.cpp ****     menuPos     = 0;
 16404              		.loc 17 144 5 is_stmt 1 view .LVU3802
 16405              	.LBB9343:
 16406              	.LBB9339:
 16407              	.LBB9335:
1035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// and in C++11 mode.
1038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
1039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
1042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
1047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (const) reference to the character.
1048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
1051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
1052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
1053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n) const
1056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= this->size())
1058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
1060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
1061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
1062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
1063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
1068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
1069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
1072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
1073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
1074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n)
1077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= size())
1079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
1081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 574


1082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
1083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
1084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the first
1089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() noexcept
1093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
1096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() const noexcept
1104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
1107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the last
1111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() noexcept
1115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
1118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last element of the %string.
1123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() const noexcept
1126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
1129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Modifiers:
1133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
1135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 575


1139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const basic_string& __str)
1140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__str); }
1141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
1144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const _CharT* __s)
1149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__s); }
1150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a character.
1153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to append.
1154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(_CharT __c)
1158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->push_back(__c);
1160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
1166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
1177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator+=(const _Tp& __svt)
1183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->append(__svt); }
1184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
1188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str)
1193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 576


1196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a substring.
1197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function appends @a __n characters from @a __str
1204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  than the number of available characters in @a __str, the
1206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  remainder of @a __str is appended.
1207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos)
1210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_append(__str._M_data()
1211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C substring.
1216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s, size_type __n)
1222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_append(__s, __n);
1226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
1230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s)
1235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __n = traits_type::length(__s);
1238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_append(__s, __n);
1240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append multiple characters.
1244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
1246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends __n copies of __c to this string.
1249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(size_type __n, _CharT __c)
1252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 577


1253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
1257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(initializer_list<_CharT> __l)
1262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters.
1267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
1275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
1278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
1280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
1286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
1291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(const _Tp& __svt)
1292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
1293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           __sv_type __sv = __svt;
1294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->append(__sv.data(), __sv.size());
1295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
1296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos The position in the string_view to append from.
1301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
1306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_append(__sv.data()
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 578


1310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
1311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a single character.
1317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to append.
1318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       push_back(_CharT __c)
1321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
1323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__size + 1 > this->capacity())
1324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_set_length(__size + 1);
1327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
1331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
1332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str)
1336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
1339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
1340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
1341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
1342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
1343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		// Propagating allocator cannot free existing storage so must
1344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		// deallocate it before replacing current allocator.
1345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		if (__str.size() <= _S_local_capacity)
1346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
1347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_data(_M_local_data());
1349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_set_length(0);
1350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
1351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		else
1352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
1353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    const auto __len = __str.size();
1354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
1355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    // If this allocation throws there are no effects:
1356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
1357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_data(__ptr);
1359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_capacity(__len);
1360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_set_length(__len);
1361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
1362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
1363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
1364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
1365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_assign(__str);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 579


1367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
1373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
1374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
1378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(basic_string&& __str)
1381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this = std::move(__str);
1386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a substring of a string.
1391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to use.
1392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str.
1393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
1394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the substring of @a __str
1398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is larger than the number of available characters in @a
1400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, the remainder of @a __str is used.
1401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
1404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a C substring.
1410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
1411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
1412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the first @a __n
1415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s, size_type __n)
1420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 580


1424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of a C string.
1427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
1428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function returns.
1433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s)
1436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
 16408              		.loc 18 1438 19 is_stmt 0 view .LVU3803
 16409 04a8 1223     		movs	r3, #18
 16410 04aa 0093     		str	r3, [sp]
 16411              	.LBE9335:
 16412              	.LBE9339:
 16413              	.LBE9343:
 144:Jellybeans.cpp ****     menuPos     = 0;
 16414              		.loc 17 144 17 view .LVU3804
 16415 04ac 1160     		str	r1, [r2]
 145:Jellybeans.cpp ****     isEditing   = false;
 16416              		.loc 17 145 5 is_stmt 1 view .LVU3805
 145:Jellybeans.cpp ****     isEditing   = false;
 16417              		.loc 17 145 17 is_stmt 0 view .LVU3806
 16418 04ae 154A     		ldr	r2, .L715+52
 16419              	.LBB9344:
 16420              	.LBB9340:
 16421              	.LBB9336:
 16422              		.loc 18 1438 19 view .LVU3807
 16423 04b0 154B     		ldr	r3, .L715+56
 16424              	.LBE9336:
 16425              	.LBE9340:
 16426              	.LBE9344:
 145:Jellybeans.cpp ****     isEditing   = false;
 16427              		.loc 17 145 17 view .LVU3808
 16428 04b2 1170     		strb	r1, [r2]
 146:Jellybeans.cpp ****     debugString = "I'm a debug string";
 16429              		.loc 17 146 5 is_stmt 1 view .LVU3809
 16430              	.LVL1034:
 16431              	.LBB9345:
 16432              	.LBI9329:
 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 16433              		.loc 18 675 7 view .LVU3810
 16434              	.LBB9341:
 16435              	.LBI9330:
1435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16436              		.loc 18 1435 7 view .LVU3811
 16437              	.LBB9337:
 16438              	.LBB9334:
 16439              	.LBI9332:
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 16440              		.loc 18 901 7 view .LVU3812
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 581


 16441              		.loc 18 901 7 is_stmt 0 view .LVU3813
 16442              	.LBE9334:
 16443              	.LBE9337:
 16444              	.LBE9341:
 16445              	.LBE9345:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16446              		.loc 21 357 2 is_stmt 1 view .LVU3814
 16447              	.LBB9346:
 16448              	.LBB9342:
 16449              	.LBB9338:
 16450              		.loc 18 1438 19 is_stmt 0 view .LVU3815
 16451 04b4 4268     		ldr	r2, [r0, #4]
 16452 04b6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
 16453              	.LVL1035:
 16454              		.loc 18 1438 19 view .LVU3816
 16455              	.LBE9338:
 16456              	.LBE9342:
 16457              	.LBE9346:
 148:Jellybeans.cpp ****     patch.StartAdc();
 16458              		.loc 17 148 5 is_stmt 1 view .LVU3817
 148:Jellybeans.cpp ****     patch.StartAdc();
 16459              		.loc 17 148 19 is_stmt 0 view .LVU3818
 16460 04ba A5F16800 		sub	r0, r5, #104
 16461 04be FFF7FEFF 		bl	_ZN5daisy10DaisyPatch8StartAdcEv
 16462              	.LVL1036:
 16463              	.L710:
 151:Jellybeans.cpp ****     while(1){
 16464              		.loc 17 151 5 is_stmt 1 discriminator 1 view .LVU3819
 152:Jellybeans.cpp ****         updateControls();
 16465              		.loc 17 152 9 discriminator 1 view .LVU3820
 152:Jellybeans.cpp ****         updateControls();
 16466              		.loc 17 152 23 is_stmt 0 discriminator 1 view .LVU3821
 16467 04c2 FFF7FEFF 		bl	_Z14updateControlsv
 16468              	.LVL1037:
 153:Jellybeans.cpp ****         updateOled();
 16469              		.loc 17 153 9 is_stmt 1 discriminator 1 view .LVU3822
 153:Jellybeans.cpp ****         updateOled();
 16470              		.loc 17 153 19 is_stmt 0 discriminator 1 view .LVU3823
 16471 04c6 FFF7FEFF 		bl	_Z10updateOledv
 16472              	.LVL1038:
 154:Jellybeans.cpp ****         updateOutputs();
 16473              		.loc 17 154 9 is_stmt 1 discriminator 1 view .LVU3824
 154:Jellybeans.cpp ****         updateOutputs();
 16474              		.loc 17 154 22 is_stmt 0 discriminator 1 view .LVU3825
 16475 04ca FFF7FEFF 		bl	_Z13updateOutputsv
 16476              	.LVL1039:
 151:Jellybeans.cpp ****     while(1){
 16477              		.loc 17 151 5 is_stmt 1 discriminator 1 view .LVU3826
 16478 04ce F8E7     		b	.L710
 16479              	.L716:
 16480              		.align	2
 16481              	.L715:
 16482 04d0 ABAAAAAA 		.word	-1431655765
 16483 04d4 58000000 		.word	patch+88
 16484 04d8 00000000 		.word	.LANCHOR2
 16485 04dc 00000000 		.word	.LANCHOR5
 16486 04e0 00000000 		.word	.LANCHOR7
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 582


 16487 04e4 00000000 		.word	.LANCHOR9
 16488 04e8 00000000 		.word	.LANCHOR3
 16489 04ec 00000000 		.word	.LANCHOR6
 16490 04f0 00000000 		.word	.LANCHOR8
 16491 04f4 00000000 		.word	.LANCHOR10
 16492 04f8 00000000 		.word	.LANCHOR12
 16493 04fc 00000000 		.word	.LANCHOR14
 16494 0500 00000000 		.word	.LANCHOR24
 16495 0504 00000000 		.word	.LANCHOR11
 16496 0508 54000000 		.word	.LC18
 16497              		.cfi_endproc
 16498              	.LFE5114:
 16500              		.section	.text._ZNSt12_Vector_baseIiSaIiEED2Ev,"axG",%progbits,_ZNSt12_Vector_baseIiSaIiEED5Ev,com
 16501              		.align	1
 16502              		.p2align 2,,3
 16503              		.weak	_ZNSt12_Vector_baseIiSaIiEED2Ev
 16504              		.syntax unified
 16505              		.thumb
 16506              		.thumb_func
 16507              		.fpu fpv5-d16
 16509              	_ZNSt12_Vector_baseIiSaIiEED2Ev:
 16510              	.LVL1040:
 16511              	.LFB5698:
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 16512              		.loc 26 333 7 view -0
 16513              		.cfi_startproc
 16514              		@ args = 0, pretend = 0, frame = 0
 16515              		@ frame_needed = 0, uses_anonymous_args = 0
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 16516              		.loc 26 333 7 is_stmt 0 view .LVU3828
 16517 0000 10B5     		push	{r4, lr}
 16518              		.cfi_def_cfa_offset 8
 16519              		.cfi_offset 4, -8
 16520              		.cfi_offset 14, -4
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 16521              		.loc 26 333 7 view .LVU3829
 16522 0002 0446     		mov	r4, r0
 16523              	.LBB9347:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 16524              		.loc 26 335 15 view .LVU3830
 16525 0004 0068     		ldr	r0, [r0]
 16526              	.LVL1041:
 16527              	.LBB9348:
 16528              	.LBI9348:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 16529              		.loc 26 350 7 is_stmt 1 view .LVU3831
 16530              	.LBB9349:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 16531              		.loc 26 353 2 is_stmt 0 view .LVU3832
 16532 0006 18B1     		cbz	r0, .L718
 16533              	.LVL1042:
 16534              	.LBB9350:
 16535              	.LBI9350:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 16536              		.loc 25 491 7 is_stmt 1 view .LVU3833
 16537              	.LBB9351:
 16538              	.LBB9352:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 583


 16539              	.LBI9352:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 16540              		.loc 20 120 7 view .LVU3834
 16541              	.LBE9352:
 16542              	.LBE9351:
 16543              	.LBE9350:
 16544              	.LBE9349:
 16545              	.LBE9348:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 16546              		.loc 26 336 35 is_stmt 0 view .LVU3835
 16547 0008 A168     		ldr	r1, [r4, #8]
 16548              	.LBB9358:
 16549              	.LBB9357:
 16550              	.LBB9356:
 16551              	.LBB9355:
 16552              	.LBB9354:
 16553              	.LBB9353:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 16554              		.loc 20 133 19 view .LVU3836
 16555 000a 091A     		subs	r1, r1, r0
 16556 000c FFF7FEFF 		bl	_ZdlPvj
 16557              	.LVL1043:
 16558              	.L718:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 16559              		.loc 20 133 19 view .LVU3837
 16560              	.LBE9353:
 16561              	.LBE9354:
 16562              	.LBE9355:
 16563              	.LBE9356:
 16564              	.LBE9357:
 16565              	.LBE9358:
 16566              	.LBB9359:
 16567              	.LBI9359:
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 16568              		.loc 26 128 14 is_stmt 1 view .LVU3838
 16569              	.LBB9360:
 16570              	.LBI9360:
 16571              		.loc 19 162 7 view .LVU3839
 16572              	.LBB9361:
 16573              	.LBI9361:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16574              		.loc 20 89 7 view .LVU3840
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16575              		.loc 20 89 7 is_stmt 0 view .LVU3841
 16576              	.LBE9361:
 16577              	.LBE9360:
 16578              	.LBE9359:
 16579              	.LBE9347:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 16580              		.loc 26 337 7 view .LVU3842
 16581 0010 2046     		mov	r0, r4
 16582 0012 10BD     		pop	{r4, pc}
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 16583              		.loc 26 337 7 view .LVU3843
 16584              		.cfi_endproc
 16585              	.LFE5698:
 16587              		.weak	_ZNSt12_Vector_baseIiSaIiEED1Ev
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 584


 16588              		.thumb_set _ZNSt12_Vector_baseIiSaIiEED1Ev,_ZNSt12_Vector_baseIiSaIiEED2Ev
 16589              		.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6v
 16590              		.align	1
 16591              		.p2align 2,,3
 16592              		.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSa
 16593              		.syntax unified
 16594              		.thumb
 16595              		.thumb_func
 16596              		.fpu fpv5-d16
 16598              	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt
 16599              	.LVL1044:
 16600              	.LFB6061:
1925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      _Compare, _Alloc>::iterator
1930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_lower_bound(_Link_type __x, _Base_ptr __y,
1932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		   const _Key& __k)
1933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
1935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
1936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = _S_right(__x);
1939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return iterator(__y);
1940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      _Compare, _Alloc>::const_iterator
1946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
1948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		   const _Key& __k) const
1949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
1951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
1952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = _S_right(__x);
1955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return const_iterator(__y);
1956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      _Compare, _Alloc>::iterator
1962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_upper_bound(_Link_type __x, _Base_ptr __y,
1964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		   const _Key& __k)
1965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
1967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (_M_impl._M_key_compare(__k, _S_key(__x)))
1968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 585


1970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = _S_right(__x);
1971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return iterator(__y);
1972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      _Compare, _Alloc>::const_iterator
1978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_upper_bound(_Const_Link_type __x, _Const_Base_ptr __y,
1980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		   const _Key& __k) const
1981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
1983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (_M_impl._M_key_compare(__k, _S_key(__x)))
1984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = _S_right(__x);
1987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return const_iterator(__y);
1988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
1993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::iterator,
1994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
1995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::iterator>
1996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     equal_range(const _Key& __k)
1998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type __x = _M_begin();
2000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr __y = _M_end();
2001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
2002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (_M_impl._M_key_compare(_S_key(__x), __k))
2004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __x = _S_right(__x);
2005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
2006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __y = __x, __x = _S_left(__x);
2007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
2009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _Link_type __xu(__x);
2010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _Base_ptr __yu(__y);
2011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __y = __x, __x = _S_left(__x);
2012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __xu = _S_right(__xu);
2013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      return pair<iterator,
2014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			  iterator>(_M_lower_bound(__x, __y, __k),
2015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				    _M_upper_bound(__xu, __yu, __k));
2016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
2017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return pair<iterator, iterator>(iterator(__y),
2019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				      iterator(__y));
2020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::const_iterator,
2026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 586


2027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::const_iterator>
2028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     equal_range(const _Key& __k) const
2030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Link_type __x = _M_begin();
2032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Base_ptr __y = _M_end();
2033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
2034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (_M_impl._M_key_compare(_S_key(__x), __k))
2036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __x = _S_right(__x);
2037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
2038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __y = __x, __x = _S_left(__x);
2039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
2041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _Const_Link_type __xu(__x);
2042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _Const_Base_ptr __yu(__y);
2043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __y = __x, __x = _S_left(__x);
2044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __xu = _S_right(__xu);
2045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      return pair<const_iterator,
2046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			  const_iterator>(_M_lower_bound(__x, __y, __k),
2047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 					  _M_upper_bound(__xu, __yu, __k));
2048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
2049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return pair<const_iterator, const_iterator>(const_iterator(__y),
2051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 						  const_iterator(__y));
2052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
2057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     swap(_Rb_tree& __t)
2059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Compare>::value)
2060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (_M_root() == 0)
2062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__t._M_root() != 0)
2064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_impl._M_move_data(__t._M_impl);
2065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else if (__t._M_root() == 0)
2067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__t._M_impl._M_move_data(_M_impl);
2068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else
2069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  std::swap(_M_root(),__t._M_root());
2071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  std::swap(_M_leftmost(),__t._M_leftmost());
2072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  std::swap(_M_rightmost(),__t._M_rightmost());
2073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_root()->_M_parent = _M_end();
2075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __t._M_root()->_M_parent = __t._M_end();
2076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  std::swap(this->_M_impl._M_node_count, __t._M_impl._M_node_count);
2077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // No need to swap header's color as it does not change.
2079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       std::swap(this->_M_impl._M_key_compare, __t._M_impl._M_key_compare);
2080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Alloc_traits::_S_on_swap(_M_get_Node_allocator(),
2082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				__t._M_get_Node_allocator());
2083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 587


2084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
2089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
2090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
2091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 16601              		.loc 29 2091 5 is_stmt 1 view -0
 16602              		.cfi_startproc
 16603              		@ args = 0, pretend = 0, frame = 8
 16604              		@ frame_needed = 0, uses_anonymous_args = 0
 16605              		.loc 29 2091 5 is_stmt 0 view .LVU3845
 16606 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 16607              		.cfi_def_cfa_offset 36
 16608              		.cfi_offset 4, -36
 16609              		.cfi_offset 5, -32
 16610              		.cfi_offset 6, -28
 16611              		.cfi_offset 7, -24
 16612              		.cfi_offset 8, -20
 16613              		.cfi_offset 9, -16
 16614              		.cfi_offset 10, -12
 16615              		.cfi_offset 11, -8
 16616              		.cfi_offset 14, -4
 16617              	.LBB9437:
 16618              	.LBB9438:
 749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 16619              		.loc 29 749 73 view .LVU3846
 16620 0004 8C68     		ldr	r4, [r1, #8]
 16621              	.LBE9438:
 16622              	.LBE9437:
 16623              		.loc 29 2091 5 view .LVU3847
 16624 0006 83B0     		sub	sp, sp, #12
 16625              		.cfi_def_cfa_offset 48
 16626              		.loc 29 2091 5 view .LVU3848
 16627 0008 8B46     		mov	fp, r1
 16628 000a 8146     		mov	r9, r0
 16629              	.LVL1045:
 16630              	.LBB9439:
 16631              	.LBI9437:
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 16632              		.loc 29 748 7 is_stmt 1 view .LVU3849
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 16633              		.loc 29 748 7 is_stmt 0 view .LVU3850
 16634              	.LBE9439:
 16635              	.LBB9440:
 16636              	.LBI9440:
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 16637              		.loc 29 759 7 is_stmt 1 view .LVU3851
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 16638              		.loc 29 759 7 is_stmt 0 view .LVU3852
 16639              	.LBE9440:
2092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_get_insert_unique_pos(const key_type& __k)
2093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
2095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type __x = _M_begin();
2096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr __y = _M_end();
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 588


2097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       bool __comp = true;
2098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
 16640              		.loc 29 2098 18 is_stmt 1 view .LVU3853
2091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_get_insert_unique_pos(const key_type& __k)
 16641              		.loc 29 2091 5 is_stmt 0 view .LVU3854
 16642 000c 0192     		str	r2, [sp, #4]
 16643              		.loc 29 2098 18 view .LVU3855
 16644 000e 002C     		cmp	r4, #0
 16645 0010 36D0     		beq	.L747
 16646 0012 019B     		ldr	r3, [sp, #4]
 16647 0014 D3F800A0 		ldr	r10, [r3]
 16648 0018 D3F80480 		ldr	r8, [r3, #4]
 16649 001c 00E0     		b	.L726
 16650              	.LVL1046:
 16651              	.L745:
 16652              		.loc 29 2098 18 view .LVU3856
 16653 001e 1446     		mov	r4, r2
 16654              	.LVL1047:
 16655              	.L726:
 16656              	.LBB9442:
 16657              	.LBI9442:
 16658              		.file 40 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Functor implementations -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * representations about the suitability of this software for any
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 589


  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Copyright (c) 1996-1998
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** /** @file bits/stl_function.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *  Do not attempt to use it directly. @headername{functional}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #ifndef _STL_FUNCTION_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #define _STL_FUNCTION_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #include <bits/move.h>
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** {
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.1 base classes
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup functors Function Objects
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup utilities
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Function objects, or @e functors, are objects with an @c operator()
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  defined and accessible.  They can be passed as arguments to algorithm
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  templates and used in place of a function pointer.  Not only is the
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  resulting expressiveness of the library increased, but the generated
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  code can be more efficient than what you might write by hand.  When we
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  refer to @a functors, then, generally we include function pointers in
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  the description as well.
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Often, functors are only created as temporaries passed to algorithm
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  calls, rather than being created as named variables.
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Two examples taken from the standard itself follow.  To perform a
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  by-element addition of two vectors @c a and @c b containing @c double,
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  and put the result in @c a, use
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \code
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  transform (a.begin(), a.end(), b.begin(), a.begin(), plus<double>());
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \endcode
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  To negate every element in @c a, use
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \code
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  transform(a.begin(), a.end(), a.begin(), negate<double>());
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \endcode
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The addition and negation functions will be inlined directly.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 590


  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The standard functors are derived from structs named @c unary_function
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  and @c binary_function.  These two classes contain nothing but typedefs,
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  to aid in generic (template) programming.  If you write your own
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  functors, you might consider doing the same.
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /**
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  This is one of the @link functors functor base classes@endlink.
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Arg, typename _Result>
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct unary_function
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c argument_type is the type of the argument
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg 	argument_type;   
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c result_type is the return type
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Result 	result_type;  
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /**
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  This is one of the @link functors functor base classes@endlink.
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Arg1, typename _Arg2, typename _Result>
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct binary_function
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c first_argument_type is the type of the first argument
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg1 	first_argument_type; 
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c second_argument_type is the type of the second argument
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg2 	second_argument_type;
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c result_type is the return type
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Result 	result_type;
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @}  */
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.2 arithmetic
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup arithmetic_functors Arithmetic Classes
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup functors
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Because basic math often needs to be done during an algorithm,
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  the library provides functors for those operations.  See the
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  documentation for @link functors the base classes@endlink
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  for examples of their use.
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   struct __is_transparent;  // undefined
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus;
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 591


 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus;
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies;
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides;
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus;
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate;
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus : public binary_function<_Tp, _Tp, _Tp>
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x + __y; }
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus : public binary_function<_Tp, _Tp, _Tp>
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x - __y; }
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies : public binary_function<_Tp, _Tp, _Tp>
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x * __y; }
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides : public binary_function<_Tp, _Tp, _Tp>
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x / __y; }
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 592


 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus : public binary_function<_Tp, _Tp, _Tp>
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x % __y; }
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate : public unary_function<_Tp, _Tp>
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x) const
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return -__x; }
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #define __cpp_lib_transparent_operators 201510
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus<void>
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) + std::forward<_Up>(__u)))
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) + std::forward<_Up>(__u))
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) + std::forward<_Up>(__u); }
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus<void>
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) - std::forward<_Up>(__u)))
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) - std::forward<_Up>(__u))
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) - std::forward<_Up>(__u); }
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies<void>
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 593


 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) * std::forward<_Up>(__u)))
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) * std::forward<_Up>(__u))
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) * std::forward<_Up>(__u); }
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides<void>
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) / std::forward<_Up>(__u)))
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) / std::forward<_Up>(__u))
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) / std::forward<_Up>(__u); }
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus<void>
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) % std::forward<_Up>(__u)))
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) % std::forward<_Up>(__u))
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) % std::forward<_Up>(__u); }
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate<void>
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp>
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t) const
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(-std::forward<_Tp>(__t)))
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(-std::forward<_Tp>(__t))
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return -std::forward<_Tp>(__t); }
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @}  */
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.3 comparisons
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 594


 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup comparison_functors Comparison Classes
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup functors
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The library provides six wrapper functors for all the basic comparisons
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  in C++, like @c <.
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct equal_to;
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct not_equal_to;
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct greater;
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct less;
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct greater_equal;
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct less_equal;
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct equal_to : public binary_function<_Tp, _Tp, bool>
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       bool
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x == __y; }
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct not_equal_to : public binary_function<_Tp, _Tp, bool>
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       bool
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x != __y; }
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct greater : public binary_function<_Tp, _Tp, bool>
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       bool
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x > __y; }
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 595


 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct less : public binary_function<_Tp, _Tp, bool>
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       bool
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 16659              		.loc 40 385 7 is_stmt 1 view .LVU3857
 16660              	.LBB9443:
 16661              	.LBI9443:
1439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
1440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to multiple characters.
1444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Length of the resulting string.
1445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
1446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character @a __c.
1450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(size_type __n, _CharT __c)
1453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a range of characters.
1457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
1465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
1468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
1470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(initializer_list<_CharT> __l)
1481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 596


1485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a string_view.
1487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	assign(const _Tp& __svt)
1493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
1496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
1500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
1502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to assign.
1503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
1508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_replace(size_type(0), this->size(),
1511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
1512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
1513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *              insert at.
1522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __p - begin();
1538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->replace(__p, __p, __n, __c);
1539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(this->_M_data() + __pos);
1540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 597


1542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
1563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *              insert at.
1565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __beg  Start of range.
1566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __end  End of range.
1567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
1574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
1576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	iterator
1578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
1580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __pos = __p - begin();
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
1588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __beg  Start of range.
1590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __end  End of range.
1591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 598


1599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
1600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(const_iterator __p, initializer_list<_CharT> __l)
1613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
1614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
1616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // See PR libstdc++/83328
1617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert value of a string.
1628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1 Position in string to insert at.
1629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to insert.
1630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, size_type(0),
1641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_data(), __str.size()); }
1642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a substring.
1645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
1646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str   The string to insert.
1647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
1649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos2 > @a str.size().
1653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 599


1656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     size_type __pos2, size_type __n = npos)
1664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C substring.
1670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
1671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
1672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to insert.
1673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  doesn't change if an error is thrown.
1683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C string.
1690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
1691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
1692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
1702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     traits_type::length(__s));
1709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 600


1713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index in string to insert at.
1714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      size_type(0), __n, __c); }
1731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert one character.
1734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __p - begin();
1750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
1752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
1757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
1758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
1759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
1764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
1767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 601


1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
1771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
1772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
1773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to insert.
1775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	insert(size_type __pos1, const _Tp& __svt,
1780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       size_type __pos2, size_type __n = npos)
1781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, size_type(0),
1784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
1785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
1786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
1787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove characters.
1792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check(__pos, "basic_string::erase");
1809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == npos)
1810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_set_length(__pos);
1811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__n != 0)
1812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_erase(__pos, _M_limit(__pos, __n));
1813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove one character.
1818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  iterator referencing same location after removal.
1820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the character at @a __position from this string. The value
1822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  of the string doesn't change if an error is thrown.
1823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(__const_iterator __position)
1826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 602


1827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __position < end());
1829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __position - begin();
1830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
1832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove a range of characters.
1836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __last <= end());
1848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         const size_type __pos = __first - begin();
1849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__last == end())
1850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_set_length(__pos);
1851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
1852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_erase(__pos, __last - __first);
1853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(this->_M_data() + __pos);
1854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove the last character.
1859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The string must be non-empty.
1861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pop_back() noexcept
1864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_erase(size() - 1, 1);
1867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
1872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to be replaced.
1874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
1875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 603


1884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  error is thrown.
1886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
1893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character to replace.
1894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
1896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from str to use.
1898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.size().
1901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string doesn't change if an error is thrown.
1908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
1912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
1921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
1933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2)
1937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 604


1941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C string.
1945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
1948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with multiple characters.
1968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters to insert.
1971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
1972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
1982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string.
1990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String value to insert.
1993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 605


1998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
1999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string doesn't change if an error is thrown.
2000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string& __str)
2004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
2005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C substring.
2008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
2011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to insert.
2012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
2017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
2019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
2020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __s, size_type __n)
2024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
2028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C string.
2032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
2035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
2040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
2045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
2048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with multiple characters
2052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 606


2055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
2056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
2061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
2066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _CharT __c)
2067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
2071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with range.
2075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
2078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
2079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
2086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
2087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
2089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
2090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
2091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
2092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
2093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
2095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   && __i2 <= end());
2097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
2099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					   std::__false_type());
2100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
2102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
2103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
2104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
2105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
2106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
2107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
2108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(iterator __i1, iterator __i2,
2109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
2111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 607


2112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   && __i2 <= end());
2113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
2115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
2116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
2118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Specializations for the common case of pointer and iterator:
2120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
2121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
2124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
2130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
2135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
2141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      iterator __k1, iterator __k2)
2146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
2152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
2157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
2163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
2166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
2168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 608


2169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
2171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
2178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
2179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
2181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    initializer_list<_CharT> __l)
2182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.size()); }
2183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
2184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
2188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position to replace at.
2189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to replace.
2190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
2191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
2195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
2196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
2199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
2203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  The position to replace at.
2204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1    The number of characters to replace.
2205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
2207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2    The number of characters to insert.
2208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
2212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(size_type __pos1, size_type __n1, const _Tp& __svt,
2213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
2214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, __n1,
2217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
2218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
2219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
2220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
2224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1    An iterator referencing the start position
2225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           to replace at.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 609


2226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2    An iterator referencing the end position
2227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           for the replace.
2228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
2233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
2234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
2237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
2241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Integer>
2242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
2243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
2245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
2246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
2248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
2249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
2251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    __false_type);
2252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
2255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     _CharT __c);
2256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
2259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 const size_type __len2);
2260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
2263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
2265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy substring into C string.
2268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to copy value into.
2269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to copy.
2270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to copy.
2271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Number of characters actually copied
2272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
2275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
2276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.
2277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
2280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Swap contents with another string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 610


2283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String to swap with.
2284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
2286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  time.
2287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
2289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
2290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // String operations:
2292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
2294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
2296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  happen.
2297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
2299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
2300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
2301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to contents.
2304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
2306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
2307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
2308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
2309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
2311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
2312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
2313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return non-const pointer to contents.
2317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to the character sequence held by the string.
2319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Modifying the characters in the sequence is allowed.
2320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
2322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() noexcept
2323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
2324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
2325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
2328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type
2330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
2331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_get_allocator(); }
2332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C substring.
2335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
2338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 611


2340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
2341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
2343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
2347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string.
2351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
2352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
2356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
2357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns npos.
2358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
2361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
2363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string_view.
2367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
2374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
2378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C string.
2383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
2388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s within this string.  If found, returns the index where
2389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
2390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
2396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 612


2397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
2400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
2405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
2410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string.
2413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
2414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
2418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str within this string.  If found, returns the index where
2419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
2420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
2423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
2425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string_view.
2429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
2436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
2440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C substring.
2445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
2451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
2453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 613


2454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
2457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C string.
2461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of  last occurrence.
2464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s within this string.  If found, returns the index
2467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it begins.  If not found, returns npos.
2468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
2478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of string.
2491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
2492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
2497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of a string_view.
2508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
2510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 614


2511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
2516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
2520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C substring.
2525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
2526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
2533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
2534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
2537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C string.
2541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
2542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
2559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index
2565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it was found.  If not found, returns npos.
2566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to find(__c, __pos).
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 615


2568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__c, __pos); }
2572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
2575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
2576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
2581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
2592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
2594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
2600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
2604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C substring.
2609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
2610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
2617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
2618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
2621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 616


2625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
2626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
2643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__c, __pos); }
2656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in string.
2659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
2660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  was found.  If not found, returns npos.
2666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in a string_view.
2675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  A object convertible to string_view containing
2676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
2677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 617


2682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
2683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
2687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C substring.
2692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
2705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C string.
2708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a different character.
2726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
2727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  index where it was found.  If not found, returns npos.
2733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 618


2739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in string.
2740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
2741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __str within this string.  If found,
2746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
2757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
2759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
2765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
2769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to consider.
2777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
2783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
2787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C string.
2789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __s within this string.  If found,
2795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 619


2796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a different character.
2808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
2809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Get a substring.
2822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character (default 0).
2823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  The new string.
2825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Construct and return a new string using the @a __n
2828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string
2833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return basic_string(*this,
2835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string.
2839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  size() and str.size().  The function then compares the two
2847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
2850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const basic_string& __str) const
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 620


2853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
2855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __osize = __str.size();
2856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!__r)
2860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
2861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __r;
2862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
2867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
2868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
2872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(const _Tp& __svt) const
2873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __size = this->size();
2877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __osize = __sv.size();
2878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
2879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
2881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (!__r)
2882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __r = _S_compare(__size, __osize);
2883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __r;
2884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
2888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
2889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to compare.
2890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                against.
2892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
2896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
2897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
2901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
2905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
2906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  The number of characters to compare.
2907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                against.
2909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 621


2910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  The number of characters to compare.
2911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
2915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
2916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
2917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this)
2921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
2922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a string.
2927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
2928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring.
2929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n characters
2933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to compare as the smallest of the length of the substring
2938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  and @a __str.size().  The function then compares the two
2939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling
2940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the shorter one is ordered first.
2943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a substring.
2949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character of substring.
2950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
2951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
2957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substrings.  The function then compares the two strings by
2965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  calling
2966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 622


2967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
2969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
2973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a C string.
2976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
2977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of size() and the length of a string
2983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  ordered first.
2987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
2990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 5 String::compare specification questionable
2993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a C string.
2995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
2996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
2997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
2998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
3001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
3002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
3003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
3004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
3005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of the length of the substring and
3006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of a string constructed from @a __s.  The
3007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two string by calling
3008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
3009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
3011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
3012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
3013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
3014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring against a character %array.
3017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
3018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
3019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  character %array to compare against.
3020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters of s.
3021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 623


3024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
3025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
3026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  if this substring is ordered before the string from @a __s,
3027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
3028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
3029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  effective length rlen of the strings to compare as the
3030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
3031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two strings by calling
3032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
3033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
3035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
3037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  no special meaning.
3038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
3039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
3040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
3041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2) const;
3042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus > 201703L
3044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(_CharT __x) const noexcept
3050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(const _CharT* __x) const noexcept
3054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(_CharT __x) const noexcept
3062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(const _CharT* __x) const noexcept
3066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++20
3068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allow basic_stringbuf::__xfer_bufptrs to call _M_length:
3070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename, typename, typename> friend class basic_stringbuf;
3071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     };
3072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
3073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
3074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // Reference-counted COW string implentation
3075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
3077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @class basic_string basic_string.h <string>
3078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
3079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup strings
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 624


3081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup sequences
3082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _CharT  Type of character
3084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
3085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                   char_traits<_CharT>.
3086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
3087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
3089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
3090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
3091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
3092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
3093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @doctodo
3095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Documentation?  What's that?
3098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
3099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  A string looks like this:
3101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @code
3103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                                        [_Rep]
3104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                                        _M_length
3105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
3106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *   _M_dataplus                          _M_refcount
3107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
3108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @endcode
3109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Where the _M_p points to the first character in the string, and
3111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
3112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  pointer to the header.
3113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  This approach has the enormous advantage that a string object
3115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
3116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  within a single %pair of inline functions, which each compile to
3117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
3118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
3119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
3120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  object at the front.
3121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
3123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  not the _Rep is so that the debugger can see the string
3124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
3125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
3126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  string length.)
3127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
3129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
3130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  static constructors have run.  The reference-count encoding is
3131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
3132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  destroy the empty-string _Rep object.
3133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  All but the last paragraph is considered pretty conventional
3135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  for a C++ string implementation.
3136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   */
3137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // 21.3  Template class basic_string
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 625


3138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     class basic_string
3140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
3141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
3142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rebind<_CharT>::other _CharT_alloc_type;
3143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_CharT_alloc_type> _CharT_alloc_traits;
3144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Types:
3146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Traits					    traits_type;
3148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Traits::char_type		    value_type;
3149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Alloc					    allocator_type;
3150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
3151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
3152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
3153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
3154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
3155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef value_type&				    reference;
3157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef const value_type&				    const_reference;
3158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_traits::pointer	    pointer;
3160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_traits::const_pointer   const_pointer;
3161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
3162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
3163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****                                                             const_iterator;
3164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
3165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
3166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     protected:
3168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // type used for positions in insert, erase etc.
3169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef iterator __const_iterator;
3170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
3172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _Rep: string representation
3173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   Invariants:
3174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
3175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      must be kept null-terminated.
3176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   2. _M_capacity >= _M_length
3177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
3178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   3. _M_refcount has three states:
3179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
3180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //       0: one reference, non-const.
3181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
3182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
3183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
3184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      empty string representation needs no constructor.
3185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Rep_base
3187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type		_M_length;
3189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type		_M_capacity;
3190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Atomic_word		_M_refcount;
3191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Rep : _Rep_base
3194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 626


3195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Types:
3196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
3197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  rebind<char>::other _Raw_bytes_alloc;
3198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// (Public) Data members:
3200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// The maximum number of individual char_type elements of an
3202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// individual string is determined by _S_max_size. This is the
3203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
3204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
3205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
3206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
3207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// look like this:
3208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
3209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Solving for m:
3210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
3211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// In addition, this implementation quarters this amount.
3212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	static const size_type	_S_max_size;
3213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	static const _CharT	_S_terminal;
3214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
3216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // (carefully) in an empty string with one reference.
3217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static size_type _S_empty_rep_storage[];
3218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _Rep&
3220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
3221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { 
3222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
3223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
3224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  // be reasonably safe in this case.
3225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
3226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
3227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         bool
3230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
3231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
3232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if defined(__GTHREADS)
3233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // so we need to use an atomic load. However, _M_is_leaked
3235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // predicate does not change concurrently (i.e. the string is either
3236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // leaked or not), so a relaxed load is enough.
3237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;
3238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->_M_refcount < 0;
3240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
3242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         bool
3244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
3245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if defined(__GTHREADS)
3247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // so we need to use an atomic load. Another thread can drop last
3249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // but one reference concurrently with this check, so we need this
3250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // load to be acquire to synchronize with release fetch_and_add in
3251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // _M_dispose.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 627


3252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_ACQUIRE) > 0;
3253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->_M_refcount > 0;
3255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
3257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
3259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
3260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->_M_refcount = -1; }
3261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
3263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
3264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->_M_refcount = 0; }
3265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	void
3267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
3268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    {
3273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_M_set_sharable();  // One reference.
3274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_M_length = __n;
3275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
3276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      // grrr. (per 21.3.4)
3277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
3278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    }
3279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_refdata() throw()
3283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
3284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
3287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
3289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
3290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Create & Destroy
3293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	static _Rep*
3294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
3295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	void
3297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
3298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    {
3303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
3304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
3305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // Decrement of _M_refcount is acq_rel, because:
3306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // - all but last decrements need to release to synchronize with
3307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   the last decrement that will delete the object.
3308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // - the last decrement needs to acquire to synchronize with
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 628


3309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   all the previous decrements.
3310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // - last but one decrement needs to release to synchronize with
3311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   the acquire load in _M_is_shared that will conclude that
3312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   the object is not shared anymore.
3313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
3314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 							 -1) <= 0)
3315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		{
3316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
3317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_destroy(__a);
3318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		}
3319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    }
3320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}  // XXX MT
3321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	void
3323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_destroy(const _Alloc&) throw();
3324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_refcopy() throw()
3327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
3332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_refdata();
3333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}  // XXX MT
3334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
3337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
3340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Alloc_hider : _Alloc
3341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
3343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
3344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT* _M_p; // The actual data.
3346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Data Members (public):
3350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
3351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // size that the allocator can hold.
3352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Value returned by various member functions when they fail.
3353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
3354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
3356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Data Members (private):
3357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
3358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
3360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
3361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return  _M_dataplus._M_p; }
3362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
3364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
3365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return (_M_dataplus._M_p = __p); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 629


3366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _Rep*
3368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
3369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
3370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
3372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // but they do not call _M_leak.
3373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
3375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data()); }
3376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
3379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data() + this->size()); }
3380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
3383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
3385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_leak_hard();
3386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check(size_type __pos, const char* __s) const
3390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__pos > this->size())
3392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
3393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "this->size() (which is %zu)"),
3394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __s, __pos, this->size());
3395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __pos;
3396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
3400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
3402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_length_error(__N(__s));
3403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
3406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
3408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
3410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
3411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // True if _Rep and source do not overlap.
3414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
3416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
3418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
3419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // When __n = 1 way faster than the general multichar
3422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // traits_type::copy/move/assign.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 630


3423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
3427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
3428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::copy(__d, __s, __n);
3430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
3436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
3437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
3439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
3443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
3445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, __c);
3446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
3448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
3451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // to optimize for the common case of pointers as iterators.
3452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Iterator>
3453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static void
3454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
3455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
3456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
3457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
3458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
3462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
3466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
3467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
3471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
3475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
3476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static int
3479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 631


3480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
3482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
3484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
3485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
3486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
3487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return int(__d);
3489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
3493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_leak_hard();
3496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static _Rep&
3498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
3499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _Rep::_S_empty_rep(); }
3500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
3502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // A helper type for avoiding boiler-plate.
3503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
3504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename _Res>
3506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	using _If_sv = enable_if_t<
3507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
3508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
3509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
3510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _Res>;
3511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allows an implicit conversion to __sv_type.
3513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static __sv_type
3514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
3515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __svt; }
3516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Wraps a string_view by explicit conversion and thus
3518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // allows to add an internal constructor that does not
3519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // participate in overload resolution when a string_view
3520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // is provided.
3521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct __sv_wrapper
3522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
3524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__sv_type _M_sv;
3525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
3529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          wrapper.
3530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svw  string view wrapper.
3531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
3532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
3534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
3535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
3536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 632


3537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Construct/copy/destroy:
3540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: We overload ctors in some cases instead of using default
3541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
3542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Default constructor creates an empty string.
3545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string()
3547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
3549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc())
3550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc())
3552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { }
3554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
3557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
3559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _Alloc& __a);
3560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
3562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
3564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str);
3567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
3570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
3572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
3575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc());
3578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
3581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n);
3587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
3589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
3593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 633


3594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n, const _Alloc& __a);
3596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string initialized by a character %array.
3599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source character %array.
3600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
3604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  has no special meaning.
3605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
3607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc());
3608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a C string.
3611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source C string.
3612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
3615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
3617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
3618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
3620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_S_construct(__s, __s ? __s + traits_type::length(__s) :
3621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****                                  __s + npos, __a), __a)
3622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { }
3623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as multiple characters.
3626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters.
3627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to use.
3628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
3631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move construct string.
3635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
3638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
3639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
3640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str)
3641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
3643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(std::move(__str._M_dataplus))
3645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
3648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
3650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 634


3651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from an initializer %list.
3655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list of characters.
3656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
3659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
3661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(__str._M_rep()->_M_grab(__a, __str.get_allocator()), __a)
3662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { }
3663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
3665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(__str._M_data(), __a)
3666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__a == __str.get_allocator())
3668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
3669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(_S_empty_rep()._M_refdata());
3671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(_S_construct(size_type(), _CharT(), __a));
3673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
3675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_dataplus._M_p = _S_construct(__str.begin(), __str.end(), __a);
3677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
3679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a range.
3682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __beg  Start of range.
3683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __end  End of range.
3684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
3687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
3688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc());
3689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
3691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
3693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t   Source object convertible to string view.
3694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
3695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
3696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a   Allocator to use.
3697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
3700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
3701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
3702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a string_view.
3705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t  Source object convertible to string view.
3706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 635


3708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit
3710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
3711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
3712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
3713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Destroy the string instance.
3716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
3718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
3719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Assign the value of @a str to this string.
3722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const basic_string& __str)
3726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__str); }
3727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy contents of @a s into this string.
3730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source null-terminated string.
3731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const _CharT* __s) 
3734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
3735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string of length 1.
3738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Source character.
3739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Assigning to a character makes this string length 1 and
3741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (*this)[0] == @a c.
3742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(_CharT __c) 
3745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
3746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(1, __c); 
3747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
3748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
3753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
3756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a str is a valid, but unspecified string.
3757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
3758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(basic_string&& __str)
3760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value)
3761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// NB: DR 1204.
3763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->swap(__str);
3764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 636


3765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
3769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list.
3770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(initializer_list<_CharT> __l)
3773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(__l.begin(), __l.size());
3775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
3776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
3778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
3780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
3782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svt An object convertible to  string_view.
3783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
3785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
3786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator=(const _Tp& __svt)
3787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->assign(__svt); }
3788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Convert to a string_view.
3791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return A string_view.
3792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator __sv_type() const noexcept
3794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(data(), size()); }
3795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
3796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Iterators:
3798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string.  Unshares the string.
3801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
3806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data());
3807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
3812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data()); }
3816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points one past the last
3819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Unshares the string.
3820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 637


3822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() // FIXME C++11: should be noexcept.
3823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
3825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + this->size());
3826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
3831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  order.  Unshares the string.
3840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
3842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->end()); }
3844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
3849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
3853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element order.  Unshares the string.
3858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
3860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->begin()); }
3862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
3866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
3867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
3876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cbegin() const noexcept
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 638


3879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data()); }
3880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
3884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cend() const noexcept
3887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
3893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crbegin() const noexcept
3896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
3897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
3901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
3902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crend() const noexcept
3905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Capacity:
3910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
3911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
3912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_rep()->_M_length; }
3915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
3917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
3918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_rep()->_M_length; }
3921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the size() of the largest possible %string.
3923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _Rep::_S_max_size; }
3926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to fill any new elements.
3931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will %resize the %string to the specified
3933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number of characters.  If the number is smaller than the
3934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 639


3936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n, _CharT __c);
3939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will resize the %string to the specified length.  If
3945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  setting them to 0.
3949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n)
3952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { this->resize(__n, _CharT()); }
3953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
3956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
3958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_exceptions
3960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (capacity() > size())
3961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
3962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    try
3963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { reserve(0); }
3964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    catch(...)
3965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { }
3966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
3967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns the total number of characters that the %string can hold
3973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  before needing to allocate more memory.
3974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
3977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_rep()->_M_capacity; }
3978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
3981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          characters.
3982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __res_arg  Number of characters required.
3983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
3984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function attempts to reserve enough memory for the
3986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string to hold the specified number of characters.  If the
3987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number requested is more than max_size(), length_error is
3988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
3989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The advantage of this function is that if optimal code is a
3991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  necessity and the user can determine the string length that will be
3992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 640


3993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
3994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  data.
3995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reserve(size_type __res_arg = 0);
3998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Erases the string, making it empty.
4001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
4003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
4005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (_M_rep()->_M_is_shared())
4007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
4008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_rep()->_M_dispose(this->get_allocator());
4009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(_S_empty_rep()._M_refdata());
4010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
4011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
4012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_rep()->_M_set_length_and_sharable(0);
4013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
4015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // PR 56166: this should not throw.
4016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear()
4018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_mutate(0, this->size(), 0); }
4019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
4020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
4023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  <code>*this == ""</code>.
4024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NODISCARD bool
4026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
4027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->size() == 0; }
4028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Element access:
4030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
4033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (constant) reference to the character.
4034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
4036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
4037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
4039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
4042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
4044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
4045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 641


4050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
4051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
4053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
4054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)  Unshares the string.
4056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[](size_type __pos)
4059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
4061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// and in C++11 mode.
4062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
4063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // In pedantic mode be strict in C++98 mode.
4064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
4065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
4066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
4067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
4072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (const) reference to the character.
4073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
4076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
4077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
4078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n) const
4081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= this->size())
4083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
4085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
4086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
4087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
4088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
4093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
4094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
4097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
4098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
4099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  unsharing the string.
4100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n)
4103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= size())
4105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 642


4107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
4108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
4109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
4110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
4111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the first
4116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
4117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front()
4120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
4123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
4127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
4128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() const noexcept
4131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
4134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the last
4138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
4139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back()
4142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
4145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
4149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last element of the %string.
4150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() const noexcept
4153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
4156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
4158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Modifiers:
4160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
4162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
4163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 643


4164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const basic_string& __str)
4167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__str); }
4168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
4171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
4172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const _CharT* __s)
4176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__s); }
4177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a character.
4180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to append.
4181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(_CharT __c)
4185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
4186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->push_back(__c);
4187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
4188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
4193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
4194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(initializer_list<_CharT> __l)
4198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
4204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator+=(const _Tp& __svt)
4210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->append(__svt); }
4211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
4215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
4216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str);
4220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 644


4221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a substring.
4223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
4224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str to append.
4225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
4226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
4228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function appends @a __n characters from @a __str
4230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
4231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  than the number of available characters in @a __str, the
4232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  remainder of @a __str is appended.
4233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos);
4236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C substring.
4239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
4240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
4241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s, size_type __n);
4245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
4248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
4249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s)
4253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->append(__s, traits_type::length(__s));
4256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append multiple characters.
4260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
4261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
4262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends __n copies of __c to this string.
4265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(size_type __n, _CharT __c);
4268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
4272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to append.
4273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(initializer_list<_CharT> __l)
4277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 645


4278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters.
4282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
4287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
4290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
4291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
4292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
4296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt)
4302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->append(__sv.data(), __sv.size());
4305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters from a string_view.
4309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The object convertible to string_view to be appended
4310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *               from.
4311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos The position in the string_view to append from.
4312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
4313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
4317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
4318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return append(__sv.data()
4321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
4322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a single character.
4328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to append.
4329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       push_back(_CharT __c)
4332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
4333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __len = 1 + this->size();
4334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 646


4335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->reserve(__len);
4336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
4337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
4338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
4342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
4343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str);
4347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
4351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
4352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
4355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
4356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(basic_string&& __str)
4359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(allocator_traits<_Alloc>::is_always_equal::value)
4360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->swap(__str);
4362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
4363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a substring of a string.
4368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to use.
4369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str.
4370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
4371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
4373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the substring of @a __str
4375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
4376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is larger than the number of available characters in @a
4377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, the remainder of @a __str is used.
4378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
4381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__str._M_data()
4382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
4383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    __str._M_limit(__pos, __n)); }
4384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a C substring.
4387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
4388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
4389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the first @a __n
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 647


4392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
4393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
4394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s, size_type __n);
4397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of a C string.
4400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
4401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
4404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
4405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function returns.
4406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s)
4409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
4412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to multiple characters.
4416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Length of the resulting string.
4417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
4418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to @a __n copies of
4421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character @a __c.
4422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(size_type __n, _CharT __c)
4425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
4426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a range of characters.
4429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
4434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
4437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
4438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
4439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
4443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
4444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(initializer_list<_CharT> __l)
4448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 648


4449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a string_view.
4454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The source object convertible to string_view.
4455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	assign(const _Tp& __svt)
4460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
4463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
4467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The source object convertible to string_view.
4468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
4469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to assign.
4470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
4474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
4475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return assign(__sv.data()
4478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
4479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
4485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
4487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
4488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
4491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
4492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
4493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
4498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
4499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
4502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __beg  Start of range.
4504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __end  End of range.
4505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 649


4506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
4508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
4509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
4514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
4515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
4516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert an initializer_list of characters.
4520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
4526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
4529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert value of a string.
4534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
4535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to insert.
4536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
4540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
4541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
4546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
4547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a substring.
4550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
4551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to insert.
4552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
4553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
4554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
4557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos2 > @a str.size().
4558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
4560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
4561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
4562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 650


4563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
4564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
4568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     size_type __pos2, size_type __n = npos)
4569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->insert(__pos1, __str._M_data()
4570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
4571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
4572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C substring.
4575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
4577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to insert.
4578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
4584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
4585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
4586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
4587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  doesn't change if an error is thrown.
4588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
4591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C string.
4594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
4596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
4602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  adding characters causes the length to exceed max_size(),
4603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
4604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
4605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
4606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s)
4609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
4612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
4616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index in string to insert at.
4617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
4618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
4619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 651


4620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
4625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
4626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
4627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
4632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
4633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      size_type(0), __n, __c); }
4634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert one character.
4637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
4638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
4639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing newly inserted char.
4640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
4643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If adding character causes the length to exceed max_size(),
4644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
4645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
4649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, _CharT __c)
4650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
4653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
4654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_rep()->_M_set_leaked();
4655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
4656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
4661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
4663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
4668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
4671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
4675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 652


4677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string_view to insert
4678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from.
4679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to insert.
4680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
4684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(size_type __pos1, const _Tp& __svt,
4685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       size_type __pos2, size_type __n = npos)
4686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, size_type(0), __sv.data()
4689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
4690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
4691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove characters.
4696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
4697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
4698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes @a __n characters from this string starting at @a
4703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
4704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
4705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
4706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
4711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
4712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
4713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
4714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
4715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove one character.
4719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
4720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  iterator referencing same location after removal.
4721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the character at @a __position from this string. The value
4723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  of the string doesn't change if an error is thrown.
4724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
4726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(iterator __position)
4727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
4729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __position < _M_iend());
4730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
4731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
4732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_rep()->_M_set_leaked();
4733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 653


4734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove a range of characters.
4738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
4739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
4740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing location of first after removal.
4741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
4743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
4744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
4746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(iterator __first, iterator __last);
4747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  
4748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove the last character.
4751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The string must be non-empty.
4753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
4756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	erase(size() - 1, 1);
4759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
4764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to be replaced.
4766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
4767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
4773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
4774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
4776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
4777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  error is thrown.
4778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
4781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
4782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
4785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character to replace.
4786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
4788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of str to use.
4789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from str to use.
4790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 654


4791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
4792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.size().
4793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
4796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
4797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
4798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
4799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string doesn't change if an error is thrown.
4800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
4803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
4804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
4805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
4806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
4807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C substring.
4810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
4813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
4814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
4816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
4820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
4821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
4822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of result exceeds max_size(), length_error is
4823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
4825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
4828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2);
4829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C string.
4832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
4835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
4837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the characters of @a __s are
4841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
4842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
4843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 655


4848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
4851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with multiple characters.
4855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters to insert.
4858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
4859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
4861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
4864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
4865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
4867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
4869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
4872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
4873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
4874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string.
4877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String value to insert.
4880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
4885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
4886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string doesn't change if an error is thrown.
4887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
4890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
4891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C substring.
4894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
4897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to insert.
4898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
4903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 656


4905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
4906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
4909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
4913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C string.
4917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
4920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
4925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
4930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
4933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
4940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
4941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
4951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
4955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with range.
4959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 657


4962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
4963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
4970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
4971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
4974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(iterator __i1, iterator __i2,
4975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
4976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
4977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   && __i2 <= _M_iend());
4979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
4980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
4981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
4982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Specializations for the common case of pointer and iterator:
4985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
4986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
4988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
4994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2,
4998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
4999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
5002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
5005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
5009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
5012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
5015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 658


5019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
5020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
5023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
5026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
5029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
5031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
5032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
5033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
5034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
5036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
5038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
5039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
5040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
5041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
5042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
5044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    initializer_list<_CharT> __l)
5045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
5046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
5047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
5051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position to replace at.
5052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to replace.
5053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
5054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
5058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
5059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
5062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
5066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  The position to replace at.
5067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1    The number of characters to replace.
5068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
5070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2    The number of characters to insert.
5071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
5075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(size_type __pos1, size_type __n1, const _Tp& __svt,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 659


5076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
5077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, __n1,
5080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
5081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
5082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
5083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
5087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1    An iterator referencing the start position
5088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           to replace at.
5089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2    An iterator referencing the end position
5090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           for the replace.
5091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
5096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
5097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
5100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
5104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Integer>
5105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
5106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
5107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _Integer __val, __true_type)
5108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
5109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
5111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
5112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
5113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _InputIterator __k2, __false_type);
5114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
5117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     _CharT __c);
5118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
5121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		      size_type __n2);
5122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
5124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // requires special behaviour if _InIter is an integral type
5125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InIterator>
5126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
5128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 const _Alloc& __a, __false_type)
5129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
5131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
5132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 660


5133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
5136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Integer>
5137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
5139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 const _Alloc& __a, __true_type)
5140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
5141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				    __end, __a); }
5142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static _CharT*
5144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
5145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _S_construct(__req, __c, __a); }
5146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InIterator>
5148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
5150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
5152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
5153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
5154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
5156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InIterator>
5157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
5159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		      input_iterator_tag);
5160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
5162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // string::iterator, _CharT*, etc.
5163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _FwdIterator>
5164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
5166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     forward_iterator_tag);
5167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static _CharT*
5169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
5170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
5172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy substring into C string.
5175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to copy value into.
5176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to copy.
5177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to copy.
5178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Number of characters actually copied
5179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
5182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
5183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.
5184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
5187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Swap contents with another string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 661


5190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String to swap with.
5191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
5193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  time.
5194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
5196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       swap(basic_string& __s)
5197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value);
5198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // String operations:
5200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
5202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
5204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  happen.
5205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
5207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
5208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
5209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to contents.
5212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
5214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
5215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
5216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
5217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
5219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
5220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
5221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return non-const pointer to contents.
5225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to the character sequence held by the string.
5227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Modifying the characters in the sequence is allowed.
5228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
5230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() noexcept
5231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
5233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data();
5234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
5236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
5239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type
5241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
5242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
5243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C substring.
5246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 662


5247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
5248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
5249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
5252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
5254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
5258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string.
5262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
5263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
5267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
5268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns npos.
5269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
5272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
5274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C string.
5277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
5282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s within this string.  If found, returns the index where
5283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
5284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
5290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
5294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
5299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 663


5304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string_view.
5308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
5315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
5319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string.
5324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
5325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
5327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
5329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str within this string.  If found, returns the index where
5330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
5331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
5334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
5336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C substring.
5339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
5341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
5342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
5343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
5345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
5347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
5351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C string.
5355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
5357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of  last occurrence.
5358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
5360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s within this string.  If found, returns the index
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 664


5361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it begins.  If not found, returns npos.
5362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
5368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
5372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
5382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string_view.
5386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
5389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
5393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
5397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of string.
5402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
5403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
5408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
5413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
5415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C substring.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 665


5418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
5419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
5420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
5421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
5426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
5427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
5430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C string.
5434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
5435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
5444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
5448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
5452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the character
5457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index
5458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it was found.  If not found, returns npos.
5459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to find(__c, __pos).
5461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__c, __pos); }
5465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of a string_view.
5469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
5471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 666


5475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
5477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
5481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
5486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
5487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
5492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
5497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
5499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C substring.
5502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
5503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
5504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
5505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
5510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
5511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
5514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C string.
5518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
5519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
5528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 667


5532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
5536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
5545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__c, __pos); }
5549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
5553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
5555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
5561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
5565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in string.
5570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
5571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
5575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
5576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  was found.  If not found, returns npos.
5577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
5580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
5582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C substring.
5585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
5587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from __s to consider.
5588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 668


5589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within
5592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
5597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
5598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C string.
5601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in @a __s within this string.  If found, returns
5607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
5611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
5615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a different character.
5619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
5620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character
5624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  other than @a __c within this string.  If found, returns the
5625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  index where it was found.  If not found, returns npos.
5626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
5629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in a string_view.
5634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
5636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
5642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 669


5646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in string.
5651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
5652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __str within this string.  If found,
5657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
5662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
5664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C substring.
5667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
5669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to consider.
5670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
5673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
5674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If found, returns the index where it was found.  If not found,
5675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
5676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
5679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
5680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C string.
5682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __s within this string.  If found,
5688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
5693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
5697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a different character.
5701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
5702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 670


5703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
5706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
5707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
5711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
5716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
5718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
5724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
5728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Get a substring.
5733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character (default 0).
5734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
5735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  The new string.
5736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Construct and return a new string using the @a __n
5739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  If the string is too
5740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
5741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
5742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string
5744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
5745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return basic_string(*this,
5746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
5747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string.
5750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
5751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
5754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
5755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
5756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length rlen of the strings to compare as the smallest of
5757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  size() and str.size().  The function then compares the two
5758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
5759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 671


5760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
5761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const basic_string& __str) const
5764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
5766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __osize = __str.size();
5767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __len = std::min(__size, __osize);
5768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
5770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!__r)
5771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
5772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __r;
5773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
5778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
5779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
5783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(const _Tp& __svt) const
5784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   __sv_type __sv = __svt;
5787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __size = this->size();
5788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __osize = __sv.size();
5789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
5790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
5792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (!__r)
5793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __r = _S_compare(__size, __osize);
5794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __r;
5795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
5799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
5800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to compare.
5801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
5802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                against.
5803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
5807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
5808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
5812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
5816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 672


5817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  The number of characters to compare.
5818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   An object convertible to string_view to compare
5819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                 against.
5820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
5821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  The number of characters to compare.
5822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
5826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
5827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
5828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this)
5832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
5833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a string.
5838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
5839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring.
5840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
5841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n characters
5844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
5845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
5846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
5847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
5848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to compare as the smallest of the length of the substring
5849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  and @a __str.size().  The function then compares the two
5850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling
5851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
5852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
5853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the shorter one is ordered first.
5854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
5857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a substring.
5860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character of substring.
5861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
5862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
5863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
5864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters in substring of str.
5865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
5868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
5869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
5870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
5871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
5872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
5873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 673


5874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings to compare as the smallest of the lengths of the
5875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substrings.  The function then compares the two strings by
5876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  calling
5877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
5878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
5880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
5883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
5884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a C string.
5887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
5888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
5891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
5892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
5893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of size() and the length of a string
5894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
5895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
5896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
5897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  ordered first.
5898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
5901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 5 String::compare specification questionable
5904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a C string.
5906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
5907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
5908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
5909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
5912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
5913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
5914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
5915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
5916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of the length of the substring and
5917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of a string constructed from @a __s.  The
5918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two string by calling
5919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
5920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
5922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
5925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring against a character %array.
5928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
5929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
5930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  character %array to compare against.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 674


5931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters of s.
5932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
5935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
5936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
5937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  if this substring is ordered before the string from @a __s,
5938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
5939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
5940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  effective length rlen of the strings to compare as the
5941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
5942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two strings by calling
5943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
5944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
5946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
5948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  no special meaning.
5949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
5952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2) const;
5953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus > 201703L
5955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(_CharT __x) const noexcept
5961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(const _CharT* __x) const noexcept
5965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(_CharT __x) const noexcept
5973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(const _CharT* __x) const noexcept
5977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++20
5979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # ifdef _GLIBCXX_TM_TS_INTERNAL
5981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend void
5982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_C1_for_exceptions(void* that, const char* s,
5983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    void* exc);
5984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend const char*
5985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_c_str(const void *that);
5986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend void
5987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_D1(void *that);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 675


5988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend void
5989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_D1_commit(void *that);
5990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # endif
5991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   };
5992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
5993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides >= 201606
5995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
5996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _InputIterator, typename _CharT
5997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     = typename iterator_traits<_InputIterator>::value_type,
5998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
5999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireInputIter<_InputIterator>,
6000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string(_InputIterator, _InputIterator, _Allocator = _Allocator())
6002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       -> basic_string<_CharT, char_traits<_CharT>, _Allocator>;
6003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
6005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // 3075. basic_string needs deduction guides from basic_string_view
6006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits,
6007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>, const _Allocator& = _Allocator())
6010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits,
6013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>,
6016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 const _Allocator& = _Allocator())
6019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
6021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
6022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator+
6024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate two strings.
6026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
6032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __str.append(__rhs);
6037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __str;
6038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate C string and string.
6042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 676


6045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const _CharT* __lhs,
6049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate character and string.
6053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate string and C string.
6063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __rhs)
6071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __str.append(__rhs);
6074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __str;
6075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate string and character.
6079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
6086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
6088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __string_type::size_type		__size_type;
6089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __string_type __str(__lhs);
6090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __str.append(__size_type(1), __rhs);
6091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __str;
6092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
6095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 677


6102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
6113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       using _Alloc_traits = allocator_traits<_Alloc>;
6114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool __use_rhs = false;
6115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       if _GLIBCXX17_CONSTEXPR (typename _Alloc_traits::is_always_equal{})
6116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__use_rhs = true;
6117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       else if (__lhs.get_allocator() == __rhs.get_allocator())
6118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__use_rhs = true;
6119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       if (__use_rhs)
6120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
6121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
6122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const auto __size = __lhs.size() + __rhs.size();
6123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__size > __lhs.capacity() && __size <= __rhs.capacity())
6124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    return std::move(__rhs.insert(0, __lhs));
6125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
6126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return std::move(__lhs.append(__rhs));
6127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const _CharT* __lhs,
6132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(_CharT __lhs,
6138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
6140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __rhs)
6145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _CharT __rhs)
6151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
6152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
6153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator ==
6155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test equivalence of two strings.
6157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 678


6159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
6166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT>
6169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline
6170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
6171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
6172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
6173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return (__lhs.size() == __rhs.size()
6174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
6175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 						    __lhs.size())); }
6176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test equivalence of string and C string.
6179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  String.
6180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  C string.
6181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const _CharT* __rhs)
6187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_lib_three_way_comparison
6190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Three-way comparison of a string and a C string.
6192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  A string.
6193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  A null-terminated string.
6194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  A value indicating whether `__lhs` is less than, equal to,
6195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *	       greater than, or incomparable with `__rhs`.
6196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline auto
6199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<=>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		const basic_string<_CharT, _Traits, _Alloc>& __rhs) noexcept
6201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     -> decltype(__detail::__char_traits_cmp_cat<_Traits>(0))
6202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __detail::__char_traits_cmp_cat<_Traits>(__lhs.compare(__rhs)); }
6203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Three-way comparison of a string and a C string.
6206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  A string.
6207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  A null-terminated string.
6208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  A value indicating whether `__lhs` is less than, equal to,
6209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *	       greater than, or incomparable with `__rhs`.
6210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline auto
6213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<=>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		const _CharT* __rhs) noexcept
6215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     -> decltype(__detail::__char_traits_cmp_cat<_Traits>(0))
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 679


6216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __detail::__char_traits_cmp_cat<_Traits>(__lhs.compare(__rhs)); }
6217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
6218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test equivalence of C string and string.
6220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  C string.
6221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  String.
6222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
6223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const _CharT* __lhs,
6227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
6229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator !=
6231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test difference of two strings.
6233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
6242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return !(__lhs == __rhs); }
6243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test difference of C string and string.
6246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  C string.
6247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  String.
6248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) != 0.  False otherwise.
6249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator!=(const _CharT* __lhs,
6253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return !(__lhs == __rhs); }
6255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test difference of string and C string.
6258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  String.
6259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  C string.
6260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const _CharT* __rhs)
6266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return !(__lhs == __rhs); }
6267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator <
6269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if string precedes string.
6271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 680


6273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 16662              		.loc 18 6277 5 view .LVU3858
 16663              	.LBB9444:
 16664              	.LBB9445:
 16665              	.LBB9446:
 16666              	.LBB9447:
 16667              	.LBB9448:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16668              		.loc 21 347 2 view .LVU3859
 16669 0020 6669     		ldr	r6, [r4, #20]
 16670              	.LBE9448:
 16671              	.LBE9447:
 16672              	.LBE9446:
 16673              	.LBI9445:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16674              		.loc 18 2852 7 view .LVU3860
 16675              	.LVL1048:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16676              		.loc 18 2852 7 is_stmt 0 view .LVU3861
 16677 0022 4546     		mov	r5, r8
 16678 0024 2769     		ldr	r7, [r4, #16]
 16679              	.LBB9454:
 16680              	.LBB9451:
 16681              	.LBB9449:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16682              		.loc 21 347 25 view .LVU3862
 16683 0026 5046     		mov	r0, r10
 16684 0028 B045     		cmp	r8, r6
 16685 002a 3946     		mov	r1, r7
 16686 002c 28BF     		it	cs
 16687 002e 3546     		movcs	r5, r6
 16688              	.LVL1049:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16689              		.loc 21 347 25 view .LVU3863
 16690              	.LBE9449:
 16691              	.LBI9447:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 16692              		.loc 21 337 7 is_stmt 1 view .LVU3864
 16693              	.LBB9450:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 16694              		.loc 21 339 2 view .LVU3865
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16695              		.loc 21 347 25 is_stmt 0 view .LVU3866
 16696 0030 2A46     		mov	r2, r5
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 16697              		.loc 21 339 2 view .LVU3867
 16698 0032 15B1     		cbz	r5, .L728
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16699              		.loc 21 347 25 view .LVU3868
 16700 0034 FFF7FEFF 		bl	memcmp
 16701              	.LVL1050:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16702              		.loc 21 347 25 view .LVU3869
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 681


 16703              	.LBE9450:
 16704              	.LBE9451:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 16705              		.loc 18 2859 2 view .LVU3870
 16706 0038 08B9     		cbnz	r0, .L729
 16707              	.LVL1051:
 16708              	.L728:
 16709              	.LBB9452:
 16710              	.LBI9452:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16711              		.loc 18 401 7 is_stmt 1 view .LVU3871
 16712              	.LBB9453:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16713              		.loc 18 403 51 is_stmt 0 view .LVU3872
 16714 003a A8EB0600 		sub	r0, r8, r6
 16715              	.LVL1052:
 16716              	.L729:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16717              		.loc 18 403 51 view .LVU3873
 16718              	.LBE9453:
 16719              	.LBE9452:
 16720              	.LBE9454:
 16721              	.LBE9445:
 16722              	.LBE9444:
 16723              	.LBE9443:
 16724              	.LBE9442:
 16725 003e 0028     		cmp	r0, #0
 16726              	.LBB9455:
 16727              	.LBB9456:
 798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 16728              		.loc 29 798 53 view .LVU3874
 16729 0040 D4E90212 		ldrd	r1, r2, [r4, #8]
 16730              	.LBE9456:
 16731              	.LBE9455:
 16732 0044 AEBF     		itee	ge
 16733 0046 0021     		movge	r1, #0
 16734 0048 0A46     		movlt	r2, r1
 16735 004a 0121     		movlt	r1, #1
 16736              	.LVL1053:
 16737              		.loc 29 2098 18 is_stmt 1 view .LVU3875
 16738 004c 002A     		cmp	r2, #0
 16739 004e E6D1     		bne	.L745
 16740              	.LVL1054:
 16741              	.LBB9457:
 16742              	.LBI9457:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 16743              		.loc 29 273 7 view .LVU3876
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 16744              		.loc 29 273 7 is_stmt 0 view .LVU3877
 16745              	.LBE9457:
2099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x;
2101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
2102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = __comp ? _S_left(__x) : _S_right(__x);
2103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator __j = iterator(__y);
2105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__comp)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 682


 16746              		.loc 29 2105 7 view .LVU3878
 16747 0050 B9B9     		cbnz	r1, .L725
 16748 0052 A346     		mov	fp, r4
 16749              	.LVL1055:
 16750              	.L732:
 16751              	.LBB9458:
 16752              	.LBI9458:
 16753              		.loc 40 385 7 is_stmt 1 view .LVU3879
 16754              	.LBB9459:
 16755              	.LBI9459:
 16756              		.loc 18 6277 5 view .LVU3880
 16757              	.LBB9460:
 16758              	.LBI9460:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16759              		.loc 18 2852 7 view .LVU3881
 16760              	.LBB9461:
 16761              	.LBB9462:
 16762              	.LBI9462:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 16763              		.loc 21 337 7 view .LVU3882
 16764              	.LBB9463:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 16765              		.loc 21 339 2 view .LVU3883
 16766 0054 8DB1     		cbz	r5, .L735
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16767              		.loc 21 347 2 view .LVU3884
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16768              		.loc 21 347 25 is_stmt 0 view .LVU3885
 16769 0056 2A46     		mov	r2, r5
 16770 0058 5146     		mov	r1, r10
 16771 005a 3846     		mov	r0, r7
 16772 005c FFF7FEFF 		bl	memcmp
 16773              	.LVL1056:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16774              		.loc 21 347 25 view .LVU3886
 16775              	.LBE9463:
 16776              	.LBE9462:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 16777              		.loc 18 2859 2 view .LVU3887
 16778 0060 58B1     		cbz	r0, .L735
 16779              	.L736:
 16780              	.LVL1057:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 16781              		.loc 18 2859 2 view .LVU3888
 16782              	.LBE9461:
 16783              	.LBE9460:
 16784              	.LBE9459:
 16785              	.LBE9458:
2106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__j == begin())
2108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(__x, __y);
2109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    --__j;
2111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 16786              		.loc 29 2112 7 view .LVU3889
 16787 0062 0028     		cmp	r0, #0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 683


 16788              	.LVL1058:
 16789              	.LBB9469:
 16790              	.LBI9469:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 16791              		.loc 30 352 12 is_stmt 1 view .LVU3890
 16792              	.LBB9470:
 16793              	.LBB9471:
 16794              	.LBB9472:
 16795              	.LBI9472:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16796              		.loc 34 76 5 view .LVU3891
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16797              		.loc 34 76 5 is_stmt 0 view .LVU3892
 16798              	.LBE9472:
 16799              		.loc 30 353 64 view .LVU3893
 16800 0064 4FF00003 		mov	r3, #0
 16801              	.LBE9471:
 16802              	.LBE9470:
 16803              	.LBE9469:
2113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _Res(__x, __y);
2114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return _Res(__j._M_node, 0);
2115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 16804              		.loc 29 2115 5 view .LVU3894
 16805 0068 4846     		mov	r0, r9
 16806              	.LBB9476:
 16807              	.LBB9475:
 16808              	.LBB9474:
 16809              		.loc 30 353 64 view .LVU3895
 16810 006a B4BF     		ite	lt
 16811 006c C9E9003B 		strdlt	r3, fp, [r9]
 16812              	.LVL1059:
 16813              	.LBB9473:
 16814              	.LBI9473:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16815              		.loc 34 76 5 is_stmt 1 view .LVU3896
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16816              		.loc 34 76 5 is_stmt 0 view .LVU3897
 16817              	.LBE9473:
 16818              	.LBE9474:
 16819              	.LBE9475:
 16820              	.LBE9476:
 16821              	.LBB9477:
 16822              	.LBI9477:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 16823              		.loc 30 322 18 is_stmt 1 view .LVU3898
 16824              	.LBB9478:
 16825              	.LBB9479:
 16826              	.LBB9480:
 16827              	.LBI9480:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16828              		.loc 34 76 5 view .LVU3899
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16829              		.loc 34 76 5 is_stmt 0 view .LVU3900
 16830              	.LBE9480:
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 16831              		.loc 30 323 51 view .LVU3901
 16832 0070 C9E90043 		strdge	r4, r3, [r9]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 684


 16833              	.LVL1060:
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 16834              		.loc 30 323 51 view .LVU3902
 16835              	.LBE9479:
 16836              	.LBE9478:
 16837              	.LBE9477:
 16838              		.loc 29 2115 5 view .LVU3903
 16839 0074 03B0     		add	sp, sp, #12
 16840              		.cfi_remember_state
 16841              		.cfi_def_cfa_offset 36
 16842              		@ sp needed
 16843 0076 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 16844              	.LVL1061:
 16845              	.L735:
 16846              		.cfi_restore_state
 16847              	.LBB9481:
 16848              	.LBB9468:
 16849              	.LBB9467:
 16850              	.LBB9466:
 16851              	.LBB9464:
 16852              	.LBI9464:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16853              		.loc 18 401 7 is_stmt 1 view .LVU3904
 16854              	.LBB9465:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16855              		.loc 18 403 51 is_stmt 0 view .LVU3905
 16856 007a A6EB0800 		sub	r0, r6, r8
 16857              	.LVL1062:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16858              		.loc 18 403 51 view .LVU3906
 16859              	.LBE9465:
 16860              	.LBE9464:
 16861 007e F0E7     		b	.L736
 16862              	.LVL1063:
 16863              	.L747:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16864              		.loc 18 403 51 view .LVU3907
 16865              	.LBE9466:
 16866              	.LBE9467:
 16867              	.LBE9468:
 16868              	.LBE9481:
 16869              	.LBB9482:
 16870              	.LBB9441:
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 16871              		.loc 29 760 31 view .LVU3908
 16872 0080 0C1D     		adds	r4, r1, #4
 16873              	.LVL1064:
 16874              	.L725:
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 16875              		.loc 29 760 31 view .LVU3909
 16876              	.LBE9441:
 16877              	.LBE9482:
 16878              	.LBB9483:
 16879              	.LBI9483:
1002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(this->_M_impl._M_header._M_left); }
 16880              		.loc 29 1002 7 is_stmt 1 view .LVU3910
 16881              	.LBB9484:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 685


 16882              	.LBB9485:
 16883              	.LBI9485:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 16884              		.loc 29 273 7 view .LVU3911
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 16885              		.loc 29 273 7 is_stmt 0 view .LVU3912
 16886              	.LBE9485:
 16887              	.LBE9484:
 16888              	.LBE9483:
2107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(__x, __y);
 16889              		.loc 29 2107 4 view .LVU3913
 16890 0082 DBF80C30 		ldr	r3, [fp, #12]
 16891 0086 A342     		cmp	r3, r4
 16892 0088 10D0     		beq	.L748
 16893              	.LVL1065:
 16894              	.LBB9486:
 16895              	.LBI9486:
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 16896              		.loc 29 300 7 is_stmt 1 view .LVU3914
 16897              	.LBB9487:
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 16898              		.loc 29 302 30 is_stmt 0 view .LVU3915
 16899 008a 2046     		mov	r0, r4
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 16900              		.loc 29 303 10 view .LVU3916
 16901 008c A346     		mov	fp, r4
 16902              	.LVL1066:
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 16903              		.loc 29 302 30 view .LVU3917
 16904 008e FFF7FEFF 		bl	_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
 16905              	.LVL1067:
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 16906              		.loc 29 302 30 view .LVU3918
 16907 0092 019B     		ldr	r3, [sp, #4]
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 16908              		.loc 29 303 10 view .LVU3919
 16909 0094 0446     		mov	r4, r0
 16910 0096 D3F80480 		ldr	r8, [r3, #4]
 16911 009a D3F800A0 		ldr	r10, [r3]
 16912 009e D0E90476 		ldrd	r7, r6, [r0, #16]
 16913 00a2 4645     		cmp	r6, r8
 16914 00a4 3546     		mov	r5, r6
 16915 00a6 28BF     		it	cs
 16916 00a8 4546     		movcs	r5, r8
 16917 00aa D3E7     		b	.L732
 16918              	.LVL1068:
 16919              	.L748:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 16920              		.loc 29 303 10 view .LVU3920
 16921              	.LBE9487:
 16922              	.LBE9486:
 16923              	.LBB9488:
 16924              	.LBI9488:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 16925              		.loc 30 352 12 is_stmt 1 view .LVU3921
 16926              	.LBB9489:
 16927              	.LBB9490:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 686


 16928              	.LBB9491:
 16929              	.LBI9491:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16930              		.loc 34 76 5 view .LVU3922
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16931              		.loc 34 76 5 is_stmt 0 view .LVU3923
 16932              	.LBE9491:
 16933              		.loc 30 353 64 view .LVU3924
 16934 00ac 0023     		movs	r3, #0
 16935              	.LBE9490:
 16936              	.LBE9489:
 16937              	.LBE9488:
 16938              		.loc 29 2115 5 view .LVU3925
 16939 00ae 4846     		mov	r0, r9
 16940              	.LBB9495:
 16941              	.LBB9494:
 16942              	.LBB9493:
 16943              		.loc 30 353 64 view .LVU3926
 16944 00b0 C9E90034 		strd	r3, r4, [r9]
 16945              	.LVL1069:
 16946              	.LBB9492:
 16947              	.LBI9492:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16948              		.loc 34 76 5 is_stmt 1 view .LVU3927
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16949              		.loc 34 76 5 is_stmt 0 view .LVU3928
 16950              	.LBE9492:
 16951              	.LBE9493:
 16952              	.LBE9494:
 16953              	.LBE9495:
 16954              		.loc 29 2115 5 view .LVU3929
 16955 00b4 03B0     		add	sp, sp, #12
 16956              		.cfi_def_cfa_offset 36
 16957              		@ sp needed
 16958 00b6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 16959              		.loc 29 2115 5 view .LVU3930
 16960              		.cfi_endproc
 16961              	.LFE6061:
 16963 00ba 00BF     		.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6v
 16964              		.align	1
 16965              		.p2align 2,,3
 16966              		.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSa
 16967              		.syntax unified
 16968              		.thumb
 16969              		.thumb_func
 16970              		.fpu fpv5-d16
 16972              	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt
 16973              	.LVL1070:
 16974              	.LFB5963:
2116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
2121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
2122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
2123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 687


2124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_get_insert_equal_pos(const key_type& __k)
2125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
2127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type __x = _M_begin();
2128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr __y = _M_end();
2129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
2130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x;
2132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = _M_impl._M_key_compare(__k, _S_key(__x)) ?
2133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_S_left(__x) : _S_right(__x);
2134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return _Res(__x, __y);
2136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg>
2142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::iterator, bool>
2145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_unique(_Arg&& __v)
2148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
2149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_unique(const _Val& __v)
2150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef pair<iterator, bool> _Res;
2153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr> __res
2154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
2155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__res.second)
2157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
2159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return _Res(_M_insert_(__res.first, __res.second,
2160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				 _GLIBCXX_FORWARD(_Arg, __v), __an),
2161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      true);
2162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return _Res(iterator(__res.first), false);
2165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg>
2171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_equal(_Arg&& __v)
2176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
2177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_equal(const _Val& __v)
2178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr> __res
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 688


2181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	= _M_get_insert_equal_pos(_KeyOfValue()(__v));
2182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Alloc_node __an(*this);
2183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return _M_insert_(__res.first, __res.second,
2184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			_GLIBCXX_FORWARD(_Arg, __v), __an);
2185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
2191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
2192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
2193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 16975              		.loc 29 2193 5 is_stmt 1 view -0
 16976              		.cfi_startproc
 16977              		@ args = 0, pretend = 0, frame = 8
 16978              		@ frame_needed = 0, uses_anonymous_args = 0
 16979              		.loc 29 2193 5 is_stmt 0 view .LVU3932
 16980 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 16981              		.cfi_def_cfa_offset 36
 16982              		.cfi_offset 4, -36
 16983              		.cfi_offset 5, -32
 16984              		.cfi_offset 6, -28
 16985              		.cfi_offset 7, -24
 16986              		.cfi_offset 8, -20
 16987              		.cfi_offset 9, -16
 16988              		.cfi_offset 10, -12
 16989              		.cfi_offset 11, -8
 16990              		.cfi_offset 14, -4
 16991 0004 1F46     		mov	r7, r3
 16992              	.LBB9667:
 16993              	.LBB9668:
 16994              	.LBB9669:
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 16995              		.loc 29 760 31 view .LVU3933
 16996 0006 0B1D     		adds	r3, r1, #4
 16997              	.LVL1071:
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 16998              		.loc 29 760 31 view .LVU3934
 16999              	.LBE9669:
 17000              	.LBE9668:
 17001              	.LBE9667:
 17002              		.loc 29 2193 5 view .LVU3935
 17003 0008 83B0     		sub	sp, sp, #12
 17004              		.cfi_def_cfa_offset 48
 17005              		.loc 29 2193 5 view .LVU3936
 17006 000a 0E46     		mov	r6, r1
 17007              	.LBB9778:
2194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_get_insert_hint_unique_pos(const_iterator __position,
2195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				  const key_type& __k)
2196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator __pos = __position._M_const_cast();
2198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
2199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // end()
2201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__pos._M_node == _M_end())
 17008              		.loc 29 2201 7 view .LVU3937
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 689


 17009 000c 9A42     		cmp	r2, r3
 17010              	.LBE9778:
2193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_get_insert_hint_unique_pos(const_iterator __position,
 17011              		.loc 29 2193 5 view .LVU3938
 17012 000e 0546     		mov	r5, r0
 17013              	.LVL1072:
 17014              	.LBB9779:
 17015              	.LBI9779:
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 17016              		.loc 29 354 7 is_stmt 1 view .LVU3939
 17017              	.LBB9780:
 17018              	.LBB9781:
 17019              	.LBI9781:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 17020              		.loc 29 273 7 view .LVU3940
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 17021              		.loc 29 273 7 is_stmt 0 view .LVU3941
 17022              	.LBE9781:
 17023              	.LBE9780:
 17024              	.LBE9779:
 17025              	.LBB9782:
 17026              	.LBB9670:
 17027              	.LBI9668:
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 17028              		.loc 29 759 7 is_stmt 1 view .LVU3942
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 17029              		.loc 29 759 7 is_stmt 0 view .LVU3943
 17030              	.LBE9670:
 17031              		.loc 29 2201 7 view .LVU3944
 17032 0010 4DD0     		beq	.L788
 17033              	.LVL1073:
 17034              	.LBB9671:
 17035              	.LBB9672:
 17036              	.LBI9672:
 17037              		.loc 40 385 7 is_stmt 1 view .LVU3945
 17038              	.LBB9673:
 17039              	.LBI9673:
 17040              		.loc 18 6277 5 view .LVU3946
 17041 0012 1446     		mov	r4, r2
 17042              	.LVL1074:
 17043              		.loc 18 6277 5 is_stmt 0 view .LVU3947
 17044 0014 D7E900B8 		ldrd	fp, r8, [r7]
 17045 0018 D2E90419 		ldrd	r1, r9, [r2, #16]
 17046              	.LVL1075:
 17047              		.loc 18 6277 5 view .LVU3948
 17048 001c C246     		mov	r10, r8
 17049 001e C845     		cmp	r8, r9
 17050 0020 28BF     		it	cs
 17051 0022 CA46     		movcs	r10, r9
 17052              	.LVL1076:
 17053              	.LBB9674:
 17054              	.LBB9675:
 17055              	.LBB9676:
 17056              	.LBB9677:
 17057              	.LBI9677:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 17058              		.loc 21 337 7 is_stmt 1 view .LVU3949
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 690


 17059              	.LBB9678:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 17060              		.loc 21 339 2 view .LVU3950
 17061 0024 BAF1000F 		cmp	r10, #0
 17062 0028 1CD0     		beq	.L755
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17063              		.loc 21 347 2 view .LVU3951
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17064              		.loc 21 347 25 is_stmt 0 view .LVU3952
 17065 002a 5246     		mov	r2, r10
 17066              	.LVL1077:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17067              		.loc 21 347 25 view .LVU3953
 17068 002c 5846     		mov	r0, fp
 17069              	.LVL1078:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17070              		.loc 21 347 25 view .LVU3954
 17071 002e 0191     		str	r1, [sp, #4]
 17072 0030 FFF7FEFF 		bl	memcmp
 17073              	.LVL1079:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17074              		.loc 21 347 25 view .LVU3955
 17075              	.LBE9678:
 17076              	.LBE9677:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 17077              		.loc 18 2859 2 view .LVU3956
 17078 0034 0028     		cmp	r0, #0
 17079 0036 0199     		ldr	r1, [sp, #4]
 17080 0038 02D1     		bne	.L786
 17081              	.LVL1080:
 17082              	.LBB9679:
 17083              	.LBI9679:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17084              		.loc 18 401 7 is_stmt 1 view .LVU3957
 17085              	.LBB9680:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17086              		.loc 18 403 51 is_stmt 0 view .LVU3958
 17087 003a A8EB0903 		sub	r3, r8, r9
 17088              	.LBE9680:
 17089              	.LBE9679:
 17090              	.LBE9676:
 17091              	.LBE9675:
 17092              	.LBE9674:
 17093              	.LBE9673:
 17094              	.LBE9672:
2202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (size() > 0
2204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
2205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
2206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _M_get_insert_unique_pos(__k);
2208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 17095              		.loc 29 2209 12 view .LVU3959
 17096 003e 002B     		cmp	r3, #0
 17097              	.L786:
 17098 0040 14DB     		blt	.L768
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 691


 17099              	.LVL1081:
 17100              	.LBB9687:
 17101              	.LBB9688:
 17102              	.LBB9689:
 17103              	.LBB9690:
 17104              	.LBB9691:
 17105              	.LBB9692:
 17106              	.LBB9693:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17107              		.loc 21 347 2 is_stmt 1 view .LVU3960
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17108              		.loc 21 347 25 is_stmt 0 view .LVU3961
 17109 0042 0846     		mov	r0, r1
 17110 0044 5246     		mov	r2, r10
 17111 0046 5946     		mov	r1, fp
 17112 0048 FFF7FEFF 		bl	memcmp
 17113              	.LVL1082:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17114              		.loc 21 347 25 view .LVU3962
 17115              	.LBE9693:
 17116              	.LBE9692:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 17117              		.loc 18 2859 2 view .LVU3963
 17118 004c 08B9     		cbnz	r0, .L762
 17119              	.LVL1083:
 17120              	.L770:
 17121              	.LBB9694:
 17122              	.LBI9694:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17123              		.loc 18 401 7 is_stmt 1 view .LVU3964
 17124              	.LBB9695:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17125              		.loc 18 403 51 is_stmt 0 view .LVU3965
 17126 004e A9EB0800 		sub	r0, r9, r8
 17127              	.LVL1084:
 17128              	.L762:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17129              		.loc 18 403 51 view .LVU3966
 17130              	.LBE9695:
 17131              	.LBE9694:
 17132              	.LBE9691:
 17133              	.LBE9690:
 17134              	.LBE9689:
 17135              	.LBE9688:
2210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  // First, try before...
2212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  iterator __before = __pos;
2213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__pos._M_node == _M_leftmost()) // begin()
2214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(_M_leftmost(), _M_leftmost());
2215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
2216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
2217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (_S_right(__before._M_node) == 0)
2218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(0, __before._M_node);
2219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      else
2220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(__pos._M_node, __pos._M_node);
2221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
2222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 692


2223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _M_get_insert_unique_pos(__k);
2224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 17136              		.loc 29 2225 12 view .LVU3967
 17137 0052 0028     		cmp	r0, #0
 17138 0054 50DB     		blt	.L789
 17139              	.LVL1085:
 17140              	.LBB9696:
 17141              	.LBI9696:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 17142              		.loc 30 322 18 is_stmt 1 view .LVU3968
 17143              	.LBB9697:
 17144              	.LBB9698:
 17145              	.LBB9699:
 17146              	.LBI9699:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 17147              		.loc 34 76 5 view .LVU3969
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 17148              		.loc 34 76 5 is_stmt 0 view .LVU3970
 17149              	.LBE9699:
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 17150              		.loc 30 323 51 view .LVU3971
 17151 0056 0023     		movs	r3, #0
 17152 0058 C5E90043 		strd	r4, r3, [r5]
 17153              	.LVL1086:
 17154              	.L749:
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 17155              		.loc 30 323 51 view .LVU3972
 17156              	.LBE9698:
 17157              	.LBE9697:
 17158              	.LBE9696:
 17159              	.LBE9687:
 17160              	.LBE9671:
 17161              	.LBE9782:
2226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  // ... then try after.
2228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  iterator __after = __pos;
2229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__pos._M_node == _M_rightmost())
2230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
2231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
2232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
2233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (_S_right(__pos._M_node) == 0)
2234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(0, __pos._M_node);
2235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      else
2236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(__after._M_node, __after._M_node);
2237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
2238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _M_get_insert_unique_pos(__k);
2240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else
2242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// Equivalent keys.
2243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _Res(__pos._M_node, 0);
2244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 17162              		.loc 29 2244 5 view .LVU3973
 17163 005c 2846     		mov	r0, r5
 17164 005e 03B0     		add	sp, sp, #12
 17165              		.cfi_remember_state
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 693


 17166              		.cfi_def_cfa_offset 36
 17167              		@ sp needed
 17168 0060 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 17169              	.LVL1087:
 17170              	.L755:
 17171              		.cfi_restore_state
 17172              	.LBB9783:
 17173              	.LBB9763:
 17174              	.LBB9734:
 17175              	.LBB9686:
 17176              	.LBB9685:
 17177              	.LBB9684:
 17178              	.LBB9683:
 17179              	.LBB9682:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17180              		.loc 18 401 7 is_stmt 1 view .LVU3974
 17181              	.LBB9681:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17182              		.loc 18 403 51 is_stmt 0 view .LVU3975
 17183 0064 A8EB0903 		sub	r3, r8, r9
 17184              	.LBE9681:
 17185              	.LBE9682:
 17186              	.LBE9683:
 17187              	.LBE9684:
 17188              	.LBE9685:
 17189              	.LBE9686:
 17190              	.LBE9734:
2209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 17191              		.loc 29 2209 12 view .LVU3976
 17192 0068 002B     		cmp	r3, #0
 17193 006a F0DA     		bge	.L770
 17194              	.LVL1088:
 17195              	.L768:
 17196              	.LBB9735:
2213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(_M_leftmost(), _M_leftmost());
 17197              		.loc 29 2213 22 view .LVU3977
 17198 006c F368     		ldr	r3, [r6, #12]
2213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(_M_leftmost(), _M_leftmost());
 17199              		.loc 29 2213 4 view .LVU3978
 17200 006e A342     		cmp	r3, r4
 17201 0070 17D0     		beq	.L761
 17202              	.LVL1089:
 17203              	.LBB9736:
 17204              	.LBI9736:
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 17205              		.loc 29 300 7 is_stmt 1 view .LVU3979
 17206              	.LBB9737:
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 17207              		.loc 29 302 30 is_stmt 0 view .LVU3980
 17208 0072 2046     		mov	r0, r4
 17209 0074 FFF7FEFF 		bl	_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
 17210              	.LVL1090:
 17211 0078 D0F814A0 		ldr	r10, [r0, #20]
 17212 007c 8146     		mov	r9, r0
 17213              	.LVL1091:
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 17214              		.loc 29 302 30 view .LVU3981
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 694


 17215              	.LBE9737:
 17216              	.LBE9736:
 17217              	.LBB9738:
 17218              	.LBI9738:
 17219              		.loc 40 385 7 is_stmt 1 view .LVU3982
 17220              	.LBB9739:
 17221              	.LBI9739:
 17222              		.loc 18 6277 5 view .LVU3983
 17223              	.LBB9740:
 17224              	.LBB9741:
 17225              	.LBI9741:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17226              		.loc 18 2852 7 view .LVU3984
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17227              		.loc 18 2852 7 is_stmt 0 view .LVU3985
 17228 007e C245     		cmp	r10, r8
 17229 0080 5246     		mov	r2, r10
 17230 0082 28BF     		it	cs
 17231 0084 4246     		movcs	r2, r8
 17232              	.LVL1092:
 17233              	.LBB9742:
 17234              	.LBB9743:
 17235              	.LBI9743:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 17236              		.loc 21 337 7 is_stmt 1 view .LVU3986
 17237              	.LBB9744:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 17238              		.loc 21 339 2 view .LVU3987
 17239 0086 22B1     		cbz	r2, .L759
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17240              		.loc 21 347 2 view .LVU3988
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17241              		.loc 21 347 25 is_stmt 0 view .LVU3989
 17242 0088 5946     		mov	r1, fp
 17243 008a 0069     		ldr	r0, [r0, #16]
 17244              	.LVL1093:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17245              		.loc 21 347 25 view .LVU3990
 17246 008c FFF7FEFF 		bl	memcmp
 17247              	.LVL1094:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17248              		.loc 21 347 25 view .LVU3991
 17249              	.LBE9744:
 17250              	.LBE9743:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 17251              		.loc 18 2859 2 view .LVU3992
 17252 0090 08B9     		cbnz	r0, .L760
 17253              	.LVL1095:
 17254              	.L759:
 17255              	.LBB9745:
 17256              	.LBI9745:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17257              		.loc 18 401 7 is_stmt 1 view .LVU3993
 17258              	.LBB9746:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17259              		.loc 18 403 51 is_stmt 0 view .LVU3994
 17260 0092 AAEB0800 		sub	r0, r10, r8
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 695


 17261              	.LVL1096:
 17262              	.L760:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17263              		.loc 18 403 51 view .LVU3995
 17264              	.LBE9746:
 17265              	.LBE9745:
 17266              	.LBE9742:
 17267              	.LBE9741:
 17268              	.LBE9740:
 17269              	.LBE9739:
 17270              	.LBE9738:
2215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 17271              		.loc 29 2215 9 view .LVU3996
 17272 0096 0028     		cmp	r0, #0
 17273 0098 25DA     		bge	.L751
 17274              	.LVL1097:
 17275              	.LBB9747:
 17276              	.LBI9747:
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 17277              		.loc 29 797 7 is_stmt 1 view .LVU3997
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 17278              		.loc 29 797 7 is_stmt 0 view .LVU3998
 17279              	.LBE9747:
2217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(0, __before._M_node);
 17280              		.loc 29 2217 8 view .LVU3999
 17281 009a D9F80C30 		ldr	r3, [r9, #12]
 17282 009e 002B     		cmp	r3, #0
 17283 00a0 4BD0     		beq	.L790
 17284              	.LVL1098:
 17285              	.L761:
 17286              	.LBB9748:
 17287              	.LBI9748:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 17288              		.loc 30 352 12 is_stmt 1 view .LVU4000
 17289              	.LBB9749:
 17290              	.LBB9750:
 17291              	.LBB9751:
 17292              	.LBI9751:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 17293              		.loc 34 76 5 view .LVU4001
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 17294              		.loc 34 76 5 is_stmt 0 view .LVU4002
 17295              	.LBE9751:
 17296              	.LBE9750:
 17297              	.LBE9749:
 17298              	.LBE9748:
 17299              	.LBE9735:
 17300              	.LBE9763:
 17301              	.LBE9783:
 17302              		.loc 29 2244 5 view .LVU4003
 17303 00a2 2846     		mov	r0, r5
 17304              	.LBB9784:
 17305              	.LBB9764:
 17306              	.LBB9758:
 17307              	.LBB9754:
 17308              	.LBB9753:
 17309              	.LBB9752:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 696


 17310              		.loc 30 353 64 view .LVU4004
 17311 00a4 C5E90044 		strd	r4, r4, [r5]
 17312              	.LBE9752:
 17313              	.LBE9753:
 17314              	.LBE9754:
 17315              	.LBE9758:
 17316              	.LBE9764:
 17317              	.LBE9784:
 17318              		.loc 29 2244 5 view .LVU4005
 17319 00a8 03B0     		add	sp, sp, #12
 17320              		.cfi_remember_state
 17321              		.cfi_def_cfa_offset 36
 17322              		@ sp needed
 17323 00aa BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 17324              	.LVL1099:
 17325              	.L788:
 17326              		.cfi_restore_state
 17327              	.LBB9785:
 17328              	.LBB9765:
 17329              	.LBI9765:
1038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_impl._M_node_count; }
 17330              		.loc 29 1038 7 is_stmt 1 view .LVU4006
1038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_impl._M_node_count; }
 17331              		.loc 29 1038 7 is_stmt 0 view .LVU4007
 17332              	.LBE9765:
2204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
 17333              		.loc 29 2204 8 view .LVU4008
 17334 00ae 4B69     		ldr	r3, [r1, #20]
 17335 00b0 CBB1     		cbz	r3, .L751
2204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
 17336              		.loc 29 2204 33 discriminator 1 view .LVU4009
 17337 00b2 0C69     		ldr	r4, [r1, #16]
 17338              	.LVL1100:
 17339              	.LBB9766:
 17340              	.LBI9766:
 17341              		.loc 40 385 7 is_stmt 1 discriminator 1 view .LVU4010
 17342              	.LBB9767:
 17343              	.LBI9767:
 17344              		.loc 18 6277 5 discriminator 1 view .LVU4011
 17345 00b4 D7F80480 		ldr	r8, [r7, #4]
 17346 00b8 D4F81490 		ldr	r9, [r4, #20]
 17347              	.LBB9768:
 17348              	.LBB9769:
 17349              	.LBI9769:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17350              		.loc 18 2852 7 discriminator 1 view .LVU4012
 17351              	.LVL1101:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17352              		.loc 18 2852 7 is_stmt 0 discriminator 1 view .LVU4013
 17353 00bc C145     		cmp	r9, r8
 17354 00be 4A46     		mov	r2, r9
 17355              	.LVL1102:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17356              		.loc 18 2852 7 discriminator 1 view .LVU4014
 17357 00c0 28BF     		it	cs
 17358 00c2 4246     		movcs	r2, r8
 17359              	.LVL1103:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 697


 17360              	.LBB9770:
 17361              	.LBB9771:
 17362              	.LBI9771:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 17363              		.loc 21 337 7 is_stmt 1 discriminator 1 view .LVU4015
 17364              	.LBB9772:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 17365              		.loc 21 339 2 discriminator 1 view .LVU4016
 17366 00c4 22B1     		cbz	r2, .L752
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17367              		.loc 21 347 2 view .LVU4017
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17368              		.loc 21 347 25 is_stmt 0 view .LVU4018
 17369 00c6 3968     		ldr	r1, [r7]
 17370              	.LVL1104:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17371              		.loc 21 347 25 view .LVU4019
 17372 00c8 2069     		ldr	r0, [r4, #16]
 17373              	.LVL1105:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17374              		.loc 21 347 25 view .LVU4020
 17375 00ca FFF7FEFF 		bl	memcmp
 17376              	.LVL1106:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17377              		.loc 21 347 25 view .LVU4021
 17378              	.LBE9772:
 17379              	.LBE9771:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 17380              		.loc 18 2859 2 view .LVU4022
 17381 00ce 08B9     		cbnz	r0, .L753
 17382              	.LVL1107:
 17383              	.L752:
 17384              	.LBB9773:
 17385              	.LBI9773:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17386              		.loc 18 401 7 is_stmt 1 view .LVU4023
 17387              	.LBB9774:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17388              		.loc 18 403 51 is_stmt 0 view .LVU4024
 17389 00d0 A9EB0800 		sub	r0, r9, r8
 17390              	.LVL1108:
 17391              	.L753:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17392              		.loc 18 403 51 view .LVU4025
 17393              	.LBE9774:
 17394              	.LBE9773:
 17395              	.LBE9770:
 17396              	.LBE9769:
 17397              	.LBE9768:
 17398              	.LBE9767:
 17399              	.LBE9766:
2204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
 17400              		.loc 29 2204 8 view .LVU4026
 17401 00d4 0028     		cmp	r0, #0
 17402 00d6 06DA     		bge	.L751
 17403              	.LVL1109:
 17404              	.L787:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 698


 17405              	.LBB9775:
 17406              	.LBB9759:
 17407              	.LBB9700:
 17408              	.LBB9701:
 17409              	.LBI9701:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 17410              		.loc 30 336 18 is_stmt 1 view .LVU4027
 17411              	.LBB9702:
 17412              	.LBB9703:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 17413              		.loc 30 337 51 is_stmt 0 view .LVU4028
 17414 00d8 0023     		movs	r3, #0
 17415              	.LBE9703:
 17416              	.LBE9702:
 17417              	.LBE9701:
 17418              	.LBE9700:
 17419              	.LBE9759:
 17420              	.LBE9775:
 17421              	.LBE9785:
 17422              		.loc 29 2244 5 view .LVU4029
 17423 00da 2846     		mov	r0, r5
 17424              	.LBB9786:
 17425              	.LBB9776:
 17426              	.LBB9760:
 17427              	.LBB9732:
 17428              	.LBB9707:
 17429              	.LBB9706:
 17430              	.LBB9705:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 17431              		.loc 30 337 51 view .LVU4030
 17432 00dc C5E90034 		strd	r3, r4, [r5]
 17433              	.LVL1110:
 17434              	.LBB9704:
 17435              	.LBI9704:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 17436              		.loc 34 76 5 is_stmt 1 view .LVU4031
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 17437              		.loc 34 76 5 is_stmt 0 view .LVU4032
 17438              	.LBE9704:
 17439              	.LBE9705:
 17440              	.LBE9706:
 17441              	.LBE9707:
 17442              	.LBE9732:
 17443              	.LBE9760:
 17444              	.LBE9776:
 17445              	.LBE9786:
 17446              		.loc 29 2244 5 view .LVU4033
 17447 00e0 03B0     		add	sp, sp, #12
 17448              		.cfi_remember_state
 17449              		.cfi_def_cfa_offset 36
 17450              		@ sp needed
 17451 00e2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 17452              	.LVL1111:
 17453              	.L751:
 17454              		.cfi_restore_state
 17455              	.LBB9787:
2207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 699


 17456              		.loc 29 2207 37 discriminator 4 view .LVU4034
 17457 00e6 2846     		mov	r0, r5
 17458 00e8 3A46     		mov	r2, r7
 17459 00ea 3146     		mov	r1, r6
 17460 00ec FFF7FEFF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiE
 17461              	.LVL1112:
 17462              	.LBE9787:
 17463              		.loc 29 2244 5 discriminator 4 view .LVU4035
 17464 00f0 2846     		mov	r0, r5
 17465 00f2 03B0     		add	sp, sp, #12
 17466              		.cfi_remember_state
 17467              		.cfi_def_cfa_offset 36
 17468              		@ sp needed
 17469 00f4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 17470              	.LVL1113:
 17471              	.L789:
 17472              		.cfi_restore_state
 17473              	.LBB9788:
 17474              	.LBB9777:
 17475              	.LBB9761:
 17476              	.LBB9733:
2229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
 17477              		.loc 29 2229 22 view .LVU4036
 17478 00f8 3369     		ldr	r3, [r6, #16]
2229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
 17479              		.loc 29 2229 4 view .LVU4037
 17480 00fa A342     		cmp	r3, r4
 17481 00fc ECD0     		beq	.L787
 17482              	.LVL1114:
 17483              	.LBB9708:
 17484              	.LBI9708:
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 17485              		.loc 29 285 7 is_stmt 1 view .LVU4038
 17486              	.LBB9709:
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 17487              		.loc 29 287 30 is_stmt 0 view .LVU4039
 17488 00fe 2046     		mov	r0, r4
 17489 0100 FFF7FEFF 		bl	_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base
 17490              	.LVL1115:
 17491 0104 D0F814A0 		ldr	r10, [r0, #20]
 17492 0108 8146     		mov	r9, r0
 17493              	.LVL1116:
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 17494              		.loc 29 287 30 view .LVU4040
 17495              	.LBE9709:
 17496              	.LBE9708:
 17497              	.LBB9710:
 17498              	.LBI9710:
 17499              		.loc 40 385 7 is_stmt 1 view .LVU4041
 17500              	.LBB9711:
 17501              	.LBI9711:
 17502              		.loc 18 6277 5 view .LVU4042
 17503              	.LBB9712:
 17504              	.LBB9713:
 17505              	.LBI9713:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17506              		.loc 18 2852 7 view .LVU4043
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 700


2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17507              		.loc 18 2852 7 is_stmt 0 view .LVU4044
 17508 010a C245     		cmp	r10, r8
 17509 010c 5246     		mov	r2, r10
 17510 010e 28BF     		it	cs
 17511 0110 4246     		movcs	r2, r8
 17512              	.LVL1117:
 17513              	.LBB9714:
 17514              	.LBB9715:
 17515              	.LBI9715:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 17516              		.loc 21 337 7 is_stmt 1 view .LVU4045
 17517              	.LBB9716:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 17518              		.loc 21 339 2 view .LVU4046
 17519 0112 62B1     		cbz	r2, .L765
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17520              		.loc 21 347 2 view .LVU4047
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17521              		.loc 21 347 25 is_stmt 0 view .LVU4048
 17522 0114 5846     		mov	r0, fp
 17523              	.LVL1118:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17524              		.loc 21 347 25 view .LVU4049
 17525 0116 D9F81010 		ldr	r1, [r9, #16]
 17526 011a FFF7FEFF 		bl	memcmp
 17527              	.LVL1119:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 17528              		.loc 21 347 25 view .LVU4050
 17529              	.LBE9716:
 17530              	.LBE9715:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 17531              		.loc 18 2859 2 view .LVU4051
 17532 011e 30B1     		cbz	r0, .L765
 17533              	.L766:
 17534              	.LVL1120:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 17535              		.loc 18 2859 2 view .LVU4052
 17536              	.LBE9714:
 17537              	.LBE9713:
 17538              	.LBE9712:
 17539              	.LBE9711:
 17540              	.LBE9710:
2231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 17541              		.loc 29 2231 9 view .LVU4053
 17542 0120 0028     		cmp	r0, #0
 17543 0122 E0DA     		bge	.L751
 17544              	.LVL1121:
 17545              	.LBB9723:
 17546              	.LBI9723:
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 17547              		.loc 29 797 7 is_stmt 1 view .LVU4054
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 17548              		.loc 29 797 7 is_stmt 0 view .LVU4055
 17549              	.LBE9723:
2233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(0, __pos._M_node);
 17550              		.loc 29 2233 8 view .LVU4056
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 701


 17551 0124 E368     		ldr	r3, [r4, #12]
 17552 0126 2BB1     		cbz	r3, .L791
 17553              	.LVL1122:
 17554              	.LBB9724:
 17555              	.LBI9724:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 17556              		.loc 30 352 12 is_stmt 1 view .LVU4057
 17557              	.LBB9725:
 17558              	.LBB9726:
 17559              	.LBB9727:
 17560              	.LBI9727:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 17561              		.loc 34 76 5 view .LVU4058
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 17562              		.loc 34 76 5 is_stmt 0 view .LVU4059
 17563              	.LBE9727:
 17564              		.loc 30 353 64 view .LVU4060
 17565 0128 C5E90099 		strd	r9, r9, [r5]
 17566              	.LBE9726:
 17567              		.loc 30 353 68 view .LVU4061
 17568 012c 96E7     		b	.L749
 17569              	.LVL1123:
 17570              	.L765:
 17571              		.loc 30 353 68 view .LVU4062
 17572              	.LBE9725:
 17573              	.LBE9724:
 17574              	.LBB9728:
 17575              	.LBB9722:
 17576              	.LBB9721:
 17577              	.LBB9720:
 17578              	.LBB9719:
 17579              	.LBB9717:
 17580              	.LBI9717:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17581              		.loc 18 401 7 is_stmt 1 view .LVU4063
 17582              	.LBB9718:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17583              		.loc 18 403 51 is_stmt 0 view .LVU4064
 17584 012e A8EB0A00 		sub	r0, r8, r10
 17585              	.LVL1124:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17586              		.loc 18 403 51 view .LVU4065
 17587              	.LBE9718:
 17588              	.LBE9717:
 17589 0132 F5E7     		b	.L766
 17590              	.LVL1125:
 17591              	.L791:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17592              		.loc 18 403 51 view .LVU4066
 17593              	.LBE9719:
 17594              	.LBE9720:
 17595              	.LBE9721:
 17596              	.LBE9722:
 17597              	.LBE9728:
 17598              	.LBB9729:
 17599              	.LBI9729:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 702


 17600              		.loc 30 336 18 is_stmt 1 view .LVU4067
 17601              	.LBB9730:
 17602              	.LBB9731:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 17603              		.loc 30 337 51 is_stmt 0 view .LVU4068
 17604 0134 C5E90034 		strd	r3, r4, [r5]
 17605              	.LVL1126:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 17606              		.loc 30 337 51 view .LVU4069
 17607 0138 90E7     		b	.L749
 17608              	.LVL1127:
 17609              	.L790:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 17610              		.loc 30 337 51 view .LVU4070
 17611              	.LBE9731:
 17612              	.LBE9730:
 17613              	.LBE9729:
 17614              	.LBE9733:
 17615              	.LBE9761:
 17616              	.LBB9762:
 17617              	.LBB9755:
 17618              	.LBI9755:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 17619              		.loc 30 336 18 is_stmt 1 view .LVU4071
 17620              	.LBB9756:
 17621              	.LBB9757:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 17622              		.loc 30 337 51 is_stmt 0 view .LVU4072
 17623 013a C5E90039 		strd	r3, r9, [r5]
 17624              	.LVL1128:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 17625              		.loc 30 337 51 view .LVU4073
 17626 013e 8DE7     		b	.L749
 17627              	.LBE9757:
 17628              	.LBE9756:
 17629              	.LBE9755:
 17630              	.LBE9762:
 17631              	.LBE9777:
 17632              	.LBE9788:
 17633              		.cfi_endproc
 17634              	.LFE5963:
 17636              		.section	.rodata._Z41__static_initialization_and_destruction_0ii.constprop.0.str1.4,"aMS",%progbit
 17637              		.align	2
 17638              	.LC19:
 17639 0000 4300     		.ascii	"C\000"
 17640 0002 0000     		.align	2
 17641              	.LC20:
 17642 0004 432300   		.ascii	"C#\000"
 17643 0007 00       		.align	2
 17644              	.LC21:
 17645 0008 4400     		.ascii	"D\000"
 17646 000a 0000     		.align	2
 17647              	.LC22:
 17648 000c 442300   		.ascii	"D#\000"
 17649 000f 00       		.align	2
 17650              	.LC23:
 17651 0010 4500     		.ascii	"E\000"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 703


 17652 0012 0000     		.align	2
 17653              	.LC24:
 17654 0014 4600     		.ascii	"F\000"
 17655 0016 0000     		.align	2
 17656              	.LC25:
 17657 0018 462300   		.ascii	"F#\000"
 17658 001b 00       		.align	2
 17659              	.LC26:
 17660 001c 4700     		.ascii	"G\000"
 17661 001e 0000     		.align	2
 17662              	.LC27:
 17663 0020 472300   		.ascii	"G#\000"
 17664 0023 00       		.align	2
 17665              	.LC28:
 17666 0024 4100     		.ascii	"A\000"
 17667 0026 0000     		.align	2
 17668              	.LC29:
 17669 0028 412300   		.ascii	"A#\000"
 17670 002b 00       		.align	2
 17671              	.LC30:
 17672 002c 4200     		.ascii	"B\000"
 17673 002e 0000     		.align	2
 17674              	.LC31:
 17675 0030 433000   		.ascii	"C0\000"
 17676 0033 00       		.align	2
 17677              	.LC32:
 17678 0034 43233000 		.ascii	"C#0\000"
 17679              		.align	2
 17680              	.LC33:
 17681 0038 443000   		.ascii	"D0\000"
 17682 003b 00       		.align	2
 17683              	.LC34:
 17684 003c 44233000 		.ascii	"D#0\000"
 17685              		.align	2
 17686              	.LC35:
 17687 0040 453000   		.ascii	"E0\000"
 17688 0043 00       		.align	2
 17689              	.LC36:
 17690 0044 463000   		.ascii	"F0\000"
 17691 0047 00       		.align	2
 17692              	.LC37:
 17693 0048 46233000 		.ascii	"F#0\000"
 17694              		.align	2
 17695              	.LC38:
 17696 004c 473000   		.ascii	"G0\000"
 17697 004f 00       		.align	2
 17698              	.LC39:
 17699 0050 47233000 		.ascii	"G#0\000"
 17700              		.align	2
 17701              	.LC40:
 17702 0054 413000   		.ascii	"A0\000"
 17703 0057 00       		.align	2
 17704              	.LC41:
 17705 0058 41233000 		.ascii	"A#0\000"
 17706              		.align	2
 17707              	.LC42:
 17708 005c 423000   		.ascii	"B0\000"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 704


 17709 005f 00       		.align	2
 17710              	.LC43:
 17711 0060 433100   		.ascii	"C1\000"
 17712 0063 00       		.align	2
 17713              	.LC44:
 17714 0064 43233100 		.ascii	"C#1\000"
 17715              		.align	2
 17716              	.LC45:
 17717 0068 443100   		.ascii	"D1\000"
 17718 006b 00       		.align	2
 17719              	.LC46:
 17720 006c 44233100 		.ascii	"D#1\000"
 17721              		.align	2
 17722              	.LC47:
 17723 0070 453100   		.ascii	"E1\000"
 17724 0073 00       		.align	2
 17725              	.LC48:
 17726 0074 463100   		.ascii	"F1\000"
 17727 0077 00       		.align	2
 17728              	.LC49:
 17729 0078 46233100 		.ascii	"F#1\000"
 17730              		.align	2
 17731              	.LC50:
 17732 007c 473100   		.ascii	"G1\000"
 17733 007f 00       		.align	2
 17734              	.LC51:
 17735 0080 47233100 		.ascii	"G#1\000"
 17736              		.align	2
 17737              	.LC52:
 17738 0084 413100   		.ascii	"A1\000"
 17739 0087 00       		.align	2
 17740              	.LC53:
 17741 0088 41233100 		.ascii	"A#1\000"
 17742              		.align	2
 17743              	.LC54:
 17744 008c 423100   		.ascii	"B1\000"
 17745 008f 00       		.align	2
 17746              	.LC55:
 17747 0090 433200   		.ascii	"C2\000"
 17748 0093 00       		.align	2
 17749              	.LC56:
 17750 0094 43233200 		.ascii	"C#2\000"
 17751              		.align	2
 17752              	.LC57:
 17753 0098 443200   		.ascii	"D2\000"
 17754 009b 00       		.align	2
 17755              	.LC58:
 17756 009c 44233200 		.ascii	"D#2\000"
 17757              		.align	2
 17758              	.LC59:
 17759 00a0 453200   		.ascii	"E2\000"
 17760 00a3 00       		.align	2
 17761              	.LC60:
 17762 00a4 463200   		.ascii	"F2\000"
 17763 00a7 00       		.align	2
 17764              	.LC61:
 17765 00a8 46233200 		.ascii	"F#2\000"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 705


 17766              		.align	2
 17767              	.LC62:
 17768 00ac 473200   		.ascii	"G2\000"
 17769 00af 00       		.align	2
 17770              	.LC63:
 17771 00b0 47233200 		.ascii	"G#2\000"
 17772              		.align	2
 17773              	.LC64:
 17774 00b4 413200   		.ascii	"A2\000"
 17775 00b7 00       		.align	2
 17776              	.LC65:
 17777 00b8 41233200 		.ascii	"A#2\000"
 17778              		.align	2
 17779              	.LC66:
 17780 00bc 423200   		.ascii	"B2\000"
 17781 00bf 00       		.align	2
 17782              	.LC67:
 17783 00c0 433300   		.ascii	"C3\000"
 17784 00c3 00       		.align	2
 17785              	.LC68:
 17786 00c4 43233300 		.ascii	"C#3\000"
 17787              		.align	2
 17788              	.LC69:
 17789 00c8 443300   		.ascii	"D3\000"
 17790 00cb 00       		.align	2
 17791              	.LC70:
 17792 00cc 44233300 		.ascii	"D#3\000"
 17793              		.align	2
 17794              	.LC71:
 17795 00d0 453300   		.ascii	"E3\000"
 17796 00d3 00       		.align	2
 17797              	.LC72:
 17798 00d4 463300   		.ascii	"F3\000"
 17799 00d7 00       		.align	2
 17800              	.LC73:
 17801 00d8 46233300 		.ascii	"F#3\000"
 17802              		.align	2
 17803              	.LC74:
 17804 00dc 473300   		.ascii	"G3\000"
 17805 00df 00       		.align	2
 17806              	.LC75:
 17807 00e0 47233300 		.ascii	"G#3\000"
 17808              		.align	2
 17809              	.LC76:
 17810 00e4 413300   		.ascii	"A3\000"
 17811 00e7 00       		.align	2
 17812              	.LC77:
 17813 00e8 41233300 		.ascii	"A#3\000"
 17814              		.align	2
 17815              	.LC78:
 17816 00ec 423300   		.ascii	"B3\000"
 17817 00ef 00       		.align	2
 17818              	.LC79:
 17819 00f0 433400   		.ascii	"C4\000"
 17820 00f3 00       		.align	2
 17821              	.LC80:
 17822 00f4 43233400 		.ascii	"C#4\000"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 706


 17823              		.align	2
 17824              	.LC81:
 17825 00f8 443400   		.ascii	"D4\000"
 17826 00fb 00       		.align	2
 17827              	.LC82:
 17828 00fc 44233400 		.ascii	"D#4\000"
 17829              		.align	2
 17830              	.LC83:
 17831 0100 453400   		.ascii	"E4\000"
 17832 0103 00       		.align	2
 17833              	.LC84:
 17834 0104 463400   		.ascii	"F4\000"
 17835 0107 00       		.align	2
 17836              	.LC85:
 17837 0108 46233400 		.ascii	"F#4\000"
 17838              		.align	2
 17839              	.LC86:
 17840 010c 473400   		.ascii	"G4\000"
 17841 010f 00       		.align	2
 17842              	.LC87:
 17843 0110 47233400 		.ascii	"G#4\000"
 17844              		.align	2
 17845              	.LC88:
 17846 0114 413400   		.ascii	"A4\000"
 17847 0117 00       		.align	2
 17848              	.LC89:
 17849 0118 41233400 		.ascii	"A#4\000"
 17850              		.align	2
 17851              	.LC90:
 17852 011c 423400   		.ascii	"B4\000"
 17853 011f 00       		.align	2
 17854              	.LC91:
 17855 0120 4D616A6F 		.ascii	"Major\000"
 17855      7200
 17856 0126 0000     		.align	2
 17857              	.LC92:
 17858 0128 4D696E6F 		.ascii	"Minor\000"
 17858      7200
 17859 012e 0000     		.align	2
 17860              	.LC93:
 17861 0130 446F7269 		.ascii	"Dorian\000"
 17861      616E00
 17862 0137 00       		.align	2
 17863              	.LC94:
 17864 0138 50687972 		.ascii	"Phyrgi\000"
 17864      676900
 17865 013f 00       		.align	2
 17866              	.LC95:
 17867 0140 4C796469 		.ascii	"Lydian\000"
 17867      616E00
 17868 0147 00       		.align	2
 17869              	.LC96:
 17870 0148 4D69786F 		.ascii	"Mixo\000"
 17870      00
 17871 014d 000000   		.align	2
 17872              	.LC97:
 17873 0150 4C6F6372 		.ascii	"Locri\000"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 707


 17873      6900
 17874 0156 0000     		.align	2
 17875              	.LC98:
 17876 0158 4E6F6E65 		.ascii	"None\000"
 17876      00
 17877 015d 000000   		.align	2
 17878              	.LC99:
 17879 0160 44726F70 		.ascii	"Drop 2\000"
 17879      203200
 17880 0167 00       		.align	2
 17881              	.LC100:
 17882 0168 44726F70 		.ascii	"Drop 3\000"
 17882      203300
 17883 016f 00       		.align	2
 17884              	.LC101:
 17885 0170 44726F70 		.ascii	"Drop 4\000"
 17885      203400
 17886 0177 00       		.align	2
 17887              	.LC102:
 17888 0178 3100     		.ascii	"1\000"
 17889 017a 0000     		.align	2
 17890              	.LC103:
 17891 017c 3200     		.ascii	"2\000"
 17892 017e 0000     		.align	2
 17893              	.LC104:
 17894 0180 3400     		.ascii	"4\000"
 17895 0182 0000     		.align	2
 17896              	.LC105:
 17897 0184 3800     		.ascii	"8\000"
 17898 0186 0000     		.align	2
 17899              	.LC106:
 17900 0188 313600   		.ascii	"16\000"
 17901 018b 00       		.align	2
 17902              	.LC107:
 17903 018c 54726961 		.ascii	"Triad\000"
 17903      6400
 17904 0192 0000     		.align	2
 17905              	.LC108:
 17906 0194 54726961 		.ascii	"Triad+\000"
 17906      642B00
 17907 019b 00       		.align	2
 17908              	.LC109:
 17909 019c 37746800 		.ascii	"7th\000"
 17910              		.align	2
 17911              	.LC110:
 17912 01a0 3774682B 		.ascii	"7th+9th\000"
 17912      39746800 
 17913              		.align	2
 17914              	.LC111:
 17915 01a8 31317468 		.ascii	"11th\000"
 17915      00
 17916 01ad 000000   		.align	2
 17917              	.LC112:
 17918 01b0 31337468 		.ascii	"13th\000"
 17918      00
 17919 01b5 000000   		.align	2
 17920              	.LC113:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 708


 17921 01b8 36746800 		.ascii	"6th\000"
 17922              		.align	2
 17923              	.LC114:
 17924 01bc 53757332 		.ascii	"Sus2\000"
 17924      00
 17925 01c1 000000   		.align	2
 17926              	.LC115:
 17927 01c4 53757334 		.ascii	"Sus4\000"
 17927      00
 17928 01c9 000000   		.align	2
 17929              	.LC116:
 17930 01cc 506F7765 		.ascii	"Power\000"
 17930      7200
 17931 01d2 0000     		.align	2
 17932              	.LC117:
 17933 01d4 5368656C 		.ascii	"Shell 1\000"
 17933      6C203100 
 17934              		.align	2
 17935              	.LC118:
 17936 01dc 5368656C 		.ascii	"Shell 2\000"
 17936      6C203200 
 17937              		.align	2
 17938              	.LC119:
 17939 01e4 557000   		.ascii	"Up\000"
 17940 01e7 00       		.align	2
 17941              	.LC120:
 17942 01e8 446F776E 		.ascii	"Down\000"
 17942      00
 17943 01ed 000000   		.align	2
 17944              	.LC121:
 17945 01f0 552B4420 		.ascii	"U+D In\000"
 17945      496E00
 17946 01f7 00       		.align	2
 17947              	.LC122:
 17948 01f8 552B4420 		.ascii	"U+D Ex\000"
 17948      457800
 17949 01ff 00       		.align	2
 17950              	.LC123:
 17951 0200 52616E64 		.ascii	"Random\000"
 17951      6F6D00
 17952 0207 00       		.align	2
 17953              	.LC124:
 17954 0208 53772032 		.ascii	"Sw 25%\000"
 17954      352500
 17955 020f 00       		.align	2
 17956              	.LC125:
 17957 0210 53772035 		.ascii	"Sw 50%\000"
 17957      302500
 17958 0217 00       		.align	2
 17959              	.LC126:
 17960 0218 53772037 		.ascii	"Sw 75%\000"
 17960      352500
 17961 021f 00       		.align	2
 17962              	.LC127:
 17963 0220 53772031 		.ascii	"Sw 100%\000"
 17963      30302500 
 17964              		.align	2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 709


 17965              	.LC128:
 17966 0228 3000     		.ascii	"0\000"
 17967 022a 0000     		.align	2
 17968              	.LC129:
 17969 022c 2B3100   		.ascii	"+1\000"
 17970 022f 00       		.align	2
 17971              	.LC130:
 17972 0230 2B3200   		.ascii	"+2\000"
 17973              		.section	.text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0,"ax",%progbits
 17974              		.align	1
 17975              		.p2align 2,,3
 17976              		.syntax unified
 17977              		.thumb
 17978              		.thumb_func
 17979              		.fpu fpv5-d16
 17981              	_Z41__static_initialization_and_destruction_0ii.constprop.0:
 17982              	.LFB6226:
 17983              		.loc 17 282 1 is_stmt 1 view -0
 17984              		.cfi_startproc
 17985              		@ args = 0, pretend = 0, frame = 688
 17986              		@ frame_needed = 0, uses_anonymous_args = 0
 17987              	.LVL1129:
 17988              	.LBB10763:
 17989              	.LBI10763:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17990              		.loc 19 144 7 view .LVU4075
 17991              	.LBB10764:
 17992              	.LBI10764:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17993              		.loc 20 79 7 view .LVU4076
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17994              		.loc 20 79 7 is_stmt 0 view .LVU4077
 17995              	.LBE10764:
 17996              	.LBE10763:
 17997              		.loc 17 282 1 view .LVU4078
 17998 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 17999              		.cfi_def_cfa_offset 36
 18000              		.cfi_offset 4, -36
 18001              		.cfi_offset 5, -32
 18002              		.cfi_offset 6, -28
 18003              		.cfi_offset 7, -24
 18004              		.cfi_offset 8, -20
 18005              		.cfi_offset 9, -16
 18006              		.cfi_offset 10, -12
 18007              		.cfi_offset 11, -8
 18008              		.cfi_offset 14, -4
 18009 0004 ADF52D7D 		sub	sp, sp, #692
 18010              		.cfi_def_cfa_offset 728
 18011              		.file 41 "theory.h"
   1:theory.h      **** /* 
   2:theory.h      ****  * Copyright (C) 2021 Evan Pernu - All Rights Reserved
   3:theory.h      ****  * You may use, distribute and modify this code under the
   4:theory.h      ****  * terms of the GNU AGPLv3 license.
   5:theory.h      ****  * 
   6:theory.h      ****  * You should have received a copy of the GNU AGPLv3 license with
   7:theory.h      ****  * this file (LICENSE.md). If not, please write to: evanpernu@gmail.com, 
   8:theory.h      ****  * or visit: https://www.gnu.org/licenses/agpl-3.0.en.html
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 710


   9:theory.h      ****  */
  10:theory.h      **** 
  11:theory.h      **** #pragma once
  12:theory.h      **** 
  13:theory.h      **** #include <map>
  14:theory.h      **** #include <vector>
  15:theory.h      **** #include <string>
  16:theory.h      **** 
  17:theory.h      **** namespace jellybeans {
  18:theory.h      **** 
  19:theory.h      ****     const int MAX_NOTE = 60;
  20:theory.h      ****     const int MIN_NOTE = 0;
  21:theory.h      **** 
  22:theory.h      ****     // Returns true if the given note is diatonic to the given mode
  23:theory.h      ****     // @param a note's index in semitones from C or C0
  24:theory.h      ****     // @param an element of mu::allModes
  25:theory.h      ****     bool isDiatonic(int, std::string);
  26:theory.h      **** 
  27:theory.h      ****     // Note that the indices of these elements also correspond to
  28:theory.h      ****     // their semitone distances from C.
  29:theory.h      ****     const std::vector<std::string> allNotes {
  30:theory.h      ****         "C",
  31:theory.h      ****         "C#",
  32:theory.h      ****         "D",
  33:theory.h      ****         "D#",
  34:theory.h      ****         "E",
  35:theory.h      ****         "F",
  36:theory.h      ****         "F#",
  37:theory.h      ****         "G",
  38:theory.h      ****         "G#",
  39:theory.h      ****         "A",
  40:theory.h      ****         "A#",
  41:theory.h      ****         "B"
  42:theory.h      ****     };
 18012              		.loc 41 42 5 view .LVU4079
 18013 0008 A849     		ldr	r1, .L848
 18014 000a 64AC     		add	r4, sp, #400
 18015 000c ACAD     		add	r5, sp, #688
 18016 000e 2046     		mov	r0, r4
 18017 0010 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18018              	.LVL1130:
 18019              	.LBB10765:
 18020              	.LBI10765:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18021              		.loc 19 144 7 is_stmt 1 view .LVU4080
 18022              	.LBB10766:
 18023              	.LBI10766:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18024              		.loc 20 79 7 view .LVU4081
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18025              		.loc 20 79 7 is_stmt 0 view .LVU4082
 18026              	.LBE10766:
 18027              	.LBE10765:
 18028              		.loc 41 42 5 view .LVU4083
 18029 0014 A649     		ldr	r1, .L848+4
 18030 0016 6AA8     		add	r0, sp, #424
 18031 0018 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 711


 18032              	.LVL1131:
 18033              	.LBB10767:
 18034              	.LBI10767:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18035              		.loc 19 144 7 is_stmt 1 view .LVU4084
 18036              	.LBB10768:
 18037              	.LBI10768:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18038              		.loc 20 79 7 view .LVU4085
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18039              		.loc 20 79 7 is_stmt 0 view .LVU4086
 18040              	.LBE10768:
 18041              	.LBE10767:
 18042              		.loc 41 42 5 view .LVU4087
 18043 001c A549     		ldr	r1, .L848+8
 18044 001e 70A8     		add	r0, sp, #448
 18045 0020 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18046              	.LVL1132:
 18047              	.LBB10769:
 18048              	.LBI10769:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18049              		.loc 19 144 7 is_stmt 1 view .LVU4088
 18050              	.LBB10770:
 18051              	.LBI10770:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18052              		.loc 20 79 7 view .LVU4089
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18053              		.loc 20 79 7 is_stmt 0 view .LVU4090
 18054              	.LBE10770:
 18055              	.LBE10769:
 18056              		.loc 41 42 5 view .LVU4091
 18057 0024 A449     		ldr	r1, .L848+12
 18058 0026 76A8     		add	r0, sp, #472
 18059 0028 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18060              	.LVL1133:
 18061              	.LBB10771:
 18062              	.LBI10771:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18063              		.loc 19 144 7 is_stmt 1 view .LVU4092
 18064              	.LBB10772:
 18065              	.LBI10772:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18066              		.loc 20 79 7 view .LVU4093
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18067              		.loc 20 79 7 is_stmt 0 view .LVU4094
 18068              	.LBE10772:
 18069              	.LBE10771:
 18070              		.loc 41 42 5 view .LVU4095
 18071 002c A349     		ldr	r1, .L848+16
 18072 002e 7CA8     		add	r0, sp, #496
 18073 0030 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18074              	.LVL1134:
 18075              	.LBB10773:
 18076              	.LBI10773:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18077              		.loc 19 144 7 is_stmt 1 view .LVU4096
 18078              	.LBB10774:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 712


 18079              	.LBI10774:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18080              		.loc 20 79 7 view .LVU4097
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18081              		.loc 20 79 7 is_stmt 0 view .LVU4098
 18082              	.LBE10774:
 18083              	.LBE10773:
 18084              		.loc 41 42 5 view .LVU4099
 18085 0034 A249     		ldr	r1, .L848+20
 18086 0036 82A8     		add	r0, sp, #520
 18087 0038 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18088              	.LVL1135:
 18089              	.LBB10775:
 18090              	.LBI10775:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18091              		.loc 19 144 7 is_stmt 1 view .LVU4100
 18092              	.LBB10776:
 18093              	.LBI10776:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18094              		.loc 20 79 7 view .LVU4101
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18095              		.loc 20 79 7 is_stmt 0 view .LVU4102
 18096              	.LBE10776:
 18097              	.LBE10775:
 18098              		.loc 41 42 5 view .LVU4103
 18099 003c A149     		ldr	r1, .L848+24
 18100 003e 88A8     		add	r0, sp, #544
 18101 0040 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18102              	.LVL1136:
 18103              	.LBB10777:
 18104              	.LBI10777:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18105              		.loc 19 144 7 is_stmt 1 view .LVU4104
 18106              	.LBB10778:
 18107              	.LBI10778:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18108              		.loc 20 79 7 view .LVU4105
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18109              		.loc 20 79 7 is_stmt 0 view .LVU4106
 18110              	.LBE10778:
 18111              	.LBE10777:
 18112              		.loc 41 42 5 view .LVU4107
 18113 0044 A049     		ldr	r1, .L848+28
 18114 0046 8EA8     		add	r0, sp, #568
 18115 0048 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18116              	.LVL1137:
 18117              	.LBB10779:
 18118              	.LBI10779:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18119              		.loc 19 144 7 is_stmt 1 view .LVU4108
 18120              	.LBB10780:
 18121              	.LBI10780:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18122              		.loc 20 79 7 view .LVU4109
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18123              		.loc 20 79 7 is_stmt 0 view .LVU4110
 18124              	.LBE10780:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 713


 18125              	.LBE10779:
 18126              		.loc 41 42 5 view .LVU4111
 18127 004c 9F49     		ldr	r1, .L848+32
 18128 004e 94A8     		add	r0, sp, #592
 18129 0050 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18130              	.LVL1138:
 18131              	.LBB10781:
 18132              	.LBI10781:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18133              		.loc 19 144 7 is_stmt 1 view .LVU4112
 18134              	.LBB10782:
 18135              	.LBI10782:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18136              		.loc 20 79 7 view .LVU4113
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18137              		.loc 20 79 7 is_stmt 0 view .LVU4114
 18138              	.LBE10782:
 18139              	.LBE10781:
 18140              		.loc 41 42 5 view .LVU4115
 18141 0054 9E49     		ldr	r1, .L848+36
 18142 0056 9AA8     		add	r0, sp, #616
 18143 0058 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18144              	.LVL1139:
 18145              	.LBB10783:
 18146              	.LBI10783:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18147              		.loc 19 144 7 is_stmt 1 view .LVU4116
 18148              	.LBB10784:
 18149              	.LBI10784:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18150              		.loc 20 79 7 view .LVU4117
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18151              		.loc 20 79 7 is_stmt 0 view .LVU4118
 18152              	.LBE10784:
 18153              	.LBE10783:
 18154              		.loc 41 42 5 view .LVU4119
 18155 005c 9D49     		ldr	r1, .L848+40
 18156 005e A0A8     		add	r0, sp, #640
 18157 0060 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18158              	.LVL1140:
 18159              	.LBB10785:
 18160              	.LBI10785:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18161              		.loc 19 144 7 is_stmt 1 view .LVU4120
 18162              	.LBB10786:
 18163              	.LBI10786:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18164              		.loc 20 79 7 view .LVU4121
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18165              		.loc 20 79 7 is_stmt 0 view .LVU4122
 18166              	.LBE10786:
 18167              	.LBE10785:
 18168              		.loc 41 42 5 view .LVU4123
 18169 0064 9C49     		ldr	r1, .L848+44
 18170 0066 A6A8     		add	r0, sp, #664
 18171 0068 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18172              	.LVL1141:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 714


 18173 006c 0C23     		movs	r3, #12
 18174 006e 1AAA     		add	r2, sp, #104
 18175 0070 1A94     		str	r4, [sp, #104]
 18176 0072 1B93     		str	r3, [sp, #108]
 18177              	.LVL1142:
 18178              	.LBB10787:
 18179              	.LBI10787:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18180              		.loc 19 144 7 is_stmt 1 view .LVU4124
 18181              	.LBB10788:
 18182              	.LBI10788:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18183              		.loc 20 79 7 view .LVU4125
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18184              		.loc 20 79 7 is_stmt 0 view .LVU4126
 18185              	.LBE10788:
 18186              	.LBE10787:
 18187              		.loc 41 42 5 view .LVU4127
 18188 0074 5DAB     		add	r3, sp, #372
 18189 0076 9948     		ldr	r0, .L848+48
 18190 0078 06CA     		ldm	r2, {r1, r2}
 18191 007a FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 18192              	.LVL1143:
 18193              	.LBB10789:
 18194              	.LBI10789:
 18195              		.loc 19 162 7 is_stmt 1 view .LVU4128
 18196              	.LBB10790:
 18197              	.LBI10790:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18198              		.loc 20 89 7 view .LVU4129
 18199              	.L793:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18200              		.loc 20 89 7 is_stmt 0 view .LVU4130
 18201              	.LBE10790:
 18202              	.LBE10789:
 18203              		.loc 41 42 5 view .LVU4131
 18204 007e 183D     		subs	r5, r5, #24
 18205              	.LVL1144:
 18206              	.LBB10791:
 18207              	.LBI10791:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 18208              		.loc 18 657 7 is_stmt 1 view .LVU4132
 18209              	.LBB10792:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 18210              		.loc 18 658 19 is_stmt 0 view .LVU4133
 18211 0080 2846     		mov	r0, r5
 18212 0082 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 18213              	.LVL1145:
 18214              	.LBB10793:
 18215              	.LBI10793:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 18216              		.loc 18 150 14 is_stmt 1 view .LVU4134
 18217              	.LBB10794:
 18218              	.LBI10794:
 18219              		.loc 19 162 7 view .LVU4135
 18220              	.LBB10795:
 18221              	.LBI10795:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 715


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18222              		.loc 20 89 7 view .LVU4136
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18223              		.loc 20 89 7 is_stmt 0 view .LVU4137
 18224              	.LBE10795:
 18225              	.LBE10794:
 18226              	.LBE10793:
 18227              	.LBE10792:
 18228              	.LBE10791:
 18229              		.loc 41 42 5 view .LVU4138
 18230 0086 A542     		cmp	r5, r4
 18231 0088 F9D1     		bne	.L793
 18232              	.LVL1146:
 18233              	.LBB10796:
 18234              	.LBI10796:
 18235              		.loc 19 162 7 is_stmt 1 view .LVU4139
 18236              	.LBB10797:
 18237              	.LBI10797:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18238              		.loc 20 89 7 view .LVU4140
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18239              		.loc 20 89 7 is_stmt 0 view .LVU4141
 18240              	.LBE10797:
 18241              	.LBE10796:
 18242              	.LBB10798:
 18243              	.LBI10798:
 18244              		.loc 19 162 7 is_stmt 1 view .LVU4142
 18245              	.LBB10799:
 18246              	.LBI10799:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18247              		.loc 20 89 7 view .LVU4143
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18248              		.loc 20 89 7 is_stmt 0 view .LVU4144
 18249              	.LBE10799:
 18250              	.LBE10798:
 18251              	.LBB10800:
 18252              	.LBI10800:
 18253              		.loc 19 162 7 is_stmt 1 view .LVU4145
 18254              	.LBB10801:
 18255              	.LBI10801:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18256              		.loc 20 89 7 view .LVU4146
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18257              		.loc 20 89 7 is_stmt 0 view .LVU4147
 18258              	.LBE10801:
 18259              	.LBE10800:
 18260              	.LBB10802:
 18261              	.LBI10802:
 18262              		.loc 19 162 7 is_stmt 1 view .LVU4148
 18263              	.LBB10803:
 18264              	.LBI10803:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18265              		.loc 20 89 7 view .LVU4149
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18266              		.loc 20 89 7 is_stmt 0 view .LVU4150
 18267              	.LBE10803:
 18268              	.LBE10802:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 716


 18269              	.LBB10804:
 18270              	.LBI10804:
 18271              		.loc 19 162 7 is_stmt 1 view .LVU4151
 18272              	.LBB10805:
 18273              	.LBI10805:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18274              		.loc 20 89 7 view .LVU4152
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18275              		.loc 20 89 7 is_stmt 0 view .LVU4153
 18276              	.LBE10805:
 18277              	.LBE10804:
 18278              	.LBB10806:
 18279              	.LBI10806:
 18280              		.loc 19 162 7 is_stmt 1 view .LVU4154
 18281              	.LBB10807:
 18282              	.LBI10807:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18283              		.loc 20 89 7 view .LVU4155
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18284              		.loc 20 89 7 is_stmt 0 view .LVU4156
 18285              	.LBE10807:
 18286              	.LBE10806:
 18287              	.LBB10808:
 18288              	.LBI10808:
 18289              		.loc 19 162 7 is_stmt 1 view .LVU4157
 18290              	.LBB10809:
 18291              	.LBI10809:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18292              		.loc 20 89 7 view .LVU4158
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18293              		.loc 20 89 7 is_stmt 0 view .LVU4159
 18294              	.LBE10809:
 18295              	.LBE10808:
 18296              	.LBB10810:
 18297              	.LBI10810:
 18298              		.loc 19 162 7 is_stmt 1 view .LVU4160
 18299              	.LBB10811:
 18300              	.LBI10811:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18301              		.loc 20 89 7 view .LVU4161
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18302              		.loc 20 89 7 is_stmt 0 view .LVU4162
 18303              	.LBE10811:
 18304              	.LBE10810:
 18305              	.LBB10812:
 18306              	.LBI10812:
 18307              		.loc 19 162 7 is_stmt 1 view .LVU4163
 18308              	.LBB10813:
 18309              	.LBI10813:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18310              		.loc 20 89 7 view .LVU4164
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18311              		.loc 20 89 7 is_stmt 0 view .LVU4165
 18312              	.LBE10813:
 18313              	.LBE10812:
 18314              	.LBB10814:
 18315              	.LBI10814:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 717


 18316              		.loc 19 162 7 is_stmt 1 view .LVU4166
 18317              	.LBB10815:
 18318              	.LBI10815:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18319              		.loc 20 89 7 view .LVU4167
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18320              		.loc 20 89 7 is_stmt 0 view .LVU4168
 18321              	.LBE10815:
 18322              	.LBE10814:
 18323              	.LBB10816:
 18324              	.LBI10816:
 18325              		.loc 19 162 7 is_stmt 1 view .LVU4169
 18326              	.LBB10817:
 18327              	.LBI10817:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18328              		.loc 20 89 7 view .LVU4170
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18329              		.loc 20 89 7 is_stmt 0 view .LVU4171
 18330              	.LBE10817:
 18331              	.LBE10816:
 18332              	.LBB10818:
 18333              	.LBI10818:
 18334              		.loc 19 162 7 is_stmt 1 view .LVU4172
 18335              	.LBB10819:
 18336              	.LBI10819:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18337              		.loc 20 89 7 view .LVU4173
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18338              		.loc 20 89 7 is_stmt 0 view .LVU4174
 18339              	.LBE10819:
 18340              	.LBE10818:
  29:theory.h      ****         "C",
 18341              		.loc 41 29 36 view .LVU4175
 18342 008a 954A     		ldr	r2, .L848+52
 18343 008c 88AE     		add	r6, sp, #544
 18344 008e 9549     		ldr	r1, .L848+56
 18345 0090 9248     		ldr	r0, .L848+48
 18346 0092 FFF7FEFF 		bl	__aeabi_atexit
 18347              	.LVL1147:
 18348              	.LBB10820:
 18349              	.LBI10820:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18350              		.loc 19 144 7 is_stmt 1 view .LVU4176
 18351              	.LBB10821:
 18352              	.LBI10821:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18353              		.loc 20 79 7 view .LVU4177
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18354              		.loc 20 79 7 is_stmt 0 view .LVU4178
 18355              	.LBE10821:
 18356              	.LBE10820:
  43:theory.h      **** 
  44:theory.h      ****     // Note that the indices of these elements also correspond to
  45:theory.h      ****     // their semitone distances from C0.
  46:theory.h      ****     const std::array<std::string, 60> allNotes5Oct {
  47:theory.h      ****         "C0",
  48:theory.h      ****         "C#0",
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 718


  49:theory.h      ****         "D0",
  50:theory.h      ****         "D#0",
  51:theory.h      ****         "E0",
  52:theory.h      ****         "F0",
  53:theory.h      ****         "F#0",
  54:theory.h      ****         "G0",
  55:theory.h      ****         "G#0",
  56:theory.h      ****         "A0",
  57:theory.h      ****         "A#0",
  58:theory.h      ****         "B0",
  59:theory.h      ****         "C1",
  60:theory.h      ****         "C#1",
  61:theory.h      ****         "D1",
  62:theory.h      ****         "D#1",
  63:theory.h      ****         "E1",
  64:theory.h      ****         "F1",
  65:theory.h      ****         "F#1",
  66:theory.h      ****         "G1",
  67:theory.h      ****         "G#1",
  68:theory.h      ****         "A1",
  69:theory.h      ****         "A#1",
  70:theory.h      ****         "B1",
  71:theory.h      ****         "C2",
  72:theory.h      ****         "C#2",
  73:theory.h      ****         "D2",
  74:theory.h      ****         "D#2",
  75:theory.h      ****         "E2",
  76:theory.h      ****         "F2",
  77:theory.h      ****         "F#2",
  78:theory.h      ****         "G2",
  79:theory.h      ****         "G#2",
  80:theory.h      ****         "A2",
  81:theory.h      ****         "A#2",
  82:theory.h      ****         "B2",
  83:theory.h      ****         "C3",
  84:theory.h      ****         "C#3",
  85:theory.h      ****         "D3",
  86:theory.h      ****         "D#3",
  87:theory.h      ****         "E3",
  88:theory.h      ****         "F3",
  89:theory.h      ****         "F#3",
  90:theory.h      ****         "G3",
  91:theory.h      ****         "G#3",
  92:theory.h      ****         "A3",
  93:theory.h      ****         "A#3",
  94:theory.h      ****         "B3",
  95:theory.h      ****         "C4",
  96:theory.h      ****         "C#4",
  97:theory.h      ****         "D4",
  98:theory.h      ****         "D#4",
  99:theory.h      ****         "E4",
 100:theory.h      ****         "F4",
 101:theory.h      ****         "F#4",
 102:theory.h      ****         "G4",
 103:theory.h      ****         "G#4",
 104:theory.h      ****         "A4",
 105:theory.h      ****         "A#4",
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 719


 106:theory.h      ****         "B4"
 107:theory.h      ****     };
 18357              		.loc 41 107 5 view .LVU4179
 18358 0096 9449     		ldr	r1, .L848+60
 18359 0098 9448     		ldr	r0, .L848+64
 18360 009a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18361              	.LVL1148:
 18362              	.LBB10822:
 18363              	.LBI10822:
 18364              		.loc 19 162 7 is_stmt 1 view .LVU4180
 18365              	.LBB10823:
 18366              	.LBI10823:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18367              		.loc 20 89 7 view .LVU4181
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18368              		.loc 20 89 7 is_stmt 0 view .LVU4182
 18369              	.LBE10823:
 18370              	.LBE10822:
 18371              	.LBB10824:
 18372              	.LBI10824:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18373              		.loc 19 144 7 is_stmt 1 view .LVU4183
 18374              	.LBB10825:
 18375              	.LBI10825:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18376              		.loc 20 79 7 view .LVU4184
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18377              		.loc 20 79 7 is_stmt 0 view .LVU4185
 18378              	.LBE10825:
 18379              	.LBE10824:
 18380              		.loc 41 107 5 view .LVU4186
 18381 009e 9449     		ldr	r1, .L848+68
 18382 00a0 9448     		ldr	r0, .L848+72
 18383 00a2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18384              	.LVL1149:
 18385              	.LBB10826:
 18386              	.LBI10826:
 18387              		.loc 19 162 7 is_stmt 1 view .LVU4187
 18388              	.LBB10827:
 18389              	.LBI10827:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18390              		.loc 20 89 7 view .LVU4188
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18391              		.loc 20 89 7 is_stmt 0 view .LVU4189
 18392              	.LBE10827:
 18393              	.LBE10826:
 18394              	.LBB10828:
 18395              	.LBI10828:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18396              		.loc 19 144 7 is_stmt 1 view .LVU4190
 18397              	.LBB10829:
 18398              	.LBI10829:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18399              		.loc 20 79 7 view .LVU4191
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18400              		.loc 20 79 7 is_stmt 0 view .LVU4192
 18401              	.LBE10829:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 720


 18402              	.LBE10828:
 18403              		.loc 41 107 5 view .LVU4193
 18404 00a6 9449     		ldr	r1, .L848+76
 18405 00a8 9448     		ldr	r0, .L848+80
 18406 00aa FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18407              	.LVL1150:
 18408              	.LBB10830:
 18409              	.LBI10830:
 18410              		.loc 19 162 7 is_stmt 1 view .LVU4194
 18411              	.LBB10831:
 18412              	.LBI10831:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18413              		.loc 20 89 7 view .LVU4195
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18414              		.loc 20 89 7 is_stmt 0 view .LVU4196
 18415              	.LBE10831:
 18416              	.LBE10830:
 18417              	.LBB10832:
 18418              	.LBI10832:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18419              		.loc 19 144 7 is_stmt 1 view .LVU4197
 18420              	.LBB10833:
 18421              	.LBI10833:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18422              		.loc 20 79 7 view .LVU4198
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18423              		.loc 20 79 7 is_stmt 0 view .LVU4199
 18424              	.LBE10833:
 18425              	.LBE10832:
 18426              		.loc 41 107 5 view .LVU4200
 18427 00ae 9449     		ldr	r1, .L848+84
 18428 00b0 9448     		ldr	r0, .L848+88
 18429 00b2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18430              	.LVL1151:
 18431              	.LBB10834:
 18432              	.LBI10834:
 18433              		.loc 19 162 7 is_stmt 1 view .LVU4201
 18434              	.LBB10835:
 18435              	.LBI10835:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18436              		.loc 20 89 7 view .LVU4202
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18437              		.loc 20 89 7 is_stmt 0 view .LVU4203
 18438              	.LBE10835:
 18439              	.LBE10834:
 18440              	.LBB10836:
 18441              	.LBI10836:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18442              		.loc 19 144 7 is_stmt 1 view .LVU4204
 18443              	.LBB10837:
 18444              	.LBI10837:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18445              		.loc 20 79 7 view .LVU4205
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18446              		.loc 20 79 7 is_stmt 0 view .LVU4206
 18447              	.LBE10837:
 18448              	.LBE10836:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 721


 18449              		.loc 41 107 5 view .LVU4207
 18450 00b6 9449     		ldr	r1, .L848+92
 18451 00b8 9448     		ldr	r0, .L848+96
 18452 00ba FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18453              	.LVL1152:
 18454              	.LBB10838:
 18455              	.LBI10838:
 18456              		.loc 19 162 7 is_stmt 1 view .LVU4208
 18457              	.LBB10839:
 18458              	.LBI10839:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18459              		.loc 20 89 7 view .LVU4209
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18460              		.loc 20 89 7 is_stmt 0 view .LVU4210
 18461              	.LBE10839:
 18462              	.LBE10838:
 18463              	.LBB10840:
 18464              	.LBI10840:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18465              		.loc 19 144 7 is_stmt 1 view .LVU4211
 18466              	.LBB10841:
 18467              	.LBI10841:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18468              		.loc 20 79 7 view .LVU4212
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18469              		.loc 20 79 7 is_stmt 0 view .LVU4213
 18470              	.LBE10841:
 18471              	.LBE10840:
 18472              		.loc 41 107 5 view .LVU4214
 18473 00be 9449     		ldr	r1, .L848+100
 18474 00c0 9448     		ldr	r0, .L848+104
 18475 00c2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18476              	.LVL1153:
 18477              	.LBB10842:
 18478              	.LBI10842:
 18479              		.loc 19 162 7 is_stmt 1 view .LVU4215
 18480              	.LBB10843:
 18481              	.LBI10843:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18482              		.loc 20 89 7 view .LVU4216
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18483              		.loc 20 89 7 is_stmt 0 view .LVU4217
 18484              	.LBE10843:
 18485              	.LBE10842:
 18486              	.LBB10844:
 18487              	.LBI10844:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18488              		.loc 19 144 7 is_stmt 1 view .LVU4218
 18489              	.LBB10845:
 18490              	.LBI10845:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18491              		.loc 20 79 7 view .LVU4219
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18492              		.loc 20 79 7 is_stmt 0 view .LVU4220
 18493              	.LBE10845:
 18494              	.LBE10844:
 18495              		.loc 41 107 5 view .LVU4221
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 722


 18496 00c6 9449     		ldr	r1, .L848+108
 18497 00c8 9448     		ldr	r0, .L848+112
 18498 00ca FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18499              	.LVL1154:
 18500              	.LBB10846:
 18501              	.LBI10846:
 18502              		.loc 19 162 7 is_stmt 1 view .LVU4222
 18503              	.LBB10847:
 18504              	.LBI10847:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18505              		.loc 20 89 7 view .LVU4223
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18506              		.loc 20 89 7 is_stmt 0 view .LVU4224
 18507              	.LBE10847:
 18508              	.LBE10846:
 18509              	.LBB10848:
 18510              	.LBI10848:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18511              		.loc 19 144 7 is_stmt 1 view .LVU4225
 18512              	.LBB10849:
 18513              	.LBI10849:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18514              		.loc 20 79 7 view .LVU4226
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18515              		.loc 20 79 7 is_stmt 0 view .LVU4227
 18516              	.LBE10849:
 18517              	.LBE10848:
 18518              		.loc 41 107 5 view .LVU4228
 18519 00ce 9449     		ldr	r1, .L848+116
 18520 00d0 9448     		ldr	r0, .L848+120
 18521 00d2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18522              	.LVL1155:
 18523              	.LBB10850:
 18524              	.LBI10850:
 18525              		.loc 19 162 7 is_stmt 1 view .LVU4229
 18526              	.LBB10851:
 18527              	.LBI10851:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18528              		.loc 20 89 7 view .LVU4230
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18529              		.loc 20 89 7 is_stmt 0 view .LVU4231
 18530              	.LBE10851:
 18531              	.LBE10850:
 18532              	.LBB10852:
 18533              	.LBI10852:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18534              		.loc 19 144 7 is_stmt 1 view .LVU4232
 18535              	.LBB10853:
 18536              	.LBI10853:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18537              		.loc 20 79 7 view .LVU4233
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18538              		.loc 20 79 7 is_stmt 0 view .LVU4234
 18539              	.LBE10853:
 18540              	.LBE10852:
 18541              		.loc 41 107 5 view .LVU4235
 18542 00d6 9449     		ldr	r1, .L848+124
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 723


 18543 00d8 9448     		ldr	r0, .L848+128
 18544 00da FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18545              	.LVL1156:
 18546              	.LBB10854:
 18547              	.LBI10854:
 18548              		.loc 19 162 7 is_stmt 1 view .LVU4236
 18549              	.LBB10855:
 18550              	.LBI10855:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18551              		.loc 20 89 7 view .LVU4237
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18552              		.loc 20 89 7 is_stmt 0 view .LVU4238
 18553              	.LBE10855:
 18554              	.LBE10854:
 18555              	.LBB10856:
 18556              	.LBI10856:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18557              		.loc 19 144 7 is_stmt 1 view .LVU4239
 18558              	.LBB10857:
 18559              	.LBI10857:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18560              		.loc 20 79 7 view .LVU4240
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18561              		.loc 20 79 7 is_stmt 0 view .LVU4241
 18562              	.LBE10857:
 18563              	.LBE10856:
 18564              		.loc 41 107 5 view .LVU4242
 18565 00de 9449     		ldr	r1, .L848+132
 18566 00e0 9448     		ldr	r0, .L848+136
 18567 00e2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18568              	.LVL1157:
 18569              	.LBB10858:
 18570              	.LBI10858:
 18571              		.loc 19 162 7 is_stmt 1 view .LVU4243
 18572              	.LBB10859:
 18573              	.LBI10859:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18574              		.loc 20 89 7 view .LVU4244
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18575              		.loc 20 89 7 is_stmt 0 view .LVU4245
 18576              	.LBE10859:
 18577              	.LBE10858:
 18578              	.LBB10860:
 18579              	.LBI10860:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18580              		.loc 19 144 7 is_stmt 1 view .LVU4246
 18581              	.LBB10861:
 18582              	.LBI10861:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18583              		.loc 20 79 7 view .LVU4247
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18584              		.loc 20 79 7 is_stmt 0 view .LVU4248
 18585              	.LBE10861:
 18586              	.LBE10860:
 18587              		.loc 41 107 5 view .LVU4249
 18588 00e6 9449     		ldr	r1, .L848+140
 18589 00e8 9448     		ldr	r0, .L848+144
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 724


 18590 00ea FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18591              	.LVL1158:
 18592              	.LBB10862:
 18593              	.LBI10862:
 18594              		.loc 19 162 7 is_stmt 1 view .LVU4250
 18595              	.LBB10863:
 18596              	.LBI10863:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18597              		.loc 20 89 7 view .LVU4251
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18598              		.loc 20 89 7 is_stmt 0 view .LVU4252
 18599              	.LBE10863:
 18600              	.LBE10862:
 18601              	.LBB10864:
 18602              	.LBI10864:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18603              		.loc 19 144 7 is_stmt 1 view .LVU4253
 18604              	.LBB10865:
 18605              	.LBI10865:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18606              		.loc 20 79 7 view .LVU4254
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18607              		.loc 20 79 7 is_stmt 0 view .LVU4255
 18608              	.LBE10865:
 18609              	.LBE10864:
 18610              		.loc 41 107 5 view .LVU4256
 18611 00ee 9449     		ldr	r1, .L848+148
 18612 00f0 9448     		ldr	r0, .L848+152
 18613 00f2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18614              	.LVL1159:
 18615              	.LBB10866:
 18616              	.LBI10866:
 18617              		.loc 19 162 7 is_stmt 1 view .LVU4257
 18618              	.LBB10867:
 18619              	.LBI10867:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18620              		.loc 20 89 7 view .LVU4258
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18621              		.loc 20 89 7 is_stmt 0 view .LVU4259
 18622              	.LBE10867:
 18623              	.LBE10866:
 18624              	.LBB10868:
 18625              	.LBI10868:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18626              		.loc 19 144 7 is_stmt 1 view .LVU4260
 18627              	.LBB10869:
 18628              	.LBI10869:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18629              		.loc 20 79 7 view .LVU4261
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18630              		.loc 20 79 7 is_stmt 0 view .LVU4262
 18631              	.LBE10869:
 18632              	.LBE10868:
 18633              		.loc 41 107 5 view .LVU4263
 18634 00f6 9449     		ldr	r1, .L848+156
 18635 00f8 9448     		ldr	r0, .L848+160
 18636 00fa FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 725


 18637              	.LVL1160:
 18638              	.LBB10870:
 18639              	.LBI10870:
 18640              		.loc 19 162 7 is_stmt 1 view .LVU4264
 18641              	.LBB10871:
 18642              	.LBI10871:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18643              		.loc 20 89 7 view .LVU4265
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18644              		.loc 20 89 7 is_stmt 0 view .LVU4266
 18645              	.LBE10871:
 18646              	.LBE10870:
 18647              	.LBB10872:
 18648              	.LBI10872:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18649              		.loc 19 144 7 is_stmt 1 view .LVU4267
 18650              	.LBB10873:
 18651              	.LBI10873:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18652              		.loc 20 79 7 view .LVU4268
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18653              		.loc 20 79 7 is_stmt 0 view .LVU4269
 18654              	.LBE10873:
 18655              	.LBE10872:
 18656              		.loc 41 107 5 view .LVU4270
 18657 00fe 9449     		ldr	r1, .L848+164
 18658 0100 9448     		ldr	r0, .L848+168
 18659 0102 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18660              	.LVL1161:
 18661              	.LBB10874:
 18662              	.LBI10874:
 18663              		.loc 19 162 7 is_stmt 1 view .LVU4271
 18664              	.LBB10875:
 18665              	.LBI10875:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18666              		.loc 20 89 7 view .LVU4272
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18667              		.loc 20 89 7 is_stmt 0 view .LVU4273
 18668              	.LBE10875:
 18669              	.LBE10874:
 18670              	.LBB10876:
 18671              	.LBI10876:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18672              		.loc 19 144 7 is_stmt 1 view .LVU4274
 18673              	.LBB10877:
 18674              	.LBI10877:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18675              		.loc 20 79 7 view .LVU4275
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18676              		.loc 20 79 7 is_stmt 0 view .LVU4276
 18677              	.LBE10877:
 18678              	.LBE10876:
 18679              		.loc 41 107 5 view .LVU4277
 18680 0106 9449     		ldr	r1, .L848+172
 18681 0108 9448     		ldr	r0, .L848+176
 18682 010a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18683              	.LVL1162:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 726


 18684              	.LBB10878:
 18685              	.LBI10878:
 18686              		.loc 19 162 7 is_stmt 1 view .LVU4278
 18687              	.LBB10879:
 18688              	.LBI10879:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18689              		.loc 20 89 7 view .LVU4279
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18690              		.loc 20 89 7 is_stmt 0 view .LVU4280
 18691              	.LBE10879:
 18692              	.LBE10878:
 18693              	.LBB10880:
 18694              	.LBI10880:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18695              		.loc 19 144 7 is_stmt 1 view .LVU4281
 18696              	.LBB10881:
 18697              	.LBI10881:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18698              		.loc 20 79 7 view .LVU4282
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18699              		.loc 20 79 7 is_stmt 0 view .LVU4283
 18700              	.LBE10881:
 18701              	.LBE10880:
 18702              		.loc 41 107 5 view .LVU4284
 18703 010e 9449     		ldr	r1, .L848+180
 18704 0110 9448     		ldr	r0, .L848+184
 18705 0112 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18706              	.LVL1163:
 18707              	.LBB10882:
 18708              	.LBI10882:
 18709              		.loc 19 162 7 is_stmt 1 view .LVU4285
 18710              	.LBB10883:
 18711              	.LBI10883:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18712              		.loc 20 89 7 view .LVU4286
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18713              		.loc 20 89 7 is_stmt 0 view .LVU4287
 18714              	.LBE10883:
 18715              	.LBE10882:
 18716              	.LBB10884:
 18717              	.LBI10884:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18718              		.loc 19 144 7 is_stmt 1 view .LVU4288
 18719              	.LBB10885:
 18720              	.LBI10885:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18721              		.loc 20 79 7 view .LVU4289
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18722              		.loc 20 79 7 is_stmt 0 view .LVU4290
 18723              	.LBE10885:
 18724              	.LBE10884:
 18725              		.loc 41 107 5 view .LVU4291
 18726 0116 9449     		ldr	r1, .L848+188
 18727 0118 9448     		ldr	r0, .L848+192
 18728 011a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18729              	.LVL1164:
 18730              	.LBB10886:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 727


 18731              	.LBI10886:
 18732              		.loc 19 162 7 is_stmt 1 view .LVU4292
 18733              	.LBB10887:
 18734              	.LBI10887:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18735              		.loc 20 89 7 view .LVU4293
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18736              		.loc 20 89 7 is_stmt 0 view .LVU4294
 18737              	.LBE10887:
 18738              	.LBE10886:
 18739              	.LBB10888:
 18740              	.LBI10888:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18741              		.loc 19 144 7 is_stmt 1 view .LVU4295
 18742              	.LBB10889:
 18743              	.LBI10889:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18744              		.loc 20 79 7 view .LVU4296
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18745              		.loc 20 79 7 is_stmt 0 view .LVU4297
 18746              	.LBE10889:
 18747              	.LBE10888:
 18748              		.loc 41 107 5 view .LVU4298
 18749 011e 9449     		ldr	r1, .L848+196
 18750 0120 9448     		ldr	r0, .L848+200
 18751 0122 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18752              	.LVL1165:
 18753              	.LBB10890:
 18754              	.LBI10890:
 18755              		.loc 19 162 7 is_stmt 1 view .LVU4299
 18756              	.LBB10891:
 18757              	.LBI10891:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18758              		.loc 20 89 7 view .LVU4300
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18759              		.loc 20 89 7 is_stmt 0 view .LVU4301
 18760              	.LBE10891:
 18761              	.LBE10890:
 18762              	.LBB10892:
 18763              	.LBI10892:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18764              		.loc 19 144 7 is_stmt 1 view .LVU4302
 18765              	.LBB10893:
 18766              	.LBI10893:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18767              		.loc 20 79 7 view .LVU4303
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18768              		.loc 20 79 7 is_stmt 0 view .LVU4304
 18769              	.LBE10893:
 18770              	.LBE10892:
 18771              		.loc 41 107 5 view .LVU4305
 18772 0126 9449     		ldr	r1, .L848+204
 18773 0128 9448     		ldr	r0, .L848+208
 18774 012a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18775              	.LVL1166:
 18776              	.LBB10894:
 18777              	.LBI10894:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 728


 18778              		.loc 19 162 7 is_stmt 1 view .LVU4306
 18779              	.LBB10895:
 18780              	.LBI10895:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18781              		.loc 20 89 7 view .LVU4307
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18782              		.loc 20 89 7 is_stmt 0 view .LVU4308
 18783              	.LBE10895:
 18784              	.LBE10894:
 18785              	.LBB10896:
 18786              	.LBI10896:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18787              		.loc 19 144 7 is_stmt 1 view .LVU4309
 18788              	.LBB10897:
 18789              	.LBI10897:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18790              		.loc 20 79 7 view .LVU4310
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18791              		.loc 20 79 7 is_stmt 0 view .LVU4311
 18792              	.LBE10897:
 18793              	.LBE10896:
 18794              		.loc 41 107 5 view .LVU4312
 18795 012e 9449     		ldr	r1, .L848+212
 18796 0130 9448     		ldr	r0, .L848+216
 18797 0132 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18798              	.LVL1167:
 18799              	.LBB10898:
 18800              	.LBI10898:
 18801              		.loc 19 162 7 is_stmt 1 view .LVU4313
 18802              	.LBB10899:
 18803              	.LBI10899:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18804              		.loc 20 89 7 view .LVU4314
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18805              		.loc 20 89 7 is_stmt 0 view .LVU4315
 18806              	.LBE10899:
 18807              	.LBE10898:
 18808              	.LBB10900:
 18809              	.LBI10900:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18810              		.loc 19 144 7 is_stmt 1 view .LVU4316
 18811              	.LBB10901:
 18812              	.LBI10901:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18813              		.loc 20 79 7 view .LVU4317
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18814              		.loc 20 79 7 is_stmt 0 view .LVU4318
 18815              	.LBE10901:
 18816              	.LBE10900:
 18817              		.loc 41 107 5 view .LVU4319
 18818 0136 9449     		ldr	r1, .L848+220
 18819 0138 9448     		ldr	r0, .L848+224
 18820 013a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18821              	.LVL1168:
 18822              	.LBB10902:
 18823              	.LBI10902:
 18824              		.loc 19 162 7 is_stmt 1 view .LVU4320
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 729


 18825              	.LBB10903:
 18826              	.LBI10903:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18827              		.loc 20 89 7 view .LVU4321
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18828              		.loc 20 89 7 is_stmt 0 view .LVU4322
 18829              	.LBE10903:
 18830              	.LBE10902:
 18831              	.LBB10904:
 18832              	.LBI10904:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18833              		.loc 19 144 7 is_stmt 1 view .LVU4323
 18834              	.LBB10905:
 18835              	.LBI10905:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18836              		.loc 20 79 7 view .LVU4324
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18837              		.loc 20 79 7 is_stmt 0 view .LVU4325
 18838              	.LBE10905:
 18839              	.LBE10904:
 18840              		.loc 41 107 5 view .LVU4326
 18841 013e 9449     		ldr	r1, .L848+228
 18842 0140 9448     		ldr	r0, .L848+232
 18843 0142 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18844              	.LVL1169:
 18845              	.LBB10906:
 18846              	.LBI10906:
 18847              		.loc 19 162 7 is_stmt 1 view .LVU4327
 18848              	.LBB10907:
 18849              	.LBI10907:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18850              		.loc 20 89 7 view .LVU4328
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18851              		.loc 20 89 7 is_stmt 0 view .LVU4329
 18852              	.LBE10907:
 18853              	.LBE10906:
 18854              	.LBB10908:
 18855              	.LBI10908:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18856              		.loc 19 144 7 is_stmt 1 view .LVU4330
 18857              	.LBB10909:
 18858              	.LBI10909:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18859              		.loc 20 79 7 view .LVU4331
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18860              		.loc 20 79 7 is_stmt 0 view .LVU4332
 18861              	.LBE10909:
 18862              	.LBE10908:
 18863              		.loc 41 107 5 view .LVU4333
 18864 0146 9449     		ldr	r1, .L848+236
 18865 0148 9448     		ldr	r0, .L848+240
 18866 014a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18867              	.LVL1170:
 18868              	.LBB10910:
 18869              	.LBI10910:
 18870              		.loc 19 162 7 is_stmt 1 view .LVU4334
 18871              	.LBB10911:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 730


 18872              	.LBI10911:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18873              		.loc 20 89 7 view .LVU4335
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18874              		.loc 20 89 7 is_stmt 0 view .LVU4336
 18875              	.LBE10911:
 18876              	.LBE10910:
 18877              	.LBB10912:
 18878              	.LBI10912:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18879              		.loc 19 144 7 is_stmt 1 view .LVU4337
 18880              	.LBB10913:
 18881              	.LBI10913:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18882              		.loc 20 79 7 view .LVU4338
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18883              		.loc 20 79 7 is_stmt 0 view .LVU4339
 18884              	.LBE10913:
 18885              	.LBE10912:
 18886              		.loc 41 107 5 view .LVU4340
 18887 014e 9449     		ldr	r1, .L848+244
 18888 0150 9448     		ldr	r0, .L848+248
 18889 0152 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18890              	.LVL1171:
 18891              	.LBB10914:
 18892              	.LBI10914:
 18893              		.loc 19 162 7 is_stmt 1 view .LVU4341
 18894              	.LBB10915:
 18895              	.LBI10915:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18896              		.loc 20 89 7 view .LVU4342
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18897              		.loc 20 89 7 is_stmt 0 view .LVU4343
 18898              	.LBE10915:
 18899              	.LBE10914:
 18900              	.LBB10916:
 18901              	.LBI10916:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18902              		.loc 19 144 7 is_stmt 1 view .LVU4344
 18903              	.LBB10917:
 18904              	.LBI10917:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18905              		.loc 20 79 7 view .LVU4345
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18906              		.loc 20 79 7 is_stmt 0 view .LVU4346
 18907              	.LBE10917:
 18908              	.LBE10916:
 18909              		.loc 41 107 5 view .LVU4347
 18910 0156 9449     		ldr	r1, .L848+252
 18911 0158 9448     		ldr	r0, .L848+256
 18912 015a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18913              	.LVL1172:
 18914              	.LBB10918:
 18915              	.LBI10918:
 18916              		.loc 19 162 7 is_stmt 1 view .LVU4348
 18917              	.LBB10919:
 18918              	.LBI10919:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 731


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18919              		.loc 20 89 7 view .LVU4349
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18920              		.loc 20 89 7 is_stmt 0 view .LVU4350
 18921              	.LBE10919:
 18922              	.LBE10918:
 18923              	.LBB10920:
 18924              	.LBI10920:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18925              		.loc 19 144 7 is_stmt 1 view .LVU4351
 18926              	.LBB10921:
 18927              	.LBI10921:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18928              		.loc 20 79 7 view .LVU4352
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18929              		.loc 20 79 7 is_stmt 0 view .LVU4353
 18930              	.LBE10921:
 18931              	.LBE10920:
 18932              		.loc 41 107 5 view .LVU4354
 18933 015e 9449     		ldr	r1, .L848+260
 18934 0160 9448     		ldr	r0, .L848+264
 18935 0162 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18936              	.LVL1173:
 18937              	.LBB10922:
 18938              	.LBI10922:
 18939              		.loc 19 162 7 is_stmt 1 view .LVU4355
 18940              	.LBB10923:
 18941              	.LBI10923:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18942              		.loc 20 89 7 view .LVU4356
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18943              		.loc 20 89 7 is_stmt 0 view .LVU4357
 18944              	.LBE10923:
 18945              	.LBE10922:
 18946              	.LBB10924:
 18947              	.LBI10924:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18948              		.loc 19 144 7 is_stmt 1 view .LVU4358
 18949              	.LBB10925:
 18950              	.LBI10925:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18951              		.loc 20 79 7 view .LVU4359
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18952              		.loc 20 79 7 is_stmt 0 view .LVU4360
 18953              	.LBE10925:
 18954              	.LBE10924:
 18955              		.loc 41 107 5 view .LVU4361
 18956 0166 9449     		ldr	r1, .L848+268
 18957 0168 9448     		ldr	r0, .L848+272
 18958 016a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18959              	.LVL1174:
 18960              	.LBB10926:
 18961              	.LBI10926:
 18962              		.loc 19 162 7 is_stmt 1 view .LVU4362
 18963              	.LBB10927:
 18964              	.LBI10927:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 732


 18965              		.loc 20 89 7 view .LVU4363
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18966              		.loc 20 89 7 is_stmt 0 view .LVU4364
 18967              	.LBE10927:
 18968              	.LBE10926:
 18969              	.LBB10928:
 18970              	.LBI10928:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18971              		.loc 19 144 7 is_stmt 1 view .LVU4365
 18972              	.LBB10929:
 18973              	.LBI10929:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18974              		.loc 20 79 7 view .LVU4366
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18975              		.loc 20 79 7 is_stmt 0 view .LVU4367
 18976              	.LBE10929:
 18977              	.LBE10928:
 18978              		.loc 41 107 5 view .LVU4368
 18979 016e 9449     		ldr	r1, .L848+276
 18980 0170 9448     		ldr	r0, .L848+280
 18981 0172 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18982              	.LVL1175:
 18983              	.LBB10930:
 18984              	.LBI10930:
 18985              		.loc 19 162 7 is_stmt 1 view .LVU4369
 18986              	.LBB10931:
 18987              	.LBI10931:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18988              		.loc 20 89 7 view .LVU4370
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18989              		.loc 20 89 7 is_stmt 0 view .LVU4371
 18990              	.LBE10931:
 18991              	.LBE10930:
 18992              	.LBB10932:
 18993              	.LBI10932:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18994              		.loc 19 144 7 is_stmt 1 view .LVU4372
 18995              	.LBB10933:
 18996              	.LBI10933:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18997              		.loc 20 79 7 view .LVU4373
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18998              		.loc 20 79 7 is_stmt 0 view .LVU4374
 18999              	.LBE10933:
 19000              	.LBE10932:
 19001              		.loc 41 107 5 view .LVU4375
 19002 0176 9449     		ldr	r1, .L848+284
 19003 0178 9448     		ldr	r0, .L848+288
 19004 017a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19005              	.LVL1176:
 19006              	.LBB10934:
 19007              	.LBI10934:
 19008              		.loc 19 162 7 is_stmt 1 view .LVU4376
 19009              	.LBB10935:
 19010              	.LBI10935:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19011              		.loc 20 89 7 view .LVU4377
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 733


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19012              		.loc 20 89 7 is_stmt 0 view .LVU4378
 19013              	.LBE10935:
 19014              	.LBE10934:
 19015              	.LBB10936:
 19016              	.LBI10936:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19017              		.loc 19 144 7 is_stmt 1 view .LVU4379
 19018              	.LBB10937:
 19019              	.LBI10937:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19020              		.loc 20 79 7 view .LVU4380
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19021              		.loc 20 79 7 is_stmt 0 view .LVU4381
 19022              	.LBE10937:
 19023              	.LBE10936:
 19024              		.loc 41 107 5 view .LVU4382
 19025 017e 9449     		ldr	r1, .L848+292
 19026 0180 9448     		ldr	r0, .L848+296
 19027 0182 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19028              	.LVL1177:
 19029              	.LBB10938:
 19030              	.LBI10938:
 19031              		.loc 19 162 7 is_stmt 1 view .LVU4383
 19032              	.LBB10939:
 19033              	.LBI10939:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19034              		.loc 20 89 7 view .LVU4384
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19035              		.loc 20 89 7 is_stmt 0 view .LVU4385
 19036              	.LBE10939:
 19037              	.LBE10938:
 19038              	.LBB10940:
 19039              	.LBI10940:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19040              		.loc 19 144 7 is_stmt 1 view .LVU4386
 19041              	.LBB10941:
 19042              	.LBI10941:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19043              		.loc 20 79 7 view .LVU4387
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19044              		.loc 20 79 7 is_stmt 0 view .LVU4388
 19045              	.LBE10941:
 19046              	.LBE10940:
 19047              		.loc 41 107 5 view .LVU4389
 19048 0186 9449     		ldr	r1, .L848+300
 19049 0188 9448     		ldr	r0, .L848+304
 19050 018a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19051              	.LVL1178:
 19052              	.LBB10942:
 19053              	.LBI10942:
 19054              		.loc 19 162 7 is_stmt 1 view .LVU4390
 19055              	.LBB10943:
 19056              	.LBI10943:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19057              		.loc 20 89 7 view .LVU4391
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 734


 19058              		.loc 20 89 7 is_stmt 0 view .LVU4392
 19059              	.LBE10943:
 19060              	.LBE10942:
 19061              	.LBB10944:
 19062              	.LBI10944:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19063              		.loc 19 144 7 is_stmt 1 view .LVU4393
 19064              	.LBB10945:
 19065              	.LBI10945:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19066              		.loc 20 79 7 view .LVU4394
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19067              		.loc 20 79 7 is_stmt 0 view .LVU4395
 19068              	.LBE10945:
 19069              	.LBE10944:
 19070              		.loc 41 107 5 view .LVU4396
 19071 018e 9449     		ldr	r1, .L848+308
 19072 0190 9448     		ldr	r0, .L848+312
 19073 0192 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19074              	.LVL1179:
 19075              	.LBB10946:
 19076              	.LBI10946:
 19077              		.loc 19 162 7 is_stmt 1 view .LVU4397
 19078              	.LBB10947:
 19079              	.LBI10947:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19080              		.loc 20 89 7 view .LVU4398
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19081              		.loc 20 89 7 is_stmt 0 view .LVU4399
 19082              	.LBE10947:
 19083              	.LBE10946:
 19084              	.LBB10948:
 19085              	.LBI10948:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19086              		.loc 19 144 7 is_stmt 1 view .LVU4400
 19087              	.LBB10949:
 19088              	.LBI10949:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19089              		.loc 20 79 7 view .LVU4401
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19090              		.loc 20 79 7 is_stmt 0 view .LVU4402
 19091              	.LBE10949:
 19092              	.LBE10948:
 19093              		.loc 41 107 5 view .LVU4403
 19094 0196 9449     		ldr	r1, .L848+316
 19095 0198 9448     		ldr	r0, .L848+320
 19096 019a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19097              	.LVL1180:
 19098              	.LBB10950:
 19099              	.LBI10950:
 19100              		.loc 19 162 7 is_stmt 1 view .LVU4404
 19101              	.LBB10951:
 19102              	.LBI10951:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19103              		.loc 20 89 7 view .LVU4405
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19104              		.loc 20 89 7 is_stmt 0 view .LVU4406
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 735


 19105              	.LBE10951:
 19106              	.LBE10950:
 19107              	.LBB10952:
 19108              	.LBI10952:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19109              		.loc 19 144 7 is_stmt 1 view .LVU4407
 19110              	.LBB10953:
 19111              	.LBI10953:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19112              		.loc 20 79 7 view .LVU4408
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19113              		.loc 20 79 7 is_stmt 0 view .LVU4409
 19114              	.LBE10953:
 19115              	.LBE10952:
 19116              		.loc 41 107 5 view .LVU4410
 19117 019e 9449     		ldr	r1, .L848+324
 19118 01a0 9448     		ldr	r0, .L848+328
 19119 01a2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19120              	.LVL1181:
 19121              	.LBB10954:
 19122              	.LBI10954:
 19123              		.loc 19 162 7 is_stmt 1 view .LVU4411
 19124              	.LBB10955:
 19125              	.LBI10955:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19126              		.loc 20 89 7 view .LVU4412
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19127              		.loc 20 89 7 is_stmt 0 view .LVU4413
 19128              	.LBE10955:
 19129              	.LBE10954:
 19130              	.LBB10956:
 19131              	.LBI10956:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19132              		.loc 19 144 7 is_stmt 1 view .LVU4414
 19133              	.LBB10957:
 19134              	.LBI10957:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19135              		.loc 20 79 7 view .LVU4415
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19136              		.loc 20 79 7 is_stmt 0 view .LVU4416
 19137              	.LBE10957:
 19138              	.LBE10956:
 19139              		.loc 41 107 5 view .LVU4417
 19140 01a6 9449     		ldr	r1, .L848+332
 19141 01a8 9448     		ldr	r0, .L848+336
 19142 01aa FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19143              	.LVL1182:
 19144              	.LBB10958:
 19145              	.LBI10958:
 19146              		.loc 19 162 7 is_stmt 1 view .LVU4418
 19147              	.LBB10959:
 19148              	.LBI10959:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19149              		.loc 20 89 7 view .LVU4419
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19150              		.loc 20 89 7 is_stmt 0 view .LVU4420
 19151              	.LBE10959:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 736


 19152              	.LBE10958:
 19153              	.LBB10960:
 19154              	.LBI10960:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19155              		.loc 19 144 7 is_stmt 1 view .LVU4421
 19156              	.LBB10961:
 19157              	.LBI10961:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19158              		.loc 20 79 7 view .LVU4422
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19159              		.loc 20 79 7 is_stmt 0 view .LVU4423
 19160              	.LBE10961:
 19161              	.LBE10960:
 19162              		.loc 41 107 5 view .LVU4424
 19163 01ae 9449     		ldr	r1, .L848+340
 19164 01b0 9448     		ldr	r0, .L848+344
 19165 01b2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19166              	.LVL1183:
 19167              	.LBB10962:
 19168              	.LBI10962:
 19169              		.loc 19 162 7 is_stmt 1 view .LVU4425
 19170              	.LBB10963:
 19171              	.LBI10963:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19172              		.loc 20 89 7 view .LVU4426
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19173              		.loc 20 89 7 is_stmt 0 view .LVU4427
 19174              	.LBE10963:
 19175              	.LBE10962:
 19176              	.LBB10964:
 19177              	.LBI10964:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19178              		.loc 19 144 7 is_stmt 1 view .LVU4428
 19179              	.LBB10965:
 19180              	.LBI10965:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19181              		.loc 20 79 7 view .LVU4429
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19182              		.loc 20 79 7 is_stmt 0 view .LVU4430
 19183              	.LBE10965:
 19184              	.LBE10964:
 19185              		.loc 41 107 5 view .LVU4431
 19186 01b6 9449     		ldr	r1, .L848+348
 19187 01b8 9448     		ldr	r0, .L848+352
 19188 01ba FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19189              	.LVL1184:
 19190              	.LBB10966:
 19191              	.LBI10966:
 19192              		.loc 19 162 7 is_stmt 1 view .LVU4432
 19193              	.LBB10967:
 19194              	.LBI10967:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19195              		.loc 20 89 7 view .LVU4433
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19196              		.loc 20 89 7 is_stmt 0 view .LVU4434
 19197              	.LBE10967:
 19198              	.LBE10966:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 737


 19199              	.LBB10968:
 19200              	.LBI10968:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19201              		.loc 19 144 7 is_stmt 1 view .LVU4435
 19202              	.LBB10969:
 19203              	.LBI10969:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19204              		.loc 20 79 7 view .LVU4436
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19205              		.loc 20 79 7 is_stmt 0 view .LVU4437
 19206              	.LBE10969:
 19207              	.LBE10968:
 19208              		.loc 41 107 5 view .LVU4438
 19209 01be 9449     		ldr	r1, .L848+356
 19210 01c0 9448     		ldr	r0, .L848+360
 19211 01c2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19212              	.LVL1185:
 19213              	.LBB10970:
 19214              	.LBI10970:
 19215              		.loc 19 162 7 is_stmt 1 view .LVU4439
 19216              	.LBB10971:
 19217              	.LBI10971:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19218              		.loc 20 89 7 view .LVU4440
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19219              		.loc 20 89 7 is_stmt 0 view .LVU4441
 19220              	.LBE10971:
 19221              	.LBE10970:
 19222              	.LBB10972:
 19223              	.LBI10972:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19224              		.loc 19 144 7 is_stmt 1 view .LVU4442
 19225              	.LBB10973:
 19226              	.LBI10973:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19227              		.loc 20 79 7 view .LVU4443
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19228              		.loc 20 79 7 is_stmt 0 view .LVU4444
 19229              	.LBE10973:
 19230              	.LBE10972:
 19231              		.loc 41 107 5 view .LVU4445
 19232 01c6 9449     		ldr	r1, .L848+364
 19233 01c8 9448     		ldr	r0, .L848+368
 19234 01ca FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19235              	.LVL1186:
 19236              	.LBB10974:
 19237              	.LBI10974:
 19238              		.loc 19 162 7 is_stmt 1 view .LVU4446
 19239              	.LBB10975:
 19240              	.LBI10975:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19241              		.loc 20 89 7 view .LVU4447
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19242              		.loc 20 89 7 is_stmt 0 view .LVU4448
 19243              	.LBE10975:
 19244              	.LBE10974:
 19245              	.LBB10976:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 738


 19246              	.LBI10976:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19247              		.loc 19 144 7 is_stmt 1 view .LVU4449
 19248              	.LBB10977:
 19249              	.LBI10977:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19250              		.loc 20 79 7 view .LVU4450
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19251              		.loc 20 79 7 is_stmt 0 view .LVU4451
 19252              	.LBE10977:
 19253              	.LBE10976:
 19254              		.loc 41 107 5 view .LVU4452
 19255 01ce 9449     		ldr	r1, .L848+372
 19256 01d0 9448     		ldr	r0, .L848+376
 19257 01d2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19258              	.LVL1187:
 19259              	.LBB10978:
 19260              	.LBI10978:
 19261              		.loc 19 162 7 is_stmt 1 view .LVU4453
 19262              	.LBB10979:
 19263              	.LBI10979:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19264              		.loc 20 89 7 view .LVU4454
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19265              		.loc 20 89 7 is_stmt 0 view .LVU4455
 19266              	.LBE10979:
 19267              	.LBE10978:
 19268              	.LBB10980:
 19269              	.LBI10980:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19270              		.loc 19 144 7 is_stmt 1 view .LVU4456
 19271              	.LBB10981:
 19272              	.LBI10981:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19273              		.loc 20 79 7 view .LVU4457
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19274              		.loc 20 79 7 is_stmt 0 view .LVU4458
 19275              	.LBE10981:
 19276              	.LBE10980:
 19277              		.loc 41 107 5 view .LVU4459
 19278 01d6 9449     		ldr	r1, .L848+380
 19279 01d8 9448     		ldr	r0, .L848+384
 19280 01da FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19281              	.LVL1188:
 19282              	.LBB10982:
 19283              	.LBI10982:
 19284              		.loc 19 162 7 is_stmt 1 view .LVU4460
 19285              	.LBB10983:
 19286              	.LBI10983:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19287              		.loc 20 89 7 view .LVU4461
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19288              		.loc 20 89 7 is_stmt 0 view .LVU4462
 19289              	.LBE10983:
 19290              	.LBE10982:
 19291              	.LBB10984:
 19292              	.LBI10984:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 739


 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19293              		.loc 19 144 7 is_stmt 1 view .LVU4463
 19294              	.LBB10985:
 19295              	.LBI10985:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19296              		.loc 20 79 7 view .LVU4464
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19297              		.loc 20 79 7 is_stmt 0 view .LVU4465
 19298              	.LBE10985:
 19299              	.LBE10984:
 19300              		.loc 41 107 5 view .LVU4466
 19301 01de 9449     		ldr	r1, .L848+388
 19302 01e0 9448     		ldr	r0, .L848+392
 19303 01e2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19304              	.LVL1189:
 19305              	.LBB10986:
 19306              	.LBI10986:
 19307              		.loc 19 162 7 is_stmt 1 view .LVU4467
 19308              	.LBB10987:
 19309              	.LBI10987:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19310              		.loc 20 89 7 view .LVU4468
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19311              		.loc 20 89 7 is_stmt 0 view .LVU4469
 19312              	.LBE10987:
 19313              	.LBE10986:
 19314              	.LBB10988:
 19315              	.LBI10988:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19316              		.loc 19 144 7 is_stmt 1 view .LVU4470
 19317              	.LBB10989:
 19318              	.LBI10989:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19319              		.loc 20 79 7 view .LVU4471
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19320              		.loc 20 79 7 is_stmt 0 view .LVU4472
 19321              	.LBE10989:
 19322              	.LBE10988:
 19323              		.loc 41 107 5 view .LVU4473
 19324 01e6 9449     		ldr	r1, .L848+396
 19325 01e8 9448     		ldr	r0, .L848+400
 19326 01ea FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19327              	.LVL1190:
 19328              	.LBB10990:
 19329              	.LBI10990:
 19330              		.loc 19 162 7 is_stmt 1 view .LVU4474
 19331              	.LBB10991:
 19332              	.LBI10991:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19333              		.loc 20 89 7 view .LVU4475
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19334              		.loc 20 89 7 is_stmt 0 view .LVU4476
 19335              	.LBE10991:
 19336              	.LBE10990:
 19337              	.LBB10992:
 19338              	.LBI10992:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 740


 19339              		.loc 19 144 7 is_stmt 1 view .LVU4477
 19340              	.LBB10993:
 19341              	.LBI10993:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19342              		.loc 20 79 7 view .LVU4478
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19343              		.loc 20 79 7 is_stmt 0 view .LVU4479
 19344              	.LBE10993:
 19345              	.LBE10992:
 19346              		.loc 41 107 5 view .LVU4480
 19347 01ee 9449     		ldr	r1, .L848+404
 19348 01f0 9448     		ldr	r0, .L848+408
 19349 01f2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19350              	.LVL1191:
 19351              	.LBB10994:
 19352              	.LBI10994:
 19353              		.loc 19 162 7 is_stmt 1 view .LVU4481
 19354              	.LBB10995:
 19355              	.LBI10995:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19356              		.loc 20 89 7 view .LVU4482
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19357              		.loc 20 89 7 is_stmt 0 view .LVU4483
 19358              	.LBE10995:
 19359              	.LBE10994:
 19360              	.LBB10996:
 19361              	.LBI10996:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19362              		.loc 19 144 7 is_stmt 1 view .LVU4484
 19363              	.LBB10997:
 19364              	.LBI10997:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19365              		.loc 20 79 7 view .LVU4485
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19366              		.loc 20 79 7 is_stmt 0 view .LVU4486
 19367              	.LBE10997:
 19368              	.LBE10996:
 19369              		.loc 41 107 5 view .LVU4487
 19370 01f6 9449     		ldr	r1, .L848+412
 19371 01f8 9448     		ldr	r0, .L848+416
 19372 01fa FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19373              	.LVL1192:
 19374              	.LBB10998:
 19375              	.LBI10998:
 19376              		.loc 19 162 7 is_stmt 1 view .LVU4488
 19377              	.LBB10999:
 19378              	.LBI10999:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19379              		.loc 20 89 7 view .LVU4489
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19380              		.loc 20 89 7 is_stmt 0 view .LVU4490
 19381              	.LBE10999:
 19382              	.LBE10998:
 19383              	.LBB11000:
 19384              	.LBI11000:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19385              		.loc 19 144 7 is_stmt 1 view .LVU4491
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 741


 19386              	.LBB11001:
 19387              	.LBI11001:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19388              		.loc 20 79 7 view .LVU4492
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19389              		.loc 20 79 7 is_stmt 0 view .LVU4493
 19390              	.LBE11001:
 19391              	.LBE11000:
 19392              		.loc 41 107 5 view .LVU4494
 19393 01fe 9449     		ldr	r1, .L848+420
 19394 0200 9448     		ldr	r0, .L848+424
 19395 0202 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19396              	.LVL1193:
 19397              	.LBB11002:
 19398              	.LBI11002:
 19399              		.loc 19 162 7 is_stmt 1 view .LVU4495
 19400              	.LBB11003:
 19401              	.LBI11003:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19402              		.loc 20 89 7 view .LVU4496
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19403              		.loc 20 89 7 is_stmt 0 view .LVU4497
 19404              	.LBE11003:
 19405              	.LBE11002:
 19406              	.LBB11004:
 19407              	.LBI11004:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19408              		.loc 19 144 7 is_stmt 1 view .LVU4498
 19409              	.LBB11005:
 19410              	.LBI11005:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19411              		.loc 20 79 7 view .LVU4499
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19412              		.loc 20 79 7 is_stmt 0 view .LVU4500
 19413              	.LBE11005:
 19414              	.LBE11004:
 19415              		.loc 41 107 5 view .LVU4501
 19416 0206 9449     		ldr	r1, .L848+428
 19417 0208 9448     		ldr	r0, .L848+432
 19418 020a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19419              	.LVL1194:
 19420              	.LBB11006:
 19421              	.LBI11006:
 19422              		.loc 19 162 7 is_stmt 1 view .LVU4502
 19423              	.LBB11007:
 19424              	.LBI11007:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19425              		.loc 20 89 7 view .LVU4503
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19426              		.loc 20 89 7 is_stmt 0 view .LVU4504
 19427              	.LBE11007:
 19428              	.LBE11006:
 19429              	.LBB11008:
 19430              	.LBI11008:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19431              		.loc 19 144 7 is_stmt 1 view .LVU4505
 19432              	.LBB11009:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 742


 19433              	.LBI11009:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19434              		.loc 20 79 7 view .LVU4506
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19435              		.loc 20 79 7 is_stmt 0 view .LVU4507
 19436              	.LBE11009:
 19437              	.LBE11008:
 19438              		.loc 41 107 5 view .LVU4508
 19439 020e 9449     		ldr	r1, .L848+436
 19440 0210 9448     		ldr	r0, .L848+440
 19441 0212 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19442              	.LVL1195:
 19443              	.LBB11010:
 19444              	.LBI11010:
 19445              		.loc 19 162 7 is_stmt 1 view .LVU4509
 19446              	.LBB11011:
 19447              	.LBI11011:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19448              		.loc 20 89 7 view .LVU4510
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19449              		.loc 20 89 7 is_stmt 0 view .LVU4511
 19450              	.LBE11011:
 19451              	.LBE11010:
 19452              	.LBB11012:
 19453              	.LBI11012:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19454              		.loc 19 144 7 is_stmt 1 view .LVU4512
 19455              	.LBB11013:
 19456              	.LBI11013:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19457              		.loc 20 79 7 view .LVU4513
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19458              		.loc 20 79 7 is_stmt 0 view .LVU4514
 19459              	.LBE11013:
 19460              	.LBE11012:
 19461              		.loc 41 107 5 view .LVU4515
 19462 0216 9449     		ldr	r1, .L848+444
 19463 0218 9448     		ldr	r0, .L848+448
 19464 021a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19465              	.LVL1196:
 19466              	.LBB11014:
 19467              	.LBI11014:
 19468              		.loc 19 162 7 is_stmt 1 view .LVU4516
 19469              	.LBB11015:
 19470              	.LBI11015:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19471              		.loc 20 89 7 view .LVU4517
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19472              		.loc 20 89 7 is_stmt 0 view .LVU4518
 19473              	.LBE11015:
 19474              	.LBE11014:
 19475              	.LBB11016:
 19476              	.LBI11016:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19477              		.loc 19 144 7 is_stmt 1 view .LVU4519
 19478              	.LBB11017:
 19479              	.LBI11017:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 743


  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19480              		.loc 20 79 7 view .LVU4520
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19481              		.loc 20 79 7 is_stmt 0 view .LVU4521
 19482              	.LBE11017:
 19483              	.LBE11016:
 19484              		.loc 41 107 5 view .LVU4522
 19485 021e 9449     		ldr	r1, .L848+452
 19486 0220 9448     		ldr	r0, .L848+456
 19487 0222 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19488              	.LVL1197:
 19489              	.LBB11018:
 19490              	.LBI11018:
 19491              		.loc 19 162 7 is_stmt 1 view .LVU4523
 19492              	.LBB11019:
 19493              	.LBI11019:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19494              		.loc 20 89 7 view .LVU4524
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19495              		.loc 20 89 7 is_stmt 0 view .LVU4525
 19496              	.LBE11019:
 19497              	.LBE11018:
 19498              	.LBB11020:
 19499              	.LBI11020:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19500              		.loc 19 144 7 is_stmt 1 view .LVU4526
 19501              	.LBB11021:
 19502              	.LBI11021:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19503              		.loc 20 79 7 view .LVU4527
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19504              		.loc 20 79 7 is_stmt 0 view .LVU4528
 19505              	.LBE11021:
 19506              	.LBE11020:
 19507              		.loc 41 107 5 view .LVU4529
 19508 0226 9449     		ldr	r1, .L848+460
 19509 0228 9448     		ldr	r0, .L848+464
 19510 022a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19511              	.LVL1198:
 19512              	.LBB11022:
 19513              	.LBI11022:
 19514              		.loc 19 162 7 is_stmt 1 view .LVU4530
 19515              	.LBB11023:
 19516              	.LBI11023:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19517              		.loc 20 89 7 view .LVU4531
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19518              		.loc 20 89 7 is_stmt 0 view .LVU4532
 19519              	.LBE11023:
 19520              	.LBE11022:
 19521              	.LBB11024:
 19522              	.LBI11024:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19523              		.loc 19 144 7 is_stmt 1 view .LVU4533
 19524              	.LBB11025:
 19525              	.LBI11025:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 744


 19526              		.loc 20 79 7 view .LVU4534
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19527              		.loc 20 79 7 is_stmt 0 view .LVU4535
 19528              	.LBE11025:
 19529              	.LBE11024:
 19530              		.loc 41 107 5 view .LVU4536
 19531 022e 9449     		ldr	r1, .L848+468
 19532 0230 9448     		ldr	r0, .L848+472
 19533 0232 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19534              	.LVL1199:
 19535              	.LBB11026:
 19536              	.LBI11026:
 19537              		.loc 19 162 7 is_stmt 1 view .LVU4537
 19538              	.LBB11027:
 19539              	.LBI11027:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19540              		.loc 20 89 7 view .LVU4538
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19541              		.loc 20 89 7 is_stmt 0 view .LVU4539
 19542              	.LBE11027:
 19543              	.LBE11026:
 19544              	.LBB11028:
 19545              	.LBI11028:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19546              		.loc 19 144 7 is_stmt 1 view .LVU4540
 19547              	.LBB11029:
 19548              	.LBI11029:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19549              		.loc 20 79 7 view .LVU4541
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19550              		.loc 20 79 7 is_stmt 0 view .LVU4542
 19551              	.LBE11029:
 19552              	.LBE11028:
 19553              		.loc 41 107 5 view .LVU4543
 19554 0236 9449     		ldr	r1, .L848+476
 19555 0238 9448     		ldr	r0, .L848+480
 19556 023a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19557              	.LVL1200:
 19558              	.LBB11030:
 19559              	.LBI11030:
 19560              		.loc 19 162 7 is_stmt 1 view .LVU4544
 19561              	.LBB11031:
 19562              	.LBI11031:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19563              		.loc 20 89 7 view .LVU4545
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19564              		.loc 20 89 7 is_stmt 0 view .LVU4546
 19565              	.LBE11031:
 19566              	.LBE11030:
 19567              	.LBB11032:
 19568              	.LBI11032:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19569              		.loc 19 144 7 is_stmt 1 view .LVU4547
 19570              	.LBB11033:
 19571              	.LBI11033:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19572              		.loc 20 79 7 view .LVU4548
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 745


  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19573              		.loc 20 79 7 is_stmt 0 view .LVU4549
 19574              	.LBE11033:
 19575              	.LBE11032:
 19576              		.loc 41 107 5 view .LVU4550
 19577 023e 9449     		ldr	r1, .L848+484
 19578 0240 9448     		ldr	r0, .L848+488
 19579 0242 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19580              	.LVL1201:
 19581              	.LBB11034:
 19582              	.LBI11034:
 19583              		.loc 19 162 7 is_stmt 1 view .LVU4551
 19584              	.LBB11035:
 19585              	.LBI11035:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19586              		.loc 20 89 7 view .LVU4552
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19587              		.loc 20 89 7 is_stmt 0 view .LVU4553
 19588              	.LBE11035:
 19589              	.LBE11034:
 19590              	.LBB11036:
 19591              	.LBI11036:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19592              		.loc 19 144 7 is_stmt 1 view .LVU4554
 19593              	.LBB11037:
 19594              	.LBI11037:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19595              		.loc 20 79 7 view .LVU4555
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19596              		.loc 20 79 7 is_stmt 0 view .LVU4556
 19597              	.LBE11037:
 19598              	.LBE11036:
 19599              		.loc 41 107 5 view .LVU4557
 19600 0246 9449     		ldr	r1, .L848+492
 19601 0248 9448     		ldr	r0, .L848+496
 19602 024a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19603              	.LVL1202:
 19604              	.LBB11038:
 19605              	.LBI11038:
 19606              		.loc 19 162 7 is_stmt 1 view .LVU4558
 19607              	.LBB11039:
 19608              	.LBI11039:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19609              		.loc 20 89 7 view .LVU4559
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19610              		.loc 20 89 7 is_stmt 0 view .LVU4560
 19611              	.LBE11039:
 19612              	.LBE11038:
 19613              	.LBB11040:
 19614              	.LBI11040:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19615              		.loc 19 144 7 is_stmt 1 view .LVU4561
 19616              	.LBB11041:
 19617              	.LBI11041:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19618              		.loc 20 79 7 view .LVU4562
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 746


 19619              		.loc 20 79 7 is_stmt 0 view .LVU4563
 19620              	.LBE11041:
 19621              	.LBE11040:
 19622              		.loc 41 107 5 view .LVU4564
 19623 024e 9449     		ldr	r1, .L848+500
 19624 0250 9448     		ldr	r0, .L848+504
 19625 0252 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19626              	.LVL1203:
 19627              	.LBB11042:
 19628              	.LBI11042:
 19629              		.loc 19 162 7 is_stmt 1 view .LVU4565
 19630              	.LBB11043:
 19631              	.LBI11043:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19632              		.loc 20 89 7 view .LVU4566
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19633              		.loc 20 89 7 is_stmt 0 view .LVU4567
 19634              	.LBE11043:
 19635              	.LBE11042:
 19636              	.LBB11044:
 19637              	.LBI11044:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19638              		.loc 19 144 7 is_stmt 1 view .LVU4568
 19639              	.LBB11045:
 19640              	.LBI11045:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19641              		.loc 20 79 7 view .LVU4569
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19642              		.loc 20 79 7 is_stmt 0 view .LVU4570
 19643              	.LBE11045:
 19644              	.LBE11044:
 19645              		.loc 41 107 5 view .LVU4571
 19646 0256 9449     		ldr	r1, .L848+508
 19647 0258 9448     		ldr	r0, .L848+512
 19648 025a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19649              	.LVL1204:
 19650              	.LBB11046:
 19651              	.LBI11046:
 19652              		.loc 19 162 7 is_stmt 1 view .LVU4572
 19653              	.LBB11047:
 19654              	.LBI11047:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19655              		.loc 20 89 7 view .LVU4573
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19656              		.loc 20 89 7 is_stmt 0 view .LVU4574
 19657              	.LBE11047:
 19658              	.LBE11046:
 19659              	.LBB11048:
 19660              	.LBI11048:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19661              		.loc 19 144 7 is_stmt 1 view .LVU4575
 19662              	.LBB11049:
 19663              	.LBI11049:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19664              		.loc 20 79 7 view .LVU4576
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19665              		.loc 20 79 7 is_stmt 0 view .LVU4577
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 747


 19666              	.LBE11049:
 19667              	.LBE11048:
 19668              		.loc 41 107 5 view .LVU4578
 19669 025e 9449     		ldr	r1, .L848+516
 19670 0260 9448     		ldr	r0, .L848+520
 19671 0262 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19672              	.LVL1205:
 19673              	.LBB11050:
 19674              	.LBI11050:
 19675              		.loc 19 162 7 is_stmt 1 view .LVU4579
 19676              	.LBB11051:
 19677              	.LBI11051:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19678              		.loc 20 89 7 view .LVU4580
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19679              		.loc 20 89 7 is_stmt 0 view .LVU4581
 19680              	.LBE11051:
 19681              	.LBE11050:
 19682              	.LBB11052:
 19683              	.LBI11052:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19684              		.loc 19 144 7 is_stmt 1 view .LVU4582
 19685              	.LBB11053:
 19686              	.LBI11053:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19687              		.loc 20 79 7 view .LVU4583
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19688              		.loc 20 79 7 is_stmt 0 view .LVU4584
 19689              	.LBE11053:
 19690              	.LBE11052:
 19691              		.loc 41 107 5 view .LVU4585
 19692 0266 9449     		ldr	r1, .L848+524
 19693 0268 9448     		ldr	r0, .L848+528
 19694 026a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19695              	.LVL1206:
 19696              	.LBB11054:
 19697              	.LBI11054:
 19698              		.loc 19 162 7 is_stmt 1 view .LVU4586
 19699              	.LBB11055:
 19700              	.LBI11055:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19701              		.loc 20 89 7 view .LVU4587
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19702              		.loc 20 89 7 is_stmt 0 view .LVU4588
 19703              	.LBE11055:
 19704              	.LBE11054:
 19705              	.LBB11056:
 19706              	.LBI11056:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19707              		.loc 19 144 7 is_stmt 1 view .LVU4589
 19708              	.LBB11057:
 19709              	.LBI11057:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19710              		.loc 20 79 7 view .LVU4590
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19711              		.loc 20 79 7 is_stmt 0 view .LVU4591
 19712              	.LBE11057:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 748


 19713              	.LBE11056:
 19714              		.loc 41 107 5 view .LVU4592
 19715 026e 9449     		ldr	r1, .L848+532
 19716 0270 9448     		ldr	r0, .L848+536
 19717 0272 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19718              	.LVL1207:
 19719              	.LBB11058:
 19720              	.LBI11058:
 19721              		.loc 19 162 7 is_stmt 1 view .LVU4593
 19722              	.LBB11059:
 19723              	.LBI11059:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19724              		.loc 20 89 7 view .LVU4594
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19725              		.loc 20 89 7 is_stmt 0 view .LVU4595
 19726              	.LBE11059:
 19727              	.LBE11058:
  46:theory.h      ****         "C0",
 19728              		.loc 41 46 39 view .LVU4596
 19729 0276 1A4A     		ldr	r2, .L848+52
 19730 0278 9349     		ldr	r1, .L848+540
 19731 027a 1C48     		ldr	r0, .L848+64
 19732 027c FFF7FEFF 		bl	__aeabi_atexit
 19733              	.LVL1208:
 19734              	.LBB11060:
 19735              	.LBI11060:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19736              		.loc 19 144 7 is_stmt 1 view .LVU4597
 19737              	.LBB11061:
 19738              	.LBI11061:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19739              		.loc 20 79 7 view .LVU4598
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19740              		.loc 20 79 7 is_stmt 0 view .LVU4599
 19741              	.LBE11061:
 19742              	.LBE11060:
 108:theory.h      **** 
 109:theory.h      ****     // Note: Mode names are currently abbreviated due to 
 110:theory.h      ****     // Daisy Patch screen size limitations.
 111:theory.h      ****     //
 112:theory.h      ****     // TODO support exotic modes
 113:theory.h      ****     const std::vector<std::string> modes {
 114:theory.h      ****         "Major",
 115:theory.h      ****         "Minor",
 116:theory.h      ****         "Dorian",
 117:theory.h      ****         "Phyrgi", // Phyrgian
 118:theory.h      ****         "Lydian",
 119:theory.h      ****         "Mixo",   // Mixolydian
 120:theory.h      ****         "Locri",  // Locrian
 121:theory.h      ****     };
 19743              		.loc 41 121 5 view .LVU4600
 19744 0280 9249     		ldr	r1, .L848+544
 19745 0282 2846     		mov	r0, r5
 19746 0284 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19747              	.LVL1209:
 19748              	.LBB11062:
 19749              	.LBI11062:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 749


 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19750              		.loc 19 144 7 is_stmt 1 view .LVU4601
 19751              	.LBB11063:
 19752              	.LBI11063:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19753              		.loc 20 79 7 view .LVU4602
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19754              		.loc 20 79 7 is_stmt 0 view .LVU4603
 19755              	.LBE11063:
 19756              	.LBE11062:
 19757              		.loc 41 121 5 view .LVU4604
 19758 0288 9149     		ldr	r1, .L848+548
 19759 028a 6AA8     		add	r0, sp, #424
 19760 028c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19761              	.LVL1210:
 19762              	.LBB11064:
 19763              	.LBI11064:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19764              		.loc 19 144 7 is_stmt 1 view .LVU4605
 19765              	.LBB11065:
 19766              	.LBI11065:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19767              		.loc 20 79 7 view .LVU4606
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19768              		.loc 20 79 7 is_stmt 0 view .LVU4607
 19769              	.LBE11065:
 19770              	.LBE11064:
 19771              		.loc 41 121 5 view .LVU4608
 19772 0290 9049     		ldr	r1, .L848+552
 19773 0292 70A8     		add	r0, sp, #448
 19774 0294 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19775              	.LVL1211:
 19776              	.LBB11066:
 19777              	.LBI11066:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19778              		.loc 19 144 7 is_stmt 1 view .LVU4609
 19779              	.LBB11067:
 19780              	.LBI11067:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19781              		.loc 20 79 7 view .LVU4610
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19782              		.loc 20 79 7 is_stmt 0 view .LVU4611
 19783              	.LBE11067:
 19784              	.LBE11066:
 19785              		.loc 41 121 5 view .LVU4612
 19786 0298 8F49     		ldr	r1, .L848+556
 19787 029a 76A8     		add	r0, sp, #472
 19788 029c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19789              	.LVL1212:
 19790              	.LBB11068:
 19791              	.LBI11068:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19792              		.loc 19 144 7 is_stmt 1 view .LVU4613
 19793              	.LBB11069:
 19794              	.LBI11069:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19795              		.loc 20 79 7 view .LVU4614
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 750


  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19796              		.loc 20 79 7 is_stmt 0 view .LVU4615
 19797              	.LBE11069:
 19798              	.LBE11068:
 19799              		.loc 41 121 5 view .LVU4616
 19800 02a0 8E49     		ldr	r1, .L848+560
 19801 02a2 7CA8     		add	r0, sp, #496
 19802 02a4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19803              	.LVL1213:
 19804 02a8 1AE1     		b	.L849
 19805              	.L850:
 19806 02aa 00BF     		.align	2
 19807              	.L848:
 19808 02ac 00000000 		.word	.LC19
 19809 02b0 04000000 		.word	.LC20
 19810 02b4 08000000 		.word	.LC21
 19811 02b8 0C000000 		.word	.LC22
 19812 02bc 10000000 		.word	.LC23
 19813 02c0 14000000 		.word	.LC24
 19814 02c4 18000000 		.word	.LC25
 19815 02c8 1C000000 		.word	.LC26
 19816 02cc 20000000 		.word	.LC27
 19817 02d0 24000000 		.word	.LC28
 19818 02d4 28000000 		.word	.LC29
 19819 02d8 2C000000 		.word	.LC30
 19820 02dc 00000000 		.word	.LANCHOR20
 19821 02e0 00000000 		.word	__dso_handle
 19822 02e4 00000000 		.word	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 19823 02e8 30000000 		.word	.LC31
 19824 02ec 00000000 		.word	.LANCHOR25
 19825 02f0 34000000 		.word	.LC32
 19826 02f4 18000000 		.word	.LANCHOR25+24
 19827 02f8 38000000 		.word	.LC33
 19828 02fc 30000000 		.word	.LANCHOR25+48
 19829 0300 3C000000 		.word	.LC34
 19830 0304 48000000 		.word	.LANCHOR25+72
 19831 0308 40000000 		.word	.LC35
 19832 030c 60000000 		.word	.LANCHOR25+96
 19833 0310 44000000 		.word	.LC36
 19834 0314 78000000 		.word	.LANCHOR25+120
 19835 0318 48000000 		.word	.LC37
 19836 031c 90000000 		.word	.LANCHOR25+144
 19837 0320 4C000000 		.word	.LC38
 19838 0324 A8000000 		.word	.LANCHOR25+168
 19839 0328 50000000 		.word	.LC39
 19840 032c C0000000 		.word	.LANCHOR25+192
 19841 0330 54000000 		.word	.LC40
 19842 0334 D8000000 		.word	.LANCHOR25+216
 19843 0338 58000000 		.word	.LC41
 19844 033c F0000000 		.word	.LANCHOR25+240
 19845 0340 5C000000 		.word	.LC42
 19846 0344 08010000 		.word	.LANCHOR25+264
 19847 0348 60000000 		.word	.LC43
 19848 034c 20010000 		.word	.LANCHOR25+288
 19849 0350 64000000 		.word	.LC44
 19850 0354 38010000 		.word	.LANCHOR25+312
 19851 0358 68000000 		.word	.LC45
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 751


 19852 035c 50010000 		.word	.LANCHOR25+336
 19853 0360 6C000000 		.word	.LC46
 19854 0364 68010000 		.word	.LANCHOR25+360
 19855 0368 70000000 		.word	.LC47
 19856 036c 80010000 		.word	.LANCHOR25+384
 19857 0370 74000000 		.word	.LC48
 19858 0374 98010000 		.word	.LANCHOR25+408
 19859 0378 78000000 		.word	.LC49
 19860 037c B0010000 		.word	.LANCHOR25+432
 19861 0380 7C000000 		.word	.LC50
 19862 0384 C8010000 		.word	.LANCHOR25+456
 19863 0388 80000000 		.word	.LC51
 19864 038c E0010000 		.word	.LANCHOR25+480
 19865 0390 84000000 		.word	.LC52
 19866 0394 F8010000 		.word	.LANCHOR25+504
 19867 0398 88000000 		.word	.LC53
 19868 039c 10020000 		.word	.LANCHOR25+528
 19869 03a0 8C000000 		.word	.LC54
 19870 03a4 28020000 		.word	.LANCHOR25+552
 19871 03a8 90000000 		.word	.LC55
 19872 03ac 40020000 		.word	.LANCHOR25+576
 19873 03b0 94000000 		.word	.LC56
 19874 03b4 58020000 		.word	.LANCHOR25+600
 19875 03b8 98000000 		.word	.LC57
 19876 03bc 70020000 		.word	.LANCHOR25+624
 19877 03c0 9C000000 		.word	.LC58
 19878 03c4 88020000 		.word	.LANCHOR25+648
 19879 03c8 A0000000 		.word	.LC59
 19880 03cc A0020000 		.word	.LANCHOR25+672
 19881 03d0 A4000000 		.word	.LC60
 19882 03d4 B8020000 		.word	.LANCHOR25+696
 19883 03d8 A8000000 		.word	.LC61
 19884 03dc D0020000 		.word	.LANCHOR25+720
 19885 03e0 AC000000 		.word	.LC62
 19886 03e4 E8020000 		.word	.LANCHOR25+744
 19887 03e8 B0000000 		.word	.LC63
 19888 03ec 00030000 		.word	.LANCHOR25+768
 19889 03f0 B4000000 		.word	.LC64
 19890 03f4 18030000 		.word	.LANCHOR25+792
 19891 03f8 B8000000 		.word	.LC65
 19892 03fc 30030000 		.word	.LANCHOR25+816
 19893 0400 BC000000 		.word	.LC66
 19894 0404 48030000 		.word	.LANCHOR25+840
 19895 0408 C0000000 		.word	.LC67
 19896 040c 60030000 		.word	.LANCHOR25+864
 19897 0410 C4000000 		.word	.LC68
 19898 0414 78030000 		.word	.LANCHOR25+888
 19899 0418 C8000000 		.word	.LC69
 19900 041c 90030000 		.word	.LANCHOR25+912
 19901 0420 CC000000 		.word	.LC70
 19902 0424 A8030000 		.word	.LANCHOR25+936
 19903 0428 D0000000 		.word	.LC71
 19904 042c C0030000 		.word	.LANCHOR25+960
 19905 0430 D4000000 		.word	.LC72
 19906 0434 D8030000 		.word	.LANCHOR25+984
 19907 0438 D8000000 		.word	.LC73
 19908 043c F0030000 		.word	.LANCHOR25+1008
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 752


 19909 0440 DC000000 		.word	.LC74
 19910 0444 08040000 		.word	.LANCHOR25+1032
 19911 0448 E0000000 		.word	.LC75
 19912 044c 20040000 		.word	.LANCHOR25+1056
 19913 0450 E4000000 		.word	.LC76
 19914 0454 38040000 		.word	.LANCHOR25+1080
 19915 0458 E8000000 		.word	.LC77
 19916 045c 50040000 		.word	.LANCHOR25+1104
 19917 0460 EC000000 		.word	.LC78
 19918 0464 68040000 		.word	.LANCHOR25+1128
 19919 0468 F0000000 		.word	.LC79
 19920 046c 80040000 		.word	.LANCHOR25+1152
 19921 0470 F4000000 		.word	.LC80
 19922 0474 98040000 		.word	.LANCHOR25+1176
 19923 0478 F8000000 		.word	.LC81
 19924 047c B0040000 		.word	.LANCHOR25+1200
 19925 0480 FC000000 		.word	.LC82
 19926 0484 C8040000 		.word	.LANCHOR25+1224
 19927 0488 00010000 		.word	.LC83
 19928 048c E0040000 		.word	.LANCHOR25+1248
 19929 0490 04010000 		.word	.LC84
 19930 0494 F8040000 		.word	.LANCHOR25+1272
 19931 0498 08010000 		.word	.LC85
 19932 049c 10050000 		.word	.LANCHOR25+1296
 19933 04a0 0C010000 		.word	.LC86
 19934 04a4 28050000 		.word	.LANCHOR25+1320
 19935 04a8 10010000 		.word	.LC87
 19936 04ac 40050000 		.word	.LANCHOR25+1344
 19937 04b0 14010000 		.word	.LC88
 19938 04b4 58050000 		.word	.LANCHOR25+1368
 19939 04b8 18010000 		.word	.LC89
 19940 04bc 70050000 		.word	.LANCHOR25+1392
 19941 04c0 1C010000 		.word	.LC90
 19942 04c4 88050000 		.word	.LANCHOR25+1416
 19943 04c8 00000000 		.word	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED1Ev
 19944 04cc 20010000 		.word	.LC91
 19945 04d0 28010000 		.word	.LC92
 19946 04d4 30010000 		.word	.LC93
 19947 04d8 38010000 		.word	.LC94
 19948 04dc 40010000 		.word	.LC95
 19949              	.L849:
 19950              	.LVL1214:
 19951              	.LBB11070:
 19952              	.LBI11070:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19953              		.loc 19 144 7 is_stmt 1 view .LVU4617
 19954              	.LBB11071:
 19955              	.LBI11071:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19956              		.loc 20 79 7 view .LVU4618
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19957              		.loc 20 79 7 is_stmt 0 view .LVU4619
 19958              	.LBE11071:
 19959              	.LBE11070:
 19960              		.loc 41 121 5 view .LVU4620
 19961 04e0 B449     		ldr	r1, .L851
 19962 04e2 82A8     		add	r0, sp, #520
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 753


 19963 04e4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19964              	.LVL1215:
 19965              	.LBB11072:
 19966              	.LBI11072:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19967              		.loc 19 144 7 is_stmt 1 view .LVU4621
 19968              	.LBB11073:
 19969              	.LBI11073:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19970              		.loc 20 79 7 view .LVU4622
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19971              		.loc 20 79 7 is_stmt 0 view .LVU4623
 19972              	.LBE11073:
 19973              	.LBE11072:
 19974              		.loc 41 121 5 view .LVU4624
 19975 04e8 B349     		ldr	r1, .L851+4
 19976 04ea 88A8     		add	r0, sp, #544
 19977 04ec FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 19978              	.LVL1216:
 19979 04f0 0723     		movs	r3, #7
 19980 04f2 18AA     		add	r2, sp, #96
 19981 04f4 1895     		str	r5, [sp, #96]
 19982 04f6 1993     		str	r3, [sp, #100]
 19983              	.LVL1217:
 19984              	.LBB11074:
 19985              	.LBI11074:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19986              		.loc 19 144 7 is_stmt 1 view .LVU4625
 19987              	.LBB11075:
 19988              	.LBI11075:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19989              		.loc 20 79 7 view .LVU4626
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19990              		.loc 20 79 7 is_stmt 0 view .LVU4627
 19991              	.LBE11075:
 19992              	.LBE11074:
 19993              		.loc 41 121 5 view .LVU4628
 19994 04f8 5DAB     		add	r3, sp, #372
 19995 04fa B048     		ldr	r0, .L851+8
 19996 04fc 06CA     		ldm	r2, {r1, r2}
 19997 04fe FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 19998              	.LVL1218:
 19999              	.LBB11076:
 20000              	.LBI11076:
 20001              		.loc 19 162 7 is_stmt 1 view .LVU4629
 20002              	.LBB11077:
 20003              	.LBI11077:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20004              		.loc 20 89 7 view .LVU4630
 20005              	.L794:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20006              		.loc 20 89 7 is_stmt 0 view .LVU4631
 20007              	.LBE11077:
 20008              	.LBE11076:
 20009              	.LBB11078:
 20010              	.LBI11078:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 754


 20011              		.loc 18 657 7 is_stmt 1 view .LVU4632
 20012              	.LBB11079:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20013              		.loc 18 658 19 is_stmt 0 view .LVU4633
 20014 0502 3046     		mov	r0, r6
 20015 0504 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 20016              	.LVL1219:
 20017              	.LBB11080:
 20018              	.LBI11080:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20019              		.loc 18 150 14 is_stmt 1 view .LVU4634
 20020              	.LBB11081:
 20021              	.LBI11081:
 20022              		.loc 19 162 7 view .LVU4635
 20023              	.LBB11082:
 20024              	.LBI11082:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20025              		.loc 20 89 7 view .LVU4636
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20026              		.loc 20 89 7 is_stmt 0 view .LVU4637
 20027              	.LBE11082:
 20028              	.LBE11081:
 20029              	.LBE11080:
 20030              	.LBE11079:
 20031              	.LBE11078:
 20032              		.loc 41 121 5 view .LVU4638
 20033 0508 B542     		cmp	r5, r6
 20034 050a A6F11806 		sub	r6, r6, #24
 20035 050e F8D1     		bne	.L794
 20036              	.LVL1220:
 20037              	.LBB11083:
 20038              	.LBI11083:
 20039              		.loc 19 162 7 is_stmt 1 view .LVU4639
 20040              	.LBB11084:
 20041              	.LBI11084:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20042              		.loc 20 89 7 view .LVU4640
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20043              		.loc 20 89 7 is_stmt 0 view .LVU4641
 20044              	.LBE11084:
 20045              	.LBE11083:
 20046              	.LBB11085:
 20047              	.LBI11085:
 20048              		.loc 19 162 7 is_stmt 1 view .LVU4642
 20049              	.LBB11086:
 20050              	.LBI11086:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20051              		.loc 20 89 7 view .LVU4643
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20052              		.loc 20 89 7 is_stmt 0 view .LVU4644
 20053              	.LBE11086:
 20054              	.LBE11085:
 20055              	.LBB11087:
 20056              	.LBI11087:
 20057              		.loc 19 162 7 is_stmt 1 view .LVU4645
 20058              	.LBB11088:
 20059              	.LBI11088:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 755


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20060              		.loc 20 89 7 view .LVU4646
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20061              		.loc 20 89 7 is_stmt 0 view .LVU4647
 20062              	.LBE11088:
 20063              	.LBE11087:
 20064              	.LBB11089:
 20065              	.LBI11089:
 20066              		.loc 19 162 7 is_stmt 1 view .LVU4648
 20067              	.LBB11090:
 20068              	.LBI11090:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20069              		.loc 20 89 7 view .LVU4649
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20070              		.loc 20 89 7 is_stmt 0 view .LVU4650
 20071              	.LBE11090:
 20072              	.LBE11089:
 20073              	.LBB11091:
 20074              	.LBI11091:
 20075              		.loc 19 162 7 is_stmt 1 view .LVU4651
 20076              	.LBB11092:
 20077              	.LBI11092:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20078              		.loc 20 89 7 view .LVU4652
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20079              		.loc 20 89 7 is_stmt 0 view .LVU4653
 20080              	.LBE11092:
 20081              	.LBE11091:
 20082              	.LBB11093:
 20083              	.LBI11093:
 20084              		.loc 19 162 7 is_stmt 1 view .LVU4654
 20085              	.LBB11094:
 20086              	.LBI11094:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20087              		.loc 20 89 7 view .LVU4655
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20088              		.loc 20 89 7 is_stmt 0 view .LVU4656
 20089              	.LBE11094:
 20090              	.LBE11093:
 20091              	.LBB11095:
 20092              	.LBI11095:
 20093              		.loc 19 162 7 is_stmt 1 view .LVU4657
 20094              	.LBB11096:
 20095              	.LBI11096:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20096              		.loc 20 89 7 view .LVU4658
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20097              		.loc 20 89 7 is_stmt 0 view .LVU4659
 20098              	.LBE11096:
 20099              	.LBE11095:
 122:theory.h      **** 
 123:theory.h      ****     // Maps scale names to their first octave of semitone values
 124:theory.h      ****     const std::map<std::string, std::vector<int>> modeToSemitones {
 125:theory.h      ****         {"Major",  std::vector<int>{0, 2, 4, 5, 7, 9, 11}},
 20100              		.loc 41 125 57 view .LVU4660
 20101 0510 AB4D     		ldr	r5, .L851+12
 20102 0512 4FF00709 		mov	r9, #7
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 756


 113:theory.h      ****         "Major",
 20103              		.loc 41 113 36 view .LVU4661
 20104 0516 AB4A     		ldr	r2, .L851+16
 20105              		.loc 41 125 57 view .LVU4662
 20106 0518 5DAF     		add	r7, sp, #372
 113:theory.h      ****         "Major",
 20107              		.loc 41 113 36 view .LVU4663
 20108 051a AB49     		ldr	r1, .L851+20
 20109 051c 6DAE     		add	r6, sp, #436
 20110 051e A748     		ldr	r0, .L851+8
 20111              	.LBB11097:
 20112              	.LBB11098:
 20113              	.LBB11099:
 20114              	.LBB11100:
 20115              	.LBB11101:
 20116              	.LBB11102:
 20117              	.LBB11103:
 20118              	.LBB11104:
 20119              	.LBB11105:
 20120              	.LBB11106:
 20121              	.LBB11107:
 20122              	.LBB11108:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20123              		.loc 21 322 14 view .LVU4664
 20124 0520 4FF00008 		mov	r8, #0
 20125              	.LBE11108:
 20126              	.LBE11107:
 20127              	.LBE11106:
 20128              	.LBE11105:
 20129              	.LBE11104:
 20130              	.LBE11103:
 20131              	.LBE11102:
 20132              	.LBE11101:
 20133              	.LBE11100:
 20134              	.LBE11099:
 20135              	.LBE11098:
 20136              	.LBE11097:
 113:theory.h      ****         "Major",
 20137              		.loc 41 113 36 view .LVU4665
 20138 0524 FFF7FEFF 		bl	__aeabi_atexit
 20139              	.LVL1221:
 20140              		.loc 41 125 57 view .LVU4666
 20141 0528 0DF1580C 		add	ip, sp, #88
 20142              	.LBB11237:
 20143              	.LBB11238:
 20144              	.LBB11239:
 20145              	.LBB11240:
 20146              	.LBB11241:
 20147              	.LBB11242:
 20148              	.LBB11243:
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reset();
 20149              		.loc 29 175 26 view .LVU4667
 20150 052c DFF8BCA2 		ldr	r10, .L851+56
 20151 0530 0DF52C7B 		add	fp, sp, #688
 20152              	.LBE11243:
 20153              	.LBE11242:
 20154              	.LBE11241:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 757


 20155              	.LBE11240:
 20156              	.LBE11239:
 20157              	.LBE11238:
 20158              	.LBE11237:
 20159              		.loc 41 125 57 view .LVU4668
 20160 0534 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 20161 0536 CDE91679 		strd	r7, r9, [sp, #88]
 20162              	.LVL1222:
 20163              	.LBB11560:
 20164              	.LBI11560:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20165              		.loc 19 144 7 is_stmt 1 view .LVU4669
 20166              	.LBB11561:
 20167              	.LBI11561:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20168              		.loc 20 79 7 view .LVU4670
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20169              		.loc 20 79 7 is_stmt 0 view .LVU4671
 20170              	.LBE11561:
 20171              	.LBE11560:
 20172              		.loc 41 125 57 view .LVU4672
 20173 053a 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 20174 053c 95E80700 		ldm	r5, {r0, r1, r2}
 20175 0540 08AB     		add	r3, sp, #32
 20176 0542 87E80700 		stm	r7, {r0, r1, r2}
 20177 0546 9CE80600 		ldm	ip, {r1, r2}
 20178 054a 30A8     		add	r0, sp, #192
 126:theory.h      ****         {"Minor",  std::vector<int>{0, 2, 3, 5, 7, 8, 10}},
 20179              		.loc 41 126 57 view .LVU4673
 20180 054c 56AF     		add	r7, sp, #344
 125:theory.h      ****         {"Minor",  std::vector<int>{0, 2, 3, 5, 7, 8, 10}},
 20181              		.loc 41 125 57 view .LVU4674
 20182 054e FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 20183              	.LVL1223:
 127:theory.h      ****         {"Dorian", std::vector<int>{0, 2, 3, 5, 7, 9, 10}},
 128:theory.h      ****         {"Phyrgi", std::vector<int>{0, 1, 3, 5, 7, 9, 10}},
 129:theory.h      ****         {"Lydian", std::vector<int>{0, 2, 4, 6, 7, 9, 11}},
 130:theory.h      ****         {"Mixo",   std::vector<int>{0, 2, 4, 5, 7, 9, 10}},
 131:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 132:theory.h      ****     };
 20184              		.loc 41 132 5 view .LVU4675
 20185 0552 30AA     		add	r2, sp, #192
 20186 0554 9D49     		ldr	r1, .L851+24
 20187 0556 2046     		mov	r0, r4
 20188 0558 FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA6_KcS9_L
 20189              	.LVL1224:
 126:theory.h      ****         {"Dorian", std::vector<int>{0, 2, 3, 5, 7, 9, 10}},
 20190              		.loc 41 126 57 view .LVU4676
 20191 055c 05F10C0C 		add	ip, r5, #12
 20192 0560 0DF1500E 		add	lr, sp, #80
 20193 0564 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 20194 0568 CDE91479 		strd	r7, r9, [sp, #80]
 20195              	.LVL1225:
 20196              	.LBB11562:
 20197              	.LBI11562:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20198              		.loc 19 144 7 is_stmt 1 view .LVU4677
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 758


 20199              	.LBB11563:
 20200              	.LBI11563:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20201              		.loc 20 79 7 view .LVU4678
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20202              		.loc 20 79 7 is_stmt 0 view .LVU4679
 20203              	.LBE11563:
 20204              	.LBE11562:
 126:theory.h      ****         {"Dorian", std::vector<int>{0, 2, 3, 5, 7, 9, 10}},
 20205              		.loc 41 126 57 view .LVU4680
 20206 056c 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 20207 056e 9CE80700 		ldm	ip, {r0, r1, r2}
 20208 0572 07AB     		add	r3, sp, #28
 20209 0574 87E80700 		stm	r7, {r0, r1, r2}
 20210 0578 9EE80600 		ldm	lr, {r1, r2}
 20211 057c 2DA8     		add	r0, sp, #180
 127:theory.h      ****         {"Phyrgi", std::vector<int>{0, 1, 3, 5, 7, 9, 10}},
 20212              		.loc 41 127 57 view .LVU4681
 20213 057e 4FAF     		add	r7, sp, #316
 126:theory.h      ****         {"Dorian", std::vector<int>{0, 2, 3, 5, 7, 9, 10}},
 20214              		.loc 41 126 57 view .LVU4682
 20215 0580 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 20216              	.LVL1226:
 20217              		.loc 41 132 5 view .LVU4683
 20218 0584 2DAA     		add	r2, sp, #180
 20219 0586 9249     		ldr	r1, .L851+28
 20220 0588 3046     		mov	r0, r6
 20221 058a FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA6_KcS9_L
 20222              	.LVL1227:
 127:theory.h      ****         {"Phyrgi", std::vector<int>{0, 1, 3, 5, 7, 9, 10}},
 20223              		.loc 41 127 57 view .LVU4684
 20224 058e 05F1280C 		add	ip, r5, #40
 20225 0592 0DF1480E 		add	lr, sp, #72
 20226 0596 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 20227 059a CDE91279 		strd	r7, r9, [sp, #72]
 20228              	.LVL1228:
 20229              	.LBB11564:
 20230              	.LBI11564:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20231              		.loc 19 144 7 is_stmt 1 view .LVU4685
 20232              	.LBB11565:
 20233              	.LBI11565:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20234              		.loc 20 79 7 view .LVU4686
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20235              		.loc 20 79 7 is_stmt 0 view .LVU4687
 20236              	.LBE11565:
 20237              	.LBE11564:
 127:theory.h      ****         {"Phyrgi", std::vector<int>{0, 1, 3, 5, 7, 9, 10}},
 20238              		.loc 41 127 57 view .LVU4688
 20239 059e 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 20240 05a0 9CE80700 		ldm	ip, {r0, r1, r2}
 20241 05a4 06AB     		add	r3, sp, #24
 20242 05a6 87E80700 		stm	r7, {r0, r1, r2}
 20243 05aa 9EE80600 		ldm	lr, {r1, r2}
 20244 05ae 2AA8     		add	r0, sp, #168
 128:theory.h      ****         {"Lydian", std::vector<int>{0, 2, 4, 6, 7, 9, 11}},
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 759


 20245              		.loc 41 128 57 view .LVU4689
 20246 05b0 48AF     		add	r7, sp, #288
 127:theory.h      ****         {"Phyrgi", std::vector<int>{0, 1, 3, 5, 7, 9, 10}},
 20247              		.loc 41 127 57 view .LVU4690
 20248 05b2 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 20249              	.LVL1229:
 20250              		.loc 41 132 5 view .LVU4691
 20251 05b6 2AAA     		add	r2, sp, #168
 20252 05b8 8649     		ldr	r1, .L851+32
 20253 05ba 76A8     		add	r0, sp, #472
 20254 05bc FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA7_KcS9_L
 20255              	.LVL1230:
 128:theory.h      ****         {"Lydian", std::vector<int>{0, 2, 4, 6, 7, 9, 11}},
 20256              		.loc 41 128 57 view .LVU4692
 20257 05c0 05F1440C 		add	ip, r5, #68
 20258 05c4 0DF1400E 		add	lr, sp, #64
 20259 05c8 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 20260 05cc CDE91079 		strd	r7, r9, [sp, #64]
 20261              	.LVL1231:
 20262              	.LBB11566:
 20263              	.LBI11566:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20264              		.loc 19 144 7 is_stmt 1 view .LVU4693
 20265              	.LBB11567:
 20266              	.LBI11567:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20267              		.loc 20 79 7 view .LVU4694
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20268              		.loc 20 79 7 is_stmt 0 view .LVU4695
 20269              	.LBE11567:
 20270              	.LBE11566:
 128:theory.h      ****         {"Lydian", std::vector<int>{0, 2, 4, 6, 7, 9, 11}},
 20271              		.loc 41 128 57 view .LVU4696
 20272 05d0 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 20273 05d2 9CE80700 		ldm	ip, {r0, r1, r2}
 20274 05d6 05AB     		add	r3, sp, #20
 20275 05d8 87E80700 		stm	r7, {r0, r1, r2}
 20276 05dc 9EE80600 		ldm	lr, {r1, r2}
 20277 05e0 27A8     		add	r0, sp, #156
 129:theory.h      ****         {"Mixo",   std::vector<int>{0, 2, 4, 5, 7, 9, 10}},
 20278              		.loc 41 129 57 view .LVU4697
 20279 05e2 41AF     		add	r7, sp, #260
 128:theory.h      ****         {"Lydian", std::vector<int>{0, 2, 4, 6, 7, 9, 11}},
 20280              		.loc 41 128 57 view .LVU4698
 20281 05e4 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 20282              	.LVL1232:
 20283              		.loc 41 132 5 view .LVU4699
 20284 05e8 27AA     		add	r2, sp, #156
 20285 05ea 7B49     		ldr	r1, .L851+36
 20286 05ec 7FA8     		add	r0, sp, #508
 20287 05ee FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA7_KcS9_L
 20288              	.LVL1233:
 129:theory.h      ****         {"Mixo",   std::vector<int>{0, 2, 4, 5, 7, 9, 10}},
 20289              		.loc 41 129 57 view .LVU4700
 20290 05f2 05F1600C 		add	ip, r5, #96
 20291 05f6 0DF1380E 		add	lr, sp, #56
 20292 05fa BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 760


 20293 05fe CDE90E79 		strd	r7, r9, [sp, #56]
 20294              	.LVL1234:
 20295              	.LBB11568:
 20296              	.LBI11568:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20297              		.loc 19 144 7 is_stmt 1 view .LVU4701
 20298              	.LBB11569:
 20299              	.LBI11569:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20300              		.loc 20 79 7 view .LVU4702
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20301              		.loc 20 79 7 is_stmt 0 view .LVU4703
 20302              	.LBE11569:
 20303              	.LBE11568:
 129:theory.h      ****         {"Mixo",   std::vector<int>{0, 2, 4, 5, 7, 9, 10}},
 20304              		.loc 41 129 57 view .LVU4704
 20305 0602 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 20306 0604 9CE80700 		ldm	ip, {r0, r1, r2}
 20307 0608 04AB     		add	r3, sp, #16
 20308 060a 87E80700 		stm	r7, {r0, r1, r2}
 20309 060e 9EE80600 		ldm	lr, {r1, r2}
 20310 0612 24A8     		add	r0, sp, #144
 130:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 20311              		.loc 41 130 57 view .LVU4705
 20312 0614 3AAF     		add	r7, sp, #232
 129:theory.h      ****         {"Mixo",   std::vector<int>{0, 2, 4, 5, 7, 9, 10}},
 20313              		.loc 41 129 57 view .LVU4706
 20314 0616 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 20315              	.LVL1235:
 20316              		.loc 41 132 5 view .LVU4707
 20317 061a 24AA     		add	r2, sp, #144
 20318 061c 6F49     		ldr	r1, .L851+40
 20319 061e 88A8     		add	r0, sp, #544
 20320 0620 FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA7_KcS9_L
 20321              	.LVL1236:
 130:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 20322              		.loc 41 130 57 view .LVU4708
 20323 0624 05F17C0C 		add	ip, r5, #124
 20324 0628 0DF1300E 		add	lr, sp, #48
 131:theory.h      ****     };
 20325              		.loc 41 131 57 view .LVU4709
 20326 062c 9835     		adds	r5, r5, #152
 130:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 20327              		.loc 41 130 57 view .LVU4710
 20328 062e BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 20329 0632 CDE90C79 		strd	r7, r9, [sp, #48]
 20330              	.LVL1237:
 20331              	.LBB11570:
 20332              	.LBI11570:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20333              		.loc 19 144 7 is_stmt 1 view .LVU4711
 20334              	.LBB11571:
 20335              	.LBI11571:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20336              		.loc 20 79 7 view .LVU4712
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20337              		.loc 20 79 7 is_stmt 0 view .LVU4713
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 761


 20338              	.LBE11571:
 20339              	.LBE11570:
 130:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 20340              		.loc 41 130 57 view .LVU4714
 20341 0636 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 20342 0638 9CE80700 		ldm	ip, {r0, r1, r2}
 20343 063c 03AB     		add	r3, sp, #12
 20344 063e 87E80700 		stm	r7, {r0, r1, r2}
 20345 0642 9EE80600 		ldm	lr, {r1, r2}
 20346 0646 21A8     		add	r0, sp, #132
 131:theory.h      ****     };
 20347              		.loc 41 131 57 view .LVU4715
 20348 0648 33AF     		add	r7, sp, #204
 130:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 20349              		.loc 41 130 57 view .LVU4716
 20350 064a FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 20351              	.LVL1238:
 20352              	.LBB11572:
 20353              	.LBI11097:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 20354              		.loc 30 352 12 is_stmt 1 view .LVU4717
 20355              	.LBB11174:
 20356              	.LBI11174:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 20357              		.loc 34 76 5 view .LVU4718
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 20358              		.loc 34 76 5 is_stmt 0 view .LVU4719
 20359              	.LBE11174:
 20360              	.LBB11175:
 20361              	.LBI11175:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20362              		.loc 19 144 7 is_stmt 1 view .LVU4720
 20363              	.LBB11176:
 20364              	.LBI11176:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20365              		.loc 20 79 7 view .LVU4721
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20366              		.loc 20 79 7 is_stmt 0 view .LVU4722
 20367              	.LBE11176:
 20368              	.LBE11175:
 20369              	.LBB11177:
 20370              	.LBI11098:
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 20371              		.loc 18 525 7 is_stmt 1 view .LVU4723
 20372              	.LBB11167:
 20373              	.LBB11150:
 20374              	.LBI11150:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20375              		.loc 18 190 7 view .LVU4724
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20376              		.loc 18 190 7 is_stmt 0 view .LVU4725
 20377              	.LBE11150:
 20378              	.LBB11151:
 20379              	.LBI11151:
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 20380              		.loc 18 156 2 is_stmt 1 view .LVU4726
 20381              	.LBB11152:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 762


 20382              	.LBB11153:
 20383              	.LBB11154:
 20384              	.LBI11154:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20385              		.loc 19 147 7 view .LVU4727
 20386              	.LBB11155:
 20387              	.LBI11155:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20388              		.loc 20 82 7 view .LVU4728
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20389              		.loc 20 82 7 is_stmt 0 view .LVU4729
 20390              	.LBE11155:
 20391              	.LBE11154:
 20392              	.LBE11153:
 20393              	.LBE11152:
 20394              	.LBE11151:
 20395              	.LBE11167:
 20396              	.LBE11177:
 20397              	.LBB11178:
 20398              	.LBB11179:
 20399              	.LBB11180:
 20400              	.LBB11181:
 20401              	.LBB11182:
 20402              	.LBB11183:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 20403              		.loc 26 104 43 view .LVU4730
 20404 064e 219B     		ldr	r3, [sp, #132]
 20405              	.LBE11183:
 20406              	.LBE11182:
 20407              	.LBE11181:
 20408              	.LBE11180:
 20409              	.LBE11179:
 20410              	.LBE11178:
 20411              	.LBB11221:
 20412              	.LBB11168:
 20413              	.LBB11160:
 20414              	.LBB11146:
 20415              	.LBB11142:
 20416              	.LBB11138:
 20417              	.LBB11134:
 20418              	.LBB11130:
 20419              	.LBB11117:
 20420              	.LBB11111:
 20421              	.LBB11109:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20422              		.loc 21 322 14 view .LVU4731
 20423 0650 84F8C080 		strb	r8, [r4, #192]
 20424              	.LBE11109:
 20425              	.LBE11111:
 20426              	.LBE11117:
 20427              	.LBE11130:
 20428              	.LBE11134:
 20429              	.LBE11138:
 20430              	.LBE11142:
 20431              	.LBE11146:
 20432              	.LBE11160:
 20433              	.LBE11168:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 763


 20434              	.LBE11221:
 20435              	.LBE11572:
 131:theory.h      ****     };
 20436              		.loc 41 131 57 view .LVU4732
 20437 0654 0DF1280C 		add	ip, sp, #40
 20438              	.LBB11573:
 20439              	.LBB11222:
 20440              	.LBB11214:
 20441              	.LBB11207:
 20442              	.LBB11196:
 20443              	.LBB11190:
 20444              	.LBB11184:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 20445              		.loc 26 104 43 view .LVU4733
 20446 0658 C4F8CC30 		str	r3, [r4, #204]
 20447 065c 229B     		ldr	r3, [sp, #136]
 20448              	.LBE11184:
 20449              	.LBE11190:
 20450              	.LBE11196:
 20451              	.LBE11207:
 20452              	.LBE11214:
 20453              	.LBE11222:
 20454              	.LBE11573:
 131:theory.h      ****     };
 20455              		.loc 41 131 57 view .LVU4734
 20456 065e 0A97     		str	r7, [sp, #40]
 20457              	.LBB11574:
 20458              	.LBB11223:
 20459              	.LBB11215:
 20460              	.LBB11208:
 20461              	.LBB11197:
 20462              	.LBB11191:
 20463              	.LBB11185:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 20464              		.loc 26 104 43 view .LVU4735
 20465 0660 C4F8D030 		str	r3, [r4, #208]
 20466 0664 239B     		ldr	r3, [sp, #140]
 20467              	.LBE11185:
 20468              	.LBE11191:
 20469              	.LBE11197:
 20470              	.LBE11208:
 20471              	.LBE11215:
 20472              	.LBE11223:
 20473              	.LBE11574:
 131:theory.h      ****     };
 20474              		.loc 41 131 57 view .LVU4736
 20475 0666 CDF82C90 		str	r9, [sp, #44]
 20476              	.LBB11575:
 20477              	.LBB11224:
 20478              	.LBB11216:
 20479              	.LBB11209:
 20480              	.LBB11198:
 20481              	.LBB11192:
 20482              	.LBB11186:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 20483              		.loc 26 104 43 view .LVU4737
 20484 066a C4F8D430 		str	r3, [r4, #212]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 764


 20485              	.LBE11186:
 20486              	.LBE11192:
 20487              	.LBE11198:
 20488              	.LBE11209:
 20489              	.LBE11216:
 20490              	.LBE11224:
 20491              	.LBB11225:
 20492              	.LBB11169:
 20493              	.LBB11161:
 20494              	.LBB11158:
 20495              	.LBB11156:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20496              		.loc 18 157 35 view .LVU4738
 20497 066e 93AB     		add	r3, sp, #588
 20498              	.LVL1239:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20499              		.loc 18 157 35 view .LVU4739
 20500              	.LBE11156:
 20501              	.LBE11158:
 20502              	.LBE11161:
 20503              	.LBE11169:
 20504              	.LBE11225:
 20505              	.LBB11226:
 20506              	.LBB11217:
 20507              	.LBB11210:
 20508              	.LBB11199:
 20509              	.LBB11193:
 20510              	.LBB11187:
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 20511              		.loc 26 105 17 view .LVU4740
 20512 0670 CDF88480 		str	r8, [sp, #132]
 20513              	.LBE11187:
 20514              	.LBE11193:
 20515              	.LBE11199:
 20516              	.LBE11210:
 20517              	.LBE11217:
 20518              	.LBE11226:
 20519              	.LBB11227:
 20520              	.LBB11170:
 20521              	.LBB11162:
 20522              	.LBB11159:
 20523              	.LBB11157:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20524              		.loc 18 157 35 view .LVU4741
 20525 0674 C4F8B430 		str	r3, [r4, #180]
 20526              	.LVL1240:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20527              		.loc 18 157 35 view .LVU4742
 20528              	.LBE11157:
 20529              	.LBE11159:
 20530              	.LBE11162:
 20531              	.LBB11163:
 20532              	.LBI11163:
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 20533              		.loc 21 351 7 is_stmt 1 view .LVU4743
 20534              	.LBE11163:
 20535              	.LBE11170:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 765


 20536              	.LBE11227:
 20537              	.LBE11575:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 20538              		.loc 21 357 2 view .LVU4744
 20539              	.LBB11576:
 20540              	.LBB11228:
 20541              	.LBB11171:
 20542              	.LBB11164:
 20543              	.LBI11100:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 20544              		.loc 18 263 9 view .LVU4745
 20545              	.LBB11147:
 20546              	.LBB11143:
 20547              	.LBI11102:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 20548              		.loc 18 243 9 view .LVU4746
 20549              	.LBB11139:
 20550              	.LBB11135:
 20551              	.LBI11104:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 20552              		.loc 22 206 7 view .LVU4747
 20553              	.LBB11131:
 20554              	.LBB11118:
 20555              	.LBI11118:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 20556              		.loc 18 396 7 view .LVU4748
 20557              	.LBB11119:
 20558              	.LBI11119:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20559              		.loc 18 346 7 view .LVU4749
 20560              	.LBB11120:
 20561              	.LBI11120:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20562              		.loc 18 346 7 view .LVU4750
 20563              	.LBB11121:
 20564              	.LBI11121:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 20565              		.loc 21 387 7 view .LVU4751
 20566              	.LBB11122:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 20567              		.loc 21 389 2 view .LVU4752
 20568              		.loc 21 395 2 view .LVU4753
 20569              		.loc 21 395 49 is_stmt 0 view .LVU4754
 20570 0678 594B     		ldr	r3, .L851+44
 20571              	.LVL1241:
 20572              		.loc 21 395 49 view .LVU4755
 20573              	.LBE11122:
 20574              	.LBE11121:
 20575              	.LBE11120:
 20576              	.LBE11119:
 20577              	.LBE11118:
 20578              	.LBE11131:
 20579              	.LBE11135:
 20580              	.LBE11139:
 20581              	.LBE11143:
 20582              	.LBE11147:
 20583              	.LBE11164:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 766


 20584              	.LBE11171:
 20585              	.LBE11228:
 20586              	.LBB11229:
 20587              	.LBB11218:
 20588              	.LBB11211:
 20589              	.LBB11200:
 20590              	.LBB11194:
 20591              	.LBB11188:
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 20592              		.loc 26 105 33 view .LVU4756
 20593 067a CDF88880 		str	r8, [sp, #136]
 20594              	.LBE11188:
 20595              	.LBE11194:
 20596              	.LBE11200:
 20597              	.LBE11211:
 20598              	.LBE11218:
 20599              	.LBE11229:
 20600              	.LBB11230:
 20601              	.LBB11172:
 20602              	.LBB11165:
 20603              	.LBB11148:
 20604              	.LBB11144:
 20605              	.LBB11140:
 20606              	.LBB11136:
 20607              	.LBB11132:
 20608              	.LBB11127:
 20609              	.LBB11126:
 20610              	.LBB11125:
 20611              	.LBB11124:
 20612              	.LBB11123:
 20613              		.loc 21 395 49 view .LVU4757
 20614 067e 9393     		str	r3, [sp, #588]
 20615              	.LVL1242:
 20616              		.loc 21 395 49 view .LVU4758
 20617              	.LBE11123:
 20618              	.LBE11124:
 20619              	.LBE11125:
 20620              	.LBE11126:
 20621              	.LBE11127:
 20622              	.LBB11128:
 20623              	.LBI11106:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20624              		.loc 18 214 7 is_stmt 1 view .LVU4759
 20625              	.LBB11112:
 20626              	.LBI11112:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 20627              		.loc 18 182 7 view .LVU4760
 20628              	.LBB11113:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20629              		.loc 18 183 26 is_stmt 0 view .LVU4761
 20630 0680 0423     		movs	r3, #4
 20631              	.LBE11113:
 20632              	.LBE11112:
 20633              	.LBE11128:
 20634              	.LBE11132:
 20635              	.LBE11136:
 20636              	.LBE11140:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 767


 20637              	.LBE11144:
 20638              	.LBE11148:
 20639              	.LBE11165:
 20640              	.LBE11172:
 20641              	.LBE11230:
 20642              	.LBB11231:
 20643              	.LBB11219:
 20644              	.LBB11212:
 20645              	.LBB11201:
 20646              	.LBB11195:
 20647              	.LBB11189:
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 20648              		.loc 26 105 57 view .LVU4762
 20649 0682 CDF88C80 		str	r8, [sp, #140]
 20650              	.LBE11189:
 20651              	.LBE11195:
 20652              	.LBE11201:
 20653              	.LBE11212:
 20654              	.LBE11219:
 20655              	.LBE11231:
 20656              	.LBB11232:
 20657              	.LBB11173:
 20658              	.LBB11166:
 20659              	.LBB11149:
 20660              	.LBB11145:
 20661              	.LBB11141:
 20662              	.LBB11137:
 20663              	.LBB11133:
 20664              	.LBB11129:
 20665              	.LBB11115:
 20666              	.LBB11114:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20667              		.loc 18 183 26 view .LVU4763
 20668 0686 C4F8B830 		str	r3, [r4, #184]
 20669              	.LVL1243:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20670              		.loc 18 183 26 view .LVU4764
 20671              	.LBE11114:
 20672              	.LBE11115:
 20673              	.LBB11116:
 20674              	.LBI11107:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 20675              		.loc 21 321 7 is_stmt 1 view .LVU4765
 20676              	.LBB11110:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20677              		.loc 21 322 9 view .LVU4766
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20678              		.loc 21 322 9 is_stmt 0 view .LVU4767
 20679              	.LBE11110:
 20680              	.LBE11116:
 20681              	.LBE11129:
 20682              	.LBE11133:
 20683              	.LBE11137:
 20684              	.LBE11141:
 20685              	.LBE11145:
 20686              	.LBE11149:
 20687              	.LBE11166:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 768


 20688              	.LBE11173:
 20689              	.LBE11232:
 20690              	.LBB11233:
 20691              	.LBI11233:
 20692              		.loc 19 162 7 is_stmt 1 view .LVU4768
 20693              	.LBB11234:
 20694              	.LBI11234:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20695              		.loc 20 89 7 view .LVU4769
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20696              		.loc 20 89 7 is_stmt 0 view .LVU4770
 20697              	.LBE11234:
 20698              	.LBE11233:
 20699              	.LBB11235:
 20700              	.LBI11235:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 20701              		.loc 34 76 5 is_stmt 1 view .LVU4771
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 20702              		.loc 34 76 5 is_stmt 0 view .LVU4772
 20703              	.LBE11235:
 20704              	.LBB11236:
 20705              	.LBI11178:
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20706              		.loc 26 572 7 is_stmt 1 view .LVU4773
 20707              	.LBB11220:
 20708              	.LBI11179:
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20709              		.loc 26 308 7 view .LVU4774
 20710              	.LBB11213:
 20711              	.LBI11180:
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 20712              		.loc 26 143 2 view .LVU4775
 20713              	.LBB11202:
 20714              	.LBI11202:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 20715              		.loc 34 101 5 view .LVU4776
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 20716              		.loc 34 101 5 is_stmt 0 view .LVU4777
 20717              	.LBE11202:
 20718              	.LBB11203:
 20719              	.LBI11203:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20720              		.loc 19 147 7 is_stmt 1 view .LVU4778
 20721              	.LBB11204:
 20722              	.LBI11204:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20723              		.loc 20 82 7 view .LVU4779
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20724              		.loc 20 82 7 is_stmt 0 view .LVU4780
 20725              	.LBE11204:
 20726              	.LBE11203:
 20727              	.LBB11205:
 20728              	.LBI11205:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 20729              		.loc 34 101 5 is_stmt 1 view .LVU4781
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 20730              		.loc 34 101 5 is_stmt 0 view .LVU4782
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 769


 20731              	.LBE11205:
 20732              	.LBB11206:
 20733              	.LBI11181:
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 20734              		.loc 26 102 2 is_stmt 1 view .LVU4783
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 20735              		.loc 26 102 2 is_stmt 0 view .LVU4784
 20736              	.LBE11206:
 20737              	.LBE11213:
 20738              	.LBE11220:
 20739              	.LBE11236:
 20740              	.LBE11576:
 20741              	.LBB11577:
 20742              	.LBI11577:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20743              		.loc 19 144 7 is_stmt 1 view .LVU4785
 20744              	.LBB11578:
 20745              	.LBI11578:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20746              		.loc 20 79 7 view .LVU4786
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20747              		.loc 20 79 7 is_stmt 0 view .LVU4787
 20748              	.LBE11578:
 20749              	.LBE11577:
 131:theory.h      ****     };
 20750              		.loc 41 131 57 view .LVU4788
 20751 068a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 20752 068c 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 20753 068e 95E80700 		ldm	r5, {r0, r1, r2}
 20754 0692 02AB     		add	r3, sp, #8
 20755 0694 87E80700 		stm	r7, {r0, r1, r2}
 20756 0698 9CE80600 		ldm	ip, {r1, r2}
 20757 069c 1EA8     		add	r0, sp, #120
 20758 069e FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 20759              	.LVL1244:
 20760              		.loc 41 132 5 view .LVU4789
 20761 06a2 1EAA     		add	r2, sp, #120
 20762 06a4 4449     		ldr	r1, .L851+4
 20763 06a6 9AA8     		add	r0, sp, #616
 20764 06a8 FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA6_KcS9_L
 20765              	.LVL1245:
 20766              	.LBB11579:
 20767              	.LBI11579:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20768              		.loc 19 144 7 is_stmt 1 view .LVU4790
 20769              	.LBB11580:
 20770              	.LBI11580:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20771              		.loc 20 79 7 view .LVU4791
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20772              		.loc 20 79 7 is_stmt 0 view .LVU4792
 20773              	.LBE11580:
 20774              	.LBE11579:
 20775              	.LBB11581:
 20776              	.LBI11237:
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	  const _Compare& __comp = _Compare(),
 20777              		.loc 31 228 7 is_stmt 1 view .LVU4793
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 770


 20778              	.LBB11261:
 20779              	.LBI11261:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20780              		.loc 19 147 7 view .LVU4794
 20781              	.LBB11262:
 20782              	.LBI11262:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20783              		.loc 20 82 7 view .LVU4795
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20784              		.loc 20 82 7 is_stmt 0 view .LVU4796
 20785              	.LBE11262:
 20786              	.LBE11261:
 20787              	.LBB11263:
 20788              	.LBI11238:
 938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       const allocator_type& __a = allocator_type())
 20789              		.loc 29 938 7 is_stmt 1 view .LVU4797
 20790              	.LBB11256:
 20791              	.LBI11256:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20792              		.loc 19 157 2 view .LVU4798
 20793              	.LBB11257:
 20794              	.LBI11257:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20795              		.loc 20 79 7 view .LVU4799
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20796              		.loc 20 79 7 is_stmt 0 view .LVU4800
 20797              	.LBE11257:
 20798              	.LBE11256:
 20799              	.LBB11258:
 20800              	.LBI11239:
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 20801              		.loc 29 714 4 is_stmt 1 view .LVU4801
 20802              	.LBB11255:
 20803              	.LBB11250:
 20804              	.LBI11250:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 20805              		.loc 34 101 5 view .LVU4802
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 20806              		.loc 34 101 5 is_stmt 0 view .LVU4803
 20807              	.LBE11250:
 20808              	.LBB11251:
 20809              	.LBI11251:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20810              		.loc 19 147 7 is_stmt 1 view .LVU4804
 20811              	.LBB11252:
 20812              	.LBI11252:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20813              		.loc 20 82 7 view .LVU4805
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20814              		.loc 20 82 7 is_stmt 0 view .LVU4806
 20815              	.LBE11252:
 20816              	.LBE11251:
 20817              	.LBB11253:
 20818              	.LBI11253:
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_key_compare(__comp)
 20819              		.loc 29 152 7 is_stmt 1 view .LVU4807
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_key_compare(__comp)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 771


 20820              		.loc 29 152 7 is_stmt 0 view .LVU4808
 20821              	.LBE11253:
 20822              	.LBB11254:
 20823              	.LBI11241:
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 20824              		.loc 29 173 5 is_stmt 1 view .LVU4809
 20825              	.LBB11249:
 20826              	.LBB11248:
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reset();
 20827              		.loc 29 175 7 view .LVU4810
 20828              	.LBB11244:
 20829              	.LBB11245:
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_right = &_M_header;
 20830              		.loc 29 209 25 is_stmt 0 view .LVU4811
 20831 06ac 0AF10403 		add	r3, r10, #4
 20832              	.LBE11245:
 20833              	.LBE11244:
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reset();
 20834              		.loc 29 175 26 view .LVU4812
 20835 06b0 8AF80480 		strb	r8, [r10, #4]
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 20836              		.loc 29 176 7 is_stmt 1 view .LVU4813
 20837              	.LVL1246:
 20838              	.LBB11247:
 20839              	.LBI11244:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 20840              		.loc 29 206 5 view .LVU4814
 20841              	.LBB11246:
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_left = &_M_header;
 20842              		.loc 29 208 7 view .LVU4815
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_left = &_M_header;
 20843              		.loc 29 208 27 is_stmt 0 view .LVU4816
 20844 06b4 CAF80880 		str	r8, [r10, #8]
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_right = &_M_header;
 20845              		.loc 29 209 7 is_stmt 1 view .LVU4817
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 20846              		.loc 29 211 21 is_stmt 0 view .LVU4818
 20847 06b8 CAF81480 		str	r8, [r10, #20]
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_node_count = 0;
 20848              		.loc 29 210 26 view .LVU4819
 20849 06bc CAE90333 		strd	r3, r3, [r10, #12]
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 20850              		.loc 29 211 7 is_stmt 1 view .LVU4820
 20851              	.LVL1247:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 20852              		.loc 29 211 7 is_stmt 0 view .LVU4821
 20853              	.LBE11246:
 20854              	.LBE11247:
 20855              	.LBE11248:
 20856              	.LBE11249:
 20857              	.LBE11254:
 20858              	.LBE11255:
 20859              	.LBE11258:
 20860              	.LBB11259:
 20861              	.LBI11259:
 20862              		.loc 19 162 7 is_stmt 1 view .LVU4822
 20863              	.LBB11260:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 772


 20864              	.LBI11260:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20865              		.loc 20 89 7 view .LVU4823
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20866              		.loc 20 89 7 is_stmt 0 view .LVU4824
 20867              	.LBE11260:
 20868              	.LBE11259:
 20869              	.LBE11263:
 20870              	.LBB11264:
 20871              	.LBI11264:
 20872              		.loc 19 162 7 is_stmt 1 view .LVU4825
 20873              	.LBB11265:
 20874              	.LBI11265:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20875              		.loc 20 89 7 view .LVU4826
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20876              		.loc 20 89 7 is_stmt 0 view .LVU4827
 20877              	.LBE11265:
 20878              	.LBE11264:
 20879              	.LBB11266:
 20880              	.LBI11266:
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 20881              		.loc 36 75 7 is_stmt 1 view .LVU4828
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 20882              		.loc 36 75 7 is_stmt 0 view .LVU4829
 20883              	.LBE11266:
 20884              	.LBB11267:
 20885              	.LBI11267:
 20886              		.loc 36 79 7 is_stmt 1 view .LVU4830
 20887              		.loc 36 79 7 is_stmt 0 view .LVU4831
 20888              	.LBE11267:
 20889              	.LBB11268:
 20890              	.LBI11268:
1105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 20891              		.loc 29 1105 2 is_stmt 1 view .LVU4832
 20892              	.LBB11269:
 20893              	.LBB11270:
 20894              	.LBI11270:
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: _M_t(__t) { }
 20895              		.loc 29 542 2 view .LVU4833
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: _M_t(__t) { }
 20896              		.loc 29 542 2 is_stmt 0 view .LVU4834
 20897              	.LBE11270:
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 20898              		.loc 29 1108 19 is_stmt 1 view .LVU4835
 20899 06c0 26E0     		b	.L807
 20900              	.LVL1248:
 20901              	.L847:
 20902              	.LBB11271:
 20903              	.LBB11272:
 20904              	.LBB11273:
 20905              	.LBB11274:
 20906              	.LBB11275:
 20907              	.LBB11276:
 20908              	.LBB11277:
 20909              	.LBB11278:
 20910              	.LBB11279:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 773


 20911              	.LBB11280:
 20912              	.LBB11281:
 20913              	.LBB11282:
 20914              	.LBB11283:
 20915              	.LBB11284:
 20916              	.LBB11285:
 20917              	.LBB11286:
 20918              	.LBB11287:
 20919              	.LBB11288:
 20920              	.LBB11289:
 20921              	.LBI11289:
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 20922              		.loc 25 459 7 view .LVU4836
 20923              	.LBB11290:
 20924              	.LBI11290:
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 20925              		.loc 20 103 7 view .LVU4837
 20926              	.LBB11291:
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 20927              		.loc 20 105 2 is_stmt 0 view .LVU4838
 20928 06c2 484B     		ldr	r3, .L851+48
 20929 06c4 9F42     		cmp	r7, r3
 20930 06c6 00F2C882 		bhi	.L842
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 20931              		.loc 20 115 41 view .LVU4839
 20932 06ca 3846     		mov	r0, r7
 20933 06cc FFF7FEFF 		bl	_Znwj
 20934              	.LVL1249:
 20935 06d0 0346     		mov	r3, r0
 20936              	.LVL1250:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 20937              		.loc 20 115 41 view .LVU4840
 20938              	.LBE11291:
 20939              	.LBE11290:
 20940              	.LBE11289:
 20941              	.LBE11288:
 20942              	.LBE11287:
 20943              	.LBE11286:
 20944              	.LBE11285:
 20945              	.LBE11284:
 20946              	.LBB11322:
 20947              	.LBB11323:
 20948              	.LBB11324:
 979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 20949              		.loc 39 979 23 view .LVU4841
 20950 06d2 56E90310 		ldrd	r1, r0, [r6, #-12]
 20951              	.LBE11324:
 20952              	.LBE11323:
 20953              	.LBE11322:
 20954              	.LBB11326:
 20955              	.LBB11327:
 20956              	.LBB11328:
 20957              	.LBB11329:
 20958              	.LBB11330:
 20959              	.LBB11331:
 20960              	.LBB11332:
 20961              	.LBB11333:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 774


 20962              	.LBB11334:
 20963              	.LBB11335:
 20964              	.LBB11336:
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 20965              		.loc 38 424 34 view .LVU4842
 20966 06d6 421A     		subs	r2, r0, r1
 20967              	.L804:
 20968              	.LVL1251:
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 20969              		.loc 38 424 34 view .LVU4843
 20970              	.LBE11336:
 20971              	.LBE11335:
 20972              	.LBE11334:
 20973              	.LBE11333:
 20974              	.LBE11332:
 20975              	.LBE11331:
 20976              	.LBE11330:
 20977              	.LBE11329:
 20978              	.LBE11328:
 20979              	.LBE11327:
 20980              	.LBE11326:
 20981              	.LBB11366:
 20982              	.LBB11306:
 20983              	.LBB11300:
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 20984              		.loc 26 363 59 view .LVU4844
 20985 06d8 1F44     		add	r7, r7, r3
 20986              	.LVL1252:
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 20987              		.loc 26 363 59 view .LVU4845
 20988              	.LBE11300:
 20989              	.LBE11306:
 20990              	.LBE11366:
 20991              	.LBB11367:
 20992              	.LBB11363:
 20993              	.LBB11360:
 20994              	.LBB11357:
 20995              	.LBB11354:
 20996              	.LBB11351:
 20997              	.LBB11348:
 20998              	.LBB11345:
 20999              	.LBB11342:
 21000              	.LBB11339:
 21001              	.LBB11337:
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 21002              		.loc 38 425 4 view .LVU4846
 21003 06da 8842     		cmp	r0, r1
 21004              	.LBE11337:
 21005              	.LBE11339:
 21006              	.LBE11342:
 21007              	.LBE11345:
 21008              	.LBE11348:
 21009              	.LBE11351:
 21010              	.LBE11354:
 21011              	.LBE11357:
 21012              	.LBE11360:
 21013              	.LBE11363:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 775


 21014              	.LBE11367:
 21015              	.LBB11368:
 21016              	.LBB11307:
 21017              	.LBB11301:
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 21018              		.loc 26 363 34 view .LVU4847
 21019 06dc 2F63     		str	r7, [r5, #48]
 21020              	.LVL1253:
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 21021              		.loc 26 363 34 view .LVU4848
 21022              	.LBE11301:
 21023              	.LBE11307:
 21024              	.LBE11368:
 21025              	.LBB11369:
 21026              	.LBI11369:
 21027              		.loc 19 162 7 is_stmt 1 view .LVU4849
 21028              	.LBB11370:
 21029              	.LBI11370:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21030              		.loc 20 89 7 view .LVU4850
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21031              		.loc 20 89 7 is_stmt 0 view .LVU4851
 21032              	.LBE11370:
 21033              	.LBE11369:
 21034              	.LBB11371:
 21035              	.LBI11371:
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 21036              		.loc 26 820 7 is_stmt 1 view .LVU4852
 21037              	.LBB11372:
 21038              	.LBI11372:
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 21039              		.loc 39 978 7 view .LVU4853
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 21040              		.loc 39 978 7 is_stmt 0 view .LVU4854
 21041              	.LBE11372:
 21042              	.LBE11371:
 21043              	.LBB11373:
 21044              	.LBI11322:
 838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 21045              		.loc 26 838 7 is_stmt 1 view .LVU4855
 21046              	.LBB11325:
 21047              	.LBI11323:
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 21048              		.loc 39 978 7 view .LVU4856
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 21049              		.loc 39 978 7 is_stmt 0 view .LVU4857
 21050              	.LBE11325:
 21051              	.LBE11373:
 21052              	.LBB11374:
 21053              	.LBI11374:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21054              		.loc 26 276 7 is_stmt 1 view .LVU4858
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21055              		.loc 26 276 7 is_stmt 0 view .LVU4859
 21056              	.LBE11374:
 21057              	.LBB11375:
 21058              	.LBI11326:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 776


 21059              		.loc 37 323 5 is_stmt 1 view .LVU4860
 21060              	.LBB11364:
 21061              	.LBI11327:
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 21062              		.loc 37 125 5 view .LVU4861
 21063              	.LBB11361:
 21064              	.LBB11358:
 21065              	.LBI11329:
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 21066              		.loc 37 107 9 view .LVU4862
 21067              	.LBB11355:
 21068              	.LBI11330:
 21069              		.loc 38 560 5 view .LVU4863
 21070              	.LBB11352:
 21071              	.LBI11331:
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 21072              		.loc 38 511 5 view .LVU4864
 21073              	.LBB11349:
 21074              	.LBI11332:
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 21075              		.loc 38 505 5 view .LVU4865
 21076              	.LBB11346:
 21077              	.LBI11333:
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 21078              		.loc 38 463 5 view .LVU4866
 21079              	.LBB11343:
 21080              	.LBB11340:
 21081              	.LBI11335:
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 21082              		.loc 38 415 2 view .LVU4867
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 21083              		.loc 38 415 2 is_stmt 0 view .LVU4868
 21084              	.LBE11340:
 21085              	.LBE11343:
 21086              	.LBE11346:
 21087              	.LBE11349:
 21088              	.LBE11352:
 21089              	.LBE11355:
 21090              	.LBE11358:
 21091              	.LBE11361:
 21092              	.LBE11364:
 21093              	.LBE11375:
 21094              	.LBB11376:
 21095              	.LBB11308:
 21096              	.LBB11302:
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 21097              		.loc 26 362 26 view .LVU4869
 21098 06de C5E90A33 		strd	r3, r3, [r5, #40]
 21099              	.LVL1254:
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 21100              		.loc 26 362 26 view .LVU4870
 21101              	.LBE11302:
 21102              	.LBE11308:
 21103              	.LBE11376:
 21104              	.LBB11377:
 21105              	.LBB11365:
 21106              	.LBB11362:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 777


 21107              	.LBB11359:
 21108              	.LBB11356:
 21109              	.LBB11353:
 21110              	.LBB11350:
 21111              	.LBB11347:
 21112              	.LBB11344:
 21113              	.LBB11341:
 21114              	.LBB11338:
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 21115              		.loc 38 425 4 view .LVU4871
 21116 06e2 05D0     		beq	.L806
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 21117              		.loc 38 426 23 view .LVU4872
 21118 06e4 1846     		mov	r0, r3
 21119 06e6 0192     		str	r2, [sp, #4]
 21120 06e8 FFF7FEFF 		bl	memmove
 21121              	.LVL1255:
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 21122              		.loc 38 426 23 view .LVU4873
 21123 06ec 019A     		ldr	r2, [sp, #4]
 21124 06ee 0346     		mov	r3, r0
 21125              	.L806:
 21126              	.LVL1256:
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 21127              		.loc 38 427 22 view .LVU4874
 21128 06f0 1344     		add	r3, r3, r2
 21129              	.LBE11338:
 21130              	.LBE11341:
 21131              	.LBE11344:
 21132              	.LBE11347:
 21133              	.LBE11350:
 21134              	.LBE11353:
 21135              	.LBE11356:
 21136              	.LBE11359:
 21137              	.LBE11362:
 21138              	.LBE11365:
 21139              	.LBE11377:
 21140              	.LBE11283:
 21141              	.LBE11282:
 21142              	.LBE11281:
 21143              	.LBE11280:
 21144              	.LBE11279:
 21145              	.LBE11278:
 21146              	.LBE11277:
 21147              	.LBE11276:
 21148              	.LBE11275:
1818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				      this->_M_impl._M_header);
 21149              		.loc 29 1818 31 view .LVU4875
 21150 06f2 2946     		mov	r1, r5
 21151 06f4 4A46     		mov	r2, r9
 21152 06f6 4046     		mov	r0, r8
 21153              	.LBB11519:
 21154              	.LBB11514:
 21155              	.LBB11509:
 21156              	.LBB11500:
 21157              	.LBB11493:
 21158              	.LBB11489:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 778


 21159              	.LBB11486:
 21160              	.LBB11392:
 21161              	.LBB11389:
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 21162              		.loc 26 557 26 view .LVU4876
 21163 06f8 EB62     		str	r3, [r5, #44]
 21164              	.LVL1257:
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 21165              		.loc 26 557 26 view .LVU4877
 21166              	.LBE11389:
 21167              	.LBE11392:
 21168              	.LBE11486:
 21169              	.LBE11489:
 21170              	.LBE11493:
 21171              	.LBE11500:
 21172              	.LBE11509:
 21173              	.LBE11514:
 21174              	.LBE11519:
1818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				      this->_M_impl._M_header);
 21175              		.loc 29 1818 31 view .LVU4878
 21176 06fa 3B4B     		ldr	r3, .L851+52
 21177 06fc FFF7FEFF 		bl	_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
 21178              	.LVL1258:
1820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return iterator(__z);
 21179              		.loc 29 1820 2 view .LVU4879
 21180 0700 DAF81430 		ldr	r3, [r10, #20]
 21181 0704 0133     		adds	r3, r3, #1
 21182 0706 CAF81430 		str	r3, [r10, #20]
 21183              	.LVL1259:
 21184              	.LBB11520:
 21185              	.LBI11520:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 21186              		.loc 29 273 7 is_stmt 1 view .LVU4880
 21187              	.L795:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 21188              		.loc 29 273 7 is_stmt 0 view .LVU4881
 21189              	.LBE11520:
 21190              	.LBE11274:
 21191              	.LBE11273:
 21192              	.LBE11272:
 21193              	.LBE11271:
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 21194              		.loc 29 1108 4 is_stmt 1 view .LVU4882
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 21195              		.loc 29 1108 19 view .LVU4883
 21196 070a 2436     		adds	r6, r6, #36
 21197              	.LVL1260:
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 21198              		.loc 29 1108 19 is_stmt 0 view .LVU4884
 21199 070c B345     		cmp	fp, r6
 21200 070e 6FD0     		beq	.L843
 21201              	.LVL1261:
 21202              	.L807:
 21203              	.LBB11547:
 21204              	.LBI11547:
1010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(&this->_M_impl._M_header); }
 21205              		.loc 29 1010 7 is_stmt 1 view .LVU4885
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 779


 21206              	.LBB11548:
 21207              	.LBI11548:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 21208              		.loc 29 273 7 view .LVU4886
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 21209              		.loc 29 273 7 is_stmt 0 view .LVU4887
 21210              	.LBE11548:
 21211              	.LBE11547:
 21212              	.LBB11549:
 21213              	.LBI11549:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__it._M_node) { }
 21214              		.loc 29 350 7 is_stmt 1 view .LVU4888
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__it._M_node) { }
 21215              		.loc 29 350 7 is_stmt 0 view .LVU4889
 21216              	.LBE11549:
 21217              	.LBB11550:
 21218              	.LBI11271:
2245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg, typename _NodeGen>
2250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
2251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _NodeGen>
2252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 21219              		.loc 29 2254 7 is_stmt 1 view .LVU4890
 21220              	.LBB11543:
2255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_unique_(const_iterator __position,
2256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			_Arg&& __v,
2258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
2259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			const _Val& __v,
2260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			_NodeGen& __node_gen)
2262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr> __res
2264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
 21221              		.loc 29 2264 33 is_stmt 0 view .LVU4891
 21222 0710 354A     		ldr	r2, .L851+52
 21223 0712 A6F12403 		sub	r3, r6, #36
 21224              	.LVL1262:
 21225              		.loc 29 2264 33 view .LVU4892
 21226 0716 1CA8     		add	r0, sp, #112
 21227 0718 111F     		subs	r1, r2, #4
 21228 071a FFF7FEFF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiE
 21229              	.LVL1263:
 21230              		.loc 29 2264 33 view .LVU4893
 21231 071e DDF87490 		ldr	r9, [sp, #116]
 21232              	.LVL1264:
2265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__res.second)
 21233              		.loc 29 2266 7 view .LVU4894
 21234 0722 B9F1000F 		cmp	r9, #0
 21235 0726 F0D0     		beq	.L795
 21236              	.LVL1265:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 780


 21237              	.LBB11539:
 21238              	.LBI11273:
1803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_(_Base_ptr __x, _Base_ptr __p,
 21239              		.loc 29 1803 7 is_stmt 1 view .LVU4895
 21240              	.LBB11535:
 21241              	.LBB11521:
 21242              	.LBI11521:
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 21243              		.loc 29 759 7 view .LVU4896
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 21244              		.loc 29 759 7 is_stmt 0 view .LVU4897
 21245              	.LBE11521:
1812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 21246              		.loc 29 1812 33 view .LVU4898
 21247 0728 2F4A     		ldr	r2, .L851+52
1813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 							_S_key(__p)));
 21248              		.loc 29 1813 10 view .LVU4899
 21249 072a 1C9B     		ldr	r3, [sp, #112]
1812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 21250              		.loc 29 1812 33 view .LVU4900
 21251 072c A9EB0208 		sub	r8, r9, r2
 21252 0730 B8FA88F8 		clz	r8, r8
 21253 0734 4FEA5818 		lsr	r8, r8, #5
 21254 0738 002B     		cmp	r3, #0
 21255 073a 18BF     		it	ne
 21256 073c 48F00108 		orrne	r8, r8, #1
 21257 0740 B8F1000F 		cmp	r8, #0
 21258 0744 00F07582 		beq	.L844
 21259              	.L796:
 21260              	.LVL1266:
 21261              	.LBB11522:
 21262              	.LBI11275:
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 21263              		.loc 29 550 4 is_stmt 1 view .LVU4901
 21264              	.LBB11515:
 21265              	.LBI11276:
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 21266              		.loc 29 632 2 view .LVU4902
 21267              	.LBB11510:
 21268              	.LBB11501:
 21269              	.LBI11501:
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 21270              		.loc 29 583 7 view .LVU4903
 21271              	.LBB11502:
 21272              	.LBI11502:
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 21273              		.loc 25 459 7 view .LVU4904
 21274              	.LBB11503:
 21275              	.LBI11503:
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 21276              		.loc 20 103 7 view .LVU4905
 21277              	.LBB11504:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 21278              		.loc 20 115 41 is_stmt 0 view .LVU4906
 21279 0748 3420     		movs	r0, #52
 21280 074a FFF7FEFF 		bl	_Znwj
 21281              	.LVL1267:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 781


 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 21282              		.loc 20 115 41 view .LVU4907
 21283 074e 0546     		mov	r5, r0
 21284              	.LVL1268:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 21285              		.loc 20 115 41 view .LVU4908
 21286              	.LBE11504:
 21287              	.LBE11503:
 21288              	.LBE11502:
 21289              	.LBE11501:
 21290              	.LBB11505:
 21291              	.LBI11278:
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 21292              		.loc 29 613 2 is_stmt 1 view .LVU4909
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 21293              		.loc 29 613 2 is_stmt 0 view .LVU4910
 21294              	.LBE11505:
 21295              	.LBE11510:
 21296              	.LBE11515:
 21297              	.LBE11522:
 21298              	.LBE11535:
 21299              	.LBE11539:
 21300              	.LBE11543:
 21301              	.LBE11550:
 21302              	.LBE11269:
 21303              	.LBE11268:
 21304              	.LBE11581:
 21305              		.loc 23 175 3 is_stmt 1 view .LVU4911
 21306              	.LBB11582:
 21307              	.LBB11557:
 21308              	.LBB11554:
 21309              	.LBB11551:
 21310              	.LBB11544:
 21311              	.LBB11540:
 21312              	.LBB11536:
 21313              	.LBB11523:
 21314              	.LBB11516:
 21315              	.LBB11511:
 21316              	.LBB11506:
 21317              	.LBB11494:
 21318              	.LBI11494:
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_storage._M_ptr(); }
 21319              		.loc 29 234 7 view .LVU4912
 21320              	.LBB11495:
 21321              	.LBI11495:
 21322              		.file 42 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\alig
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // Aligned memory buffer -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // Copyright (C) 2013-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // This library is distributed in the hope that it will be useful,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 782


  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** /** @file ext/aligned_buffer.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****  */
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #ifndef _ALIGNED_BUFFER_H
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #define _ALIGNED_BUFFER_H 1
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #pragma GCC system_header
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #if __cplusplus >= 201103L
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** # include <type_traits>
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #else
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** # include <bits/c++0x_warning.h>
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #endif
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** namespace __gnu_cxx
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** {
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****   // A utility type containing a POD object that can hold an object of type
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****   // _Tp initialized via placement new or allocator_traits::construct.
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****   // Intended for use as a data member subobject, use __aligned_buffer for
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****   // complete objects.
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****   template<typename _Tp>
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****     struct __aligned_membuf
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****     {
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // Target macro ADJUST_FIELD_ALIGN can produce different alignment for
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // types when used as class members. __aligned_membuf is intended
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // for use as a class member, so align the buffer as for a class member.
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // Since GCC 8 we could just use alignof(_Tp) instead, but older
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // versions of non-GNU compilers might still need this trick.
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       struct _Tp2 { _Tp _M_t; };
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       alignas(__alignof__(_Tp2::_M_t)) unsigned char _M_storage[sizeof(_Tp)];
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       __aligned_membuf() = default;
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // Can be used to avoid value-initialization zeroing _M_storage.
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       __aligned_membuf(std::nullptr_t) { }
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       void*
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       _M_addr() noexcept
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       { return static_cast<void*>(&_M_storage); }
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       const void*
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       _M_addr() const noexcept
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 783


  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       { return static_cast<const void*>(&_M_storage); }
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       _Tp*
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       _M_ptr() noexcept
 21323              		.loc 42 72 7 view .LVU4913
 21324              	.LBB11496:
 21325              	.LBI11496:
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       { return static_cast<void*>(&_M_storage); }
 21326              		.loc 42 64 7 view .LVU4914
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       { return static_cast<void*>(&_M_storage); }
 21327              		.loc 42 64 7 is_stmt 0 view .LVU4915
 21328              	.LBE11496:
 21329              	.LBE11495:
 21330              	.LBE11494:
 21331              	.LBB11497:
 21332              	.LBI11279:
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 21333              		.loc 25 507 2 is_stmt 1 view .LVU4916
 21334              	.LBB11490:
 21335              	.LBI11280:
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 21336              		.loc 20 148 2 view .LVU4917
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 21337              		.loc 20 148 2 is_stmt 0 view .LVU4918
 21338              	.LBE11490:
 21339              	.LBE11497:
 21340              	.LBE11506:
 21341              	.LBE11511:
 21342              	.LBE11516:
 21343              	.LBE11523:
 21344              	.LBE11536:
 21345              	.LBE11540:
 21346              	.LBE11544:
 21347              	.LBE11551:
 21348              	.LBE11554:
 21349              	.LBE11557:
 21350              	.LBE11582:
 21351              		.loc 23 175 3 is_stmt 1 view .LVU4919
 21352              	.LBB11583:
 21353              	.LBB11558:
 21354              	.LBB11555:
 21355              	.LBB11552:
 21356              	.LBB11545:
 21357              	.LBB11541:
 21358              	.LBB11537:
 21359              	.LBB11524:
 21360              	.LBB11517:
 21361              	.LBB11512:
 21362              	.LBB11507:
 21363              	.LBB11498:
 21364              	.LBB11491:
 21365              	.LBB11487:
 21366              	.LBI11281:
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 21367              		.loc 30 314 17 view .LVU4920
 21368              	.LBB11393:
 21369              	.LBI11393:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 784


 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 21370              		.loc 18 448 7 view .LVU4921
 21371              	.LBB11394:
 21372              	.LBB11395:
 21373              	.LBI11395:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21374              		.loc 18 190 7 view .LVU4922
 21375              	.LBB11396:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 21376              		.loc 18 193 51 is_stmt 0 view .LVU4923
 21377 0750 1830     		adds	r0, r0, #24
 21378              	.LVL1269:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 21379              		.loc 18 193 51 view .LVU4924
 21380              	.LBE11396:
 21381              	.LBE11395:
 21382              	.LBB11397:
 21383              	.LBI11397:
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 21384              		.loc 18 290 7 is_stmt 1 view .LVU4925
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 21385              		.loc 18 290 7 is_stmt 0 view .LVU4926
 21386              	.LBE11397:
 21387              	.LBB11398:
 21388              	.LBI11398:
 21389              		.loc 35 97 29 is_stmt 1 view .LVU4927
 21390              	.LBB11399:
 21391              	.LBI11399:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 21392              		.loc 25 558 7 view .LVU4928
 21393              	.LBB11400:
 21394              	.LBI11400:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 21395              		.loc 19 147 7 view .LVU4929
 21396              	.LBB11401:
 21397              	.LBI11401:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21398              		.loc 20 82 7 view .LVU4930
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21399              		.loc 20 82 7 is_stmt 0 view .LVU4931
 21400              	.LBE11401:
 21401              	.LBE11400:
 21402              	.LBE11399:
 21403              	.LBE11398:
 21404              	.LBB11402:
 21405              	.LBI11402:
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 21406              		.loc 18 159 2 is_stmt 1 view .LVU4932
 21407              	.LBB11403:
 21408              	.LBB11404:
 21409              	.LBI11404:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 21410              		.loc 34 101 5 view .LVU4933
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 21411              		.loc 34 101 5 is_stmt 0 view .LVU4934
 21412              	.LBE11404:
 21413              	.LBB11405:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 785


 21414              	.LBI11405:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 21415              		.loc 19 147 7 is_stmt 1 view .LVU4935
 21416              	.LBB11406:
 21417              	.LBI11406:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21418              		.loc 20 82 7 view .LVU4936
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21419              		.loc 20 82 7 is_stmt 0 view .LVU4937
 21420              	.LBE11406:
 21421              	.LBE11405:
 21422              	.LBE11403:
 21423              	.LBE11402:
 21424              	.LBB11408:
 21425              	.LBB11409:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21426              		.loc 18 908 16 view .LVU4938
 21427 0752 56E90937 		ldrd	r3, r7, [r6, #-36]
 21428              	.LBE11409:
 21429              	.LBE11408:
 21430              	.LBB11410:
 21431              	.LBB11407:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 21432              		.loc 18 160 46 view .LVU4939
 21433 0756 2861     		str	r0, [r5, #16]
 21434              	.LVL1270:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 21435              		.loc 18 160 46 view .LVU4940
 21436              	.LBE11407:
 21437              	.LBE11410:
 21438              	.LBB11411:
 21439              	.LBI11411:
 21440              		.loc 19 162 7 is_stmt 1 view .LVU4941
 21441              	.LBB11412:
 21442              	.LBI11412:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21443              		.loc 20 89 7 view .LVU4942
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21444              		.loc 20 89 7 is_stmt 0 view .LVU4943
 21445              	.LBE11412:
 21446              	.LBE11411:
 21447              	.LBB11413:
 21448              	.LBI11413:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 21449              		.loc 18 186 7 is_stmt 1 view .LVU4944
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 21450              		.loc 18 186 7 is_stmt 0 view .LVU4945
 21451              	.LBE11413:
 21452              	.LBB11414:
 21453              	.LBI11414:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 21454              		.loc 18 186 7 is_stmt 1 view .LVU4946
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 21455              		.loc 18 186 7 is_stmt 0 view .LVU4947
 21456              	.LBE11414:
 21457              	.LBB11415:
 21458              	.LBI11408:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 786


 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 21459              		.loc 18 907 7 is_stmt 1 view .LVU4948
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 21460              		.loc 18 907 7 is_stmt 0 view .LVU4949
 21461              	.LBE11415:
 21462              	.LBB11416:
 21463              	.LBI11416:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 21464              		.loc 18 263 9 is_stmt 1 view .LVU4950
 21465              	.LBB11417:
 21466              	.LBB11418:
 21467              	.LBI11418:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 21468              		.loc 18 243 9 view .LVU4951
 21469              	.LBB11419:
 21470              	.LBB11420:
 21471              	.LBI11420:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 21472              		.loc 22 206 7 view .LVU4952
 21473              	.LBB11421:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 21474              		.loc 22 211 42 is_stmt 0 view .LVU4953
 21475 0758 FB42     		cmn	r3, r7
 21476 075a 02D0     		beq	.L799
 21477 075c 002B     		cmp	r3, #0
 21478 075e 00F07E82 		beq	.L845
 21479              	.L799:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 21480              		.loc 22 217 2 view .LVU4954
 21481 0762 0F2F     		cmp	r7, #15
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 21482              		.loc 22 215 12 view .LVU4955
 21483 0764 0997     		str	r7, [sp, #36]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 21484              		.loc 22 217 2 view .LVU4956
 21485 0766 13D8     		bhi	.L846
 21486              	.LVL1271:
 21487              	.LBB11422:
 21488              	.LBI11422:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 21489              		.loc 18 186 7 is_stmt 1 view .LVU4957
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 21490              		.loc 18 186 7 is_stmt 0 view .LVU4958
 21491              	.LBE11422:
 21492              	.LBB11423:
 21493              	.LBI11423:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 21494              		.loc 18 392 7 is_stmt 1 view .LVU4959
 21495              	.LBB11424:
 21496              	.LBI11424:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21497              		.loc 18 346 7 view .LVU4960
 21498              	.LBB11425:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 21499              		.loc 18 348 2 is_stmt 0 view .LVU4961
 21500 0768 012F     		cmp	r7, #1
 21501 076a 0ED1     		bne	.L802
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 787


 21502              	.LVL1272:
 21503              	.LBB11426:
 21504              	.LBI11426:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 21505              		.loc 21 321 7 is_stmt 1 view .LVU4962
 21506              	.LBB11427:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 21507              		.loc 21 322 9 view .LVU4963
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 21508              		.loc 21 322 16 is_stmt 0 view .LVU4964
 21509 076c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21510              	.LVL1273:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 21511              		.loc 21 322 14 view .LVU4965
 21512 076e 2B76     		strb	r3, [r5, #24]
 21513              	.LVL1274:
 21514              	.L803:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 21515              		.loc 21 322 14 view .LVU4966
 21516              	.LBE11427:
 21517              	.LBE11426:
 21518              	.LBE11425:
 21519              	.LBE11424:
 21520              	.LBE11423:
 21521              	.LBB11443:
 21522              	.LBI11443:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21523              		.loc 18 214 7 is_stmt 1 view .LVU4967
 21524              	.LBB11444:
 21525              	.LBB11445:
 21526              	.LBI11445:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 21527              		.loc 18 182 7 view .LVU4968
 21528              	.LBE11445:
 21529              	.LBB11447:
 21530              	.LBB11448:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 21531              		.loc 21 322 14 is_stmt 0 view .LVU4969
 21532 0770 0023     		movs	r3, #0
 21533              	.LBE11448:
 21534              	.LBE11447:
 21535              	.LBB11450:
 21536              	.LBB11446:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21537              		.loc 18 183 26 view .LVU4970
 21538 0772 6F61     		str	r7, [r5, #20]
 21539              	.LVL1275:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21540              		.loc 18 183 26 view .LVU4971
 21541              	.LBE11446:
 21542              	.LBE11450:
 21543              	.LBB11451:
 21544              	.LBI11451:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 21545              		.loc 18 186 7 is_stmt 1 view .LVU4972
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 21546              		.loc 18 186 7 is_stmt 0 view .LVU4973
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 788


 21547              	.LBE11451:
 21548              	.LBB11453:
 21549              	.LBI11447:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 21550              		.loc 21 321 7 is_stmt 1 view .LVU4974
 21551              	.LBB11449:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 21552              		.loc 21 322 9 view .LVU4975
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 21553              		.loc 21 322 14 is_stmt 0 view .LVU4976
 21554 0774 C355     		strb	r3, [r0, r7]
 21555              	.LVL1276:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 21556              		.loc 21 322 14 view .LVU4977
 21557              	.LBE11449:
 21558              	.LBE11453:
 21559              	.LBE11444:
 21560              	.LBE11443:
 21561              	.LBE11421:
 21562              	.LBE11420:
 21563              	.LBE11419:
 21564              	.LBE11418:
 21565              	.LBE11417:
 21566              	.LBE11416:
 21567              	.LBE11394:
 21568              	.LBE11393:
 21569              	.LBB11482:
 21570              	.LBI11282:
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 21571              		.loc 26 553 7 is_stmt 1 view .LVU4978
 21572              	.LBB11390:
 21573              	.LBB11378:
 21574              	.LBI11378:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 21575              		.loc 26 918 7 view .LVU4979
 21576              	.LBE11378:
 21577              	.LBB11380:
 21578              	.LBB11309:
 21579              	.LBB11310:
 21580              	.LBB11311:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 21581              		.loc 26 98 47 is_stmt 0 view .LVU4980
 21582 0776 2B63     		str	r3, [r5, #48]
 21583              	.LBE11311:
 21584              	.LBE11310:
 21585              	.LBE11309:
 21586              	.LBE11380:
 21587              	.LBB11381:
 21588              	.LBB11379:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21589              		.loc 26 919 66 view .LVU4981
 21590 0778 56E90310 		ldrd	r1, r0, [r6, #-12]
 21591              	.LVL1277:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21592              		.loc 26 919 66 view .LVU4982
 21593              	.LBE11379:
 21594              	.LBE11381:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 789


 21595              	.LBB11382:
 21596              	.LBI11382:
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21597              		.loc 26 280 7 is_stmt 1 view .LVU4983
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21598              		.loc 26 280 7 is_stmt 0 view .LVU4984
 21599              	.LBE11382:
 21600              	.LBB11383:
 21601              	.LBI11383:
 21602              		.loc 35 97 29 is_stmt 1 view .LVU4985
 21603              	.LBB11384:
 21604              	.LBI11384:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 21605              		.loc 25 558 7 view .LVU4986
 21606              	.LBB11385:
 21607              	.LBI11385:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 21608              		.loc 19 147 7 view .LVU4987
 21609              	.LBB11386:
 21610              	.LBI11386:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21611              		.loc 20 82 7 view .LVU4988
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21612              		.loc 20 82 7 is_stmt 0 view .LVU4989
 21613              	.LBE11386:
 21614              	.LBE11385:
 21615              	.LBE11384:
 21616              	.LBE11383:
 21617              	.LBB11387:
 21618              	.LBI11284:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 21619              		.loc 26 303 7 is_stmt 1 view .LVU4990
 21620              	.LBB11317:
 21621              	.LBI11309:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 21622              		.loc 26 136 2 view .LVU4991
 21623              	.LBB11313:
 21624              	.LBI11313:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 21625              		.loc 19 147 7 view .LVU4992
 21626              	.LBB11314:
 21627              	.LBI11314:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21628              		.loc 20 82 7 view .LVU4993
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21629              		.loc 20 82 7 is_stmt 0 view .LVU4994
 21630              	.LBE11314:
 21631              	.LBE11313:
 21632              	.LBB11315:
 21633              	.LBI11310:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 21634              		.loc 26 97 2 is_stmt 1 view .LVU4995
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 21635              		.loc 26 97 2 is_stmt 0 view .LVU4996
 21636              	.LBE11315:
 21637              	.LBE11317:
 21638              	.LBB11318:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 790


 21639              	.LBI11285:
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 21640              		.loc 26 359 7 is_stmt 1 view .LVU4997
 21641              	.LBB11303:
 21642              	.LBB11297:
 21643              	.LBI11287:
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 21644              		.loc 26 343 7 view .LVU4998
 21645              	.LBE11297:
 21646              	.LBE11303:
 21647              	.LBE11318:
 21648              	.LBB11319:
 21649              	.LBB11316:
 21650              	.LBB11312:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 21651              		.loc 26 98 47 is_stmt 0 view .LVU4999
 21652 077c C5E90A33 		strd	r3, r3, [r5, #40]
 21653              	.LBE11312:
 21654              	.LBE11316:
 21655              	.LBE11319:
 21656              	.LBB11320:
 21657              	.LBB11304:
 21658              	.LBB11298:
 21659              	.LBB11295:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 21660              		.loc 26 346 18 view .LVU5000
 21661 0780 471A     		subs	r7, r0, r1
 21662              	.LVL1278:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 21663              		.loc 26 346 18 view .LVU5001
 21664 0782 9ED1     		bne	.L847
 21665 0784 3A46     		mov	r2, r7
 21666 0786 3B46     		mov	r3, r7
 21667 0788 A6E7     		b	.L804
 21668              	.LVL1279:
 21669              	.L802:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 21670              		.loc 26 346 18 view .LVU5002
 21671              	.LBE11295:
 21672              	.LBE11298:
 21673              	.LBE11304:
 21674              	.LBE11320:
 21675              	.LBE11387:
 21676              	.LBE11390:
 21677              	.LBE11482:
 21678              	.LBB11483:
 21679              	.LBB11480:
 21680              	.LBB11478:
 21681              	.LBB11476:
 21682              	.LBB11474:
 21683              	.LBB11472:
 21684              	.LBB11470:
 21685              	.LBB11468:
 21686              	.LBB11456:
 21687              	.LBB11440:
 21688              	.LBB11437:
 21689              	.LBB11428:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 791


 21690              	.LBI11428:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21691              		.loc 18 346 7 is_stmt 1 view .LVU5003
 21692              	.LBB11429:
 21693              	.LBI11429:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 21694              		.loc 21 387 7 view .LVU5004
 21695              	.LBB11430:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 21696              		.loc 21 389 2 view .LVU5005
 21697 078a 002F     		cmp	r7, #0
 21698 078c F0D0     		beq	.L803
 21699 078e 0AE0     		b	.L801
 21700              	.LVL1280:
 21701              	.L846:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 21702              		.loc 21 389 2 is_stmt 0 view .LVU5006
 21703              	.LBE11430:
 21704              	.LBE11429:
 21705              	.LBE11428:
 21706              	.LBE11437:
 21707              	.LBE11440:
 21708              	.LBE11456:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 21709              		.loc 22 219 13 view .LVU5007
 21710 0790 0022     		movs	r2, #0
 21711 0792 09A9     		add	r1, sp, #36
 21712 0794 05F11000 		add	r0, r5, #16
 21713 0798 0193     		str	r3, [sp, #4]
 21714 079a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 21715              	.LVL1281:
 21716              	.LBB11457:
 21717              	.LBI11457:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 21718              		.loc 18 178 7 is_stmt 1 view .LVU5008
 21719              	.LBE11457:
 21720              	.LBB11459:
 21721              	.LBB11460:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21722              		.loc 18 211 31 is_stmt 0 view .LVU5009
 21723 079e 099A     		ldr	r2, [sp, #36]
 21724 07a0 019B     		ldr	r3, [sp, #4]
 21725              	.LBE11460:
 21726              	.LBE11459:
 21727              	.LBB11462:
 21728              	.LBB11458:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21729              		.loc 18 179 26 view .LVU5010
 21730 07a2 2861     		str	r0, [r5, #16]
 21731              	.LVL1282:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21732              		.loc 18 179 26 view .LVU5011
 21733              	.LBE11458:
 21734              	.LBE11462:
 21735              	.LBB11463:
 21736              	.LBI11459:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 792


 21737              		.loc 18 210 7 is_stmt 1 view .LVU5012
 21738              	.LBB11461:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21739              		.loc 18 211 31 is_stmt 0 view .LVU5013
 21740 07a4 AA61     		str	r2, [r5, #24]
 21741              	.LVL1283:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21742              		.loc 18 211 31 view .LVU5014
 21743              	.LBE11461:
 21744              	.LBE11463:
 21745              	.LBB11464:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 21746              		.loc 18 186 7 is_stmt 1 view .LVU5015
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 21747              		.loc 18 186 7 is_stmt 0 view .LVU5016
 21748              	.LBE11464:
 21749              	.LBB11465:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 21750              		.loc 18 392 7 is_stmt 1 view .LVU5017
 21751              	.LBB11441:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21752              		.loc 18 346 7 view .LVU5018
 21753              	.LBB11438:
 21754              	.LBB11435:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21755              		.loc 18 346 7 view .LVU5019
 21756              	.LBB11433:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 21757              		.loc 21 387 7 view .LVU5020
 21758              	.LBB11431:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 21759              		.loc 21 389 2 view .LVU5021
 21760              	.L801:
 21761              		.loc 21 395 2 view .LVU5022
 21762              		.loc 21 395 49 is_stmt 0 view .LVU5023
 21763 07a6 3A46     		mov	r2, r7
 21764 07a8 1946     		mov	r1, r3
 21765 07aa FFF7FEFF 		bl	memcpy
 21766              	.LVL1284:
 21767              		.loc 21 395 49 view .LVU5024
 21768              	.LBE11431:
 21769              	.LBE11433:
 21770              	.LBE11435:
 21771              	.LBE11438:
 21772              	.LBE11441:
 21773              	.LBE11465:
 21774              		.loc 22 232 15 view .LVU5025
 21775 07ae 099F     		ldr	r7, [sp, #36]
 21776              	.LVL1285:
 21777              	.LBB11466:
 21778              	.LBB11455:
 21779              	.LBB11454:
 21780              	.LBB11452:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21781              		.loc 18 187 28 view .LVU5026
 21782 07b0 2869     		ldr	r0, [r5, #16]
 21783              	.LBE11452:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 793


 21784              	.LBE11454:
 21785              	.LBE11455:
 21786              	.LBE11466:
 21787              	.LBB11467:
 21788              	.LBB11442:
 21789              	.LBB11439:
 21790              	.LBB11436:
 21791              	.LBB11434:
 21792              	.LBB11432:
 21793              		.loc 21 395 66 view .LVU5027
 21794 07b2 DDE7     		b	.L803
 21795              	.L852:
 21796              		.align	2
 21797              	.L851:
 21798 07b4 48010000 		.word	.LC96
 21799 07b8 50010000 		.word	.LC97
 21800 07bc 00000000 		.word	.LANCHOR21
 21801 07c0 00000000 		.word	.LANCHOR26
 21802 07c4 00000000 		.word	__dso_handle
 21803 07c8 00000000 		.word	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 21804 07cc 20010000 		.word	.LC91
 21805 07d0 28010000 		.word	.LC92
 21806 07d4 30010000 		.word	.LC93
 21807 07d8 38010000 		.word	.LC94
 21808 07dc 40010000 		.word	.LC95
 21809 07e0 4D69786F 		.word	1870162253
 21810 07e4 FCFFFF7F 		.word	2147483644
 21811 07e8 04000000 		.word	.LANCHOR27+4
 21812 07ec 00000000 		.word	.LANCHOR27
 21813              	.LVL1286:
 21814              	.L843:
 21815              		.loc 21 395 66 view .LVU5028
 21816 07f0 9AAD     		add	r5, sp, #616
 21817              	.L808:
 21818              	.LVL1287:
 21819              		.loc 21 395 66 view .LVU5029
 21820              	.LBE11432:
 21821              	.LBE11434:
 21822              	.LBE11436:
 21823              	.LBE11439:
 21824              	.LBE11442:
 21825              	.LBE11467:
 21826              	.LBE11468:
 21827              	.LBE11470:
 21828              	.LBE11472:
 21829              	.LBE11474:
 21830              	.LBE11476:
 21831              	.LBE11478:
 21832              	.LBE11480:
 21833              	.LBE11483:
 21834              	.LBE11487:
 21835              	.LBE11491:
 21836              	.LBE11498:
 21837              	.LBE11507:
 21838              	.LBE11512:
 21839              	.LBE11517:
 21840              	.LBE11524:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 794


 21841              	.LBE11537:
 21842              	.LBE11541:
 21843              	.LBE11545:
 21844              	.LBE11552:
 21845              	.LBE11555:
 21846              	.LBE11558:
 21847              	.LBE11583:
 21848              	.LBB11584:
 21849              	.LBI11584:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 21850              		.loc 30 211 12 is_stmt 1 view .LVU5030
 21851              	.LBB11585:
 21852              	.LBI11585:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 21853              		.loc 26 678 7 view .LVU5031
 21854              	.LBB11586:
 21855              	.LBB11587:
 21856              	.LBI11587:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21857              		.loc 26 276 7 view .LVU5032
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21858              		.loc 26 276 7 is_stmt 0 view .LVU5033
 21859              	.LBE11587:
 21860              	.LBB11588:
 21861              	.LBI11588:
 21862              		.loc 25 735 5 is_stmt 1 view .LVU5034
 21863              		.loc 25 735 5 is_stmt 0 view .LVU5035
 21864              	.LBE11588:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21865              		.loc 26 683 7 view .LVU5036
 21866 07f2 05F11800 		add	r0, r5, #24
 21867              	.LVL1288:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21868              		.loc 26 683 7 view .LVU5037
 21869 07f6 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 21870              	.LVL1289:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21871              		.loc 26 683 7 view .LVU5038
 21872              	.LBE11586:
 21873              	.LBE11585:
 21874              	.LBB11589:
 21875              	.LBI11589:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 21876              		.loc 18 657 7 is_stmt 1 view .LVU5039
 21877              	.LBB11590:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21878              		.loc 18 658 19 is_stmt 0 view .LVU5040
 21879 07fa 2846     		mov	r0, r5
 21880 07fc FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 21881              	.LVL1290:
 21882              	.LBB11591:
 21883              	.LBI11591:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21884              		.loc 18 150 14 is_stmt 1 view .LVU5041
 21885              	.LBB11592:
 21886              	.LBI11592:
 21887              		.loc 19 162 7 view .LVU5042
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 795


 21888              	.LBB11593:
 21889              	.LBI11593:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21890              		.loc 20 89 7 view .LVU5043
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21891              		.loc 20 89 7 is_stmt 0 view .LVU5044
 21892              	.LBE11593:
 21893              	.LBE11592:
 21894              	.LBE11591:
 21895              	.LBE11590:
 21896              	.LBE11589:
 21897              	.LBE11584:
 21898              		.loc 41 132 5 view .LVU5045
 21899 0800 AC42     		cmp	r4, r5
 21900 0802 A5F12405 		sub	r5, r5, #36
 21901 0806 F4D1     		bne	.L808
 21902              	.LVL1291:
 21903              	.LBB11594:
 21904              	.LBI11594:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 21905              		.loc 26 678 7 is_stmt 1 view .LVU5046
 21906              	.LBB11595:
 21907              	.LBB11596:
 21908              	.LBI11596:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21909              		.loc 26 276 7 view .LVU5047
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21910              		.loc 26 276 7 is_stmt 0 view .LVU5048
 21911              	.LBE11596:
 21912              	.LBB11597:
 21913              	.LBI11597:
 21914              		.loc 25 735 5 is_stmt 1 view .LVU5049
 21915              		.loc 25 735 5 is_stmt 0 view .LVU5050
 21916              	.LBE11597:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21917              		.loc 26 683 7 view .LVU5051
 21918 0808 1EA8     		add	r0, sp, #120
 21919              	.LVL1292:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21920              		.loc 26 683 7 view .LVU5052
 21921              	.LBE11595:
 21922              	.LBE11594:
 133:theory.h      **** 
 134:theory.h      ****     const std::vector<std::string> allInversions {
 135:theory.h      ****         "None",
 136:theory.h      ****         "Drop 2",
 137:theory.h      ****         "Drop 3",
 138:theory.h      ****         "Drop 4"
 139:theory.h      ****     };
 21923              		.loc 41 139 5 view .LVU5053
 21924 080a 7CAD     		add	r5, sp, #496
 21925              	.LBB11599:
 21926              	.LBB11598:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21927              		.loc 26 683 7 view .LVU5054
 21928 080c FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 21929              	.LVL1293:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 796


 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21930              		.loc 26 683 7 view .LVU5055
 21931              	.LBE11598:
 21932              	.LBE11599:
 21933              	.LBB11600:
 21934              	.LBI11600:
 21935              		.loc 19 162 7 is_stmt 1 view .LVU5056
 21936              	.LBB11601:
 21937              	.LBI11601:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21938              		.loc 20 89 7 view .LVU5057
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21939              		.loc 20 89 7 is_stmt 0 view .LVU5058
 21940              	.LBE11601:
 21941              	.LBE11600:
 21942              	.LBB11602:
 21943              	.LBI11602:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 21944              		.loc 26 678 7 is_stmt 1 view .LVU5059
 21945              	.LBB11603:
 21946              	.LBB11604:
 21947              	.LBI11604:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21948              		.loc 26 276 7 view .LVU5060
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21949              		.loc 26 276 7 is_stmt 0 view .LVU5061
 21950              	.LBE11604:
 21951              	.LBB11605:
 21952              	.LBI11605:
 21953              		.loc 25 735 5 is_stmt 1 view .LVU5062
 21954              		.loc 25 735 5 is_stmt 0 view .LVU5063
 21955              	.LBE11605:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21956              		.loc 26 683 7 view .LVU5064
 21957 0810 21A8     		add	r0, sp, #132
 21958              	.LVL1294:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21959              		.loc 26 683 7 view .LVU5065
 21960 0812 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 21961              	.LVL1295:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21962              		.loc 26 683 7 view .LVU5066
 21963              	.LBE11603:
 21964              	.LBE11602:
 21965              	.LBB11606:
 21966              	.LBI11606:
 21967              		.loc 19 162 7 is_stmt 1 view .LVU5067
 21968              	.LBB11607:
 21969              	.LBI11607:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21970              		.loc 20 89 7 view .LVU5068
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21971              		.loc 20 89 7 is_stmt 0 view .LVU5069
 21972              	.LBE11607:
 21973              	.LBE11606:
 21974              	.LBB11608:
 21975              	.LBI11608:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 797


 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 21976              		.loc 26 678 7 is_stmt 1 view .LVU5070
 21977              	.LBB11609:
 21978              	.LBB11610:
 21979              	.LBI11610:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21980              		.loc 26 276 7 view .LVU5071
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21981              		.loc 26 276 7 is_stmt 0 view .LVU5072
 21982              	.LBE11610:
 21983              	.LBB11611:
 21984              	.LBI11611:
 21985              		.loc 25 735 5 is_stmt 1 view .LVU5073
 21986              		.loc 25 735 5 is_stmt 0 view .LVU5074
 21987              	.LBE11611:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21988              		.loc 26 683 7 view .LVU5075
 21989 0816 24A8     		add	r0, sp, #144
 21990              	.LVL1296:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21991              		.loc 26 683 7 view .LVU5076
 21992 0818 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 21993              	.LVL1297:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21994              		.loc 26 683 7 view .LVU5077
 21995              	.LBE11609:
 21996              	.LBE11608:
 21997              	.LBB11612:
 21998              	.LBI11612:
 21999              		.loc 19 162 7 is_stmt 1 view .LVU5078
 22000              	.LBB11613:
 22001              	.LBI11613:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22002              		.loc 20 89 7 view .LVU5079
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22003              		.loc 20 89 7 is_stmt 0 view .LVU5080
 22004              	.LBE11613:
 22005              	.LBE11612:
 22006              	.LBB11614:
 22007              	.LBI11614:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 22008              		.loc 26 678 7 is_stmt 1 view .LVU5081
 22009              	.LBB11615:
 22010              	.LBB11616:
 22011              	.LBI11616:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 22012              		.loc 26 276 7 view .LVU5082
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 22013              		.loc 26 276 7 is_stmt 0 view .LVU5083
 22014              	.LBE11616:
 22015              	.LBB11617:
 22016              	.LBI11617:
 22017              		.loc 25 735 5 is_stmt 1 view .LVU5084
 22018              		.loc 25 735 5 is_stmt 0 view .LVU5085
 22019              	.LBE11617:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22020              		.loc 26 683 7 view .LVU5086
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 798


 22021 081c 27A8     		add	r0, sp, #156
 22022              	.LVL1298:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22023              		.loc 26 683 7 view .LVU5087
 22024 081e FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 22025              	.LVL1299:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22026              		.loc 26 683 7 view .LVU5088
 22027              	.LBE11615:
 22028              	.LBE11614:
 22029              	.LBB11618:
 22030              	.LBI11618:
 22031              		.loc 19 162 7 is_stmt 1 view .LVU5089
 22032              	.LBB11619:
 22033              	.LBI11619:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22034              		.loc 20 89 7 view .LVU5090
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22035              		.loc 20 89 7 is_stmt 0 view .LVU5091
 22036              	.LBE11619:
 22037              	.LBE11618:
 22038              	.LBB11620:
 22039              	.LBI11620:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 22040              		.loc 26 678 7 is_stmt 1 view .LVU5092
 22041              	.LBB11621:
 22042              	.LBB11622:
 22043              	.LBI11622:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 22044              		.loc 26 276 7 view .LVU5093
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 22045              		.loc 26 276 7 is_stmt 0 view .LVU5094
 22046              	.LBE11622:
 22047              	.LBB11623:
 22048              	.LBI11623:
 22049              		.loc 25 735 5 is_stmt 1 view .LVU5095
 22050              		.loc 25 735 5 is_stmt 0 view .LVU5096
 22051              	.LBE11623:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22052              		.loc 26 683 7 view .LVU5097
 22053 0822 2AA8     		add	r0, sp, #168
 22054              	.LVL1300:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22055              		.loc 26 683 7 view .LVU5098
 22056 0824 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 22057              	.LVL1301:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22058              		.loc 26 683 7 view .LVU5099
 22059              	.LBE11621:
 22060              	.LBE11620:
 22061              	.LBB11624:
 22062              	.LBI11624:
 22063              		.loc 19 162 7 is_stmt 1 view .LVU5100
 22064              	.LBB11625:
 22065              	.LBI11625:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22066              		.loc 20 89 7 view .LVU5101
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 799


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22067              		.loc 20 89 7 is_stmt 0 view .LVU5102
 22068              	.LBE11625:
 22069              	.LBE11624:
 22070              	.LBB11626:
 22071              	.LBI11626:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 22072              		.loc 26 678 7 is_stmt 1 view .LVU5103
 22073              	.LBB11627:
 22074              	.LBB11628:
 22075              	.LBI11628:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 22076              		.loc 26 276 7 view .LVU5104
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 22077              		.loc 26 276 7 is_stmt 0 view .LVU5105
 22078              	.LBE11628:
 22079              	.LBB11629:
 22080              	.LBI11629:
 22081              		.loc 25 735 5 is_stmt 1 view .LVU5106
 22082              		.loc 25 735 5 is_stmt 0 view .LVU5107
 22083              	.LBE11629:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22084              		.loc 26 683 7 view .LVU5108
 22085 0828 2DA8     		add	r0, sp, #180
 22086              	.LVL1302:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22087              		.loc 26 683 7 view .LVU5109
 22088 082a FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 22089              	.LVL1303:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22090              		.loc 26 683 7 view .LVU5110
 22091              	.LBE11627:
 22092              	.LBE11626:
 22093              	.LBB11630:
 22094              	.LBI11630:
 22095              		.loc 19 162 7 is_stmt 1 view .LVU5111
 22096              	.LBB11631:
 22097              	.LBI11631:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22098              		.loc 20 89 7 view .LVU5112
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22099              		.loc 20 89 7 is_stmt 0 view .LVU5113
 22100              	.LBE11631:
 22101              	.LBE11630:
 22102              	.LBB11632:
 22103              	.LBI11632:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 22104              		.loc 26 678 7 is_stmt 1 view .LVU5114
 22105              	.LBB11633:
 22106              	.LBB11634:
 22107              	.LBI11634:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 22108              		.loc 26 276 7 view .LVU5115
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 22109              		.loc 26 276 7 is_stmt 0 view .LVU5116
 22110              	.LBE11634:
 22111              	.LBB11635:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 800


 22112              	.LBI11635:
 22113              		.loc 25 735 5 is_stmt 1 view .LVU5117
 22114              		.loc 25 735 5 is_stmt 0 view .LVU5118
 22115              	.LBE11635:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22116              		.loc 26 683 7 view .LVU5119
 22117 082e 30A8     		add	r0, sp, #192
 22118              	.LVL1304:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22119              		.loc 26 683 7 view .LVU5120
 22120 0830 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 22121              	.LVL1305:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 22122              		.loc 26 683 7 view .LVU5121
 22123              	.LBE11633:
 22124              	.LBE11632:
 22125              	.LBB11636:
 22126              	.LBI11636:
 22127              		.loc 19 162 7 is_stmt 1 view .LVU5122
 22128              	.LBB11637:
 22129              	.LBI11637:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22130              		.loc 20 89 7 view .LVU5123
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22131              		.loc 20 89 7 is_stmt 0 view .LVU5124
 22132              	.LBE11637:
 22133              	.LBE11636:
 124:theory.h      ****         {"Major",  std::vector<int>{0, 2, 4, 5, 7, 9, 11}},
 22134              		.loc 41 124 51 view .LVU5125
 22135 0834 AB4A     		ldr	r2, .L853
 22136 0836 AC49     		ldr	r1, .L853+4
 22137 0838 AC48     		ldr	r0, .L853+8
 22138 083a FFF7FEFF 		bl	__aeabi_atexit
 22139              	.LVL1306:
 22140              	.LBB11638:
 22141              	.LBI11638:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22142              		.loc 19 144 7 is_stmt 1 view .LVU5126
 22143              	.LBB11639:
 22144              	.LBI11639:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22145              		.loc 20 79 7 view .LVU5127
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22146              		.loc 20 79 7 is_stmt 0 view .LVU5128
 22147              	.LBE11639:
 22148              	.LBE11638:
 22149              		.loc 41 139 5 view .LVU5129
 22150 083e AC49     		ldr	r1, .L853+12
 22151 0840 2046     		mov	r0, r4
 22152 0842 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22153              	.LVL1307:
 22154              	.LBB11640:
 22155              	.LBI11640:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22156              		.loc 19 144 7 is_stmt 1 view .LVU5130
 22157              	.LBB11641:
 22158              	.LBI11641:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 801


  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22159              		.loc 20 79 7 view .LVU5131
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22160              		.loc 20 79 7 is_stmt 0 view .LVU5132
 22161              	.LBE11641:
 22162              	.LBE11640:
 22163              		.loc 41 139 5 view .LVU5133
 22164 0846 AB49     		ldr	r1, .L853+16
 22165 0848 6AA8     		add	r0, sp, #424
 22166 084a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22167              	.LVL1308:
 22168              	.LBB11642:
 22169              	.LBI11642:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22170              		.loc 19 144 7 is_stmt 1 view .LVU5134
 22171              	.LBB11643:
 22172              	.LBI11643:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22173              		.loc 20 79 7 view .LVU5135
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22174              		.loc 20 79 7 is_stmt 0 view .LVU5136
 22175              	.LBE11643:
 22176              	.LBE11642:
 22177              		.loc 41 139 5 view .LVU5137
 22178 084e AA49     		ldr	r1, .L853+20
 22179 0850 70A8     		add	r0, sp, #448
 22180 0852 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22181              	.LVL1309:
 22182              	.LBB11644:
 22183              	.LBI11644:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22184              		.loc 19 144 7 is_stmt 1 view .LVU5138
 22185              	.LBB11645:
 22186              	.LBI11645:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22187              		.loc 20 79 7 view .LVU5139
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22188              		.loc 20 79 7 is_stmt 0 view .LVU5140
 22189              	.LBE11645:
 22190              	.LBE11644:
 22191              		.loc 41 139 5 view .LVU5141
 22192 0856 A949     		ldr	r1, .L853+24
 22193 0858 76A8     		add	r0, sp, #472
 22194 085a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22195              	.LVL1310:
 22196 085e 0423     		movs	r3, #4
 22197 0860 5DAA     		add	r2, sp, #372
 22198 0862 5D94     		str	r4, [sp, #372]
 22199 0864 5E93     		str	r3, [sp, #376]
 22200              	.LVL1311:
 22201              	.LBB11646:
 22202              	.LBI11646:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22203              		.loc 19 144 7 is_stmt 1 view .LVU5142
 22204              	.LBB11647:
 22205              	.LBI11647:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 802


 22206              		.loc 20 79 7 view .LVU5143
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22207              		.loc 20 79 7 is_stmt 0 view .LVU5144
 22208              	.LBE11647:
 22209              	.LBE11646:
 22210              		.loc 41 139 5 view .LVU5145
 22211 0866 56AB     		add	r3, sp, #344
 22212 0868 A548     		ldr	r0, .L853+28
 22213 086a 06CA     		ldm	r2, {r1, r2}
 22214 086c FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 22215              	.LVL1312:
 22216              	.LBB11648:
 22217              	.LBI11648:
 22218              		.loc 19 162 7 is_stmt 1 view .LVU5146
 22219              	.LBB11649:
 22220              	.LBI11649:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22221              		.loc 20 89 7 view .LVU5147
 22222              	.L809:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22223              		.loc 20 89 7 is_stmt 0 view .LVU5148
 22224              	.LBE11649:
 22225              	.LBE11648:
 22226              		.loc 41 139 5 view .LVU5149
 22227 0870 183D     		subs	r5, r5, #24
 22228              	.LVL1313:
 22229              	.LBB11650:
 22230              	.LBI11650:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 22231              		.loc 18 657 7 is_stmt 1 view .LVU5150
 22232              	.LBB11651:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 22233              		.loc 18 658 19 is_stmt 0 view .LVU5151
 22234 0872 2846     		mov	r0, r5
 22235 0874 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 22236              	.LVL1314:
 22237              	.LBB11652:
 22238              	.LBI11652:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 22239              		.loc 18 150 14 is_stmt 1 view .LVU5152
 22240              	.LBB11653:
 22241              	.LBI11653:
 22242              		.loc 19 162 7 view .LVU5153
 22243              	.LBB11654:
 22244              	.LBI11654:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22245              		.loc 20 89 7 view .LVU5154
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22246              		.loc 20 89 7 is_stmt 0 view .LVU5155
 22247              	.LBE11654:
 22248              	.LBE11653:
 22249              	.LBE11652:
 22250              	.LBE11651:
 22251              	.LBE11650:
 22252              		.loc 41 139 5 view .LVU5156
 22253 0878 A542     		cmp	r5, r4
 22254 087a F9D1     		bne	.L809
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 803


 22255              	.LVL1315:
 22256              	.LBB11655:
 22257              	.LBI11655:
 22258              		.loc 19 162 7 is_stmt 1 view .LVU5157
 22259              	.LBB11656:
 22260              	.LBI11656:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22261              		.loc 20 89 7 view .LVU5158
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22262              		.loc 20 89 7 is_stmt 0 view .LVU5159
 22263              	.LBE11656:
 22264              	.LBE11655:
 22265              	.LBB11657:
 22266              	.LBI11657:
 22267              		.loc 19 162 7 is_stmt 1 view .LVU5160
 22268              	.LBB11658:
 22269              	.LBI11658:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22270              		.loc 20 89 7 view .LVU5161
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22271              		.loc 20 89 7 is_stmt 0 view .LVU5162
 22272              	.LBE11658:
 22273              	.LBE11657:
 22274              	.LBB11659:
 22275              	.LBI11659:
 22276              		.loc 19 162 7 is_stmt 1 view .LVU5163
 22277              	.LBB11660:
 22278              	.LBI11660:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22279              		.loc 20 89 7 view .LVU5164
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22280              		.loc 20 89 7 is_stmt 0 view .LVU5165
 22281              	.LBE11660:
 22282              	.LBE11659:
 22283              	.LBB11661:
 22284              	.LBI11661:
 22285              		.loc 19 162 7 is_stmt 1 view .LVU5166
 22286              	.LBB11662:
 22287              	.LBI11662:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22288              		.loc 20 89 7 view .LVU5167
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22289              		.loc 20 89 7 is_stmt 0 view .LVU5168
 22290              	.LBE11662:
 22291              	.LBE11661:
 134:theory.h      ****         "None",
 22292              		.loc 41 134 36 view .LVU5169
 22293 087c 994A     		ldr	r2, .L853
 140:theory.h      **** 
 141:theory.h      ****     const std::vector<std::string> allClockInDivs {
 142:theory.h      ****         // "1/2", // TODO figure out how to interpolate for fractional clock values
 143:theory.h      ****         // "1/4",
 144:theory.h      ****         // "1/8",
 145:theory.h      ****         // "1/16",
 146:theory.h      ****         // "1/32",
 147:theory.h      ****         // "1/64",
 148:theory.h      ****         "1",
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 804


 149:theory.h      ****         "2",
 150:theory.h      ****         "4",
 151:theory.h      ****         "8",
 152:theory.h      ****         "16"
 153:theory.h      ****     };
 22294              		.loc 41 153 5 view .LVU5170
 22295 087e 82AD     		add	r5, sp, #520
 134:theory.h      ****         "None",
 22296              		.loc 41 134 36 view .LVU5171
 22297 0880 A049     		ldr	r1, .L853+32
 22298 0882 9F48     		ldr	r0, .L853+28
 22299 0884 FFF7FEFF 		bl	__aeabi_atexit
 22300              	.LVL1316:
 22301              	.LBB11663:
 22302              	.LBI11663:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22303              		.loc 19 144 7 is_stmt 1 view .LVU5172
 22304              	.LBB11664:
 22305              	.LBI11664:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22306              		.loc 20 79 7 view .LVU5173
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22307              		.loc 20 79 7 is_stmt 0 view .LVU5174
 22308              	.LBE11664:
 22309              	.LBE11663:
 22310              		.loc 41 153 5 view .LVU5175
 22311 0888 9F49     		ldr	r1, .L853+36
 22312 088a 2046     		mov	r0, r4
 22313 088c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22314              	.LVL1317:
 22315              	.LBB11665:
 22316              	.LBI11665:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22317              		.loc 19 144 7 is_stmt 1 view .LVU5176
 22318              	.LBB11666:
 22319              	.LBI11666:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22320              		.loc 20 79 7 view .LVU5177
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22321              		.loc 20 79 7 is_stmt 0 view .LVU5178
 22322              	.LBE11666:
 22323              	.LBE11665:
 22324              		.loc 41 153 5 view .LVU5179
 22325 0890 9E49     		ldr	r1, .L853+40
 22326 0892 6AA8     		add	r0, sp, #424
 22327 0894 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22328              	.LVL1318:
 22329              	.LBB11667:
 22330              	.LBI11667:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22331              		.loc 19 144 7 is_stmt 1 view .LVU5180
 22332              	.LBB11668:
 22333              	.LBI11668:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22334              		.loc 20 79 7 view .LVU5181
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22335              		.loc 20 79 7 is_stmt 0 view .LVU5182
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 805


 22336              	.LBE11668:
 22337              	.LBE11667:
 22338              		.loc 41 153 5 view .LVU5183
 22339 0898 9D49     		ldr	r1, .L853+44
 22340 089a 70A8     		add	r0, sp, #448
 22341 089c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22342              	.LVL1319:
 22343              	.LBB11669:
 22344              	.LBI11669:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22345              		.loc 19 144 7 is_stmt 1 view .LVU5184
 22346              	.LBB11670:
 22347              	.LBI11670:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22348              		.loc 20 79 7 view .LVU5185
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22349              		.loc 20 79 7 is_stmt 0 view .LVU5186
 22350              	.LBE11670:
 22351              	.LBE11669:
 22352              		.loc 41 153 5 view .LVU5187
 22353 08a0 9C49     		ldr	r1, .L853+48
 22354 08a2 76A8     		add	r0, sp, #472
 22355 08a4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22356              	.LVL1320:
 22357              	.LBB11671:
 22358              	.LBI11671:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22359              		.loc 19 144 7 is_stmt 1 view .LVU5188
 22360              	.LBB11672:
 22361              	.LBI11672:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22362              		.loc 20 79 7 view .LVU5189
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22363              		.loc 20 79 7 is_stmt 0 view .LVU5190
 22364              	.LBE11672:
 22365              	.LBE11671:
 22366              		.loc 41 153 5 view .LVU5191
 22367 08a8 9B49     		ldr	r1, .L853+52
 22368 08aa 7CA8     		add	r0, sp, #496
 22369 08ac FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22370              	.LVL1321:
 22371 08b0 0523     		movs	r3, #5
 22372 08b2 56AA     		add	r2, sp, #344
 22373 08b4 5694     		str	r4, [sp, #344]
 22374 08b6 5793     		str	r3, [sp, #348]
 22375              	.LVL1322:
 22376              	.LBB11673:
 22377              	.LBI11673:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22378              		.loc 19 144 7 is_stmt 1 view .LVU5192
 22379              	.LBB11674:
 22380              	.LBI11674:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22381              		.loc 20 79 7 view .LVU5193
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22382              		.loc 20 79 7 is_stmt 0 view .LVU5194
 22383              	.LBE11674:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 806


 22384              	.LBE11673:
 22385              		.loc 41 153 5 view .LVU5195
 22386 08b8 4FAB     		add	r3, sp, #316
 22387 08ba 9848     		ldr	r0, .L853+56
 22388 08bc 06CA     		ldm	r2, {r1, r2}
 22389 08be FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 22390              	.LVL1323:
 22391              	.LBB11675:
 22392              	.LBI11675:
 22393              		.loc 19 162 7 is_stmt 1 view .LVU5196
 22394              	.LBB11676:
 22395              	.LBI11676:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22396              		.loc 20 89 7 view .LVU5197
 22397              	.L810:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22398              		.loc 20 89 7 is_stmt 0 view .LVU5198
 22399              	.LBE11676:
 22400              	.LBE11675:
 22401              		.loc 41 153 5 view .LVU5199
 22402 08c2 183D     		subs	r5, r5, #24
 22403              	.LVL1324:
 22404              	.LBB11677:
 22405              	.LBI11677:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 22406              		.loc 18 657 7 is_stmt 1 view .LVU5200
 22407              	.LBB11678:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 22408              		.loc 18 658 19 is_stmt 0 view .LVU5201
 22409 08c4 2846     		mov	r0, r5
 22410 08c6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 22411              	.LVL1325:
 22412              	.LBB11679:
 22413              	.LBI11679:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 22414              		.loc 18 150 14 is_stmt 1 view .LVU5202
 22415              	.LBB11680:
 22416              	.LBI11680:
 22417              		.loc 19 162 7 view .LVU5203
 22418              	.LBB11681:
 22419              	.LBI11681:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22420              		.loc 20 89 7 view .LVU5204
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22421              		.loc 20 89 7 is_stmt 0 view .LVU5205
 22422              	.LBE11681:
 22423              	.LBE11680:
 22424              	.LBE11679:
 22425              	.LBE11678:
 22426              	.LBE11677:
 22427              		.loc 41 153 5 view .LVU5206
 22428 08ca A542     		cmp	r5, r4
 22429 08cc F9D1     		bne	.L810
 22430              	.LVL1326:
 22431              	.LBB11682:
 22432              	.LBI11682:
 22433              		.loc 19 162 7 is_stmt 1 view .LVU5207
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 807


 22434              	.LBB11683:
 22435              	.LBI11683:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22436              		.loc 20 89 7 view .LVU5208
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22437              		.loc 20 89 7 is_stmt 0 view .LVU5209
 22438              	.LBE11683:
 22439              	.LBE11682:
 22440              	.LBB11684:
 22441              	.LBI11684:
 22442              		.loc 19 162 7 is_stmt 1 view .LVU5210
 22443              	.LBB11685:
 22444              	.LBI11685:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22445              		.loc 20 89 7 view .LVU5211
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22446              		.loc 20 89 7 is_stmt 0 view .LVU5212
 22447              	.LBE11685:
 22448              	.LBE11684:
 22449              	.LBB11686:
 22450              	.LBI11686:
 22451              		.loc 19 162 7 is_stmt 1 view .LVU5213
 22452              	.LBB11687:
 22453              	.LBI11687:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22454              		.loc 20 89 7 view .LVU5214
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22455              		.loc 20 89 7 is_stmt 0 view .LVU5215
 22456              	.LBE11687:
 22457              	.LBE11686:
 22458              	.LBB11688:
 22459              	.LBI11688:
 22460              		.loc 19 162 7 is_stmt 1 view .LVU5216
 22461              	.LBB11689:
 22462              	.LBI11689:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22463              		.loc 20 89 7 view .LVU5217
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22464              		.loc 20 89 7 is_stmt 0 view .LVU5218
 22465              	.LBE11689:
 22466              	.LBE11688:
 22467              	.LBB11690:
 22468              	.LBI11690:
 22469              		.loc 19 162 7 is_stmt 1 view .LVU5219
 22470              	.LBB11691:
 22471              	.LBI11691:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22472              		.loc 20 89 7 view .LVU5220
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22473              		.loc 20 89 7 is_stmt 0 view .LVU5221
 22474              	.LBE11691:
 22475              	.LBE11690:
 141:theory.h      ****         // "1/2", // TODO figure out how to interpolate for fractional clock values
 22476              		.loc 41 141 36 view .LVU5222
 22477 08ce 854A     		ldr	r2, .L853
 22478              		.file 43 "chord.h"
   1:chord.h       **** /* 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 808


   2:chord.h       ****  * Copyright (C) 2021 Evan Pernu - All Rights Reserved
   3:chord.h       ****  * You may use, distribute and modify this code under the
   4:chord.h       ****  * terms of the GNU AGPLv3 license.
   5:chord.h       ****  * 
   6:chord.h       ****  * You should have received a copy of the GNU AGPLv3 license with
   7:chord.h       ****  * this file (LICENSE.md). If not, please write to: evanpernu@gmail.com, 
   8:chord.h       ****  * or visit: https://www.gnu.org/licenses/agpl-3.0.en.html
   9:chord.h       ****  */
  10:chord.h       **** 
  11:chord.h       **** #pragma once
  12:chord.h       **** 
  13:chord.h       **** #include <map>
  14:chord.h       **** #include <vector>
  15:chord.h       **** #include <string>
  16:chord.h       **** 
  17:chord.h       **** #include "theory.h"
  18:chord.h       **** 
  19:chord.h       **** namespace jellybeans {
  20:chord.h       **** 
  21:chord.h       ****     // Notes are represented as ints, as they correspond to mu::allNotes5Oct
  22:chord.h       ****     // For performance reasons, all functions assume valid input
  23:chord.h       ****     class DiatonicChord {
  24:chord.h       ****     private:
  25:chord.h       ****         // String representation of the chord
  26:chord.h       ****         std::string string;
  27:chord.h       **** 
  28:chord.h       ****         // The diatonic distance, in relation to the root, of 
  29:chord.h       ****         // each note in the chord (ascending order)
  30:chord.h       ****         std::vector<int> notes;
  31:chord.h       **** 
  32:chord.h       ****         // Semitone value of each note in the chord
  33:chord.h       ****         std::vector<int> semis;
  34:chord.h       **** 
  35:chord.h       ****         // Must be an element of mu::modes (theory.h)
  36:chord.h       ****         std::string mode;
  37:chord.h       **** 
  38:chord.h       ****         // Root note of current mode
  39:chord.h       ****         int modeRoot;
  40:chord.h       **** 
  41:chord.h       ****         // Scale degree of the current root note
  42:chord.h       ****         int root;
  43:chord.h       **** 
  44:chord.h       ****         int length;
  45:chord.h       **** 
  46:chord.h       ****         // Must be an element of voicings
  47:chord.h       ****         std::string voicing;
  48:chord.h       ****     public:
  49:chord.h       **** 
  50:chord.h       ****         // Default is C major triad
  51:chord.h       ****         DiatonicChord(); // : DiatonicChord(1, 0, "Major", "Triad") {};
  52:chord.h       **** 
  53:chord.h       ****         // @param chord root - scale degree  int from 0-7
  54:chord.h       ****         // @param mode root - the note value, int from 0-12
  55:chord.h       ****         // @param mode - an element of mu::allModes
  56:chord.h       ****         // @param voicing - an element of mu::voicings
  57:chord.h       ****         DiatonicChord(int, int, std::string, std::string);
  58:chord.h       **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 809


  59:chord.h       ****         // Updates the value of string, so that it only needs to be 
  60:chord.h       ****         // computed when necessary
  61:chord.h       ****         void updateString();
  62:chord.h       **** 
  63:chord.h       ****         // @param the index of a note
  64:chord.h       ****         // Sets the root of the chord to the given note. If it's a non-diatonic note, 
  65:chord.h       ****         // transpose it up a semitone to become diatonic.
  66:chord.h       ****         void setRootByNote(int);
  67:chord.h       **** 
  68:chord.h       ****         // @param the scale degree of the desired root note, int from 0-7
  69:chord.h       ****         void setRoot(int);
  70:chord.h       **** 
  71:chord.h       ****         // @param the note value of the desired mode root, int from 0-12
  72:chord.h       ****         void setModeRoot(int);
  73:chord.h       **** 
  74:chord.h       ****         // @param an element of mu::allModes
  75:chord.h       ****         void setMode(std::string);
  76:chord.h       **** 
  77:chord.h       ****         // @param an element of mu::voicings
  78:chord.h       ****         void setVoicing(std::string);
  79:chord.h       **** 
  80:chord.h       ****         // Transposes all notes in the chord by the given number of semitones.
  81:chord.h       ****         // If a note would fall out of register, do nothing.
  82:chord.h       ****         void transpose(int);
  83:chord.h       **** 
  84:chord.h       ****         // Given the chord's properties, formulates the chord.
  85:chord.h       ****         // Call this every time a property of the chord is updated.
  86:chord.h       ****         void updateChord();
  87:chord.h       **** 
  88:chord.h       ****         // @return semis[n], or semis[0] if n is out of bounds
  89:chord.h       ****         int getNoteAt(int);
  90:chord.h       **** 
  91:chord.h       ****         // @return the number of notes in the chord
  92:chord.h       ****         int getLength();
  93:chord.h       **** 
  94:chord.h       ****         std::string toString();
  95:chord.h       ****     };
  96:chord.h       **** 
  97:chord.h       ****     // All possible chord voicings
  98:chord.h       ****     const std::vector<std::string> voicings {
  99:chord.h       ****         "Triad",
 100:chord.h       ****         "Triad+",
 101:chord.h       ****         "7th",
 102:chord.h       ****         "7th+"
 103:chord.h       ****         "9th",
 104:chord.h       ****         "11th",
 105:chord.h       ****         "13th",
 106:chord.h       ****         "6th",
 107:chord.h       ****         "Sus2",
 108:chord.h       ****         "Sus4",
 109:chord.h       ****         // disabled til its bug is fixed
 110:chord.h       ****         //"Kenny B.",  // Kenny Barron chord 
 111:chord.h       ****         "Power",
 112:chord.h       ****         "Shell 1",
 113:chord.h       ****         "Shell 2"
 114:chord.h       ****     };
 22479              		.loc 43 114 5 view .LVU5223
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 810


 22480 08d0 ACAD     		add	r5, sp, #688
 141:theory.h      ****         // "1/2", // TODO figure out how to interpolate for fractional clock values
 22481              		.loc 41 141 36 view .LVU5224
 22482 08d2 8C49     		ldr	r1, .L853+32
 22483 08d4 9148     		ldr	r0, .L853+56
 22484 08d6 FFF7FEFF 		bl	__aeabi_atexit
 22485              	.LVL1327:
 22486              	.LBB11692:
 22487              	.LBI11692:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22488              		.loc 19 144 7 is_stmt 1 view .LVU5225
 22489              	.LBB11693:
 22490              	.LBI11693:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22491              		.loc 20 79 7 view .LVU5226
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22492              		.loc 20 79 7 is_stmt 0 view .LVU5227
 22493              	.LBE11693:
 22494              	.LBE11692:
 22495              		.loc 43 114 5 view .LVU5228
 22496 08da 9149     		ldr	r1, .L853+60
 22497 08dc 2046     		mov	r0, r4
 22498 08de FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22499              	.LVL1328:
 22500              	.LBB11694:
 22501              	.LBI11694:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22502              		.loc 19 144 7 is_stmt 1 view .LVU5229
 22503              	.LBB11695:
 22504              	.LBI11695:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22505              		.loc 20 79 7 view .LVU5230
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22506              		.loc 20 79 7 is_stmt 0 view .LVU5231
 22507              	.LBE11695:
 22508              	.LBE11694:
 22509              		.loc 43 114 5 view .LVU5232
 22510 08e2 9049     		ldr	r1, .L853+64
 22511 08e4 6AA8     		add	r0, sp, #424
 22512 08e6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22513              	.LVL1329:
 22514              	.LBB11696:
 22515              	.LBI11696:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22516              		.loc 19 144 7 is_stmt 1 view .LVU5233
 22517              	.LBB11697:
 22518              	.LBI11697:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22519              		.loc 20 79 7 view .LVU5234
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22520              		.loc 20 79 7 is_stmt 0 view .LVU5235
 22521              	.LBE11697:
 22522              	.LBE11696:
 22523              		.loc 43 114 5 view .LVU5236
 22524 08ea 8F49     		ldr	r1, .L853+68
 22525 08ec 70A8     		add	r0, sp, #448
 22526 08ee FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 811


 22527              	.LVL1330:
 22528              	.LBB11698:
 22529              	.LBI11698:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22530              		.loc 19 144 7 is_stmt 1 view .LVU5237
 22531              	.LBB11699:
 22532              	.LBI11699:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22533              		.loc 20 79 7 view .LVU5238
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22534              		.loc 20 79 7 is_stmt 0 view .LVU5239
 22535              	.LBE11699:
 22536              	.LBE11698:
 22537              		.loc 43 114 5 view .LVU5240
 22538 08f2 8E49     		ldr	r1, .L853+72
 22539 08f4 76A8     		add	r0, sp, #472
 22540 08f6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22541              	.LVL1331:
 22542              	.LBB11700:
 22543              	.LBI11700:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22544              		.loc 19 144 7 is_stmt 1 view .LVU5241
 22545              	.LBB11701:
 22546              	.LBI11701:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22547              		.loc 20 79 7 view .LVU5242
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22548              		.loc 20 79 7 is_stmt 0 view .LVU5243
 22549              	.LBE11701:
 22550              	.LBE11700:
 22551              		.loc 43 114 5 view .LVU5244
 22552 08fa 8D49     		ldr	r1, .L853+76
 22553 08fc 7CA8     		add	r0, sp, #496
 22554 08fe FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22555              	.LVL1332:
 22556              	.LBB11702:
 22557              	.LBI11702:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22558              		.loc 19 144 7 is_stmt 1 view .LVU5245
 22559              	.LBB11703:
 22560              	.LBI11703:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22561              		.loc 20 79 7 view .LVU5246
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22562              		.loc 20 79 7 is_stmt 0 view .LVU5247
 22563              	.LBE11703:
 22564              	.LBE11702:
 22565              		.loc 43 114 5 view .LVU5248
 22566 0902 8C49     		ldr	r1, .L853+80
 22567 0904 82A8     		add	r0, sp, #520
 22568 0906 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22569              	.LVL1333:
 22570              	.LBB11704:
 22571              	.LBI11704:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22572              		.loc 19 144 7 is_stmt 1 view .LVU5249
 22573              	.LBB11705:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 812


 22574              	.LBI11705:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22575              		.loc 20 79 7 view .LVU5250
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22576              		.loc 20 79 7 is_stmt 0 view .LVU5251
 22577              	.LBE11705:
 22578              	.LBE11704:
 22579              		.loc 43 114 5 view .LVU5252
 22580 090a 88A8     		add	r0, sp, #544
 22581 090c 8A49     		ldr	r1, .L853+84
 22582 090e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22583              	.LVL1334:
 22584              	.LBB11706:
 22585              	.LBI11706:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22586              		.loc 19 144 7 is_stmt 1 view .LVU5253
 22587              	.LBB11707:
 22588              	.LBI11707:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22589              		.loc 20 79 7 view .LVU5254
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22590              		.loc 20 79 7 is_stmt 0 view .LVU5255
 22591              	.LBE11707:
 22592              	.LBE11706:
 22593              		.loc 43 114 5 view .LVU5256
 22594 0912 8EA8     		add	r0, sp, #568
 22595 0914 8949     		ldr	r1, .L853+88
 22596 0916 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22597              	.LVL1335:
 22598              	.LBB11708:
 22599              	.LBI11708:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22600              		.loc 19 144 7 is_stmt 1 view .LVU5257
 22601              	.LBB11709:
 22602              	.LBI11709:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22603              		.loc 20 79 7 view .LVU5258
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22604              		.loc 20 79 7 is_stmt 0 view .LVU5259
 22605              	.LBE11709:
 22606              	.LBE11708:
 22607              		.loc 43 114 5 view .LVU5260
 22608 091a 94A8     		add	r0, sp, #592
 22609 091c 8849     		ldr	r1, .L853+92
 22610 091e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22611              	.LVL1336:
 22612              	.LBB11710:
 22613              	.LBI11710:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22614              		.loc 19 144 7 is_stmt 1 view .LVU5261
 22615              	.LBB11711:
 22616              	.LBI11711:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22617              		.loc 20 79 7 view .LVU5262
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22618              		.loc 20 79 7 is_stmt 0 view .LVU5263
 22619              	.LBE11711:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 813


 22620              	.LBE11710:
 22621              		.loc 43 114 5 view .LVU5264
 22622 0922 9AA8     		add	r0, sp, #616
 22623 0924 8749     		ldr	r1, .L853+96
 22624 0926 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22625              	.LVL1337:
 22626              	.LBB11712:
 22627              	.LBI11712:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22628              		.loc 19 144 7 is_stmt 1 view .LVU5265
 22629              	.LBB11713:
 22630              	.LBI11713:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22631              		.loc 20 79 7 view .LVU5266
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22632              		.loc 20 79 7 is_stmt 0 view .LVU5267
 22633              	.LBE11713:
 22634              	.LBE11712:
 22635              		.loc 43 114 5 view .LVU5268
 22636 092a A0A8     		add	r0, sp, #640
 22637 092c 8649     		ldr	r1, .L853+100
 22638 092e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22639              	.LVL1338:
 22640              	.LBB11714:
 22641              	.LBI11714:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22642              		.loc 19 144 7 is_stmt 1 view .LVU5269
 22643              	.LBB11715:
 22644              	.LBI11715:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22645              		.loc 20 79 7 view .LVU5270
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22646              		.loc 20 79 7 is_stmt 0 view .LVU5271
 22647              	.LBE11715:
 22648              	.LBE11714:
 22649              		.loc 43 114 5 view .LVU5272
 22650 0932 A6A8     		add	r0, sp, #664
 22651 0934 8549     		ldr	r1, .L853+104
 22652 0936 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22653              	.LVL1339:
 22654 093a 0C23     		movs	r3, #12
 22655 093c 4FAA     		add	r2, sp, #316
 22656 093e 4F94     		str	r4, [sp, #316]
 22657 0940 5093     		str	r3, [sp, #320]
 22658              	.LVL1340:
 22659              	.LBB11716:
 22660              	.LBI11716:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22661              		.loc 19 144 7 is_stmt 1 view .LVU5273
 22662              	.LBB11717:
 22663              	.LBI11717:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22664              		.loc 20 79 7 view .LVU5274
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22665              		.loc 20 79 7 is_stmt 0 view .LVU5275
 22666              	.LBE11717:
 22667              	.LBE11716:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 814


 22668              		.loc 43 114 5 view .LVU5276
 22669 0942 48AB     		add	r3, sp, #288
 22670 0944 8248     		ldr	r0, .L853+108
 22671 0946 06CA     		ldm	r2, {r1, r2}
 22672 0948 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 22673              	.LVL1341:
 22674              	.LBB11718:
 22675              	.LBI11718:
 22676              		.loc 19 162 7 is_stmt 1 view .LVU5277
 22677              	.LBB11719:
 22678              	.LBI11719:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22679              		.loc 20 89 7 view .LVU5278
 22680              	.L811:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22681              		.loc 20 89 7 is_stmt 0 view .LVU5279
 22682              	.LBE11719:
 22683              	.LBE11718:
 22684              		.loc 43 114 5 view .LVU5280
 22685 094c 183D     		subs	r5, r5, #24
 22686              	.LVL1342:
 22687              	.LBB11720:
 22688              	.LBI11720:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 22689              		.loc 18 657 7 is_stmt 1 view .LVU5281
 22690              	.LBB11721:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 22691              		.loc 18 658 19 is_stmt 0 view .LVU5282
 22692 094e 2846     		mov	r0, r5
 22693 0950 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 22694              	.LVL1343:
 22695              	.LBB11722:
 22696              	.LBI11722:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 22697              		.loc 18 150 14 is_stmt 1 view .LVU5283
 22698              	.LBB11723:
 22699              	.LBI11723:
 22700              		.loc 19 162 7 view .LVU5284
 22701              	.LBB11724:
 22702              	.LBI11724:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22703              		.loc 20 89 7 view .LVU5285
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22704              		.loc 20 89 7 is_stmt 0 view .LVU5286
 22705              	.LBE11724:
 22706              	.LBE11723:
 22707              	.LBE11722:
 22708              	.LBE11721:
 22709              	.LBE11720:
 22710              		.loc 43 114 5 view .LVU5287
 22711 0954 A542     		cmp	r5, r4
 22712 0956 F9D1     		bne	.L811
 22713              	.LVL1344:
 22714              	.LBB11725:
 22715              	.LBI11725:
 22716              		.loc 19 162 7 is_stmt 1 view .LVU5288
 22717              	.LBB11726:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 815


 22718              	.LBI11726:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22719              		.loc 20 89 7 view .LVU5289
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22720              		.loc 20 89 7 is_stmt 0 view .LVU5290
 22721              	.LBE11726:
 22722              	.LBE11725:
 22723              	.LBB11727:
 22724              	.LBI11727:
 22725              		.loc 19 162 7 is_stmt 1 view .LVU5291
 22726              	.LBB11728:
 22727              	.LBI11728:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22728              		.loc 20 89 7 view .LVU5292
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22729              		.loc 20 89 7 is_stmt 0 view .LVU5293
 22730              	.LBE11728:
 22731              	.LBE11727:
 22732              	.LBB11729:
 22733              	.LBI11729:
 22734              		.loc 19 162 7 is_stmt 1 view .LVU5294
 22735              	.LBB11730:
 22736              	.LBI11730:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22737              		.loc 20 89 7 view .LVU5295
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22738              		.loc 20 89 7 is_stmt 0 view .LVU5296
 22739              	.LBE11730:
 22740              	.LBE11729:
 22741              	.LBB11731:
 22742              	.LBI11731:
 22743              		.loc 19 162 7 is_stmt 1 view .LVU5297
 22744              	.LBB11732:
 22745              	.LBI11732:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22746              		.loc 20 89 7 view .LVU5298
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22747              		.loc 20 89 7 is_stmt 0 view .LVU5299
 22748              	.LBE11732:
 22749              	.LBE11731:
 22750              	.LBB11733:
 22751              	.LBI11733:
 22752              		.loc 19 162 7 is_stmt 1 view .LVU5300
 22753              	.LBB11734:
 22754              	.LBI11734:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22755              		.loc 20 89 7 view .LVU5301
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22756              		.loc 20 89 7 is_stmt 0 view .LVU5302
 22757              	.LBE11734:
 22758              	.LBE11733:
 22759              	.LBB11735:
 22760              	.LBI11735:
 22761              		.loc 19 162 7 is_stmt 1 view .LVU5303
 22762              	.LBB11736:
 22763              	.LBI11736:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 816


 22764              		.loc 20 89 7 view .LVU5304
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22765              		.loc 20 89 7 is_stmt 0 view .LVU5305
 22766              	.LBE11736:
 22767              	.LBE11735:
 22768              	.LBB11737:
 22769              	.LBI11737:
 22770              		.loc 19 162 7 is_stmt 1 view .LVU5306
 22771              	.LBB11738:
 22772              	.LBI11738:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22773              		.loc 20 89 7 view .LVU5307
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22774              		.loc 20 89 7 is_stmt 0 view .LVU5308
 22775              	.LBE11738:
 22776              	.LBE11737:
 22777              	.LBB11739:
 22778              	.LBI11739:
 22779              		.loc 19 162 7 is_stmt 1 view .LVU5309
 22780              	.LBB11740:
 22781              	.LBI11740:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22782              		.loc 20 89 7 view .LVU5310
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22783              		.loc 20 89 7 is_stmt 0 view .LVU5311
 22784              	.LBE11740:
 22785              	.LBE11739:
 22786              	.LBB11741:
 22787              	.LBI11741:
 22788              		.loc 19 162 7 is_stmt 1 view .LVU5312
 22789              	.LBB11742:
 22790              	.LBI11742:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22791              		.loc 20 89 7 view .LVU5313
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22792              		.loc 20 89 7 is_stmt 0 view .LVU5314
 22793              	.LBE11742:
 22794              	.LBE11741:
 22795              	.LBB11743:
 22796              	.LBI11743:
 22797              		.loc 19 162 7 is_stmt 1 view .LVU5315
 22798              	.LBB11744:
 22799              	.LBI11744:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22800              		.loc 20 89 7 view .LVU5316
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22801              		.loc 20 89 7 is_stmt 0 view .LVU5317
 22802              	.LBE11744:
 22803              	.LBE11743:
 22804              	.LBB11745:
 22805              	.LBI11745:
 22806              		.loc 19 162 7 is_stmt 1 view .LVU5318
 22807              	.LBB11746:
 22808              	.LBI11746:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22809              		.loc 20 89 7 view .LVU5319
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 817


 22810              		.loc 20 89 7 is_stmt 0 view .LVU5320
 22811              	.LBE11746:
 22812              	.LBE11745:
 22813              	.LBB11747:
 22814              	.LBI11747:
 22815              		.loc 19 162 7 is_stmt 1 view .LVU5321
 22816              	.LBB11748:
 22817              	.LBI11748:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22818              		.loc 20 89 7 view .LVU5322
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22819              		.loc 20 89 7 is_stmt 0 view .LVU5323
 22820              	.LBE11748:
 22821              	.LBE11747:
  98:chord.h       ****         "Triad",
 22822              		.loc 43 98 36 view .LVU5324
 22823 0958 624A     		ldr	r2, .L853
 22824              		.file 44 "arp.h"
   1:arp.h         **** /* 
   2:arp.h         ****  * Copyright (C) 2021 Evan Pernu - All Rights Reserved
   3:arp.h         ****  * You may use, distribute and modify this code under the
   4:arp.h         ****  * terms of the GNU AGPLv3 license.
   5:arp.h         ****  * 
   6:arp.h         ****  * You should have received a copy of the GNU AGPLv3 license with
   7:arp.h         ****  * this file (LICENSE.md). If not, please write to: evanpernu@gmail.com, 
   8:arp.h         ****  * or visit: https://www.gnu.org/licenses/agpl-3.0.en.html
   9:arp.h         ****  */
  10:arp.h         **** 
  11:arp.h         **** #include <string>
  12:arp.h         **** #include <vector>
  13:arp.h         **** 
  14:arp.h         **** #include "chord.h"
  15:arp.h         **** 
  16:arp.h         **** namespace jellybeans {
  17:arp.h         ****     class Arp {
  18:arp.h         ****     private:
  19:arp.h         ****         // Maximum arp steps
  20:arp.h         ****         int maxSteps;
  21:arp.h         **** 
  22:arp.h         ****         // Tracks the current position in arpTraversal
  23:arp.h         ****         int traversalIndex;
  24:arp.h         **** 
  25:arp.h         ****         // Current step index, 0 based
  26:arp.h         ****         int step;
  27:arp.h         **** 
  28:arp.h         ****         // If true, a new note is being played this frame
  29:arp.h         ****         bool newNote; 
  30:arp.h         **** 
  31:arp.h         ****         // The CV value currently being sent to Patches' DAC's output 1
  32:arp.h         ****         // This is stored so that it's only calculated upon a change
  33:arp.h         ****         float dacValue;
  34:arp.h         **** 
  35:arp.h         ****         // Number of clock pulses that have been received since the last reset
  36:arp.h         ****         //int clockCount;
  37:arp.h         **** 
  38:arp.h         ****         // The arp's clock division (step to the next note every X clock pulses)
  39:arp.h         ****         // TODO convert to int, out of say 256 notes per bar, so that we can use rapid pulses for f
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 818


  40:arp.h         ****         //int clockDiv;
  41:arp.h         **** 
  42:arp.h         ****         // Stores which arp note should be played at each next step.
  43:arp.h         ****         // Contains a list of indices of arpNotes
  44:arp.h         ****         std::vector<int> traversal;
  45:arp.h         **** 
  46:arp.h         ****         // Must be an element of mu::arpPatterns
  47:arp.h         ****         std::string pattern;
  48:arp.h         **** 
  49:arp.h         ****         // String representation of the arp
  50:arp.h         ****         std::string string;
  51:arp.h         **** 
  52:arp.h         ****         // Current root note
  53:arp.h         ****         //float root; //TODO delete?
  54:arp.h         **** 
  55:arp.h         ****         // Underlying chord
  56:arp.h         ****         DiatonicChord* chord;
  57:arp.h         **** 
  58:arp.h         ****         void resetState();
  59:arp.h         ****     public:
  60:arp.h         ****         Arp();// : Arp(8, DiatonicChord(1, 0, "Major", "Triad"), "Up", 1) {};
  61:arp.h         **** 
  62:arp.h         ****         // @param maxSteps
  63:arp.h         ****         // @param chord
  64:arp.h         ****         // @param pattern - must be an element of arpPatterns
  65:arp.h         ****         // @param clockDiv
  66:arp.h         ****         Arp(int, DiatonicChord*, std::string, int);
  67:arp.h         **** 
  68:arp.h         ****         // Intended to be called every time a clock pulse is received
  69:arp.h         ****         void onClockPulse();
  70:arp.h         ****     
  71:arp.h         ****         // Updates the arp traversal values based on the current pattern
  72:arp.h         ****         void updateTraversal();
  73:arp.h         **** 
  74:arp.h         ****         // Called every time the arp steps to the next note
  75:arp.h         ****         void updateStep();
  76:arp.h         **** 
  77:arp.h         ****         void updateString();
  78:arp.h         **** 
  79:arp.h         ****         std::string toString();
  80:arp.h         **** 
  81:arp.h         ****         // Returns true if there's a new note to consume.
  82:arp.h         ****         // Resets the "new note" bool, effectively telling the 
  83:arp.h         ****         // arp "I've consumed the note"
  84:arp.h         ****         bool getNewNote();
  85:arp.h         **** 
  86:arp.h         ****         float getDacValue();
  87:arp.h         **** 
  88:arp.h         ****         DiatonicChord* getChord();
  89:arp.h         **** 
  90:arp.h         ****         //void setMaxSteps(int);
  91:arp.h         ****         //void setChord(DiatonicChord*);
  92:arp.h         ****         void setPattern(std::string);
  93:arp.h         ****     };
  94:arp.h         **** 
  95:arp.h         ****     const std::vector<std::string> arpPatterns {
  96:arp.h         ****         "Up",
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 819


  97:arp.h         ****         "Down",
  98:arp.h         ****         "U+D In",
  99:arp.h         ****         "U+D Ex",
 100:arp.h         ****         "Random"
 101:arp.h         ****     };
 22825              		.loc 44 101 5 view .LVU5325
 22826 095a 82AD     		add	r5, sp, #520
  98:chord.h       ****         "Triad",
 22827              		.loc 43 98 36 view .LVU5326
 22828 095c 6949     		ldr	r1, .L853+32
 22829 095e 7C48     		ldr	r0, .L853+108
 22830 0960 FFF7FEFF 		bl	__aeabi_atexit
 22831              	.LVL1345:
 22832              	.LBB11749:
 22833              	.LBI11749:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22834              		.loc 19 144 7 is_stmt 1 view .LVU5327
 22835              	.LBB11750:
 22836              	.LBI11750:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22837              		.loc 20 79 7 view .LVU5328
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22838              		.loc 20 79 7 is_stmt 0 view .LVU5329
 22839              	.LBE11750:
 22840              	.LBE11749:
 22841              		.loc 44 101 5 view .LVU5330
 22842 0964 7B49     		ldr	r1, .L853+112
 22843 0966 2046     		mov	r0, r4
 22844 0968 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22845              	.LVL1346:
 22846              	.LBB11751:
 22847              	.LBI11751:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22848              		.loc 19 144 7 is_stmt 1 view .LVU5331
 22849              	.LBB11752:
 22850              	.LBI11752:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22851              		.loc 20 79 7 view .LVU5332
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22852              		.loc 20 79 7 is_stmt 0 view .LVU5333
 22853              	.LBE11752:
 22854              	.LBE11751:
 22855              		.loc 44 101 5 view .LVU5334
 22856 096c 7A49     		ldr	r1, .L853+116
 22857 096e 6AA8     		add	r0, sp, #424
 22858 0970 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22859              	.LVL1347:
 22860              	.LBB11753:
 22861              	.LBI11753:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22862              		.loc 19 144 7 is_stmt 1 view .LVU5335
 22863              	.LBB11754:
 22864              	.LBI11754:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22865              		.loc 20 79 7 view .LVU5336
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22866              		.loc 20 79 7 is_stmt 0 view .LVU5337
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 820


 22867              	.LBE11754:
 22868              	.LBE11753:
 22869              		.loc 44 101 5 view .LVU5338
 22870 0974 7949     		ldr	r1, .L853+120
 22871 0976 70A8     		add	r0, sp, #448
 22872 0978 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22873              	.LVL1348:
 22874              	.LBB11755:
 22875              	.LBI11755:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22876              		.loc 19 144 7 is_stmt 1 view .LVU5339
 22877              	.LBB11756:
 22878              	.LBI11756:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22879              		.loc 20 79 7 view .LVU5340
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22880              		.loc 20 79 7 is_stmt 0 view .LVU5341
 22881              	.LBE11756:
 22882              	.LBE11755:
 22883              		.loc 44 101 5 view .LVU5342
 22884 097c 7849     		ldr	r1, .L853+124
 22885 097e 76A8     		add	r0, sp, #472
 22886 0980 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22887              	.LVL1349:
 22888              	.LBB11757:
 22889              	.LBI11757:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22890              		.loc 19 144 7 is_stmt 1 view .LVU5343
 22891              	.LBB11758:
 22892              	.LBI11758:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22893              		.loc 20 79 7 view .LVU5344
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22894              		.loc 20 79 7 is_stmt 0 view .LVU5345
 22895              	.LBE11758:
 22896              	.LBE11757:
 22897              		.loc 44 101 5 view .LVU5346
 22898 0984 7749     		ldr	r1, .L853+128
 22899 0986 7CA8     		add	r0, sp, #496
 22900 0988 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22901              	.LVL1350:
 22902 098c 0523     		movs	r3, #5
 22903 098e 48AA     		add	r2, sp, #288
 22904 0990 4894     		str	r4, [sp, #288]
 22905 0992 4993     		str	r3, [sp, #292]
 22906              	.LVL1351:
 22907              	.LBB11759:
 22908              	.LBI11759:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22909              		.loc 19 144 7 is_stmt 1 view .LVU5347
 22910              	.LBB11760:
 22911              	.LBI11760:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22912              		.loc 20 79 7 view .LVU5348
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22913              		.loc 20 79 7 is_stmt 0 view .LVU5349
 22914              	.LBE11760:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 821


 22915              	.LBE11759:
 22916              		.loc 44 101 5 view .LVU5350
 22917 0994 41AB     		add	r3, sp, #260
 22918 0996 7448     		ldr	r0, .L853+132
 22919 0998 06CA     		ldm	r2, {r1, r2}
 22920 099a FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 22921              	.LVL1352:
 22922              	.LBB11761:
 22923              	.LBI11761:
 22924              		.loc 19 162 7 is_stmt 1 view .LVU5351
 22925              	.LBB11762:
 22926              	.LBI11762:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22927              		.loc 20 89 7 view .LVU5352
 22928              	.L812:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22929              		.loc 20 89 7 is_stmt 0 view .LVU5353
 22930              	.LBE11762:
 22931              	.LBE11761:
 22932              		.loc 44 101 5 view .LVU5354
 22933 099e 183D     		subs	r5, r5, #24
 22934              	.LVL1353:
 22935              	.LBB11763:
 22936              	.LBI11763:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 22937              		.loc 18 657 7 is_stmt 1 view .LVU5355
 22938              	.LBB11764:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 22939              		.loc 18 658 19 is_stmt 0 view .LVU5356
 22940 09a0 2846     		mov	r0, r5
 22941 09a2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 22942              	.LVL1354:
 22943              	.LBB11765:
 22944              	.LBI11765:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 22945              		.loc 18 150 14 is_stmt 1 view .LVU5357
 22946              	.LBB11766:
 22947              	.LBI11766:
 22948              		.loc 19 162 7 view .LVU5358
 22949              	.LBB11767:
 22950              	.LBI11767:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22951              		.loc 20 89 7 view .LVU5359
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22952              		.loc 20 89 7 is_stmt 0 view .LVU5360
 22953              	.LBE11767:
 22954              	.LBE11766:
 22955              	.LBE11765:
 22956              	.LBE11764:
 22957              	.LBE11763:
 22958              		.loc 44 101 5 view .LVU5361
 22959 09a6 A542     		cmp	r5, r4
 22960 09a8 F9D1     		bne	.L812
 22961              	.LVL1355:
 22962              	.LBB11768:
 22963              	.LBI11768:
 22964              		.loc 19 162 7 is_stmt 1 view .LVU5362
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 822


 22965              	.LBB11769:
 22966              	.LBI11769:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22967              		.loc 20 89 7 view .LVU5363
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22968              		.loc 20 89 7 is_stmt 0 view .LVU5364
 22969              	.LBE11769:
 22970              	.LBE11768:
 22971              	.LBB11770:
 22972              	.LBI11770:
 22973              		.loc 19 162 7 is_stmt 1 view .LVU5365
 22974              	.LBB11771:
 22975              	.LBI11771:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22976              		.loc 20 89 7 view .LVU5366
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22977              		.loc 20 89 7 is_stmt 0 view .LVU5367
 22978              	.LBE11771:
 22979              	.LBE11770:
 22980              	.LBB11772:
 22981              	.LBI11772:
 22982              		.loc 19 162 7 is_stmt 1 view .LVU5368
 22983              	.LBB11773:
 22984              	.LBI11773:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22985              		.loc 20 89 7 view .LVU5369
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22986              		.loc 20 89 7 is_stmt 0 view .LVU5370
 22987              	.LBE11773:
 22988              	.LBE11772:
 22989              	.LBB11774:
 22990              	.LBI11774:
 22991              		.loc 19 162 7 is_stmt 1 view .LVU5371
 22992              	.LBB11775:
 22993              	.LBI11775:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22994              		.loc 20 89 7 view .LVU5372
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22995              		.loc 20 89 7 is_stmt 0 view .LVU5373
 22996              	.LBE11775:
 22997              	.LBE11774:
 22998              	.LBB11776:
 22999              	.LBI11776:
 23000              		.loc 19 162 7 is_stmt 1 view .LVU5374
 23001              	.LBB11777:
 23002              	.LBI11777:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23003              		.loc 20 89 7 view .LVU5375
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23004              		.loc 20 89 7 is_stmt 0 view .LVU5376
 23005              	.LBE11777:
 23006              	.LBE11776:
  95:arp.h         ****         "Up",
 23007              		.loc 44 95 36 view .LVU5377
 23008 09aa 4E4A     		ldr	r2, .L853
 102:arp.h         **** 
 103:arp.h         ****     const std::vector<std::string> arpRhythms {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 823


 104:arp.h         ****         "None",
 105:arp.h         ****         "Sw 25%",
 106:arp.h         ****         "Sw 50%",
 107:arp.h         ****         "Sw 75%",
 108:arp.h         ****         "Sw 100%"
 109:arp.h         ****     };
 23009              		.loc 44 109 5 view .LVU5378
 23010 09ac 82AD     		add	r5, sp, #520
  95:arp.h         ****         "Up",
 23011              		.loc 44 95 36 view .LVU5379
 23012 09ae 5549     		ldr	r1, .L853+32
 23013 09b0 6D48     		ldr	r0, .L853+132
 23014 09b2 FFF7FEFF 		bl	__aeabi_atexit
 23015              	.LVL1356:
 23016              	.LBB11778:
 23017              	.LBI11778:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23018              		.loc 19 144 7 is_stmt 1 view .LVU5380
 23019              	.LBB11779:
 23020              	.LBI11779:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23021              		.loc 20 79 7 view .LVU5381
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23022              		.loc 20 79 7 is_stmt 0 view .LVU5382
 23023              	.LBE11779:
 23024              	.LBE11778:
 23025              		.loc 44 109 5 view .LVU5383
 23026 09b6 4E49     		ldr	r1, .L853+12
 23027 09b8 2046     		mov	r0, r4
 23028 09ba FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 23029              	.LVL1357:
 23030              	.LBB11780:
 23031              	.LBI11780:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23032              		.loc 19 144 7 is_stmt 1 view .LVU5384
 23033              	.LBB11781:
 23034              	.LBI11781:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23035              		.loc 20 79 7 view .LVU5385
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23036              		.loc 20 79 7 is_stmt 0 view .LVU5386
 23037              	.LBE11781:
 23038              	.LBE11780:
 23039              		.loc 44 109 5 view .LVU5387
 23040 09be 6B49     		ldr	r1, .L853+136
 23041 09c0 6AA8     		add	r0, sp, #424
 23042 09c2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 23043              	.LVL1358:
 23044              	.LBB11782:
 23045              	.LBI11782:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23046              		.loc 19 144 7 is_stmt 1 view .LVU5388
 23047              	.LBB11783:
 23048              	.LBI11783:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23049              		.loc 20 79 7 view .LVU5389
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 824


 23050              		.loc 20 79 7 is_stmt 0 view .LVU5390
 23051              	.LBE11783:
 23052              	.LBE11782:
 23053              		.loc 44 109 5 view .LVU5391
 23054 09c6 6A49     		ldr	r1, .L853+140
 23055 09c8 70A8     		add	r0, sp, #448
 23056 09ca FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 23057              	.LVL1359:
 23058              	.LBB11784:
 23059              	.LBI11784:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23060              		.loc 19 144 7 is_stmt 1 view .LVU5392
 23061              	.LBB11785:
 23062              	.LBI11785:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23063              		.loc 20 79 7 view .LVU5393
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23064              		.loc 20 79 7 is_stmt 0 view .LVU5394
 23065              	.LBE11785:
 23066              	.LBE11784:
 23067              		.loc 44 109 5 view .LVU5395
 23068 09ce 76A8     		add	r0, sp, #472
 23069 09d0 6849     		ldr	r1, .L853+144
 23070 09d2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 23071              	.LVL1360:
 23072              	.LBB11786:
 23073              	.LBI11786:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23074              		.loc 19 144 7 is_stmt 1 view .LVU5396
 23075              	.LBB11787:
 23076              	.LBI11787:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23077              		.loc 20 79 7 view .LVU5397
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23078              		.loc 20 79 7 is_stmt 0 view .LVU5398
 23079              	.LBE11787:
 23080              	.LBE11786:
 23081              		.loc 44 109 5 view .LVU5399
 23082 09d6 7CA8     		add	r0, sp, #496
 23083 09d8 6749     		ldr	r1, .L853+148
 23084 09da FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 23085              	.LVL1361:
 23086 09de 0523     		movs	r3, #5
 23087 09e0 41AA     		add	r2, sp, #260
 23088 09e2 4194     		str	r4, [sp, #260]
 23089 09e4 4293     		str	r3, [sp, #264]
 23090              	.LVL1362:
 23091              	.LBB11788:
 23092              	.LBI11788:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23093              		.loc 19 144 7 is_stmt 1 view .LVU5400
 23094              	.LBB11789:
 23095              	.LBI11789:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23096              		.loc 20 79 7 view .LVU5401
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23097              		.loc 20 79 7 is_stmt 0 view .LVU5402
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 825


 23098              	.LBE11789:
 23099              	.LBE11788:
 23100              		.loc 44 109 5 view .LVU5403
 23101 09e6 3AAB     		add	r3, sp, #232
 23102 09e8 6448     		ldr	r0, .L853+152
 23103 09ea 06CA     		ldm	r2, {r1, r2}
 23104 09ec FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 23105              	.LVL1363:
 23106              	.LBB11790:
 23107              	.LBI11790:
 23108              		.loc 19 162 7 is_stmt 1 view .LVU5404
 23109              	.LBB11791:
 23110              	.LBI11791:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23111              		.loc 20 89 7 view .LVU5405
 23112              	.L813:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23113              		.loc 20 89 7 is_stmt 0 view .LVU5406
 23114              	.LBE11791:
 23115              	.LBE11790:
 23116              		.loc 44 109 5 view .LVU5407
 23117 09f0 183D     		subs	r5, r5, #24
 23118              	.LVL1364:
 23119              	.LBB11792:
 23120              	.LBI11792:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 23121              		.loc 18 657 7 is_stmt 1 view .LVU5408
 23122              	.LBB11793:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 23123              		.loc 18 658 19 is_stmt 0 view .LVU5409
 23124 09f2 2846     		mov	r0, r5
 23125 09f4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 23126              	.LVL1365:
 23127              	.LBB11794:
 23128              	.LBI11794:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 23129              		.loc 18 150 14 is_stmt 1 view .LVU5410
 23130              	.LBB11795:
 23131              	.LBI11795:
 23132              		.loc 19 162 7 view .LVU5411
 23133              	.LBB11796:
 23134              	.LBI11796:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23135              		.loc 20 89 7 view .LVU5412
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23136              		.loc 20 89 7 is_stmt 0 view .LVU5413
 23137              	.LBE11796:
 23138              	.LBE11795:
 23139              	.LBE11794:
 23140              	.LBE11793:
 23141              	.LBE11792:
 23142              		.loc 44 109 5 view .LVU5414
 23143 09f8 A542     		cmp	r5, r4
 23144 09fa F9D1     		bne	.L813
 23145              	.LVL1366:
 23146              	.LBB11797:
 23147              	.LBI11797:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 826


 23148              		.loc 19 162 7 is_stmt 1 view .LVU5415
 23149              	.LBB11798:
 23150              	.LBI11798:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23151              		.loc 20 89 7 view .LVU5416
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23152              		.loc 20 89 7 is_stmt 0 view .LVU5417
 23153              	.LBE11798:
 23154              	.LBE11797:
 23155              	.LBB11799:
 23156              	.LBI11799:
 23157              		.loc 19 162 7 is_stmt 1 view .LVU5418
 23158              	.LBB11800:
 23159              	.LBI11800:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23160              		.loc 20 89 7 view .LVU5419
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23161              		.loc 20 89 7 is_stmt 0 view .LVU5420
 23162              	.LBE11800:
 23163              	.LBE11799:
 23164              	.LBB11801:
 23165              	.LBI11801:
 23166              		.loc 19 162 7 is_stmt 1 view .LVU5421
 23167              	.LBB11802:
 23168              	.LBI11802:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23169              		.loc 20 89 7 view .LVU5422
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23170              		.loc 20 89 7 is_stmt 0 view .LVU5423
 23171              	.LBE11802:
 23172              	.LBE11801:
 23173              	.LBB11803:
 23174              	.LBI11803:
 23175              		.loc 19 162 7 is_stmt 1 view .LVU5424
 23176              	.LBB11804:
 23177              	.LBI11804:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23178              		.loc 20 89 7 view .LVU5425
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23179              		.loc 20 89 7 is_stmt 0 view .LVU5426
 23180              	.LBE11804:
 23181              	.LBE11803:
 23182              	.LBB11805:
 23183              	.LBI11805:
 23184              		.loc 19 162 7 is_stmt 1 view .LVU5427
 23185              	.LBB11806:
 23186              	.LBI11806:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23187              		.loc 20 89 7 view .LVU5428
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23188              		.loc 20 89 7 is_stmt 0 view .LVU5429
 23189              	.LBE11806:
 23190              	.LBE11805:
 103:arp.h         ****         "None",
 23191              		.loc 44 103 36 view .LVU5430
 23192 09fc 394A     		ldr	r2, .L853
 23193              	.LBB11807:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 827


 23194              	.LBB11808:
 23195              	.LBB11809:
 23196              	.LBB11810:
 23197              	.LBB11811:
 23198              	.LBB11812:
 23199              	.LBB11813:
 23200              		.file 45 "../../libdaisy/src/per/qspi.h"
   1:../../libdaisy/src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libdaisy/src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libdaisy/src/per/qspi.h **** 
   4:../../libdaisy/src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libdaisy/src/per/qspi.h **** 
   6:../../libdaisy/src/per/qspi.h **** #include <cstdint>
   7:../../libdaisy/src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libdaisy/src/per/qspi.h **** 
   9:../../libdaisy/src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libdaisy/src/per/qspi.h ****     __attribute__((section( \
  11:../../libdaisy/src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libdaisy/src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libdaisy/src/per/qspi.h ****     __attribute__((section( \
  14:../../libdaisy/src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libdaisy/src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libdaisy/src/per/qspi.h ****     __attribute__((section( \
  17:../../libdaisy/src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libdaisy/src/per/qspi.h **** 
  19:../../libdaisy/src/per/qspi.h **** namespace daisy
  20:../../libdaisy/src/per/qspi.h **** {
  21:../../libdaisy/src/per/qspi.h **** /** @addtogroup serial
  22:../../libdaisy/src/per/qspi.h **** @{
  23:../../libdaisy/src/per/qspi.h **** */
  24:../../libdaisy/src/per/qspi.h **** 
  25:../../libdaisy/src/per/qspi.h **** /** 
  26:../../libdaisy/src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libdaisy/src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libdaisy/src/per/qspi.h ****     * IS25LP080D
  29:../../libdaisy/src/per/qspi.h **** */
  30:../../libdaisy/src/per/qspi.h **** class QSPIHandle
  31:../../libdaisy/src/per/qspi.h **** {
  32:../../libdaisy/src/per/qspi.h ****   public:
  33:../../libdaisy/src/per/qspi.h ****     enum Result
  34:../../libdaisy/src/per/qspi.h ****     {
  35:../../libdaisy/src/per/qspi.h ****         OK = 0,
  36:../../libdaisy/src/per/qspi.h ****         ERR
  37:../../libdaisy/src/per/qspi.h ****     };
  38:../../libdaisy/src/per/qspi.h **** 
  39:../../libdaisy/src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libdaisy/src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libdaisy/src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libdaisy/src/per/qspi.h ****          * 
  43:../../libdaisy/src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libdaisy/src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libdaisy/src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libdaisy/src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libdaisy/src/per/qspi.h ****          */
  48:../../libdaisy/src/per/qspi.h ****     enum Status
  49:../../libdaisy/src/per/qspi.h ****     {
  50:../../libdaisy/src/per/qspi.h ****         GOOD = 0,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 828


  51:../../libdaisy/src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libdaisy/src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libdaisy/src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libdaisy/src/per/qspi.h ****     };
  55:../../libdaisy/src/per/qspi.h **** 
  56:../../libdaisy/src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libdaisy/src/per/qspi.h ****     struct Config
  58:../../libdaisy/src/per/qspi.h ****     {
  59:../../libdaisy/src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libdaisy/src/per/qspi.h ****         enum Device
  61:../../libdaisy/src/per/qspi.h ****         {
  62:../../libdaisy/src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libdaisy/src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libdaisy/src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libdaisy/src/per/qspi.h ****         };
  66:../../libdaisy/src/per/qspi.h **** 
  67:../../libdaisy/src/per/qspi.h ****         /** 
  68:../../libdaisy/src/per/qspi.h ****         Modes of operation.
  69:../../libdaisy/src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libdaisy/src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libdaisy/src/per/qspi.h ****         possible in this mode. \n 
  72:../../libdaisy/src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libdaisy/src/per/qspi.h ****         */
  74:../../libdaisy/src/per/qspi.h ****         enum Mode
  75:../../libdaisy/src/per/qspi.h ****         {
  76:../../libdaisy/src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libdaisy/src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libdaisy/src/per/qspi.h ****             MODE_LAST,
  79:../../libdaisy/src/per/qspi.h ****         };
  80:../../libdaisy/src/per/qspi.h **** 
  81:../../libdaisy/src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libdaisy/src/per/qspi.h ****         struct
  83:../../libdaisy/src/per/qspi.h ****         {
  84:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libdaisy/src/per/qspi.h ****         } pin_config;
  91:../../libdaisy/src/per/qspi.h **** 
  92:../../libdaisy/src/per/qspi.h ****         Device device;
  93:../../libdaisy/src/per/qspi.h ****         Mode   mode;
  94:../../libdaisy/src/per/qspi.h ****     };
  95:../../libdaisy/src/per/qspi.h **** 
  96:../../libdaisy/src/per/qspi.h ****     /** 
  97:../../libdaisy/src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libdaisy/src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libdaisy/src/per/qspi.h ****         */
 101:../../libdaisy/src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libdaisy/src/per/qspi.h **** 
 103:../../libdaisy/src/per/qspi.h ****     /** Returns the current config. */
 104:../../libdaisy/src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libdaisy/src/per/qspi.h **** 
 106:../../libdaisy/src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libdaisy/src/per/qspi.h ****     // would make manually calling it unnecessary.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 829


 108:../../libdaisy/src/per/qspi.h ****     /** 
 109:../../libdaisy/src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libdaisy/src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libdaisy/src/per/qspi.h ****         */
 113:../../libdaisy/src/per/qspi.h ****     Result DeInit();
 114:../../libdaisy/src/per/qspi.h **** 
 115:../../libdaisy/src/per/qspi.h ****     /** 
 116:../../libdaisy/src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libdaisy/src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libdaisy/src/per/qspi.h ****         \param address Address to write to
 119:../../libdaisy/src/per/qspi.h ****         \param size Buffer size
 120:../../libdaisy/src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libdaisy/src/per/qspi.h ****         */
 123:../../libdaisy/src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libdaisy/src/per/qspi.h **** 
 125:../../libdaisy/src/per/qspi.h ****     /** 
 126:../../libdaisy/src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libdaisy/src/per/qspi.h ****         \param address Address to write to
 128:../../libdaisy/src/per/qspi.h ****         \param size Buffer size
 129:../../libdaisy/src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libdaisy/src/per/qspi.h ****         */
 132:../../libdaisy/src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libdaisy/src/per/qspi.h **** 
 134:../../libdaisy/src/per/qspi.h ****     /** 
 135:../../libdaisy/src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libdaisy/src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libdaisy/src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libdaisy/src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libdaisy/src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libdaisy/src/per/qspi.h ****         */
 142:../../libdaisy/src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libdaisy/src/per/qspi.h **** 
 144:../../libdaisy/src/per/qspi.h ****     /**  
 145:../../libdaisy/src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libdaisy/src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libdaisy/src/per/qspi.h ****         \param addr Address of sector to erase
 148:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libdaisy/src/per/qspi.h ****         */
 150:../../libdaisy/src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libdaisy/src/per/qspi.h **** 
 152:../../libdaisy/src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libdaisy/src/per/qspi.h ****      *  \returns Status
 154:../../libdaisy/src/per/qspi.h ****      */
 155:../../libdaisy/src/per/qspi.h ****     Status GetStatus();
 156:../../libdaisy/src/per/qspi.h **** 
 157:../../libdaisy/src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libdaisy/src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libdaisy/src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libdaisy/src/per/qspi.h ****      * 
 161:../../libdaisy/src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libdaisy/src/per/qspi.h ****      *                many bytes into the memory
 163:../../libdaisy/src/per/qspi.h ****     */
 164:../../libdaisy/src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 830


 165:../../libdaisy/src/per/qspi.h **** 
 166:../../libdaisy/src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 23201              		.loc 45 166 34 view .LVU5431
 23202 09fe 0024     		movs	r4, #0
 23203              	.LBE11813:
 23204              	.LBE11812:
 23205              	.LBE11811:
 23206              	.LBE11810:
 23207              	.LBE11809:
 23208              	.LBE11808:
 23209              	.LBE11807:
 103:arp.h         ****         "None",
 23210              		.loc 44 103 36 view .LVU5432
 23211 0a00 4049     		ldr	r1, .L853+32
 23212 0a02 5E48     		ldr	r0, .L853+152
 23213 0a04 FFF7FEFF 		bl	__aeabi_atexit
 23214              	.LVL1367:
 23215              	.LBB11894:
 23216              	.LBI11807:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 23217              		.loc 3 39 5 is_stmt 1 view .LVU5433
 23218              	.LBB11891:
 23219              	.LBB11835:
 23220              	.LBI11809:
  21:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 23221              		.loc 9 21 5 view .LVU5434
 23222              	.LBB11832:
 23223              	.LBB11818:
 23224              	.LBI11811:
 23225              		.loc 45 166 5 view .LVU5435
 23226              		.loc 45 166 5 is_stmt 0 view .LVU5436
 23227              	.LBE11818:
 23228              	.LBB11819:
 23229              	.LBI11819:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 23230              		.loc 13 62 5 is_stmt 1 view .LVU5437
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 23231              		.loc 13 62 5 is_stmt 0 view .LVU5438
 23232              	.LBE11819:
 23233              	.LBB11822:
 23234              	.LBI11822:
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 23235              		.loc 12 84 5 is_stmt 1 view .LVU5439
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 23236              		.loc 12 84 5 is_stmt 0 view .LVU5440
 23237              	.LBE11822:
 23238              	.LBB11823:
 23239              	.LBI11823:
 23240              		.file 46 "../../libdaisy/src/per/dac.h"
   1:../../libdaisy/src/per/dac.h **** #pragma once
   2:../../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../../libdaisy/src/per/dac.h **** 
   5:../../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../../libdaisy/src/per/dac.h **** 
   7:../../libdaisy/src/per/dac.h **** namespace daisy
   8:../../libdaisy/src/per/dac.h **** {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 831


   9:../../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../../libdaisy/src/per/dac.h ****  ** 
  11:../../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../../libdaisy/src/per/dac.h ****  **
  14:../../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../../libdaisy/src/per/dac.h ****  **
  16:../../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../../libdaisy/src/per/dac.h ****  ***/
  20:../../libdaisy/src/per/dac.h **** class DacHandle
  21:../../libdaisy/src/per/dac.h **** {
  22:../../libdaisy/src/per/dac.h ****   public:
  23:../../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../../libdaisy/src/per/dac.h ****     enum class Result
  25:../../libdaisy/src/per/dac.h ****     {
  26:../../libdaisy/src/per/dac.h ****         OK,
  27:../../libdaisy/src/per/dac.h ****         ERR,
  28:../../libdaisy/src/per/dac.h ****     };
  29:../../libdaisy/src/per/dac.h **** 
  30:../../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../../libdaisy/src/per/dac.h ****     enum class Channel
  32:../../libdaisy/src/per/dac.h ****     {
  33:../../libdaisy/src/per/dac.h ****         ONE,
  34:../../libdaisy/src/per/dac.h ****         TWO,
  35:../../libdaisy/src/per/dac.h ****         BOTH,
  36:../../libdaisy/src/per/dac.h ****     };
  37:../../libdaisy/src/per/dac.h **** 
  38:../../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../../libdaisy/src/per/dac.h ****      **
  40:../../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../../libdaisy/src/per/dac.h ****      **
  42:../../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../../libdaisy/src/per/dac.h ****      ***/
  45:../../libdaisy/src/per/dac.h ****     enum class Mode
  46:../../libdaisy/src/per/dac.h ****     {
  47:../../libdaisy/src/per/dac.h ****         POLLING,
  48:../../libdaisy/src/per/dac.h ****         DMA,
  49:../../libdaisy/src/per/dac.h ****     };
  50:../../libdaisy/src/per/dac.h **** 
  51:../../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../../libdaisy/src/per/dac.h ****      ***/
  55:../../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../../libdaisy/src/per/dac.h ****     {
  57:../../libdaisy/src/per/dac.h ****         BITS_8,
  58:../../libdaisy/src/per/dac.h ****         BITS_12
  59:../../libdaisy/src/per/dac.h ****     };
  60:../../libdaisy/src/per/dac.h **** 
  61:../../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../../libdaisy/src/per/dac.h ****     {
  64:../../libdaisy/src/per/dac.h ****         ENABLED,
  65:../../libdaisy/src/per/dac.h ****         DISABLED,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 832


  66:../../libdaisy/src/per/dac.h ****     };
  67:../../libdaisy/src/per/dac.h **** 
  68:../../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../../libdaisy/src/per/dac.h ****     struct Config
  70:../../libdaisy/src/per/dac.h ****     {
  71:../../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../../libdaisy/src/per/dac.h **** 
  77:../../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../../libdaisy/src/per/dac.h ****     };
  82:../../libdaisy/src/per/dac.h **** 
  83:../../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 23241              		.loc 46 83 5 is_stmt 1 view .LVU5441
 23242              		.loc 46 83 5 is_stmt 0 view .LVU5442
 23243              	.LBE11823:
 23244              	.LBB11826:
 23245              	.LBI11826:
  40:../../libdaisy/src/hid/usb.h **** 
 23246              		.loc 11 40 5 is_stmt 1 view .LVU5443
  40:../../libdaisy/src/hid/usb.h **** 
 23247              		.loc 11 40 5 is_stmt 0 view .LVU5444
 23248              	.LBE11826:
 23249              	.LBB11827:
 23250              	.LBI11827:
  77:../../libdaisy/src/sys/system.h ****     ~System() {}
 23251              		.loc 10 77 5 is_stmt 1 view .LVU5445
  77:../../libdaisy/src/sys/system.h ****     ~System() {}
 23252              		.loc 10 77 5 is_stmt 0 view .LVU5446
 23253              	.LBE11827:
 23254              	.LBE11832:
 23255              	.LBE11835:
 23256              	.LBB11836:
 23257              	.LBI11836:
  20:../../libdaisy/src/hid/encoder.h ****     ~Encoder() {}
 23258              		.loc 7 20 5 is_stmt 1 view .LVU5447
 23259              	.LBB11837:
 23260              	.LBB11838:
 23261              	.LBI11838:
  41:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 23262              		.loc 8 41 5 view .LVU5448
  41:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 23263              		.loc 8 41 5 is_stmt 0 view .LVU5449
 23264              	.LBE11838:
 23265              	.LBE11837:
 23266              	.LBE11836:
 23267              	.LBE11891:
 23268              	.LBE11894:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 23269              		.loc 3 39 18 is_stmt 1 view .LVU5450
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 23270              		.loc 3 39 18 view .LVU5451
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 833


 23271              	.LBB11895:
 23272              	.LBB11892:
 23273              	.LBB11839:
 23274              	.LBI11839:
  83:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 23275              		.loc 6 83 5 view .LVU5452
 23276              	.LBB11840:
 23277              	.LBB11841:
 23278              	.LBI11841:
 23279              		.file 47 "../../libdaisy/src/per/uart.h"
   1:../../libdaisy/src/per/uart.h **** /* 
   2:../../libdaisy/src/per/uart.h **** TODO
   3:../../libdaisy/src/per/uart.h **** - UART1 defaults to DMA, add flexible config for DMA on all periphs
   4:../../libdaisy/src/per/uart.h **** - Transmit function improvements.
   5:../../libdaisy/src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   6:../../libdaisy/src/per/uart.h **** */
   7:../../libdaisy/src/per/uart.h **** 
   8:../../libdaisy/src/per/uart.h **** #pragma once
   9:../../libdaisy/src/per/uart.h **** #ifndef DSY_UART_H
  10:../../libdaisy/src/per/uart.h **** #define DSY_UART_H /**< macro */
  11:../../libdaisy/src/per/uart.h **** #include "daisy_core.h"
  12:../../libdaisy/src/per/uart.h **** 
  13:../../libdaisy/src/per/uart.h **** 
  14:../../libdaisy/src/per/uart.h **** namespace daisy
  15:../../libdaisy/src/per/uart.h **** {
  16:../../libdaisy/src/per/uart.h **** /** @addtogroup serial
  17:../../libdaisy/src/per/uart.h ****     @{
  18:../../libdaisy/src/per/uart.h ****     */
  19:../../libdaisy/src/per/uart.h **** 
  20:../../libdaisy/src/per/uart.h **** /** 
  21:../../libdaisy/src/per/uart.h ****     Uart Peripheral
  22:../../libdaisy/src/per/uart.h ****     @author shensley
  23:../../libdaisy/src/per/uart.h ****     @date March 2020
  24:../../libdaisy/src/per/uart.h ****     */
  25:../../libdaisy/src/per/uart.h **** class UartHandler
  26:../../libdaisy/src/per/uart.h **** {
  27:../../libdaisy/src/per/uart.h ****   public:
  28:../../libdaisy/src/per/uart.h ****     struct Config
  29:../../libdaisy/src/per/uart.h ****     {
  30:../../libdaisy/src/per/uart.h ****         enum class Peripheral
  31:../../libdaisy/src/per/uart.h ****         {
  32:../../libdaisy/src/per/uart.h ****             USART_1,
  33:../../libdaisy/src/per/uart.h ****             USART_2,
  34:../../libdaisy/src/per/uart.h ****             USART_3,
  35:../../libdaisy/src/per/uart.h ****             UART_4,
  36:../../libdaisy/src/per/uart.h ****             UART_5,
  37:../../libdaisy/src/per/uart.h ****             USART_6,
  38:../../libdaisy/src/per/uart.h ****             UART_7,
  39:../../libdaisy/src/per/uart.h ****             UART_8,
  40:../../libdaisy/src/per/uart.h ****             LPUART_1,
  41:../../libdaisy/src/per/uart.h ****         };
  42:../../libdaisy/src/per/uart.h **** 
  43:../../libdaisy/src/per/uart.h ****         enum class StopBits
  44:../../libdaisy/src/per/uart.h ****         {
  45:../../libdaisy/src/per/uart.h ****             BITS_0_5,
  46:../../libdaisy/src/per/uart.h ****             BITS_1,
  47:../../libdaisy/src/per/uart.h ****             BITS_1_5,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 834


  48:../../libdaisy/src/per/uart.h ****             BITS_2,
  49:../../libdaisy/src/per/uart.h ****         };
  50:../../libdaisy/src/per/uart.h **** 
  51:../../libdaisy/src/per/uart.h ****         enum class Parity
  52:../../libdaisy/src/per/uart.h ****         {
  53:../../libdaisy/src/per/uart.h ****             NONE,
  54:../../libdaisy/src/per/uart.h ****             EVEN,
  55:../../libdaisy/src/per/uart.h ****             ODD,
  56:../../libdaisy/src/per/uart.h ****         };
  57:../../libdaisy/src/per/uart.h **** 
  58:../../libdaisy/src/per/uart.h ****         enum class Mode
  59:../../libdaisy/src/per/uart.h ****         {
  60:../../libdaisy/src/per/uart.h ****             RX,
  61:../../libdaisy/src/per/uart.h ****             TX,
  62:../../libdaisy/src/per/uart.h ****             TX_RX,
  63:../../libdaisy/src/per/uart.h ****         };
  64:../../libdaisy/src/per/uart.h **** 
  65:../../libdaisy/src/per/uart.h ****         enum class WordLength
  66:../../libdaisy/src/per/uart.h ****         {
  67:../../libdaisy/src/per/uart.h ****             BITS_7,
  68:../../libdaisy/src/per/uart.h ****             BITS_8,
  69:../../libdaisy/src/per/uart.h ****             BITS_9,
  70:../../libdaisy/src/per/uart.h ****         };
  71:../../libdaisy/src/per/uart.h **** 
  72:../../libdaisy/src/per/uart.h ****         struct
  73:../../libdaisy/src/per/uart.h ****         {
  74:../../libdaisy/src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  75:../../libdaisy/src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  76:../../libdaisy/src/per/uart.h ****         } pin_config;        /**< & */
  77:../../libdaisy/src/per/uart.h **** 
  78:../../libdaisy/src/per/uart.h ****         Peripheral periph;
  79:../../libdaisy/src/per/uart.h ****         StopBits   stopbits;
  80:../../libdaisy/src/per/uart.h ****         Parity     parity;
  81:../../libdaisy/src/per/uart.h ****         Mode       mode;
  82:../../libdaisy/src/per/uart.h ****         WordLength wordlength;
  83:../../libdaisy/src/per/uart.h ****         uint32_t   baudrate;
  84:../../libdaisy/src/per/uart.h ****     };
  85:../../libdaisy/src/per/uart.h **** 
  86:../../libdaisy/src/per/uart.h **** 
  87:../../libdaisy/src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 23280              		.loc 47 87 5 view .LVU5453
 23281              		.loc 47 87 5 is_stmt 0 view .LVU5454
 23282              	.LBE11841:
 23283              	.LBB11844:
 23284              	.LBI11844:
 23285              		.file 48 "../../libdaisy/src/util/ringbuffer.h"
   1:../../libdaisy/src/util/ringbuffer.h **** #pragma once
   2:../../libdaisy/src/util/ringbuffer.h **** #ifndef DSY_RINGBUFFER_H
   3:../../libdaisy/src/util/ringbuffer.h **** #define DSY_RINGBUFFER_H
   4:../../libdaisy/src/util/ringbuffer.h **** 
   5:../../libdaisy/src/util/ringbuffer.h **** #include <algorithm>
   6:../../libdaisy/src/util/ringbuffer.h **** 
   7:../../libdaisy/src/util/ringbuffer.h **** namespace daisy
   8:../../libdaisy/src/util/ringbuffer.h **** {
   9:../../libdaisy/src/util/ringbuffer.h **** /** @addtogroup utility
  10:../../libdaisy/src/util/ringbuffer.h ****     @{
  11:../../libdaisy/src/util/ringbuffer.h **** */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 835


  12:../../libdaisy/src/util/ringbuffer.h **** 
  13:../../libdaisy/src/util/ringbuffer.h **** /**
  14:../../libdaisy/src/util/ringbuffer.h **** Utility Ring Buffer \n 
  15:../../libdaisy/src/util/ringbuffer.h **** imported from pichenettes/stmlib
  16:../../libdaisy/src/util/ringbuffer.h **** */
  17:../../libdaisy/src/util/ringbuffer.h **** template <typename T, size_t size>
  18:../../libdaisy/src/util/ringbuffer.h **** class RingBuffer
  19:../../libdaisy/src/util/ringbuffer.h **** {
  20:../../libdaisy/src/util/ringbuffer.h ****   public:
  21:../../libdaisy/src/util/ringbuffer.h ****     RingBuffer() {}
 23286              		.loc 48 21 5 is_stmt 1 view .LVU5455
 23287              		.loc 48 21 5 is_stmt 0 view .LVU5456
 23288              	.LBE11844:
 23289              	.LBB11845:
 23290              	.LBI11845:
  85:../../libdaisy/src/hid/midi.h **** 
  86:../../libdaisy/src/hid/midi.h ****     struct Config
 23291              		.loc 6 86 12 is_stmt 1 view .LVU5457
 23292              	.LBB11846:
 23293              	.LBI11846:
  34:../../libdaisy/src/hid/midi.h ****         {
 23294              		.loc 6 34 9 view .LVU5458
 23295              	.LBB11847:
 23296              	.LBB11848:
  36:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 23297              		.loc 6 36 13 view .LVU5459
  37:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 23298              		.loc 6 37 13 view .LVU5460
  38:../../libdaisy/src/hid/midi.h ****         }
 23299              		.loc 6 38 13 view .LVU5461
  38:../../libdaisy/src/hid/midi.h ****         }
 23300              		.loc 6 38 13 is_stmt 0 view .LVU5462
 23301              	.LBE11848:
 23302              	.LBE11847:
 23303              	.LBE11846:
 23304              	.LBE11845:
 23305              	.LBB11855:
 23306              	.LBI11855:
  25:../../libdaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
 23307              		.loc 6 25 5 is_stmt 1 view .LVU5463
 23308              	.LBB11856:
 23309              	.LBI11856:
 23310              		.loc 47 87 5 view .LVU5464
 23311              		.loc 47 87 5 is_stmt 0 view .LVU5465
 23312              	.LBE11856:
 23313              	.LBE11855:
 23314              	.LBE11840:
 23315              	.LBE11839:
 23316              	.LBB11867:
 23317              	.LBI11867:
  16:../../libdaisy/src/hid/disp/oled_display.h ****     virtual ~OledDisplay() {}
 23318              		.loc 4 16 5 is_stmt 1 view .LVU5466
 23319              	.LBB11868:
 23320              	.LBB11869:
 23321              	.LBB11870:
 23322              	.LBI11870:
 218:../../libdaisy/src/hid/disp/display.h ****     virtual ~OneBitGraphicsDisplayImpl() {}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 836


 23323              		.loc 5 218 5 view .LVU5467
 23324              	.LBB11871:
 23325              	.LBI11871:
  22:../../libdaisy/src/hid/disp/display.h ****     virtual ~OneBitGraphicsDisplay() {}
 23326              		.loc 5 22 5 view .LVU5468
 23327              	.LBE11871:
 23328              	.LBE11870:
 23329              	.LBE11869:
 23330              	.LBE11868:
 23331              	.LBE11867:
 23332              	.LBB11884:
 23333              	.LBB11833:
 23334              	.LBB11828:
 23335              	.LBB11816:
 23336              	.LBB11814:
 23337              		.loc 45 166 34 is_stmt 0 view .LVU5469
 23338 0a08 5D48     		ldr	r0, .L853+156
 23339              	.LBE11814:
 23340              	.LBE11816:
 23341              	.LBE11828:
 23342              	.LBE11833:
 23343              	.LBE11884:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 23344              		.loc 3 39 18 view .LVU5470
 23345 0a0a 5E4A     		ldr	r2, .L853+160
 23346              	.LBB11885:
 23347              	.LBB11864:
 23348              	.LBB11860:
 23349              	.LBB11853:
 23350              	.LBB11851:
 23351              	.LBB11849:
  36:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 23352              		.loc 6 36 20 view .LVU5471
 23353 0a0c 00F51043 		add	r3, r0, #36864
 23354              	.LBE11849:
 23355              	.LBE11851:
 23356              	.LBE11853:
 23357              	.LBE11860:
 23358              	.LBE11864:
 23359              	.LBE11885:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 23360              		.loc 3 39 18 view .LVU5472
 23361 0a10 5D4E     		ldr	r6, .L853+164
 23362              	.LBE11892:
 23363              	.LBE11895:
  39:Jellybeans.cpp **** DaisyPatch patch;
 23364              		.loc 17 39 12 view .LVU5473
 23365 0a12 5E49     		ldr	r1, .L853+168
 23366              	.LBB11896:
 23367              	.LBB11893:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 23368              		.loc 3 39 18 view .LVU5474
 23369 0a14 C3F89021 		str	r2, [r3, #400]
 23370 0a18 5D4A     		ldr	r2, .L853+172
 23371              	.LBB11886:
 23372              	.LBB11865:
 23373              	.LBB11861:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 837


 23374              	.LBB11854:
 23375              	.LBB11852:
 23376              	.LBB11850:
  36:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 23377              		.loc 6 36 20 view .LVU5475
 23378 0a1a C3F88C41 		str	r4, [r3, #396]
 23379              	.LBE11850:
 23380              	.LBE11852:
 23381              	.LBE11854:
 23382              	.LBE11861:
 23383              	.LBB11862:
 23384              	.LBB11859:
 23385              	.LBB11857:
 23386              	.LBB11858:
 23387              		.loc 47 87 35 view .LVU5476
 23388 0a1e C3F89441 		str	r4, [r3, #404]
 23389              	.LBE11858:
 23390              	.LBE11857:
 23391              	.LBE11859:
 23392              	.LBE11862:
 23393              	.LBE11865:
 23394              	.LBE11886:
 23395              	.LBB11887:
 23396              	.LBB11882:
 23397              	.LBB11880:
 23398              	.LBB11872:
 23399              	.LBB11873:
 23400              	.LBB11874:
 23401              	.LBB11875:
 23402              	.LBB11876:
 23403              		.file 49 "../../libdaisy/src/per/spi.h"
   1:../../libdaisy/src/per/spi.h **** #pragma once
   2:../../libdaisy/src/per/spi.h **** #ifndef DSY_SPI_H
   3:../../libdaisy/src/per/spi.h **** #define DSY_SPI_H
   4:../../libdaisy/src/per/spi.h **** 
   5:../../libdaisy/src/per/spi.h **** #include "daisy_core.h"
   6:../../libdaisy/src/per/spi.h **** 
   7:../../libdaisy/src/per/spi.h **** /* TODO:
   8:../../libdaisy/src/per/spi.h **** - Add documentation
   9:../../libdaisy/src/per/spi.h **** - Add reception
  10:../../libdaisy/src/per/spi.h **** - Add IT
  11:../../libdaisy/src/per/spi.h **** - Add DMA
  12:../../libdaisy/src/per/spi.h **** */
  13:../../libdaisy/src/per/spi.h **** 
  14:../../libdaisy/src/per/spi.h **** namespace daisy
  15:../../libdaisy/src/per/spi.h **** {
  16:../../libdaisy/src/per/spi.h **** /** @addtogroup serial
  17:../../libdaisy/src/per/spi.h **** @{
  18:../../libdaisy/src/per/spi.h **** */
  19:../../libdaisy/src/per/spi.h **** 
  20:../../libdaisy/src/per/spi.h **** /**  Handler for serial peripheral interface */
  21:../../libdaisy/src/per/spi.h **** class SpiHandle
  22:../../libdaisy/src/per/spi.h **** {
  23:../../libdaisy/src/per/spi.h ****   public:
  24:../../libdaisy/src/per/spi.h ****     struct Config
  25:../../libdaisy/src/per/spi.h ****     {
  26:../../libdaisy/src/per/spi.h ****         enum class Peripheral
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 838


  27:../../libdaisy/src/per/spi.h ****         {
  28:../../libdaisy/src/per/spi.h ****             SPI_1,
  29:../../libdaisy/src/per/spi.h ****             SPI_2,
  30:../../libdaisy/src/per/spi.h ****             SPI_3,
  31:../../libdaisy/src/per/spi.h ****             SPI_4,
  32:../../libdaisy/src/per/spi.h ****             SPI_5,
  33:../../libdaisy/src/per/spi.h ****             SPI_6,
  34:../../libdaisy/src/per/spi.h ****         };
  35:../../libdaisy/src/per/spi.h **** 
  36:../../libdaisy/src/per/spi.h ****         enum class Mode
  37:../../libdaisy/src/per/spi.h ****         {
  38:../../libdaisy/src/per/spi.h ****             MASTER,
  39:../../libdaisy/src/per/spi.h ****             SLAVE,
  40:../../libdaisy/src/per/spi.h ****         };
  41:../../libdaisy/src/per/spi.h **** 
  42:../../libdaisy/src/per/spi.h ****         enum class Direction
  43:../../libdaisy/src/per/spi.h ****         {
  44:../../libdaisy/src/per/spi.h ****             TWO_LINES,
  45:../../libdaisy/src/per/spi.h ****             TWO_LINES_TX_ONLY,
  46:../../libdaisy/src/per/spi.h ****             TWO_LINES_RX_ONLY,
  47:../../libdaisy/src/per/spi.h ****             ONE_LINE,
  48:../../libdaisy/src/per/spi.h ****         };
  49:../../libdaisy/src/per/spi.h **** 
  50:../../libdaisy/src/per/spi.h ****         enum class ClockPolarity
  51:../../libdaisy/src/per/spi.h ****         {
  52:../../libdaisy/src/per/spi.h ****             LOW,
  53:../../libdaisy/src/per/spi.h ****             HIGH,
  54:../../libdaisy/src/per/spi.h ****         };
  55:../../libdaisy/src/per/spi.h **** 
  56:../../libdaisy/src/per/spi.h ****         enum class ClockPhase
  57:../../libdaisy/src/per/spi.h ****         {
  58:../../libdaisy/src/per/spi.h ****             ONE_EDGE,
  59:../../libdaisy/src/per/spi.h ****             TWO_EDGE,
  60:../../libdaisy/src/per/spi.h ****         };
  61:../../libdaisy/src/per/spi.h **** 
  62:../../libdaisy/src/per/spi.h ****         enum class NSS
  63:../../libdaisy/src/per/spi.h ****         {
  64:../../libdaisy/src/per/spi.h ****             SOFT,
  65:../../libdaisy/src/per/spi.h ****             HARD_INPUT,
  66:../../libdaisy/src/per/spi.h ****             HARD_OUTPUT,
  67:../../libdaisy/src/per/spi.h ****         };
  68:../../libdaisy/src/per/spi.h **** 
  69:../../libdaisy/src/per/spi.h ****         enum class BaudPrescaler
  70:../../libdaisy/src/per/spi.h ****         {
  71:../../libdaisy/src/per/spi.h ****             PS_2,
  72:../../libdaisy/src/per/spi.h ****             PS_4,
  73:../../libdaisy/src/per/spi.h ****             PS_8,
  74:../../libdaisy/src/per/spi.h ****             PS_16,
  75:../../libdaisy/src/per/spi.h ****             PS_32,
  76:../../libdaisy/src/per/spi.h ****             PS_64,
  77:../../libdaisy/src/per/spi.h ****             PS_128,
  78:../../libdaisy/src/per/spi.h ****             PS_256,
  79:../../libdaisy/src/per/spi.h ****         };
  80:../../libdaisy/src/per/spi.h **** 
  81:../../libdaisy/src/per/spi.h ****         struct
  82:../../libdaisy/src/per/spi.h ****         {
  83:../../libdaisy/src/per/spi.h ****             dsy_gpio_pin sclk; /**< & */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 839


  84:../../libdaisy/src/per/spi.h ****             dsy_gpio_pin miso; /**< & */
  85:../../libdaisy/src/per/spi.h ****             dsy_gpio_pin mosi; /**< & */
  86:../../libdaisy/src/per/spi.h ****             dsy_gpio_pin nss;  /**< & */
  87:../../libdaisy/src/per/spi.h ****         } pin_config;
  88:../../libdaisy/src/per/spi.h **** 
  89:../../libdaisy/src/per/spi.h ****         Peripheral    periph;
  90:../../libdaisy/src/per/spi.h ****         Mode          mode;
  91:../../libdaisy/src/per/spi.h ****         Direction     direction;
  92:../../libdaisy/src/per/spi.h ****         unsigned long datasize;
  93:../../libdaisy/src/per/spi.h ****         ClockPolarity clock_polarity;
  94:../../libdaisy/src/per/spi.h ****         ClockPhase    clock_phase;
  95:../../libdaisy/src/per/spi.h ****         NSS           nss;
  96:../../libdaisy/src/per/spi.h ****         BaudPrescaler baud_prescaler;
  97:../../libdaisy/src/per/spi.h ****     };
  98:../../libdaisy/src/per/spi.h **** 
  99:../../libdaisy/src/per/spi.h ****     SpiHandle() : pimpl_(nullptr) {}
 23404              		.loc 49 99 33 view .LVU5477
 23405 0a22 C3F8A841 		str	r4, [r3, #424]
 23406              	.LBE11876:
 23407              	.LBE11875:
 23408              	.LBE11874:
 23409              	.LBE11873:
 23410              	.LBE11872:
 23411              	.LBE11880:
 23412              	.LBE11882:
 23413              	.LBE11887:
 23414              	.LBB11888:
 23415              	.LBB11834:
 23416              	.LBB11829:
 23417              	.LBB11817:
 23418              	.LBB11815:
 23419              		.loc 45 166 34 view .LVU5478
 23420 0a26 0460     		str	r4, [r0]
 23421              	.LBE11815:
 23422              	.LBE11817:
 23423              	.LBE11829:
 23424              	.LBB11830:
 23425              	.LBB11820:
 23426              	.LBB11821:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 23427              		.loc 13 62 35 view .LVU5479
 23428 0a28 4461     		str	r4, [r0, #20]
 23429              	.LBE11821:
 23430              	.LBE11820:
 23431              	.LBE11830:
 23432              	.LBB11831:
 23433              	.LBB11824:
 23434              	.LBB11825:
 23435              		.loc 46 83 33 view .LVU5480
 23436 0a2a 0462     		str	r4, [r0, #32]
 23437              	.LBE11825:
 23438              	.LBE11824:
 23439              	.LBE11831:
 23440              	.LBE11834:
 23441              	.LBE11888:
 23442              	.LBB11889:
 23443              	.LBB11866:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 840


 23444              	.LBB11863:
 23445              	.LBB11842:
 23446              	.LBB11843:
 23447              		.loc 47 87 35 view .LVU5481
 23448 0a2c C0F8E440 		str	r4, [r0, #228]
 23449              	.LBE11843:
 23450              	.LBE11842:
 23451              	.LBE11863:
 23452              	.LBE11866:
 23453              	.LBE11889:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 23454              		.loc 3 39 18 view .LVU5482
 23455 0a30 C3E96662 		strd	r6, r2, [r3, #408]
 23456              	.LVL1368:
 23457              	.LBB11890:
 23458              	.LBB11883:
 23459              	.LBB11881:
  16:../../libdaisy/src/hid/disp/oled_display.h ****     virtual ~OledDisplay() {}
 23460              		.loc 4 16 19 view .LVU5483
 23461 0a34 574A     		ldr	r2, .L853+176
 23462 0a36 584E     		ldr	r6, .L853+180
 23463 0a38 C3F8A021 		str	r2, [r3, #416]
 23464              	.LVL1369:
 23465              	.LBB11879:
 23466              	.LBI11872:
 132:../../libdaisy/src/dev/oled_ssd130x.h **** {
 23467              		.loc 14 132 7 is_stmt 1 view .LVU5484
 23468              	.LBB11878:
 23469              	.LBI11873:
  60:../../libdaisy/src/dev/oled_ssd130x.h **** {
 23470              		.loc 14 60 7 view .LVU5485
 23471              	.LBB11877:
 23472              	.LBI11874:
 23473              		.loc 49 99 5 view .LVU5486
 23474              		.loc 49 99 5 is_stmt 0 view .LVU5487
 23475              	.LBE11877:
 23476              	.LBE11878:
 23477              	.LBE11879:
 23478              	.LBE11881:
 23479              	.LBE11883:
 23480              	.LBE11890:
 23481              	.LBE11893:
 23482              	.LBE11896:
  39:Jellybeans.cpp **** DaisyPatch patch;
 23483              		.loc 17 39 12 view .LVU5488
 23484 0a3c 294A     		ldr	r2, .L853
 23485 0a3e FFF7FEFF 		bl	__aeabi_atexit
 23486              	.LVL1370:
 23487              	.LBB11897:
 23488              	.LBI11897:
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 23489              		.loc 18 431 7 is_stmt 1 view .LVU5489
 23490              	.LBB11898:
 23491              	.LBB11899:
 23492              	.LBI11899:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 23493              		.loc 18 190 7 view .LVU5490
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 841


 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 23494              		.loc 18 190 7 is_stmt 0 view .LVU5491
 23495              	.LBE11899:
 23496              	.LBB11900:
 23497              	.LBI11900:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23498              		.loc 19 144 7 is_stmt 1 view .LVU5492
 23499              	.LBB11901:
 23500              	.LBI11901:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23501              		.loc 20 79 7 view .LVU5493
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23502              		.loc 20 79 7 is_stmt 0 view .LVU5494
 23503              	.LBE11901:
 23504              	.LBE11900:
 23505              	.LBB11902:
 23506              	.LBI11902:
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 23507              		.loc 18 159 2 is_stmt 1 view .LVU5495
 23508              	.LBB11903:
 23509              	.LBB11904:
 23510              	.LBB11905:
 23511              	.LBI11905:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 23512              		.loc 34 101 5 view .LVU5496
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 23513              		.loc 34 101 5 is_stmt 0 view .LVU5497
 23514              	.LBE11905:
 23515              	.LBB11906:
 23516              	.LBI11906:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 23517              		.loc 19 147 7 is_stmt 1 view .LVU5498
 23518              	.LBB11907:
 23519              	.LBI11907:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23520              		.loc 20 82 7 view .LVU5499
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23521              		.loc 20 82 7 is_stmt 0 view .LVU5500
 23522              	.LBE11907:
 23523              	.LBE11906:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 23524              		.loc 18 160 46 view .LVU5501
 23525 0a42 5648     		ldr	r0, .L853+184
 23526              	.LBE11904:
 23527              	.LBE11903:
 23528              	.LBE11902:
 23529              	.LBE11898:
 23530              	.LBE11897:
  43:Jellybeans.cpp **** std::string debugString;
 23531              		.loc 17 43 13 view .LVU5502
 23532 0a44 274A     		ldr	r2, .L853
 23533              	.LBB11927:
 23534              	.LBB11925:
 23535              	.LBB11912:
 23536              	.LBB11910:
 23537              	.LBB11908:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 842


 23538              		.loc 18 160 46 view .LVU5503
 23539 0a46 00F10803 		add	r3, r0, #8
 23540              	.LBE11908:
 23541              	.LBE11910:
 23542              	.LBE11912:
 23543              	.LBE11925:
 23544              	.LBE11927:
  43:Jellybeans.cpp **** std::string debugString;
 23545              		.loc 17 43 13 view .LVU5504
 23546 0a4a 5549     		ldr	r1, .L853+188
 23547              	.LBB11928:
 23548              	.LBB11926:
 23549              	.LBB11913:
 23550              	.LBB11914:
 23551              	.LBB11915:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 23552              		.loc 18 183 26 view .LVU5505
 23553 0a4c 4460     		str	r4, [r0, #4]
 23554              	.LBE11915:
 23555              	.LBE11914:
 23556              	.LBB11916:
 23557              	.LBB11917:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 23558              		.loc 21 322 14 view .LVU5506
 23559 0a4e 0472     		strb	r4, [r0, #8]
 23560 0a50 3446     		mov	r4, r6
 23561              	.LBE11917:
 23562              	.LBE11916:
 23563              	.LBE11913:
 23564              	.LBB11921:
 23565              	.LBB11911:
 23566              	.LBB11909:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 23567              		.loc 18 160 46 view .LVU5507
 23568 0a52 0360     		str	r3, [r0]
 23569              	.LVL1371:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 23570              		.loc 18 160 46 view .LVU5508
 23571              	.LBE11909:
 23572              	.LBE11911:
 23573              	.LBE11921:
 23574              	.LBB11922:
 23575              	.LBI11922:
 23576              		.loc 19 162 7 is_stmt 1 view .LVU5509
 23577              	.LBB11923:
 23578              	.LBI11923:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23579              		.loc 20 89 7 view .LVU5510
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23580              		.loc 20 89 7 is_stmt 0 view .LVU5511
 23581              	.LBE11923:
 23582              	.LBE11922:
 23583              	.LBB11924:
 23584              	.LBI11913:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 23585              		.loc 18 214 7 is_stmt 1 view .LVU5512
 23586              	.LBB11919:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 843


 23587              	.LBI11914:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 23588              		.loc 18 182 7 view .LVU5513
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 23589              		.loc 18 182 7 is_stmt 0 view .LVU5514
 23590              	.LBE11919:
 23591              	.LBB11920:
 23592              	.LBI11916:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 23593              		.loc 21 321 7 is_stmt 1 view .LVU5515
 23594              	.LBB11918:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 23595              		.loc 21 322 9 view .LVU5516
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 23596              		.loc 21 322 9 is_stmt 0 view .LVU5517
 23597              	.LBE11918:
 23598              	.LBE11920:
 23599              	.LBE11924:
 23600              	.LBE11926:
 23601              	.LBE11928:
  43:Jellybeans.cpp **** std::string debugString;
 23602              		.loc 17 43 13 view .LVU5518
 23603 0a54 FFF7FEFF 		bl	__aeabi_atexit
 23604              	.LVL1372:
  49:Jellybeans.cpp **** const FontDef font = Font_7x10;
 23605              		.loc 17 49 15 view .LVU5519
 23606 0a58 524A     		ldr	r2, .L853+192
 23607 0a5a 534B     		ldr	r3, .L853+196
 23608 0a5c 92E80300 		ldm	r2, {r0, r1}
 23609 0a60 83E80300 		stm	r3, {r0, r1}
 23610              	.LVL1373:
 23611              	.LBB11929:
 23612              	.LBI11929:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23613              		.loc 19 144 7 is_stmt 1 view .LVU5520
 23614              	.LBB11930:
 23615              	.LBI11930:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23616              		.loc 20 79 7 view .LVU5521
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23617              		.loc 20 79 7 is_stmt 0 view .LVU5522
 23618              	.LBE11930:
 23619              	.LBE11929:
  68:Jellybeans.cpp **** };
 23620              		.loc 17 68 1 view .LVU5523
 23621 0a64 2846     		mov	r0, r5
 23622 0a66 5149     		ldr	r1, .L853+200
 23623 0a68 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 23624              	.LVL1374:
 23625              	.LBB11931:
 23626              	.LBI11931:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23627              		.loc 19 144 7 is_stmt 1 view .LVU5524
 23628              	.LBB11932:
 23629              	.LBI11932:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23630              		.loc 20 79 7 view .LVU5525
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 844


  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23631              		.loc 20 79 7 is_stmt 0 view .LVU5526
 23632              	.LBE11932:
 23633              	.LBE11931:
  68:Jellybeans.cpp **** };
 23634              		.loc 17 68 1 view .LVU5527
 23635 0a6c 5049     		ldr	r1, .L853+204
 23636 0a6e 6AA8     		add	r0, sp, #424
 23637 0a70 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 23638              	.LVL1375:
 23639              	.LBB11933:
 23640              	.LBI11933:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23641              		.loc 19 144 7 is_stmt 1 view .LVU5528
 23642              	.LBB11934:
 23643              	.LBI11934:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23644              		.loc 20 79 7 view .LVU5529
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23645              		.loc 20 79 7 is_stmt 0 view .LVU5530
 23646              	.LBE11934:
 23647              	.LBE11933:
  68:Jellybeans.cpp **** };
 23648              		.loc 17 68 1 view .LVU5531
 23649 0a74 4F49     		ldr	r1, .L853+208
 23650 0a76 70A8     		add	r0, sp, #448
 23651 0a78 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 23652              	.LVL1376:
 23653 0a7c 0322     		movs	r2, #3
 23654 0a7e 33AB     		add	r3, sp, #204
 23655 0a80 3A95     		str	r5, [sp, #232]
 23656 0a82 3B92     		str	r2, [sp, #236]
 23657              	.LVL1377:
 23658              	.LBB11935:
 23659              	.LBI11935:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23660              		.loc 19 144 7 is_stmt 1 view .LVU5532
 23661              	.LBB11936:
 23662              	.LBI11936:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23663              		.loc 20 79 7 view .LVU5533
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23664              		.loc 20 79 7 is_stmt 0 view .LVU5534
 23665              	.LBE11936:
 23666              	.LBE11935:
  68:Jellybeans.cpp **** };
 23667              		.loc 17 68 1 view .LVU5535
 23668 0a84 3AAA     		add	r2, sp, #232
 23669 0a86 4C48     		ldr	r0, .L853+212
 23670 0a88 06CA     		ldm	r2, {r1, r2}
 23671 0a8a FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 23672              	.LVL1378:
 23673              	.LBB11937:
 23674              	.LBI11937:
 23675              		.loc 19 162 7 is_stmt 1 view .LVU5536
 23676              	.LBB11938:
 23677              	.LBI11938:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 845


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23678              		.loc 20 89 7 view .LVU5537
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23679              		.loc 20 89 7 is_stmt 0 view .LVU5538
 23680              	.LBE11938:
 23681              	.LBE11937:
 23682              	.LBB11939:
 23683              	.LBI11939:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 23684              		.loc 18 657 7 is_stmt 1 view .LVU5539
 23685              	.LBB11940:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 23686              		.loc 18 658 19 is_stmt 0 view .LVU5540
 23687 0a8e 70A8     		add	r0, sp, #448
 23688              	.LVL1379:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 23689              		.loc 18 658 19 view .LVU5541
 23690 0a90 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 23691              	.LVL1380:
 23692              	.LBB11941:
 23693              	.LBI11941:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 23694              		.loc 18 150 14 is_stmt 1 view .LVU5542
 23695              	.LBB11942:
 23696              	.LBI11942:
 23697              		.loc 19 162 7 view .LVU5543
 23698              	.LBB11943:
 23699              	.LBI11943:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23700              		.loc 20 89 7 view .LVU5544
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23701              		.loc 20 89 7 is_stmt 0 view .LVU5545
 23702              	.LBE11943:
 23703              	.LBE11942:
 23704              	.LBE11941:
 23705              	.LBE11940:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 23706              		.loc 18 657 7 is_stmt 1 view .LVU5546
 23707              	.LBB11950:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 23708              		.loc 18 658 19 is_stmt 0 view .LVU5547
 23709 0a94 6AA8     		add	r0, sp, #424
 23710              	.LVL1381:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 23711              		.loc 18 658 19 view .LVU5548
 23712 0a96 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 23713              	.LVL1382:
 23714              	.LBB11948:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 23715              		.loc 18 150 14 is_stmt 1 view .LVU5549
 23716              	.LBB11946:
 23717              		.loc 19 162 7 view .LVU5550
 23718              	.LBB11944:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23719              		.loc 20 89 7 view .LVU5551
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23720              		.loc 20 89 7 is_stmt 0 view .LVU5552
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 846


 23721              	.LBE11944:
 23722              	.LBE11946:
 23723              	.LBE11948:
 23724              	.LBE11950:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 23725              		.loc 18 657 7 is_stmt 1 view .LVU5553
 23726              	.LBB11951:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 23727              		.loc 18 658 19 is_stmt 0 view .LVU5554
 23728 0a9a 2846     		mov	r0, r5
 23729 0a9c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 23730              	.LVL1383:
 23731              	.LBB11949:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 23732              		.loc 18 150 14 is_stmt 1 view .LVU5555
 23733              	.LBB11947:
 23734              		.loc 19 162 7 view .LVU5556
 23735              	.LBB11945:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23736              		.loc 20 89 7 view .LVU5557
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23737              		.loc 20 89 7 is_stmt 0 view .LVU5558
 23738              	.LBE11945:
 23739              	.LBE11947:
 23740              	.LBE11949:
 23741              	.LBE11951:
 23742              	.LBE11939:
 23743              	.LBB11952:
 23744              	.LBI11952:
 23745              		.loc 19 162 7 is_stmt 1 view .LVU5559
 23746              	.LBB11953:
 23747              	.LBI11953:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23748              		.loc 20 89 7 view .LVU5560
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23749              		.loc 20 89 7 is_stmt 0 view .LVU5561
 23750              	.LBE11953:
 23751              	.LBE11952:
 23752              	.LBB11954:
 23753              	.LBI11954:
 23754              		.loc 19 162 7 is_stmt 1 view .LVU5562
 23755              	.LBB11955:
 23756              	.LBI11955:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23757              		.loc 20 89 7 view .LVU5563
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23758              		.loc 20 89 7 is_stmt 0 view .LVU5564
 23759              	.LBE11955:
 23760              	.LBE11954:
 23761              	.LBB11956:
 23762              	.LBI11956:
 23763              		.loc 19 162 7 is_stmt 1 view .LVU5565
 23764              	.LBB11957:
 23765              	.LBI11957:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23766              		.loc 20 89 7 view .LVU5566
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 847


 23767              		.loc 20 89 7 is_stmt 0 view .LVU5567
 23768              	.LBE11957:
 23769              	.LBE11956:
  64:Jellybeans.cpp **** const std::vector<std::string> allOctaves {
 23770              		.loc 17 64 32 view .LVU5568
 23771 0aa0 104A     		ldr	r2, .L853
 23772 0aa2 1849     		ldr	r1, .L853+32
 23773 0aa4 06F54875 		add	r5, r6, #800
 23774 0aa8 4348     		ldr	r0, .L853+212
 23775 0aaa FFF7FEFF 		bl	__aeabi_atexit
 23776              	.LVL1384:
 23777              	.LBB11958:
 23778              	.LBI11958:
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
 23779              		.loc 24 94 12 is_stmt 1 view .LVU5569
 23780              	.LBB11959:
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
 23781              		.loc 24 94 12 view .LVU5570
 23782              	.L814:
 23783 0aae 2046     		mov	r0, r4
 23784 0ab0 5034     		adds	r4, r4, #80
 23785 0ab2 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1Ev
 23786              	.LVL1385:
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
 23787              		.loc 24 94 12 view .LVU5571
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
 23788              		.loc 24 94 12 view .LVU5572
 23789 0ab6 AC42     		cmp	r4, r5
 23790 0ab8 F9D1     		bne	.L814
 23791              	.LVL1386:
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
 23792              		.loc 24 94 12 is_stmt 0 view .LVU5573
 23793              	.LBE11959:
 23794              	.LBE11958:
  78:Jellybeans.cpp **** std::array<MenuItem, 10> menuItems;
 23795              		.loc 17 78 26 view .LVU5574
 23796 0aba 0A4A     		ldr	r2, .L853
 23797 0abc 3F49     		ldr	r1, .L853+216
 23798 0abe 3648     		ldr	r0, .L853+180
 23799 0ac0 FFF7FEFF 		bl	__aeabi_atexit
 23800              	.LVL1387:
 23801              	.LBB11960:
 23802              	.LBI11960:
 23803              		.loc 24 185 7 is_stmt 1 view .LVU5575
 23804              	.LBB11961:
 23805              	.LBI11961:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23806              		.loc 24 55 7 view .LVU5576
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23807              		.loc 24 55 7 is_stmt 0 view .LVU5577
 23808              	.LBE11961:
 23809              	.LBE11960:
  82:Jellybeans.cpp **** MenuItem *mDivision  = &menuItems[1];
 23810              		.loc 17 82 11 view .LVU5578
 23811 0ac4 3E4B     		ldr	r3, .L853+220
 23812 0ac6 3F4A     		ldr	r2, .L853+224
  83:Jellybeans.cpp **** MenuItem *mVoicing   = &menuItems[2];
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 848


 23813              		.loc 17 83 11 view .LVU5579
 23814 0ac8 03F15004 		add	r4, r3, #80
  85:Jellybeans.cpp **** MenuItem *mTonic     = &menuItems[4];
 23815              		.loc 17 85 11 view .LVU5580
 23816 0acc 03F1F005 		add	r5, r3, #240
  82:Jellybeans.cpp **** MenuItem *mDivision  = &menuItems[1];
 23817              		.loc 17 82 11 view .LVU5581
 23818 0ad0 1360     		str	r3, [r2]
  81:Jellybeans.cpp **** MenuItem *mPattern   = &menuItems[0];
 23819              		.loc 17 81 11 view .LVU5582
 23820 0ad2 3D49     		ldr	r1, .L853+228
  83:Jellybeans.cpp **** MenuItem *mVoicing   = &menuItems[2];
 23821              		.loc 17 83 11 view .LVU5583
 23822 0ad4 3D48     		ldr	r0, .L853+232
  85:Jellybeans.cpp **** MenuItem *mTonic     = &menuItems[4];
 23823              		.loc 17 85 11 view .LVU5584
 23824 0ad6 3E4A     		ldr	r2, .L853+236
  83:Jellybeans.cpp **** MenuItem *mVoicing   = &menuItems[2];
 23825              		.loc 17 83 11 view .LVU5585
 23826 0ad8 0460     		str	r4, [r0]
  84:Jellybeans.cpp **** MenuItem *mInversion = &menuItems[3];
 23827              		.loc 17 84 11 view .LVU5586
 23828 0ada 03F1A004 		add	r4, r3, #160
  85:Jellybeans.cpp **** MenuItem *mTonic     = &menuItems[4];
 23829              		.loc 17 85 11 view .LVU5587
 23830 0ade 1560     		str	r5, [r2]
 23831 0ae0 78E0     		b	.L854
 23832              	.L855:
 23833 0ae2 00BF     		.align	2
 23834              	.L853:
 23835 0ae4 00000000 		.word	__dso_handle
 23836 0ae8 00000000 		.word	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ES
 23837 0aec 00000000 		.word	.LANCHOR27
 23838 0af0 58010000 		.word	.LC98
 23839 0af4 60010000 		.word	.LC99
 23840 0af8 68010000 		.word	.LC100
 23841 0afc 70010000 		.word	.LC101
 23842 0b00 00000000 		.word	.LANCHOR19
 23843 0b04 00000000 		.word	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 23844 0b08 78010000 		.word	.LC102
 23845 0b0c 7C010000 		.word	.LC103
 23846 0b10 80010000 		.word	.LC104
 23847 0b14 84010000 		.word	.LC105
 23848 0b18 88010000 		.word	.LC106
 23849 0b1c 00000000 		.word	.LANCHOR17
 23850 0b20 8C010000 		.word	.LC107
 23851 0b24 94010000 		.word	.LC108
 23852 0b28 9C010000 		.word	.LC109
 23853 0b2c A0010000 		.word	.LC110
 23854 0b30 A8010000 		.word	.LC111
 23855 0b34 B0010000 		.word	.LC112
 23856 0b38 B8010000 		.word	.LC113
 23857 0b3c BC010000 		.word	.LC114
 23858 0b40 C4010000 		.word	.LC115
 23859 0b44 CC010000 		.word	.LC116
 23860 0b48 D4010000 		.word	.LC117
 23861 0b4c DC010000 		.word	.LC118
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 849


 23862 0b50 00000000 		.word	.LANCHOR18
 23863 0b54 E4010000 		.word	.LC119
 23864 0b58 E8010000 		.word	.LC120
 23865 0b5c F0010000 		.word	.LC121
 23866 0b60 F8010000 		.word	.LC122
 23867 0b64 00020000 		.word	.LC123
 23868 0b68 00000000 		.word	.LANCHOR16
 23869 0b6c 08020000 		.word	.LC124
 23870 0b70 10020000 		.word	.LC125
 23871 0b74 18020000 		.word	.LC126
 23872 0b78 20020000 		.word	.LC127
 23873 0b7c 00000000 		.word	.LANCHOR22
 23874 0b80 00000000 		.word	patch
 23875 0b84 01070106 		.word	100730625
 23876 0b88 80707FF0 		.word	-260083584
 23877 0b8c 00000000 		.word	_ZN5daisy10DaisyPatchD1Ev
 23878 0b90 0FF80700 		.word	522255
 23879 0b94 08000000 		.word	_ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE+8
 23880 0b98 00000000 		.word	.LANCHOR4
 23881 0b9c 00000000 		.word	.LANCHOR14
 23882 0ba0 00000000 		.word	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 23883 0ba4 00000000 		.word	Font_7x10
 23884 0ba8 00000000 		.word	.LANCHOR13
 23885 0bac 28020000 		.word	.LC128
 23886 0bb0 2C020000 		.word	.LC129
 23887 0bb4 30020000 		.word	.LC130
 23888 0bb8 00000000 		.word	.LANCHOR23
 23889 0bbc 00000000 		.word	_ZNSt5arrayIN10jellybeans8MenuItemELj10EED1Ev
 23890 0bc0 50000000 		.word	.LANCHOR4+80
 23891 0bc4 00000000 		.word	.LANCHOR28
 23892 0bc8 00000000 		.word	.LANCHOR1
 23893 0bcc 00000000 		.word	.LANCHOR15
 23894 0bd0 00000000 		.word	.LANCHOR30
 23895              	.L854:
  81:Jellybeans.cpp **** MenuItem *mPattern   = &menuItems[0];
 23896              		.loc 17 81 11 view .LVU5588
 23897 0bd4 0E60     		str	r6, [r1]
 23898              	.LVL1388:
 23899              	.LBB11962:
 23900              	.LBI11962:
 23901              		.loc 24 185 7 is_stmt 1 view .LVU5589
 23902              	.LBB11963:
 23903              	.LBI11963:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23904              		.loc 24 55 7 view .LVU5590
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23905              		.loc 24 55 7 is_stmt 0 view .LVU5591
 23906              	.LBE11963:
 23907              	.LBE11962:
 23908              	.LBB11964:
 23909              	.LBI11964:
 23910              		.loc 24 185 7 is_stmt 1 view .LVU5592
 23911              	.LBB11965:
 23912              	.LBI11965:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23913              		.loc 24 55 7 view .LVU5593
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 850


 23914              		.loc 24 55 7 is_stmt 0 view .LVU5594
 23915              	.LBE11965:
 23916              	.LBE11964:
 23917              	.LBB11966:
 23918              	.LBI11966:
 23919              		.loc 24 185 7 is_stmt 1 view .LVU5595
 23920              	.LBB11967:
 23921              	.LBI11967:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23922              		.loc 24 55 7 view .LVU5596
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23923              		.loc 24 55 7 is_stmt 0 view .LVU5597
 23924              	.LBE11967:
 23925              	.LBE11966:
  86:Jellybeans.cpp **** MenuItem *mScale     = &menuItems[5];
 23926              		.loc 17 86 11 view .LVU5598
 23927 0bd6 03F5A071 		add	r1, r3, #320
  84:Jellybeans.cpp **** MenuItem *mInversion = &menuItems[3];
 23928              		.loc 17 84 11 view .LVU5599
 23929 0bda 2248     		ldr	r0, .L856
  86:Jellybeans.cpp **** MenuItem *mScale     = &menuItems[5];
 23930              		.loc 17 86 11 view .LVU5600
 23931 0bdc 224A     		ldr	r2, .L856+4
  84:Jellybeans.cpp **** MenuItem *mInversion = &menuItems[3];
 23932              		.loc 17 84 11 view .LVU5601
 23933 0bde 0460     		str	r4, [r0]
 23934              	.LVL1389:
 23935              	.LBB11968:
 23936              	.LBI11968:
 23937              		.loc 24 185 7 is_stmt 1 view .LVU5602
 23938              	.LBB11969:
 23939              	.LBI11969:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23940              		.loc 24 55 7 view .LVU5603
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23941              		.loc 24 55 7 is_stmt 0 view .LVU5604
 23942              	.LBE11969:
 23943              	.LBE11968:
 23944              	.LBB11970:
 23945              	.LBI11970:
 23946              		.loc 24 185 7 is_stmt 1 view .LVU5605
 23947              	.LBB11971:
 23948              	.LBI11971:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23949              		.loc 24 55 7 view .LVU5606
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23950              		.loc 24 55 7 is_stmt 0 view .LVU5607
 23951              	.LBE11971:
 23952              	.LBE11970:
  87:Jellybeans.cpp **** MenuItem *mRhythm    = &menuItems[6];
 23953              		.loc 17 87 11 view .LVU5608
 23954 0be0 03F5C870 		add	r0, r3, #400
  86:Jellybeans.cpp **** MenuItem *mScale     = &menuItems[5];
 23955              		.loc 17 86 11 view .LVU5609
 23956 0be4 1160     		str	r1, [r2]
 23957              	.LVL1390:
 23958              	.LBB11972:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 851


 23959              	.LBI11972:
 23960              		.loc 24 185 7 is_stmt 1 view .LVU5610
 23961              	.LBB11973:
 23962              	.LBI11973:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23963              		.loc 24 55 7 view .LVU5611
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23964              		.loc 24 55 7 is_stmt 0 view .LVU5612
 23965              	.LBE11973:
 23966              	.LBE11972:
  88:Jellybeans.cpp **** MenuItem *mOctRng    = &menuItems[7];
 23967              		.loc 17 88 11 view .LVU5613
 23968 0be6 03F5F071 		add	r1, r3, #480
  87:Jellybeans.cpp **** MenuItem *mRhythm    = &menuItems[6];
 23969              		.loc 17 87 11 view .LVU5614
 23970 0bea 204A     		ldr	r2, .L856+8
  89:Jellybeans.cpp **** MenuItem *mOct       = &menuItems[8];
 23971              		.loc 17 89 11 view .LVU5615
 23972 0bec 03F50C74 		add	r4, r3, #560
  90:Jellybeans.cpp **** MenuItem *mClockDiv  = &menuItems[9];
 23973              		.loc 17 90 11 view .LVU5616
 23974 0bf0 03F52073 		add	r3, r3, #640
  87:Jellybeans.cpp **** MenuItem *mRhythm    = &menuItems[6];
 23975              		.loc 17 87 11 view .LVU5617
 23976 0bf4 1060     		str	r0, [r2]
 23977              	.LVL1391:
 23978              	.LBB11974:
 23979              	.LBI11974:
 23980              		.loc 24 185 7 is_stmt 1 view .LVU5618
 23981              	.LBB11975:
 23982              	.LBI11975:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23983              		.loc 24 55 7 view .LVU5619
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23984              		.loc 24 55 7 is_stmt 0 view .LVU5620
 23985              	.LBE11975:
 23986              	.LBE11974:
  88:Jellybeans.cpp **** MenuItem *mOctRng    = &menuItems[7];
 23987              		.loc 17 88 11 view .LVU5621
 23988 0bf6 1E4A     		ldr	r2, .L856+12
  89:Jellybeans.cpp **** MenuItem *mOct       = &menuItems[8];
 23989              		.loc 17 89 11 view .LVU5622
 23990 0bf8 1E48     		ldr	r0, .L856+16
  88:Jellybeans.cpp **** MenuItem *mOctRng    = &menuItems[7];
 23991              		.loc 17 88 11 view .LVU5623
 23992 0bfa 1160     		str	r1, [r2]
 23993              	.LVL1392:
 23994              	.LBB11976:
 23995              	.LBI11976:
 23996              		.loc 24 185 7 is_stmt 1 view .LVU5624
 23997              	.LBB11977:
 23998              	.LBI11977:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 23999              		.loc 24 55 7 view .LVU5625
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 24000              		.loc 24 55 7 is_stmt 0 view .LVU5626
 24001              	.LBE11977:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 852


 24002              	.LBE11976:
  90:Jellybeans.cpp **** MenuItem *mClockDiv  = &menuItems[9];
 24003              		.loc 17 90 11 view .LVU5627
 24004 0bfc 1E49     		ldr	r1, .L856+20
  89:Jellybeans.cpp **** MenuItem *mOct       = &menuItems[8];
 24005              		.loc 17 89 11 view .LVU5628
 24006 0bfe 0460     		str	r4, [r0]
 24007              	.LVL1393:
 24008              	.LBB11978:
 24009              	.LBI11978:
 24010              		.loc 24 185 7 is_stmt 1 view .LVU5629
 24011              	.LBB11979:
 24012              	.LBI11979:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 24013              		.loc 24 55 7 view .LVU5630
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 24014              		.loc 24 55 7 is_stmt 0 view .LVU5631
 24015              	.LBE11979:
 24016              	.LBE11978:
  90:Jellybeans.cpp **** MenuItem *mClockDiv  = &menuItems[9];
 24017              		.loc 17 90 11 view .LVU5632
 24018 0c00 0B60     		str	r3, [r1]
 24019              	.LVL1394:
 24020              	.LBB11980:
 24021              	.LBI11980:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 24022              		.loc 1 25 5 is_stmt 1 view .LVU5633
 24023              	.LBB11981:
 24024              	.LBB11982:
 24025              	.LBI11982:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 24026              		.loc 2 21 5 view .LVU5634
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 24027              		.loc 2 21 5 is_stmt 0 view .LVU5635
 24028              	.LBE11982:
 24029              	.LBE11981:
 24030              	.LBE11980:
  92:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
 24031              		.loc 17 92 11 view .LVU5636
 24032 0c02 1E4A     		ldr	r2, .L856+24
 24033 0c04 1E49     		ldr	r1, .L856+28
 24034 0c06 1F48     		ldr	r0, .L856+32
 24035 0c08 FFF7FEFF 		bl	__aeabi_atexit
 24036              	.LVL1395:
 24037              	.LBB11983:
 24038              	.LBI11983:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 24039              		.loc 1 25 5 is_stmt 1 view .LVU5637
 24040              	.LBB11984:
 24041              	.LBB11985:
 24042              	.LBI11985:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 24043              		.loc 2 21 5 view .LVU5638
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 24044              		.loc 2 21 5 is_stmt 0 view .LVU5639
 24045              	.LBE11985:
 24046              	.LBE11984:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 853


 24047              	.LBE11983:
  92:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
 24048              		.loc 17 92 25 view .LVU5640
 24049 0c0c 1B4A     		ldr	r2, .L856+24
 24050 0c0e 1C49     		ldr	r1, .L856+28
 24051 0c10 1D48     		ldr	r0, .L856+36
 24052 0c12 FFF7FEFF 		bl	__aeabi_atexit
 24053              	.LVL1396:
 24054              	.LBB11986:
 24055              	.LBI11986:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 24056              		.loc 1 25 5 is_stmt 1 view .LVU5641
 24057              	.LBB11987:
 24058              	.LBB11988:
 24059              	.LBI11988:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 24060              		.loc 2 21 5 view .LVU5642
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 24061              		.loc 2 21 5 is_stmt 0 view .LVU5643
 24062              	.LBE11988:
 24063              	.LBE11987:
 24064              	.LBE11986:
  92:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
 24065              		.loc 17 92 40 view .LVU5644
 24066 0c16 194A     		ldr	r2, .L856+24
 24067 0c18 1949     		ldr	r1, .L856+28
 24068 0c1a 1C48     		ldr	r0, .L856+40
 24069 0c1c FFF7FEFF 		bl	__aeabi_atexit
 24070              	.LVL1397:
 24071              	.LBB11989:
 24072              	.LBI11989:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 24073              		.loc 1 25 5 is_stmt 1 view .LVU5645
 24074              	.LBB11990:
 24075              	.LBB11991:
 24076              	.LBI11991:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 24077              		.loc 2 21 5 view .LVU5646
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 24078              		.loc 2 21 5 is_stmt 0 view .LVU5647
 24079              	.LBE11991:
 24080              	.LBE11990:
 24081              	.LBE11989:
  92:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
 24082              		.loc 17 92 54 view .LVU5648
 24083 0c20 164A     		ldr	r2, .L856+24
 24084 0c22 1749     		ldr	r1, .L856+28
 24085 0c24 1A48     		ldr	r0, .L856+44
 24086              		.loc 17 282 1 view .LVU5649
 24087 0c26 0DF52D7D 		add	sp, sp, #692
 24088              		.cfi_remember_state
 24089              		.cfi_def_cfa_offset 36
 24090              		@ sp needed
 24091 0c2a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 24092              		.cfi_restore 14
 24093              		.cfi_restore 11
 24094              		.cfi_restore 10
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 854


 24095              		.cfi_restore 9
 24096              		.cfi_restore 8
 24097              		.cfi_restore 7
 24098              		.cfi_restore 6
 24099              		.cfi_restore 5
 24100              		.cfi_restore 4
 24101              		.cfi_def_cfa_offset 0
  92:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
 24102              		.loc 17 92 54 view .LVU5650
 24103 0c2e FFF7FEBF 		b	__aeabi_atexit
 24104              	.LVL1398:
 24105              	.L844:
 24106              		.cfi_restore_state
 24107              	.LBB11992:
 24108              	.LBB11559:
 24109              	.LBB11556:
 24110              	.LBB11553:
 24111              	.LBB11546:
 24112              	.LBB11542:
 24113              	.LBB11538:
 24114              	.LBB11525:
 24115              	.LBI11525:
 24116              		.loc 40 385 7 is_stmt 1 view .LVU5651
 24117              	.LBB11526:
 24118              	.LBI11526:
 24119              		.loc 18 6277 5 view .LVU5652
 24120 0c32 56F8207C 		ldr	r7, [r6, #-32]
 24121 0c36 D9F81450 		ldr	r5, [r9, #20]
 24122              	.LBB11527:
 24123              	.LBB11528:
 24124              	.LBI11528:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 24125              		.loc 18 2852 7 view .LVU5653
 24126              	.LVL1399:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 24127              		.loc 18 2852 7 is_stmt 0 view .LVU5654
 24128 0c3a 3A46     		mov	r2, r7
 24129 0c3c AF42     		cmp	r7, r5
 24130 0c3e 28BF     		it	cs
 24131 0c40 2A46     		movcs	r2, r5
 24132              	.LVL1400:
 24133              	.LBB11529:
 24134              	.LBB11530:
 24135              	.LBI11530:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 24136              		.loc 21 337 7 is_stmt 1 view .LVU5655
 24137              	.LBB11531:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 24138              		.loc 21 339 2 view .LVU5656
 24139 0c42 32B1     		cbz	r2, .L797
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 24140              		.loc 21 347 2 view .LVU5657
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 24141              		.loc 21 347 25 is_stmt 0 view .LVU5658
 24142 0c44 D9F81010 		ldr	r1, [r9, #16]
 24143 0c48 56F8240C 		ldr	r0, [r6, #-36]
 24144 0c4c FFF7FEFF 		bl	memcmp
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 855


 24145              	.LVL1401:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 24146              		.loc 21 347 25 view .LVU5659
 24147              	.LBE11531:
 24148              	.LBE11530:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 24149              		.loc 18 2859 2 view .LVU5660
 24150 0c50 00B9     		cbnz	r0, .L798
 24151              	.LVL1402:
 24152              	.L797:
 24153              	.LBB11532:
 24154              	.LBI11532:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 24155              		.loc 18 401 7 is_stmt 1 view .LVU5661
 24156              	.LBB11533:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 24157              		.loc 18 403 51 is_stmt 0 view .LVU5662
 24158 0c52 781B     		subs	r0, r7, r5
 24159              	.LVL1403:
 24160              	.L798:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 24161              		.loc 18 403 51 view .LVU5663
 24162              	.LBE11533:
 24163              	.LBE11532:
 24164              	.LBE11529:
 24165              	.LBE11528:
 24166              	.LBE11527:
 24167              	.LBE11526:
 24168              	.LBE11525:
1813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 							_S_key(__p)));
 24169              		.loc 29 1813 10 view .LVU5664
 24170 0c54 4FEAD078 		lsr	r8, r0, #31
 24171 0c58 76E5     		b	.L796
 24172              	.LVL1404:
 24173              	.L842:
 24174              	.LBB11534:
 24175              	.LBB11518:
 24176              	.LBB11513:
 24177              	.LBB11508:
 24178              	.LBB11499:
 24179              	.LBB11492:
 24180              	.LBB11488:
 24181              	.LBB11484:
 24182              	.LBB11391:
 24183              	.LBB11388:
 24184              	.LBB11321:
 24185              	.LBB11305:
 24186              	.LBB11299:
 24187              	.LBB11296:
 24188              	.LBB11294:
 24189              	.LBB11293:
 24190              	.LBB11292:
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24191              		.loc 20 106 26 view .LVU5665
 24192 0c5a FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 24193              	.LVL1405:
 24194              	.L845:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 856


 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24195              		.loc 20 106 26 view .LVU5666
 24196              	.LBE11292:
 24197              	.LBE11293:
 24198              	.LBE11294:
 24199              	.LBE11296:
 24200              	.LBE11299:
 24201              	.LBE11305:
 24202              	.LBE11321:
 24203              	.LBE11388:
 24204              	.LBE11391:
 24205              	.LBE11484:
 24206              	.LBB11485:
 24207              	.LBB11481:
 24208              	.LBB11479:
 24209              	.LBB11477:
 24210              	.LBB11475:
 24211              	.LBB11473:
 24212              	.LBB11471:
 24213              	.LBB11469:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 24214              		.loc 22 212 28 view .LVU5667
 24215 0c5e 0D48     		ldr	r0, .L856+48
 24216 0c60 FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 24217              	.LVL1406:
 24218              	.L857:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 24219              		.loc 22 212 28 view .LVU5668
 24220              		.align	2
 24221              	.L856:
 24222 0c64 00000000 		.word	.LANCHOR29
 24223 0c68 00000000 		.word	.LANCHOR31
 24224 0c6c 00000000 		.word	.LANCHOR32
 24225 0c70 00000000 		.word	.LANCHOR33
 24226 0c74 00000000 		.word	.LANCHOR34
 24227 0c78 00000000 		.word	.LANCHOR35
 24228 0c7c 00000000 		.word	__dso_handle
 24229 0c80 00000000 		.word	_ZN5daisy9ParameterD1Ev
 24230 0c84 00000000 		.word	.LANCHOR2
 24231 0c88 00000000 		.word	.LANCHOR5
 24232 0c8c 00000000 		.word	.LANCHOR7
 24233 0c90 00000000 		.word	.LANCHOR9
 24234 0c94 00000000 		.word	.LC9
 24235              	.LBE11469:
 24236              	.LBE11471:
 24237              	.LBE11473:
 24238              	.LBE11475:
 24239              	.LBE11477:
 24240              	.LBE11479:
 24241              	.LBE11481:
 24242              	.LBE11485:
 24243              	.LBE11488:
 24244              	.LBE11492:
 24245              	.LBE11499:
 24246              	.LBE11508:
 24247              	.LBE11513:
 24248              	.LBE11518:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 857


 24249              	.LBE11534:
 24250              	.LBE11538:
 24251              	.LBE11542:
 24252              	.LBE11546:
 24253              	.LBE11553:
 24254              	.LBE11556:
 24255              	.LBE11559:
 24256              	.LBE11992:
 24257              		.cfi_endproc
 24258              	.LFE6226:
 24260              		.section	.text.startup._GLOBAL__sub_I_patch,"ax",%progbits
 24261              		.align	1
 24262              		.p2align 2,,3
 24263              		.syntax unified
 24264              		.thumb
 24265              		.thumb_func
 24266              		.fpu fpv5-d16
 24268              	_GLOBAL__sub_I_patch:
 24269              	.LFB6201:
 24270              		.loc 17 282 1 is_stmt 1 view -0
 24271              		.cfi_startproc
 24272              		@ args = 0, pretend = 0, frame = 0
 24273              		@ frame_needed = 0, uses_anonymous_args = 0
 24274              		@ link register save eliminated.
 24275              		.loc 17 282 1 is_stmt 0 view .LVU5670
 24276 0000 FFF7FEBF 		b	_Z41__static_initialization_and_destruction_0ii.constprop.0
 24277              	.LVL1407:
 24278              		.cfi_endproc
 24279              	.LFE6201:
 24281              		.section	.init_array,"aw",%init_array
 24282              		.align	2
 24283 0000 00000000 		.word	_GLOBAL__sub_I_patch(target1)
 24284              		.weak	_ZTSFvvE
 24285              		.section	.rodata._ZTSFvvE,"aG",%progbits,_ZTSFvvE,comdat
 24286              		.align	2
 24289              	_ZTSFvvE:
 24290 0000 46767645 		.ascii	"FvvE\000"
 24290      00
 24291              		.weak	_ZTIFvvE
 24292              		.section	.rodata._ZTIFvvE,"aG",%progbits,_ZTIFvvE,comdat
 24293              		.align	2
 24296              	_ZTIFvvE:
 24297 0000 08000000 		.word	_ZTVN10__cxxabiv120__function_type_infoE+8
 24298 0004 00000000 		.word	_ZTSFvvE
 24299              		.weak	_ZTSN5daisy21OneBitGraphicsDisplayE
 24300              		.section	.rodata._ZTSN5daisy21OneBitGraphicsDisplayE,"aG",%progbits,_ZTSN5daisy21OneBitGraphicsDis
 24301              		.align	2
 24304              	_ZTSN5daisy21OneBitGraphicsDisplayE:
 24305 0000 4E356461 		.ascii	"N5daisy21OneBitGraphicsDisplayE\000"
 24305      69737932 
 24305      314F6E65 
 24305      42697447 
 24305      72617068 
 24306              		.weak	_ZTIN5daisy21OneBitGraphicsDisplayE
 24307              		.section	.rodata._ZTIN5daisy21OneBitGraphicsDisplayE,"aG",%progbits,_ZTIN5daisy21OneBitGraphicsDis
 24308              		.align	2
 24311              	_ZTIN5daisy21OneBitGraphicsDisplayE:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 858


 24312 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 24313 0004 00000000 		.word	_ZTSN5daisy21OneBitGraphicsDisplayE
 24314              		.weak	_ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24S
 24315              		.section	.rodata._ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128E
 24316              		.align	2
 24319              	_ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4
 24320 0000 4E356461 		.ascii	"N5daisy25OneBitGraphicsDisplayImplINS_11OledDisplay"
 24320      69737932 
 24320      354F6E65 
 24320      42697447 
 24320      72617068 
 24321 0033 494E535F 		.ascii	"INS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpi"
 24321      31335353 
 24321      44313330 
 24321      78447269 
 24321      76657249 
 24322 0066 5472616E 		.ascii	"TransportEEEEEEE\000"
 24322      73706F72 
 24322      74454545 
 24322      45454545 
 24322      00
 24323              		.weak	_ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24S
 24324              		.section	.rodata._ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128E
 24325              		.align	2
 24328              	_ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4
 24329 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 24330 0004 00000000 		.word	_ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24S
 24331 0008 00000000 		.word	_ZTIN5daisy21OneBitGraphicsDisplayE
 24332              		.weak	_ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 24333              		.section	.rodata._ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransp
 24334              		.align	2
 24337              	_ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:
 24338 0000 4E356461 		.ascii	"N5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64E"
 24338      69737931 
 24338      314F6C65 
 24338      64446973 
 24338      706C6179 
 24339 0033 4E535F32 		.ascii	"NS_24SSD130x4WireSpiTransportEEEEE\000"
 24339      34535344 
 24339      31333078 
 24339      34576972 
 24339      65537069 
 24340              		.weak	_ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 24341              		.section	.rodata._ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransp
 24342              		.align	2
 24345              	_ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:
 24346 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 24347 0004 00000000 		.word	_ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 24348 0008 00000000 		.word	_ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24S
 24349              		.weak	_ZTSPFvvE
 24350              		.section	.rodata._ZTSPFvvE,"aG",%progbits,_ZTSPFvvE,comdat
 24351              		.align	2
 24354              	_ZTSPFvvE:
 24355 0000 50467676 		.ascii	"PFvvE\000"
 24355      4500
 24356              		.weak	_ZTIPFvvE
 24357              		.section	.rodata._ZTIPFvvE,"aG",%progbits,_ZTIPFvvE,comdat
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 859


 24358              		.align	2
 24361              	_ZTIPFvvE:
 24362 0000 08000000 		.word	_ZTVN10__cxxabiv119__pointer_type_infoE+8
 24363 0004 00000000 		.word	_ZTSPFvvE
 24364 0008 00000000 		.word	0
 24365 000c 00000000 		.word	_ZTIFvvE
 24366              		.weak	_ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 24367              		.section	.rodata._ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransp
 24368              		.align	2
 24371              	_ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:
 24372 0000 00000000 		.word	0
 24373 0004 00000000 		.word	_ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 24374 0008 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED1Ev
 24375 000c 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev
 24376 0010 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 24377 0014 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 24378 0018 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillE
 24379 001c 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawP
 24380 0020 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 24381 0024 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 24382 0028 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 24383 002c 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 24384 0030 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 24385 0034 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 24386 0038 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Updat
 24387              		.global	inversionCurCvVal
 24388              		.global	voicingCurCvVal
 24389              		.global	divisionCurCvVal
 24390              		.global	patternCurCvVal
 24391              		.global	inversionParam
 24392              		.global	voicingParam
 24393              		.global	divisionParam
 24394              		.global	patternParam
 24395              		.global	mClockDiv
 24396              		.global	mOct
 24397              		.global	mOctRng
 24398              		.global	mRhythm
 24399              		.global	mScale
 24400              		.global	mTonic
 24401              		.global	mInversion
 24402              		.global	mVoicing
 24403              		.global	mDivision
 24404              		.global	mPattern
 24405              		.global	menuItems
 24406              		.global	arp
 24407              		.global	isEditing
 24408              		.global	menuPos
 24409              		.global	arpNoteDacOutput1
 24410              		.global	_Z11debugStringB5cxx11
 24411              		.global	patch
 24412              		.section	.rodata
 24413              		.align	2
 24414              		.set	.LANCHOR26,. + 0
 24415              	.LC0:
 24416 0000 00000000 		.word	0
 24417 0004 02000000 		.word	2
 24418 0008 04000000 		.word	4
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 860


 24419 000c 05000000 		.word	5
 24420 0010 07000000 		.word	7
 24421 0014 09000000 		.word	9
 24422 0018 0B000000 		.word	11
 24423              	.LC1:
 24424 001c 00000000 		.word	0
 24425 0020 02000000 		.word	2
 24426 0024 03000000 		.word	3
 24427 0028 05000000 		.word	5
 24428 002c 07000000 		.word	7
 24429 0030 08000000 		.word	8
 24430 0034 0A000000 		.word	10
 24431              	.LC2:
 24432 0038 00000000 		.word	0
 24433 003c 02000000 		.word	2
 24434 0040 03000000 		.word	3
 24435 0044 05000000 		.word	5
 24436 0048 07000000 		.word	7
 24437 004c 09000000 		.word	9
 24438 0050 0A000000 		.word	10
 24439              	.LC3:
 24440 0054 00000000 		.word	0
 24441 0058 01000000 		.word	1
 24442 005c 03000000 		.word	3
 24443 0060 05000000 		.word	5
 24444 0064 07000000 		.word	7
 24445 0068 09000000 		.word	9
 24446 006c 0A000000 		.word	10
 24447              	.LC4:
 24448 0070 00000000 		.word	0
 24449 0074 02000000 		.word	2
 24450 0078 04000000 		.word	4
 24451 007c 06000000 		.word	6
 24452 0080 07000000 		.word	7
 24453 0084 09000000 		.word	9
 24454 0088 0B000000 		.word	11
 24455              	.LC5:
 24456 008c 00000000 		.word	0
 24457 0090 02000000 		.word	2
 24458 0094 04000000 		.word	4
 24459 0098 05000000 		.word	5
 24460 009c 07000000 		.word	7
 24461 00a0 09000000 		.word	9
 24462 00a4 0A000000 		.word	10
 24463              	.LC6:
 24464 00a8 00000000 		.word	0
 24465 00ac 01000000 		.word	1
 24466 00b0 03000000 		.word	3
 24467 00b4 05000000 		.word	5
 24468 00b8 06000000 		.word	6
 24469 00bc 08000000 		.word	8
 24470 00c0 0A000000 		.word	10
 24471              		.section	.bss._Z11debugStringB5cxx11,"aw",%nobits
 24472              		.align	2
 24473              		.set	.LANCHOR14,. + 0
 24476              	_Z11debugStringB5cxx11:
 24477 0000 00000000 		.space	24
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 861


 24477      00000000 
 24477      00000000 
 24477      00000000 
 24477      00000000 
 24478              		.section	.bss._ZL10allOctaves,"aw",%nobits
 24479              		.align	2
 24480              		.set	.LANCHOR23,. + 0
 24483              	_ZL10allOctaves:
 24484 0000 00000000 		.space	12
 24484      00000000 
 24484      00000000 
 24485              		.section	.bss._ZL4font,"aw",%nobits
 24486              		.align	2
 24487              		.set	.LANCHOR13,. + 0
 24490              	_ZL4font:
 24491 0000 00000000 		.space	8
 24491      00000000 
 24492              		.section	.bss._ZN10jellybeansL10arpRhythmsE,"aw",%nobits
 24493              		.align	2
 24494              		.set	.LANCHOR22,. + 0
 24497              	_ZN10jellybeansL10arpRhythmsE:
 24498 0000 00000000 		.space	12
 24498      00000000 
 24498      00000000 
 24499              		.section	.bss._ZN10jellybeansL11arpPatternsE,"aw",%nobits
 24500              		.align	2
 24501              		.set	.LANCHOR16,. + 0
 24504              	_ZN10jellybeansL11arpPatternsE:
 24505 0000 00000000 		.space	12
 24505      00000000 
 24505      00000000 
 24506              		.section	.bss._ZN10jellybeansL12allNotes5OctE,"aw",%nobits
 24507              		.align	2
 24508              		.set	.LANCHOR25,. + 0
 24511              	_ZN10jellybeansL12allNotes5OctE:
 24512 0000 00000000 		.space	1440
 24512      00000000 
 24512      00000000 
 24512      00000000 
 24512      00000000 
 24513              		.section	.bss._ZN10jellybeansL13allInversionsE,"aw",%nobits
 24514              		.align	2
 24515              		.set	.LANCHOR19,. + 0
 24518              	_ZN10jellybeansL13allInversionsE:
 24519 0000 00000000 		.space	12
 24519      00000000 
 24519      00000000 
 24520              		.section	.bss._ZN10jellybeansL14allClockInDivsE,"aw",%nobits
 24521              		.align	2
 24522              		.set	.LANCHOR17,. + 0
 24525              	_ZN10jellybeansL14allClockInDivsE:
 24526 0000 00000000 		.space	12
 24526      00000000 
 24526      00000000 
 24527              		.section	.bss._ZN10jellybeansL15modeToSemitonesE,"aw",%nobits
 24528              		.align	2
 24529              		.set	.LANCHOR27,. + 0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 862


 24532              	_ZN10jellybeansL15modeToSemitonesE:
 24533 0000 00000000 		.space	24
 24533      00000000 
 24533      00000000 
 24533      00000000 
 24533      00000000 
 24534              		.section	.bss._ZN10jellybeansL5modesE,"aw",%nobits
 24535              		.align	2
 24536              		.set	.LANCHOR21,. + 0
 24539              	_ZN10jellybeansL5modesE:
 24540 0000 00000000 		.space	12
 24540      00000000 
 24540      00000000 
 24541              		.section	.bss._ZN10jellybeansL8allNotesE,"aw",%nobits
 24542              		.align	2
 24543              		.set	.LANCHOR20,. + 0
 24546              	_ZN10jellybeansL8allNotesE:
 24547 0000 00000000 		.space	12
 24547      00000000 
 24547      00000000 
 24548              		.section	.bss._ZN10jellybeansL8voicingsE,"aw",%nobits
 24549              		.align	2
 24550              		.set	.LANCHOR18,. + 0
 24553              	_ZN10jellybeansL8voicingsE:
 24554 0000 00000000 		.space	12
 24554      00000000 
 24554      00000000 
 24555              		.section	.bss.arp,"aw",%nobits
 24556              		.align	2
 24557              		.set	.LANCHOR0,. + 0
 24560              	arp:
 24561 0000 00000000 		.space	4
 24562              		.section	.bss.arpNoteDacOutput1,"aw",%nobits
 24563              		.align	2
 24564              		.set	.LANCHOR24,. + 0
 24567              	arpNoteDacOutput1:
 24568 0000 00000000 		.space	4
 24569              		.section	.bss.divisionCurCvVal,"aw",%nobits
 24570              		.align	2
 24571              		.set	.LANCHOR6,. + 0
 24574              	divisionCurCvVal:
 24575 0000 00000000 		.space	4
 24576              		.section	.bss.divisionParam,"aw",%nobits
 24577              		.align	2
 24578              		.set	.LANCHOR5,. + 0
 24581              	divisionParam:
 24582 0000 00000000 		.space	56
 24582      00000000 
 24582      00000000 
 24582      00000000 
 24582      00000000 
 24583              		.section	.bss.inversionCurCvVal,"aw",%nobits
 24584              		.align	2
 24585              		.set	.LANCHOR10,. + 0
 24588              	inversionCurCvVal:
 24589 0000 00000000 		.space	4
 24590              		.section	.bss.inversionParam,"aw",%nobits
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 863


 24591              		.align	2
 24592              		.set	.LANCHOR9,. + 0
 24595              	inversionParam:
 24596 0000 00000000 		.space	56
 24596      00000000 
 24596      00000000 
 24596      00000000 
 24596      00000000 
 24597              		.section	.bss.isEditing,"aw",%nobits
 24598              		.set	.LANCHOR11,. + 0
 24601              	isEditing:
 24602 0000 00       		.space	1
 24603              		.section	.bss.mClockDiv,"aw",%nobits
 24604              		.align	2
 24605              		.set	.LANCHOR35,. + 0
 24608              	mClockDiv:
 24609 0000 00000000 		.space	4
 24610              		.section	.bss.mDivision,"aw",%nobits
 24611              		.align	2
 24612              		.set	.LANCHOR28,. + 0
 24615              	mDivision:
 24616 0000 00000000 		.space	4
 24617              		.section	.bss.mInversion,"aw",%nobits
 24618              		.align	2
 24619              		.set	.LANCHOR29,. + 0
 24622              	mInversion:
 24623 0000 00000000 		.space	4
 24624              		.section	.bss.mOct,"aw",%nobits
 24625              		.align	2
 24626              		.set	.LANCHOR34,. + 0
 24629              	mOct:
 24630 0000 00000000 		.space	4
 24631              		.section	.bss.mOctRng,"aw",%nobits
 24632              		.align	2
 24633              		.set	.LANCHOR33,. + 0
 24636              	mOctRng:
 24637 0000 00000000 		.space	4
 24638              		.section	.bss.mPattern,"aw",%nobits
 24639              		.align	2
 24640              		.set	.LANCHOR1,. + 0
 24643              	mPattern:
 24644 0000 00000000 		.space	4
 24645              		.section	.bss.mRhythm,"aw",%nobits
 24646              		.align	2
 24647              		.set	.LANCHOR32,. + 0
 24650              	mRhythm:
 24651 0000 00000000 		.space	4
 24652              		.section	.bss.mScale,"aw",%nobits
 24653              		.align	2
 24654              		.set	.LANCHOR31,. + 0
 24657              	mScale:
 24658 0000 00000000 		.space	4
 24659              		.section	.bss.mTonic,"aw",%nobits
 24660              		.align	2
 24661              		.set	.LANCHOR30,. + 0
 24664              	mTonic:
 24665 0000 00000000 		.space	4
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 864


 24666              		.section	.bss.mVoicing,"aw",%nobits
 24667              		.align	2
 24668              		.set	.LANCHOR15,. + 0
 24671              	mVoicing:
 24672 0000 00000000 		.space	4
 24673              		.section	.bss.menuItems,"aw",%nobits
 24674              		.align	2
 24675              		.set	.LANCHOR4,. + 0
 24678              	menuItems:
 24679 0000 00000000 		.space	800
 24679      00000000 
 24679      00000000 
 24679      00000000 
 24679      00000000 
 24680              		.section	.bss.menuPos,"aw",%nobits
 24681              		.align	2
 24682              		.set	.LANCHOR12,. + 0
 24685              	menuPos:
 24686 0000 00000000 		.space	4
 24687              		.section	.bss.patch,"aw",%nobits
 24688              		.align	2
 24691              	patch:
 24692 0000 00000000 		.space	38336
 24692      00000000 
 24692      00000000 
 24692      00000000 
 24692      00000000 
 24693              		.section	.bss.patternCurCvVal,"aw",%nobits
 24694              		.align	2
 24695              		.set	.LANCHOR3,. + 0
 24698              	patternCurCvVal:
 24699 0000 00000000 		.space	4
 24700              		.section	.bss.patternParam,"aw",%nobits
 24701              		.align	2
 24702              		.set	.LANCHOR2,. + 0
 24705              	patternParam:
 24706 0000 00000000 		.space	56
 24706      00000000 
 24706      00000000 
 24706      00000000 
 24706      00000000 
 24707              		.section	.bss.voicingCurCvVal,"aw",%nobits
 24708              		.align	2
 24709              		.set	.LANCHOR8,. + 0
 24712              	voicingCurCvVal:
 24713 0000 00000000 		.space	4
 24714              		.section	.bss.voicingParam,"aw",%nobits
 24715              		.align	2
 24716              		.set	.LANCHOR7,. + 0
 24719              	voicingParam:
 24720 0000 00000000 		.space	56
 24720      00000000 
 24720      00000000 
 24720      00000000 
 24720      00000000 
 24721              		.text
 24722              	.Letext0:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 865


 24723              		.file 50 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\machine\\_default_type
 24724              		.file 51 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\sys\\_stdint.h"
 24725              		.file 52 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\stdint.h"
 24726              		.file 53 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdd
 24727              		.file 54 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\cpp
 24728              		.file 55 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std
 24729              		.file 56 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 24730              		.file 57 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 24731              		.file 58 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\type_trai
 24732              		.file 59 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-
 24733              		.file 60 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
 24734              		.file 61 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\de
 24735              		.file 62 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 24736              		.file 63 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exc
 24737              		.file 64 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 24738              		.file 65 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 24739              		.file 66 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\str
 24740              		.file 67 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\cha
 24741              		.file 68 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 24742              		.file 69 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\alg
 24743              		.file 70 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 24744              		.file 71 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\use
 24745              		.file 72 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\tuple"
 24746              		.file 73 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\vec
 24747              		.file 74 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\functiona
 24748              		.file 75 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\ref
 24749              		.file 76 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\ptr
 24750              		.file 77 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
 24751              		.file 78 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\fun
 24752              		.file 79 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\pre
 24753              		.file 80 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\type
 24754              		.file 81 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\sys\\_types.h"
 24755              		.file 82 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\sys\\reent.h"
 24756              		.file 83 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\sys\\lock.h"
 24757              		.file 84 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\math.h"
 24758              		.file 85 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\stdlib.h"
 24759              		.file 86 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 24760              		.file 87 "../../DaisySP/Source/Control/adenv.h"
 24761              		.file 88 "../../DaisySP/Source/Utility/dsp.h"
 24762              		.file 89 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stda
 24763              		.file 90 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\wchar.h"
 24764              		.file 91 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\locale.h"
 24765              		.file 92 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\stdio.h"
 24766              		.file 93 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 24767              		.file 94 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\string.h"
 24768              		.file 95 "../../libdaisy/src/daisy_core.h"
 24769              		.file 96 "../../libdaisy/src/per/tim.h"
 24770              		.file 97 "../../libdaisy/src/per/sai.h"
 24771              		.file 98 "../../libdaisy/src/hid/MidiEvent.h"
 24772              		.file 99 "../../libdaisy/src/hid/gatein.h"
 24773              		.file 100 "../../libdaisy/src/hid/logger_impl.h"
 24774              		.file 101 "../../libdaisy/src/util/wav_format.h"
 24775              		.file 102 "../../libdaisy/src/per/gpio.h"
 24776              		.file 103 "../../libdaisy/src/dev/sdram.h"
 24777              		.file 104 "../../libdaisy/src/util/oled_fonts.h"
 24778              		.file 105 "../../libdaisy/src/dev/sr_595.h"
 24779              		.file 106 "<built-in>"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 866


ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 867


DEFINED SYMBOLS
                            *ABS*:00000000 Jellybeans.cpp
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:17     .text._ZN5daisy9ParameterD2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:26     .text._ZN5daisy9ParameterD2Ev:00000000 _ZN5daisy9ParameterD2Ev
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:26     .text._ZN5daisy9ParameterD2Ev:00000000 _ZN5daisy9ParameterD1Ev
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:49     .text._ZN5daisy10DaisyPatchD2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:57     .text._ZN5daisy10DaisyPatchD2Ev:00000000 _ZN5daisy10DaisyPatchD2Ev
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:57     .text._ZN5daisy10DaisyPatchD2Ev:00000000 _ZN5daisy10DaisyPatchD1Ev
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:139    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:147    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:147    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED1Ev
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:172    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillEb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:180    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillEb:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillEb
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:212    .text._ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:220    .text._ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data:00000000 _ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:252    .text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6HeightEv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:260    .text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6HeightEv:00000000 _ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6HeightEv
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:277    .text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5WidthEv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:285    .text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5WidthEv:00000000 _ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5WidthEv
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:302    .text._Z2cbv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:310    .text._Z2cbv:00000000 _Z2cbv
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:327    .text._Z2cbv:00000008 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:332    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:340    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:380    .rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0.str1.4:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:384    .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:391    .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0:00000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:747    .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0:00000060 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:759    .text._ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:767    .text._ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation:00000000 _ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:878    .text._ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation:00000024 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24361  .rodata._ZTIPFvvE:00000000 _ZTIPFvvE
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:885    .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.isra.0:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:892    .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.isra.0:00000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.isra.0
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:1274   .text._ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:1282   .text._ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev:00000000 _ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:1282   .text._ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev:00000000 _ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED1Ev
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:1414   .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6UpdateEv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:1422   .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6UpdateEv:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6UpdateEv
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:1609   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:1617   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:1617   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:1846   .text._ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:1854   .text._ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev:00000000 _ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:1854   .text._ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev:00000000 _ZNSt5arrayIN10jellybeans8MenuItemELj10EED1Ev
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:2278   .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E.isra.0:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:2285   .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E.isra.0:00000000 _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E.isra.0
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:2561   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:2569   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev:00000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:2569   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev:00000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED1Ev
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:2625   .text._Z9cbPatternv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:2633   .text._Z9cbPatternv:00000000 _Z9cbPatternv
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:2762   .text._Z9cbPatternv:00000038 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:2768   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE9WriteCharEc7FontDefb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:2776   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE9WriteCharEc7FontDefb:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE9WriteCharEc7FontDefb
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:3202   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE9WriteCharEc7FontDefb:00000198 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:3210   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE11WriteStringEPKc7FontDefb:00000000 $t
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 868


C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:3218   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE11WriteStringEPKc7FontDefb:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE11WriteStringEPKc7FontDefb
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:3675   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE11WriteStringEPKc7FontDefb:000001b8 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:3685   .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawPixelEjjb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:3693   .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawPixelEjjb:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawPixelEjjb
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:3770   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawLineEjjjjb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:3778   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawLineEjjjjb:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawLineEjjjjb
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:4063   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:4071   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:4756   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib:00000368 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:4770   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib:00000378 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:4996   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:5004   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:5143   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000046 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:5152   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000058 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:6360   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000320 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:6369   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000328 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:6680   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:000003e8 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:6688   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawRectEjjjjbb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:6696   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawRectEjjjjbb:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawRectEjjjjbb
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:7806   .text._ZNSt14_Function_baseD2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:7814   .text._ZNSt14_Function_baseD2Ev:00000000 _ZNSt14_Function_baseD2Ev
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:7814   .text._ZNSt14_Function_baseD2Ev:00000000 _ZNSt14_Function_baseD1Ev
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:7855   .text._ZN10jellybeans8MenuItemaSEOS0_.isra.0:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:7862   .text._ZN10jellybeans8MenuItemaSEOS0_.isra.0:00000000 _ZN10jellybeans8MenuItemaSEOS0_.isra.0
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:8293   .text._ZN10jellybeans8MenuItemD2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:8301   .text._ZN10jellybeans8MenuItemD2Ev:00000000 _ZN10jellybeans8MenuItemD2Ev
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:8301   .text._ZN10jellybeans8MenuItemD2Ev:00000000 _ZN10jellybeans8MenuItemD1Ev
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:8730   .text._Z14updateControlsv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:8738   .text._Z14updateControlsv:00000000 _Z14updateControlsv
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:9157   .text._Z14updateControlsv:0000012c $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24691  .bss.patch:00000000 patch
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:9179   .text._Z13updateOutputsv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:9187   .text._Z13updateOutputsv:00000000 _Z13updateOutputsv
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:9231   .text._Z13updateOutputsv:00000030 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:9238   .text._Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:9246   .text._Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii:00000000 _Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:9643   .text._Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii:0000012c $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:9654   .text._Z10updateOledv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:9662   .text._Z10updateOledv:00000000 _Z10updateOledv
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:11414  .text._Z10updateOledv:00000230 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:11437  .text._Z9cbVoicingv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:11445  .text._Z9cbVoicingv:00000000 _Z9cbVoicingv
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:11585  .text._Z9cbVoicingv:00000044 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:11591  .rodata._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_.str1.4:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:11595  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:11603  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:12373  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_:000000d4 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:11603  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_listIS5_ERKS6_
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:12386  .text._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:12394  .text._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_:00000000 _ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:12749  .text._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_:00000054 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:12394  .text._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_:00000000 _ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:12761  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS9_Lb1EEEOT_OT0_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:12769  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS9_Lb1EEEOT_OT0_:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS9_Lb1EEEOT_OT0_
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:12769  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS9_Lb1EEEOT_OT0_:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA6_KcS9_Lb1EEEOT_OT0_
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:13239  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS9_Lb1EEEOT_OT0_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:13247  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS9_Lb1EEEOT_OT0_:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS9_Lb1EEEOT_OT0_
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 869


C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:13247  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS9_Lb1EEEOT_OT0_:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA7_KcS9_Lb1EEEOT_OT0_
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:13717  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:13725  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:14482  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:000000bc $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:13725  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:14499  .rodata.main.str1.4:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:14524  .text.startup.main:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:14532  .text.startup.main:00000000 main
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:16093  .text.startup.main:000002f4 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:16133  .text.startup.main:00000378 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:16482  .text.startup.main:000004d0 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:16501  .text._ZNSt12_Vector_baseIiSaIiEED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:16509  .text._ZNSt12_Vector_baseIiSaIiEED2Ev:00000000 _ZNSt12_Vector_baseIiSaIiEED2Ev
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:16509  .text._ZNSt12_Vector_baseIiSaIiEED2Ev:00000000 _ZNSt12_Vector_baseIiSaIiEED1Ev
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:16590  .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:16598  .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_:00000000 _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:16964  .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:16972  .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_:00000000 _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:17637  .rodata._Z41__static_initialization_and_destruction_0ii.constprop.0.str1.4:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:17869  .rodata._Z41__static_initialization_and_destruction_0ii.constprop.0.str1.4:00000148 .LC96
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:17974  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:17981  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000000 _Z41__static_initialization_and_destruction_0ii.constprop.0
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:19808  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:000002ac $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:19961  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:000004e0 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:21798  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:000007b4 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:21816  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:000007f0 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:23835  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000ae4 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24371  .rodata._ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 _ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:23897  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000bd4 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24222  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000c64 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24261  .text.startup._GLOBAL__sub_I_patch:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24268  .text.startup._GLOBAL__sub_I_patch:00000000 _GLOBAL__sub_I_patch
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24282  .init_array:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24289  .rodata._ZTSFvvE:00000000 _ZTSFvvE
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24286  .rodata._ZTSFvvE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24296  .rodata._ZTIFvvE:00000000 _ZTIFvvE
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24293  .rodata._ZTIFvvE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24304  .rodata._ZTSN5daisy21OneBitGraphicsDisplayE:00000000 _ZTSN5daisy21OneBitGraphicsDisplayE
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24301  .rodata._ZTSN5daisy21OneBitGraphicsDisplayE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24311  .rodata._ZTIN5daisy21OneBitGraphicsDisplayE:00000000 _ZTIN5daisy21OneBitGraphicsDisplayE
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24308  .rodata._ZTIN5daisy21OneBitGraphicsDisplayE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24319  .rodata._ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE:00000000 _ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24316  .rodata._ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24328  .rodata._ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE:00000000 _ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24325  .rodata._ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24337  .rodata._ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 _ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24334  .rodata._ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24345  .rodata._ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 _ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24342  .rodata._ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24354  .rodata._ZTSPFvvE:00000000 _ZTSPFvvE
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24351  .rodata._ZTSPFvvE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24358  .rodata._ZTIPFvvE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24368  .rodata._ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24588  .bss.inversionCurCvVal:00000000 inversionCurCvVal
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24712  .bss.voicingCurCvVal:00000000 voicingCurCvVal
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24574  .bss.divisionCurCvVal:00000000 divisionCurCvVal
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24698  .bss.patternCurCvVal:00000000 patternCurCvVal
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 870


C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24595  .bss.inversionParam:00000000 inversionParam
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24719  .bss.voicingParam:00000000 voicingParam
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24581  .bss.divisionParam:00000000 divisionParam
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24705  .bss.patternParam:00000000 patternParam
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24608  .bss.mClockDiv:00000000 mClockDiv
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24629  .bss.mOct:00000000 mOct
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24636  .bss.mOctRng:00000000 mOctRng
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24650  .bss.mRhythm:00000000 mRhythm
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24657  .bss.mScale:00000000 mScale
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24664  .bss.mTonic:00000000 mTonic
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24622  .bss.mInversion:00000000 mInversion
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24671  .bss.mVoicing:00000000 mVoicing
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24615  .bss.mDivision:00000000 mDivision
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24643  .bss.mPattern:00000000 mPattern
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24678  .bss.menuItems:00000000 menuItems
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24560  .bss.arp:00000000 arp
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24601  .bss.isEditing:00000000 isEditing
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24685  .bss.menuPos:00000000 menuPos
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24567  .bss.arpNoteDacOutput1:00000000 arpNoteDacOutput1
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24476  .bss._Z11debugStringB5cxx11:00000000 _Z11debugStringB5cxx11
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24413  .rodata:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24472  .bss._Z11debugStringB5cxx11:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24479  .bss._ZL10allOctaves:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24483  .bss._ZL10allOctaves:00000000 _ZL10allOctaves
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24486  .bss._ZL4font:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24490  .bss._ZL4font:00000000 _ZL4font
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24493  .bss._ZN10jellybeansL10arpRhythmsE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24497  .bss._ZN10jellybeansL10arpRhythmsE:00000000 _ZN10jellybeansL10arpRhythmsE
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24500  .bss._ZN10jellybeansL11arpPatternsE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24504  .bss._ZN10jellybeansL11arpPatternsE:00000000 _ZN10jellybeansL11arpPatternsE
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24507  .bss._ZN10jellybeansL12allNotes5OctE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24511  .bss._ZN10jellybeansL12allNotes5OctE:00000000 _ZN10jellybeansL12allNotes5OctE
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24514  .bss._ZN10jellybeansL13allInversionsE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24518  .bss._ZN10jellybeansL13allInversionsE:00000000 _ZN10jellybeansL13allInversionsE
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24521  .bss._ZN10jellybeansL14allClockInDivsE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24525  .bss._ZN10jellybeansL14allClockInDivsE:00000000 _ZN10jellybeansL14allClockInDivsE
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24528  .bss._ZN10jellybeansL15modeToSemitonesE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24532  .bss._ZN10jellybeansL15modeToSemitonesE:00000000 _ZN10jellybeansL15modeToSemitonesE
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24535  .bss._ZN10jellybeansL5modesE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24539  .bss._ZN10jellybeansL5modesE:00000000 _ZN10jellybeansL5modesE
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24542  .bss._ZN10jellybeansL8allNotesE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24546  .bss._ZN10jellybeansL8allNotesE:00000000 _ZN10jellybeansL8allNotesE
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24549  .bss._ZN10jellybeansL8voicingsE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24553  .bss._ZN10jellybeansL8voicingsE:00000000 _ZN10jellybeansL8voicingsE
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24556  .bss.arp:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24563  .bss.arpNoteDacOutput1:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24570  .bss.divisionCurCvVal:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24577  .bss.divisionParam:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24584  .bss.inversionCurCvVal:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24591  .bss.inversionParam:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24602  .bss.isEditing:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24604  .bss.mClockDiv:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24611  .bss.mDivision:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24618  .bss.mInversion:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24625  .bss.mOct:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24632  .bss.mOctRng:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24639  .bss.mPattern:00000000 $d
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 871


C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24646  .bss.mRhythm:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24653  .bss.mScale:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24660  .bss.mTonic:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24667  .bss.mVoicing:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24674  .bss.menuItems:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24681  .bss.menuPos:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24688  .bss.patch:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24694  .bss.patternCurCvVal:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24701  .bss.patternParam:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24708  .bss.voicingCurCvVal:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s:24715  .bss.voicingParam:00000000 $d
                           .group:00000000 _ZN5daisy9ParameterD5Ev
                           .group:00000000 _ZN5daisy10DaisyPatchD5Ev
                           .group:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED5Ev
                           .group:00000000 _ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED5Ev
                           .group:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED5Ev
                           .group:00000000 _ZNSt5arrayIN10jellybeans8MenuItemELj10EED5Ev
                           .group:00000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED5Ev
                           .group:00000000 _ZNSt14_Function_baseD5Ev
                           .group:00000000 _ZN10jellybeans8MenuItemD5Ev
                           .group:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC5ESt16initializer_listIS5_ERKS6_
                           .group:00000000 _ZNSt6vectorIiSaIiEEC5ESt16initializer_listIiERKS0_
                           .group:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC5IRA6_KcS9_Lb1EEEOT_OT0_
                           .group:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC5IRA7_KcS9_Lb1EEEOT_OT0_
                           .group:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC5ERKS7_
                           .group:00000000 _ZNSt12_Vector_baseIiSaIiEED5Ev

UNDEFINED SYMBOLS
memset
_ZN10jellybeans3Arp15updateTraversalEv
_ZdlPvj
strlen
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
memcpy
_ZSt19__throw_logic_errorPKc
dsy_gpio_write
_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
_ZN10jellybeans8MenuItem5valueB5cxx11Ev
_ZN10jellybeans3Arp10setPatternENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
cosf
sinf
_ZN5daisy10DaisyPatch21ProcessAnalogControlsEv
_ZN5daisy10DaisyPatch22ProcessDigitalControlsEv
_ZN5daisy9Parameter7ProcessEv
_ZN10jellybeans8MenuItem8setIndexEi
_ZN5daisy6GateIn4TrigEv
_ZN10jellybeans8MenuItem9decrementEv
_ZN10jellybeans8MenuItem9incrementEv
_ZN10jellybeans3Arp12onClockPulseEv
_ZN10jellybeans3Arp11getDacValueEv
_ZN5daisy9DacHandle10WriteValueENS0_7ChannelEt
_ZN10jellybeans3Arp10getNewNoteEv
_ZN10jellybeans3Arp8toStringB5cxx11Ev
_ZN10jellybeans3Arp8getChordEv
_ZN10jellybeans13DiatonicChord8toStringB5cxx11Ev
_ZN10jellybeans8MenuItem12displayValueB5cxx11Ev
_ZN10jellybeans13DiatonicChord10setVoicingENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccMxBAuW.s 			page 872


_Znwj
_ZSt20__throw_length_errorPKc
_ZSt17__throw_bad_allocv
_ZN5daisy10DaisyPatch4InitEb
_ZN10jellybeans3ArpC1Ev
_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEiSt8functionIFvvEE
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
_ZN5daisy10DaisyPatch8StartAdcEv
memcmp
_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base
__aeabi_atexit
__dso_handle
memmove
_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
_ZN10jellybeans8MenuItemC1Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
Font_7x10
_ZTVN10__cxxabiv120__function_type_infoE
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTVN10__cxxabiv119__pointer_type_infoE
