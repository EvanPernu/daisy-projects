ARM GAS  /tmp/ccVnVZaX.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"MusicBox.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy9ParameterD2Ev,"axG",%progbits,_ZN5daisy9ParameterD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy9ParameterD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy9ParameterD2Ev:
  27              	.LVL0:
  28              	.LFB1607:
  29              		.file 1 "../../libdaisy/src/hid/parameter.h"
   1:../../libdaisy/src/hid/parameter.h **** #pragma once
   2:../../libdaisy/src/hid/parameter.h **** #include <stdint.h>
   3:../../libdaisy/src/hid/parameter.h **** #include "hid/ctrl.h"
   4:../../libdaisy/src/hid/parameter.h **** 
   5:../../libdaisy/src/hid/parameter.h **** namespace daisy
   6:../../libdaisy/src/hid/parameter.h **** {
   7:../../libdaisy/src/hid/parameter.h **** /** @addtogroup controls
   8:../../libdaisy/src/hid/parameter.h ****     @{
   9:../../libdaisy/src/hid/parameter.h **** */
  10:../../libdaisy/src/hid/parameter.h **** 
  11:../../libdaisy/src/hid/parameter.h **** /**      Simple parameter mapping tool that takes a 0-1 input from an hid_ctrl. */
  12:../../libdaisy/src/hid/parameter.h **** class Parameter
  13:../../libdaisy/src/hid/parameter.h **** {
  14:../../libdaisy/src/hid/parameter.h ****   public:
  15:../../libdaisy/src/hid/parameter.h ****     /** Curves are applied to the output signal */
  16:../../libdaisy/src/hid/parameter.h ****     enum Curve
  17:../../libdaisy/src/hid/parameter.h ****     {
  18:../../libdaisy/src/hid/parameter.h ****         LINEAR,      /**< Linear curve */
  19:../../libdaisy/src/hid/parameter.h ****         EXPONENTIAL, /**< Exponential curve */
  20:../../libdaisy/src/hid/parameter.h ****         LOGARITHMIC, /**<  Logarithmic curve */
  21:../../libdaisy/src/hid/parameter.h ****         CUBE,        /**< Cubic curve */
  22:../../libdaisy/src/hid/parameter.h ****         LAST,        /**< Final enum element. */
  23:../../libdaisy/src/hid/parameter.h ****     };
  24:../../libdaisy/src/hid/parameter.h ****     /** Constructor */
  25:../../libdaisy/src/hid/parameter.h ****     Parameter() {}
  26:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
  27:../../libdaisy/src/hid/parameter.h ****     ~Parameter() {}
  30              		.loc 1 27 5 view -0
  31              		.cfi_startproc
ARM GAS  /tmp/ccVnVZaX.s 			page 2


  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB409:
  36              	.LBI409:
  37              		.file 2 "../../libdaisy/src/hid/ctrl.h"
   1:../../libdaisy/src/hid/ctrl.h **** #pragma once
   2:../../libdaisy/src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libdaisy/src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libdaisy/src/hid/ctrl.h **** #include <stdint.h>
   5:../../libdaisy/src/hid/ctrl.h **** 
   6:../../libdaisy/src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libdaisy/src/hid/ctrl.h **** namespace daisy
   8:../../libdaisy/src/hid/ctrl.h **** {
   9:../../libdaisy/src/hid/ctrl.h **** /**
  10:../../libdaisy/src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libdaisy/src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libdaisy/src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libdaisy/src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libdaisy/src/hid/ctrl.h ****     @date November 2019
  15:../../libdaisy/src/hid/ctrl.h ****     @ingroup controls
  16:../../libdaisy/src/hid/ctrl.h **** */
  17:../../libdaisy/src/hid/ctrl.h **** class AnalogControl
  18:../../libdaisy/src/hid/ctrl.h **** {
  19:../../libdaisy/src/hid/ctrl.h ****   public:
  20:../../libdaisy/src/hid/ctrl.h ****     /** Constructor */
  21:../../libdaisy/src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
  23:../../libdaisy/src/hid/ctrl.h ****     ~AnalogControl() {}
  38              		.loc 2 23 5 view .LVU1
  39              		.loc 2 23 5 is_stmt 0 view .LVU2
  40              	.LBE409:
  41              		.loc 1 27 19 view .LVU3
  42 0000 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE1607:
  46              		.weak	_ZN5daisy9ParameterD1Ev
  47              		.thumb_set _ZN5daisy9ParameterD1Ev,_ZN5daisy9ParameterD2Ev
  48 0002 00BF     		.section	.text._ZN5daisy8DaisyPodD2Ev,"axG",%progbits,_ZN5daisy8DaisyPodD5Ev,comdat
  49              		.align	1
  50              		.p2align 2,,3
  51              		.weak	_ZN5daisy8DaisyPodD2Ev
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu fpv5-d16
  57              	_ZN5daisy8DaisyPodD2Ev:
  58              	.LVL1:
  59              	.LFB2046:
  60              		.file 3 "../../libdaisy/src/daisy_pod.h"
   1:../../libdaisy/src/daisy_pod.h **** #pragma once
   2:../../libdaisy/src/daisy_pod.h **** #ifndef DSY_POD_BSP_H
   3:../../libdaisy/src/daisy_pod.h **** #define DSY_POD_BSP_H
   4:../../libdaisy/src/daisy_pod.h **** 
   5:../../libdaisy/src/daisy_pod.h **** #include "daisy_seed.h"
   6:../../libdaisy/src/daisy_pod.h **** 
   7:../../libdaisy/src/daisy_pod.h **** namespace daisy
ARM GAS  /tmp/ccVnVZaX.s 			page 3


   8:../../libdaisy/src/daisy_pod.h **** {
   9:../../libdaisy/src/daisy_pod.h **** /**
  10:../../libdaisy/src/daisy_pod.h ****     @brief Class that handles initializing all of the hardware specific to the Daisy Patch Board. \
  11:../../libdaisy/src/daisy_pod.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
  12:../../libdaisy/src/daisy_pod.h ****     @author Stephen Hensley
  13:../../libdaisy/src/daisy_pod.h ****     @date November 2019
  14:../../libdaisy/src/daisy_pod.h ****     @ingroup boards
  15:../../libdaisy/src/daisy_pod.h **** */
  16:../../libdaisy/src/daisy_pod.h **** class DaisyPod
  17:../../libdaisy/src/daisy_pod.h **** {
  18:../../libdaisy/src/daisy_pod.h ****   public:
  19:../../libdaisy/src/daisy_pod.h ****     /** Switches */
  20:../../libdaisy/src/daisy_pod.h ****     enum Sw
  21:../../libdaisy/src/daisy_pod.h ****     {
  22:../../libdaisy/src/daisy_pod.h ****         BUTTON_1,    /** & */
  23:../../libdaisy/src/daisy_pod.h ****         BUTTON_2,    /** & */
  24:../../libdaisy/src/daisy_pod.h ****         BUTTON_LAST, /** &  */
  25:../../libdaisy/src/daisy_pod.h ****     };
  26:../../libdaisy/src/daisy_pod.h **** 
  27:../../libdaisy/src/daisy_pod.h ****     /** Knobs */
  28:../../libdaisy/src/daisy_pod.h ****     enum Knob
  29:../../libdaisy/src/daisy_pod.h ****     {
  30:../../libdaisy/src/daisy_pod.h ****         KNOB_1,    /** &  */
  31:../../libdaisy/src/daisy_pod.h ****         KNOB_2,    /** & */
  32:../../libdaisy/src/daisy_pod.h ****         KNOB_LAST, /** & */
  33:../../libdaisy/src/daisy_pod.h ****     };
  34:../../libdaisy/src/daisy_pod.h **** 
  35:../../libdaisy/src/daisy_pod.h ****     DaisyPod() {}
  36:../../libdaisy/src/daisy_pod.h ****     ~DaisyPod() {}
  61              		.loc 3 36 5 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.LBB410:
  67              	.LBI410:
  68              		.file 4 "../../libdaisy/src/hid/midi.h"
   1:../../libdaisy/src/hid/midi.h **** #pragma once
   2:../../libdaisy/src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../../libdaisy/src/hid/midi.h **** #define DSY_MIDI_H
   4:../../libdaisy/src/hid/midi.h **** 
   5:../../libdaisy/src/hid/midi.h **** // TODO: make this adjustable
   6:../../libdaisy/src/hid/midi.h **** #define SYSEX_BUFFER_LEN 128
   7:../../libdaisy/src/hid/midi.h **** 
   8:../../libdaisy/src/hid/midi.h **** #include <stdint.h>
   9:../../libdaisy/src/hid/midi.h **** #include <stdlib.h>
  10:../../libdaisy/src/hid/midi.h **** #include "per/uart.h"
  11:../../libdaisy/src/hid/midi.h **** #include "util/ringbuffer.h"
  12:../../libdaisy/src/hid/midi.h **** #include "hid/MidiEvent.h"
  13:../../libdaisy/src/hid/midi.h **** #include "sys/system.h"
  14:../../libdaisy/src/hid/midi.h **** 
  15:../../libdaisy/src/hid/midi.h **** namespace daisy
  16:../../libdaisy/src/hid/midi.h **** {
  17:../../libdaisy/src/hid/midi.h **** /** @addtogroup external 
  18:../../libdaisy/src/hid/midi.h ****     @{ 
  19:../../libdaisy/src/hid/midi.h **** */
  20:../../libdaisy/src/hid/midi.h **** 
ARM GAS  /tmp/ccVnVZaX.s 			page 4


  21:../../libdaisy/src/hid/midi.h **** class MidiUartTransport
  22:../../libdaisy/src/hid/midi.h **** {
  23:../../libdaisy/src/hid/midi.h ****   public:
  24:../../libdaisy/src/hid/midi.h ****     MidiUartTransport() {}
  25:../../libdaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
  26:../../libdaisy/src/hid/midi.h **** 
  27:../../libdaisy/src/hid/midi.h ****     struct Config
  28:../../libdaisy/src/hid/midi.h ****     {
  29:../../libdaisy/src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  30:../../libdaisy/src/hid/midi.h ****         dsy_gpio_pin                    rx;
  31:../../libdaisy/src/hid/midi.h ****         dsy_gpio_pin                    tx;
  32:../../libdaisy/src/hid/midi.h **** 
  33:../../libdaisy/src/hid/midi.h ****         Config()
  34:../../libdaisy/src/hid/midi.h ****         {
  35:../../libdaisy/src/hid/midi.h ****             periph = UartHandler::Config::Peripheral::USART_1;
  36:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
  37:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
  38:../../libdaisy/src/hid/midi.h ****         }
  39:../../libdaisy/src/hid/midi.h ****     };
  40:../../libdaisy/src/hid/midi.h **** 
  41:../../libdaisy/src/hid/midi.h ****     inline void Init(Config config)
  42:../../libdaisy/src/hid/midi.h ****     {
  43:../../libdaisy/src/hid/midi.h ****         UartHandler::Config uart_config;
  44:../../libdaisy/src/hid/midi.h **** 
  45:../../libdaisy/src/hid/midi.h ****         //defaults
  46:../../libdaisy/src/hid/midi.h ****         uart_config.baudrate   = 31250;
  47:../../libdaisy/src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  48:../../libdaisy/src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  49:../../libdaisy/src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  50:../../libdaisy/src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  51:../../libdaisy/src/hid/midi.h **** 
  52:../../libdaisy/src/hid/midi.h ****         //user settings
  53:../../libdaisy/src/hid/midi.h ****         uart_config.periph        = config.periph;
  54:../../libdaisy/src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  55:../../libdaisy/src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  56:../../libdaisy/src/hid/midi.h **** 
  57:../../libdaisy/src/hid/midi.h ****         uart_.Init(uart_config);
  58:../../libdaisy/src/hid/midi.h ****     }
  59:../../libdaisy/src/hid/midi.h **** 
  60:../../libdaisy/src/hid/midi.h ****     inline void    StartRx() { uart_.StartRx(); }
  61:../../libdaisy/src/hid/midi.h ****     inline size_t  Readable() { return uart_.Readable(); }
  62:../../libdaisy/src/hid/midi.h ****     inline uint8_t Rx() { return uart_.PopRx(); }
  63:../../libdaisy/src/hid/midi.h ****     inline bool    RxActive() { return uart_.RxActive(); }
  64:../../libdaisy/src/hid/midi.h ****     inline void    FlushRx() { uart_.FlushRx(); }
  65:../../libdaisy/src/hid/midi.h ****     inline void    Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
  66:../../libdaisy/src/hid/midi.h **** 
  67:../../libdaisy/src/hid/midi.h ****   private:
  68:../../libdaisy/src/hid/midi.h ****     UartHandler uart_;
  69:../../libdaisy/src/hid/midi.h **** };
  70:../../libdaisy/src/hid/midi.h **** 
  71:../../libdaisy/src/hid/midi.h **** /** 
  72:../../libdaisy/src/hid/midi.h ****     @brief Simple MIDI Handler \n 
  73:../../libdaisy/src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n 
  74:../../libdaisy/src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
  75:../../libdaisy/src/hid/midi.h ****     @author shensley
  76:../../libdaisy/src/hid/midi.h ****     @date March 2020
  77:../../libdaisy/src/hid/midi.h **** */
ARM GAS  /tmp/ccVnVZaX.s 			page 5


  78:../../libdaisy/src/hid/midi.h **** template <typename Transport>
  79:../../libdaisy/src/hid/midi.h **** class MidiHandler
  80:../../libdaisy/src/hid/midi.h **** {
  81:../../libdaisy/src/hid/midi.h ****   public:
  82:../../libdaisy/src/hid/midi.h ****     MidiHandler() {}
  83:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
  69              		.loc 4 83 5 view .LVU5
  70              	.LBB411:
  71              	.LBI411:
  25:../../libdaisy/src/hid/midi.h **** 
  72              		.loc 4 25 5 view .LVU6
  25:../../libdaisy/src/hid/midi.h **** 
  73              		.loc 4 25 5 is_stmt 0 view .LVU7
  74              	.LBE411:
  75              	.LBE410:
  76              	.LBB412:
  77              	.LBI412:
  78              		.file 5 "../../libdaisy/src/hid/rgb_led.h"
   1:../../libdaisy/src/hid/rgb_led.h **** #pragma once
   2:../../libdaisy/src/hid/rgb_led.h **** #ifndef DSY_RGB_LED_H
   3:../../libdaisy/src/hid/rgb_led.h **** #define DSY_RGB_LED_H
   4:../../libdaisy/src/hid/rgb_led.h **** #include "hid/led.h"
   5:../../libdaisy/src/hid/rgb_led.h **** #include "util/color.h"
   6:../../libdaisy/src/hid/rgb_led.h **** 
   7:../../libdaisy/src/hid/rgb_led.h **** namespace daisy
   8:../../libdaisy/src/hid/rgb_led.h **** {
   9:../../libdaisy/src/hid/rgb_led.h **** /** @addtogroup feedback
  10:../../libdaisy/src/hid/rgb_led.h ****     @{
  11:../../libdaisy/src/hid/rgb_led.h **** */
  12:../../libdaisy/src/hid/rgb_led.h **** 
  13:../../libdaisy/src/hid/rgb_led.h **** /** 3x LEDs configured as an RGB for ease of use. */
  14:../../libdaisy/src/hid/rgb_led.h **** class RgbLed
  15:../../libdaisy/src/hid/rgb_led.h **** {
  16:../../libdaisy/src/hid/rgb_led.h ****   public:
  17:../../libdaisy/src/hid/rgb_led.h ****     RgbLed() {}
  18:../../libdaisy/src/hid/rgb_led.h ****     ~RgbLed() {}
  79              		.loc 5 18 5 is_stmt 1 view .LVU8
  80              	.LBB413:
  81              	.LBI413:
  82              		.file 6 "../../libdaisy/src/hid/led.h"
   1:../../libdaisy/src/hid/led.h **** 
   2:../../libdaisy/src/hid/led.h **** #pragma once
   3:../../libdaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../../libdaisy/src/hid/led.h **** #define DSY_LED_H
   5:../../libdaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../../libdaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../../libdaisy/src/hid/led.h **** 
   8:../../libdaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../../libdaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../../libdaisy/src/hid/led.h **** */
  11:../../libdaisy/src/hid/led.h **** 
  12:../../libdaisy/src/hid/led.h **** namespace daisy
  13:../../libdaisy/src/hid/led.h **** {
  14:../../libdaisy/src/hid/led.h **** /**
  15:../../libdaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../../libdaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../../libdaisy/src/hid/led.h ****     @author shensley
ARM GAS  /tmp/ccVnVZaX.s 			page 6


  18:../../libdaisy/src/hid/led.h ****     @date March 2020
  19:../../libdaisy/src/hid/led.h ****     @ingroup feedback
  20:../../libdaisy/src/hid/led.h **** */
  21:../../libdaisy/src/hid/led.h **** class Led
  22:../../libdaisy/src/hid/led.h **** {
  23:../../libdaisy/src/hid/led.h ****   public:
  24:../../libdaisy/src/hid/led.h ****     Led() {}
  25:../../libdaisy/src/hid/led.h ****     ~Led() {}
  83              		.loc 6 25 5 view .LVU9
  84              		.loc 6 25 5 is_stmt 0 view .LVU10
  85              	.LBE413:
  86              	.LBB414:
  87              	.LBI414:
  88              		.loc 6 25 5 is_stmt 1 view .LVU11
  89              		.loc 6 25 5 is_stmt 0 view .LVU12
  90              	.LBE414:
  91              	.LBB415:
  92              	.LBI415:
  93              		.loc 6 25 5 is_stmt 1 view .LVU13
  94              		.loc 6 25 5 is_stmt 0 view .LVU14
  95              	.LBE415:
  96              	.LBE412:
  97              	.LBB416:
  98              	.LBI416:
  99              		.loc 5 18 5 is_stmt 1 view .LVU15
 100              	.LBB417:
 101              	.LBI417:
 102              		.loc 6 25 5 view .LVU16
 103              		.loc 6 25 5 is_stmt 0 view .LVU17
 104              	.LBE417:
 105              	.LBB418:
 106              	.LBI418:
 107              		.loc 6 25 5 is_stmt 1 view .LVU18
 108              		.loc 6 25 5 is_stmt 0 view .LVU19
 109              	.LBE418:
 110              	.LBB419:
 111              	.LBI419:
 112              		.loc 6 25 5 is_stmt 1 view .LVU20
 113              		.loc 6 25 5 is_stmt 0 view .LVU21
 114              	.LBE419:
 115              	.LBE416:
 116              	.LBB420:
 117              	.LBI420:
 118              		.file 7 "../../libdaisy/src/hid/switch.h"
   1:../../libdaisy/src/hid/switch.h **** #pragma once
   2:../../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../../libdaisy/src/hid/switch.h **** 
   7:../../libdaisy/src/hid/switch.h **** namespace daisy
   8:../../libdaisy/src/hid/switch.h **** {
   9:../../libdaisy/src/hid/switch.h **** /** 
  10:../../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../../libdaisy/src/hid/switch.h ****     @date December 2019
ARM GAS  /tmp/ccVnVZaX.s 			page 7


  14:../../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../../libdaisy/src/hid/switch.h **** */
  16:../../libdaisy/src/hid/switch.h **** class Switch
  17:../../libdaisy/src/hid/switch.h **** {
  18:../../libdaisy/src/hid/switch.h ****   public:
  19:../../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../../libdaisy/src/hid/switch.h ****     enum Type
  21:../../libdaisy/src/hid/switch.h ****     {
  22:../../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../../libdaisy/src/hid/switch.h ****     };
  25:../../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../../libdaisy/src/hid/switch.h ****     {
  28:../../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  30:../../libdaisy/src/hid/switch.h ****     };
  31:../../libdaisy/src/hid/switch.h **** 
  32:../../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../../libdaisy/src/hid/switch.h ****     enum Pull
  34:../../libdaisy/src/hid/switch.h ****     {
  35:../../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../../libdaisy/src/hid/switch.h ****     };
  39:../../libdaisy/src/hid/switch.h **** 
  40:../../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 119              		.loc 7 41 5 is_stmt 1 view .LVU22
 120              		.loc 7 41 5 is_stmt 0 view .LVU23
 121              	.LBE420:
 122              	.LBB421:
 123              	.LBI421:
 124              		.loc 7 41 5 is_stmt 1 view .LVU24
 125              		.loc 7 41 5 is_stmt 0 view .LVU25
 126              	.LBE421:
 127              	.LBB422:
 128              	.LBI422:
 129              		.loc 2 23 5 is_stmt 1 view .LVU26
 130              		.loc 2 23 5 is_stmt 0 view .LVU27
 131              	.LBE422:
 132              	.LBB423:
 133              	.LBI423:
 134              		.loc 2 23 5 is_stmt 1 view .LVU28
 135              		.loc 2 23 5 is_stmt 0 view .LVU29
 136              	.LBE423:
 137              	.LBB424:
 138              	.LBI424:
 139              		.file 8 "../../libdaisy/src/hid/encoder.h"
   1:../../libdaisy/src/hid/encoder.h **** #pragma once
   2:../../libdaisy/src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../../libdaisy/src/hid/encoder.h **** #define DSY_ENCODER_H
   4:../../libdaisy/src/hid/encoder.h **** #include "daisy_core.h"
   5:../../libdaisy/src/hid/encoder.h **** #include "per/gpio.h"
   6:../../libdaisy/src/hid/encoder.h **** #include "hid/switch.h"
   7:../../libdaisy/src/hid/encoder.h **** 
   8:../../libdaisy/src/hid/encoder.h **** namespace daisy
ARM GAS  /tmp/ccVnVZaX.s 			page 8


   9:../../libdaisy/src/hid/encoder.h **** {
  10:../../libdaisy/src/hid/encoder.h **** /** 
  11:../../libdaisy/src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../../libdaisy/src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../../libdaisy/src/hid/encoder.h ****     @author Stephen Hensley
  14:../../libdaisy/src/hid/encoder.h ****     @date December 2019
  15:../../libdaisy/src/hid/encoder.h ****     @ingroup controls
  16:../../libdaisy/src/hid/encoder.h **** */
  17:../../libdaisy/src/hid/encoder.h **** class Encoder
  18:../../libdaisy/src/hid/encoder.h **** {
  19:../../libdaisy/src/hid/encoder.h ****   public:
  20:../../libdaisy/src/hid/encoder.h ****     Encoder() {}
  21:../../libdaisy/src/hid/encoder.h ****     ~Encoder() {}
 140              		.loc 8 21 5 is_stmt 1 view .LVU30
 141              	.LBB425:
 142              	.LBI425:
 143              		.loc 7 41 5 view .LVU31
 144              		.loc 7 41 5 is_stmt 0 view .LVU32
 145              	.LBE425:
 146              	.LBE424:
 147              	.LBB426:
 148              	.LBI426:
 149              		.file 9 "../../libdaisy/src/daisy_seed.h"
   1:../../libdaisy/src/daisy_seed.h **** #pragma once
   2:../../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libdaisy/src/daisy_seed.h **** 
   5:../../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../../libdaisy/src/daisy_seed.h **** 
   7:../../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../../libdaisy/src/daisy_seed.h **** 
  10:../../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../../libdaisy/src/daisy_seed.h **** {
  12:../../libdaisy/src/daisy_seed.h **** /**
  13:../../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libdaisy/src/daisy_seed.h **** 
  16:../../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../../libdaisy/src/daisy_seed.h **** */
  18:../../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../../libdaisy/src/daisy_seed.h **** {
  20:../../libdaisy/src/daisy_seed.h ****   public:
  21:../../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 150              		.loc 9 22 5 is_stmt 1 view .LVU33
 151              	.LBB427:
 152              	.LBI427:
 153              		.file 10 "../../libdaisy/src/sys/system.h"
   1:../../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libdaisy/src/sys/system.h **** 
   4:../../libdaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libdaisy/src/sys/system.h **** 
   6:../../libdaisy/src/sys/system.h **** #include <cstdint>
   7:../../libdaisy/src/sys/system.h **** #include "per/tim.h"
   8:../../libdaisy/src/sys/system.h **** 
ARM GAS  /tmp/ccVnVZaX.s 			page 9


   9:../../libdaisy/src/sys/system.h **** namespace daisy
  10:../../libdaisy/src/sys/system.h **** {
  11:../../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libdaisy/src/sys/system.h ****  **
  15:../../libdaisy/src/sys/system.h ****  ** @author shensley
  16:../../libdaisy/src/sys/system.h ****  ** @addtogroup system
  17:../../libdaisy/src/sys/system.h ****  */
  18:../../libdaisy/src/sys/system.h **** class System
  19:../../libdaisy/src/sys/system.h **** {
  20:../../libdaisy/src/sys/system.h ****   public:
  21:../../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libdaisy/src/sys/system.h ****     struct Config
  23:../../libdaisy/src/sys/system.h ****     {
  24:../../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../../libdaisy/src/sys/system.h ****         {
  27:../../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../../libdaisy/src/sys/system.h ****         };
  30:../../libdaisy/src/sys/system.h **** 
  31:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  34:../../libdaisy/src/sys/system.h ****          ** */
  35:../../libdaisy/src/sys/system.h ****         void Defaults()
  36:../../libdaisy/src/sys/system.h ****         {
  37:../../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  38:../../libdaisy/src/sys/system.h ****             use_dcache = true;
  39:../../libdaisy/src/sys/system.h ****             use_icache = true;
  40:../../libdaisy/src/sys/system.h ****         }
  41:../../libdaisy/src/sys/system.h **** 
  42:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  43:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  44:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  45:../../libdaisy/src/sys/system.h ****          ** */
  46:../../libdaisy/src/sys/system.h ****         void Boost()
  47:../../libdaisy/src/sys/system.h ****         {
  48:../../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  49:../../libdaisy/src/sys/system.h ****             use_dcache = true;
  50:../../libdaisy/src/sys/system.h ****             use_icache = true;
  51:../../libdaisy/src/sys/system.h ****         }
  52:../../libdaisy/src/sys/system.h **** 
  53:../../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  54:../../libdaisy/src/sys/system.h ****         bool       use_dcache;
  55:../../libdaisy/src/sys/system.h ****         bool       use_icache;
  56:../../libdaisy/src/sys/system.h ****     };
  57:../../libdaisy/src/sys/system.h **** 
  58:../../libdaisy/src/sys/system.h ****     System() {}
  59:../../libdaisy/src/sys/system.h ****     ~System() {}
 154              		.loc 10 59 5 view .LVU34
 155              		.loc 10 59 5 is_stmt 0 view .LVU35
 156              	.LBE427:
 157              	.LBB428:
 158              	.LBI428:
 159              		.file 11 "../../libdaisy/src/hid/usb.h"
ARM GAS  /tmp/ccVnVZaX.s 			page 10


   1:../../libdaisy/src/hid/usb.h **** #pragma once
   2:../../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../../libdaisy/src/hid/usb.h **** 
   7:../../libdaisy/src/hid/usb.h **** namespace daisy
   8:../../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../../libdaisy/src/hid/usb.h ****     @{
  10:../../libdaisy/src/hid/usb.h **** */
  11:../../libdaisy/src/hid/usb.h **** 
  12:../../libdaisy/src/hid/usb.h **** {
  13:../../libdaisy/src/hid/usb.h **** /** 
  14:../../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../../libdaisy/src/hid/usb.h **** */
  18:../../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../../libdaisy/src/hid/usb.h **** {
  20:../../libdaisy/src/hid/usb.h ****   public:
  21:../../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libdaisy/src/hid/usb.h ****     enum class Result
  23:../../libdaisy/src/hid/usb.h ****     {
  24:../../libdaisy/src/hid/usb.h ****         OK,
  25:../../libdaisy/src/hid/usb.h ****         ERR,
  26:../../libdaisy/src/hid/usb.h ****     };
  27:../../libdaisy/src/hid/usb.h **** 
  28:../../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../../libdaisy/src/hid/usb.h ****     {
  31:../../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libdaisy/src/hid/usb.h ****     };
  35:../../libdaisy/src/hid/usb.h **** 
  36:../../libdaisy/src/hid/usb.h **** 
  37:../../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libdaisy/src/hid/usb.h **** 
  40:../../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../../libdaisy/src/hid/usb.h **** 
  42:../../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
 160              		.loc 11 42 5 is_stmt 1 view .LVU36
 161              		.loc 11 42 5 is_stmt 0 view .LVU37
 162              	.LBE428:
 163              	.LBB429:
 164              	.LBI429:
 165              		.file 12 "../../libdaisy/src/per/adc.h"
   1:../../libdaisy/src/per/adc.h **** #pragma once
   2:../../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../../libdaisy/src/per/adc.h **** 
   9:../../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
ARM GAS  /tmp/ccVnVZaX.s 			page 11


  10:../../libdaisy/src/per/adc.h **** 
  11:../../libdaisy/src/per/adc.h **** namespace daisy
  12:../../libdaisy/src/per/adc.h **** {
  13:../../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../../libdaisy/src/per/adc.h ****     @{
  15:../../libdaisy/src/per/adc.h **** */
  16:../../libdaisy/src/per/adc.h **** 
  17:../../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../../libdaisy/src/per/adc.h **** */
  21:../../libdaisy/src/per/adc.h **** 
  22:../../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../../libdaisy/src/per/adc.h **** {
  25:../../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../../libdaisy/src/per/adc.h ****     {
  28:../../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../../libdaisy/src/per/adc.h ****     };
  33:../../libdaisy/src/per/adc.h **** 
  34:../../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../../libdaisy/src/per/adc.h ****      */
  37:../../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../../libdaisy/src/per/adc.h **** 
  39:../../libdaisy/src/per/adc.h ****     /** 
  40:../../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../../libdaisy/src/per/adc.h ****     */
  51:../../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
  53:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../../libdaisy/src/per/adc.h **** 
  57:../../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../../libdaisy/src/per/adc.h **** };
  61:../../libdaisy/src/per/adc.h **** 
  62:../../libdaisy/src/per/adc.h **** /**
  63:../../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../../libdaisy/src/per/adc.h **** */
  65:../../libdaisy/src/per/adc.h **** class AdcHandle
  66:../../libdaisy/src/per/adc.h **** {
ARM GAS  /tmp/ccVnVZaX.s 			page 12


  67:../../libdaisy/src/per/adc.h ****   public:
  68:../../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../../libdaisy/src/per/adc.h ****     {
  71:../../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../../libdaisy/src/per/adc.h ****     };
  83:../../libdaisy/src/per/adc.h **** 
  84:../../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 166              		.loc 12 85 5 is_stmt 1 view .LVU38
 167              		.loc 12 85 5 is_stmt 0 view .LVU39
 168              	.LBE429:
 169              	.LBB430:
 170              	.LBI430:
 171              		.file 13 "../../libdaisy/src/hid/audio.h"
   1:../../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libdaisy/src/hid/audio.h **** 
   4:../../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../../libdaisy/src/hid/audio.h **** 
   6:../../libdaisy/src/hid/audio.h **** namespace daisy
   7:../../libdaisy/src/hid/audio.h **** {
   8:../../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../../libdaisy/src/hid/audio.h **** {
  10:../../libdaisy/src/hid/audio.h ****   public:
  11:../../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../../libdaisy/src/hid/audio.h ****     struct Config
  14:../../libdaisy/src/hid/audio.h ****     {
  15:../../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../../libdaisy/src/hid/audio.h ****     };
  19:../../libdaisy/src/hid/audio.h **** 
  20:../../libdaisy/src/hid/audio.h ****     enum class Result
  21:../../libdaisy/src/hid/audio.h ****     {
  22:../../libdaisy/src/hid/audio.h ****         OK,
  23:../../libdaisy/src/hid/audio.h ****         ERR,
  24:../../libdaisy/src/hid/audio.h ****     };
  25:../../libdaisy/src/hid/audio.h **** 
  26:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  27:../../libdaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  28:../../libdaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  29:../../libdaisy/src/hid/audio.h ****     */
  30:../../libdaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  31:../../libdaisy/src/hid/audio.h **** 
  32:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
ARM GAS  /tmp/ccVnVZaX.s 			page 13


  33:../../libdaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  34:../../libdaisy/src/hid/audio.h ****     */
  35:../../libdaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  36:../../libdaisy/src/hid/audio.h **** 
  37:../../libdaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  38:../../libdaisy/src/hid/audio.h ****    * Non-Interleaving audio callbacks in daisy will be of this type
  39:../../libdaisy/src/hid/audio.h ****   */
  40:../../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  41:../../libdaisy/src/hid/audio.h ****                                   OutputBuffer out,
  42:../../libdaisy/src/hid/audio.h ****                                   size_t       size);
  43:../../libdaisy/src/hid/audio.h **** 
  44:../../libdaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  45:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  46:../../libdaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  47:../../libdaisy/src/hid/audio.h ****     */
  48:../../libdaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  49:../../libdaisy/src/hid/audio.h **** 
  50:../../libdaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  51:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  52:../../libdaisy/src/hid/audio.h ****     */
  53:../../libdaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  54:../../libdaisy/src/hid/audio.h **** 
  55:../../libdaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  56:../../libdaisy/src/hid/audio.h ****    * Interleaving audio callbacks in daisy must be of this type
  57:../../libdaisy/src/hid/audio.h ****   */
  58:../../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  59:../../libdaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  60:../../libdaisy/src/hid/audio.h ****                                               size_t                   size);
  61:../../libdaisy/src/hid/audio.h **** 
  62:../../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  63:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 172              		.loc 13 63 5 is_stmt 1 view .LVU40
 173              		.loc 13 63 5 is_stmt 0 view .LVU41
 174              	.LBE430:
 175              	.LBE426:
 176              		.loc 3 36 18 view .LVU42
 177 0000 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE2046:
 181              		.weak	_ZN5daisy8DaisyPodD1Ev
 182              		.thumb_set _ZN5daisy8DaisyPodD1Ev,_ZN5daisy8DaisyPodD2Ev
 183 0002 00BF     		.section	.text._ZN7daisysp5AdEnvD2Ev,"axG",%progbits,_ZN7daisysp5AdEnvD5Ev,comdat
 184              		.align	1
 185              		.p2align 2,,3
 186              		.weak	_ZN7daisysp5AdEnvD2Ev
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 190              		.fpu fpv5-d16
 192              	_ZN7daisysp5AdEnvD2Ev:
 193              	.LVL2:
 194              	.LFB2053:
 195              		.file 14 "../../DaisySP/Source/Control/adenv.h"
   1:../../DaisySP/Source/Control/adenv.h **** #pragma once
   2:../../DaisySP/Source/Control/adenv.h **** #ifndef ADENV_H
   3:../../DaisySP/Source/Control/adenv.h **** #define ADENV_H
   4:../../DaisySP/Source/Control/adenv.h **** #include <stdint.h>
ARM GAS  /tmp/ccVnVZaX.s 			page 14


   5:../../DaisySP/Source/Control/adenv.h **** #ifdef __cplusplus
   6:../../DaisySP/Source/Control/adenv.h **** 
   7:../../DaisySP/Source/Control/adenv.h **** namespace daisysp
   8:../../DaisySP/Source/Control/adenv.h **** {
   9:../../DaisySP/Source/Control/adenv.h **** /** Distinct stages that the phase of the envelope can be located in.
  10:../../DaisySP/Source/Control/adenv.h ****     @see AdEnv
  11:../../DaisySP/Source/Control/adenv.h **** */
  12:../../DaisySP/Source/Control/adenv.h **** enum AdEnvSegment
  13:../../DaisySP/Source/Control/adenv.h **** {
  14:../../DaisySP/Source/Control/adenv.h ****     /** located at phase location 0, and not currently running */
  15:../../DaisySP/Source/Control/adenv.h ****     ADENV_SEG_IDLE,
  16:../../DaisySP/Source/Control/adenv.h ****     /** First segment of envelope where phase moves from MIN value to MAX value */
  17:../../DaisySP/Source/Control/adenv.h ****     ADENV_SEG_ATTACK,
  18:../../DaisySP/Source/Control/adenv.h ****     /** Second segment of envelope where phase moves from MAX to MIN value */
  19:../../DaisySP/Source/Control/adenv.h ****     ADENV_SEG_DECAY,
  20:../../DaisySP/Source/Control/adenv.h ****     /** The final segment of the envelope (currently decay) */
  21:../../DaisySP/Source/Control/adenv.h ****     ADENV_SEG_LAST,
  22:../../DaisySP/Source/Control/adenv.h **** };
  23:../../DaisySP/Source/Control/adenv.h **** 
  24:../../DaisySP/Source/Control/adenv.h **** /** Trigger-able envelope with adjustable min/max, and independent per-segment time control.
  25:../../DaisySP/Source/Control/adenv.h **** 
  26:../../DaisySP/Source/Control/adenv.h ****     \author shensley
  27:../../DaisySP/Source/Control/adenv.h ****     \todo - Add Cycling
  28:../../DaisySP/Source/Control/adenv.h ****     \todo - Implement Curve (its only linear for now).
  29:../../DaisySP/Source/Control/adenv.h ****     \todo - Maybe make this an ADsr_ that has AD/AR/Asr_ modes.
  30:../../DaisySP/Source/Control/adenv.h ****  */
  31:../../DaisySP/Source/Control/adenv.h **** class AdEnv
  32:../../DaisySP/Source/Control/adenv.h **** {
  33:../../DaisySP/Source/Control/adenv.h ****   public:
  34:../../DaisySP/Source/Control/adenv.h ****     AdEnv() {}
  35:../../DaisySP/Source/Control/adenv.h ****     ~AdEnv() {}
 196              		.loc 14 35 5 is_stmt 1 view -0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              		.loc 14 35 15 is_stmt 0 view .LVU44
 202 0000 7047     		bx	lr
 203              		.cfi_endproc
 204              	.LFE2053:
 206              		.weak	_ZN7daisysp5AdEnvD1Ev
 207              		.thumb_set _ZN7daisysp5AdEnvD1Ev,_ZN7daisysp5AdEnvD2Ev
 208 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 209              		.align	1
 210              		.p2align 2,,3
 211              		.weak	_ZN7daisysp10OscillatorD2Ev
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 215              		.fpu fpv5-d16
 217              	_ZN7daisysp10OscillatorD2Ev:
 218              	.LVL3:
 219              	.LFB3681:
 220              		.file 15 "../../DaisySP/Source/Synthesis/oscillator.h"
   1:../../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
ARM GAS  /tmp/ccVnVZaX.s 			page 15


   4:../../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../../DaisySP/Source/Synthesis/oscillator.h **** {
  10:../../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../../DaisySP/Source/Synthesis/oscillator.h **** */
  12:../../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
  13:../../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 221              		.loc 15 16 5 is_stmt 1 view -0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226              		.loc 15 16 20 is_stmt 0 view .LVU46
 227 0000 7047     		bx	lr
 228              		.cfi_endproc
 229              	.LFE3681:
 231              		.weak	_ZN7daisysp10OscillatorD1Ev
 232              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 233 0002 00BF     		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 234              		.align	1
 235              		.p2align 2,,3
 236              		.weak	_ZN7daisysp3SvfD2Ev
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu fpv5-d16
 242              	_ZN7daisysp3SvfD2Ev:
 243              	.LVL4:
 244              	.LFB3697:
 245              		.file 16 "../../DaisySP/Source/Filters/svf.h"
   1:../../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../../DaisySP/Source/Filters/svf.h **** 
   5:../../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../../DaisySP/Source/Filters/svf.h **** {
   7:../../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../../DaisySP/Source/Filters/svf.h **** 
   9:../../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../../DaisySP/Source/Filters/svf.h **** 
  11:../../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../../DaisySP/Source/Filters/svf.h **** 
  13:../../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../../DaisySP/Source/Filters/svf.h **** 
  16:../../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../../DaisySP/Source/Filters/svf.h **** */
  18:../../DaisySP/Source/Filters/svf.h **** class Svf
  19:../../DaisySP/Source/Filters/svf.h **** {
  20:../../DaisySP/Source/Filters/svf.h ****   public:
  21:../../DaisySP/Source/Filters/svf.h ****     Svf() {}
ARM GAS  /tmp/ccVnVZaX.s 			page 16


  22:../../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 246              		.loc 16 22 5 is_stmt 1 view -0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250              		@ link register save eliminated.
 251              		.loc 16 22 13 is_stmt 0 view .LVU48
 252 0000 7047     		bx	lr
 253              		.cfi_endproc
 254              	.LFE3697:
 256              		.weak	_ZN7daisysp3SvfD1Ev
 257              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 258 0002 00BF     		.section	.text._ZN7daisysp8ReverbScD2Ev,"axG",%progbits,_ZN7daisysp8ReverbScD5Ev,comdat
 259              		.align	1
 260              		.p2align 2,,3
 261              		.weak	_ZN7daisysp8ReverbScD2Ev
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv5-d16
 267              	_ZN7daisysp8ReverbScD2Ev:
 268              	.LVL5:
 269              	.LFB3884:
 270              		.file 17 "../../DaisySP/Source/Effects/reverbsc.h"
   1:../../DaisySP/Source/Effects/reverbsc.h **** #pragma once
   2:../../DaisySP/Source/Effects/reverbsc.h **** #ifndef DSYSP_REVERBSC_H
   3:../../DaisySP/Source/Effects/reverbsc.h **** #define DSYSP_REVERBSC_H
   4:../../DaisySP/Source/Effects/reverbsc.h **** 
   5:../../DaisySP/Source/Effects/reverbsc.h **** #define DSY_REVERBSC_MAX_SIZE 98936
   6:../../DaisySP/Source/Effects/reverbsc.h **** 
   7:../../DaisySP/Source/Effects/reverbsc.h **** namespace daisysp
   8:../../DaisySP/Source/Effects/reverbsc.h **** {
   9:../../DaisySP/Source/Effects/reverbsc.h **** /**Delay line for internal reverb use
  10:../../DaisySP/Source/Effects/reverbsc.h **** */
  11:../../DaisySP/Source/Effects/reverbsc.h **** typedef struct
  12:../../DaisySP/Source/Effects/reverbsc.h **** {
  13:../../DaisySP/Source/Effects/reverbsc.h ****     int    write_pos;         /**< write position */
  14:../../DaisySP/Source/Effects/reverbsc.h ****     int    buffer_size;       /**< buffer size */
  15:../../DaisySP/Source/Effects/reverbsc.h ****     int    read_pos;          /**< read position */
  16:../../DaisySP/Source/Effects/reverbsc.h ****     int    read_pos_frac;     /**< fractional component of read pos */
  17:../../DaisySP/Source/Effects/reverbsc.h ****     int    read_pos_frac_inc; /**< increment for fractional */
  18:../../DaisySP/Source/Effects/reverbsc.h ****     int    dummy;             /**<  dummy var */
  19:../../DaisySP/Source/Effects/reverbsc.h ****     int    seed_val;          /**< randseed */
  20:../../DaisySP/Source/Effects/reverbsc.h ****     int    rand_line_cnt;     /**< number of random lines */
  21:../../DaisySP/Source/Effects/reverbsc.h ****     float  filter_state;      /**< state of filter */
  22:../../DaisySP/Source/Effects/reverbsc.h ****     float *buf;               /**< buffer ptr */
  23:../../DaisySP/Source/Effects/reverbsc.h **** } ReverbScDl;
  24:../../DaisySP/Source/Effects/reverbsc.h **** 
  25:../../DaisySP/Source/Effects/reverbsc.h **** /** Stereo Reverb
  26:../../DaisySP/Source/Effects/reverbsc.h **** 
  27:../../DaisySP/Source/Effects/reverbsc.h **** Reverb SC:               Ported from csound/soundpipe
  28:../../DaisySP/Source/Effects/reverbsc.h **** 
  29:../../DaisySP/Source/Effects/reverbsc.h **** Original author(s):        Sean Costello, Istvan Varga
  30:../../DaisySP/Source/Effects/reverbsc.h **** 
  31:../../DaisySP/Source/Effects/reverbsc.h **** Year:                    1999, 2005
  32:../../DaisySP/Source/Effects/reverbsc.h **** 
  33:../../DaisySP/Source/Effects/reverbsc.h **** Ported to soundpipe by:  Paul Batchelor
ARM GAS  /tmp/ccVnVZaX.s 			page 17


  34:../../DaisySP/Source/Effects/reverbsc.h **** 
  35:../../DaisySP/Source/Effects/reverbsc.h **** Ported by:                Stephen Hensley
  36:../../DaisySP/Source/Effects/reverbsc.h **** */
  37:../../DaisySP/Source/Effects/reverbsc.h **** class ReverbSc
  38:../../DaisySP/Source/Effects/reverbsc.h **** {
  39:../../DaisySP/Source/Effects/reverbsc.h ****   public:
  40:../../DaisySP/Source/Effects/reverbsc.h ****     ReverbSc() {}
  41:../../DaisySP/Source/Effects/reverbsc.h ****     ~ReverbSc() {}
 271              		.loc 17 41 5 is_stmt 1 view -0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              		@ link register save eliminated.
 276              		.loc 17 41 18 is_stmt 0 view .LVU50
 277 0000 7047     		bx	lr
 278              		.cfi_endproc
 279              	.LFE3884:
 281              		.weak	_ZN7daisysp8ReverbScD1Ev
 282              		.thumb_set _ZN7daisysp8ReverbScD1Ev,_ZN7daisysp8ReverbScD2Ev
 283 0002 00BF     		.section	.text._ZL5audioPKfPfj,"ax",%progbits
 284              		.align	1
 285              		.p2align 2,,3
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 289              		.fpu fpv5-d16
 291              	_ZL5audioPKfPfj:
 292              	.LVL6:
 293              	.LFB4220:
 294              		.file 18 "MusicBox.cpp"
   1:MusicBox.cpp  **** #include "daisy_pod.h"
   2:MusicBox.cpp  **** #include "daisysp.h"
   3:MusicBox.cpp  **** #include <math.h>
   4:MusicBox.cpp  **** 
   5:MusicBox.cpp  **** using namespace daisy;
   6:MusicBox.cpp  **** using namespace daisysp;
   7:MusicBox.cpp  **** 
   8:MusicBox.cpp  **** DaisyPod   hw;
   9:MusicBox.cpp  **** Oscillator osc;
  10:MusicBox.cpp  **** Svf        filt;
  11:MusicBox.cpp  **** ReverbSc   verb;
  12:MusicBox.cpp  **** AdEnv      env;
  13:MusicBox.cpp  **** Parameter  p_xf, p_vamt, p_dec, p_vtime;
  14:MusicBox.cpp  **** 
  15:MusicBox.cpp  **** const static float scale[7] = {0, 2, 4, 5, 7, 9, 11};
  16:MusicBox.cpp  **** 
  17:MusicBox.cpp  **** static float get_new_note()
  18:MusicBox.cpp  **** {
  19:MusicBox.cpp  ****     int32_t val, oct, idx;
  20:MusicBox.cpp  ****     val = myrand() % 14;
  21:MusicBox.cpp  ****     oct = val / 7;
  22:MusicBox.cpp  ****     idx = val % 7;
  23:MusicBox.cpp  ****     return scale[idx] + (12 * oct);
  24:MusicBox.cpp  **** }
  25:MusicBox.cpp  **** 
  26:MusicBox.cpp  **** static float freq;
  27:MusicBox.cpp  **** float        sig, rawsig, filtsig, sendsig, wetvl, wetvr;
ARM GAS  /tmp/ccVnVZaX.s 			page 18


  28:MusicBox.cpp  **** float        xf, vamt, dec, time;
  29:MusicBox.cpp  **** static void  audio(AudioHandle::InterleavingInputBuffer  in,
  30:MusicBox.cpp  ****                    AudioHandle::InterleavingOutputBuffer out,
  31:MusicBox.cpp  ****                    size_t                                size)
  32:MusicBox.cpp  **** {
 295              		.loc 18 32 1 is_stmt 1 view -0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 8
 298              		@ frame_needed = 0, uses_anonymous_args = 0
  33:MusicBox.cpp  ****     hw.ProcessDigitalControls();
 299              		.loc 18 33 5 view .LVU52
  32:MusicBox.cpp  ****     hw.ProcessDigitalControls();
 300              		.loc 18 32 1 is_stmt 0 view .LVU53
 301 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 302              		.cfi_def_cfa_offset 36
 303              		.cfi_offset 4, -36
 304              		.cfi_offset 5, -32
 305              		.cfi_offset 6, -28
 306              		.cfi_offset 7, -24
 307              		.cfi_offset 8, -20
 308              		.cfi_offset 9, -16
 309              		.cfi_offset 10, -12
 310              		.cfi_offset 11, -8
 311              		.cfi_offset 14, -4
 312              		.loc 18 33 30 view .LVU54
 313 0004 5E4E     		ldr	r6, .L19
  32:MusicBox.cpp  ****     hw.ProcessDigitalControls();
 314              		.loc 18 32 1 view .LVU55
 315 0006 85B0     		sub	sp, sp, #20
 316              		.cfi_def_cfa_offset 56
  32:MusicBox.cpp  ****     hw.ProcessDigitalControls();
 317              		.loc 18 32 1 view .LVU56
 318 0008 0C46     		mov	r4, r1
 319 000a 1546     		mov	r5, r2
 320              		.loc 18 33 30 view .LVU57
 321 000c 3046     		mov	r0, r6
 322              	.LVL7:
 323              		.loc 18 33 30 view .LVU58
 324 000e FFF7FEFF 		bl	_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
 325              	.LVL8:
  34:MusicBox.cpp  ****     if(hw.button1.RisingEdge())
 326              		.loc 18 34 5 is_stmt 1 view .LVU59
  42:../../libdaisy/src/hid/switch.h **** 
  43:../../libdaisy/src/hid/switch.h ****     /** 
  44:../../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../../libdaisy/src/hid/switch.h ****     */
  51:../../libdaisy/src/hid/switch.h ****     void
  52:../../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../../libdaisy/src/hid/switch.h **** 
  54:../../libdaisy/src/hid/switch.h ****     /**
  55:../../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
ARM GAS  /tmp/ccVnVZaX.s 			page 19


  57:../../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../../libdaisy/src/hid/switch.h ****     */
  59:../../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../../libdaisy/src/hid/switch.h **** 
  61:../../libdaisy/src/hid/switch.h ****     /** 
  62:../../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../../libdaisy/src/hid/switch.h ****     */
  66:../../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../../libdaisy/src/hid/switch.h **** 
  68:../../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 327              		.loc 7 69 38 view .LVU60
 328              		.loc 18 34 5 is_stmt 0 view .LVU61
 329 0012 96F8A930 		ldrb	r3, [r6, #169]	@ zero_extendqisi2
 330 0016 7F2B     		cmp	r3, #127
 331 0018 64D0     		beq	.L17
 332 001a 5A4F     		ldr	r7, .L19+4
 333              	.L9:
  35:MusicBox.cpp  ****     {
  36:MusicBox.cpp  ****         freq = mtof(48.0f + get_new_note());
  37:MusicBox.cpp  ****         osc.SetFreq(freq);
  38:MusicBox.cpp  ****         env.SetTime(ADENV_SEG_DECAY, dec);
  39:MusicBox.cpp  ****         env.Trigger();
  40:MusicBox.cpp  ****     }
  41:MusicBox.cpp  **** 
  42:MusicBox.cpp  ****     // Get Parameters
  43:MusicBox.cpp  ****     xf   = p_xf.Process();
 334              		.loc 18 43 5 is_stmt 1 view .LVU62
 335              		.loc 18 43 24 is_stmt 0 view .LVU63
 336 001c 5A48     		ldr	r0, .L19+8
 337 001e FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 338              	.LVL9:
 339              		.loc 18 43 10 view .LVU64
 340 0022 5A4B     		ldr	r3, .L19+12
  44:MusicBox.cpp  ****     vamt = p_vamt.Process();
 341              		.loc 18 44 26 view .LVU65
 342 0024 5A48     		ldr	r0, .L19+16
 343              		.loc 18 44 10 view .LVU66
 344 0026 DFF8B491 		ldr	r9, .L19+92
  43:MusicBox.cpp  ****     vamt = p_vamt.Process();
 345              		.loc 18 43 10 view .LVU67
 346 002a 83ED000A 		vstr.32	s0, [r3]
 347              		.loc 18 44 5 is_stmt 1 view .LVU68
 348              		.loc 18 44 26 is_stmt 0 view .LVU69
 349 002e FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 350              	.LVL10:
  45:MusicBox.cpp  ****     dec  = p_dec.Process();
 351              		.loc 18 45 25 view .LVU70
 352 0032 5848     		ldr	r0, .L19+20
  44:MusicBox.cpp  ****     vamt = p_vamt.Process();
 353              		.loc 18 44 10 view .LVU71
 354 0034 89ED000A 		vstr.32	s0, [r9]
 355              		.loc 18 45 5 is_stmt 1 view .LVU72
 356              		.loc 18 45 25 is_stmt 0 view .LVU73
 357 0038 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
ARM GAS  /tmp/ccVnVZaX.s 			page 20


 358              	.LVL11:
 359              		.loc 18 45 10 view .LVU74
 360 003c 87ED000A 		vstr.32	s0, [r7]
  46:MusicBox.cpp  **** 
  47:MusicBox.cpp  ****     // Audio Loop
  48:MusicBox.cpp  ****     for(size_t i = 0; i < size; i += 2)
 361              		.loc 18 48 5 is_stmt 1 view .LVU75
 362              	.LVL12:
 363              	.LBB431:
 364              		.loc 18 48 25 view .LVU76
 365 0040 002D     		cmp	r5, #0
 366 0042 4CD0     		beq	.L8
 367 0044 013D     		subs	r5, r5, #1
 368              	.LVL13:
 369              		.loc 18 48 16 is_stmt 0 view .LVU77
 370 0046 0026     		movs	r6, #0
 371 0048 DFF89481 		ldr	r8, .L19+96
 372 004c 25F00103 		bic	r3, r5, #1
 373 0050 DFF854B1 		ldr	fp, .L19+40
 374 0054 504D     		ldr	r5, .L19+24
 375              	.LVL14:
 376              		.loc 18 48 16 view .LVU78
 377 0056 DFF860A1 		ldr	r10, .L19+56
 378 005a 0393     		str	r3, [sp, #12]
 379              	.LVL15:
 380              	.L11:
  49:MusicBox.cpp  ****     {
  50:MusicBox.cpp  ****         // Process
  51:MusicBox.cpp  ****         rawsig = osc.Process();
 381              		.loc 18 51 9 is_stmt 1 discriminator 2 view .LVU79
 382              		.loc 18 51 29 is_stmt 0 discriminator 2 view .LVU80
 383 005c 4F48     		ldr	r0, .L19+28
 384 005e 0834     		adds	r4, r4, #8
 385 0060 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 386              	.LVL16:
  52:MusicBox.cpp  ****         sig    = rawsig * env.Process();
 387              		.loc 18 52 38 discriminator 2 view .LVU81
 388 0064 4E48     		ldr	r0, .L19+32
  51:MusicBox.cpp  ****         sig    = rawsig * env.Process();
 389              		.loc 18 51 16 discriminator 2 view .LVU82
 390 0066 88ED000A 		vstr.32	s0, [r8]
 391              		.loc 18 52 9 is_stmt 1 discriminator 2 view .LVU83
 392              		.loc 18 52 38 is_stmt 0 discriminator 2 view .LVU84
 393 006a FFF7FEFF 		bl	_ZN7daisysp5AdEnv7ProcessEv
 394              	.LVL17:
 395              		.loc 18 52 25 discriminator 2 view .LVU85
 396 006e D8ED007A 		vldr.32	s15, [r8]
 397              		.loc 18 52 16 discriminator 2 view .LVU86
 398 0072 4C4B     		ldr	r3, .L19+36
 399              		.loc 18 52 25 discriminator 2 view .LVU87
 400 0074 20EE270A 		vmul.f32	s0, s0, s15
  53:MusicBox.cpp  ****         filt.Process(sig);
 401              		.loc 18 53 21 discriminator 2 view .LVU88
 402 0078 4B48     		ldr	r0, .L19+40
  52:MusicBox.cpp  ****         sig    = rawsig * env.Process();
 403              		.loc 18 52 16 discriminator 2 view .LVU89
 404 007a 83ED000A 		vstr.32	s0, [r3]
ARM GAS  /tmp/ccVnVZaX.s 			page 21


 405              		.loc 18 53 9 is_stmt 1 discriminator 2 view .LVU90
 406              		.loc 18 53 21 is_stmt 0 discriminator 2 view .LVU91
 407 007e FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 408              	.LVL18:
  54:MusicBox.cpp  ****         filtsig = filt.Low();
 409              		.loc 18 54 9 is_stmt 1 discriminator 2 view .LVU92
 410              		.loc 18 54 27 is_stmt 0 discriminator 2 view .LVU93
 411 0082 9BED0C7A 		vldr.32	s14, [fp, #48]
 412              	.LVL19:
 413              		.loc 18 54 27 discriminator 2 view .LVU94
 414              	.LBE431:
  23:../../DaisySP/Source/Filters/svf.h ****     /** Initializes the filter
  24:../../DaisySP/Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  25:../../DaisySP/Source/Filters/svf.h ****     */
  26:../../DaisySP/Source/Filters/svf.h ****     void Init(float sample_rate);
  27:../../DaisySP/Source/Filters/svf.h **** 
  28:../../DaisySP/Source/Filters/svf.h **** 
  29:../../DaisySP/Source/Filters/svf.h ****     /** 
  30:../../DaisySP/Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  31:../../DaisySP/Source/Filters/svf.h ****     */
  32:../../DaisySP/Source/Filters/svf.h ****     void Process(float in);
  33:../../DaisySP/Source/Filters/svf.h **** 
  34:../../DaisySP/Source/Filters/svf.h **** 
  35:../../DaisySP/Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  36:../../DaisySP/Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  37:../../DaisySP/Source/Filters/svf.h ****     */
  38:../../DaisySP/Source/Filters/svf.h ****     void SetFreq(float f);
  39:../../DaisySP/Source/Filters/svf.h **** 
  40:../../DaisySP/Source/Filters/svf.h ****     /** sets the resonance of the filter.
  41:../../DaisySP/Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  42:../../DaisySP/Source/Filters/svf.h ****     */
  43:../../DaisySP/Source/Filters/svf.h ****     void SetRes(float r);
  44:../../DaisySP/Source/Filters/svf.h **** 
  45:../../DaisySP/Source/Filters/svf.h ****     /** sets the drive of the filter 
  46:../../DaisySP/Source/Filters/svf.h ****         affects the response of the resonance of the filter
  47:../../DaisySP/Source/Filters/svf.h ****     */
  48:../../DaisySP/Source/Filters/svf.h ****     void SetDrive(float d);
  49:../../DaisySP/Source/Filters/svf.h ****     /** lowpass output
  50:../../DaisySP/Source/Filters/svf.h ****         \return low pass output of the filter
  51:../../DaisySP/Source/Filters/svf.h ****     */
  52:../../DaisySP/Source/Filters/svf.h ****     inline float Low() { return out_low_; }
 415              		.loc 16 52 26 is_stmt 1 discriminator 2 view .LVU95
 416              	.LBB432:
  55:MusicBox.cpp  ****         sendsig = filtsig * vamt;
 417              		.loc 18 55 27 is_stmt 0 discriminator 2 view .LVU96
 418 0086 D9ED007A 		vldr.32	s15, [r9]
  56:MusicBox.cpp  ****         verb.Process(sendsig, sendsig, &wetvl, &wetvr);
 419              		.loc 18 56 21 discriminator 2 view .LVU97
 420 008a 484A     		ldr	r2, .L19+44
  55:MusicBox.cpp  ****         sendsig = filtsig * vamt;
 421              		.loc 18 55 27 discriminator 2 view .LVU98
 422 008c 67EE877A 		vmul.f32	s15, s15, s14
 423              		.loc 18 56 21 discriminator 2 view .LVU99
 424 0090 474B     		ldr	r3, .L19+48
 425 0092 1146     		mov	r1, r2
 426 0094 4748     		ldr	r0, .L19+52
 427 0096 0093     		str	r3, [sp]
ARM GAS  /tmp/ccVnVZaX.s 			page 22


  55:MusicBox.cpp  ****         sendsig = filtsig * vamt;
 428              		.loc 18 55 17 discriminator 2 view .LVU100
 429 0098 C2ED007A 		vstr.32	s15, [r2]
  54:MusicBox.cpp  ****         sendsig = filtsig * vamt;
 430              		.loc 18 54 17 discriminator 2 view .LVU101
 431 009c 85ED007A 		vstr.32	s14, [r5]
  55:MusicBox.cpp  ****         sendsig = filtsig * vamt;
 432              		.loc 18 55 9 is_stmt 1 discriminator 2 view .LVU102
 433              		.loc 18 56 9 discriminator 2 view .LVU103
 434              		.loc 18 56 21 is_stmt 0 discriminator 2 view .LVU104
 435 00a0 454B     		ldr	r3, .L19+56
 436 00a2 FFF7FEFF 		bl	_ZN7daisysp8ReverbSc7ProcessERKfS2_PfS3_
 437              	.LVL20:
  57:MusicBox.cpp  ****         out[i]     = (filtsig + (wetvl)) * 0.707f;
 438              		.loc 18 57 9 is_stmt 1 discriminator 2 view .LVU105
 439              		.loc 18 57 31 is_stmt 0 discriminator 2 view .LVU106
 440 00a6 DAED007A 		vldr.32	s15, [r10]
 441 00aa 95ED007A 		vldr.32	s14, [r5]
 442              		.loc 18 57 42 discriminator 2 view .LVU107
 443 00ae DFED436A 		vldr.32	s13, .L19+60
 444              		.loc 18 57 31 discriminator 2 view .LVU108
 445 00b2 37EE277A 		vadd.f32	s14, s14, s15
  58:MusicBox.cpp  ****         out[i + 1] = (filtsig + (wetvr)) * 0.707f;
 446              		.loc 18 58 31 discriminator 2 view .LVU109
 447 00b6 3E4A     		ldr	r2, .L19+48
  57:MusicBox.cpp  ****         out[i]     = (filtsig + (wetvl)) * 0.707f;
 448              		.loc 18 57 42 discriminator 2 view .LVU110
 449 00b8 27EE267A 		vmul.f32	s14, s14, s13
  57:MusicBox.cpp  ****         out[i]     = (filtsig + (wetvl)) * 0.707f;
 450              		.loc 18 57 20 discriminator 2 view .LVU111
 451 00bc 04ED027A 		vstr.32	s14, [r4, #-8]
 452              		.loc 18 58 9 is_stmt 1 discriminator 2 view .LVU112
 453              		.loc 18 58 31 is_stmt 0 discriminator 2 view .LVU113
 454 00c0 92ED007A 		vldr.32	s14, [r2]
 455 00c4 D5ED007A 		vldr.32	s15, [r5]
  48:MusicBox.cpp  ****     {
 456              		.loc 18 48 25 discriminator 2 view .LVU114
 457 00c8 039A     		ldr	r2, [sp, #12]
 458              		.loc 18 58 31 discriminator 2 view .LVU115
 459 00ca 77EE877A 		vadd.f32	s15, s15, s14
  48:MusicBox.cpp  ****     {
 460              		.loc 18 48 25 discriminator 2 view .LVU116
 461 00ce 9642     		cmp	r6, r2
 462 00d0 06F10206 		add	r6, r6, #2
 463              	.LVL21:
 464              		.loc 18 58 42 discriminator 2 view .LVU117
 465 00d4 67EEA67A 		vmul.f32	s15, s15, s13
 466              		.loc 18 58 20 discriminator 2 view .LVU118
 467 00d8 44ED017A 		vstr.32	s15, [r4, #-4]
  48:MusicBox.cpp  ****     {
 468              		.loc 18 48 5 is_stmt 1 discriminator 2 view .LVU119
 469              	.LVL22:
  48:MusicBox.cpp  ****     {
 470              		.loc 18 48 25 discriminator 2 view .LVU120
 471 00dc BED1     		bne	.L11
 472              	.LVL23:
 473              	.L8:
ARM GAS  /tmp/ccVnVZaX.s 			page 23


  48:MusicBox.cpp  ****     {
 474              		.loc 18 48 25 is_stmt 0 discriminator 2 view .LVU121
 475              	.LBE432:
  59:MusicBox.cpp  ****     }
  60:MusicBox.cpp  **** }
 476              		.loc 18 60 1 view .LVU122
 477 00de 05B0     		add	sp, sp, #20
 478              		.cfi_remember_state
 479              		.cfi_def_cfa_offset 36
 480              		@ sp needed
 481 00e0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 482              	.LVL24:
 483              	.L17:
 484              		.cfi_restore_state
  36:MusicBox.cpp  ****         osc.SetFreq(freq);
 485              		.loc 18 36 9 is_stmt 1 view .LVU123
 486              	.LBB433:
 487              	.LBI433:
  17:MusicBox.cpp  **** {
 488              		.loc 18 17 14 view .LVU124
 489              	.LBB434:
  19:MusicBox.cpp  ****     val = myrand() % 14;
 490              		.loc 18 19 5 view .LVU125
  20:MusicBox.cpp  ****     oct = val / 7;
 491              		.loc 18 20 5 view .LVU126
 492              	.LBB435:
 493              	.LBI435:
 494              		.file 19 "../../DaisySP/Source/Effects/pitchshifter.h"
   1:../../DaisySP/Source/Effects/pitchshifter.h **** #pragma once
   2:../../DaisySP/Source/Effects/pitchshifter.h **** #ifndef DSY_PITCHSHIFTER_H
   3:../../DaisySP/Source/Effects/pitchshifter.h **** #define DSY_PITCHSHIFTER_H
   4:../../DaisySP/Source/Effects/pitchshifter.h **** #include <stdint.h>
   5:../../DaisySP/Source/Effects/pitchshifter.h **** #include <cmath>
   6:../../DaisySP/Source/Effects/pitchshifter.h **** #ifdef USE_ARM_DSP
   7:../../DaisySP/Source/Effects/pitchshifter.h **** #include "arm_math.h"
   8:../../DaisySP/Source/Effects/pitchshifter.h **** #endif
   9:../../DaisySP/Source/Effects/pitchshifter.h **** #include "Utility/dsp.h"
  10:../../DaisySP/Source/Effects/pitchshifter.h **** #include "Utility/delayline.h"
  11:../../DaisySP/Source/Effects/pitchshifter.h **** #include "Control/phasor.h"
  12:../../DaisySP/Source/Effects/pitchshifter.h **** 
  13:../../DaisySP/Source/Effects/pitchshifter.h **** /** Shift can be 30-100 ms lets just start with 50 for now.
  14:../../DaisySP/Source/Effects/pitchshifter.h **** 0.050 * SR = 2400 samples (at 48kHz)
  15:../../DaisySP/Source/Effects/pitchshifter.h **** */
  16:../../DaisySP/Source/Effects/pitchshifter.h **** #define SHIFT_BUFFER_SIZE 16384
  17:../../DaisySP/Source/Effects/pitchshifter.h **** //#define SHIFT_BUFFER_SIZE 4800
  18:../../DaisySP/Source/Effects/pitchshifter.h **** //#define SHIFT_BUFFER_SIZE 8192
  19:../../DaisySP/Source/Effects/pitchshifter.h **** //#define SHIFT_BUFFER_SIZE 1024
  20:../../DaisySP/Source/Effects/pitchshifter.h **** 
  21:../../DaisySP/Source/Effects/pitchshifter.h **** namespace daisysp
  22:../../DaisySP/Source/Effects/pitchshifter.h **** {
  23:../../DaisySP/Source/Effects/pitchshifter.h **** static inline uint32_t hash_xs32(uint32_t x)
  24:../../DaisySP/Source/Effects/pitchshifter.h **** {
  25:../../DaisySP/Source/Effects/pitchshifter.h ****     x ^= x << 13;
  26:../../DaisySP/Source/Effects/pitchshifter.h ****     x ^= x >> 17;
  27:../../DaisySP/Source/Effects/pitchshifter.h ****     x ^= x << 5;
  28:../../DaisySP/Source/Effects/pitchshifter.h ****     return x;
  29:../../DaisySP/Source/Effects/pitchshifter.h **** }
ARM GAS  /tmp/ccVnVZaX.s 			page 24


  30:../../DaisySP/Source/Effects/pitchshifter.h **** 
  31:../../DaisySP/Source/Effects/pitchshifter.h **** inline uint32_t myrand()
 495              		.loc 19 31 17 view .LVU127
 496              	.LBB436:
  32:../../DaisySP/Source/Effects/pitchshifter.h **** {
  33:../../DaisySP/Source/Effects/pitchshifter.h ****     static uint32_t seed = 1;
 497              		.loc 19 33 5 view .LVU128
  34:../../DaisySP/Source/Effects/pitchshifter.h ****     seed                 = hash_xs32(seed);
 498              		.loc 19 34 5 view .LVU129
 499              		.loc 19 34 37 is_stmt 0 view .LVU130
 500 00e4 364E     		ldr	r6, .L19+64
 501              	.LBE436:
 502              	.LBE435:
 503              	.LBE434:
 504              	.LBE433:
 505              	.LBB461:
 506              	.LBB462:
 507              		.file 20 "../../DaisySP/Source/Utility/dsp.h"
   1:../../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../../DaisySP/Source/Utility/dsp.h **** */
   3:../../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../../DaisySP/Source/Utility/dsp.h **** 
  11:../../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../../DaisySP/Source/Utility/dsp.h **** */
  13:../../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../../DaisySP/Source/Utility/dsp.h **** 
  21:../../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../../DaisySP/Source/Utility/dsp.h **** {
  23:../../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../../DaisySP/Source/Utility/dsp.h **** 
  26:../../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../../DaisySP/Source/Utility/dsp.h **** 
  29:../../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../../DaisySP/Source/Utility/dsp.h **** */
  32:../../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../../DaisySP/Source/Utility/dsp.h **** {
  34:../../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../../DaisySP/Source/Utility/dsp.h **** #else
  38:../../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
ARM GAS  /tmp/ccVnVZaX.s 			page 25


  40:../../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../../DaisySP/Source/Utility/dsp.h **** }
  42:../../DaisySP/Source/Utility/dsp.h **** 
  43:../../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../../DaisySP/Source/Utility/dsp.h **** {
  45:../../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../../DaisySP/Source/Utility/dsp.h **** #else
  49:../../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../../DaisySP/Source/Utility/dsp.h **** }
  53:../../DaisySP/Source/Utility/dsp.h **** 
  54:../../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../../DaisySP/Source/Utility/dsp.h **** */
  56:../../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../../DaisySP/Source/Utility/dsp.h **** {
  58:../../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../../DaisySP/Source/Utility/dsp.h **** }
  60:../../DaisySP/Source/Utility/dsp.h **** 
  61:../../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../../DaisySP/Source/Utility/dsp.h **** */
  65:../../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../../DaisySP/Source/Utility/dsp.h **** {
  67:../../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../../DaisySP/Source/Utility/dsp.h **** }
  76:../../DaisySP/Source/Utility/dsp.h **** 
  77:../../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../../DaisySP/Source/Utility/dsp.h **** {
  79:../../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../../DaisySP/Source/Utility/dsp.h **** }
  88:../../DaisySP/Source/Utility/dsp.h **** 
  89:../../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../../DaisySP/Source/Utility/dsp.h **** */
  92:../../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../../DaisySP/Source/Utility/dsp.h **** {
  94:../../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../../DaisySP/Source/Utility/dsp.h **** }
  96:../../DaisySP/Source/Utility/dsp.h **** 
ARM GAS  /tmp/ccVnVZaX.s 			page 26


  97:../../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../../DaisySP/Source/Utility/dsp.h **** */
 100:../../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../../DaisySP/Source/Utility/dsp.h **** {
 102:../../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../../DaisySP/Source/Utility/dsp.h **** }
 115:../../DaisySP/Source/Utility/dsp.h **** 
 116:../../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../../DaisySP/Source/Utility/dsp.h **** {
 118:../../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../../DaisySP/Source/Utility/dsp.h **** }
 120:../../DaisySP/Source/Utility/dsp.h **** 
 121:../../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../../DaisySP/Source/Utility/dsp.h **** */
 123:../../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../../DaisySP/Source/Utility/dsp.h **** {
 125:../../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 508              		.loc 20 125 16 view .LVU131
 509 00e6 F2EE080A 		vmov.f32	s1, #1.2e+1
 510              	.LBE462:
 511              	.LBE461:
 512              	.LBB468:
 513              	.LBB455:
  20:MusicBox.cpp  ****     oct = val / 7;
 514              		.loc 18 20 20 view .LVU132
 515 00ea 364F     		ldr	r7, .L19+68
 516              	.LBE455:
 517              	.LBE468:
 518              	.LBB469:
 519              	.LBB463:
 520              		.loc 20 125 16 view .LVU133
 521 00ec B0EE000A 		vmov.f32	s0, #2.0e+0
 522              	.LBE463:
 523              	.LBE469:
 524              	.LBB470:
 525              	.LBB456:
 526              	.LBB450:
 527              	.LBB445:
 528              		.loc 19 34 37 view .LVU134
 529 00f0 3068     		ldr	r0, [r6]
 530              	.LVL25:
 531              	.LBB437:
 532              	.LBI437:
  23:../../DaisySP/Source/Effects/pitchshifter.h **** {
 533              		.loc 19 23 24 is_stmt 1 view .LVU135
ARM GAS  /tmp/ccVnVZaX.s 			page 27


 534              	.LBB438:
  25:../../DaisySP/Source/Effects/pitchshifter.h ****     x ^= x >> 17;
 535              		.loc 19 25 5 view .LVU136
 536              	.LBE438:
 537              	.LBE437:
 538              	.LBE445:
 539              	.LBE450:
  21:MusicBox.cpp  ****     idx = val % 7;
 540              		.loc 18 21 9 is_stmt 0 view .LVU137
 541 00f2 354B     		ldr	r3, .L19+72
 542              	.LBB451:
 543              	.LBB446:
 544              	.LBB442:
 545              	.LBB439:
  25:../../DaisySP/Source/Effects/pitchshifter.h ****     x ^= x >> 17;
 546              		.loc 19 25 7 view .LVU138
 547 00f4 80EA4030 		eor	r0, r0, r0, lsl #13
 548              	.LVL26:
  26:../../DaisySP/Source/Effects/pitchshifter.h ****     x ^= x << 5;
 549              		.loc 19 26 5 is_stmt 1 view .LVU139
 550              	.LBE439:
 551              	.LBE442:
 552              	.LBE446:
 553              	.LBE451:
  23:MusicBox.cpp  **** }
 554              		.loc 18 23 21 is_stmt 0 view .LVU140
 555 00f8 3449     		ldr	r1, .L19+76
 556              	.LBE456:
 557              	.LBE470:
  36:MusicBox.cpp  ****         osc.SetFreq(freq);
 558              		.loc 18 36 20 view .LVU141
 559 00fa DFED356A 		vldr.32	s13, .L19+80
 560              	.LBB471:
 561              	.LBB457:
 562              	.LBB452:
 563              	.LBB447:
 564              	.LBB443:
 565              	.LBB440:
  26:../../DaisySP/Source/Effects/pitchshifter.h ****     x ^= x << 5;
 566              		.loc 19 26 7 view .LVU142
 567 00fe 80EA5040 		eor	r0, r0, r0, lsr #17
 568              	.LVL27:
  27:../../DaisySP/Source/Effects/pitchshifter.h ****     return x;
 569              		.loc 19 27 5 is_stmt 1 view .LVU143
 570              	.LBE440:
 571              	.LBE443:
 572              	.LBE447:
 573              	.LBE452:
 574              	.LBE457:
 575              	.LBE471:
 576              	.LBB472:
 577              	.LBB464:
 578              		.loc 20 125 23 is_stmt 0 view .LVU144
 579 0102 9FED347A 		vldr.32	s14, .L19+84
 580              	.LBE464:
 581              	.LBE472:
 582              	.LBB473:
ARM GAS  /tmp/ccVnVZaX.s 			page 28


 583              	.LBB458:
 584              	.LBB453:
 585              	.LBB448:
 586              	.LBB444:
 587              	.LBB441:
  27:../../DaisySP/Source/Effects/pitchshifter.h ****     return x;
 588              		.loc 19 27 7 view .LVU145
 589 0106 80EA4010 		eor	r0, r0, r0, lsl #5
 590              	.LVL28:
  28:../../DaisySP/Source/Effects/pitchshifter.h **** }
 591              		.loc 19 28 5 is_stmt 1 view .LVU146
  28:../../DaisySP/Source/Effects/pitchshifter.h **** }
 592              		.loc 19 28 5 is_stmt 0 view .LVU147
 593              	.LBE441:
 594              	.LBE444:
 595              	.LBE448:
 596              	.LBE453:
  20:MusicBox.cpp  ****     oct = val / 7;
 597              		.loc 18 20 20 view .LVU148
 598 010a 4208     		lsrs	r2, r0, #1
 599              	.LBB454:
 600              	.LBB449:
 601              		.loc 19 34 26 view .LVU149
 602 010c 3060     		str	r0, [r6]
  35:../../DaisySP/Source/Effects/pitchshifter.h ****     return seed;
 603              		.loc 19 35 5 is_stmt 1 view .LVU150
 604              	.LBE449:
 605              	.LBE454:
  20:MusicBox.cpp  ****     oct = val / 7;
 606              		.loc 18 20 20 is_stmt 0 view .LVU151
 607 010e A7FB0262 		umull	r6, r2, r7, r2
 608              	.LBE458:
 609              	.LBE473:
 610              	.LBB474:
 611              	.LBB475:
  17:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../../DaisySP/Source/Synthesis/oscillator.h ****     */
  19:../../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../../DaisySP/Source/Synthesis/oscillator.h ****     {
  21:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
  24:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../../DaisySP/Source/Synthesis/oscillator.h **** 
  37:../../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
ARM GAS  /tmp/ccVnVZaX.s 			page 29


  39:../../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  45:../../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  48:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
  53:../../DaisySP/Source/Synthesis/oscillator.h ****     }
  54:../../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../../DaisySP/Source/Synthesis/oscillator.h ****     */
  58:../../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 612              		.loc 15 60 20 view .LVU152
 613 0112 224E     		ldr	r6, .L19+28
 614              	.LBE475:
 615              	.LBE474:
  38:MusicBox.cpp  ****         env.Trigger();
 616              		.loc 18 38 20 view .LVU153
 617 0114 1B4F     		ldr	r7, .L19+4
 618              	.LBB479:
 619              	.LBB459:
  20:MusicBox.cpp  ****     oct = val / 7;
 620              		.loc 18 20 20 view .LVU154
 621 0116 9208     		lsrs	r2, r2, #2
 622 0118 C2EBC202 		rsb	r2, r2, r2, lsl #3
 623 011c A0EB4202 		sub	r2, r0, r2, lsl #1
 624              	.LVL29:
  21:MusicBox.cpp  ****     idx = val % 7;
 625              		.loc 18 21 5 is_stmt 1 view .LVU155
  22:MusicBox.cpp  ****     return scale[idx] + (12 * oct);
 626              		.loc 18 22 5 view .LVU156
  23:MusicBox.cpp  **** }
 627              		.loc 18 23 5 view .LVU157
  23:MusicBox.cpp  **** }
 628              		.loc 18 23 5 is_stmt 0 view .LVU158
 629              	.LBE459:
 630              	.LBE479:
 631              	.LBB480:
 632              	.LBI461:
 123:../../DaisySP/Source/Utility/dsp.h **** {
 633              		.loc 20 123 14 is_stmt 1 view .LVU159
 634              	.LBB465:
 635              		.loc 20 125 5 view .LVU160
 636              	.LBE465:
 637              	.LBE480:
 638              	.LBB481:
 639              	.LBB460:
ARM GAS  /tmp/ccVnVZaX.s 			page 30


  21:MusicBox.cpp  ****     idx = val % 7;
 640              		.loc 18 21 9 is_stmt 0 view .LVU161
 641 0120 A3FB0203 		umull	r0, r3, r3, r2
 642 0124 D01A     		subs	r0, r2, r3
 643 0126 03EB5003 		add	r3, r3, r0, lsr #1
 644 012a 9B08     		lsrs	r3, r3, #2
  22:MusicBox.cpp  ****     return scale[idx] + (12 * oct);
 645              		.loc 18 22 9 view .LVU162
 646 012c C3EBC300 		rsb	r0, r3, r3, lsl #3
  23:MusicBox.cpp  **** }
 647              		.loc 18 23 29 view .LVU163
 648 0130 03EB4303 		add	r3, r3, r3, lsl #1
  22:MusicBox.cpp  ****     return scale[idx] + (12 * oct);
 649              		.loc 18 22 9 view .LVU164
 650 0134 121A     		subs	r2, r2, r0
 651              	.LVL30:
  23:MusicBox.cpp  **** }
 652              		.loc 18 23 29 view .LVU165
 653 0136 9B00     		lsls	r3, r3, #2
  23:MusicBox.cpp  **** }
 654              		.loc 18 23 21 view .LVU166
 655 0138 01EB8202 		add	r2, r1, r2, lsl #2
  23:MusicBox.cpp  **** }
 656              		.loc 18 23 29 view .LVU167
 657 013c 07EE903A 		vmov	s15, r3	@ int
  23:MusicBox.cpp  **** }
 658              		.loc 18 23 34 view .LVU168
 659 0140 92ED006A 		vldr.32	s12, [r2]
  23:MusicBox.cpp  **** }
 660              		.loc 18 23 23 view .LVU169
 661 0144 F8EEE77A 		vcvt.f32.s32	s15, s15
  23:MusicBox.cpp  **** }
 662              		.loc 18 23 34 view .LVU170
 663 0148 77EE867A 		vadd.f32	s15, s15, s12
 664              	.LBE460:
 665              	.LBE481:
  36:MusicBox.cpp  ****         osc.SetFreq(freq);
 666              		.loc 18 36 20 view .LVU171
 667 014c 77EEA67A 		vadd.f32	s15, s15, s13
 668              	.LBB482:
 669              	.LBB466:
 670              		.loc 20 125 23 view .LVU172
 671 0150 77EEC77A 		vsub.f32	s15, s15, s14
 672              		.loc 20 125 16 view .LVU173
 673 0154 C7EEA00A 		vdiv.f32	s1, s15, s1
 674 0158 FFF7FEFF 		bl	powf
 675              	.LVL31:
 676              		.loc 20 125 43 view .LVU174
 677 015c DFED1E7A 		vldr.32	s15, .L19+88
 678              	.LBE466:
 679              	.LBE482:
 680              	.LBB483:
 681              	.LBB476:
  61:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 682              		.loc 15 61 34 view .LVU175
 683 0160 3046     		mov	r0, r6
 684              	.LBE476:
ARM GAS  /tmp/ccVnVZaX.s 			page 31


 685              	.LBE483:
 686              	.LBB484:
 687              	.LBB467:
 688              		.loc 20 125 43 view .LVU176
 689 0162 20EE270A 		vmul.f32	s0, s0, s15
 690              		.loc 20 125 43 view .LVU177
 691              	.LBE467:
 692              	.LBE484:
  37:MusicBox.cpp  ****         env.SetTime(ADENV_SEG_DECAY, dec);
 693              		.loc 18 37 9 is_stmt 1 view .LVU178
 694              	.LVL32:
 695              	.LBB485:
 696              	.LBI474:
  58:../../DaisySP/Source/Synthesis/oscillator.h ****     {
 697              		.loc 15 58 17 view .LVU179
 698              	.LBB477:
  60:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 699              		.loc 15 60 9 view .LVU180
  60:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 700              		.loc 15 60 20 is_stmt 0 view .LVU181
 701 0166 86ED020A 		vstr.32	s0, [r6, #8]
 702              		.loc 15 61 9 is_stmt 1 view .LVU182
 703              		.loc 15 61 34 is_stmt 0 view .LVU183
 704 016a FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 705              	.LVL33:
 706              		.loc 15 61 34 view .LVU184
 707              	.LBE477:
 708              	.LBE485:
 709              	.LBB486:
 710              	.LBB487:
  36:../../DaisySP/Source/Control/adenv.h ****     /** Initializes the ad envelope.
  37:../../DaisySP/Source/Control/adenv.h **** 
  38:../../DaisySP/Source/Control/adenv.h ****         Defaults:
  39:../../DaisySP/Source/Control/adenv.h ****             - current segment = idle
  40:../../DaisySP/Source/Control/adenv.h ****             - curve = linear
  41:../../DaisySP/Source/Control/adenv.h ****             - phase = 0
  42:../../DaisySP/Source/Control/adenv.h ****             - min = 0
  43:../../DaisySP/Source/Control/adenv.h ****             - max = 1
  44:../../DaisySP/Source/Control/adenv.h **** 
  45:../../DaisySP/Source/Control/adenv.h ****         \param sample_rate      sample rate of the audio engine being run
  46:../../DaisySP/Source/Control/adenv.h ****     */
  47:../../DaisySP/Source/Control/adenv.h ****     void Init(float sample_rate);
  48:../../DaisySP/Source/Control/adenv.h **** 
  49:../../DaisySP/Source/Control/adenv.h ****     /** Processes the current sample of the envelope. This should be called once
  50:../../DaisySP/Source/Control/adenv.h ****         per sample period.
  51:../../DaisySP/Source/Control/adenv.h ****         \return the current envelope value.
  52:../../DaisySP/Source/Control/adenv.h ****     */
  53:../../DaisySP/Source/Control/adenv.h ****     float Process();
  54:../../DaisySP/Source/Control/adenv.h **** 
  55:../../DaisySP/Source/Control/adenv.h ****     /** Starts or retriggers the envelope.*/
  56:../../DaisySP/Source/Control/adenv.h ****     inline void Trigger() { trigger_ = 1; }
  57:../../DaisySP/Source/Control/adenv.h ****     /** Sets the length of time (in seconds) for a specific segment. */
  58:../../DaisySP/Source/Control/adenv.h ****     inline void SetTime(uint8_t seg, float time) { segment_time_[seg] = time; }
 711              		.loc 14 58 71 view .LVU185
 712 016e 0C4B     		ldr	r3, .L19+32
 713              	.LBE487:
 714              	.LBE486:
ARM GAS  /tmp/ccVnVZaX.s 			page 32


 715              	.LBB490:
 716              	.LBB491:
  56:../../DaisySP/Source/Control/adenv.h ****     /** Sets the length of time (in seconds) for a specific segment. */
 717              		.loc 14 56 38 view .LVU186
 718 0170 0122     		movs	r2, #1
 719              	.LBE491:
 720              	.LBE490:
 721              	.LBB493:
 722              	.LBB488:
 723              		.loc 14 58 71 view .LVU187
 724 0172 3968     		ldr	r1, [r7]	@ float
 725              	.LBE488:
 726              	.LBE493:
 727              	.LBB494:
 728              	.LBB478:
 729              		.loc 15 61 20 view .LVU188
 730 0174 86ED060A 		vstr.32	s0, [r6, #24]
 731              	.LVL34:
 732              		.loc 15 61 20 view .LVU189
 733              	.LBE478:
 734              	.LBE494:
  38:MusicBox.cpp  ****         env.Trigger();
 735              		.loc 18 38 9 is_stmt 1 view .LVU190
 736              	.LBB495:
 737              	.LBI486:
 738              		.loc 14 58 17 view .LVU191
 739              	.LBB489:
 740              		.loc 14 58 52 view .LVU192
 741              		.loc 14 58 71 is_stmt 0 view .LVU193
 742 0178 D960     		str	r1, [r3, #12]	@ float
 743              	.LVL35:
 744              		.loc 14 58 71 view .LVU194
 745              	.LBE489:
 746              	.LBE495:
  39:MusicBox.cpp  ****     }
 747              		.loc 18 39 9 is_stmt 1 view .LVU195
 748              	.LBB496:
 749              	.LBI490:
  56:../../DaisySP/Source/Control/adenv.h ****     /** Sets the length of time (in seconds) for a specific segment. */
 750              		.loc 14 56 17 view .LVU196
 751              	.LBB492:
  56:../../DaisySP/Source/Control/adenv.h ****     /** Sets the length of time (in seconds) for a specific segment. */
 752              		.loc 14 56 29 view .LVU197
  56:../../DaisySP/Source/Control/adenv.h ****     /** Sets the length of time (in seconds) for a specific segment. */
 753              		.loc 14 56 38 is_stmt 0 view .LVU198
 754 017a 83F83420 		strb	r2, [r3, #52]
  56:../../DaisySP/Source/Control/adenv.h ****     /** Sets the length of time (in seconds) for a specific segment. */
 755              		.loc 14 56 43 view .LVU199
 756 017e 4DE7     		b	.L9
 757              	.L20:
 758              		.align	2
 759              	.L19:
 760 0180 00000000 		.word	hw
 761 0184 00000000 		.word	.LANCHOR3
 762 0188 00000000 		.word	.LANCHOR4
 763 018c 00000000 		.word	.LANCHOR5
 764 0190 00000000 		.word	.LANCHOR6
ARM GAS  /tmp/ccVnVZaX.s 			page 33


 765 0194 00000000 		.word	.LANCHOR8
 766 0198 00000000 		.word	.LANCHOR12
 767 019c 00000000 		.word	.LANCHOR1
 768 01a0 00000000 		.word	.LANCHOR2
 769 01a4 00000000 		.word	.LANCHOR10
 770 01a8 00000000 		.word	.LANCHOR11
 771 01ac 00000000 		.word	.LANCHOR13
 772 01b0 00000000 		.word	.LANCHOR15
 773 01b4 00000000 		.word	verb
 774 01b8 00000000 		.word	.LANCHOR14
 775 01bc F4FD343F 		.word	1060437492
 776 01c0 00000000 		.word	_ZZN7daisysp6myrandEvE4seed
 777 01c4 93244992 		.word	-1840700269
 778 01c8 25499224 		.word	613566757
 779 01cc 00000000 		.word	.LANCHOR0
 780 01d0 00004042 		.word	1111490560
 781 01d4 00008A42 		.word	1116340224
 782 01d8 0000DC43 		.word	1138491392
 783 01dc 00000000 		.word	.LANCHOR7
 784 01e0 00000000 		.word	.LANCHOR9
 785              	.LBE492:
 786              	.LBE496:
 787              		.cfi_endproc
 788              	.LFE4220:
 790              		.section	.text._Z9InitSynthf,"ax",%progbits
 791              		.align	1
 792              		.p2align 2,,3
 793              		.global	_Z9InitSynthf
 794              		.syntax unified
 795              		.thumb
 796              		.thumb_func
 797              		.fpu fpv5-d16
 799              	_Z9InitSynthf:
 800              	.LVL36:
 801              	.LFB4221:
  61:MusicBox.cpp  **** 
  62:MusicBox.cpp  **** void InitSynth(float samplerate)
  63:MusicBox.cpp  **** {
 802              		.loc 18 63 1 is_stmt 1 view -0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 32
 805              		@ frame_needed = 0, uses_anonymous_args = 0
  64:MusicBox.cpp  ****     // Synth Parameters.
  65:MusicBox.cpp  ****     p_xf.Init(hw.knob1, 10.0f, 12000.0f, Parameter::LOGARITHMIC);
 806              		.loc 18 65 5 view .LVU201
  63:MusicBox.cpp  ****     // Synth Parameters.
 807              		.loc 18 63 1 is_stmt 0 view .LVU202
 808 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 809              		.cfi_def_cfa_offset 20
 810              		.cfi_offset 4, -20
 811              		.cfi_offset 5, -16
 812              		.cfi_offset 6, -12
 813              		.cfi_offset 7, -8
 814              		.cfi_offset 14, -4
 815              		.loc 18 65 18 view .LVU203
 816 0002 594C     		ldr	r4, .L23
 817              		.loc 18 65 14 view .LVU204
ARM GAS  /tmp/ccVnVZaX.s 			page 34


 818 0004 DFED590A 		vldr.32	s1, .L23+4
 819              		.loc 18 65 18 view .LVU205
 820 0008 04F15C07 		add	r7, r4, #92
 821              	.LBB497:
 822              	.LBB498:
  44:../../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 823              		.loc 15 44 20 view .LVU206
 824 000c 584D     		ldr	r5, .L23+8
 825              	.LBE498:
 826              	.LBE497:
  63:MusicBox.cpp  ****     // Synth Parameters.
 827              		.loc 18 63 1 view .LVU207
 828 000e 2DED068B 		vpush.64	{d8, d9, d10}
 829              		.cfi_def_cfa_offset 44
 830              		.cfi_offset 80, -44
 831              		.cfi_offset 81, -40
 832              		.cfi_offset 82, -36
 833              		.cfi_offset 83, -32
 834              		.cfi_offset 84, -28
 835              		.cfi_offset 85, -24
 836 0012 89B0     		sub	sp, sp, #36
 837              		.cfi_def_cfa_offset 80
  63:MusicBox.cpp  ****     // Synth Parameters.
 838              		.loc 18 63 1 view .LVU208
 839 0014 B0EE408A 		vmov.f32	s16, s0
 840              		.loc 18 65 14 view .LVU209
 841 0018 B2EE040A 		vmov.f32	s0, #1.0e+1
 842              	.LVL37:
  66:MusicBox.cpp  ****     p_dec.Init(hw.knob1, 0.2f, 5.0f, Parameter::EXPONENTIAL);
  67:MusicBox.cpp  ****     p_vamt.Init(hw.knob2, 0.0f, 1.0f, Parameter::LINEAR);
 843              		.loc 18 67 16 view .LVU210
 844 001c DFED559A 		vldr.32	s19, .L23+12
  65:MusicBox.cpp  ****     p_dec.Init(hw.knob1, 0.2f, 5.0f, Parameter::EXPONENTIAL);
 845              		.loc 18 65 18 view .LVU211
 846 0020 6E46     		mov	r6, sp
 847              	.LBB507:
 848              	.LBB499:
  45:../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 849              		.loc 15 45 27 view .LVU212
 850 0022 B7EE00AA 		vmov.f32	s20, #1.0e+0
  46:../../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 851              		.loc 15 46 20 view .LVU213
 852 0026 DFED548A 		vldr.32	s17, .L23+16
  47:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 853              		.loc 15 47 20 view .LVU214
 854 002a B6EE009A 		vmov.f32	s18, #5.0e-1
 855              	.LBE499:
 856              	.LBE507:
  65:MusicBox.cpp  ****     p_dec.Init(hw.knob1, 0.2f, 5.0f, Parameter::EXPONENTIAL);
 857              		.loc 18 65 18 view .LVU215
 858 002e 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 859 0030 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 860 0032 97E80F00 		ldm	r7, {r0, r1, r2, r3}
  66:MusicBox.cpp  ****     p_vamt.Init(hw.knob2, 0.0f, 1.0f, Parameter::LINEAR);
 861              		.loc 18 66 19 view .LVU216
 862 0036 04F15C07 		add	r7, r4, #92
  65:MusicBox.cpp  ****     p_dec.Init(hw.knob1, 0.2f, 5.0f, Parameter::EXPONENTIAL);
ARM GAS  /tmp/ccVnVZaX.s 			page 35


 863              		.loc 18 65 18 view .LVU217
 864 003a 86E80F00 		stm	r6, {r0, r1, r2, r3}
  65:MusicBox.cpp  ****     p_dec.Init(hw.knob1, 0.2f, 5.0f, Parameter::EXPONENTIAL);
 865              		.loc 18 65 14 view .LVU218
 866 003e 6946     		mov	r1, sp
 867 0040 0222     		movs	r2, #2
 868 0042 4E48     		ldr	r0, .L23+20
  66:MusicBox.cpp  ****     p_vamt.Init(hw.knob2, 0.0f, 1.0f, Parameter::LINEAR);
 869              		.loc 18 66 19 view .LVU219
 870 0044 6E46     		mov	r6, sp
  65:MusicBox.cpp  ****     p_dec.Init(hw.knob1, 0.2f, 5.0f, Parameter::EXPONENTIAL);
 871              		.loc 18 65 14 view .LVU220
 872 0046 FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 873              	.LVL38:
 874              	.LBB508:
 875              	.LBI508:
 876              		.loc 2 23 5 is_stmt 1 view .LVU221
 877              		.loc 2 23 5 is_stmt 0 view .LVU222
 878              	.LBE508:
  66:MusicBox.cpp  ****     p_vamt.Init(hw.knob2, 0.0f, 1.0f, Parameter::LINEAR);
 879              		.loc 18 66 5 is_stmt 1 view .LVU223
  66:MusicBox.cpp  ****     p_vamt.Init(hw.knob2, 0.0f, 1.0f, Parameter::LINEAR);
 880              		.loc 18 66 15 is_stmt 0 view .LVU224
 881 004a F1EE040A 		vmov.f32	s1, #5.0e+0
 882 004e 9FED4C0A 		vldr.32	s0, .L23+24
  66:MusicBox.cpp  ****     p_vamt.Init(hw.knob2, 0.0f, 1.0f, Parameter::LINEAR);
 883              		.loc 18 66 19 view .LVU225
 884 0052 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 885 0054 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 886 0056 97E80F00 		ldm	r7, {r0, r1, r2, r3}
 887              		.loc 18 67 20 view .LVU226
 888 005a 04F17C07 		add	r7, r4, #124
  68:MusicBox.cpp  ****     p_vtime.Init(hw.knob2, 0.4f, 0.95f, Parameter::LINEAR);
 889              		.loc 18 68 21 view .LVU227
 890 005e 7C34     		adds	r4, r4, #124
  66:MusicBox.cpp  ****     p_vamt.Init(hw.knob2, 0.0f, 1.0f, Parameter::LINEAR);
 891              		.loc 18 66 19 view .LVU228
 892 0060 86E80F00 		stm	r6, {r0, r1, r2, r3}
  66:MusicBox.cpp  ****     p_vamt.Init(hw.knob2, 0.0f, 1.0f, Parameter::LINEAR);
 893              		.loc 18 66 15 view .LVU229
 894 0064 6946     		mov	r1, sp
 895 0066 0122     		movs	r2, #1
 896 0068 4648     		ldr	r0, .L23+28
  67:MusicBox.cpp  ****     p_vtime.Init(hw.knob2, 0.4f, 0.95f, Parameter::LINEAR);
 897              		.loc 18 67 20 view .LVU230
 898 006a 6E46     		mov	r6, sp
  66:MusicBox.cpp  ****     p_vamt.Init(hw.knob2, 0.0f, 1.0f, Parameter::LINEAR);
 899              		.loc 18 66 15 view .LVU231
 900 006c FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 901              	.LVL39:
 902              	.LBB509:
 903              	.LBI509:
 904              		.loc 2 23 5 is_stmt 1 view .LVU232
 905              		.loc 2 23 5 is_stmt 0 view .LVU233
 906              	.LBE509:
  67:MusicBox.cpp  ****     p_vtime.Init(hw.knob2, 0.4f, 0.95f, Parameter::LINEAR);
 907              		.loc 18 67 5 is_stmt 1 view .LVU234
ARM GAS  /tmp/ccVnVZaX.s 			page 36


  67:MusicBox.cpp  ****     p_vtime.Init(hw.knob2, 0.4f, 0.95f, Parameter::LINEAR);
 908              		.loc 18 67 16 is_stmt 0 view .LVU235
 909 0070 B0EE690A 		vmov.f32	s0, s19
 910 0074 F0EE4A0A 		vmov.f32	s1, s20
  67:MusicBox.cpp  ****     p_vtime.Init(hw.knob2, 0.4f, 0.95f, Parameter::LINEAR);
 911              		.loc 18 67 20 view .LVU236
 912 0078 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 913 007a 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 914 007c 97E80F00 		ldm	r7, {r0, r1, r2, r3}
 915 0080 86E80F00 		stm	r6, {r0, r1, r2, r3}
  67:MusicBox.cpp  ****     p_vtime.Init(hw.knob2, 0.4f, 0.95f, Parameter::LINEAR);
 916              		.loc 18 67 16 view .LVU237
 917 0084 6946     		mov	r1, sp
 918 0086 0022     		movs	r2, #0
 919 0088 3F48     		ldr	r0, .L23+32
 920              		.loc 18 68 21 view .LVU238
 921 008a 6E46     		mov	r6, sp
  67:MusicBox.cpp  ****     p_vtime.Init(hw.knob2, 0.4f, 0.95f, Parameter::LINEAR);
 922              		.loc 18 67 16 view .LVU239
 923 008c FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 924              	.LVL40:
 925              	.LBB510:
 926              	.LBI510:
 927              		.loc 2 23 5 is_stmt 1 view .LVU240
 928              		.loc 2 23 5 is_stmt 0 view .LVU241
 929              	.LBE510:
 930              		.loc 18 68 5 is_stmt 1 view .LVU242
 931              		.loc 18 68 17 is_stmt 0 view .LVU243
 932 0090 DFED3E0A 		vldr.32	s1, .L23+36
 933 0094 9FED3E0A 		vldr.32	s0, .L23+40
  69:MusicBox.cpp  ****     dec = 0.62;
  70:MusicBox.cpp  ****     // Init Osc and Nse
  71:MusicBox.cpp  ****     osc.Init(samplerate);
  72:MusicBox.cpp  ****     osc.SetWaveform(Oscillator::WAVE_POLYBLEP_SAW);
  73:MusicBox.cpp  ****     osc.SetFreq(100.0f);
  74:MusicBox.cpp  ****     osc.SetAmp(.5f);
  75:MusicBox.cpp  ****     env.Init(samplerate);
 934              		.loc 18 75 13 view .LVU244
 935 0098 3E4F     		ldr	r7, .L23+44
  68:MusicBox.cpp  ****     dec = 0.62;
 936              		.loc 18 68 21 view .LVU245
 937 009a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 938 009c 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 939 009e 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 940 00a2 86E80F00 		stm	r6, {r0, r1, r2, r3}
  68:MusicBox.cpp  ****     dec = 0.62;
 941              		.loc 18 68 17 view .LVU246
 942 00a6 6946     		mov	r1, sp
 943 00a8 0022     		movs	r2, #0
 944 00aa 3B48     		ldr	r0, .L23+48
 945 00ac FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 946              	.LVL41:
 947              	.LBB511:
 948              	.LBI511:
 949              		.loc 2 23 5 is_stmt 1 view .LVU247
 950              		.loc 2 23 5 is_stmt 0 view .LVU248
 951              	.LBE511:
ARM GAS  /tmp/ccVnVZaX.s 			page 37


  69:MusicBox.cpp  ****     dec = 0.62;
 952              		.loc 18 69 5 is_stmt 1 view .LVU249
 953              	.LBB512:
 954              	.LBB500:
  45:../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 955              		.loc 15 45 27 is_stmt 0 view .LVU250
 956 00b0 CAEE087A 		vdiv.f32	s15, s20, s16
 957              	.LBE500:
 958              	.LBE512:
  69:MusicBox.cpp  ****     dec = 0.62;
 959              		.loc 18 69 9 view .LVU251
 960 00b4 394B     		ldr	r3, .L23+52
 961              	.LBB513:
 962              	.LBB501:
  49:../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 963              		.loc 15 49 34 view .LVU252
 964 00b6 2846     		mov	r0, r5
 965              	.LBE501:
 966              	.LBE513:
  69:MusicBox.cpp  ****     // Init Osc and Nse
 967              		.loc 18 69 9 view .LVU253
 968 00b8 394A     		ldr	r2, .L23+56
 969              	.LBB514:
 970              	.LBB502:
  44:../../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 971              		.loc 15 44 20 view .LVU254
 972 00ba 85ED038A 		vstr.32	s16, [r5, #12]
 973              	.LBE502:
 974              	.LBE514:
  69:MusicBox.cpp  ****     // Init Osc and Nse
 975              		.loc 18 69 9 view .LVU255
 976 00be 1A60     		str	r2, [r3]	@ float
  71:MusicBox.cpp  ****     osc.SetWaveform(Oscillator::WAVE_POLYBLEP_SAW);
 977              		.loc 18 71 5 is_stmt 1 view .LVU256
 978              	.LVL42:
 979              	.LBB515:
 980              	.LBI497:
  42:../../DaisySP/Source/Synthesis/oscillator.h ****     {
 981              		.loc 15 42 10 view .LVU257
 982              	.LBB503:
  44:../../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 983              		.loc 15 44 9 view .LVU258
  45:../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 984              		.loc 15 45 9 view .LVU259
  49:../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 985              		.loc 15 49 34 is_stmt 0 view .LVU260
 986 00c0 B0EE680A 		vmov.f32	s0, s17
  48:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 987              		.loc 15 48 20 view .LVU261
 988 00c4 C5ED059A 		vstr.32	s19, [r5, #20]
  46:../../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 989              		.loc 15 46 20 view .LVU262
 990 00c8 C5ED028A 		vstr.32	s17, [r5, #8]
  47:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 991              		.loc 15 47 20 view .LVU263
 992 00cc 85ED019A 		vstr.32	s18, [r5, #4]
 993              	.LBE503:
ARM GAS  /tmp/ccVnVZaX.s 			page 38


 994              	.LBE515:
  76:MusicBox.cpp  ****     env.SetCurve(-15.0f);
  77:MusicBox.cpp  ****     env.SetTime(ADENV_SEG_ATTACK, 0.002f);
  78:MusicBox.cpp  ****     env.SetTime(ADENV_SEG_DECAY, 2.6f);
  79:MusicBox.cpp  ****     env.SetMax(1.f);
  80:MusicBox.cpp  ****     env.SetMin(0.f);
  81:MusicBox.cpp  ****     filt.Init(samplerate);
 995              		.loc 18 81 14 view .LVU264
 996 00d0 344C     		ldr	r4, .L23+60
  82:MusicBox.cpp  ****     filt.SetRes(0.5f);
  83:MusicBox.cpp  ****     filt.SetDrive(0.8f);
  84:MusicBox.cpp  ****     filt.SetFreq(2400.0f);
  85:MusicBox.cpp  ****     verb.Init(samplerate);
 997              		.loc 18 85 14 view .LVU265
 998 00d2 354E     		ldr	r6, .L23+64
 999              	.LBB516:
 1000              	.LBB504:
  45:../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 1001              		.loc 15 45 20 view .LVU266
 1002 00d4 C5ED047A 		vstr.32	s15, [r5, #16]
  46:../../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 1003              		.loc 15 46 9 is_stmt 1 view .LVU267
  47:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 1004              		.loc 15 47 9 view .LVU268
  48:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 1005              		.loc 15 48 9 view .LVU269
  49:../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 1006              		.loc 15 49 9 view .LVU270
  49:../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 1007              		.loc 15 49 34 is_stmt 0 view .LVU271
 1008 00d8 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 1009              	.LVL43:
 1010 00dc F0EE407A 		vmov.f32	s15, s0
  52:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1011              		.loc 15 52 20 view .LVU272
 1012 00e0 40F20112 		movw	r2, #257
 1013              	.LBE504:
 1014              	.LBE516:
 1015              	.LBB517:
 1016              	.LBB518:
  62:../../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../../DaisySP/Source/Synthesis/oscillator.h **** 
  65:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 1017              		.loc 15 72 19 view .LVU273
 1018 00e4 0623     		movs	r3, #6
 1019              	.LBE518:
 1020              	.LBE517:
 1021              	.LBB521:
 1022              	.LBB522:
ARM GAS  /tmp/ccVnVZaX.s 			page 39


  61:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1023              		.loc 15 61 34 view .LVU274
 1024 00e6 2846     		mov	r0, r5
 1025 00e8 B0EE680A 		vmov.f32	s0, s17
 1026              	.LBE522:
 1027              	.LBE521:
 1028              	.LBB525:
 1029              	.LBB505:
  52:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1030              		.loc 15 52 20 view .LVU275
 1031 00ec AA84     		strh	r2, [r5, #36]	@ movhi
 1032              	.LBE505:
 1033              	.LBE525:
 1034              	.LBB526:
 1035              	.LBB519:
 1036              		.loc 15 72 19 view .LVU276
 1037 00ee 2B70     		strb	r3, [r5]
 1038              	.LBE519:
 1039              	.LBE526:
 1040              	.LBB527:
 1041              	.LBB506:
  49:../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 1042              		.loc 15 49 20 view .LVU277
 1043 00f0 C5ED067A 		vstr.32	s15, [r5, #24]
  50:../../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 1044              		.loc 15 50 9 is_stmt 1 view .LVU278
  51:../../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 1045              		.loc 15 51 9 view .LVU279
  52:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1046              		.loc 15 52 9 view .LVU280
 1047              	.LVL44:
  52:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1048              		.loc 15 52 9 is_stmt 0 view .LVU281
 1049              	.LBE506:
 1050              	.LBE527:
  72:MusicBox.cpp  ****     osc.SetFreq(100.0f);
 1051              		.loc 18 72 5 is_stmt 1 view .LVU282
 1052              	.LBB528:
 1053              	.LBI517:
  70:../../DaisySP/Source/Synthesis/oscillator.h ****     {
 1054              		.loc 15 70 17 view .LVU283
 1055              	.LBB520:
 1056              		.loc 15 72 9 view .LVU284
 1057              		.loc 15 72 9 is_stmt 0 view .LVU285
 1058              	.LBE520:
 1059              	.LBE528:
  73:MusicBox.cpp  ****     osc.SetAmp(.5f);
 1060              		.loc 18 73 5 is_stmt 1 view .LVU286
 1061              	.LBB529:
 1062              	.LBI521:
  58:../../DaisySP/Source/Synthesis/oscillator.h ****     {
 1063              		.loc 15 58 17 view .LVU287
 1064              	.LBB523:
  60:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 1065              		.loc 15 60 9 view .LVU288
  61:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1066              		.loc 15 61 9 view .LVU289
ARM GAS  /tmp/ccVnVZaX.s 			page 40


  60:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 1067              		.loc 15 60 20 is_stmt 0 view .LVU290
 1068 00f4 C5ED028A 		vstr.32	s17, [r5, #8]
  61:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1069              		.loc 15 61 34 view .LVU291
 1070 00f8 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 1071              	.LVL45:
 1072 00fc F0EE407A 		vmov.f32	s15, s0
 1073              	.LBE523:
 1074              	.LBE529:
  75:MusicBox.cpp  ****     env.SetCurve(-15.0f);
 1075              		.loc 18 75 13 view .LVU292
 1076 0100 3846     		mov	r0, r7
 1077 0102 B0EE480A 		vmov.f32	s0, s16
 1078              	.LBB530:
 1079              	.LBB531:
  67:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1080              		.loc 15 67 46 view .LVU293
 1081 0106 85ED019A 		vstr.32	s18, [r5, #4]
 1082              	.LBE531:
 1083              	.LBE530:
 1084              	.LBB533:
 1085              	.LBB524:
  61:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1086              		.loc 15 61 20 view .LVU294
 1087 010a C5ED067A 		vstr.32	s15, [r5, #24]
 1088              	.LVL46:
  61:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1089              		.loc 15 61 20 view .LVU295
 1090              	.LBE524:
 1091              	.LBE533:
  74:MusicBox.cpp  ****     env.Init(samplerate);
 1092              		.loc 18 74 5 is_stmt 1 view .LVU296
 1093              	.LBB534:
 1094              	.LBI530:
  67:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1095              		.loc 15 67 17 view .LVU297
 1096              	.LBB532:
  67:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1097              		.loc 15 67 41 view .LVU298
  67:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1098              		.loc 15 67 41 is_stmt 0 view .LVU299
 1099              	.LBE532:
 1100              	.LBE534:
  75:MusicBox.cpp  ****     env.SetCurve(-15.0f);
 1101              		.loc 18 75 5 is_stmt 1 view .LVU300
  75:MusicBox.cpp  ****     env.SetCurve(-15.0f);
 1102              		.loc 18 75 13 is_stmt 0 view .LVU301
 1103 010e FFF7FEFF 		bl	_ZN7daisysp5AdEnv4InitEf
 1104              	.LVL47:
  76:MusicBox.cpp  ****     env.SetTime(ADENV_SEG_ATTACK, 0.002f);
 1105              		.loc 18 76 5 is_stmt 1 view .LVU302
 1106              	.LBB535:
 1107              	.LBI535:
  59:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
  60:../../DaisySP/Source/Control/adenv.h ****         curve. Input range: -100 to 100.  (or more)
  61:../../DaisySP/Source/Control/adenv.h ****     */
ARM GAS  /tmp/ccVnVZaX.s 			page 41


  62:../../DaisySP/Source/Control/adenv.h ****     inline void SetCurve(float scalar) { curve_scalar_ = scalar; }
 1108              		.loc 14 62 17 view .LVU303
 1109              	.LBB536:
 1110              		.loc 14 62 42 view .LVU304
 1111              		.loc 14 62 56 is_stmt 0 view .LVU305
 1112 0112 2649     		ldr	r1, .L23+68
 1113              	.LBE536:
 1114              	.LBE535:
  81:MusicBox.cpp  ****     filt.SetRes(0.5f);
 1115              		.loc 18 81 14 view .LVU306
 1116 0114 B0EE480A 		vmov.f32	s0, s16
 1117              	.LBB538:
 1118              	.LBB539:
  58:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
 1119              		.loc 14 58 71 view .LVU307
 1120 0118 254A     		ldr	r2, .L23+72
 1121              	.LBE539:
 1122              	.LBE538:
  81:MusicBox.cpp  ****     filt.SetRes(0.5f);
 1123              		.loc 18 81 14 view .LVU308
 1124 011a 2046     		mov	r0, r4
 1125              	.LBB542:
 1126              	.LBB543:
  58:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
 1127              		.loc 14 58 71 view .LVU309
 1128 011c 254B     		ldr	r3, .L23+76
 1129              	.LBE543:
 1130              	.LBE542:
 1131              	.LBB545:
 1132              	.LBB537:
 1133              		.loc 14 62 56 view .LVU310
 1134 011e 3962     		str	r1, [r7, #32]	@ float
 1135              	.LVL48:
 1136              		.loc 14 62 56 view .LVU311
 1137              	.LBE537:
 1138              	.LBE545:
  77:MusicBox.cpp  ****     env.SetTime(ADENV_SEG_DECAY, 2.6f);
 1139              		.loc 18 77 5 is_stmt 1 view .LVU312
 1140              	.LBB546:
 1141              	.LBI538:
  58:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
 1142              		.loc 14 58 17 view .LVU313
 1143              	.LBB540:
  58:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
 1144              		.loc 14 58 52 view .LVU314
 1145              	.LBE540:
 1146              	.LBE546:
 1147              	.LBB547:
 1148              	.LBB548:
  63:../../DaisySP/Source/Control/adenv.h ****     /** Sets the minimum value of the envelope output.
  64:../../DaisySP/Source/Control/adenv.h ****         Input range: -FLTmax_, to FLTmax_
  65:../../DaisySP/Source/Control/adenv.h ****     */
  66:../../DaisySP/Source/Control/adenv.h ****     inline void SetMin(float min) { min_ = min; }
  67:../../DaisySP/Source/Control/adenv.h ****     /** Sets the maximum value of the envelope output.
  68:../../DaisySP/Source/Control/adenv.h ****         Input range: -FLTmax_, to FLTmax_
  69:../../DaisySP/Source/Control/adenv.h ****     */
  70:../../DaisySP/Source/Control/adenv.h ****     inline void SetMax(float max) { max_ = max; }
ARM GAS  /tmp/ccVnVZaX.s 			page 42


 1149              		.loc 14 70 42 is_stmt 0 view .LVU315
 1150 0120 87ED06AA 		vstr.32	s20, [r7, #24]
 1151              	.LBE548:
 1152              	.LBE547:
 1153              	.LBB550:
 1154              	.LBB551:
  66:../../DaisySP/Source/Control/adenv.h ****     /** Sets the maximum value of the envelope output.
 1155              		.loc 14 66 42 view .LVU316
 1156 0124 C7ED059A 		vstr.32	s19, [r7, #20]
 1157              	.LBE551:
 1158              	.LBE550:
 1159              	.LBB553:
 1160              	.LBB541:
  58:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
 1161              		.loc 14 58 71 view .LVU317
 1162 0128 BA60     		str	r2, [r7, #8]	@ float
 1163              	.LVL49:
  58:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
 1164              		.loc 14 58 71 view .LVU318
 1165              	.LBE541:
 1166              	.LBE553:
  78:MusicBox.cpp  ****     env.SetMax(1.f);
 1167              		.loc 18 78 5 is_stmt 1 view .LVU319
 1168              	.LBB554:
 1169              	.LBI542:
  58:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
 1170              		.loc 14 58 17 view .LVU320
 1171              	.LBB544:
  58:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
 1172              		.loc 14 58 52 view .LVU321
  58:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
 1173              		.loc 14 58 71 is_stmt 0 view .LVU322
 1174 012a FB60     		str	r3, [r7, #12]	@ float
 1175              	.LVL50:
  58:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
 1176              		.loc 14 58 71 view .LVU323
 1177              	.LBE544:
 1178              	.LBE554:
  79:MusicBox.cpp  ****     env.SetMin(0.f);
 1179              		.loc 18 79 5 is_stmt 1 view .LVU324
 1180              	.LBB555:
 1181              	.LBI547:
 1182              		.loc 14 70 17 view .LVU325
 1183              	.LBB549:
 1184              		.loc 14 70 37 view .LVU326
 1185              		.loc 14 70 37 is_stmt 0 view .LVU327
 1186              	.LBE549:
 1187              	.LBE555:
  80:MusicBox.cpp  ****     filt.Init(samplerate);
 1188              		.loc 18 80 5 is_stmt 1 view .LVU328
 1189              	.LBB556:
 1190              	.LBI550:
  66:../../DaisySP/Source/Control/adenv.h ****     /** Sets the maximum value of the envelope output.
 1191              		.loc 14 66 17 view .LVU329
 1192              	.LBB552:
  66:../../DaisySP/Source/Control/adenv.h ****     /** Sets the maximum value of the envelope output.
 1193              		.loc 14 66 37 view .LVU330
ARM GAS  /tmp/ccVnVZaX.s 			page 43


  66:../../DaisySP/Source/Control/adenv.h ****     /** Sets the maximum value of the envelope output.
 1194              		.loc 14 66 37 is_stmt 0 view .LVU331
 1195              	.LBE552:
 1196              	.LBE556:
  81:MusicBox.cpp  ****     filt.SetRes(0.5f);
 1197              		.loc 18 81 5 is_stmt 1 view .LVU332
  81:MusicBox.cpp  ****     filt.SetRes(0.5f);
 1198              		.loc 18 81 14 is_stmt 0 view .LVU333
 1199 012c FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 1200              	.LVL51:
  82:MusicBox.cpp  ****     filt.SetDrive(0.8f);
 1201              		.loc 18 82 5 is_stmt 1 view .LVU334
  82:MusicBox.cpp  ****     filt.SetDrive(0.8f);
 1202              		.loc 18 82 16 is_stmt 0 view .LVU335
 1203 0130 B0EE490A 		vmov.f32	s0, s18
 1204 0134 2046     		mov	r0, r4
 1205 0136 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 1206              	.LVL52:
  83:MusicBox.cpp  ****     filt.SetFreq(2400.0f);
 1207              		.loc 18 83 5 is_stmt 1 view .LVU336
  83:MusicBox.cpp  ****     filt.SetFreq(2400.0f);
 1208              		.loc 18 83 18 is_stmt 0 view .LVU337
 1209 013a 2046     		mov	r0, r4
 1210 013c 9FED1E0A 		vldr.32	s0, .L23+80
 1211 0140 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 1212              	.LVL53:
  84:MusicBox.cpp  ****     verb.Init(samplerate);
 1213              		.loc 18 84 5 is_stmt 1 view .LVU338
  84:MusicBox.cpp  ****     verb.Init(samplerate);
 1214              		.loc 18 84 17 is_stmt 0 view .LVU339
 1215 0144 2046     		mov	r0, r4
 1216 0146 9FED1D0A 		vldr.32	s0, .L23+84
 1217 014a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1218              	.LVL54:
 1219              		.loc 18 85 5 is_stmt 1 view .LVU340
 1220              		.loc 18 85 14 is_stmt 0 view .LVU341
 1221 014e B0EE480A 		vmov.f32	s0, s16
 1222 0152 3046     		mov	r0, r6
 1223 0154 FFF7FEFF 		bl	_ZN7daisysp8ReverbSc4InitEf
 1224              	.LVL55:
  86:MusicBox.cpp  ****     verb.SetFeedback(0.87);
 1225              		.loc 18 86 5 is_stmt 1 view .LVU342
 1226              	.LBB557:
 1227              	.LBI557:
  42:../../DaisySP/Source/Effects/reverbsc.h ****     /** Initializes the reverb module, and sets the sample_rate at which the Process function will 
  43:../../DaisySP/Source/Effects/reverbsc.h ****         Returns 0 if all good, or 1 if it runs out of delay times exceed maximum allowed.
  44:../../DaisySP/Source/Effects/reverbsc.h ****     */
  45:../../DaisySP/Source/Effects/reverbsc.h ****     int Init(float sample_rate);
  46:../../DaisySP/Source/Effects/reverbsc.h **** 
  47:../../DaisySP/Source/Effects/reverbsc.h ****     /** Process the input through the reverb, and updates values of out1, and out2 with the new pro
  48:../../DaisySP/Source/Effects/reverbsc.h ****     */
  49:../../DaisySP/Source/Effects/reverbsc.h ****     int Process(const float &in1, const float &in2, float *out1, float *out2);
  50:../../DaisySP/Source/Effects/reverbsc.h **** 
  51:../../DaisySP/Source/Effects/reverbsc.h ****     /** controls the reverb time. reverb tail becomes infinite when set to 1.0
  52:../../DaisySP/Source/Effects/reverbsc.h ****         \param fb - sets reverb time. range: 0.0 to 1.0
  53:../../DaisySP/Source/Effects/reverbsc.h ****     */
  54:../../DaisySP/Source/Effects/reverbsc.h ****     inline void SetFeedback(const float &fb) { feedback_ = fb; }
ARM GAS  /tmp/ccVnVZaX.s 			page 44


 1228              		.loc 17 54 17 view .LVU343
 1229              	.LBB558:
 1230              		.loc 17 54 48 view .LVU344
 1231              		.loc 17 54 58 is_stmt 0 view .LVU345
 1232 0158 194A     		ldr	r2, .L23+88
 1233              	.LBE558:
 1234              	.LBE557:
 1235              	.LBB560:
 1236              	.LBB561:
  55:../../DaisySP/Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
  56:../../DaisySP/Source/Effects/reverbsc.h ****         \param freq - low pass frequency. range: 0.0 to sample_rate / 2
  57:../../DaisySP/Source/Effects/reverbsc.h ****     */
  58:../../DaisySP/Source/Effects/reverbsc.h ****     inline void SetLpFreq(const float &freq) { lpfreq_ = freq; }
 1237              		.loc 17 58 56 view .LVU346
 1238 015a 1A4B     		ldr	r3, .L23+92
 1239              	.LBE561:
 1240              	.LBE560:
 1241              	.LBB563:
 1242              	.LBB559:
  54:../../DaisySP/Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
 1243              		.loc 17 54 58 view .LVU347
 1244 015c 3260     		str	r2, [r6]	@ float
 1245              	.LBE559:
 1246              	.LBE563:
  87:MusicBox.cpp  ****     verb.SetLpFreq(10000.0f);
 1247              		.loc 18 87 5 is_stmt 1 view .LVU348
 1248              	.LBB564:
 1249              	.LBI560:
 1250              		.loc 17 58 17 view .LVU349
 1251              	.LVL56:
 1252              	.LBB562:
 1253              		.loc 17 58 48 view .LVU350
 1254              		.loc 17 58 56 is_stmt 0 view .LVU351
 1255 015e 7360     		str	r3, [r6, #4]	@ float
 1256              	.LBE562:
 1257              	.LBE564:
  88:MusicBox.cpp  **** }
 1258              		.loc 18 88 1 view .LVU352
 1259 0160 09B0     		add	sp, sp, #36
 1260              		.cfi_def_cfa_offset 44
 1261              		@ sp needed
 1262 0162 BDEC068B 		vldm	sp!, {d8-d10}
 1263              		.cfi_restore 84
 1264              		.cfi_restore 85
 1265              		.cfi_restore 82
 1266              		.cfi_restore 83
 1267              		.cfi_restore 80
 1268              		.cfi_restore 81
 1269              		.cfi_def_cfa_offset 20
 1270              	.LVL57:
 1271              		.loc 18 88 1 view .LVU353
 1272 0166 F0BD     		pop	{r4, r5, r6, r7, pc}
 1273              	.L24:
 1274              		.align	2
 1275              	.L23:
 1276 0168 00000000 		.word	hw
 1277 016c 00803B46 		.word	1178304512
ARM GAS  /tmp/ccVnVZaX.s 			page 45


 1278 0170 00000000 		.word	.LANCHOR1
 1279 0174 00000000 		.word	0
 1280 0178 0000C842 		.word	1120403456
 1281 017c 00000000 		.word	.LANCHOR4
 1282 0180 CDCC4C3E 		.word	1045220557
 1283 0184 00000000 		.word	.LANCHOR8
 1284 0188 00000000 		.word	.LANCHOR6
 1285 018c 3333733F 		.word	1064514355
 1286 0190 CDCCCC3E 		.word	1053609165
 1287 0194 00000000 		.word	.LANCHOR2
 1288 0198 00000000 		.word	.LANCHOR16
 1289 019c 00000000 		.word	.LANCHOR3
 1290 01a0 52B81E3F 		.word	1058977874
 1291 01a4 00000000 		.word	.LANCHOR11
 1292 01a8 00000000 		.word	verb
 1293 01ac 000070C1 		.word	-1049624576
 1294 01b0 6F12033B 		.word	990057071
 1295 01b4 66662640 		.word	1076258406
 1296 01b8 CDCC4C3F 		.word	1061997773
 1297 01bc 00001645 		.word	1159069696
 1298 01c0 52B85E3F 		.word	1063172178
 1299 01c4 00401C46 		.word	1176256512
 1300              		.cfi_endproc
 1301              	.LFE4221:
 1303              		.section	.text.startup.main,"ax",%progbits
 1304              		.align	1
 1305              		.p2align 2,,3
 1306              		.global	main
 1307              		.syntax unified
 1308              		.thumb
 1309              		.thumb_func
 1310              		.fpu fpv5-d16
 1312              	main:
 1313              	.LFB4222:
  89:MusicBox.cpp  **** 
  90:MusicBox.cpp  **** int main(void)
  91:MusicBox.cpp  **** {
 1314              		.loc 18 91 1 is_stmt 1 view -0
 1315              		.cfi_startproc
 1316              		@ args = 0, pretend = 0, frame = 0
 1317              		@ frame_needed = 0, uses_anonymous_args = 0
  92:MusicBox.cpp  ****     float samplerate;
 1318              		.loc 18 92 5 view .LVU355
  93:MusicBox.cpp  ****     // Init
  94:MusicBox.cpp  ****     hw.Init();
 1319              		.loc 18 94 5 view .LVU356
 1320              		.loc 18 94 12 is_stmt 0 view .LVU357
 1321 0000 0021     		movs	r1, #0
 1322 0002 0848     		ldr	r0, .L28
  91:MusicBox.cpp  ****     float samplerate;
 1323              		.loc 18 91 1 view .LVU358
 1324 0004 08B5     		push	{r3, lr}
 1325              		.cfi_def_cfa_offset 8
 1326              		.cfi_offset 3, -8
 1327              		.cfi_offset 14, -4
 1328              		.loc 18 94 12 view .LVU359
 1329 0006 FFF7FEFF 		bl	_ZN5daisy8DaisyPod4InitEb
ARM GAS  /tmp/ccVnVZaX.s 			page 46


 1330              	.LVL58:
  95:MusicBox.cpp  ****     samplerate = hw.AudioSampleRate();
 1331              		.loc 18 95 5 is_stmt 1 view .LVU360
 1332              		.loc 18 95 36 is_stmt 0 view .LVU361
 1333 000a 0648     		ldr	r0, .L28
 1334 000c FFF7FEFF 		bl	_ZN5daisy8DaisyPod15AudioSampleRateEv
 1335              	.LVL59:
  96:MusicBox.cpp  ****     InitSynth(samplerate);
 1336              		.loc 18 96 5 is_stmt 1 view .LVU362
 1337              		.loc 18 96 14 is_stmt 0 view .LVU363
 1338 0010 FFF7FEFF 		bl	_Z9InitSynthf
 1339              	.LVL60:
  97:MusicBox.cpp  ****     // Start Callbacks
  98:MusicBox.cpp  ****     hw.StartAdc();
 1340              		.loc 18 98 5 is_stmt 1 view .LVU364
 1341              		.loc 18 98 16 is_stmt 0 view .LVU365
 1342 0014 0348     		ldr	r0, .L28
 1343 0016 FFF7FEFF 		bl	_ZN5daisy8DaisyPod8StartAdcEv
 1344              	.LVL61:
  99:MusicBox.cpp  ****     hw.StartAudio(audio);
 1345              		.loc 18 99 5 is_stmt 1 view .LVU366
 1346              		.loc 18 99 18 is_stmt 0 view .LVU367
 1347 001a 0349     		ldr	r1, .L28+4
 1348 001c 0148     		ldr	r0, .L28
 1349 001e FFF7FEFF 		bl	_ZN5daisy8DaisyPod10StartAudioEPFvPKfPfjE
 1350              	.LVL62:
 1351              	.L26:
 100:MusicBox.cpp  ****     while(1) {}
 1352              		.loc 18 100 5 is_stmt 1 discriminator 1 view .LVU368
 1353              		.loc 18 100 5 discriminator 1 view .LVU369
 1354              		.loc 18 100 5 discriminator 1 view .LVU370
 1355              		.loc 18 100 5 discriminator 1 view .LVU371
 1356 0022 FEE7     		b	.L26
 1357              	.L29:
 1358              		.align	2
 1359              	.L28:
 1360 0024 00000000 		.word	hw
 1361 0028 00000000 		.word	_ZL5audioPKfPfj
 1362              		.cfi_endproc
 1363              	.LFE4222:
 1365              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 1366              		.align	1
 1367              		.p2align 2,,3
 1368              		.syntax unified
 1369              		.thumb
 1370              		.thumb_func
 1371              		.fpu fpv5-d16
 1373              	_GLOBAL__sub_I_hw:
 1374              	.LFB4780:
 101:MusicBox.cpp  **** }
 1375              		.loc 18 101 1 view -0
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 0
 1378              		@ frame_needed = 0, uses_anonymous_args = 0
 1379              	.LBB650:
 1380              	.LBI650:
 1381              		.loc 18 101 1 view .LVU373
ARM GAS  /tmp/ccVnVZaX.s 			page 47


 1382              	.LVL63:
 1383              	.LBB651:
 1384              	.LBB652:
 1385              	.LBI652:
  35:../../libdaisy/src/daisy_pod.h ****     ~DaisyPod() {}
 1386              		.loc 3 35 5 view .LVU374
 1387              	.LBB653:
 1388              	.LBB654:
 1389              	.LBI654:
  21:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 1390              		.loc 9 21 5 view .LVU375
 1391              	.LBB655:
 1392              	.LBB656:
 1393              	.LBI656:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 1394              		.loc 13 62 5 view .LVU376
 1395              	.LBE656:
 1396              	.LBE655:
 1397              	.LBE654:
 1398              	.LBB675:
 1399              	.LBB676:
 1400              	.LBB677:
 1401              	.LBB678:
 1402              	.LBB679:
 1403              	.LBB680:
 1404              	.LBB681:
  36:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 1405              		.loc 4 36 20 is_stmt 0 view .LVU377
 1406 0000 294A     		ldr	r2, .L32
  37:../../libdaisy/src/hid/midi.h ****         }
 1407              		.loc 4 37 20 view .LVU378
 1408 0002 49F22221 		movw	r1, #37410
 1409              	.LBE681:
 1410              	.LBE680:
 1411              	.LBE679:
 1412              	.LBE678:
 1413              	.LBE677:
 1414              	.LBE676:
 1415              	.LBE675:
 1416              	.LBB722:
 1417              	.LBB672:
 1418              	.LBB663:
 1419              	.LBB657:
 1420              	.LBB658:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 1421              		.loc 13 62 35 view .LVU379
 1422 0006 2948     		ldr	r0, .L32+4
 1423              	.LBE658:
 1424              	.LBE657:
 1425              	.LBE663:
 1426              	.LBE672:
 1427              	.LBE722:
 1428              	.LBE653:
 1429              	.LBE652:
 1430              	.LBE651:
 1431              	.LBE650:
 1432              		.loc 18 101 1 view .LVU380
ARM GAS  /tmp/ccVnVZaX.s 			page 48


 1433 0008 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1434              		.cfi_def_cfa_offset 24
 1435              		.cfi_offset 3, -24
 1436              		.cfi_offset 4, -20
 1437              		.cfi_offset 5, -16
 1438              		.cfi_offset 6, -12
 1439              		.cfi_offset 7, -8
 1440              		.cfi_offset 14, -4
 1441              	.LBB771:
 1442              	.LBB769:
 1443              	.LBB750:
 1444              	.LBB747:
 1445              	.LBB723:
 1446              	.LBB717:
 1447              	.LBB712:
 1448              	.LBB694:
 1449              	.LBB690:
 1450              	.LBB686:
 1451              	.LBB682:
  36:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 1452              		.loc 4 36 20 view .LVU381
 1453 000a 1688     		ldrh	r6, [r2]
 1454 000c 49F22025 		movw	r5, #37408
  37:../../libdaisy/src/hid/midi.h ****         }
 1455              		.loc 4 37 20 view .LVU382
 1456 0010 9288     		ldrh	r2, [r2, #4]
 1457              	.LBE682:
 1458              	.LBE686:
 1459              	.LBE690:
 1460              	.LBE694:
 1461              	.LBE712:
 1462              	.LBE717:
 1463              	.LBE723:
 1464              	.LBB724:
 1465              	.LBB673:
 1466              	.LBB664:
 1467              	.LBB661:
 1468              	.LBB659:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 1469              		.loc 13 62 35 view .LVU383
 1470 0012 0023     		movs	r3, #0
 1471              	.LBE659:
 1472              	.LBE661:
 1473              	.LBE664:
 1474              	.LBE673:
 1475              	.LBE724:
 1476              	.LBB725:
 1477              	.LBB718:
 1478              	.LBB713:
 1479              	.LBB695:
 1480              	.LBB691:
 1481              	.LBB687:
 1482              	.LBB683:
  36:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 1483              		.loc 4 36 20 view .LVU384
 1484 0014 4653     		strh	r6, [r0, r5]	@ movhi
  35:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
ARM GAS  /tmp/ccVnVZaX.s 			page 49


 1485              		.loc 4 35 20 view .LVU385
 1486 0016 49F21C27 		movw	r7, #37404
  37:../../libdaisy/src/hid/midi.h ****         }
 1487              		.loc 4 37 20 view .LVU386
 1488 001a 4252     		strh	r2, [r0, r1]	@ movhi
 1489              	.LBE683:
 1490              	.LBE687:
 1491              	.LBE691:
 1492              	.LBE695:
 1493              	.LBB696:
 1494              	.LBB697:
 1495              	.LBB698:
 1496              	.LBB699:
 1497              		.file 21 "../../libdaisy/src/per/uart.h"
   1:../../libdaisy/src/per/uart.h **** /* 
   2:../../libdaisy/src/per/uart.h **** TODO
   3:../../libdaisy/src/per/uart.h **** - UART1 defaults to DMA, add flexible config for DMA on all periphs
   4:../../libdaisy/src/per/uart.h **** - Transmit function improvements.
   5:../../libdaisy/src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   6:../../libdaisy/src/per/uart.h **** */
   7:../../libdaisy/src/per/uart.h **** 
   8:../../libdaisy/src/per/uart.h **** #pragma once
   9:../../libdaisy/src/per/uart.h **** #ifndef DSY_UART_H
  10:../../libdaisy/src/per/uart.h **** #define DSY_UART_H /**< macro */
  11:../../libdaisy/src/per/uart.h **** #include "daisy_core.h"
  12:../../libdaisy/src/per/uart.h **** 
  13:../../libdaisy/src/per/uart.h **** 
  14:../../libdaisy/src/per/uart.h **** namespace daisy
  15:../../libdaisy/src/per/uart.h **** {
  16:../../libdaisy/src/per/uart.h **** /** @addtogroup serial
  17:../../libdaisy/src/per/uart.h ****     @{
  18:../../libdaisy/src/per/uart.h ****     */
  19:../../libdaisy/src/per/uart.h **** 
  20:../../libdaisy/src/per/uart.h **** /** 
  21:../../libdaisy/src/per/uart.h ****     Uart Peripheral
  22:../../libdaisy/src/per/uart.h ****     @author shensley
  23:../../libdaisy/src/per/uart.h ****     @date March 2020
  24:../../libdaisy/src/per/uart.h ****     */
  25:../../libdaisy/src/per/uart.h **** class UartHandler
  26:../../libdaisy/src/per/uart.h **** {
  27:../../libdaisy/src/per/uart.h ****   public:
  28:../../libdaisy/src/per/uart.h ****     struct Config
  29:../../libdaisy/src/per/uart.h ****     {
  30:../../libdaisy/src/per/uart.h ****         enum class Peripheral
  31:../../libdaisy/src/per/uart.h ****         {
  32:../../libdaisy/src/per/uart.h ****             USART_1,
  33:../../libdaisy/src/per/uart.h ****             USART_2,
  34:../../libdaisy/src/per/uart.h ****             USART_3,
  35:../../libdaisy/src/per/uart.h ****             UART_4,
  36:../../libdaisy/src/per/uart.h ****             UART_5,
  37:../../libdaisy/src/per/uart.h ****             USART_6,
  38:../../libdaisy/src/per/uart.h ****             UART_7,
  39:../../libdaisy/src/per/uart.h ****             UART_8,
  40:../../libdaisy/src/per/uart.h ****             LPUART_1,
  41:../../libdaisy/src/per/uart.h ****         };
  42:../../libdaisy/src/per/uart.h **** 
  43:../../libdaisy/src/per/uart.h ****         enum class StopBits
ARM GAS  /tmp/ccVnVZaX.s 			page 50


  44:../../libdaisy/src/per/uart.h ****         {
  45:../../libdaisy/src/per/uart.h ****             BITS_0_5,
  46:../../libdaisy/src/per/uart.h ****             BITS_1,
  47:../../libdaisy/src/per/uart.h ****             BITS_1_5,
  48:../../libdaisy/src/per/uart.h ****             BITS_2,
  49:../../libdaisy/src/per/uart.h ****         };
  50:../../libdaisy/src/per/uart.h **** 
  51:../../libdaisy/src/per/uart.h ****         enum class Parity
  52:../../libdaisy/src/per/uart.h ****         {
  53:../../libdaisy/src/per/uart.h ****             NONE,
  54:../../libdaisy/src/per/uart.h ****             EVEN,
  55:../../libdaisy/src/per/uart.h ****             ODD,
  56:../../libdaisy/src/per/uart.h ****         };
  57:../../libdaisy/src/per/uart.h **** 
  58:../../libdaisy/src/per/uart.h ****         enum class Mode
  59:../../libdaisy/src/per/uart.h ****         {
  60:../../libdaisy/src/per/uart.h ****             RX,
  61:../../libdaisy/src/per/uart.h ****             TX,
  62:../../libdaisy/src/per/uart.h ****             TX_RX,
  63:../../libdaisy/src/per/uart.h ****         };
  64:../../libdaisy/src/per/uart.h **** 
  65:../../libdaisy/src/per/uart.h ****         enum class WordLength
  66:../../libdaisy/src/per/uart.h ****         {
  67:../../libdaisy/src/per/uart.h ****             BITS_7,
  68:../../libdaisy/src/per/uart.h ****             BITS_8,
  69:../../libdaisy/src/per/uart.h ****             BITS_9,
  70:../../libdaisy/src/per/uart.h ****         };
  71:../../libdaisy/src/per/uart.h **** 
  72:../../libdaisy/src/per/uart.h ****         struct
  73:../../libdaisy/src/per/uart.h ****         {
  74:../../libdaisy/src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  75:../../libdaisy/src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  76:../../libdaisy/src/per/uart.h ****         } pin_config;        /**< & */
  77:../../libdaisy/src/per/uart.h **** 
  78:../../libdaisy/src/per/uart.h ****         Peripheral periph;
  79:../../libdaisy/src/per/uart.h ****         StopBits   stopbits;
  80:../../libdaisy/src/per/uart.h ****         Parity     parity;
  81:../../libdaisy/src/per/uart.h ****         Mode       mode;
  82:../../libdaisy/src/per/uart.h ****         WordLength wordlength;
  83:../../libdaisy/src/per/uart.h ****         uint32_t   baudrate;
  84:../../libdaisy/src/per/uart.h ****     };
  85:../../libdaisy/src/per/uart.h **** 
  86:../../libdaisy/src/per/uart.h **** 
  87:../../libdaisy/src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 1498              		.loc 21 87 35 view .LVU387
 1499 001c 49F22425 		movw	r5, #37412
 1500              	.LBE699:
 1501              	.LBE698:
 1502              	.LBE697:
 1503              	.LBE696:
  82:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 1504              		.loc 4 82 19 view .LVU388
 1505 0020 49F22C21 		movw	r1, #37420
 1506 0024 4FF60F06 		movw	r6, #63503
 1507              	.LBE713:
 1508              	.LBE718:
 1509              	.LBE725:
ARM GAS  /tmp/ccVnVZaX.s 			page 51


 1510              	.LBE747:
 1511              	.LBE750:
   8:MusicBox.cpp  **** Oscillator osc;
 1512              		.loc 18 8 12 view .LVU389
 1513 0028 214C     		ldr	r4, .L32+8
 1514              	.LBB751:
 1515              	.LBB748:
 1516              	.LBB726:
 1517              	.LBB719:
 1518              	.LBB714:
  82:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 1519              		.loc 4 82 19 view .LVU390
 1520 002a 49F22822 		movw	r2, #37416
 1521              	.LBB704:
 1522              	.LBB692:
 1523              	.LBB688:
 1524              	.LBB684:
  35:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 1525              		.loc 4 35 20 view .LVU391
 1526 002e C351     		str	r3, [r0, r7]
 1527              	.LBE684:
 1528              	.LBE688:
 1529              	.LBE692:
 1530              	.LBE704:
 1531              	.LBB705:
 1532              	.LBB702:
 1533              	.LBB701:
 1534              	.LBB700:
 1535              		.loc 21 87 35 view .LVU392
 1536 0030 4351     		str	r3, [r0, r5]
 1537              	.LBE700:
 1538              	.LBE701:
 1539              	.LBE702:
 1540              	.LBE705:
  82:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 1541              		.loc 4 82 19 view .LVU393
 1542 0032 4652     		strh	r6, [r0, r1]	@ movhi
 1543 0034 0721     		movs	r1, #7
 1544 0036 1F4D     		ldr	r5, .L32+12
 1545              	.LBE714:
 1546              	.LBE719:
 1547              	.LBE726:
 1548              	.LBB727:
 1549              	.LBB674:
 1550              	.LBB665:
 1551              	.LBB662:
 1552              	.LBB660:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 1553              		.loc 13 62 35 view .LVU394
 1554 0038 4361     		str	r3, [r0, #20]
 1555              	.LVL64:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 1556              		.loc 13 62 35 view .LVU395
 1557              	.LBE660:
 1558              	.LBE662:
 1559              	.LBE665:
 1560              	.LBB666:
ARM GAS  /tmp/ccVnVZaX.s 			page 52


 1561              	.LBI666:
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 1562              		.loc 12 84 5 is_stmt 1 view .LVU396
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 1563              		.loc 12 84 5 is_stmt 0 view .LVU397
 1564              	.LBE666:
 1565              	.LBB667:
 1566              	.LBI667:
 1567              		.file 22 "../../libdaisy/src/per/dac.h"
   1:../../libdaisy/src/per/dac.h **** #pragma once
   2:../../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../../libdaisy/src/per/dac.h **** 
   5:../../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../../libdaisy/src/per/dac.h **** 
   7:../../libdaisy/src/per/dac.h **** namespace daisy
   8:../../libdaisy/src/per/dac.h **** {
   9:../../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../../libdaisy/src/per/dac.h ****  ** 
  11:../../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../../libdaisy/src/per/dac.h ****  **
  14:../../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../../libdaisy/src/per/dac.h ****  **
  16:../../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../../libdaisy/src/per/dac.h ****  ***/
  20:../../libdaisy/src/per/dac.h **** class DacHandle
  21:../../libdaisy/src/per/dac.h **** {
  22:../../libdaisy/src/per/dac.h ****   public:
  23:../../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../../libdaisy/src/per/dac.h ****     enum class Result
  25:../../libdaisy/src/per/dac.h ****     {
  26:../../libdaisy/src/per/dac.h ****         OK,
  27:../../libdaisy/src/per/dac.h ****         ERR,
  28:../../libdaisy/src/per/dac.h ****     };
  29:../../libdaisy/src/per/dac.h **** 
  30:../../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../../libdaisy/src/per/dac.h ****     enum class Channel
  32:../../libdaisy/src/per/dac.h ****     {
  33:../../libdaisy/src/per/dac.h ****         ONE,
  34:../../libdaisy/src/per/dac.h ****         TWO,
  35:../../libdaisy/src/per/dac.h ****         BOTH,
  36:../../libdaisy/src/per/dac.h ****     };
  37:../../libdaisy/src/per/dac.h **** 
  38:../../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../../libdaisy/src/per/dac.h ****      **
  40:../../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../../libdaisy/src/per/dac.h ****      **
  42:../../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../../libdaisy/src/per/dac.h ****      ***/
  45:../../libdaisy/src/per/dac.h ****     enum class Mode
  46:../../libdaisy/src/per/dac.h ****     {
  47:../../libdaisy/src/per/dac.h ****         POLLING,
  48:../../libdaisy/src/per/dac.h ****         DMA,
ARM GAS  /tmp/ccVnVZaX.s 			page 53


  49:../../libdaisy/src/per/dac.h ****     };
  50:../../libdaisy/src/per/dac.h **** 
  51:../../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../../libdaisy/src/per/dac.h ****      ***/
  55:../../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../../libdaisy/src/per/dac.h ****     {
  57:../../libdaisy/src/per/dac.h ****         BITS_8,
  58:../../libdaisy/src/per/dac.h ****         BITS_12
  59:../../libdaisy/src/per/dac.h ****     };
  60:../../libdaisy/src/per/dac.h **** 
  61:../../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../../libdaisy/src/per/dac.h ****     {
  64:../../libdaisy/src/per/dac.h ****         ENABLED,
  65:../../libdaisy/src/per/dac.h ****         DISABLED,
  66:../../libdaisy/src/per/dac.h ****     };
  67:../../libdaisy/src/per/dac.h **** 
  68:../../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../../libdaisy/src/per/dac.h ****     struct Config
  70:../../libdaisy/src/per/dac.h ****     {
  71:../../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../../libdaisy/src/per/dac.h **** 
  77:../../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../../libdaisy/src/per/dac.h ****     };
  82:../../libdaisy/src/per/dac.h **** 
  83:../../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 1568              		.loc 22 83 5 is_stmt 1 view .LVU398
 1569              	.LBB668:
 1570              	.LBB669:
 1571              		.loc 22 83 33 is_stmt 0 view .LVU399
 1572 003a 0362     		str	r3, [r0, #32]
 1573              	.LVL65:
 1574              		.loc 22 83 33 view .LVU400
 1575              	.LBE669:
 1576              	.LBE668:
 1577              	.LBE667:
 1578              	.LBB670:
 1579              	.LBI670:
  40:../../libdaisy/src/hid/usb.h **** 
 1580              		.loc 11 40 5 is_stmt 1 view .LVU401
  40:../../libdaisy/src/hid/usb.h **** 
 1581              		.loc 11 40 5 is_stmt 0 view .LVU402
 1582              	.LBE670:
 1583              	.LBB671:
 1584              	.LBI671:
  58:../../libdaisy/src/sys/system.h ****     ~System() {}
 1585              		.loc 10 58 5 is_stmt 1 view .LVU403
  58:../../libdaisy/src/sys/system.h ****     ~System() {}
ARM GAS  /tmp/ccVnVZaX.s 			page 54


 1586              		.loc 10 58 5 is_stmt 0 view .LVU404
 1587              	.LBE671:
 1588              	.LBE674:
 1589              	.LBE727:
 1590              	.LBB728:
 1591              	.LBI728:
  20:../../libdaisy/src/hid/encoder.h ****     ~Encoder() {}
 1592              		.loc 8 20 5 is_stmt 1 view .LVU405
 1593              	.LBB729:
 1594              	.LBB730:
 1595              	.LBI730:
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 1596              		.loc 7 40 5 view .LVU406
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 1597              		.loc 7 40 5 is_stmt 0 view .LVU407
 1598              	.LBE730:
 1599              	.LBE729:
 1600              	.LBE728:
 1601              	.LBB731:
 1602              	.LBI731:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 1603              		.loc 2 21 5 is_stmt 1 view .LVU408
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 1604              		.loc 2 21 5 is_stmt 0 view .LVU409
 1605              	.LBE731:
 1606              	.LBB732:
 1607              	.LBI732:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 1608              		.loc 2 21 5 is_stmt 1 view .LVU410
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 1609              		.loc 2 21 5 is_stmt 0 view .LVU411
 1610              	.LBE732:
 1611              	.LBB733:
 1612              	.LBI733:
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 1613              		.loc 7 40 5 is_stmt 1 view .LVU412
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 1614              		.loc 7 40 5 is_stmt 0 view .LVU413
 1615              	.LBE733:
 1616              	.LBB734:
 1617              	.LBI734:
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 1618              		.loc 7 40 5 is_stmt 1 view .LVU414
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 1619              		.loc 7 40 5 is_stmt 0 view .LVU415
 1620              	.LBE734:
 1621              	.LBB735:
 1622              	.LBI735:
  17:../../libdaisy/src/hid/rgb_led.h ****     ~RgbLed() {}
 1623              		.loc 5 17 5 is_stmt 1 view .LVU416
 1624              	.LBB736:
 1625              	.LBB737:
 1626              	.LBI737:
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 1627              		.loc 6 24 5 view .LVU417
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 1628              		.loc 6 24 5 is_stmt 0 view .LVU418
ARM GAS  /tmp/ccVnVZaX.s 			page 55


 1629              	.LBE737:
 1630              	.LBB738:
 1631              	.LBI738:
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 1632              		.loc 6 24 5 is_stmt 1 view .LVU419
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 1633              		.loc 6 24 5 is_stmt 0 view .LVU420
 1634              	.LBE738:
 1635              	.LBB739:
 1636              	.LBI739:
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 1637              		.loc 6 24 5 is_stmt 1 view .LVU421
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 1638              		.loc 6 24 5 is_stmt 0 view .LVU422
 1639              	.LBE739:
 1640              	.LBE736:
 1641              	.LBE735:
 1642              	.LBB740:
 1643              	.LBI740:
  17:../../libdaisy/src/hid/rgb_led.h ****     ~RgbLed() {}
 1644              		.loc 5 17 5 is_stmt 1 view .LVU423
 1645              	.LBB741:
 1646              	.LBB742:
 1647              	.LBI742:
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 1648              		.loc 6 24 5 view .LVU424
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 1649              		.loc 6 24 5 is_stmt 0 view .LVU425
 1650              	.LBE742:
 1651              	.LBB743:
 1652              	.LBI743:
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 1653              		.loc 6 24 5 is_stmt 1 view .LVU426
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 1654              		.loc 6 24 5 is_stmt 0 view .LVU427
 1655              	.LBE743:
 1656              	.LBB744:
 1657              	.LBI744:
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 1658              		.loc 6 24 5 is_stmt 1 view .LVU428
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 1659              		.loc 6 24 5 is_stmt 0 view .LVU429
 1660              	.LBE744:
 1661              	.LBE741:
 1662              	.LBE740:
 1663              	.LBB745:
 1664              	.LBI675:
  82:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 1665              		.loc 4 82 5 is_stmt 1 view .LVU430
 1666              	.LBB720:
 1667              	.LBB715:
 1668              	.LBB706:
 1669              	.LBI706:
 1670              		.loc 21 87 5 view .LVU431
 1671              	.LBB707:
 1672              	.LBB708:
 1673              		.loc 21 87 35 is_stmt 0 view .LVU432
ARM GAS  /tmp/ccVnVZaX.s 			page 56


 1674 003c C0F87431 		str	r3, [r0, #372]
 1675              	.LVL66:
 1676              		.loc 21 87 35 view .LVU433
 1677              	.LBE708:
 1678              	.LBE707:
 1679              	.LBE706:
 1680              	.LBB709:
 1681              	.LBI709:
 1682              		.file 23 "../../libdaisy/src/util/ringbuffer.h"
   1:../../libdaisy/src/util/ringbuffer.h **** #pragma once
   2:../../libdaisy/src/util/ringbuffer.h **** #ifndef DSY_RINGBUFFER_H
   3:../../libdaisy/src/util/ringbuffer.h **** #define DSY_RINGBUFFER_H
   4:../../libdaisy/src/util/ringbuffer.h **** 
   5:../../libdaisy/src/util/ringbuffer.h **** #include <algorithm>
   6:../../libdaisy/src/util/ringbuffer.h **** 
   7:../../libdaisy/src/util/ringbuffer.h **** namespace daisy
   8:../../libdaisy/src/util/ringbuffer.h **** {
   9:../../libdaisy/src/util/ringbuffer.h **** /** @addtogroup utility
  10:../../libdaisy/src/util/ringbuffer.h ****     @{
  11:../../libdaisy/src/util/ringbuffer.h **** */
  12:../../libdaisy/src/util/ringbuffer.h **** 
  13:../../libdaisy/src/util/ringbuffer.h **** /**
  14:../../libdaisy/src/util/ringbuffer.h **** Utility Ring Buffer \n 
  15:../../libdaisy/src/util/ringbuffer.h **** imported from pichenettes/stmlib
  16:../../libdaisy/src/util/ringbuffer.h **** */
  17:../../libdaisy/src/util/ringbuffer.h **** template <typename T, size_t size>
  18:../../libdaisy/src/util/ringbuffer.h **** class RingBuffer
  19:../../libdaisy/src/util/ringbuffer.h **** {
  20:../../libdaisy/src/util/ringbuffer.h ****   public:
  21:../../libdaisy/src/util/ringbuffer.h ****     RingBuffer() {}
 1683              		.loc 23 21 5 is_stmt 1 view .LVU434
 1684              		.loc 23 21 5 is_stmt 0 view .LVU435
 1685              	.LBE709:
 1686              	.LBB710:
 1687              	.LBI678:
  84:../../libdaisy/src/hid/midi.h **** 
  85:../../libdaisy/src/hid/midi.h ****     struct Config
 1688              		.loc 4 85 12 is_stmt 1 view .LVU436
 1689              	.LBB693:
 1690              	.LBI679:
  33:../../libdaisy/src/hid/midi.h ****         {
 1691              		.loc 4 33 9 view .LVU437
 1692              	.LBB689:
 1693              	.LBB685:
  35:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 1694              		.loc 4 35 13 view .LVU438
  36:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 1695              		.loc 4 36 13 view .LVU439
  37:../../libdaisy/src/hid/midi.h ****         }
 1696              		.loc 4 37 13 view .LVU440
  37:../../libdaisy/src/hid/midi.h ****         }
 1697              		.loc 4 37 13 is_stmt 0 view .LVU441
 1698              	.LBE685:
 1699              	.LBE689:
 1700              	.LBE693:
 1701              	.LBE710:
 1702              	.LBB711:
ARM GAS  /tmp/ccVnVZaX.s 			page 57


 1703              	.LBI696:
  24:../../libdaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
 1704              		.loc 4 24 5 is_stmt 1 view .LVU442
 1705              	.LBB703:
 1706              	.LBI697:
 1707              		.loc 21 87 5 view .LVU443
 1708              		.loc 21 87 5 is_stmt 0 view .LVU444
 1709              	.LBE703:
 1710              	.LBE711:
  82:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 1711              		.loc 4 82 19 view .LVU445
 1712 0040 49F22E23 		movw	r3, #37422
 1713 0044 8550     		str	r5, [r0, r2]
 1714              	.LBE715:
 1715              	.LBE720:
 1716              	.LBE745:
 1717              	.LBE748:
 1718              	.LBE751:
   8:MusicBox.cpp  **** Oscillator osc;
 1719              		.loc 18 8 12 view .LVU446
 1720 0046 2246     		mov	r2, r4
 1721              	.LBB752:
 1722              	.LBB749:
 1723              	.LBB746:
 1724              	.LBB721:
 1725              	.LBB716:
  82:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 1726              		.loc 4 82 19 view .LVU447
 1727 0048 C154     		strb	r1, [r0, r3]
 1728              	.LVL67:
  82:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 1729              		.loc 4 82 19 view .LVU448
 1730              	.LBE716:
 1731              	.LBE721:
 1732              	.LBE746:
 1733              	.LBE749:
 1734              	.LBE752:
   8:MusicBox.cpp  **** Oscillator osc;
 1735              		.loc 18 8 12 view .LVU449
 1736 004a 1B49     		ldr	r1, .L32+16
 1737 004c FFF7FEFF 		bl	__aeabi_atexit
 1738              	.LVL68:
 1739              	.LBB753:
 1740              	.LBI753:
  15:../../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 1741              		.loc 15 15 5 is_stmt 1 view .LVU450
  15:../../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 1742              		.loc 15 15 5 is_stmt 0 view .LVU451
 1743              	.LBE753:
   9:MusicBox.cpp  **** Svf        filt;
 1744              		.loc 18 9 12 view .LVU452
 1745 0050 2246     		mov	r2, r4
 1746 0052 1A49     		ldr	r1, .L32+20
 1747 0054 1A48     		ldr	r0, .L32+24
 1748 0056 FFF7FEFF 		bl	__aeabi_atexit
 1749              	.LVL69:
 1750              	.LBB754:
ARM GAS  /tmp/ccVnVZaX.s 			page 58


 1751              	.LBI754:
  21:../../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 1752              		.loc 16 21 5 is_stmt 1 view .LVU453
  21:../../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 1753              		.loc 16 21 5 is_stmt 0 view .LVU454
 1754              	.LBE754:
  10:MusicBox.cpp  **** ReverbSc   verb;
 1755              		.loc 18 10 12 view .LVU455
 1756 005a 2246     		mov	r2, r4
 1757 005c 1949     		ldr	r1, .L32+28
 1758 005e 1A48     		ldr	r0, .L32+32
  13:MusicBox.cpp  **** 
 1759              		.loc 18 13 12 view .LVU456
 1760 0060 1A4D     		ldr	r5, .L32+36
  10:MusicBox.cpp  **** ReverbSc   verb;
 1761              		.loc 18 10 12 view .LVU457
 1762 0062 FFF7FEFF 		bl	__aeabi_atexit
 1763              	.LVL70:
 1764              	.LBB755:
 1765              	.LBI755:
  40:../../DaisySP/Source/Effects/reverbsc.h ****     ~ReverbSc() {}
 1766              		.loc 17 40 5 is_stmt 1 view .LVU458
  40:../../DaisySP/Source/Effects/reverbsc.h ****     ~ReverbSc() {}
 1767              		.loc 17 40 5 is_stmt 0 view .LVU459
 1768              	.LBE755:
  11:MusicBox.cpp  **** AdEnv      env;
 1769              		.loc 18 11 12 view .LVU460
 1770 0066 2246     		mov	r2, r4
 1771 0068 1949     		ldr	r1, .L32+40
 1772 006a 1A48     		ldr	r0, .L32+44
 1773 006c FFF7FEFF 		bl	__aeabi_atexit
 1774              	.LVL71:
 1775              	.LBB756:
 1776              	.LBI756:
  34:../../DaisySP/Source/Control/adenv.h ****     ~AdEnv() {}
 1777              		.loc 14 34 5 is_stmt 1 view .LVU461
  34:../../DaisySP/Source/Control/adenv.h ****     ~AdEnv() {}
 1778              		.loc 14 34 5 is_stmt 0 view .LVU462
 1779              	.LBE756:
  12:MusicBox.cpp  **** Parameter  p_xf, p_vamt, p_dec, p_vtime;
 1780              		.loc 18 12 12 view .LVU463
 1781 0070 2246     		mov	r2, r4
 1782 0072 1949     		ldr	r1, .L32+48
 1783 0074 1948     		ldr	r0, .L32+52
 1784 0076 FFF7FEFF 		bl	__aeabi_atexit
 1785              	.LVL72:
 1786              	.LBB757:
 1787              	.LBI757:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 1788              		.loc 1 25 5 is_stmt 1 view .LVU464
 1789              	.LBB758:
 1790              	.LBB759:
 1791              	.LBI759:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 1792              		.loc 2 21 5 view .LVU465
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 1793              		.loc 2 21 5 is_stmt 0 view .LVU466
ARM GAS  /tmp/ccVnVZaX.s 			page 59


 1794              	.LBE759:
 1795              	.LBE758:
 1796              	.LBE757:
  13:MusicBox.cpp  **** 
 1797              		.loc 18 13 12 view .LVU467
 1798 007a 2246     		mov	r2, r4
 1799 007c 2946     		mov	r1, r5
 1800 007e 1848     		ldr	r0, .L32+56
 1801 0080 FFF7FEFF 		bl	__aeabi_atexit
 1802              	.LVL73:
 1803              	.LBB760:
 1804              	.LBI760:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 1805              		.loc 1 25 5 is_stmt 1 view .LVU468
 1806              	.LBB761:
 1807              	.LBB762:
 1808              	.LBI762:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 1809              		.loc 2 21 5 view .LVU469
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 1810              		.loc 2 21 5 is_stmt 0 view .LVU470
 1811              	.LBE762:
 1812              	.LBE761:
 1813              	.LBE760:
  13:MusicBox.cpp  **** 
 1814              		.loc 18 13 18 view .LVU471
 1815 0084 2246     		mov	r2, r4
 1816 0086 2946     		mov	r1, r5
 1817 0088 1648     		ldr	r0, .L32+60
 1818 008a FFF7FEFF 		bl	__aeabi_atexit
 1819              	.LVL74:
 1820              	.LBB763:
 1821              	.LBI763:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 1822              		.loc 1 25 5 is_stmt 1 view .LVU472
 1823              	.LBB764:
 1824              	.LBB765:
 1825              	.LBI765:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 1826              		.loc 2 21 5 view .LVU473
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 1827              		.loc 2 21 5 is_stmt 0 view .LVU474
 1828              	.LBE765:
 1829              	.LBE764:
 1830              	.LBE763:
  13:MusicBox.cpp  **** 
 1831              		.loc 18 13 26 view .LVU475
 1832 008e 2246     		mov	r2, r4
 1833 0090 2946     		mov	r1, r5
 1834 0092 1548     		ldr	r0, .L32+64
 1835 0094 FFF7FEFF 		bl	__aeabi_atexit
 1836              	.LVL75:
 1837              	.LBB766:
 1838              	.LBI766:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 1839              		.loc 1 25 5 is_stmt 1 view .LVU476
 1840              	.LBB767:
ARM GAS  /tmp/ccVnVZaX.s 			page 60


 1841              	.LBB768:
 1842              	.LBI768:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 1843              		.loc 2 21 5 view .LVU477
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 1844              		.loc 2 21 5 is_stmt 0 view .LVU478
 1845              	.LBE768:
 1846              	.LBE767:
 1847              	.LBE766:
  13:MusicBox.cpp  **** 
 1848              		.loc 18 13 33 view .LVU479
 1849 0098 2246     		mov	r2, r4
 1850 009a 2946     		mov	r1, r5
 1851 009c 1348     		ldr	r0, .L32+68
 1852              	.LBE769:
 1853              	.LBE771:
 1854              		.loc 18 101 1 view .LVU480
 1855 009e BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 1856              		.cfi_restore 14
 1857              		.cfi_restore 7
 1858              		.cfi_restore 6
 1859              		.cfi_restore 5
 1860              		.cfi_restore 4
 1861              		.cfi_restore 3
 1862              		.cfi_def_cfa_offset 0
 1863              	.LBB772:
 1864              	.LBB770:
  13:MusicBox.cpp  **** 
 1865              		.loc 18 13 33 view .LVU481
 1866 00a2 FFF7FEBF 		b	__aeabi_atexit
 1867              	.LVL76:
 1868              	.L33:
 1869 00a6 00BF     		.align	2
 1870              	.L32:
 1871 00a8 00000000 		.word	.LANCHOR17
 1872 00ac 00000000 		.word	hw
 1873 00b0 00000000 		.word	__dso_handle
 1874 00b4 80707FF0 		.word	-260083584
 1875 00b8 00000000 		.word	_ZN5daisy8DaisyPodD1Ev
 1876 00bc 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 1877 00c0 00000000 		.word	.LANCHOR1
 1878 00c4 00000000 		.word	_ZN7daisysp3SvfD1Ev
 1879 00c8 00000000 		.word	.LANCHOR11
 1880 00cc 00000000 		.word	_ZN5daisy9ParameterD1Ev
 1881 00d0 00000000 		.word	_ZN7daisysp8ReverbScD1Ev
 1882 00d4 00000000 		.word	verb
 1883 00d8 00000000 		.word	_ZN7daisysp5AdEnvD1Ev
 1884 00dc 00000000 		.word	.LANCHOR2
 1885 00e0 00000000 		.word	.LANCHOR4
 1886 00e4 00000000 		.word	.LANCHOR6
 1887 00e8 00000000 		.word	.LANCHOR8
 1888 00ec 00000000 		.word	.LANCHOR16
 1889              	.LBE770:
 1890              	.LBE772:
 1891              		.cfi_endproc
 1892              	.LFE4780:
 1894              		.section	.init_array,"aw",%init_array
ARM GAS  /tmp/ccVnVZaX.s 			page 61


 1895              		.align	2
 1896 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 1897              		.global	time
 1898              		.global	dec
 1899              		.global	vamt
 1900              		.global	xf
 1901              		.global	wetvr
 1902              		.global	wetvl
 1903              		.global	sendsig
 1904              		.global	filtsig
 1905              		.global	rawsig
 1906              		.global	sig
 1907              		.global	p_vtime
 1908              		.global	p_dec
 1909              		.global	p_vamt
 1910              		.global	p_xf
 1911              		.global	env
 1912              		.global	verb
 1913              		.global	filt
 1914              		.global	osc
 1915              		.global	hw
 1916              		.weak	_ZZN7daisysp6myrandEvE4seed
 1917              		.section	.data._ZZN7daisysp6myrandEvE4seed,"awG",%progbits,_ZZN7daisysp6myrandEvE4seed,comdat
 1918              		.align	2
 1921              	_ZZN7daisysp6myrandEvE4seed:
 1922 0000 01000000 		.word	1
 1923              		.section	.rodata
 1924              		.align	2
 1925              		.set	.LANCHOR17,. + 0
 1926              	.LC0:
 1927 0000 01       		.byte	1
 1928 0001 07       		.byte	7
 1929 0002 0000     		.space	2
 1930              	.LC1:
 1931 0004 01       		.byte	1
 1932 0005 06       		.byte	6
 1933              		.section	.bss.dec,"aw",%nobits
 1934              		.align	2
 1935              		.set	.LANCHOR3,. + 0
 1938              	dec:
 1939 0000 00000000 		.space	4
 1940              		.section	.bss.env,"aw",%nobits
 1941              		.align	2
 1942              		.set	.LANCHOR2,. + 0
 1945              	env:
 1946 0000 00000000 		.space	56
 1946      00000000 
 1946      00000000 
 1946      00000000 
 1946      00000000 
 1947              		.section	.bss.filt,"aw",%nobits
 1948              		.align	2
 1949              		.set	.LANCHOR11,. + 0
 1952              	filt:
 1953 0000 00000000 		.space	76
 1953      00000000 
 1953      00000000 
ARM GAS  /tmp/ccVnVZaX.s 			page 62


 1953      00000000 
 1953      00000000 
 1954              		.section	.bss.filtsig,"aw",%nobits
 1955              		.align	2
 1956              		.set	.LANCHOR12,. + 0
 1959              	filtsig:
 1960 0000 00000000 		.space	4
 1961              		.section	.bss.hw,"aw",%nobits
 1962              		.align	2
 1965              	hw:
 1966 0000 00000000 		.space	37424
 1966      00000000 
 1966      00000000 
 1966      00000000 
 1966      00000000 
 1967              		.section	.bss.osc,"aw",%nobits
 1968              		.align	2
 1969              		.set	.LANCHOR1,. + 0
 1972              	osc:
 1973 0000 00000000 		.space	40
 1973      00000000 
 1973      00000000 
 1973      00000000 
 1973      00000000 
 1974              		.section	.bss.p_dec,"aw",%nobits
 1975              		.align	2
 1976              		.set	.LANCHOR8,. + 0
 1979              	p_dec:
 1980 0000 00000000 		.space	56
 1980      00000000 
 1980      00000000 
 1980      00000000 
 1980      00000000 
 1981              		.section	.bss.p_vamt,"aw",%nobits
 1982              		.align	2
 1983              		.set	.LANCHOR6,. + 0
 1986              	p_vamt:
 1987 0000 00000000 		.space	56
 1987      00000000 
 1987      00000000 
 1987      00000000 
 1987      00000000 
 1988              		.section	.bss.p_vtime,"aw",%nobits
 1989              		.align	2
 1990              		.set	.LANCHOR16,. + 0
 1993              	p_vtime:
 1994 0000 00000000 		.space	56
 1994      00000000 
 1994      00000000 
 1994      00000000 
 1994      00000000 
 1995              		.section	.bss.p_xf,"aw",%nobits
 1996              		.align	2
 1997              		.set	.LANCHOR4,. + 0
 2000              	p_xf:
 2001 0000 00000000 		.space	56
 2001      00000000 
ARM GAS  /tmp/ccVnVZaX.s 			page 63


 2001      00000000 
 2001      00000000 
 2001      00000000 
 2002              		.section	.bss.rawsig,"aw",%nobits
 2003              		.align	2
 2004              		.set	.LANCHOR9,. + 0
 2007              	rawsig:
 2008 0000 00000000 		.space	4
 2009              		.section	.bss.sendsig,"aw",%nobits
 2010              		.align	2
 2011              		.set	.LANCHOR13,. + 0
 2014              	sendsig:
 2015 0000 00000000 		.space	4
 2016              		.section	.bss.sig,"aw",%nobits
 2017              		.align	2
 2018              		.set	.LANCHOR10,. + 0
 2021              	sig:
 2022 0000 00000000 		.space	4
 2023              		.section	.bss.time,"aw",%nobits
 2024              		.align	2
 2027              	time:
 2028 0000 00000000 		.space	4
 2029              		.section	.bss.vamt,"aw",%nobits
 2030              		.align	2
 2031              		.set	.LANCHOR7,. + 0
 2034              	vamt:
 2035 0000 00000000 		.space	4
 2036              		.section	.bss.verb,"aw",%nobits
 2037              		.align	2
 2040              	verb:
 2041 0000 00000000 		.space	396100
 2041      00000000 
 2041      00000000 
 2041      00000000 
 2041      00000000 
 2042              		.section	.bss.wetvl,"aw",%nobits
 2043              		.align	2
 2044              		.set	.LANCHOR14,. + 0
 2047              	wetvl:
 2048 0000 00000000 		.space	4
 2049              		.section	.bss.wetvr,"aw",%nobits
 2050              		.align	2
 2051              		.set	.LANCHOR15,. + 0
 2054              	wetvr:
 2055 0000 00000000 		.space	4
 2056              		.section	.bss.xf,"aw",%nobits
 2057              		.align	2
 2058              		.set	.LANCHOR5,. + 0
 2061              	xf:
 2062 0000 00000000 		.space	4
 2063              		.section	.rodata._ZL5scale,"a"
 2064              		.align	2
 2065              		.set	.LANCHOR0,. + 0
 2068              	_ZL5scale:
 2069 0000 00000000 		.word	0
 2070 0004 00000040 		.word	1073741824
 2071 0008 00008040 		.word	1082130432
ARM GAS  /tmp/ccVnVZaX.s 			page 64


 2072 000c 0000A040 		.word	1084227584
 2073 0010 0000E040 		.word	1088421888
 2074 0014 00001041 		.word	1091567616
 2075 0018 00003041 		.word	1093664768
 2076              		.text
 2077              	.Letext0:
 2078              		.file 24 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 2079              		.file 25 "../../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 2080              		.file 26 "../../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 2081              		.file 27 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 2082              		.file 28 "/usr/include/newlib/c++/9.2.1/cmath"
 2083              		.file 29 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 2084              		.file 30 "/usr/include/newlib/c++/9.2.1/cstdlib"
 2085              		.file 31 "/usr/include/newlib/c++/9.2.1/cstdint"
 2086              		.file 32 "/usr/include/newlib/c++/9.2.1/type_traits"
 2087              		.file 33 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/c++config.h"
 2088              		.file 34 "/usr/include/newlib/c++/9.2.1/bits/stl_pair.h"
 2089              		.file 35 "/usr/include/newlib/c++/9.2.1/debug/debug.h"
 2090              		.file 36 "/usr/include/newlib/c++/9.2.1/bits/algorithmfwd.h"
 2091              		.file 37 "/usr/include/newlib/c++/9.2.1/bits/exception_ptr.h"
 2092              		.file 38 "/usr/include/newlib/c++/9.2.1/new"
 2093              		.file 39 "/usr/include/newlib/c++/9.2.1/cstdarg"
 2094              		.file 40 "/usr/include/newlib/c++/9.2.1/cstdio"
 2095              		.file 41 "/usr/include/newlib/c++/9.2.1/cwchar"
 2096              		.file 42 "/usr/include/newlib/c++/9.2.1/clocale"
 2097              		.file 43 "/usr/include/newlib/c++/9.2.1/bits/basic_string.h"
 2098              		.file 44 "/usr/include/newlib/c++/9.2.1/bits/uniform_int_dist.h"
 2099              		.file 45 "/usr/include/newlib/c++/9.2.1/bits/random.h"
 2100              		.file 46 "/usr/include/newlib/c++/9.2.1/cstring"
 2101              		.file 47 "/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h"
 2102              		.file 48 "/usr/include/newlib/c++/9.2.1/ext/numeric_traits.h"
 2103              		.file 49 "/usr/include/newlib/c++/9.2.1/ext/new_allocator.h"
 2104              		.file 50 "/usr/include/newlib/sys/_types.h"
 2105              		.file 51 "<built-in>"
 2106              		.file 52 "/usr/include/newlib/sys/reent.h"
 2107              		.file 53 "/usr/include/newlib/sys/lock.h"
 2108              		.file 54 "/usr/include/newlib/math.h"
 2109              		.file 55 "/usr/include/newlib/stdlib.h"
 2110              		.file 56 "/usr/include/newlib/c++/9.2.1/math.h"
 2111              		.file 57 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 2112              		.file 58 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 2113              		.file 59 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 2114              		.file 60 "../../libdaisy/src/daisy_core.h"
 2115              		.file 61 "../../libdaisy/src/per/tim.h"
 2116              		.file 62 "../../libdaisy/src/per/sai.h"
 2117              		.file 63 "../../libdaisy/src/hid/MidiEvent.h"
 2118              		.file 64 "../../libdaisy/src/util/wav_format.h"
 2119              		.file 65 "../../libdaisy/src/util/color.h"
 2120              		.file 66 "../../libdaisy/src/per/qspi.h"
 2121              		.file 67 "../../libdaisy/src/per/gpio.h"
 2122              		.file 68 "../../libdaisy/src/dev/sdram.h"
 2123              		.file 69 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdarg.h"
 2124              		.file 70 "/usr/include/newlib/stdio.h"
 2125              		.file 71 "/usr/include/newlib/sys/unistd.h"
 2126              		.file 72 "../../libdaisy/src/util/oled_fonts.h"
 2127              		.file 73 "../../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 2128              		.file 74 "../../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
ARM GAS  /tmp/ccVnVZaX.s 			page 65


 2129              		.file 75 "../../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 2130              		.file 76 "../../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 2131              		.file 77 "../../libdaisy/src/util/sd_diskio.h"
 2132              		.file 78 "../../libdaisy/src/sys/fatfs.h"
 2133              		.file 79 "/usr/include/newlib/wchar.h"
 2134              		.file 80 "/usr/include/newlib/locale.h"
 2135              		.file 81 "/usr/include/newlib/ctype.h"
 2136              		.file 82 "/usr/include/newlib/sys/errno.h"
 2137              		.file 83 "/usr/include/newlib/string.h"
 2138              		.file 84 "../../libdaisy/src/dev/sr_595.h"
ARM GAS  /tmp/ccVnVZaX.s 			page 66


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MusicBox.cpp
     /tmp/ccVnVZaX.s:17     .text._ZN5daisy9ParameterD2Ev:0000000000000000 $t
     /tmp/ccVnVZaX.s:26     .text._ZN5daisy9ParameterD2Ev:0000000000000000 _ZN5daisy9ParameterD2Ev
     /tmp/ccVnVZaX.s:26     .text._ZN5daisy9ParameterD2Ev:0000000000000000 _ZN5daisy9ParameterD1Ev
     /tmp/ccVnVZaX.s:49     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 $t
     /tmp/ccVnVZaX.s:57     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD2Ev
     /tmp/ccVnVZaX.s:57     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD1Ev
     /tmp/ccVnVZaX.s:184    .text._ZN7daisysp5AdEnvD2Ev:0000000000000000 $t
     /tmp/ccVnVZaX.s:192    .text._ZN7daisysp5AdEnvD2Ev:0000000000000000 _ZN7daisysp5AdEnvD2Ev
     /tmp/ccVnVZaX.s:192    .text._ZN7daisysp5AdEnvD2Ev:0000000000000000 _ZN7daisysp5AdEnvD1Ev
     /tmp/ccVnVZaX.s:209    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
     /tmp/ccVnVZaX.s:217    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
     /tmp/ccVnVZaX.s:217    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
     /tmp/ccVnVZaX.s:234    .text._ZN7daisysp3SvfD2Ev:0000000000000000 $t
     /tmp/ccVnVZaX.s:242    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD2Ev
     /tmp/ccVnVZaX.s:242    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD1Ev
     /tmp/ccVnVZaX.s:259    .text._ZN7daisysp8ReverbScD2Ev:0000000000000000 $t
     /tmp/ccVnVZaX.s:267    .text._ZN7daisysp8ReverbScD2Ev:0000000000000000 _ZN7daisysp8ReverbScD2Ev
     /tmp/ccVnVZaX.s:267    .text._ZN7daisysp8ReverbScD2Ev:0000000000000000 _ZN7daisysp8ReverbScD1Ev
     /tmp/ccVnVZaX.s:284    .text._ZL5audioPKfPfj:0000000000000000 $t
     /tmp/ccVnVZaX.s:291    .text._ZL5audioPKfPfj:0000000000000000 _ZL5audioPKfPfj
     /tmp/ccVnVZaX.s:760    .text._ZL5audioPKfPfj:0000000000000180 $d
     /tmp/ccVnVZaX.s:1965   .bss.hw:0000000000000000 hw
     /tmp/ccVnVZaX.s:2040   .bss.verb:0000000000000000 verb
     /tmp/ccVnVZaX.s:1921   .data._ZZN7daisysp6myrandEvE4seed:0000000000000000 _ZZN7daisysp6myrandEvE4seed
     /tmp/ccVnVZaX.s:791    .text._Z9InitSynthf:0000000000000000 $t
     /tmp/ccVnVZaX.s:799    .text._Z9InitSynthf:0000000000000000 _Z9InitSynthf
     /tmp/ccVnVZaX.s:1276   .text._Z9InitSynthf:0000000000000168 $d
     /tmp/ccVnVZaX.s:1304   .text.startup.main:0000000000000000 $t
     /tmp/ccVnVZaX.s:1312   .text.startup.main:0000000000000000 main
     /tmp/ccVnVZaX.s:1360   .text.startup.main:0000000000000024 $d
     /tmp/ccVnVZaX.s:1366   .text.startup._GLOBAL__sub_I_hw:0000000000000000 $t
     /tmp/ccVnVZaX.s:1373   .text.startup._GLOBAL__sub_I_hw:0000000000000000 _GLOBAL__sub_I_hw
     /tmp/ccVnVZaX.s:1871   .text.startup._GLOBAL__sub_I_hw:00000000000000a8 $d
     /tmp/ccVnVZaX.s:1895   .init_array:0000000000000000 $d
     /tmp/ccVnVZaX.s:2027   .bss.time:0000000000000000 time
     /tmp/ccVnVZaX.s:1938   .bss.dec:0000000000000000 dec
     /tmp/ccVnVZaX.s:2034   .bss.vamt:0000000000000000 vamt
     /tmp/ccVnVZaX.s:2061   .bss.xf:0000000000000000 xf
     /tmp/ccVnVZaX.s:2054   .bss.wetvr:0000000000000000 wetvr
     /tmp/ccVnVZaX.s:2047   .bss.wetvl:0000000000000000 wetvl
     /tmp/ccVnVZaX.s:2014   .bss.sendsig:0000000000000000 sendsig
     /tmp/ccVnVZaX.s:1959   .bss.filtsig:0000000000000000 filtsig
     /tmp/ccVnVZaX.s:2007   .bss.rawsig:0000000000000000 rawsig
     /tmp/ccVnVZaX.s:2021   .bss.sig:0000000000000000 sig
     /tmp/ccVnVZaX.s:1993   .bss.p_vtime:0000000000000000 p_vtime
     /tmp/ccVnVZaX.s:1979   .bss.p_dec:0000000000000000 p_dec
     /tmp/ccVnVZaX.s:1986   .bss.p_vamt:0000000000000000 p_vamt
     /tmp/ccVnVZaX.s:2000   .bss.p_xf:0000000000000000 p_xf
     /tmp/ccVnVZaX.s:1945   .bss.env:0000000000000000 env
     /tmp/ccVnVZaX.s:1952   .bss.filt:0000000000000000 filt
     /tmp/ccVnVZaX.s:1972   .bss.osc:0000000000000000 osc
     /tmp/ccVnVZaX.s:1918   .data._ZZN7daisysp6myrandEvE4seed:0000000000000000 $d
     /tmp/ccVnVZaX.s:1924   .rodata:0000000000000000 $d
     /tmp/ccVnVZaX.s:1934   .bss.dec:0000000000000000 $d
     /tmp/ccVnVZaX.s:1941   .bss.env:0000000000000000 $d
ARM GAS  /tmp/ccVnVZaX.s 			page 67


     /tmp/ccVnVZaX.s:1948   .bss.filt:0000000000000000 $d
     /tmp/ccVnVZaX.s:1955   .bss.filtsig:0000000000000000 $d
     /tmp/ccVnVZaX.s:1962   .bss.hw:0000000000000000 $d
     /tmp/ccVnVZaX.s:1968   .bss.osc:0000000000000000 $d
     /tmp/ccVnVZaX.s:1975   .bss.p_dec:0000000000000000 $d
     /tmp/ccVnVZaX.s:1982   .bss.p_vamt:0000000000000000 $d
     /tmp/ccVnVZaX.s:1989   .bss.p_vtime:0000000000000000 $d
     /tmp/ccVnVZaX.s:1996   .bss.p_xf:0000000000000000 $d
     /tmp/ccVnVZaX.s:2003   .bss.rawsig:0000000000000000 $d
     /tmp/ccVnVZaX.s:2010   .bss.sendsig:0000000000000000 $d
     /tmp/ccVnVZaX.s:2017   .bss.sig:0000000000000000 $d
     /tmp/ccVnVZaX.s:2024   .bss.time:0000000000000000 $d
     /tmp/ccVnVZaX.s:2030   .bss.vamt:0000000000000000 $d
     /tmp/ccVnVZaX.s:2037   .bss.verb:0000000000000000 $d
     /tmp/ccVnVZaX.s:2043   .bss.wetvl:0000000000000000 $d
     /tmp/ccVnVZaX.s:2050   .bss.wetvr:0000000000000000 $d
     /tmp/ccVnVZaX.s:2057   .bss.xf:0000000000000000 $d
     /tmp/ccVnVZaX.s:2064   .rodata._ZL5scale:0000000000000000 $d
     /tmp/ccVnVZaX.s:2068   .rodata._ZL5scale:0000000000000000 _ZL5scale
                           .group:0000000000000000 _ZN5daisy9ParameterD5Ev
                           .group:0000000000000000 _ZN5daisy8DaisyPodD5Ev
                           .group:0000000000000000 _ZN7daisysp5AdEnvD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN7daisysp3SvfD5Ev
                           .group:0000000000000000 _ZN7daisysp8ReverbScD5Ev

UNDEFINED SYMBOLS
_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
_ZN5daisy9Parameter7ProcessEv
_ZN7daisysp10Oscillator7ProcessEv
_ZN7daisysp5AdEnv7ProcessEv
_ZN7daisysp3Svf7ProcessEf
_ZN7daisysp8ReverbSc7ProcessERKfS2_PfS3_
powf
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
_ZN7daisysp5AdEnv4InitEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp3Svf8SetDriveEf
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp8ReverbSc4InitEf
_ZN5daisy8DaisyPod4InitEb
_ZN5daisy8DaisyPod15AudioSampleRateEv
_ZN5daisy8DaisyPod8StartAdcEv
_ZN5daisy8DaisyPod10StartAudioEPFvPKfPfjE
__aeabi_atexit
__dso_handle
