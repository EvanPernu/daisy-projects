ARM GAS  /tmp/cckObu0D.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"StepSequencer.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy9ParameterD2Ev,"axG",%progbits,_ZN5daisy9ParameterD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy9ParameterD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy9ParameterD2Ev:
  27              	.LVL0:
  28              	.LFB1607:
  29              		.file 1 "../../libdaisy/src/hid/parameter.h"
   1:../../libdaisy/src/hid/parameter.h **** #pragma once
   2:../../libdaisy/src/hid/parameter.h **** #include <stdint.h>
   3:../../libdaisy/src/hid/parameter.h **** #include "hid/ctrl.h"
   4:../../libdaisy/src/hid/parameter.h **** 
   5:../../libdaisy/src/hid/parameter.h **** namespace daisy
   6:../../libdaisy/src/hid/parameter.h **** {
   7:../../libdaisy/src/hid/parameter.h **** /** @addtogroup controls
   8:../../libdaisy/src/hid/parameter.h ****     @{
   9:../../libdaisy/src/hid/parameter.h **** */
  10:../../libdaisy/src/hid/parameter.h **** 
  11:../../libdaisy/src/hid/parameter.h **** /**      Simple parameter mapping tool that takes a 0-1 input from an hid_ctrl. */
  12:../../libdaisy/src/hid/parameter.h **** class Parameter
  13:../../libdaisy/src/hid/parameter.h **** {
  14:../../libdaisy/src/hid/parameter.h ****   public:
  15:../../libdaisy/src/hid/parameter.h ****     /** Curves are applied to the output signal */
  16:../../libdaisy/src/hid/parameter.h ****     enum Curve
  17:../../libdaisy/src/hid/parameter.h ****     {
  18:../../libdaisy/src/hid/parameter.h ****         LINEAR,      /**< Linear curve */
  19:../../libdaisy/src/hid/parameter.h ****         EXPONENTIAL, /**< Exponential curve */
  20:../../libdaisy/src/hid/parameter.h ****         LOGARITHMIC, /**<  Logarithmic curve */
  21:../../libdaisy/src/hid/parameter.h ****         CUBE,        /**< Cubic curve */
  22:../../libdaisy/src/hid/parameter.h ****         LAST,        /**< Final enum element. */
  23:../../libdaisy/src/hid/parameter.h ****     };
  24:../../libdaisy/src/hid/parameter.h ****     /** Constructor */
  25:../../libdaisy/src/hid/parameter.h ****     Parameter() {}
  26:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
  27:../../libdaisy/src/hid/parameter.h ****     ~Parameter() {}
  30              		.loc 1 27 5 view -0
  31              		.cfi_startproc
ARM GAS  /tmp/cckObu0D.s 			page 2


  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB458:
  36              	.LBI458:
  37              		.file 2 "../../libdaisy/src/hid/ctrl.h"
   1:../../libdaisy/src/hid/ctrl.h **** #pragma once
   2:../../libdaisy/src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libdaisy/src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libdaisy/src/hid/ctrl.h **** #include <stdint.h>
   5:../../libdaisy/src/hid/ctrl.h **** 
   6:../../libdaisy/src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libdaisy/src/hid/ctrl.h **** namespace daisy
   8:../../libdaisy/src/hid/ctrl.h **** {
   9:../../libdaisy/src/hid/ctrl.h **** /**
  10:../../libdaisy/src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libdaisy/src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libdaisy/src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libdaisy/src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libdaisy/src/hid/ctrl.h ****     @date November 2019
  15:../../libdaisy/src/hid/ctrl.h ****     @ingroup controls
  16:../../libdaisy/src/hid/ctrl.h **** */
  17:../../libdaisy/src/hid/ctrl.h **** class AnalogControl
  18:../../libdaisy/src/hid/ctrl.h **** {
  19:../../libdaisy/src/hid/ctrl.h ****   public:
  20:../../libdaisy/src/hid/ctrl.h ****     /** Constructor */
  21:../../libdaisy/src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
  23:../../libdaisy/src/hid/ctrl.h ****     ~AnalogControl() {}
  38              		.loc 2 23 5 view .LVU1
  39              		.loc 2 23 5 is_stmt 0 view .LVU2
  40              	.LBE458:
  41              		.loc 1 27 19 view .LVU3
  42 0000 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE1607:
  46              		.weak	_ZN5daisy9ParameterD1Ev
  47              		.thumb_set _ZN5daisy9ParameterD1Ev,_ZN5daisy9ParameterD2Ev
  48 0002 00BF     		.section	.text._ZN5daisy8DaisyPodD2Ev,"axG",%progbits,_ZN5daisy8DaisyPodD5Ev,comdat
  49              		.align	1
  50              		.p2align 2,,3
  51              		.weak	_ZN5daisy8DaisyPodD2Ev
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu fpv5-d16
  57              	_ZN5daisy8DaisyPodD2Ev:
  58              	.LVL1:
  59              	.LFB2046:
  60              		.file 3 "../../libdaisy/src/daisy_pod.h"
   1:../../libdaisy/src/daisy_pod.h **** #pragma once
   2:../../libdaisy/src/daisy_pod.h **** #ifndef DSY_POD_BSP_H
   3:../../libdaisy/src/daisy_pod.h **** #define DSY_POD_BSP_H
   4:../../libdaisy/src/daisy_pod.h **** 
   5:../../libdaisy/src/daisy_pod.h **** #include "daisy_seed.h"
   6:../../libdaisy/src/daisy_pod.h **** 
   7:../../libdaisy/src/daisy_pod.h **** namespace daisy
ARM GAS  /tmp/cckObu0D.s 			page 3


   8:../../libdaisy/src/daisy_pod.h **** {
   9:../../libdaisy/src/daisy_pod.h **** /**
  10:../../libdaisy/src/daisy_pod.h ****     @brief Class that handles initializing all of the hardware specific to the Daisy Patch Board. \
  11:../../libdaisy/src/daisy_pod.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
  12:../../libdaisy/src/daisy_pod.h ****     @author Stephen Hensley
  13:../../libdaisy/src/daisy_pod.h ****     @date November 2019
  14:../../libdaisy/src/daisy_pod.h ****     @ingroup boards
  15:../../libdaisy/src/daisy_pod.h **** */
  16:../../libdaisy/src/daisy_pod.h **** class DaisyPod
  17:../../libdaisy/src/daisy_pod.h **** {
  18:../../libdaisy/src/daisy_pod.h ****   public:
  19:../../libdaisy/src/daisy_pod.h ****     /** Switches */
  20:../../libdaisy/src/daisy_pod.h ****     enum Sw
  21:../../libdaisy/src/daisy_pod.h ****     {
  22:../../libdaisy/src/daisy_pod.h ****         BUTTON_1,    /** & */
  23:../../libdaisy/src/daisy_pod.h ****         BUTTON_2,    /** & */
  24:../../libdaisy/src/daisy_pod.h ****         BUTTON_LAST, /** &  */
  25:../../libdaisy/src/daisy_pod.h ****     };
  26:../../libdaisy/src/daisy_pod.h **** 
  27:../../libdaisy/src/daisy_pod.h ****     /** Knobs */
  28:../../libdaisy/src/daisy_pod.h ****     enum Knob
  29:../../libdaisy/src/daisy_pod.h ****     {
  30:../../libdaisy/src/daisy_pod.h ****         KNOB_1,    /** &  */
  31:../../libdaisy/src/daisy_pod.h ****         KNOB_2,    /** & */
  32:../../libdaisy/src/daisy_pod.h ****         KNOB_LAST, /** & */
  33:../../libdaisy/src/daisy_pod.h ****     };
  34:../../libdaisy/src/daisy_pod.h **** 
  35:../../libdaisy/src/daisy_pod.h ****     DaisyPod() {}
  36:../../libdaisy/src/daisy_pod.h ****     ~DaisyPod() {}
  61              		.loc 3 36 5 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.LBB459:
  67              	.LBI459:
  68              		.file 4 "../../libdaisy/src/hid/midi.h"
   1:../../libdaisy/src/hid/midi.h **** #pragma once
   2:../../libdaisy/src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../../libdaisy/src/hid/midi.h **** #define DSY_MIDI_H
   4:../../libdaisy/src/hid/midi.h **** 
   5:../../libdaisy/src/hid/midi.h **** // TODO: make this adjustable
   6:../../libdaisy/src/hid/midi.h **** #define SYSEX_BUFFER_LEN 128
   7:../../libdaisy/src/hid/midi.h **** 
   8:../../libdaisy/src/hid/midi.h **** #include <stdint.h>
   9:../../libdaisy/src/hid/midi.h **** #include <stdlib.h>
  10:../../libdaisy/src/hid/midi.h **** #include "per/uart.h"
  11:../../libdaisy/src/hid/midi.h **** #include "util/ringbuffer.h"
  12:../../libdaisy/src/hid/midi.h **** #include "hid/MidiEvent.h"
  13:../../libdaisy/src/hid/midi.h **** #include "sys/system.h"
  14:../../libdaisy/src/hid/midi.h **** 
  15:../../libdaisy/src/hid/midi.h **** namespace daisy
  16:../../libdaisy/src/hid/midi.h **** {
  17:../../libdaisy/src/hid/midi.h **** /** @addtogroup external 
  18:../../libdaisy/src/hid/midi.h ****     @{ 
  19:../../libdaisy/src/hid/midi.h **** */
  20:../../libdaisy/src/hid/midi.h **** 
ARM GAS  /tmp/cckObu0D.s 			page 4


  21:../../libdaisy/src/hid/midi.h **** class MidiUartTransport
  22:../../libdaisy/src/hid/midi.h **** {
  23:../../libdaisy/src/hid/midi.h ****   public:
  24:../../libdaisy/src/hid/midi.h ****     MidiUartTransport() {}
  25:../../libdaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
  26:../../libdaisy/src/hid/midi.h **** 
  27:../../libdaisy/src/hid/midi.h ****     struct Config
  28:../../libdaisy/src/hid/midi.h ****     {
  29:../../libdaisy/src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  30:../../libdaisy/src/hid/midi.h ****         dsy_gpio_pin                    rx;
  31:../../libdaisy/src/hid/midi.h ****         dsy_gpio_pin                    tx;
  32:../../libdaisy/src/hid/midi.h **** 
  33:../../libdaisy/src/hid/midi.h ****         Config()
  34:../../libdaisy/src/hid/midi.h ****         {
  35:../../libdaisy/src/hid/midi.h ****             periph = UartHandler::Config::Peripheral::USART_1;
  36:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
  37:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
  38:../../libdaisy/src/hid/midi.h ****         }
  39:../../libdaisy/src/hid/midi.h ****     };
  40:../../libdaisy/src/hid/midi.h **** 
  41:../../libdaisy/src/hid/midi.h ****     inline void Init(Config config)
  42:../../libdaisy/src/hid/midi.h ****     {
  43:../../libdaisy/src/hid/midi.h ****         UartHandler::Config uart_config;
  44:../../libdaisy/src/hid/midi.h **** 
  45:../../libdaisy/src/hid/midi.h ****         //defaults
  46:../../libdaisy/src/hid/midi.h ****         uart_config.baudrate   = 31250;
  47:../../libdaisy/src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  48:../../libdaisy/src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  49:../../libdaisy/src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  50:../../libdaisy/src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  51:../../libdaisy/src/hid/midi.h **** 
  52:../../libdaisy/src/hid/midi.h ****         //user settings
  53:../../libdaisy/src/hid/midi.h ****         uart_config.periph        = config.periph;
  54:../../libdaisy/src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  55:../../libdaisy/src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  56:../../libdaisy/src/hid/midi.h **** 
  57:../../libdaisy/src/hid/midi.h ****         uart_.Init(uart_config);
  58:../../libdaisy/src/hid/midi.h ****     }
  59:../../libdaisy/src/hid/midi.h **** 
  60:../../libdaisy/src/hid/midi.h ****     inline void    StartRx() { uart_.StartRx(); }
  61:../../libdaisy/src/hid/midi.h ****     inline size_t  Readable() { return uart_.Readable(); }
  62:../../libdaisy/src/hid/midi.h ****     inline uint8_t Rx() { return uart_.PopRx(); }
  63:../../libdaisy/src/hid/midi.h ****     inline bool    RxActive() { return uart_.RxActive(); }
  64:../../libdaisy/src/hid/midi.h ****     inline void    FlushRx() { uart_.FlushRx(); }
  65:../../libdaisy/src/hid/midi.h ****     inline void    Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
  66:../../libdaisy/src/hid/midi.h **** 
  67:../../libdaisy/src/hid/midi.h ****   private:
  68:../../libdaisy/src/hid/midi.h ****     UartHandler uart_;
  69:../../libdaisy/src/hid/midi.h **** };
  70:../../libdaisy/src/hid/midi.h **** 
  71:../../libdaisy/src/hid/midi.h **** /** 
  72:../../libdaisy/src/hid/midi.h ****     @brief Simple MIDI Handler \n 
  73:../../libdaisy/src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n 
  74:../../libdaisy/src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
  75:../../libdaisy/src/hid/midi.h ****     @author shensley
  76:../../libdaisy/src/hid/midi.h ****     @date March 2020
  77:../../libdaisy/src/hid/midi.h **** */
ARM GAS  /tmp/cckObu0D.s 			page 5


  78:../../libdaisy/src/hid/midi.h **** template <typename Transport>
  79:../../libdaisy/src/hid/midi.h **** class MidiHandler
  80:../../libdaisy/src/hid/midi.h **** {
  81:../../libdaisy/src/hid/midi.h ****   public:
  82:../../libdaisy/src/hid/midi.h ****     MidiHandler() {}
  83:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
  69              		.loc 4 83 5 view .LVU5
  70              	.LBB460:
  71              	.LBI460:
  25:../../libdaisy/src/hid/midi.h **** 
  72              		.loc 4 25 5 view .LVU6
  25:../../libdaisy/src/hid/midi.h **** 
  73              		.loc 4 25 5 is_stmt 0 view .LVU7
  74              	.LBE460:
  75              	.LBE459:
  76              	.LBB461:
  77              	.LBI461:
  78              		.file 5 "../../libdaisy/src/hid/rgb_led.h"
   1:../../libdaisy/src/hid/rgb_led.h **** #pragma once
   2:../../libdaisy/src/hid/rgb_led.h **** #ifndef DSY_RGB_LED_H
   3:../../libdaisy/src/hid/rgb_led.h **** #define DSY_RGB_LED_H
   4:../../libdaisy/src/hid/rgb_led.h **** #include "hid/led.h"
   5:../../libdaisy/src/hid/rgb_led.h **** #include "util/color.h"
   6:../../libdaisy/src/hid/rgb_led.h **** 
   7:../../libdaisy/src/hid/rgb_led.h **** namespace daisy
   8:../../libdaisy/src/hid/rgb_led.h **** {
   9:../../libdaisy/src/hid/rgb_led.h **** /** @addtogroup feedback
  10:../../libdaisy/src/hid/rgb_led.h ****     @{
  11:../../libdaisy/src/hid/rgb_led.h **** */
  12:../../libdaisy/src/hid/rgb_led.h **** 
  13:../../libdaisy/src/hid/rgb_led.h **** /** 3x LEDs configured as an RGB for ease of use. */
  14:../../libdaisy/src/hid/rgb_led.h **** class RgbLed
  15:../../libdaisy/src/hid/rgb_led.h **** {
  16:../../libdaisy/src/hid/rgb_led.h ****   public:
  17:../../libdaisy/src/hid/rgb_led.h ****     RgbLed() {}
  18:../../libdaisy/src/hid/rgb_led.h ****     ~RgbLed() {}
  79              		.loc 5 18 5 is_stmt 1 view .LVU8
  80              	.LBB462:
  81              	.LBI462:
  82              		.file 6 "../../libdaisy/src/hid/led.h"
   1:../../libdaisy/src/hid/led.h **** 
   2:../../libdaisy/src/hid/led.h **** #pragma once
   3:../../libdaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../../libdaisy/src/hid/led.h **** #define DSY_LED_H
   5:../../libdaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../../libdaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../../libdaisy/src/hid/led.h **** 
   8:../../libdaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../../libdaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../../libdaisy/src/hid/led.h **** */
  11:../../libdaisy/src/hid/led.h **** 
  12:../../libdaisy/src/hid/led.h **** namespace daisy
  13:../../libdaisy/src/hid/led.h **** {
  14:../../libdaisy/src/hid/led.h **** /**
  15:../../libdaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../../libdaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../../libdaisy/src/hid/led.h ****     @author shensley
ARM GAS  /tmp/cckObu0D.s 			page 6


  18:../../libdaisy/src/hid/led.h ****     @date March 2020
  19:../../libdaisy/src/hid/led.h ****     @ingroup feedback
  20:../../libdaisy/src/hid/led.h **** */
  21:../../libdaisy/src/hid/led.h **** class Led
  22:../../libdaisy/src/hid/led.h **** {
  23:../../libdaisy/src/hid/led.h ****   public:
  24:../../libdaisy/src/hid/led.h ****     Led() {}
  25:../../libdaisy/src/hid/led.h ****     ~Led() {}
  83              		.loc 6 25 5 view .LVU9
  84              		.loc 6 25 5 is_stmt 0 view .LVU10
  85              	.LBE462:
  86              	.LBB463:
  87              	.LBI463:
  88              		.loc 6 25 5 is_stmt 1 view .LVU11
  89              		.loc 6 25 5 is_stmt 0 view .LVU12
  90              	.LBE463:
  91              	.LBB464:
  92              	.LBI464:
  93              		.loc 6 25 5 is_stmt 1 view .LVU13
  94              		.loc 6 25 5 is_stmt 0 view .LVU14
  95              	.LBE464:
  96              	.LBE461:
  97              	.LBB465:
  98              	.LBI465:
  99              		.loc 5 18 5 is_stmt 1 view .LVU15
 100              	.LBB466:
 101              	.LBI466:
 102              		.loc 6 25 5 view .LVU16
 103              		.loc 6 25 5 is_stmt 0 view .LVU17
 104              	.LBE466:
 105              	.LBB467:
 106              	.LBI467:
 107              		.loc 6 25 5 is_stmt 1 view .LVU18
 108              		.loc 6 25 5 is_stmt 0 view .LVU19
 109              	.LBE467:
 110              	.LBB468:
 111              	.LBI468:
 112              		.loc 6 25 5 is_stmt 1 view .LVU20
 113              		.loc 6 25 5 is_stmt 0 view .LVU21
 114              	.LBE468:
 115              	.LBE465:
 116              	.LBB469:
 117              	.LBI469:
 118              		.file 7 "../../libdaisy/src/hid/switch.h"
   1:../../libdaisy/src/hid/switch.h **** #pragma once
   2:../../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../../libdaisy/src/hid/switch.h **** 
   7:../../libdaisy/src/hid/switch.h **** namespace daisy
   8:../../libdaisy/src/hid/switch.h **** {
   9:../../libdaisy/src/hid/switch.h **** /** 
  10:../../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../../libdaisy/src/hid/switch.h ****     @date December 2019
ARM GAS  /tmp/cckObu0D.s 			page 7


  14:../../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../../libdaisy/src/hid/switch.h **** */
  16:../../libdaisy/src/hid/switch.h **** class Switch
  17:../../libdaisy/src/hid/switch.h **** {
  18:../../libdaisy/src/hid/switch.h ****   public:
  19:../../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../../libdaisy/src/hid/switch.h ****     enum Type
  21:../../libdaisy/src/hid/switch.h ****     {
  22:../../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../../libdaisy/src/hid/switch.h ****     };
  25:../../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../../libdaisy/src/hid/switch.h ****     {
  28:../../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  30:../../libdaisy/src/hid/switch.h ****     };
  31:../../libdaisy/src/hid/switch.h **** 
  32:../../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../../libdaisy/src/hid/switch.h ****     enum Pull
  34:../../libdaisy/src/hid/switch.h ****     {
  35:../../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../../libdaisy/src/hid/switch.h ****     };
  39:../../libdaisy/src/hid/switch.h **** 
  40:../../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 119              		.loc 7 41 5 is_stmt 1 view .LVU22
 120              		.loc 7 41 5 is_stmt 0 view .LVU23
 121              	.LBE469:
 122              	.LBB470:
 123              	.LBI470:
 124              		.loc 7 41 5 is_stmt 1 view .LVU24
 125              		.loc 7 41 5 is_stmt 0 view .LVU25
 126              	.LBE470:
 127              	.LBB471:
 128              	.LBI471:
 129              		.loc 2 23 5 is_stmt 1 view .LVU26
 130              		.loc 2 23 5 is_stmt 0 view .LVU27
 131              	.LBE471:
 132              	.LBB472:
 133              	.LBI472:
 134              		.loc 2 23 5 is_stmt 1 view .LVU28
 135              		.loc 2 23 5 is_stmt 0 view .LVU29
 136              	.LBE472:
 137              	.LBB473:
 138              	.LBI473:
 139              		.file 8 "../../libdaisy/src/hid/encoder.h"
   1:../../libdaisy/src/hid/encoder.h **** #pragma once
   2:../../libdaisy/src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../../libdaisy/src/hid/encoder.h **** #define DSY_ENCODER_H
   4:../../libdaisy/src/hid/encoder.h **** #include "daisy_core.h"
   5:../../libdaisy/src/hid/encoder.h **** #include "per/gpio.h"
   6:../../libdaisy/src/hid/encoder.h **** #include "hid/switch.h"
   7:../../libdaisy/src/hid/encoder.h **** 
   8:../../libdaisy/src/hid/encoder.h **** namespace daisy
ARM GAS  /tmp/cckObu0D.s 			page 8


   9:../../libdaisy/src/hid/encoder.h **** {
  10:../../libdaisy/src/hid/encoder.h **** /** 
  11:../../libdaisy/src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../../libdaisy/src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../../libdaisy/src/hid/encoder.h ****     @author Stephen Hensley
  14:../../libdaisy/src/hid/encoder.h ****     @date December 2019
  15:../../libdaisy/src/hid/encoder.h ****     @ingroup controls
  16:../../libdaisy/src/hid/encoder.h **** */
  17:../../libdaisy/src/hid/encoder.h **** class Encoder
  18:../../libdaisy/src/hid/encoder.h **** {
  19:../../libdaisy/src/hid/encoder.h ****   public:
  20:../../libdaisy/src/hid/encoder.h ****     Encoder() {}
  21:../../libdaisy/src/hid/encoder.h ****     ~Encoder() {}
 140              		.loc 8 21 5 is_stmt 1 view .LVU30
 141              	.LBB474:
 142              	.LBI474:
 143              		.loc 7 41 5 view .LVU31
 144              		.loc 7 41 5 is_stmt 0 view .LVU32
 145              	.LBE474:
 146              	.LBE473:
 147              	.LBB475:
 148              	.LBI475:
 149              		.file 9 "../../libdaisy/src/daisy_seed.h"
   1:../../libdaisy/src/daisy_seed.h **** #pragma once
   2:../../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libdaisy/src/daisy_seed.h **** 
   5:../../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../../libdaisy/src/daisy_seed.h **** 
   7:../../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../../libdaisy/src/daisy_seed.h **** 
  10:../../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../../libdaisy/src/daisy_seed.h **** {
  12:../../libdaisy/src/daisy_seed.h **** /**
  13:../../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libdaisy/src/daisy_seed.h **** 
  16:../../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../../libdaisy/src/daisy_seed.h **** */
  18:../../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../../libdaisy/src/daisy_seed.h **** {
  20:../../libdaisy/src/daisy_seed.h ****   public:
  21:../../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 150              		.loc 9 22 5 is_stmt 1 view .LVU33
 151              	.LBB476:
 152              	.LBI476:
 153              		.file 10 "../../libdaisy/src/sys/system.h"
   1:../../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libdaisy/src/sys/system.h **** 
   4:../../libdaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libdaisy/src/sys/system.h **** 
   6:../../libdaisy/src/sys/system.h **** #include <cstdint>
   7:../../libdaisy/src/sys/system.h **** #include "per/tim.h"
   8:../../libdaisy/src/sys/system.h **** 
ARM GAS  /tmp/cckObu0D.s 			page 9


   9:../../libdaisy/src/sys/system.h **** namespace daisy
  10:../../libdaisy/src/sys/system.h **** {
  11:../../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libdaisy/src/sys/system.h ****  **
  15:../../libdaisy/src/sys/system.h ****  ** @author shensley
  16:../../libdaisy/src/sys/system.h ****  ** @addtogroup system
  17:../../libdaisy/src/sys/system.h ****  */
  18:../../libdaisy/src/sys/system.h **** class System
  19:../../libdaisy/src/sys/system.h **** {
  20:../../libdaisy/src/sys/system.h ****   public:
  21:../../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libdaisy/src/sys/system.h ****     struct Config
  23:../../libdaisy/src/sys/system.h ****     {
  24:../../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../../libdaisy/src/sys/system.h ****         {
  27:../../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../../libdaisy/src/sys/system.h ****         };
  30:../../libdaisy/src/sys/system.h **** 
  31:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  34:../../libdaisy/src/sys/system.h ****          ** */
  35:../../libdaisy/src/sys/system.h ****         void Defaults()
  36:../../libdaisy/src/sys/system.h ****         {
  37:../../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  38:../../libdaisy/src/sys/system.h ****             use_dcache = true;
  39:../../libdaisy/src/sys/system.h ****             use_icache = true;
  40:../../libdaisy/src/sys/system.h ****         }
  41:../../libdaisy/src/sys/system.h **** 
  42:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  43:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  44:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  45:../../libdaisy/src/sys/system.h ****          ** */
  46:../../libdaisy/src/sys/system.h ****         void Boost()
  47:../../libdaisy/src/sys/system.h ****         {
  48:../../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  49:../../libdaisy/src/sys/system.h ****             use_dcache = true;
  50:../../libdaisy/src/sys/system.h ****             use_icache = true;
  51:../../libdaisy/src/sys/system.h ****         }
  52:../../libdaisy/src/sys/system.h **** 
  53:../../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  54:../../libdaisy/src/sys/system.h ****         bool       use_dcache;
  55:../../libdaisy/src/sys/system.h ****         bool       use_icache;
  56:../../libdaisy/src/sys/system.h ****     };
  57:../../libdaisy/src/sys/system.h **** 
  58:../../libdaisy/src/sys/system.h ****     System() {}
  59:../../libdaisy/src/sys/system.h ****     ~System() {}
 154              		.loc 10 59 5 view .LVU34
 155              		.loc 10 59 5 is_stmt 0 view .LVU35
 156              	.LBE476:
 157              	.LBB477:
 158              	.LBI477:
 159              		.file 11 "../../libdaisy/src/hid/usb.h"
ARM GAS  /tmp/cckObu0D.s 			page 10


   1:../../libdaisy/src/hid/usb.h **** #pragma once
   2:../../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../../libdaisy/src/hid/usb.h **** 
   7:../../libdaisy/src/hid/usb.h **** namespace daisy
   8:../../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../../libdaisy/src/hid/usb.h ****     @{
  10:../../libdaisy/src/hid/usb.h **** */
  11:../../libdaisy/src/hid/usb.h **** 
  12:../../libdaisy/src/hid/usb.h **** {
  13:../../libdaisy/src/hid/usb.h **** /** 
  14:../../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../../libdaisy/src/hid/usb.h **** */
  18:../../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../../libdaisy/src/hid/usb.h **** {
  20:../../libdaisy/src/hid/usb.h ****   public:
  21:../../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libdaisy/src/hid/usb.h ****     enum class Result
  23:../../libdaisy/src/hid/usb.h ****     {
  24:../../libdaisy/src/hid/usb.h ****         OK,
  25:../../libdaisy/src/hid/usb.h ****         ERR,
  26:../../libdaisy/src/hid/usb.h ****     };
  27:../../libdaisy/src/hid/usb.h **** 
  28:../../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../../libdaisy/src/hid/usb.h ****     {
  31:../../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libdaisy/src/hid/usb.h ****     };
  35:../../libdaisy/src/hid/usb.h **** 
  36:../../libdaisy/src/hid/usb.h **** 
  37:../../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libdaisy/src/hid/usb.h **** 
  40:../../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../../libdaisy/src/hid/usb.h **** 
  42:../../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
 160              		.loc 11 42 5 is_stmt 1 view .LVU36
 161              		.loc 11 42 5 is_stmt 0 view .LVU37
 162              	.LBE477:
 163              	.LBB478:
 164              	.LBI478:
 165              		.file 12 "../../libdaisy/src/per/adc.h"
   1:../../libdaisy/src/per/adc.h **** #pragma once
   2:../../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../../libdaisy/src/per/adc.h **** 
   9:../../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
ARM GAS  /tmp/cckObu0D.s 			page 11


  10:../../libdaisy/src/per/adc.h **** 
  11:../../libdaisy/src/per/adc.h **** namespace daisy
  12:../../libdaisy/src/per/adc.h **** {
  13:../../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../../libdaisy/src/per/adc.h ****     @{
  15:../../libdaisy/src/per/adc.h **** */
  16:../../libdaisy/src/per/adc.h **** 
  17:../../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../../libdaisy/src/per/adc.h **** */
  21:../../libdaisy/src/per/adc.h **** 
  22:../../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../../libdaisy/src/per/adc.h **** {
  25:../../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../../libdaisy/src/per/adc.h ****     {
  28:../../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../../libdaisy/src/per/adc.h ****     };
  33:../../libdaisy/src/per/adc.h **** 
  34:../../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../../libdaisy/src/per/adc.h ****      */
  37:../../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../../libdaisy/src/per/adc.h **** 
  39:../../libdaisy/src/per/adc.h ****     /** 
  40:../../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../../libdaisy/src/per/adc.h ****     */
  51:../../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
  53:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../../libdaisy/src/per/adc.h **** 
  57:../../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../../libdaisy/src/per/adc.h **** };
  61:../../libdaisy/src/per/adc.h **** 
  62:../../libdaisy/src/per/adc.h **** /**
  63:../../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../../libdaisy/src/per/adc.h **** */
  65:../../libdaisy/src/per/adc.h **** class AdcHandle
  66:../../libdaisy/src/per/adc.h **** {
ARM GAS  /tmp/cckObu0D.s 			page 12


  67:../../libdaisy/src/per/adc.h ****   public:
  68:../../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../../libdaisy/src/per/adc.h ****     {
  71:../../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../../libdaisy/src/per/adc.h ****     };
  83:../../libdaisy/src/per/adc.h **** 
  84:../../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 166              		.loc 12 85 5 is_stmt 1 view .LVU38
 167              		.loc 12 85 5 is_stmt 0 view .LVU39
 168              	.LBE478:
 169              	.LBB479:
 170              	.LBI479:
 171              		.file 13 "../../libdaisy/src/hid/audio.h"
   1:../../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libdaisy/src/hid/audio.h **** 
   4:../../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../../libdaisy/src/hid/audio.h **** 
   6:../../libdaisy/src/hid/audio.h **** namespace daisy
   7:../../libdaisy/src/hid/audio.h **** {
   8:../../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../../libdaisy/src/hid/audio.h **** {
  10:../../libdaisy/src/hid/audio.h ****   public:
  11:../../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../../libdaisy/src/hid/audio.h ****     struct Config
  14:../../libdaisy/src/hid/audio.h ****     {
  15:../../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../../libdaisy/src/hid/audio.h ****     };
  19:../../libdaisy/src/hid/audio.h **** 
  20:../../libdaisy/src/hid/audio.h ****     enum class Result
  21:../../libdaisy/src/hid/audio.h ****     {
  22:../../libdaisy/src/hid/audio.h ****         OK,
  23:../../libdaisy/src/hid/audio.h ****         ERR,
  24:../../libdaisy/src/hid/audio.h ****     };
  25:../../libdaisy/src/hid/audio.h **** 
  26:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  27:../../libdaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  28:../../libdaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  29:../../libdaisy/src/hid/audio.h ****     */
  30:../../libdaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  31:../../libdaisy/src/hid/audio.h **** 
  32:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
ARM GAS  /tmp/cckObu0D.s 			page 13


  33:../../libdaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  34:../../libdaisy/src/hid/audio.h ****     */
  35:../../libdaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  36:../../libdaisy/src/hid/audio.h **** 
  37:../../libdaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  38:../../libdaisy/src/hid/audio.h ****    * Non-Interleaving audio callbacks in daisy will be of this type
  39:../../libdaisy/src/hid/audio.h ****   */
  40:../../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  41:../../libdaisy/src/hid/audio.h ****                                   OutputBuffer out,
  42:../../libdaisy/src/hid/audio.h ****                                   size_t       size);
  43:../../libdaisy/src/hid/audio.h **** 
  44:../../libdaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  45:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  46:../../libdaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  47:../../libdaisy/src/hid/audio.h ****     */
  48:../../libdaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  49:../../libdaisy/src/hid/audio.h **** 
  50:../../libdaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  51:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  52:../../libdaisy/src/hid/audio.h ****     */
  53:../../libdaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  54:../../libdaisy/src/hid/audio.h **** 
  55:../../libdaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  56:../../libdaisy/src/hid/audio.h ****    * Interleaving audio callbacks in daisy must be of this type
  57:../../libdaisy/src/hid/audio.h ****   */
  58:../../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  59:../../libdaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  60:../../libdaisy/src/hid/audio.h ****                                               size_t                   size);
  61:../../libdaisy/src/hid/audio.h **** 
  62:../../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  63:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 172              		.loc 13 63 5 is_stmt 1 view .LVU40
 173              		.loc 13 63 5 is_stmt 0 view .LVU41
 174              	.LBE479:
 175              	.LBE475:
 176              		.loc 3 36 18 view .LVU42
 177 0000 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE2046:
 181              		.weak	_ZN5daisy8DaisyPodD1Ev
 182              		.thumb_set _ZN5daisy8DaisyPodD1Ev,_ZN5daisy8DaisyPodD2Ev
 183 0002 00BF     		.section	.text._ZN7daisysp5AdEnvD2Ev,"axG",%progbits,_ZN7daisysp5AdEnvD5Ev,comdat
 184              		.align	1
 185              		.p2align 2,,3
 186              		.weak	_ZN7daisysp5AdEnvD2Ev
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 190              		.fpu fpv5-d16
 192              	_ZN7daisysp5AdEnvD2Ev:
 193              	.LVL2:
 194              	.LFB2053:
 195              		.file 14 "../../DaisySP/Source/Control/adenv.h"
   1:../../DaisySP/Source/Control/adenv.h **** #pragma once
   2:../../DaisySP/Source/Control/adenv.h **** #ifndef ADENV_H
   3:../../DaisySP/Source/Control/adenv.h **** #define ADENV_H
   4:../../DaisySP/Source/Control/adenv.h **** #include <stdint.h>
ARM GAS  /tmp/cckObu0D.s 			page 14


   5:../../DaisySP/Source/Control/adenv.h **** #ifdef __cplusplus
   6:../../DaisySP/Source/Control/adenv.h **** 
   7:../../DaisySP/Source/Control/adenv.h **** namespace daisysp
   8:../../DaisySP/Source/Control/adenv.h **** {
   9:../../DaisySP/Source/Control/adenv.h **** /** Distinct stages that the phase of the envelope can be located in.
  10:../../DaisySP/Source/Control/adenv.h ****     @see AdEnv
  11:../../DaisySP/Source/Control/adenv.h **** */
  12:../../DaisySP/Source/Control/adenv.h **** enum AdEnvSegment
  13:../../DaisySP/Source/Control/adenv.h **** {
  14:../../DaisySP/Source/Control/adenv.h ****     /** located at phase location 0, and not currently running */
  15:../../DaisySP/Source/Control/adenv.h ****     ADENV_SEG_IDLE,
  16:../../DaisySP/Source/Control/adenv.h ****     /** First segment of envelope where phase moves from MIN value to MAX value */
  17:../../DaisySP/Source/Control/adenv.h ****     ADENV_SEG_ATTACK,
  18:../../DaisySP/Source/Control/adenv.h ****     /** Second segment of envelope where phase moves from MAX to MIN value */
  19:../../DaisySP/Source/Control/adenv.h ****     ADENV_SEG_DECAY,
  20:../../DaisySP/Source/Control/adenv.h ****     /** The final segment of the envelope (currently decay) */
  21:../../DaisySP/Source/Control/adenv.h ****     ADENV_SEG_LAST,
  22:../../DaisySP/Source/Control/adenv.h **** };
  23:../../DaisySP/Source/Control/adenv.h **** 
  24:../../DaisySP/Source/Control/adenv.h **** /** Trigger-able envelope with adjustable min/max, and independent per-segment time control.
  25:../../DaisySP/Source/Control/adenv.h **** 
  26:../../DaisySP/Source/Control/adenv.h ****     \author shensley
  27:../../DaisySP/Source/Control/adenv.h ****     \todo - Add Cycling
  28:../../DaisySP/Source/Control/adenv.h ****     \todo - Implement Curve (its only linear for now).
  29:../../DaisySP/Source/Control/adenv.h ****     \todo - Maybe make this an ADsr_ that has AD/AR/Asr_ modes.
  30:../../DaisySP/Source/Control/adenv.h ****  */
  31:../../DaisySP/Source/Control/adenv.h **** class AdEnv
  32:../../DaisySP/Source/Control/adenv.h **** {
  33:../../DaisySP/Source/Control/adenv.h ****   public:
  34:../../DaisySP/Source/Control/adenv.h ****     AdEnv() {}
  35:../../DaisySP/Source/Control/adenv.h ****     ~AdEnv() {}
 196              		.loc 14 35 5 is_stmt 1 view -0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              		.loc 14 35 15 is_stmt 0 view .LVU44
 202 0000 7047     		bx	lr
 203              		.cfi_endproc
 204              	.LFE2053:
 206              		.weak	_ZN7daisysp5AdEnvD1Ev
 207              		.thumb_set _ZN7daisysp5AdEnvD1Ev,_ZN7daisysp5AdEnvD2Ev
 208 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 209              		.align	1
 210              		.p2align 2,,3
 211              		.weak	_ZN7daisysp10OscillatorD2Ev
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 215              		.fpu fpv5-d16
 217              	_ZN7daisysp10OscillatorD2Ev:
 218              	.LVL3:
 219              	.LFB3681:
 220              		.file 15 "../../DaisySP/Source/Synthesis/oscillator.h"
   1:../../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
ARM GAS  /tmp/cckObu0D.s 			page 15


   4:../../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../../DaisySP/Source/Synthesis/oscillator.h **** {
  10:../../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../../DaisySP/Source/Synthesis/oscillator.h **** */
  12:../../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
  13:../../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 221              		.loc 15 16 5 is_stmt 1 view -0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226              		.loc 15 16 20 is_stmt 0 view .LVU46
 227 0000 7047     		bx	lr
 228              		.cfi_endproc
 229              	.LFE3681:
 231              		.weak	_ZN7daisysp10OscillatorD1Ev
 232              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 233 0002 00BF     		.section	.text._ZN7daisysp10MoogLadderD2Ev,"axG",%progbits,_ZN7daisysp10MoogLadderD5Ev,comdat
 234              		.align	1
 235              		.p2align 2,,3
 236              		.weak	_ZN7daisysp10MoogLadderD2Ev
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu fpv5-d16
 242              	_ZN7daisysp10MoogLadderD2Ev:
 243              	.LVL4:
 244              	.LFB3969:
 245              		.file 16 "../../DaisySP/Source/Filters/moogladder.h"
   1:../../DaisySP/Source/Filters/moogladder.h **** #pragma once
   2:../../DaisySP/Source/Filters/moogladder.h **** #ifndef DSY_MOOGLADDER_H
   3:../../DaisySP/Source/Filters/moogladder.h **** #define DSY_MOOGLADDER_H
   4:../../DaisySP/Source/Filters/moogladder.h **** 
   5:../../DaisySP/Source/Filters/moogladder.h **** #include <stdint.h>
   6:../../DaisySP/Source/Filters/moogladder.h **** #ifdef __cplusplus
   7:../../DaisySP/Source/Filters/moogladder.h **** 
   8:../../DaisySP/Source/Filters/moogladder.h **** namespace daisysp
   9:../../DaisySP/Source/Filters/moogladder.h **** {
  10:../../DaisySP/Source/Filters/moogladder.h **** /** Moog ladder filter module
  11:../../DaisySP/Source/Filters/moogladder.h **** 
  12:../../DaisySP/Source/Filters/moogladder.h **** Ported from soundpipe
  13:../../DaisySP/Source/Filters/moogladder.h **** 
  14:../../DaisySP/Source/Filters/moogladder.h **** Original author(s) : Victor Lazzarini, John ffitch (fast tanh), Bob Moog
  15:../../DaisySP/Source/Filters/moogladder.h **** 
  16:../../DaisySP/Source/Filters/moogladder.h **** */
  17:../../DaisySP/Source/Filters/moogladder.h **** class MoogLadder
  18:../../DaisySP/Source/Filters/moogladder.h **** {
  19:../../DaisySP/Source/Filters/moogladder.h ****   public:
  20:../../DaisySP/Source/Filters/moogladder.h ****     MoogLadder() {}
  21:../../DaisySP/Source/Filters/moogladder.h ****     ~MoogLadder() {}
ARM GAS  /tmp/cckObu0D.s 			page 16


 246              		.loc 16 21 5 is_stmt 1 view -0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250              		@ link register save eliminated.
 251              		.loc 16 21 20 is_stmt 0 view .LVU48
 252 0000 7047     		bx	lr
 253              		.cfi_endproc
 254              	.LFE3969:
 256              		.weak	_ZN7daisysp10MoogLadderD1Ev
 257              		.thumb_set _ZN7daisysp10MoogLadderD1Ev,_ZN7daisysp10MoogLadderD2Ev
 258 0002 00BF     		.section	.text._ZN7daisysp5MetroD2Ev,"axG",%progbits,_ZN7daisysp5MetroD5Ev,comdat
 259              		.align	1
 260              		.p2align 2,,3
 261              		.weak	_ZN7daisysp5MetroD2Ev
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv5-d16
 267              	_ZN7daisysp5MetroD2Ev:
 268              	.LVL5:
 269              	.LFB4190:
 270              		.file 17 "../../DaisySP/Source/Utility/metro.h"
   1:../../DaisySP/Source/Utility/metro.h **** #pragma once
   2:../../DaisySP/Source/Utility/metro.h **** #ifndef DSY_METRO_H
   3:../../DaisySP/Source/Utility/metro.h **** #define DSY_METRO_H
   4:../../DaisySP/Source/Utility/metro.h **** #include <stdint.h>
   5:../../DaisySP/Source/Utility/metro.h **** #ifdef __cplusplus
   6:../../DaisySP/Source/Utility/metro.h **** 
   7:../../DaisySP/Source/Utility/metro.h **** namespace daisysp
   8:../../DaisySP/Source/Utility/metro.h **** {
   9:../../DaisySP/Source/Utility/metro.h **** /** Creates a clock signal at a specific frequency.
  10:../../DaisySP/Source/Utility/metro.h **** */
  11:../../DaisySP/Source/Utility/metro.h **** class Metro
  12:../../DaisySP/Source/Utility/metro.h **** {
  13:../../DaisySP/Source/Utility/metro.h ****   public:
  14:../../DaisySP/Source/Utility/metro.h ****     Metro() {}
  15:../../DaisySP/Source/Utility/metro.h ****     ~Metro() {}
 271              		.loc 17 15 5 is_stmt 1 view -0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              		@ link register save eliminated.
 276              		.loc 17 15 15 is_stmt 0 view .LVU50
 277 0000 7047     		bx	lr
 278              		.cfi_endproc
 279              	.LFE4190:
 281              		.weak	_ZN7daisysp5MetroD1Ev
 282              		.thumb_set _ZN7daisysp5MetroD1Ev,_ZN7daisysp5MetroD2Ev
 283 0002 00BF     		.section	.text.__tcf_0,"ax",%progbits
 284              		.align	1
 285              		.p2align 2,,3
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 289              		.fpu fpv5-d16
 291              	__tcf_0:
ARM GAS  /tmp/cckObu0D.s 			page 17


 292              	.LFB4787:
 293              		.file 18 "StepSequencer.cpp"
   1:StepSequencer.cpp **** #include "daisy_pod.h"
   2:StepSequencer.cpp **** #include "daisysp.h"
   3:StepSequencer.cpp **** 
   4:StepSequencer.cpp **** using namespace daisy;
   5:StepSequencer.cpp **** using namespace daisysp;
   6:StepSequencer.cpp **** 
   7:StepSequencer.cpp **** DaisyPod pod;
   8:StepSequencer.cpp **** 
   9:StepSequencer.cpp **** Oscillator osc;
  10:StepSequencer.cpp **** AdEnv      env;
  11:StepSequencer.cpp **** Parameter  decayTimeParam, pitchParam, tickFreqParam, filterFreqParam;
  12:StepSequencer.cpp **** Metro      tick;
  13:StepSequencer.cpp **** MoogLadder flt;
  14:StepSequencer.cpp **** 
  15:StepSequencer.cpp **** bool    edit; //if we aren't editing, we're playing
  16:StepSequencer.cpp **** bool    editCycle;
  17:StepSequencer.cpp **** uint8_t step;
  18:StepSequencer.cpp **** uint8_t wave;
  19:StepSequencer.cpp **** float   dec[8];
  20:StepSequencer.cpp **** float   pitch[8];
  21:StepSequencer.cpp **** bool    active[8];
  22:StepSequencer.cpp **** float   env_out;
  23:StepSequencer.cpp **** 
  24:StepSequencer.cpp **** Color colors[8];
 294              		.loc 18 24 7 is_stmt 1 view -0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298              		@ link register save eliminated.
 299              		.loc 18 24 7 is_stmt 0 view .LVU52
 300 0000 7047     		bx	lr
 301              		.cfi_endproc
 302              	.LFE4787:
 304 0002 00BF     		.section	.text.startup.main,"ax",%progbits
 305              		.align	1
 306              		.p2align 2,,3
 307              		.global	main
 308              		.syntax unified
 309              		.thumb
 310              		.thumb_func
 311              		.fpu fpv5-d16
 313              	main:
 314              	.LFB4220:
  25:StepSequencer.cpp **** float pent[] = {110.f, 128.33f, 146.66f, 174.166f, 192.5f};
  26:StepSequencer.cpp **** 
  27:StepSequencer.cpp **** float oldk1, oldk2;
  28:StepSequencer.cpp **** float tickFrequency, filterFrequency;
  29:StepSequencer.cpp **** float k1, k2;
  30:StepSequencer.cpp **** 
  31:StepSequencer.cpp **** void Controls();
  32:StepSequencer.cpp **** 
  33:StepSequencer.cpp **** void NextSamples(float &sig);
  34:StepSequencer.cpp **** 
  35:StepSequencer.cpp **** static void AudioCallback(AudioHandle::InterleavingInputBuffer  in,
  36:StepSequencer.cpp ****                           AudioHandle::InterleavingOutputBuffer out,
ARM GAS  /tmp/cckObu0D.s 			page 18


  37:StepSequencer.cpp ****                           size_t                                size)
  38:StepSequencer.cpp **** {
  39:StepSequencer.cpp ****     float sig;
  40:StepSequencer.cpp **** 
  41:StepSequencer.cpp ****     Controls();
  42:StepSequencer.cpp **** 
  43:StepSequencer.cpp ****     // Audio Loop
  44:StepSequencer.cpp ****     sig = 0;
  45:StepSequencer.cpp ****     for(size_t i = 0; i < size; i += 2)
  46:StepSequencer.cpp ****     {
  47:StepSequencer.cpp ****         NextSamples(sig);
  48:StepSequencer.cpp **** 
  49:StepSequencer.cpp ****         out[i]     = sig;
  50:StepSequencer.cpp ****         out[i + 1] = sig;
  51:StepSequencer.cpp ****     }
  52:StepSequencer.cpp **** }
  53:StepSequencer.cpp **** 
  54:StepSequencer.cpp **** int main(void)
  55:StepSequencer.cpp **** {
 315              		.loc 18 55 1 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 32
 318              		@ frame_needed = 0, uses_anonymous_args = 0
  56:StepSequencer.cpp ****     float sample_rate;
 319              		.loc 18 56 5 view .LVU54
  57:StepSequencer.cpp ****     pod.Init();
 320              		.loc 18 57 5 view .LVU55
  55:StepSequencer.cpp ****     float sample_rate;
 321              		.loc 18 55 1 is_stmt 0 view .LVU56
 322 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 323              		.cfi_def_cfa_offset 36
 324              		.cfi_offset 4, -36
 325              		.cfi_offset 5, -32
 326              		.cfi_offset 6, -28
 327              		.cfi_offset 7, -24
 328              		.cfi_offset 8, -20
 329              		.cfi_offset 9, -16
 330              		.cfi_offset 10, -12
 331              		.cfi_offset 11, -8
 332              		.cfi_offset 14, -4
 333 0004 2DED068B 		vpush.64	{d8, d9, d10}
 334              		.cfi_def_cfa_offset 60
 335              		.cfi_offset 80, -60
 336              		.cfi_offset 81, -56
 337              		.cfi_offset 82, -52
 338              		.cfi_offset 83, -48
 339              		.cfi_offset 84, -44
 340              		.cfi_offset 85, -40
 341              	.LBB480:
 342              	.LBB481:
  17:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../../DaisySP/Source/Synthesis/oscillator.h ****     */
  19:../../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../../DaisySP/Source/Synthesis/oscillator.h ****     {
  21:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
ARM GAS  /tmp/cckObu0D.s 			page 19


  24:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../../DaisySP/Source/Synthesis/oscillator.h **** 
  37:../../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  45:../../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 343              		.loc 15 45 27 view .LVU57
 344 0008 B7EE009A 		vmov.f32	s18, #1.0e+0
 345              	.LBE481:
 346              	.LBE480:
  55:StepSequencer.cpp ****     float sample_rate;
 347              		.loc 18 55 1 view .LVU58
 348 000c 89B0     		sub	sp, sp, #36
 349              		.cfi_def_cfa_offset 96
 350              		.loc 18 57 13 view .LVU59
 351 000e 0021     		movs	r1, #0
 352 0010 7648     		ldr	r0, .L14
 353 0012 FFF7FEFF 		bl	_ZN5daisy8DaisyPod4InitEb
 354              	.LVL6:
  58:StepSequencer.cpp ****     sample_rate     = pod.AudioSampleRate();
 355              		.loc 18 58 5 is_stmt 1 view .LVU60
 356              		.loc 18 58 42 is_stmt 0 view .LVU61
 357 0016 7548     		ldr	r0, .L14
 358 0018 FFF7FEFF 		bl	_ZN5daisy8DaisyPod15AudioSampleRateEv
 359              	.LVL7:
 360              	.LBB490:
 361              	.LBB482:
 362              		.loc 15 45 27 view .LVU62
 363 001c C9EE007A 		vdiv.f32	s15, s18, s0
  44:../../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 364              		.loc 15 44 20 view .LVU63
 365 0020 734E     		ldr	r6, .L14+4
  46:../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 366              		.loc 15 47 20 view .LVU64
 367 0022 4FF07C5C 		mov	ip, #1056964608
  46:../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 368              		.loc 15 46 20 view .LVU65
 369 0026 DFED739A 		vldr.32	s19, .L14+8
  48:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
ARM GAS  /tmp/cckObu0D.s 			page 20


  50:../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 370              		.loc 15 50 20 view .LVU66
 371 002a 0027     		movs	r7, #0
 372              	.LBE482:
 373              	.LBE490:
  59:StepSequencer.cpp ****     tickFrequency   = 3.f;
  60:StepSequencer.cpp ****     filterFrequency = 20000.f;
  61:StepSequencer.cpp ****     k1 = k2 = 0.f;
 374              		.loc 18 61 13 view .LVU67
 375 002c 9FED728A 		vldr.32	s16, .L14+12
 376              	.LBB491:
 377              	.LBB483:
  49:../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 378              		.loc 15 49 34 view .LVU68
 379 0030 3046     		mov	r0, r6
 380              	.LBE483:
 381              	.LBE491:
 382              		.loc 18 61 8 view .LVU69
 383 0032 7249     		ldr	r1, .L14+16
  62:StepSequencer.cpp **** 
  63:StepSequencer.cpp ****     osc.Init(sample_rate);
  64:StepSequencer.cpp ****     env.Init(sample_rate);
  65:StepSequencer.cpp ****     tick.Init(3, sample_rate);
  66:StepSequencer.cpp ****     flt.Init(sample_rate);
  67:StepSequencer.cpp **** 
  68:StepSequencer.cpp ****     //Set up parameters
  69:StepSequencer.cpp ****     decayTimeParam.Init(pod.knob1, .03, 1, decayTimeParam.LINEAR);
 384              		.loc 18 69 29 view .LVU70
 385 0034 6C46     		mov	r4, sp
  58:StepSequencer.cpp ****     tickFrequency   = 3.f;
 386              		.loc 18 58 42 view .LVU71
 387 0036 F0EE408A 		vmov.f32	s17, s0
 388              	.LVL8:
  59:StepSequencer.cpp ****     filterFrequency = 20000.f;
 389              		.loc 18 59 5 is_stmt 1 view .LVU72
  59:StepSequencer.cpp ****     filterFrequency = 20000.f;
 390              		.loc 18 59 21 is_stmt 0 view .LVU73
 391 003a 714A     		ldr	r2, .L14+20
 392 003c F0EE08AA 		vmov.f32	s21, #3.0e+0
  60:StepSequencer.cpp ****     k1 = k2 = 0.f;
 393              		.loc 18 60 21 view .LVU74
 394 0040 704B     		ldr	r3, .L14+24
  61:StepSequencer.cpp **** 
 395              		.loc 18 61 13 view .LVU75
 396 0042 714D     		ldr	r5, .L14+28
 397              	.LBB492:
 398              	.LBB484:
  49:../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 399              		.loc 15 49 34 view .LVU76
 400 0044 B0EE690A 		vmov.f32	s0, s19
 401              	.LVL9:
  49:../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 402              		.loc 15 49 34 view .LVU77
 403              	.LBE484:
 404              	.LBE492:
  60:StepSequencer.cpp ****     k1 = k2 = 0.f;
 405              		.loc 18 60 21 view .LVU78
ARM GAS  /tmp/cckObu0D.s 			page 21


 406 0048 9FED70AA 		vldr.32	s20, .L14+32
 407              	.LBB493:
  70:StepSequencer.cpp ****     pitchParam.Init(pod.knob2, 0, 10, pitchParam.LINEAR);
  71:StepSequencer.cpp ****     tickFreqParam.Init(pod.knob1, 4, 13, tickFreqParam.LINEAR);
  72:StepSequencer.cpp ****     filterFreqParam.Init(pod.knob2, 100, 10000, filterFreqParam.LOGARITHMIC);
  73:StepSequencer.cpp **** 
  74:StepSequencer.cpp ****     //Osc parameters
  75:StepSequencer.cpp ****     osc.SetWaveform(osc.WAVE_TRI);
  76:StepSequencer.cpp **** 
  77:StepSequencer.cpp ****     //Envelope parameters
  78:StepSequencer.cpp ****     env.SetTime(ADENV_SEG_ATTACK, 0.01);
  79:StepSequencer.cpp ****     env.SetMin(0.0);
  80:StepSequencer.cpp ****     env.SetMax(1);
  81:StepSequencer.cpp **** 
  82:StepSequencer.cpp ****     //Set filter parameters
  83:StepSequencer.cpp ****     flt.SetFreq(20000);
  84:StepSequencer.cpp ****     flt.SetRes(0.7);
  85:StepSequencer.cpp **** 
  86:StepSequencer.cpp ****     //Global variables
  87:StepSequencer.cpp ****     oldk1 = oldk2 = 0;
  88:StepSequencer.cpp ****     edit          = true;
  89:StepSequencer.cpp ****     editCycle     = false;
  90:StepSequencer.cpp ****     step          = 0;
  91:StepSequencer.cpp ****     env_out       = 0;
  92:StepSequencer.cpp ****     wave          = 2;
  93:StepSequencer.cpp **** 
  94:StepSequencer.cpp ****     for(int i = 0; i < 8; i++)
 408              		.loc 18 94 13 view .LVU79
 409 004c B846     		mov	r8, r7
 410              	.LBE493:
 411              	.LBB494:
 412              	.LBB485:
  47:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 413              		.loc 15 47 20 view .LVU80
 414 004e C6F804C0 		str	ip, [r6, #4]	@ float
 415              	.LBE485:
 416              	.LBE494:
  64:StepSequencer.cpp ****     tick.Init(3, sample_rate);
 417              		.loc 18 64 13 view .LVU81
 418 0052 DFF80C92 		ldr	r9, .L14+116
  61:StepSequencer.cpp **** 
 419              		.loc 18 61 8 view .LVU82
 420 0056 81ED008A 		vstr.32	s16, [r1]
  59:StepSequencer.cpp ****     filterFrequency = 20000.f;
 421              		.loc 18 59 21 view .LVU83
 422 005a C2ED00AA 		vstr.32	s21, [r2]
  60:StepSequencer.cpp ****     k1 = k2 = 0.f;
 423              		.loc 18 60 5 is_stmt 1 view .LVU84
 424              	.LBB495:
 425              	.LBB486:
  44:../../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 426              		.loc 15 44 20 is_stmt 0 view .LVU85
 427 005e C6ED038A 		vstr.32	s17, [r6, #12]
  46:../../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 428              		.loc 15 46 20 view .LVU86
 429 0062 C6ED029A 		vstr.32	s19, [r6, #8]
  48:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
ARM GAS  /tmp/cckObu0D.s 			page 22


 430              		.loc 15 48 20 view .LVU87
 431 0066 86ED058A 		vstr.32	s16, [r6, #20]
  45:../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 432              		.loc 15 45 20 view .LVU88
 433 006a C6ED047A 		vstr.32	s15, [r6, #16]
 434              	.LBE486:
 435              	.LBE495:
  61:StepSequencer.cpp **** 
 436              		.loc 18 61 13 view .LVU89
 437 006e 85ED008A 		vstr.32	s16, [r5]
  60:StepSequencer.cpp ****     k1 = k2 = 0.f;
 438              		.loc 18 60 21 view .LVU90
 439 0072 83ED00AA 		vstr.32	s20, [r3]
  61:StepSequencer.cpp **** 
 440              		.loc 18 61 5 is_stmt 1 view .LVU91
  63:StepSequencer.cpp ****     env.Init(sample_rate);
 441              		.loc 18 63 5 view .LVU92
 442              	.LVL10:
 443              	.LBB496:
 444              	.LBI480:
  42:../../DaisySP/Source/Synthesis/oscillator.h ****     {
 445              		.loc 15 42 10 view .LVU93
 446              	.LBB487:
  44:../../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 447              		.loc 15 44 9 view .LVU94
  45:../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 448              		.loc 15 45 9 view .LVU95
  46:../../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 449              		.loc 15 46 9 view .LVU96
  47:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 450              		.loc 15 47 9 view .LVU97
  48:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 451              		.loc 15 48 9 view .LVU98
  49:../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 452              		.loc 15 49 9 view .LVU99
  49:../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 453              		.loc 15 49 34 is_stmt 0 view .LVU100
 454 0076 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 455              	.LVL11:
  51:../../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 456              		.loc 15 52 20 view .LVU101
 457 007a 40F20113 		movw	r3, #257
  49:../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 458              		.loc 15 49 34 view .LVU102
 459 007e F0EE407A 		vmov.f32	s15, s0
 460              	.LBE487:
 461              	.LBE496:
  66:StepSequencer.cpp **** 
 462              		.loc 18 66 13 view .LVU103
 463 0082 DFF8E0A1 		ldr	r10, .L14+120
  64:StepSequencer.cpp ****     tick.Init(3, sample_rate);
 464              		.loc 18 64 13 view .LVU104
 465 0086 4846     		mov	r0, r9
 466              	.LBB497:
 467              	.LBB488:
 468              		.loc 15 52 20 view .LVU105
ARM GAS  /tmp/cckObu0D.s 			page 23


 469 0088 B384     		strh	r3, [r6, #36]	@ movhi
 470              	.LBE488:
 471              	.LBE497:
  64:StepSequencer.cpp ****     tick.Init(3, sample_rate);
 472              		.loc 18 64 13 view .LVU106
 473 008a B0EE680A 		vmov.f32	s0, s17
 474              	.LBB498:
 475              	.LBB489:
  49:../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 476              		.loc 15 49 20 view .LVU107
 477 008e C6ED067A 		vstr.32	s15, [r6, #24]
  50:../../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 478              		.loc 15 50 9 is_stmt 1 view .LVU108
  50:../../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 479              		.loc 15 50 20 is_stmt 0 view .LVU109
 480 0092 3770     		strb	r7, [r6]
  51:../../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 481              		.loc 15 51 9 is_stmt 1 view .LVU110
 482              		.loc 15 52 9 view .LVU111
 483              	.LVL12:
 484              		.loc 15 52 9 is_stmt 0 view .LVU112
 485              	.LBE489:
 486              	.LBE498:
  64:StepSequencer.cpp ****     tick.Init(3, sample_rate);
 487              		.loc 18 64 5 is_stmt 1 view .LVU113
  64:StepSequencer.cpp ****     tick.Init(3, sample_rate);
 488              		.loc 18 64 13 is_stmt 0 view .LVU114
 489 0094 FFF7FEFF 		bl	_ZN7daisysp5AdEnv4InitEf
 490              	.LVL13:
  65:StepSequencer.cpp ****     flt.Init(sample_rate);
 491              		.loc 18 65 5 is_stmt 1 view .LVU115
  69:StepSequencer.cpp ****     pitchParam.Init(pod.knob2, 0, 10, pitchParam.LINEAR);
 492              		.loc 18 69 29 is_stmt 0 view .LVU116
 493 0098 DFF8CCB1 		ldr	fp, .L14+124
  65:StepSequencer.cpp ****     flt.Init(sample_rate);
 494              		.loc 18 65 14 view .LVU117
 495 009c F0EE680A 		vmov.f32	s1, s17
 496 00a0 B0EE6A0A 		vmov.f32	s0, s21
 497 00a4 5A48     		ldr	r0, .L14+36
 498 00a6 FFF7FEFF 		bl	_ZN7daisysp5Metro4InitEff
 499              	.LVL14:
  66:StepSequencer.cpp **** 
 500              		.loc 18 66 5 is_stmt 1 view .LVU118
  66:StepSequencer.cpp **** 
 501              		.loc 18 66 13 is_stmt 0 view .LVU119
 502 00aa B0EE680A 		vmov.f32	s0, s17
 503 00ae 5046     		mov	r0, r10
 504 00b0 FFF7FEFF 		bl	_ZN7daisysp10MoogLadder4InitEf
 505              	.LVL15:
  69:StepSequencer.cpp ****     pitchParam.Init(pod.knob2, 0, 10, pitchParam.LINEAR);
 506              		.loc 18 69 5 is_stmt 1 view .LVU120
  69:StepSequencer.cpp ****     pitchParam.Init(pod.knob2, 0, 10, pitchParam.LINEAR);
 507              		.loc 18 69 24 is_stmt 0 view .LVU121
 508 00b4 F0EE490A 		vmov.f32	s1, s18
 509 00b8 9FED560A 		vldr.32	s0, .L14+40
  69:StepSequencer.cpp ****     pitchParam.Init(pod.knob2, 0, 10, pitchParam.LINEAR);
 510              		.loc 18 69 29 view .LVU122
ARM GAS  /tmp/cckObu0D.s 			page 24


 511 00bc BBE80F00 		ldmia	fp!, {r0, r1, r2, r3}
 512 00c0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 513 00c2 9BE80F00 		ldm	fp, {r0, r1, r2, r3}
  70:StepSequencer.cpp ****     tickFreqParam.Init(pod.knob1, 4, 13, tickFreqParam.LINEAR);
 514              		.loc 18 70 25 view .LVU123
 515 00c6 0BF11005 		add	r5, fp, #16
  69:StepSequencer.cpp ****     pitchParam.Init(pod.knob2, 0, 10, pitchParam.LINEAR);
 516              		.loc 18 69 29 view .LVU124
 517 00ca 84E80F00 		stm	r4, {r0, r1, r2, r3}
  69:StepSequencer.cpp ****     pitchParam.Init(pod.knob2, 0, 10, pitchParam.LINEAR);
 518              		.loc 18 69 24 view .LVU125
 519 00ce 3A46     		mov	r2, r7
 520 00d0 6946     		mov	r1, sp
 521 00d2 5148     		ldr	r0, .L14+44
 522 00d4 FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 523              	.LVL16:
 524              	.LBB499:
 525              	.LBI499:
 526              		.loc 2 23 5 is_stmt 1 view .LVU126
 527              		.loc 2 23 5 is_stmt 0 view .LVU127
 528              	.LBE499:
  70:StepSequencer.cpp ****     tickFreqParam.Init(pod.knob1, 4, 13, tickFreqParam.LINEAR);
 529              		.loc 18 70 5 is_stmt 1 view .LVU128
  70:StepSequencer.cpp ****     tickFreqParam.Init(pod.knob1, 4, 13, tickFreqParam.LINEAR);
 530              		.loc 18 70 25 is_stmt 0 view .LVU129
 531 00d8 EC46     		mov	ip, sp
  70:StepSequencer.cpp ****     tickFreqParam.Init(pod.knob1, 4, 13, tickFreqParam.LINEAR);
 532              		.loc 18 70 20 view .LVU130
 533 00da B0EE480A 		vmov.f32	s0, s16
 534 00de F2EE040A 		vmov.f32	s1, #1.0e+1
  70:StepSequencer.cpp ****     tickFreqParam.Init(pod.knob1, 4, 13, tickFreqParam.LINEAR);
 535              		.loc 18 70 25 view .LVU131
 536 00e2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 537 00e4 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 538 00e8 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 539 00ec 84E80F00 		stm	r4, {r0, r1, r2, r3}
  70:StepSequencer.cpp ****     tickFreqParam.Init(pod.knob1, 4, 13, tickFreqParam.LINEAR);
 540              		.loc 18 70 20 view .LVU132
 541 00f0 3A46     		mov	r2, r7
 542 00f2 6946     		mov	r1, sp
 543 00f4 4948     		ldr	r0, .L14+48
 544 00f6 FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 545              	.LVL17:
 546              	.LBB500:
 547              	.LBI500:
 548              		.loc 2 23 5 is_stmt 1 view .LVU133
 549              		.loc 2 23 5 is_stmt 0 view .LVU134
 550              	.LBE500:
  71:StepSequencer.cpp ****     filterFreqParam.Init(pod.knob2, 100, 10000, filterFreqParam.LOGARITHMIC);
 551              		.loc 18 71 5 is_stmt 1 view .LVU135
  71:StepSequencer.cpp ****     filterFreqParam.Init(pod.knob2, 100, 10000, filterFreqParam.LOGARITHMIC);
 552              		.loc 18 71 28 is_stmt 0 view .LVU136
 553 00fa ABF1100E 		sub	lr, fp, #16
 554 00fe EC46     		mov	ip, sp
  71:StepSequencer.cpp ****     filterFreqParam.Init(pod.knob2, 100, 10000, filterFreqParam.LOGARITHMIC);
 555              		.loc 18 71 23 view .LVU137
 556 0100 F2EE0A0A 		vmov.f32	s1, #1.3e+1
ARM GAS  /tmp/cckObu0D.s 			page 25


 557 0104 B1EE000A 		vmov.f32	s0, #4.0e+0
  71:StepSequencer.cpp ****     filterFreqParam.Init(pod.knob2, 100, 10000, filterFreqParam.LOGARITHMIC);
 558              		.loc 18 71 28 view .LVU138
 559 0108 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 560 010c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 561 0110 9BE80F00 		ldm	fp, {r0, r1, r2, r3}
 562 0114 84E80F00 		stm	r4, {r0, r1, r2, r3}
  71:StepSequencer.cpp ****     filterFreqParam.Init(pod.knob2, 100, 10000, filterFreqParam.LOGARITHMIC);
 563              		.loc 18 71 23 view .LVU139
 564 0118 3A46     		mov	r2, r7
 565 011a 6946     		mov	r1, sp
 566 011c 4048     		ldr	r0, .L14+52
 567 011e FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 568              	.LVL18:
 569              	.LBB501:
 570              	.LBI501:
 571              		.loc 2 23 5 is_stmt 1 view .LVU140
 572              		.loc 2 23 5 is_stmt 0 view .LVU141
 573              	.LBE501:
  72:StepSequencer.cpp **** 
 574              		.loc 18 72 5 is_stmt 1 view .LVU142
  72:StepSequencer.cpp **** 
 575              		.loc 18 72 30 is_stmt 0 view .LVU143
 576 0122 A5F1100E 		sub	lr, r5, #16
 577 0126 EC46     		mov	ip, sp
  72:StepSequencer.cpp **** 
 578              		.loc 18 72 25 view .LVU144
 579 0128 B0EE690A 		vmov.f32	s0, s19
 580 012c DFED3D0A 		vldr.32	s1, .L14+56
 581 0130 DFF838B1 		ldr	fp, .L14+128
  72:StepSequencer.cpp **** 
 582              		.loc 18 72 30 view .LVU145
 583 0134 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 584 0138 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 585 013c 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 586 0140 84E80F00 		stm	r4, {r0, r1, r2, r3}
  72:StepSequencer.cpp **** 
 587              		.loc 18 72 25 view .LVU146
 588 0144 6946     		mov	r1, sp
 589 0146 0222     		movs	r2, #2
 590 0148 3748     		ldr	r0, .L14+60
 591 014a FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 592              	.LVL19:
 593              	.LBB502:
 594              	.LBI502:
 595              		.loc 2 23 5 is_stmt 1 view .LVU147
 596              		.loc 2 23 5 is_stmt 0 view .LVU148
 597              	.LBE502:
  75:StepSequencer.cpp **** 
 598              		.loc 18 75 5 is_stmt 1 view .LVU149
 599              	.LBB503:
 600              	.LBI503:
  53:../../DaisySP/Source/Synthesis/oscillator.h ****     }
  54:../../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../../DaisySP/Source/Synthesis/oscillator.h ****     */
ARM GAS  /tmp/cckObu0D.s 			page 26


  58:../../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
  61:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
  62:../../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../../DaisySP/Source/Synthesis/oscillator.h **** 
  65:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
 601              		.loc 15 70 17 view .LVU150
 602              	.LBB504:
  71:../../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 603              		.loc 15 72 9 view .LVU151
 604              		.loc 15 72 19 is_stmt 0 view .LVU152
 605 014e 0123     		movs	r3, #1
 606              	.LBE504:
 607              	.LBE503:
 608              	.LBB506:
 609              	.LBB507:
  36:../../DaisySP/Source/Control/adenv.h ****     /** Initializes the ad envelope.
  37:../../DaisySP/Source/Control/adenv.h **** 
  38:../../DaisySP/Source/Control/adenv.h ****         Defaults:
  39:../../DaisySP/Source/Control/adenv.h ****             - current segment = idle
  40:../../DaisySP/Source/Control/adenv.h ****             - curve = linear
  41:../../DaisySP/Source/Control/adenv.h ****             - phase = 0
  42:../../DaisySP/Source/Control/adenv.h ****             - min = 0
  43:../../DaisySP/Source/Control/adenv.h ****             - max = 1
  44:../../DaisySP/Source/Control/adenv.h **** 
  45:../../DaisySP/Source/Control/adenv.h ****         \param sample_rate      sample rate of the audio engine being run
  46:../../DaisySP/Source/Control/adenv.h ****     */
  47:../../DaisySP/Source/Control/adenv.h ****     void Init(float sample_rate);
  48:../../DaisySP/Source/Control/adenv.h **** 
  49:../../DaisySP/Source/Control/adenv.h ****     /** Processes the current sample of the envelope. This should be called once
  50:../../DaisySP/Source/Control/adenv.h ****         per sample period.
  51:../../DaisySP/Source/Control/adenv.h ****         \return the current envelope value.
  52:../../DaisySP/Source/Control/adenv.h ****     */
  53:../../DaisySP/Source/Control/adenv.h ****     float Process();
  54:../../DaisySP/Source/Control/adenv.h **** 
  55:../../DaisySP/Source/Control/adenv.h ****     /** Starts or retriggers the envelope.*/
  56:../../DaisySP/Source/Control/adenv.h ****     inline void Trigger() { trigger_ = 1; }
  57:../../DaisySP/Source/Control/adenv.h ****     /** Sets the length of time (in seconds) for a specific segment. */
  58:../../DaisySP/Source/Control/adenv.h ****     inline void SetTime(uint8_t seg, float time) { segment_time_[seg] = time; }
 610              		.loc 14 58 71 view .LVU153
 611 0150 364A     		ldr	r2, .L14+64
 612              	.LBE507:
 613              	.LBE506:
  92:StepSequencer.cpp **** 
 614              		.loc 18 92 19 view .LVU154
 615 0152 4FF0020C 		mov	ip, #2
 616              	.LBB509:
 617              	.LBB510:
  22:../../DaisySP/Source/Filters/moogladder.h ****     /** Initializes the MoogLadder module.
ARM GAS  /tmp/cckObu0D.s 			page 27


  23:../../DaisySP/Source/Filters/moogladder.h ****         sample_rate - The sample rate of the audio engine being run. 
  24:../../DaisySP/Source/Filters/moogladder.h ****     */
  25:../../DaisySP/Source/Filters/moogladder.h ****     void Init(float sample_rate);
  26:../../DaisySP/Source/Filters/moogladder.h **** 
  27:../../DaisySP/Source/Filters/moogladder.h **** 
  28:../../DaisySP/Source/Filters/moogladder.h ****     /** Processes the lowpass filter
  29:../../DaisySP/Source/Filters/moogladder.h ****     */
  30:../../DaisySP/Source/Filters/moogladder.h ****     float Process(float in);
  31:../../DaisySP/Source/Filters/moogladder.h **** 
  32:../../DaisySP/Source/Filters/moogladder.h ****     /** 
  33:../../DaisySP/Source/Filters/moogladder.h ****         Sets the cutoff frequency or half-way point of the filter.
  34:../../DaisySP/Source/Filters/moogladder.h ****         Arguments
  35:../../DaisySP/Source/Filters/moogladder.h ****         - freq - frequency value in Hz. Range: Any positive value.
  36:../../DaisySP/Source/Filters/moogladder.h ****     */
  37:../../DaisySP/Source/Filters/moogladder.h ****     inline void SetFreq(float freq) { freq_ = freq; }
  38:../../DaisySP/Source/Filters/moogladder.h ****     /** 
  39:../../DaisySP/Source/Filters/moogladder.h ****         Sets the resonance of the filter.
  40:../../DaisySP/Source/Filters/moogladder.h ****     */
  41:../../DaisySP/Source/Filters/moogladder.h ****     inline void SetRes(float res) { res_ = res; }
 618              		.loc 16 41 42 view .LVU155
 619 0156 364D     		ldr	r5, .L14+68
 620              	.LBE510:
 621              	.LBE509:
 622              	.LBB513:
 623              	.LBB505:
 624              		.loc 15 72 19 view .LVU156
 625 0158 3370     		strb	r3, [r6]
 626              	.LVL20:
 627              		.loc 15 72 19 view .LVU157
 628              	.LBE505:
 629              	.LBE513:
  78:StepSequencer.cpp ****     env.SetMin(0.0);
 630              		.loc 18 78 5 is_stmt 1 view .LVU158
 631              	.LBB514:
 632              	.LBI506:
 633              		.loc 14 58 17 view .LVU159
 634              	.LBB508:
 635              		.loc 14 58 52 view .LVU160
 636              		.loc 14 58 71 is_stmt 0 view .LVU161
 637 015a C9F80820 		str	r2, [r9, #8]	@ float
 638              	.LVL21:
 639              		.loc 14 58 71 view .LVU162
 640              	.LBE508:
 641              	.LBE514:
  79:StepSequencer.cpp ****     env.SetMax(1);
 642              		.loc 18 79 5 is_stmt 1 view .LVU163
 643              	.LBB515:
 644              	.LBI515:
  59:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
  60:../../DaisySP/Source/Control/adenv.h ****         curve. Input range: -100 to 100.  (or more)
  61:../../DaisySP/Source/Control/adenv.h ****     */
  62:../../DaisySP/Source/Control/adenv.h ****     inline void SetCurve(float scalar) { curve_scalar_ = scalar; }
  63:../../DaisySP/Source/Control/adenv.h ****     /** Sets the minimum value of the envelope output.
  64:../../DaisySP/Source/Control/adenv.h ****         Input range: -FLTmax_, to FLTmax_
  65:../../DaisySP/Source/Control/adenv.h ****     */
  66:../../DaisySP/Source/Control/adenv.h ****     inline void SetMin(float min) { min_ = min; }
 645              		.loc 14 66 17 view .LVU164
ARM GAS  /tmp/cckObu0D.s 			page 28


 646              	.LBB516:
 647              		.loc 14 66 37 view .LVU165
 648              		.loc 14 66 37 is_stmt 0 view .LVU166
 649              	.LBE516:
 650              	.LBE515:
  80:StepSequencer.cpp **** 
 651              		.loc 18 80 5 is_stmt 1 view .LVU167
 652              	.LBB518:
 653              	.LBI518:
  67:../../DaisySP/Source/Control/adenv.h ****     /** Sets the maximum value of the envelope output.
  68:../../DaisySP/Source/Control/adenv.h ****         Input range: -FLTmax_, to FLTmax_
  69:../../DaisySP/Source/Control/adenv.h ****     */
  70:../../DaisySP/Source/Control/adenv.h ****     inline void SetMax(float max) { max_ = max; }
 654              		.loc 14 70 17 view .LVU168
 655              	.LBB519:
 656              		.loc 14 70 37 view .LVU169
 657              		.loc 14 70 37 is_stmt 0 view .LVU170
 658              	.LBE519:
 659              	.LBE518:
  83:StepSequencer.cpp ****     flt.SetRes(0.7);
 660              		.loc 18 83 5 is_stmt 1 view .LVU171
 661              	.LBB521:
 662              	.LBI521:
  37:../../DaisySP/Source/Filters/moogladder.h ****     /** 
 663              		.loc 16 37 17 view .LVU172
 664              	.LBB522:
  37:../../DaisySP/Source/Filters/moogladder.h ****     /** 
 665              		.loc 16 37 39 view .LVU173
  37:../../DaisySP/Source/Filters/moogladder.h ****     /** 
 666              		.loc 16 37 39 is_stmt 0 view .LVU174
 667              	.LBE522:
 668              	.LBE521:
  84:StepSequencer.cpp **** 
 669              		.loc 18 84 5 is_stmt 1 view .LVU175
 670              	.LBB524:
 671              	.LBI509:
 672              		.loc 16 41 17 view .LVU176
 673              	.LBB511:
 674              		.loc 16 41 37 view .LVU177
 675              	.LBE511:
 676              	.LBE524:
  90:StepSequencer.cpp ****     env_out       = 0;
 677              		.loc 18 90 19 is_stmt 0 view .LVU178
 678 015e 354E     		ldr	r6, .L14+72
  87:StepSequencer.cpp ****     edit          = true;
 679              		.loc 18 87 19 view .LVU179
 680 0160 354A     		ldr	r2, .L14+76
  87:StepSequencer.cpp ****     edit          = true;
 681              		.loc 18 87 11 view .LVU180
 682 0162 3648     		ldr	r0, .L14+80
  87:StepSequencer.cpp ****     edit          = true;
 683              		.loc 18 87 19 view .LVU181
 684 0164 82ED008A 		vstr.32	s16, [r2]
  89:StepSequencer.cpp ****     step          = 0;
 685              		.loc 18 89 19 view .LVU182
 686 0168 3549     		ldr	r1, .L14+84
  91:StepSequencer.cpp ****     wave          = 2;
ARM GAS  /tmp/cckObu0D.s 			page 29


 687              		.loc 18 91 19 view .LVU183
 688 016a DFF804E1 		ldr	lr, .L14+132
  88:StepSequencer.cpp ****     editCycle     = false;
 689              		.loc 18 88 19 view .LVU184
 690 016e 354A     		ldr	r2, .L14+88
 691              	.LBB525:
 692              	.LBB517:
  66:../../DaisySP/Source/Control/adenv.h ****     /** Sets the maximum value of the envelope output.
 693              		.loc 14 66 42 view .LVU185
 694 0170 89ED058A 		vstr.32	s16, [r9, #20]
 695              	.LBE517:
 696              	.LBE525:
 697              	.LBB526:
 698              	.LBB520:
 699              		.loc 14 70 42 view .LVU186
 700 0174 89ED069A 		vstr.32	s18, [r9, #24]
 701              	.LBE520:
 702              	.LBE526:
 703              	.LBB527:
 704              	.LBB512:
 705              		.loc 16 41 42 view .LVU187
 706 0178 CAF80450 		str	r5, [r10, #4]	@ float
 707              	.LVL22:
 708              		.loc 16 41 42 view .LVU188
 709              	.LBE512:
 710              	.LBE527:
  87:StepSequencer.cpp ****     edit          = true;
 711              		.loc 18 87 5 is_stmt 1 view .LVU189
  92:StepSequencer.cpp **** 
 712              		.loc 18 92 19 is_stmt 0 view .LVU190
 713 017c DFF8F490 		ldr	r9, .L14+136
  90:StepSequencer.cpp ****     env_out       = 0;
 714              		.loc 18 90 19 view .LVU191
 715 0180 3770     		strb	r7, [r6]
 716 0182 314C     		ldr	r4, .L14+92
 717 0184 314D     		ldr	r5, .L14+96
  92:StepSequencer.cpp **** 
 718              		.loc 18 92 19 view .LVU192
 719 0186 324E     		ldr	r6, .L14+100
 720              	.LBB528:
 721              	.LBB523:
  37:../../DaisySP/Source/Filters/moogladder.h ****     /** 
 722              		.loc 16 37 45 view .LVU193
 723 0188 8AED02AA 		vstr.32	s20, [r10, #8]
 724              	.LBE523:
 725              	.LBE528:
  87:StepSequencer.cpp ****     edit          = true;
 726              		.loc 18 87 11 view .LVU194
 727 018c 80ED008A 		vstr.32	s16, [r0]
  88:StepSequencer.cpp ****     editCycle     = false;
 728              		.loc 18 88 5 is_stmt 1 view .LVU195
  88:StepSequencer.cpp ****     editCycle     = false;
 729              		.loc 18 88 19 is_stmt 0 view .LVU196
 730 0190 1370     		strb	r3, [r2]
  89:StepSequencer.cpp ****     step          = 0;
 731              		.loc 18 89 5 is_stmt 1 view .LVU197
  89:StepSequencer.cpp ****     step          = 0;
ARM GAS  /tmp/cckObu0D.s 			page 30


 732              		.loc 18 89 19 is_stmt 0 view .LVU198
 733 0192 0F70     		strb	r7, [r1]
  90:StepSequencer.cpp ****     env_out       = 0;
 734              		.loc 18 90 5 is_stmt 1 view .LVU199
  91:StepSequencer.cpp ****     wave          = 2;
 735              		.loc 18 91 5 view .LVU200
  91:StepSequencer.cpp ****     wave          = 2;
 736              		.loc 18 91 19 is_stmt 0 view .LVU201
 737 0194 8EED008A 		vstr.32	s16, [lr]
  92:StepSequencer.cpp **** 
 738              		.loc 18 92 5 is_stmt 1 view .LVU202
  92:StepSequencer.cpp **** 
 739              		.loc 18 92 19 is_stmt 0 view .LVU203
 740 0198 89F800C0 		strb	ip, [r9]
 741              		.loc 18 94 5 is_stmt 1 view .LVU204
 742              	.LVL23:
 743              	.LBB529:
 744              		.loc 18 94 22 view .LVU205
 745              	.L10:
  95:StepSequencer.cpp ****     {
  96:StepSequencer.cpp ****         dec[i]    = .5;
 746              		.loc 18 96 9 discriminator 2 view .LVU206
  97:StepSequencer.cpp ****         active[i] = false;
  98:StepSequencer.cpp ****         pitch[i]  = 110;
  99:StepSequencer.cpp ****         colors[i].Init((Color::PresetColor)i);
 747              		.loc 18 99 23 is_stmt 0 discriminator 2 view .LVU207
 748 019c 08EB4800 		add	r0, r8, r8, lsl #1
  97:StepSequencer.cpp ****         active[i] = false;
 749              		.loc 18 97 19 discriminator 2 view .LVU208
 750 01a0 0022     		movs	r2, #0
  98:StepSequencer.cpp ****         colors[i].Init((Color::PresetColor)i);
 751              		.loc 18 98 19 discriminator 2 view .LVU209
 752 01a2 2C4B     		ldr	r3, .L14+104
  96:StepSequencer.cpp ****         active[i] = false;
 753              		.loc 18 96 19 discriminator 2 view .LVU210
 754 01a4 4FF07C57 		mov	r7, #1056964608
 755              		.loc 18 99 23 discriminator 2 view .LVU211
 756 01a8 5FFA88F1 		uxtb	r1, r8
  94:StepSequencer.cpp ****     {
 757              		.loc 18 94 5 discriminator 2 view .LVU212
 758 01ac 08F10108 		add	r8, r8, #1
 759              	.LVL24:
 760              		.loc 18 99 23 discriminator 2 view .LVU213
 761 01b0 05EB8000 		add	r0, r5, r0, lsl #2
  96:StepSequencer.cpp ****         active[i] = false;
 762              		.loc 18 96 19 discriminator 2 view .LVU214
 763 01b4 4BF8047B 		str	r7, [fp], #4	@ float
  97:StepSequencer.cpp ****         pitch[i]  = 110;
 764              		.loc 18 97 9 is_stmt 1 discriminator 2 view .LVU215
  97:StepSequencer.cpp ****         pitch[i]  = 110;
 765              		.loc 18 97 19 is_stmt 0 discriminator 2 view .LVU216
 766 01b8 06F8012F 		strb	r2, [r6, #1]!
  98:StepSequencer.cpp ****         colors[i].Init((Color::PresetColor)i);
 767              		.loc 18 98 9 is_stmt 1 discriminator 2 view .LVU217
  98:StepSequencer.cpp ****         colors[i].Init((Color::PresetColor)i);
 768              		.loc 18 98 19 is_stmt 0 discriminator 2 view .LVU218
 769 01bc 44F8043B 		str	r3, [r4], #4	@ float
ARM GAS  /tmp/cckObu0D.s 			page 31


 770              		.loc 18 99 9 is_stmt 1 discriminator 2 view .LVU219
 771              		.loc 18 99 23 is_stmt 0 discriminator 2 view .LVU220
 772 01c0 FFF7FEFF 		bl	_ZN5daisy5Color4InitENS0_11PresetColorE
 773              	.LVL25:
  94:StepSequencer.cpp ****     {
 774              		.loc 18 94 5 is_stmt 1 discriminator 2 view .LVU221
  94:StepSequencer.cpp ****     {
 775              		.loc 18 94 22 discriminator 2 view .LVU222
 776 01c4 B8F1080F 		cmp	r8, #8
 777 01c8 E8D1     		bne	.L10
 778              	.LBE529:
 100:StepSequencer.cpp ****     }
 101:StepSequencer.cpp ****     colors[7].Init(1, 1, 0);
 779              		.loc 18 101 5 view .LVU223
 780              		.loc 18 101 19 is_stmt 0 view .LVU224
 781 01ca F7EE000A 		vmov.f32	s1, #1.0e+0
 782 01ce 9FED0A1A 		vldr.32	s2, .L14+12
 783 01d2 2148     		ldr	r0, .L14+108
 784 01d4 B0EE600A 		vmov.f32	s0, s1
 785 01d8 FFF7FEFF 		bl	_ZN5daisy5Color4InitEfff
 786              	.LVL26:
 102:StepSequencer.cpp **** 
 103:StepSequencer.cpp ****     pod.StartAdc();
 787              		.loc 18 103 5 is_stmt 1 view .LVU225
 788              		.loc 18 103 17 is_stmt 0 view .LVU226
 789 01dc 0348     		ldr	r0, .L14
 790 01de FFF7FEFF 		bl	_ZN5daisy8DaisyPod8StartAdcEv
 791              	.LVL27:
 104:StepSequencer.cpp ****     pod.StartAudio(AudioCallback);
 792              		.loc 18 104 5 is_stmt 1 view .LVU227
 793              		.loc 18 104 19 is_stmt 0 view .LVU228
 794 01e2 1E49     		ldr	r1, .L14+112
 795 01e4 0148     		ldr	r0, .L14
 796 01e6 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10StartAudioEPFvPKfPfjE
 797              	.LVL28:
 798              	.L11:
 105:StepSequencer.cpp **** 
 106:StepSequencer.cpp ****     while(1) {}
 799              		.loc 18 106 5 is_stmt 1 discriminator 1 view .LVU229
 800              		.loc 18 106 5 discriminator 1 view .LVU230
 801              		.loc 18 106 5 discriminator 1 view .LVU231
 802              		.loc 18 106 5 discriminator 1 view .LVU232
 803 01ea FEE7     		b	.L11
 804              	.L15:
 805              		.align	2
 806              	.L14:
 807 01ec 00000000 		.word	pod
 808 01f0 00000000 		.word	.LANCHOR4
 809 01f4 0000C842 		.word	1120403456
 810 01f8 00000000 		.word	0
 811 01fc 00000000 		.word	.LANCHOR3
 812 0200 00000000 		.word	.LANCHOR0
 813 0204 00000000 		.word	.LANCHOR1
 814 0208 00000000 		.word	.LANCHOR2
 815 020c 00409C46 		.word	1184645120
 816 0210 00000000 		.word	.LANCHOR6
 817 0214 8FC2F53C 		.word	1022739087
ARM GAS  /tmp/cckObu0D.s 			page 32


 818 0218 00000000 		.word	.LANCHOR8
 819 021c 00000000 		.word	.LANCHOR9
 820 0220 00000000 		.word	.LANCHOR10
 821 0224 00401C46 		.word	1176256512
 822 0228 00000000 		.word	.LANCHOR11
 823 022c 0AD7233C 		.word	1008981770
 824 0230 3333333F 		.word	1060320051
 825 0234 00000000 		.word	.LANCHOR16
 826 0238 00000000 		.word	.LANCHOR12
 827 023c 00000000 		.word	.LANCHOR13
 828 0240 00000000 		.word	.LANCHOR15
 829 0244 00000000 		.word	.LANCHOR14
 830 0248 00000000 		.word	.LANCHOR21
 831 024c 00000000 		.word	.LANCHOR22
 832 0250 FFFFFFFF 		.word	.LANCHOR20-1
 833 0254 0000DC42 		.word	1121714176
 834 0258 54000000 		.word	.LANCHOR22+84
 835 025c 00000000 		.word	_ZL13AudioCallbackPKfPfj
 836 0260 00000000 		.word	.LANCHOR5
 837 0264 00000000 		.word	.LANCHOR7
 838 0268 5C000000 		.word	pod+92
 839 026c 00000000 		.word	.LANCHOR19
 840 0270 00000000 		.word	.LANCHOR17
 841 0274 00000000 		.word	.LANCHOR18
 842              		.cfi_endproc
 843              	.LFE4220:
 845              		.section	.text._Z20ConditionalParameterffRff,"ax",%progbits
 846              		.align	1
 847              		.p2align 2,,3
 848              		.global	_Z20ConditionalParameterffRff
 849              		.syntax unified
 850              		.thumb
 851              		.thumb_func
 852              		.fpu fpv5-d16
 854              	_Z20ConditionalParameterffRff:
 855              	.LVL29:
 856              	.LFB4221:
 107:StepSequencer.cpp **** }
 108:StepSequencer.cpp **** 
 109:StepSequencer.cpp **** void ConditionalParameter(float o, float n, float &param, float update)
 110:StepSequencer.cpp **** {
 857              		.loc 18 110 1 view -0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 0
 860              		@ frame_needed = 0, uses_anonymous_args = 0
 861              		@ link register save eliminated.
 111:StepSequencer.cpp ****     if(abs(o - n) > 0.0005)
 862              		.loc 18 111 5 view .LVU234
 863              	.LBB530:
 864              	.LBI530:
 865              		.file 19 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
   1:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
ARM GAS  /tmp/cckObu0D.s 			page 33


   7:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/include/newlib/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/newlib/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/include/newlib/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** 
  37:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/include/newlib/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/include/newlib/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/include/newlib/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/include/newlib/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/include/newlib/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** 
ARM GAS  /tmp/cckObu0D.s 			page 34


  64:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/include/newlib/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/include/newlib/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/include/newlib/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/include/newlib/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/include/newlib/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/include/newlib/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
 866              		.loc 19 75 3 view .LVU235
 867              	.LBB531:
  76:/usr/include/newlib/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 868              		.loc 19 76 5 view .LVU236
 869              		.loc 19 76 5 is_stmt 0 view .LVU237
 870              	.LBE531:
 871              	.LBE530:
 872              		.loc 18 111 11 view .LVU238
 873 0000 70EE600A 		vsub.f32	s1, s0, s1
 874              	.LVL30:
 875              		.loc 18 111 5 view .LVU239
 876 0004 9FED067B 		vldr.64	d7, .L20
 877              	.LBB533:
 878              	.LBB532:
 879              		.loc 19 76 31 view .LVU240
 880 0008 B0EEE00A 		vabs.f32	s0, s1
 881              	.LVL31:
 882              		.loc 19 76 31 view .LVU241
 883              	.LBE532:
 884              	.LBE533:
 885              		.loc 18 111 11 view .LVU242
 886 000c B7EEC00A 		vcvt.f64.f32	d0, s0
 887              		.loc 18 111 5 view .LVU243
 888 0010 B4EEC70B 		vcmpe.f64	d0, d7
 889 0014 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 112:StepSequencer.cpp ****     {
 113:StepSequencer.cpp ****         param = update;
 890              		.loc 18 113 9 is_stmt 1 view .LVU244
 891              		.loc 18 113 15 is_stmt 0 view .LVU245
 892 0018 C8BF     		it	gt
 893 001a 80ED001A 		vstrgt.32	s2, [r0]
 114:StepSequencer.cpp ****     }
 115:StepSequencer.cpp **** }
 894              		.loc 18 115 1 view .LVU246
 895 001e 7047     		bx	lr
 896              	.L21:
 897              		.align	3
 898              	.L20:
 899 0020 FCA9F1D2 		.word	3539053052
 900 0024 4D62403F 		.word	1061184077
 901              		.cfi_endproc
 902              	.LFE4221:
 904              		.section	.text._Z20UpdateEncoderPressedv,"ax",%progbits
 905              		.align	1
 906              		.p2align 2,,3
ARM GAS  /tmp/cckObu0D.s 			page 35


 907              		.global	_Z20UpdateEncoderPressedv
 908              		.syntax unified
 909              		.thumb
 910              		.thumb_func
 911              		.fpu fpv5-d16
 913              	_Z20UpdateEncoderPressedv:
 914              	.LFB4222:
 116:StepSequencer.cpp **** 
 117:StepSequencer.cpp **** void UpdateEncoderPressed()
 118:StepSequencer.cpp **** {
 915              		.loc 18 118 1 is_stmt 1 view -0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 0
 918              		@ frame_needed = 0, uses_anonymous_args = 0
 919              		@ link register save eliminated.
 119:StepSequencer.cpp ****     //switch modes
 120:StepSequencer.cpp ****     if(pod.encoder.RisingEdge())
 920              		.loc 18 120 5 view .LVU248
 921              	.LVL32:
 922              	.LBB534:
 923              	.LBI534:
  22:../../libdaisy/src/hid/encoder.h **** 
  23:../../libdaisy/src/hid/encoder.h ****     /** Initializes the encoder with the specified hardware pins.
  24:../../libdaisy/src/hid/encoder.h **** */
  25:../../libdaisy/src/hid/encoder.h ****     //
  26:../../libdaisy/src/hid/encoder.h ****     /** Update rate should be the rate at which Debounce() gets called
  27:../../libdaisy/src/hid/encoder.h **** in Hertz.
  28:../../libdaisy/src/hid/encoder.h **** */
  29:../../libdaisy/src/hid/encoder.h ****     //
  30:../../libdaisy/src/hid/encoder.h ****     void
  31:../../libdaisy/src/hid/encoder.h ****     Init(dsy_gpio_pin a, dsy_gpio_pin b, dsy_gpio_pin click, float update_rate);
  32:../../libdaisy/src/hid/encoder.h ****     /** Called at update_rate to debounce and handle timing for the switch.
  33:../../libdaisy/src/hid/encoder.h **** */
  34:../../libdaisy/src/hid/encoder.h ****     //
  35:../../libdaisy/src/hid/encoder.h ****     /** In order for events not to be missed, its important that the Edge/Pressed checks
  36:../../libdaisy/src/hid/encoder.h **** be made at the same rate as the debounce function is being called.
  37:../../libdaisy/src/hid/encoder.h **** */
  38:../../libdaisy/src/hid/encoder.h ****     void Debounce();
  39:../../libdaisy/src/hid/encoder.h ****     /** Returns +1 if the encoder was turned clockwise, -1 if it was turned counter-clockwise, or 0
  40:../../libdaisy/src/hid/encoder.h **** */
  41:../../libdaisy/src/hid/encoder.h ****     inline int32_t Increment() const { return inc_; }
  42:../../libdaisy/src/hid/encoder.h ****     /** Returns true if the encoder was just pressed.
  43:../../libdaisy/src/hid/encoder.h **** */
  44:../../libdaisy/src/hid/encoder.h ****     inline bool RisingEdge() const { return sw_.RisingEdge(); }
 924              		.loc 8 44 17 view .LVU249
 925              	.LBB535:
 926              		.loc 8 44 38 view .LVU250
 927              		.loc 8 44 38 is_stmt 0 view .LVU251
 928              	.LBE535:
 929              	.LBE534:
  42:../../libdaisy/src/hid/switch.h **** 
  43:../../libdaisy/src/hid/switch.h ****     /** 
  44:../../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
ARM GAS  /tmp/cckObu0D.s 			page 36


  49:../../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../../libdaisy/src/hid/switch.h ****     */
  51:../../libdaisy/src/hid/switch.h ****     void
  52:../../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../../libdaisy/src/hid/switch.h **** 
  54:../../libdaisy/src/hid/switch.h ****     /**
  55:../../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../../libdaisy/src/hid/switch.h ****     */
  59:../../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../../libdaisy/src/hid/switch.h **** 
  61:../../libdaisy/src/hid/switch.h ****     /** 
  62:../../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../../libdaisy/src/hid/switch.h ****     */
  66:../../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../../libdaisy/src/hid/switch.h **** 
  68:../../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 930              		.loc 7 69 38 is_stmt 1 view .LVU252
 931              	.LBB537:
 932              	.LBB536:
 933              		.loc 8 44 59 is_stmt 0 view .LVU253
 934 0000 094B     		ldr	r3, .L26
 935              	.LBE536:
 936              	.LBE537:
 937              		.loc 18 120 5 view .LVU254
 938 0002 93F84130 		ldrb	r3, [r3, #65]	@ zero_extendqisi2
 939 0006 7F2B     		cmp	r3, #127
 940 0008 05D0     		beq	.L23
 941 000a 084B     		ldr	r3, .L26+4
 942 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 943              	.L24:
 121:StepSequencer.cpp ****     {
 122:StepSequencer.cpp ****         edit = !edit;
 123:StepSequencer.cpp ****         step = 0;
 124:StepSequencer.cpp ****     }
 125:StepSequencer.cpp ****     if(edit == false)
 944              		.loc 18 125 5 is_stmt 1 view .LVU255
 945 000e 0BB9     		cbnz	r3, .L22
 126:StepSequencer.cpp ****     {
 127:StepSequencer.cpp ****         editCycle = false;
 946              		.loc 18 127 9 view .LVU256
 947              		.loc 18 127 19 is_stmt 0 view .LVU257
 948 0010 074A     		ldr	r2, .L26+8
 949 0012 1370     		strb	r3, [r2]
 950              	.L22:
 128:StepSequencer.cpp ****     }
 129:StepSequencer.cpp **** }
 951              		.loc 18 129 1 view .LVU258
 952 0014 7047     		bx	lr
 953              	.L23:
 122:StepSequencer.cpp ****         step = 0;
 954              		.loc 18 122 9 is_stmt 1 view .LVU259
 122:StepSequencer.cpp ****         step = 0;
ARM GAS  /tmp/cckObu0D.s 			page 37


 955              		.loc 18 122 16 is_stmt 0 view .LVU260
 956 0016 054A     		ldr	r2, .L26+4
 123:StepSequencer.cpp ****     }
 957              		.loc 18 123 14 view .LVU261
 958 0018 0020     		movs	r0, #0
 959 001a 0649     		ldr	r1, .L26+12
 122:StepSequencer.cpp ****         step = 0;
 960              		.loc 18 122 16 view .LVU262
 961 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 123:StepSequencer.cpp ****     }
 962              		.loc 18 123 14 view .LVU263
 963 001e 0870     		strb	r0, [r1]
 122:StepSequencer.cpp ****         step = 0;
 964              		.loc 18 122 16 view .LVU264
 965 0020 83F00103 		eor	r3, r3, #1
 122:StepSequencer.cpp ****         step = 0;
 966              		.loc 18 122 14 view .LVU265
 967 0024 1370     		strb	r3, [r2]
 123:StepSequencer.cpp ****     }
 968              		.loc 18 123 9 is_stmt 1 view .LVU266
 969 0026 F2E7     		b	.L24
 970              	.L27:
 971              		.align	2
 972              	.L26:
 973 0028 00000000 		.word	pod
 974 002c 00000000 		.word	.LANCHOR14
 975 0030 00000000 		.word	.LANCHOR15
 976 0034 00000000 		.word	.LANCHOR16
 977              		.cfi_endproc
 978              	.LFE4222:
 980              		.section	.text._Z22UpdateEncoderIncrementv,"ax",%progbits
 981              		.align	1
 982              		.p2align 2,,3
 983              		.global	_Z22UpdateEncoderIncrementv
 984              		.syntax unified
 985              		.thumb
 986              		.thumb_func
 987              		.fpu fpv5-d16
 989              	_Z22UpdateEncoderIncrementv:
 990              	.LFB4223:
 130:StepSequencer.cpp **** 
 131:StepSequencer.cpp **** void UpdateEncoderIncrement()
 132:StepSequencer.cpp **** {
 991              		.loc 18 132 1 view -0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 0
 994              		@ frame_needed = 0, uses_anonymous_args = 0
 995              		@ link register save eliminated.
 133:StepSequencer.cpp ****     if(edit)
 996              		.loc 18 133 5 view .LVU268
 997 0000 0B4B     		ldr	r3, .L31
 998 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 999 0004 43B1     		cbz	r3, .L29
 134:StepSequencer.cpp ****     {
 135:StepSequencer.cpp ****         step += pod.encoder.Increment();
 1000              		.loc 18 135 9 view .LVU269
 1001              	.LVL33:
ARM GAS  /tmp/cckObu0D.s 			page 38


  41:../../libdaisy/src/hid/encoder.h ****     /** Returns true if the encoder was just pressed.
 1002              		.loc 8 41 40 view .LVU270
 136:StepSequencer.cpp ****         step = (step % 8 + 8) % 8;
 1003              		.loc 18 136 9 view .LVU271
 1004              		.loc 18 136 14 is_stmt 0 view .LVU272
 1005 0006 0B4A     		ldr	r2, .L31+4
 135:StepSequencer.cpp ****         step = (step % 8 + 8) % 8;
 1006              		.loc 18 135 38 view .LVU273
 1007 0008 0B4B     		ldr	r3, .L31+8
 135:StepSequencer.cpp ****         step = (step % 8 + 8) % 8;
 1008              		.loc 18 135 14 view .LVU274
 1009 000a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1010 000c 9B6D     		ldr	r3, [r3, #88]
 1011 000e 0B44     		add	r3, r3, r1
 1012              		.loc 18 136 14 view .LVU275
 1013 0010 03F00703 		and	r3, r3, #7
 1014 0014 1370     		strb	r3, [r2]
 1015 0016 7047     		bx	lr
 1016              	.LVL34:
 1017              	.L29:
 1018              	.LBB546:
 1019              	.LBI546:
 131:StepSequencer.cpp **** {
 1020              		.loc 18 131 6 is_stmt 1 view .LVU276
 1021              	.LBB547:
 137:StepSequencer.cpp ****     }
 138:StepSequencer.cpp ****     else
 139:StepSequencer.cpp ****     {
 140:StepSequencer.cpp ****         wave += pod.encoder.Increment();
 1022              		.loc 18 140 9 view .LVU277
 1023              		.loc 18 140 9 is_stmt 0 view .LVU278
 1024              	.LBE547:
 1025              	.LBE546:
  41:../../libdaisy/src/hid/encoder.h ****     /** Returns true if the encoder was just pressed.
 1026              		.loc 8 41 40 is_stmt 1 view .LVU279
 1027              	.LBB553:
 1028              	.LBB552:
 141:StepSequencer.cpp ****         wave = ((wave % 2 + 2) % 2);
 1029              		.loc 18 141 9 view .LVU280
 140:StepSequencer.cpp ****         wave = ((wave % 2 + 2) % 2);
 1030              		.loc 18 140 14 is_stmt 0 view .LVU281
 1031 0018 084A     		ldr	r2, .L31+12
 140:StepSequencer.cpp ****         wave = ((wave % 2 + 2) % 2);
 1032              		.loc 18 140 38 view .LVU282
 1033 001a 074B     		ldr	r3, .L31+8
 140:StepSequencer.cpp ****         wave = ((wave % 2 + 2) % 2);
 1034              		.loc 18 140 14 view .LVU283
 1035 001c 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1036 001e 9B6D     		ldr	r3, [r3, #88]
 1037              	.LBB548:
 1038              	.LBB549:
 1039              		.loc 15 72 19 view .LVU284
 1040 0020 0749     		ldr	r1, .L31+16
 1041              	.LBE549:
 1042              	.LBE548:
 140:StepSequencer.cpp ****         wave = ((wave % 2 + 2) % 2);
 1043              		.loc 18 140 14 view .LVU285
ARM GAS  /tmp/cckObu0D.s 			page 39


 1044 0022 0344     		add	r3, r3, r0
 1045 0024 03F00103 		and	r3, r3, #1
 142:StepSequencer.cpp ****         osc.SetWaveform(wave + 3);
 1046              		.loc 18 142 24 view .LVU286
 1047 0028 D81C     		adds	r0, r3, #3
 141:StepSequencer.cpp ****         wave = ((wave % 2 + 2) % 2);
 1048              		.loc 18 141 14 view .LVU287
 1049 002a 1370     		strb	r3, [r2]
 1050              		.loc 18 142 9 is_stmt 1 view .LVU288
 1051              	.LVL35:
 1052              	.LBB551:
 1053              	.LBI548:
  70:../../DaisySP/Source/Synthesis/oscillator.h ****     {
 1054              		.loc 15 70 17 view .LVU289
 1055              	.LBB550:
 1056              		.loc 15 72 9 view .LVU290
 1057              		.loc 15 72 19 is_stmt 0 view .LVU291
 1058 002c 0870     		strb	r0, [r1]
 1059              	.LVL36:
 1060              		.loc 15 72 19 view .LVU292
 1061              	.LBE550:
 1062              	.LBE551:
 1063              	.LBE552:
 1064              	.LBE553:
 143:StepSequencer.cpp ****     }
 144:StepSequencer.cpp **** }
 1065              		.loc 18 144 1 view .LVU293
 1066 002e 7047     		bx	lr
 1067              	.L32:
 1068              		.align	2
 1069              	.L31:
 1070 0030 00000000 		.word	.LANCHOR14
 1071 0034 00000000 		.word	.LANCHOR16
 1072 0038 00000000 		.word	pod
 1073 003c 00000000 		.word	.LANCHOR18
 1074 0040 00000000 		.word	.LANCHOR4
 1075              		.cfi_endproc
 1076              	.LFE4223:
 1078              		.section	.text._Z13UpdateButtonsv,"ax",%progbits
 1079              		.align	1
 1080              		.p2align 2,,3
 1081              		.global	_Z13UpdateButtonsv
 1082              		.syntax unified
 1083              		.thumb
 1084              		.thumb_func
 1085              		.fpu fpv5-d16
 1087              	_Z13UpdateButtonsv:
 1088              	.LFB4224:
 145:StepSequencer.cpp **** 
 146:StepSequencer.cpp **** void UpdateButtons()
 147:StepSequencer.cpp **** {
 1089              		.loc 18 147 1 is_stmt 1 view -0
 1090              		.cfi_startproc
 1091              		@ args = 0, pretend = 0, frame = 0
 1092              		@ frame_needed = 0, uses_anonymous_args = 0
 1093              		@ link register save eliminated.
 148:StepSequencer.cpp ****     if(edit)
ARM GAS  /tmp/cckObu0D.s 			page 40


 1094              		.loc 18 148 5 view .LVU295
 1095 0000 0F4B     		ldr	r3, .L40
 1096 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1097 0004 43B1     		cbz	r3, .L33
 149:StepSequencer.cpp ****     {
 150:StepSequencer.cpp ****         if(pod.button2.RisingEdge())
 1098              		.loc 18 150 9 view .LVU296
 1099              	.LVL37:
 1100              		.loc 7 69 38 view .LVU297
 1101              		.loc 18 150 34 is_stmt 0 view .LVU298
 1102 0006 0F4B     		ldr	r3, .L40+4
 1103              		.loc 18 150 9 view .LVU299
 1104 0008 93F8B920 		ldrb	r2, [r3, #185]	@ zero_extendqisi2
 1105 000c 7F2A     		cmp	r2, #127
 1106 000e 0AD0     		beq	.L38
 151:StepSequencer.cpp ****         {
 152:StepSequencer.cpp ****             active[step] = !active[step];
 153:StepSequencer.cpp ****         }
 154:StepSequencer.cpp ****         if(pod.button1.RisingEdge())
 1107              		.loc 18 154 9 is_stmt 1 view .LVU300
 1108              	.LVL38:
 1109              		.loc 7 69 38 view .LVU301
 1110              		.loc 18 154 9 is_stmt 0 view .LVU302
 1111 0010 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 1112 0014 7F2B     		cmp	r3, #127
 1113 0016 00D0     		beq	.L39
 1114              	.LVL39:
 1115              	.L33:
 155:StepSequencer.cpp ****         {
 156:StepSequencer.cpp ****             editCycle = !editCycle;
 157:StepSequencer.cpp ****         }
 158:StepSequencer.cpp ****     }
 159:StepSequencer.cpp **** }
 1116              		.loc 18 159 1 view .LVU303
 1117 0018 7047     		bx	lr
 1118              	.LVL40:
 1119              	.L39:
 1120              	.LBB560:
 1121              	.LBI560:
 146:StepSequencer.cpp **** {
 1122              		.loc 18 146 6 is_stmt 1 view .LVU304
 1123              	.LBB561:
 156:StepSequencer.cpp ****         }
 1124              		.loc 18 156 13 view .LVU305
 156:StepSequencer.cpp ****         }
 1125              		.loc 18 156 23 is_stmt 0 view .LVU306
 1126 001a 0B4A     		ldr	r2, .L40+8
 156:StepSequencer.cpp ****         }
 1127              		.loc 18 156 25 view .LVU307
 1128 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1129 001e 83F00103 		eor	r3, r3, #1
 156:StepSequencer.cpp ****         }
 1130              		.loc 18 156 23 view .LVU308
 1131 0022 1370     		strb	r3, [r2]
 1132              	.LBE561:
 1133              	.LBE560:
 1134              		.loc 18 159 1 view .LVU309
ARM GAS  /tmp/cckObu0D.s 			page 41


 1135 0024 7047     		bx	lr
 1136              	.LVL41:
 1137              	.L38:
 152:StepSequencer.cpp ****         }
 1138              		.loc 18 152 13 is_stmt 1 view .LVU310
 152:StepSequencer.cpp ****         }
 1139              		.loc 18 152 36 is_stmt 0 view .LVU311
 1140 0026 094A     		ldr	r2, .L40+12
 152:StepSequencer.cpp ****         }
 1141              		.loc 18 152 26 view .LVU312
 1142 0028 0948     		ldr	r0, .L40+16
 152:StepSequencer.cpp ****         }
 1143              		.loc 18 152 36 view .LVU313
 1144 002a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 154:StepSequencer.cpp ****         {
 1145              		.loc 18 154 9 view .LVU314
 1146 002c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 152:StepSequencer.cpp ****         }
 1147              		.loc 18 152 28 view .LVU315
 1148 0030 425C     		ldrb	r2, [r0, r1]	@ zero_extendqisi2
 154:StepSequencer.cpp ****         {
 1149              		.loc 18 154 9 view .LVU316
 1150 0032 7F2B     		cmp	r3, #127
 152:StepSequencer.cpp ****         }
 1151              		.loc 18 152 28 view .LVU317
 1152 0034 82F00102 		eor	r2, r2, #1
 152:StepSequencer.cpp ****         }
 1153              		.loc 18 152 26 view .LVU318
 1154 0038 4254     		strb	r2, [r0, r1]
 154:StepSequencer.cpp ****         {
 1155              		.loc 18 154 9 is_stmt 1 view .LVU319
 1156              	.LVL42:
 1157              		.loc 7 69 38 view .LVU320
 154:StepSequencer.cpp ****         {
 1158              		.loc 18 154 9 is_stmt 0 view .LVU321
 1159 003a EDD1     		bne	.L33
 1160 003c EDE7     		b	.L39
 1161              	.L41:
 1162 003e 00BF     		.align	2
 1163              	.L40:
 1164 0040 00000000 		.word	.LANCHOR14
 1165 0044 00000000 		.word	pod
 1166 0048 00000000 		.word	.LANCHOR15
 1167 004c 00000000 		.word	.LANCHOR16
 1168 0050 00000000 		.word	.LANCHOR20
 1169              		.cfi_endproc
 1170              	.LFE4224:
 1172              		.section	.text._Z11UpdateKnobsv,"ax",%progbits
 1173              		.align	1
 1174              		.p2align 2,,3
 1175              		.global	_Z11UpdateKnobsv
 1176              		.syntax unified
 1177              		.thumb
 1178              		.thumb_func
 1179              		.fpu fpv5-d16
 1181              	_Z11UpdateKnobsv:
 1182              	.LFB4225:
ARM GAS  /tmp/cckObu0D.s 			page 42


 160:StepSequencer.cpp **** 
 161:StepSequencer.cpp **** void UpdateKnobs()
 162:StepSequencer.cpp **** {
 1183              		.loc 18 162 1 is_stmt 1 view -0
 1184              		.cfi_startproc
 1185              		@ args = 0, pretend = 0, frame = 0
 1186              		@ frame_needed = 0, uses_anonymous_args = 0
 163:StepSequencer.cpp ****     k1 = pod.knob1.Process();
 1187              		.loc 18 163 5 view .LVU323
 162:StepSequencer.cpp ****     k1 = pod.knob1.Process();
 1188              		.loc 18 162 1 is_stmt 0 view .LVU324
 1189 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1190              		.cfi_def_cfa_offset 32
 1191              		.cfi_offset 3, -32
 1192              		.cfi_offset 4, -28
 1193              		.cfi_offset 5, -24
 1194              		.cfi_offset 6, -20
 1195              		.cfi_offset 7, -16
 1196              		.cfi_offset 8, -12
 1197              		.cfi_offset 9, -8
 1198              		.cfi_offset 14, -4
 1199              		.loc 18 163 27 view .LVU325
 1200 0004 5E48     		ldr	r0, .L57+8
 1201              		.loc 18 163 8 view .LVU326
 1202 0006 5F4D     		ldr	r5, .L57+12
 164:StepSequencer.cpp ****     k2 = pod.knob2.Process();
 1203              		.loc 18 164 8 view .LVU327
 1204 0008 5F4C     		ldr	r4, .L57+16
 1205              	.LBB562:
 1206              	.LBB563:
 165:StepSequencer.cpp **** 
 166:StepSequencer.cpp ****     if(edit)
 167:StepSequencer.cpp ****     {
 168:StepSequencer.cpp ****         ConditionalParameter(oldk1, k1, dec[step], decayTimeParam.Process());
 1207              		.loc 18 168 29 view .LVU328
 1208 000a 604F     		ldr	r7, .L57+20
 1209              	.LBE563:
 1210              	.LBE562:
 162:StepSequencer.cpp ****     k1 = pod.knob1.Process();
 1211              		.loc 18 162 1 view .LVU329
 1212 000c 2DED028B 		vpush.64	{d8}
 1213              		.cfi_def_cfa_offset 40
 1214              		.cfi_offset 80, -40
 1215              		.cfi_offset 81, -36
 163:StepSequencer.cpp ****     k2 = pod.knob2.Process();
 1216              		.loc 18 163 27 view .LVU330
 1217 0010 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 1218              	.LVL43:
 164:StepSequencer.cpp **** 
 1219              		.loc 18 164 27 view .LVU331
 1220 0014 5E48     		ldr	r0, .L57+24
 163:StepSequencer.cpp ****     k2 = pod.knob2.Process();
 1221              		.loc 18 163 8 view .LVU332
 1222 0016 85ED000A 		vstr.32	s0, [r5]
 164:StepSequencer.cpp **** 
 1223              		.loc 18 164 5 is_stmt 1 view .LVU333
 164:StepSequencer.cpp **** 
ARM GAS  /tmp/cckObu0D.s 			page 43


 1224              		.loc 18 164 27 is_stmt 0 view .LVU334
 1225 001a FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 1226              	.LVL44:
 1227              	.LBB617:
 166:StepSequencer.cpp ****     {
 1228              		.loc 18 166 5 view .LVU335
 1229 001e 5D4B     		ldr	r3, .L57+28
 1230              	.LBE617:
 164:StepSequencer.cpp **** 
 1231              		.loc 18 164 8 view .LVU336
 1232 0020 84ED000A 		vstr.32	s0, [r4]
 166:StepSequencer.cpp ****     {
 1233              		.loc 18 166 5 is_stmt 1 view .LVU337
 1234              	.LBB618:
 1235 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1236 0026 002B     		cmp	r3, #0
 1237 0028 42D0     		beq	.L43
 1238              	.LBB589:
 1239              		.loc 18 168 9 view .LVU338
 1240              		.loc 18 168 29 is_stmt 0 view .LVU339
 1241 002a 97ED008A 		vldr.32	s16, [r7]
 1242 002e D5ED008A 		vldr.32	s17, [r5]
 1243              		.loc 18 168 45 view .LVU340
 1244 0032 DFF89081 		ldr	r8, .L57+76
 1245              		.loc 18 168 29 view .LVU341
 1246 0036 5848     		ldr	r0, .L57+32
 1247              		.loc 18 168 45 view .LVU342
 1248 0038 98F80060 		ldrb	r6, [r8]	@ zero_extendqisi2
 1249              		.loc 18 168 29 view .LVU343
 1250 003c FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 1251              	.LVL45:
 1252              	.LBB564:
 1253              	.LBB565:
 111:StepSequencer.cpp ****     {
 1254              		.loc 18 111 11 view .LVU344
 1255 0040 38EE687A 		vsub.f32	s14, s16, s17
 111:StepSequencer.cpp ****     {
 1256              		.loc 18 111 5 view .LVU345
 1257 0044 9FED4C6B 		vldr.64	d6, .L57
 1258              	.LBB566:
 1259              	.LBB567:
 1260              		.loc 19 76 31 view .LVU346
 1261 0048 B0EEC77A 		vabs.f32	s14, s14
 1262              	.LVL46:
 1263              		.loc 19 76 31 view .LVU347
 1264              	.LBE567:
 1265              	.LBE566:
 1266              	.LBE565:
 1267              	.LBI564:
 109:StepSequencer.cpp **** {
 1268              		.loc 18 109 6 is_stmt 1 view .LVU348
 1269              	.LBB570:
 111:StepSequencer.cpp ****     {
 1270              		.loc 18 111 5 view .LVU349
 1271              	.LBB569:
 1272              	.LBI566:
  75:/usr/include/newlib/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
ARM GAS  /tmp/cckObu0D.s 			page 44


 1273              		.loc 19 75 3 view .LVU350
 1274              	.LBB568:
 1275              		.loc 19 76 5 view .LVU351
 1276              		.loc 19 76 5 is_stmt 0 view .LVU352
 1277              	.LBE568:
 1278              	.LBE569:
 111:StepSequencer.cpp ****     {
 1279              		.loc 18 111 11 view .LVU353
 1280 004c B7EEC77A 		vcvt.f64.f32	d7, s14
 111:StepSequencer.cpp ****     {
 1281              		.loc 18 111 5 view .LVU354
 1282 0050 B4EEC67B 		vcmpe.f64	d7, d6
 1283 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1284 0058 04DD     		ble	.L44
 113:StepSequencer.cpp ****     }
 1285              		.loc 18 113 9 is_stmt 1 view .LVU355
 113:StepSequencer.cpp ****     }
 1286              		.loc 18 113 15 is_stmt 0 view .LVU356
 1287 005a 504B     		ldr	r3, .L57+36
 1288 005c 03EB8603 		add	r3, r3, r6, lsl #2
 1289 0060 83ED000A 		vstr.32	s0, [r3]
 1290              	.L44:
 1291              	.LVL47:
 113:StepSequencer.cpp ****     }
 1292              		.loc 18 113 15 view .LVU357
 1293              	.LBE570:
 1294              	.LBE564:
 169:StepSequencer.cpp **** 
 170:StepSequencer.cpp ****         int temp = (int)pitchParam.Process();
 1295              		.loc 18 170 9 is_stmt 1 view .LVU358
 171:StepSequencer.cpp ****         ConditionalParameter(
 1296              		.loc 18 171 29 is_stmt 0 view .LVU359
 1297 0064 4E4E     		ldr	r6, .L57+40
 170:StepSequencer.cpp ****         ConditionalParameter(
 1298              		.loc 18 170 43 view .LVU360
 1299 0066 4F48     		ldr	r0, .L57+44
 1300 0068 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 1301              	.LVL48:
 1302              	.LBB571:
 1303              	.LBB572:
 111:StepSequencer.cpp ****     {
 1304              		.loc 18 111 11 view .LVU361
 1305 006c D4ED007A 		vldr.32	s15, [r4]
 1306              	.LVL49:
 111:StepSequencer.cpp ****     {
 1307              		.loc 18 111 11 view .LVU362
 1308              	.LBE572:
 1309              	.LBE571:
 1310              		.loc 18 171 9 is_stmt 1 view .LVU363
 1311              	.LBB582:
 1312              	.LBB577:
 111:StepSequencer.cpp ****     {
 1313              		.loc 18 111 11 is_stmt 0 view .LVU364
 1314 0070 96ED007A 		vldr.32	s14, [r6]
 1315              	.LBE577:
 1316              	.LBE582:
 172:StepSequencer.cpp ****             oldk2, k2, pitch[step], pent[temp % 5] * (temp / (int)5 + 1));
ARM GAS  /tmp/cckObu0D.s 			page 45


 1317              		.loc 18 172 30 view .LVU365
 1318 0074 98F800C0 		ldrb	ip, [r8]	@ zero_extendqisi2
 1319              	.LVL50:
 1320              	.LBB583:
 1321              	.LBI571:
 109:StepSequencer.cpp **** {
 1322              		.loc 18 109 6 is_stmt 1 view .LVU366
 1323              	.LBB578:
 111:StepSequencer.cpp ****     {
 1324              		.loc 18 111 5 view .LVU367
 1325              	.LBB573:
 1326              	.LBI573:
  75:/usr/include/newlib/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1327              		.loc 19 75 3 view .LVU368
 1328              	.LBB574:
 1329              		.loc 19 76 5 view .LVU369
 1330              		.loc 19 76 5 is_stmt 0 view .LVU370
 1331              	.LBE574:
 1332              	.LBE573:
 111:StepSequencer.cpp ****     {
 1333              		.loc 18 111 11 view .LVU371
 1334 0078 37EE677A 		vsub.f32	s14, s14, s15
 1335              	.LVL51:
 111:StepSequencer.cpp ****     {
 1336              		.loc 18 111 5 view .LVU372
 1337 007c 9FED3E6B 		vldr.64	d6, .L57
 1338              	.LBB576:
 1339              	.LBB575:
 1340              		.loc 19 76 31 view .LVU373
 1341 0080 B0EEC77A 		vabs.f32	s14, s14
 1342              	.LBE575:
 1343              	.LBE576:
 111:StepSequencer.cpp ****     {
 1344              		.loc 18 111 11 view .LVU374
 1345 0084 B7EEC77A 		vcvt.f64.f32	d7, s14
 111:StepSequencer.cpp ****     {
 1346              		.loc 18 111 5 view .LVU375
 1347 0088 B4EEC67B 		vcmpe.f64	d7, d6
 1348 008c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1349 0090 50DC     		bgt	.L46
 1350 0092 454B     		ldr	r3, .L57+48
 1351 0094 03EB8C03 		add	r3, r3, ip, lsl #2
 1352 0098 93ED000A 		vldr.32	s0, [r3]
 1353              	.LVL52:
 1354              	.L47:
 111:StepSequencer.cpp ****     {
 1355              		.loc 18 111 5 view .LVU376
 1356              	.LBE578:
 1357              	.LBE583:
 173:StepSequencer.cpp ****         osc.SetFreq(pitch[step]);
 1358              		.loc 18 173 9 is_stmt 1 view .LVU377
 1359              	.LBB584:
 1360              	.LBI584:
  58:../../DaisySP/Source/Synthesis/oscillator.h ****     {
 1361              		.loc 15 58 17 view .LVU378
 1362              	.LBB585:
  60:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
ARM GAS  /tmp/cckObu0D.s 			page 46


 1363              		.loc 15 60 9 view .LVU379
  60:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 1364              		.loc 15 60 20 is_stmt 0 view .LVU380
 1365 009c DFF82881 		ldr	r8, .L57+80
  61:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1366              		.loc 15 61 34 view .LVU381
 1367 00a0 4046     		mov	r0, r8
  60:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 1368              		.loc 15 60 20 view .LVU382
 1369 00a2 88ED020A 		vstr.32	s0, [r8, #8]
  61:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1370              		.loc 15 61 9 is_stmt 1 view .LVU383
  61:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1371              		.loc 15 61 34 is_stmt 0 view .LVU384
 1372 00a6 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 1373              	.LVL53:
  61:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1374              		.loc 15 61 20 view .LVU385
 1375 00aa 88ED060A 		vstr.32	s0, [r8, #24]
  62:../../DaisySP/Source/Synthesis/oscillator.h **** 
 1376              		.loc 15 62 5 view .LVU386
 1377 00ae 39E0     		b	.L48
 1378              	.LVL54:
 1379              	.L43:
  62:../../DaisySP/Source/Synthesis/oscillator.h **** 
 1380              		.loc 15 62 5 view .LVU387
 1381              	.LBE585:
 1382              	.LBE584:
 1383              	.LBE589:
 174:StepSequencer.cpp ****     }
 175:StepSequencer.cpp **** 
 176:StepSequencer.cpp ****     else
 177:StepSequencer.cpp ****     {
 178:StepSequencer.cpp ****         ConditionalParameter(oldk1, k1, tickFrequency, tickFreqParam.Process());
 1384              		.loc 18 178 9 is_stmt 1 view .LVU388
 1385              		.loc 18 178 29 is_stmt 0 view .LVU389
 1386 00b0 D5ED008A 		vldr.32	s17, [r5]
 1387 00b4 97ED008A 		vldr.32	s16, [r7]
 1388 00b8 3C48     		ldr	r0, .L57+52
 1389 00ba FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 1390              	.LVL55:
 1391              	.LBB590:
 1392              	.LBB591:
 111:StepSequencer.cpp ****     {
 1393              		.loc 18 111 11 view .LVU390
 1394 00be 38EE688A 		vsub.f32	s16, s16, s17
 1395              	.LVL56:
 111:StepSequencer.cpp ****     {
 1396              		.loc 18 111 11 view .LVU391
 1397              	.LBE591:
 1398              	.LBI590:
 109:StepSequencer.cpp **** {
 1399              		.loc 18 109 6 is_stmt 1 view .LVU392
 1400              	.LBB596:
 111:StepSequencer.cpp ****     {
 1401              		.loc 18 111 5 view .LVU393
 1402              	.LBB592:
ARM GAS  /tmp/cckObu0D.s 			page 47


 1403              	.LBI592:
  75:/usr/include/newlib/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1404              		.loc 19 75 3 view .LVU394
 1405              	.LBB593:
 1406              		.loc 19 76 5 view .LVU395
 1407              		.loc 19 76 5 is_stmt 0 view .LVU396
 1408              	.LBE593:
 1409              	.LBE592:
 1410              	.LBE596:
 1411              	.LBE590:
 179:StepSequencer.cpp ****         ConditionalParameter(
 1412              		.loc 18 179 29 view .LVU397
 1413 00c2 374E     		ldr	r6, .L57+40
 1414              	.LBB600:
 1415              	.LBB597:
 113:StepSequencer.cpp ****     }
 1416              		.loc 18 113 15 view .LVU398
 1417 00c4 DFF80491 		ldr	r9, .L57+84
 113:StepSequencer.cpp ****     }
 1418              		.loc 18 113 9 is_stmt 1 view .LVU399
 1419              	.LBB595:
 1420              	.LBB594:
 1421              		.loc 19 76 31 is_stmt 0 view .LVU400
 1422 00c8 B0EEC88A 		vabs.f32	s16, s16
 1423              	.LBE594:
 1424              	.LBE595:
 1425              	.LBE597:
 1426              	.LBE600:
 1427              		.loc 18 179 29 view .LVU401
 1428 00cc 3848     		ldr	r0, .L57+56
 1429              	.LBB601:
 1430              	.LBB602:
 113:StepSequencer.cpp ****     }
 1431              		.loc 18 113 15 view .LVU402
 1432 00ce DFF80081 		ldr	r8, .L57+88
 1433              	.LBE602:
 1434              	.LBE601:
 1435              	.LBB610:
 1436              	.LBB598:
 111:StepSequencer.cpp ****     {
 1437              		.loc 18 111 5 view .LVU403
 1438 00d2 9FED296B 		vldr.64	d6, .L57
 111:StepSequencer.cpp ****     {
 1439              		.loc 18 111 11 view .LVU404
 1440 00d6 B7EEC88A 		vcvt.f64.f32	d8, s16
 111:StepSequencer.cpp ****     {
 1441              		.loc 18 111 5 view .LVU405
 1442 00da B4EEC68B 		vcmpe.f64	d8, d6
 1443              	.LBE598:
 1444              	.LBE610:
 1445              		.loc 18 179 29 view .LVU406
 1446 00de D4ED008A 		vldr.32	s17, [r4]
 1447              	.LVL57:
 1448              		.loc 18 179 29 view .LVU407
 1449 00e2 96ED008A 		vldr.32	s16, [r6]
 1450              	.LBB611:
 1451              	.LBB599:
ARM GAS  /tmp/cckObu0D.s 			page 48


 111:StepSequencer.cpp ****     {
 1452              		.loc 18 111 5 view .LVU408
 1453 00e6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 113:StepSequencer.cpp ****     }
 1454              		.loc 18 113 15 view .LVU409
 1455 00ea C8BF     		it	gt
 1456 00ec 89ED000A 		vstrgt.32	s0, [r9]
 1457              	.LVL58:
 113:StepSequencer.cpp ****     }
 1458              		.loc 18 113 15 view .LVU410
 1459              	.LBE599:
 1460              	.LBE611:
 1461              		.loc 18 179 9 is_stmt 1 view .LVU411
 1462              		.loc 18 179 29 is_stmt 0 view .LVU412
 1463 00f0 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 1464              	.LVL59:
 1465              	.LBB612:
 1466              	.LBB607:
 111:StepSequencer.cpp ****     {
 1467              		.loc 18 111 11 view .LVU413
 1468 00f4 38EE688A 		vsub.f32	s16, s16, s17
 1469              	.LVL60:
 111:StepSequencer.cpp ****     {
 1470              		.loc 18 111 11 view .LVU414
 1471              	.LBE607:
 1472              	.LBI601:
 109:StepSequencer.cpp **** {
 1473              		.loc 18 109 6 is_stmt 1 view .LVU415
 1474              	.LBB608:
 111:StepSequencer.cpp ****     {
 1475              		.loc 18 111 5 view .LVU416
 1476              	.LBB603:
 1477              	.LBI603:
  75:/usr/include/newlib/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1478              		.loc 19 75 3 view .LVU417
 1479              	.LBB604:
 1480              		.loc 19 76 5 view .LVU418
 1481              		.loc 19 76 5 is_stmt 0 view .LVU419
 1482              	.LBE604:
 1483              	.LBE603:
 113:StepSequencer.cpp ****     }
 1484              		.loc 18 113 9 is_stmt 1 view .LVU420
 113:StepSequencer.cpp ****     }
 1485              		.loc 18 113 9 is_stmt 0 view .LVU421
 1486              	.LBE608:
 1487              	.LBE612:
 180:StepSequencer.cpp ****             oldk2, k2, filterFrequency, filterFreqParam.Process());
 181:StepSequencer.cpp **** 
 182:StepSequencer.cpp ****         tick.SetFreq(tickFrequency);
 1488              		.loc 18 182 9 is_stmt 1 view .LVU422
 1489              		.loc 18 182 21 is_stmt 0 view .LVU423
 1490 00f8 2E48     		ldr	r0, .L57+60
 1491              	.LBB613:
 1492              	.LBB609:
 111:StepSequencer.cpp ****     {
 1493              		.loc 18 111 5 view .LVU424
 1494 00fa 9FED1F6B 		vldr.64	d6, .L57
ARM GAS  /tmp/cckObu0D.s 			page 49


 1495              	.LBB606:
 1496              	.LBB605:
 1497              		.loc 19 76 31 view .LVU425
 1498 00fe B0EEC88A 		vabs.f32	s16, s16
 1499              	.LBE605:
 1500              	.LBE606:
 111:StepSequencer.cpp ****     {
 1501              		.loc 18 111 11 view .LVU426
 1502 0102 B7EEC88A 		vcvt.f64.f32	d8, s16
 111:StepSequencer.cpp ****     {
 1503              		.loc 18 111 5 view .LVU427
 1504 0106 B4EEC68B 		vcmpe.f64	d8, d6
 1505 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 113:StepSequencer.cpp ****     }
 1506              		.loc 18 113 15 view .LVU428
 1507 010e C8BF     		it	gt
 1508 0110 88ED000A 		vstrgt.32	s0, [r8]
 1509              	.LBE609:
 1510              	.LBE613:
 1511              		.loc 18 182 21 view .LVU429
 1512 0114 99ED000A 		vldr.32	s0, [r9]
 1513 0118 FFF7FEFF 		bl	_ZN7daisysp5Metro7SetFreqEf
 1514              	.LVL61:
 183:StepSequencer.cpp ****         flt.SetFreq(filterFrequency);
 1515              		.loc 18 183 9 is_stmt 1 view .LVU430
 1516              	.LBB614:
 1517              	.LBI614:
  37:../../DaisySP/Source/Filters/moogladder.h ****     /** 
 1518              		.loc 16 37 17 view .LVU431
 1519              	.LBB615:
  37:../../DaisySP/Source/Filters/moogladder.h ****     /** 
 1520              		.loc 16 37 39 view .LVU432
  37:../../DaisySP/Source/Filters/moogladder.h ****     /** 
 1521              		.loc 16 37 45 is_stmt 0 view .LVU433
 1522 011c D8F80020 		ldr	r2, [r8]	@ float
 1523 0120 254B     		ldr	r3, .L57+64
 1524 0122 9A60     		str	r2, [r3, #8]	@ float
 1525              	.LVL62:
 1526              	.L48:
  37:../../DaisySP/Source/Filters/moogladder.h ****     /** 
 1527              		.loc 16 37 45 view .LVU434
 1528              	.LBE615:
 1529              	.LBE614:
 1530              	.LBE618:
 184:StepSequencer.cpp ****     }
 185:StepSequencer.cpp **** 
 186:StepSequencer.cpp ****     oldk1 = k1;
 1531              		.loc 18 186 5 is_stmt 1 view .LVU435
 1532              		.loc 18 186 11 is_stmt 0 view .LVU436
 1533 0124 2A68     		ldr	r2, [r5]	@ float
 187:StepSequencer.cpp ****     oldk2 = k2;
 1534              		.loc 18 187 11 view .LVU437
 1535 0126 2368     		ldr	r3, [r4]	@ float
 186:StepSequencer.cpp ****     oldk2 = k2;
 1536              		.loc 18 186 11 view .LVU438
 1537 0128 3A60     		str	r2, [r7]	@ float
 1538              		.loc 18 187 5 is_stmt 1 view .LVU439
ARM GAS  /tmp/cckObu0D.s 			page 50


 1539              		.loc 18 187 11 is_stmt 0 view .LVU440
 1540 012a 3360     		str	r3, [r6]	@ float
 188:StepSequencer.cpp **** }
 1541              		.loc 18 188 1 view .LVU441
 1542 012c BDEC028B 		vldm	sp!, {d8}
 1543              		.cfi_remember_state
 1544              		.cfi_restore 80
 1545              		.cfi_restore 81
 1546              		.cfi_def_cfa_offset 32
 1547 0130 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1548              	.LVL63:
 1549              	.L46:
 1550              		.cfi_restore_state
 1551              	.LBB619:
 1552              	.LBB616:
 170:StepSequencer.cpp ****         ConditionalParameter(
 1553              		.loc 18 170 44 view .LVU442
 1554 0134 FDEEC07A 		vcvt.s32.f32	s15, s0
 1555              	.LVL64:
 172:StepSequencer.cpp ****         osc.SetFreq(pitch[step]);
 1556              		.loc 18 172 60 view .LVU443
 1557 0138 2049     		ldr	r1, .L57+68
 172:StepSequencer.cpp ****         osc.SetFreq(pitch[step]);
 1558              		.loc 18 172 50 view .LVU444
 1559 013a 2148     		ldr	r0, .L57+72
 170:StepSequencer.cpp ****         ConditionalParameter(
 1560              		.loc 18 170 44 view .LVU445
 1561 013c 17EE902A 		vmov	r2, s15	@ int
 172:StepSequencer.cpp ****         osc.SetFreq(pitch[step]);
 1562              		.loc 18 172 60 view .LVU446
 1563 0140 81FB0231 		smull	r3, r1, r1, r2
 1564 0144 D317     		asrs	r3, r2, #31
 1565 0146 C3EB6103 		rsb	r3, r3, r1, asr #1
 1566              	.LBB586:
 1567              	.LBB579:
 113:StepSequencer.cpp ****     }
 1568              		.loc 18 113 15 view .LVU447
 1569 014a 1749     		ldr	r1, .L57+48
 1570              	.LBE579:
 1571              	.LBE586:
 172:StepSequencer.cpp ****         osc.SetFreq(pitch[step]);
 1572              		.loc 18 172 47 view .LVU448
 1573 014c 03EB830E 		add	lr, r3, r3, lsl #2
 172:StepSequencer.cpp ****         osc.SetFreq(pitch[step]);
 1574              		.loc 18 172 69 view .LVU449
 1575 0150 0133     		adds	r3, r3, #1
 172:StepSequencer.cpp ****         osc.SetFreq(pitch[step]);
 1576              		.loc 18 172 47 view .LVU450
 1577 0152 A2EB0E02 		sub	r2, r2, lr
 172:StepSequencer.cpp ****         osc.SetFreq(pitch[step]);
 1578              		.loc 18 172 69 view .LVU451
 1579 0156 00EE103A 		vmov	s0, r3	@ int
 1580              	.LVL65:
 1581              	.LBB587:
 1582              	.LBB580:
 113:StepSequencer.cpp ****     }
 1583              		.loc 18 113 15 view .LVU452
ARM GAS  /tmp/cckObu0D.s 			page 51


 1584 015a 01EB8C03 		add	r3, r1, ip, lsl #2
 1585              	.LBE580:
 1586              	.LBE587:
 172:StepSequencer.cpp ****         osc.SetFreq(pitch[step]);
 1587              		.loc 18 172 50 view .LVU453
 1588 015e 00EB8202 		add	r2, r0, r2, lsl #2
 171:StepSequencer.cpp ****             oldk2, k2, pitch[step], pent[temp % 5] * (temp / (int)5 + 1));
 1589              		.loc 18 171 29 view .LVU454
 1590 0162 B8EEC00A 		vcvt.f32.s32	s0, s0
 1591 0166 D2ED007A 		vldr.32	s15, [r2]
 1592 016a 20EE270A 		vmul.f32	s0, s0, s15
 1593              	.LBB588:
 1594              	.LBB581:
 113:StepSequencer.cpp ****     }
 1595              		.loc 18 113 9 is_stmt 1 view .LVU455
 113:StepSequencer.cpp ****     }
 1596              		.loc 18 113 15 is_stmt 0 view .LVU456
 1597 016e 83ED000A 		vstr.32	s0, [r3]
 1598 0172 93E7     		b	.L47
 1599              	.L58:
 1600 0174 AFF30080 		.align	3
 1601              	.L57:
 1602 0178 FCA9F1D2 		.word	3539053052
 1603 017c 4D62403F 		.word	1061184077
 1604 0180 5C000000 		.word	pod+92
 1605 0184 00000000 		.word	.LANCHOR3
 1606 0188 00000000 		.word	.LANCHOR2
 1607 018c 00000000 		.word	.LANCHOR13
 1608 0190 7C000000 		.word	pod+124
 1609 0194 00000000 		.word	.LANCHOR14
 1610 0198 00000000 		.word	.LANCHOR8
 1611 019c 00000000 		.word	.LANCHOR19
 1612 01a0 00000000 		.word	.LANCHOR12
 1613 01a4 00000000 		.word	.LANCHOR9
 1614 01a8 00000000 		.word	.LANCHOR21
 1615 01ac 00000000 		.word	.LANCHOR10
 1616 01b0 00000000 		.word	.LANCHOR11
 1617 01b4 00000000 		.word	.LANCHOR6
 1618 01b8 00000000 		.word	.LANCHOR7
 1619 01bc 67666666 		.word	1717986919
 1620 01c0 00000000 		.word	.LANCHOR23
 1621 01c4 00000000 		.word	.LANCHOR16
 1622 01c8 00000000 		.word	.LANCHOR4
 1623 01cc 00000000 		.word	.LANCHOR0
 1624 01d0 00000000 		.word	.LANCHOR1
 1625              	.LBE581:
 1626              	.LBE588:
 1627              	.LBE616:
 1628              	.LBE619:
 1629              		.cfi_endproc
 1630              	.LFE4225:
 1632              		.section	.text._Z13UpdateLedEditv,"ax",%progbits
 1633              		.align	1
 1634              		.p2align 2,,3
 1635              		.global	_Z13UpdateLedEditv
 1636              		.syntax unified
 1637              		.thumb
ARM GAS  /tmp/cckObu0D.s 			page 52


 1638              		.thumb_func
 1639              		.fpu fpv5-d16
 1641              	_Z13UpdateLedEditv:
 1642              	.LFB4226:
 189:StepSequencer.cpp **** 
 190:StepSequencer.cpp **** void UpdateLedEdit()
 191:StepSequencer.cpp **** {
 1643              		.loc 18 191 1 is_stmt 1 view -0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 24
 1646              		@ frame_needed = 0, uses_anonymous_args = 0
 192:StepSequencer.cpp ****     Color cur_color = colors[step];
 1647              		.loc 18 192 5 view .LVU458
 191:StepSequencer.cpp ****     Color cur_color = colors[step];
 1648              		.loc 18 191 1 is_stmt 0 view .LVU459
 1649 0000 70B5     		push	{r4, r5, r6, lr}
 1650              		.cfi_def_cfa_offset 16
 1651              		.cfi_offset 4, -16
 1652              		.cfi_offset 5, -12
 1653              		.cfi_offset 6, -8
 1654              		.cfi_offset 14, -4
 1655              		.loc 18 192 30 view .LVU460
 1656 0002 194E     		ldr	r6, .L63
 191:StepSequencer.cpp ****     Color cur_color = colors[step];
 1657              		.loc 18 191 1 view .LVU461
 1658 0004 86B0     		sub	sp, sp, #24
 1659              		.cfi_def_cfa_offset 40
 1660              		.loc 18 192 11 view .LVU462
 1661 0006 194B     		ldr	r3, .L63+4
 1662              		.loc 18 192 30 view .LVU463
 1663 0008 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 193:StepSequencer.cpp ****     pod.led1.SetColor(cur_color);
 1664              		.loc 18 193 22 view .LVU464
 1665 000a 03AD     		add	r5, sp, #12
 192:StepSequencer.cpp ****     Color cur_color = colors[step];
 1666              		.loc 18 192 11 view .LVU465
 1667 000c 6C46     		mov	r4, sp
 1668 000e 02EB4202 		add	r2, r2, r2, lsl #1
 1669 0012 03EB8203 		add	r3, r3, r2, lsl #2
 1670 0016 93E80700 		ldm	r3, {r0, r1, r2}
 1671 001a 84E80700 		stm	r4, {r0, r1, r2}
 1672              		.loc 18 193 5 is_stmt 1 view .LVU466
 1673              		.loc 18 193 22 is_stmt 0 view .LVU467
 1674 001e 85E80700 		stm	r5, {r0, r1, r2}
 1675 0022 2946     		mov	r1, r5
 1676 0024 1248     		ldr	r0, .L63+8
 1677 0026 FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 1678              	.LVL66:
 1679              	.LBB620:
 1680              	.LBI620:
 1681              		.file 20 "../../libdaisy/src/util/color.h"
   1:../../libdaisy/src/util/color.h **** /* 
   2:../../libdaisy/src/util/color.h **** TODO:
   3:../../libdaisy/src/util/color.h **** - Add Blend(), Scale(), etc.
   4:../../libdaisy/src/util/color.h **** - I'd also like to change the way the Color names are accessed.
   5:../../libdaisy/src/util/color.h **** */
   6:../../libdaisy/src/util/color.h **** /**        I'd like for it to be easy and not `Color::PresetColor::Foo`
ARM GAS  /tmp/cckObu0D.s 			page 53


   7:../../libdaisy/src/util/color.h **** */
   8:../../libdaisy/src/util/color.h **** /** - There's no way to change a color once its been created (without unintuitively reiniting it).
   9:../../libdaisy/src/util/color.h **** */
  10:../../libdaisy/src/util/color.h **** #pragma once
  11:../../libdaisy/src/util/color.h **** #ifndef DSY_COLOR_H
  12:../../libdaisy/src/util/color.h **** #define DSY_COLOR_H
  13:../../libdaisy/src/util/color.h **** #include <stdint.h>
  14:../../libdaisy/src/util/color.h **** 
  15:../../libdaisy/src/util/color.h **** 
  16:../../libdaisy/src/util/color.h **** namespace daisy
  17:../../libdaisy/src/util/color.h **** {
  18:../../libdaisy/src/util/color.h **** /** @addtogroup utility
  19:../../libdaisy/src/util/color.h ****     @{
  20:../../libdaisy/src/util/color.h **** */
  21:../../libdaisy/src/util/color.h **** 
  22:../../libdaisy/src/util/color.h **** /** Class for handling simple colors */
  23:../../libdaisy/src/util/color.h **** class Color
  24:../../libdaisy/src/util/color.h **** {
  25:../../libdaisy/src/util/color.h ****   public:
  26:../../libdaisy/src/util/color.h ****     Color() {}
  27:../../libdaisy/src/util/color.h ****     ~Color() {}
 1682              		.loc 20 27 5 is_stmt 1 view .LVU468
 1683              		.loc 20 27 5 is_stmt 0 view .LVU469
 1684              	.LBE620:
 194:StepSequencer.cpp **** 
 195:StepSequencer.cpp ****     if(active[step])
 1685              		.loc 18 195 5 is_stmt 1 view .LVU470
 1686              		.loc 18 195 15 is_stmt 0 view .LVU471
 1687 002a 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 1688              		.loc 18 195 19 view .LVU472
 1689 002c 114A     		ldr	r2, .L63+12
 1690              		.loc 18 195 5 view .LVU473
 1691 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1692 0030 63B1     		cbz	r3, .L60
 196:StepSequencer.cpp ****     {
 197:StepSequencer.cpp ****         pod.led2.SetColor(cur_color);
 1693              		.loc 18 197 9 is_stmt 1 view .LVU474
 1694              		.loc 18 197 26 is_stmt 0 view .LVU475
 1695 0032 94E80700 		ldm	r4, {r0, r1, r2}
 1696 0036 85E80700 		stm	r5, {r0, r1, r2}
 1697 003a 2946     		mov	r1, r5
 1698 003c 0E48     		ldr	r0, .L63+16
 1699 003e FFF7FEFF 		bl	_ZN5daisy6RgbLed8SetColorENS_5ColorE
 1700              	.LVL67:
 1701              	.LBB621:
 1702              	.LBI621:
 1703              		.loc 20 27 5 is_stmt 1 view .LVU476
 1704              		.loc 20 27 5 is_stmt 0 view .LVU477
 1705              	.LBE621:
 198:StepSequencer.cpp ****     }
 199:StepSequencer.cpp **** 
 200:StepSequencer.cpp ****     else
 201:StepSequencer.cpp ****     {
 202:StepSequencer.cpp ****         pod.led2.Set(0, 0, 0);
 203:StepSequencer.cpp ****     }
 204:StepSequencer.cpp **** 
 205:StepSequencer.cpp ****     pod.UpdateLeds();
ARM GAS  /tmp/cckObu0D.s 			page 54


 1706              		.loc 18 205 5 is_stmt 1 view .LVU478
 1707              		.loc 18 205 19 is_stmt 0 view .LVU479
 1708 0042 0E48     		ldr	r0, .L63+20
 1709 0044 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10UpdateLedsEv
 1710              	.LVL68:
 1711              	.LBB622:
 1712              	.LBI622:
 1713              		.loc 20 27 5 is_stmt 1 view .LVU480
 1714              		.loc 20 27 5 is_stmt 0 view .LVU481
 1715              	.LBE622:
 206:StepSequencer.cpp **** }
 1716              		.loc 18 206 1 view .LVU482
 1717 0048 06B0     		add	sp, sp, #24
 1718              		.cfi_remember_state
 1719              		.cfi_def_cfa_offset 16
 1720              		@ sp needed
 1721 004a 70BD     		pop	{r4, r5, r6, pc}
 1722              	.L60:
 1723              		.cfi_restore_state
 202:StepSequencer.cpp ****     }
 1724              		.loc 18 202 9 is_stmt 1 view .LVU483
 202:StepSequencer.cpp ****     }
 1725              		.loc 18 202 21 is_stmt 0 view .LVU484
 1726 004c 9FED0C1A 		vldr.32	s2, .L63+24
 1727 0050 0948     		ldr	r0, .L63+16
 1728 0052 F0EE410A 		vmov.f32	s1, s2
 1729 0056 B0EE410A 		vmov.f32	s0, s2
 1730 005a FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 1731              	.LVL69:
 205:StepSequencer.cpp **** }
 1732              		.loc 18 205 5 is_stmt 1 view .LVU485
 205:StepSequencer.cpp **** }
 1733              		.loc 18 205 19 is_stmt 0 view .LVU486
 1734 005e 0748     		ldr	r0, .L63+20
 1735 0060 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10UpdateLedsEv
 1736              	.LVL70:
 1737              	.LBB623:
 1738              		.loc 20 27 5 is_stmt 1 view .LVU487
 1739              		.loc 20 27 5 is_stmt 0 view .LVU488
 1740              	.LBE623:
 1741              		.loc 18 206 1 view .LVU489
 1742 0064 06B0     		add	sp, sp, #24
 1743              		.cfi_def_cfa_offset 16
 1744              		@ sp needed
 1745 0066 70BD     		pop	{r4, r5, r6, pc}
 1746              	.L64:
 1747              		.align	2
 1748              	.L63:
 1749 0068 00000000 		.word	.LANCHOR16
 1750 006c 00000000 		.word	.LANCHOR22
 1751 0070 CC000000 		.word	pod+204
 1752 0074 00000000 		.word	.LANCHOR20
 1753 0078 20010000 		.word	pod+288
 1754 007c 00000000 		.word	pod
 1755 0080 00000000 		.word	0
 1756              		.cfi_endproc
 1757              	.LFE4226:
ARM GAS  /tmp/cckObu0D.s 			page 55


 1759              		.section	.text._Z10UpdateLedsv,"ax",%progbits
 1760              		.align	1
 1761              		.p2align 2,,3
 1762              		.global	_Z10UpdateLedsv
 1763              		.syntax unified
 1764              		.thumb
 1765              		.thumb_func
 1766              		.fpu fpv5-d16
 1768              	_Z10UpdateLedsv:
 1769              	.LFB4227:
 207:StepSequencer.cpp **** 
 208:StepSequencer.cpp **** void UpdateLeds()
 209:StepSequencer.cpp **** {
 1770              		.loc 18 209 1 is_stmt 1 view -0
 1771              		.cfi_startproc
 1772              		@ args = 0, pretend = 0, frame = 0
 1773              		@ frame_needed = 0, uses_anonymous_args = 0
 210:StepSequencer.cpp ****     if(edit)
 1774              		.loc 18 210 5 view .LVU491
 1775 0000 114B     		ldr	r3, .L69
 1776 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 209:StepSequencer.cpp ****     if(edit)
 1777              		.loc 18 209 1 is_stmt 0 view .LVU492
 1778 0004 10B5     		push	{r4, lr}
 1779              		.cfi_def_cfa_offset 8
 1780              		.cfi_offset 4, -8
 1781              		.cfi_offset 14, -4
 1782              		.loc 18 210 5 view .LVU493
 1783 0006 33B1     		cbz	r3, .L66
 211:StepSequencer.cpp ****     {
 212:StepSequencer.cpp ****         UpdateLedEdit();
 1784              		.loc 18 212 9 is_stmt 1 view .LVU494
 1785              		.loc 18 212 22 is_stmt 0 view .LVU495
 1786 0008 FFF7FEFF 		bl	_Z13UpdateLedEditv
 1787              	.LVL71:
 213:StepSequencer.cpp ****     }
 214:StepSequencer.cpp ****     else
 215:StepSequencer.cpp ****     {
 216:StepSequencer.cpp ****         pod.led2.Set(0, env_out, 0);
 217:StepSequencer.cpp ****         pod.led1.Set(0, env_out, 0);
 218:StepSequencer.cpp ****     }
 219:StepSequencer.cpp ****     pod.UpdateLeds();
 1788              		.loc 18 219 5 is_stmt 1 view .LVU496
 1789              		.loc 18 219 19 is_stmt 0 view .LVU497
 1790 000c 0F48     		ldr	r0, .L69+4
 220:StepSequencer.cpp **** }
 1791              		.loc 18 220 1 view .LVU498
 1792 000e BDE81040 		pop	{r4, lr}
 1793              		.cfi_remember_state
 1794              		.cfi_restore 14
 1795              		.cfi_restore 4
 1796              		.cfi_def_cfa_offset 0
 219:StepSequencer.cpp **** }
 1797              		.loc 18 219 19 view .LVU499
 1798 0012 FFF7FEBF 		b	_ZN5daisy8DaisyPod10UpdateLedsEv
 1799              	.LVL72:
 1800              	.L66:
ARM GAS  /tmp/cckObu0D.s 			page 56


 1801              		.cfi_restore_state
 216:StepSequencer.cpp ****         pod.led1.Set(0, env_out, 0);
 1802              		.loc 18 216 9 is_stmt 1 view .LVU500
 216:StepSequencer.cpp ****         pod.led1.Set(0, env_out, 0);
 1803              		.loc 18 216 21 is_stmt 0 view .LVU501
 1804 0016 0E4C     		ldr	r4, .L69+8
 1805 0018 9FED0E1A 		vldr.32	s2, .L69+12
 1806 001c D4ED000A 		vldr.32	s1, [r4]
 1807 0020 B0EE410A 		vmov.f32	s0, s2
 1808 0024 0C48     		ldr	r0, .L69+16
 1809 0026 FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 1810              	.LVL73:
 217:StepSequencer.cpp ****     }
 1811              		.loc 18 217 9 is_stmt 1 view .LVU502
 217:StepSequencer.cpp ****     }
 1812              		.loc 18 217 21 is_stmt 0 view .LVU503
 1813 002a 9FED0A1A 		vldr.32	s2, .L69+12
 1814 002e D4ED000A 		vldr.32	s1, [r4]
 1815 0032 0A48     		ldr	r0, .L69+20
 1816 0034 B0EE410A 		vmov.f32	s0, s2
 1817 0038 FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 1818              	.LVL74:
 219:StepSequencer.cpp **** }
 1819              		.loc 18 219 5 is_stmt 1 view .LVU504
 219:StepSequencer.cpp **** }
 1820              		.loc 18 219 19 is_stmt 0 view .LVU505
 1821 003c 0348     		ldr	r0, .L69+4
 1822              		.loc 18 220 1 view .LVU506
 1823 003e BDE81040 		pop	{r4, lr}
 1824              		.cfi_restore 14
 1825              		.cfi_restore 4
 1826              		.cfi_def_cfa_offset 0
 219:StepSequencer.cpp **** }
 1827              		.loc 18 219 19 view .LVU507
 1828 0042 FFF7FEBF 		b	_ZN5daisy8DaisyPod10UpdateLedsEv
 1829              	.LVL75:
 1830              	.L70:
 1831 0046 00BF     		.align	2
 1832              	.L69:
 1833 0048 00000000 		.word	.LANCHOR14
 1834 004c 00000000 		.word	pod
 1835 0050 00000000 		.word	.LANCHOR17
 1836 0054 00000000 		.word	0
 1837 0058 20010000 		.word	pod+288
 1838 005c CC000000 		.word	pod+204
 1839              		.cfi_endproc
 1840              	.LFE4227:
 1842              		.section	.text._Z8Controlsv,"ax",%progbits
 1843              		.align	1
 1844              		.p2align 2,,3
 1845              		.global	_Z8Controlsv
 1846              		.syntax unified
 1847              		.thumb
 1848              		.thumb_func
 1849              		.fpu fpv5-d16
 1851              	_Z8Controlsv:
 1852              	.LFB4228:
ARM GAS  /tmp/cckObu0D.s 			page 57


 221:StepSequencer.cpp **** 
 222:StepSequencer.cpp **** void Controls()
 223:StepSequencer.cpp **** {
 1853              		.loc 18 223 1 is_stmt 1 view -0
 1854              		.cfi_startproc
 1855              		@ args = 0, pretend = 0, frame = 0
 1856              		@ frame_needed = 0, uses_anonymous_args = 0
 224:StepSequencer.cpp ****     pod.ProcessDigitalControls();
 1857              		.loc 18 224 5 view .LVU509
 223:StepSequencer.cpp ****     pod.ProcessDigitalControls();
 1858              		.loc 18 223 1 is_stmt 0 view .LVU510
 1859 0000 10B5     		push	{r4, lr}
 1860              		.cfi_def_cfa_offset 8
 1861              		.cfi_offset 4, -8
 1862              		.cfi_offset 14, -4
 1863              		.loc 18 224 31 view .LVU511
 1864 0002 114C     		ldr	r4, .L76
 1865 0004 2046     		mov	r0, r4
 1866 0006 FFF7FEFF 		bl	_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
 1867              	.LVL76:
 225:StepSequencer.cpp ****     pod.ProcessAnalogControls();
 1868              		.loc 18 225 5 is_stmt 1 view .LVU512
 1869              		.loc 18 225 30 is_stmt 0 view .LVU513
 1870 000a 2046     		mov	r0, r4
 1871 000c FFF7FEFF 		bl	_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
 1872              	.LVL77:
 226:StepSequencer.cpp **** 
 227:StepSequencer.cpp ****     UpdateEncoderPressed();
 1873              		.loc 18 227 5 is_stmt 1 view .LVU514
 1874              	.LBB624:
 1875              	.LBI624:
 117:StepSequencer.cpp **** {
 1876              		.loc 18 117 6 view .LVU515
 1877              	.LBB625:
 120:StepSequencer.cpp ****     {
 1878              		.loc 18 120 5 view .LVU516
 1879              	.LBB626:
 1880              	.LBI626:
 1881              		.loc 8 44 17 view .LVU517
 1882              	.LBB627:
 1883              		.loc 8 44 38 view .LVU518
 1884              		.loc 8 44 38 is_stmt 0 view .LVU519
 1885              	.LBE627:
 1886              	.LBE626:
 1887              	.LBE625:
 1888              	.LBE624:
 1889              		.loc 7 69 38 is_stmt 1 view .LVU520
 1890              	.LBB630:
 1891              	.LBB628:
 120:StepSequencer.cpp ****     {
 1892              		.loc 18 120 5 is_stmt 0 view .LVU521
 1893 0010 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 1894 0014 7F2B     		cmp	r3, #127
 1895 0016 0ED0     		beq	.L72
 1896 0018 0C4B     		ldr	r3, .L76+4
 1897 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1898              	.L73:
ARM GAS  /tmp/cckObu0D.s 			page 58


 125:StepSequencer.cpp ****     {
 1899              		.loc 18 125 5 is_stmt 1 view .LVU522
 1900 001c 0BB9     		cbnz	r3, .L74
 127:StepSequencer.cpp ****     }
 1901              		.loc 18 127 9 view .LVU523
 127:StepSequencer.cpp ****     }
 1902              		.loc 18 127 19 is_stmt 0 view .LVU524
 1903 001e 0C4A     		ldr	r2, .L76+8
 1904 0020 1370     		strb	r3, [r2]
 1905              	.L74:
 1906              	.LBE628:
 1907              	.LBE630:
 228:StepSequencer.cpp **** 
 229:StepSequencer.cpp ****     UpdateEncoderIncrement();
 1908              		.loc 18 229 5 is_stmt 1 view .LVU525
 1909              		.loc 18 229 27 is_stmt 0 view .LVU526
 1910 0022 FFF7FEFF 		bl	_Z22UpdateEncoderIncrementv
 1911              	.LVL78:
 230:StepSequencer.cpp **** 
 231:StepSequencer.cpp ****     UpdateButtons();
 1912              		.loc 18 231 5 is_stmt 1 view .LVU527
 1913              		.loc 18 231 18 is_stmt 0 view .LVU528
 1914 0026 FFF7FEFF 		bl	_Z13UpdateButtonsv
 1915              	.LVL79:
 232:StepSequencer.cpp **** 
 233:StepSequencer.cpp ****     UpdateKnobs();
 1916              		.loc 18 233 5 is_stmt 1 view .LVU529
 1917              		.loc 18 233 16 is_stmt 0 view .LVU530
 1918 002a FFF7FEFF 		bl	_Z11UpdateKnobsv
 1919              	.LVL80:
 234:StepSequencer.cpp **** 
 235:StepSequencer.cpp ****     UpdateLeds();
 1920              		.loc 18 235 5 is_stmt 1 view .LVU531
 236:StepSequencer.cpp **** }
 1921              		.loc 18 236 1 is_stmt 0 view .LVU532
 1922 002e BDE81040 		pop	{r4, lr}
 1923              		.cfi_remember_state
 1924              		.cfi_restore 14
 1925              		.cfi_restore 4
 1926              		.cfi_def_cfa_offset 0
 235:StepSequencer.cpp **** }
 1927              		.loc 18 235 15 view .LVU533
 1928 0032 FFF7FEBF 		b	_Z10UpdateLedsv
 1929              	.LVL81:
 1930              	.L72:
 1931              		.cfi_restore_state
 1932              	.LBB631:
 1933              	.LBB629:
 122:StepSequencer.cpp ****         step = 0;
 1934              		.loc 18 122 9 is_stmt 1 view .LVU534
 122:StepSequencer.cpp ****         step = 0;
 1935              		.loc 18 122 16 is_stmt 0 view .LVU535
 1936 0036 054A     		ldr	r2, .L76+4
 123:StepSequencer.cpp ****     }
 1937              		.loc 18 123 14 view .LVU536
 1938 0038 0020     		movs	r0, #0
 1939 003a 0649     		ldr	r1, .L76+12
ARM GAS  /tmp/cckObu0D.s 			page 59


 122:StepSequencer.cpp ****         step = 0;
 1940              		.loc 18 122 16 view .LVU537
 1941 003c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 123:StepSequencer.cpp ****     }
 1942              		.loc 18 123 14 view .LVU538
 1943 003e 0870     		strb	r0, [r1]
 122:StepSequencer.cpp ****         step = 0;
 1944              		.loc 18 122 16 view .LVU539
 1945 0040 83F00103 		eor	r3, r3, #1
 122:StepSequencer.cpp ****         step = 0;
 1946              		.loc 18 122 14 view .LVU540
 1947 0044 1370     		strb	r3, [r2]
 123:StepSequencer.cpp ****     }
 1948              		.loc 18 123 9 is_stmt 1 view .LVU541
 1949 0046 E9E7     		b	.L73
 1950              	.L77:
 1951              		.align	2
 1952              	.L76:
 1953 0048 00000000 		.word	pod
 1954 004c 00000000 		.word	.LANCHOR14
 1955 0050 00000000 		.word	.LANCHOR15
 1956 0054 00000000 		.word	.LANCHOR16
 1957              	.LBE629:
 1958              	.LBE631:
 1959              		.cfi_endproc
 1960              	.LFE4228:
 1962              		.section	.text._Z11NextSamplesRf,"ax",%progbits
 1963              		.align	1
 1964              		.p2align 2,,3
 1965              		.global	_Z11NextSamplesRf
 1966              		.syntax unified
 1967              		.thumb
 1968              		.thumb_func
 1969              		.fpu fpv5-d16
 1971              	_Z11NextSamplesRf:
 1972              	.LVL82:
 1973              	.LFB4229:
 237:StepSequencer.cpp **** 
 238:StepSequencer.cpp **** void NextSamples(float &sig)
 239:StepSequencer.cpp **** {
 1974              		.loc 18 239 1 view -0
 1975              		.cfi_startproc
 1976              		@ args = 0, pretend = 0, frame = 0
 1977              		@ frame_needed = 0, uses_anonymous_args = 0
 240:StepSequencer.cpp ****     env_out = env.Process();
 1978              		.loc 18 240 5 view .LVU543
 239:StepSequencer.cpp ****     env_out = env.Process();
 1979              		.loc 18 239 1 is_stmt 0 view .LVU544
 1980 0000 70B5     		push	{r4, r5, r6, lr}
 1981              		.cfi_def_cfa_offset 16
 1982              		.cfi_offset 4, -16
 1983              		.cfi_offset 5, -12
 1984              		.cfi_offset 6, -8
 1985              		.cfi_offset 14, -4
 1986              		.loc 18 240 26 view .LVU545
 1987 0002 254D     		ldr	r5, .L96
 239:StepSequencer.cpp ****     env_out = env.Process();
ARM GAS  /tmp/cckObu0D.s 			page 60


 1988              		.loc 18 239 1 view .LVU546
 1989 0004 0446     		mov	r4, r0
 1990              	.LBB632:
 1991              	.LBB633:
  67:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 1992              		.loc 15 67 46 view .LVU547
 1993 0006 254E     		ldr	r6, .L96+4
 1994              	.LBE633:
 1995              	.LBE632:
 1996              		.loc 18 240 26 view .LVU548
 1997 0008 2846     		mov	r0, r5
 1998              	.LVL83:
 1999              		.loc 18 240 26 view .LVU549
 2000 000a FFF7FEFF 		bl	_ZN7daisysp5AdEnv7ProcessEv
 2001              	.LVL84:
 2002              		.loc 18 240 13 view .LVU550
 2003 000e 244B     		ldr	r3, .L96+8
 241:StepSequencer.cpp ****     osc.SetAmp(env_out);
 242:StepSequencer.cpp ****     sig = osc.Process();
 2004              		.loc 18 242 22 view .LVU551
 2005 0010 3046     		mov	r0, r6
 2006              	.LBB636:
 2007              	.LBB634:
  67:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 2008              		.loc 15 67 46 view .LVU552
 2009 0012 86ED010A 		vstr.32	s0, [r6, #4]
 2010              	.LBE634:
 2011              	.LBE636:
 240:StepSequencer.cpp ****     osc.SetAmp(env_out);
 2012              		.loc 18 240 13 view .LVU553
 2013 0016 83ED000A 		vstr.32	s0, [r3]
 241:StepSequencer.cpp ****     osc.SetAmp(env_out);
 2014              		.loc 18 241 5 is_stmt 1 view .LVU554
 2015              	.LVL85:
 2016              	.LBB637:
 2017              	.LBI632:
  67:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 2018              		.loc 15 67 17 view .LVU555
 2019              	.LBB635:
  67:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 2020              		.loc 15 67 41 view .LVU556
  67:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 2021              		.loc 15 67 41 is_stmt 0 view .LVU557
 2022              	.LBE635:
 2023              	.LBE637:
 2024              		.loc 18 242 5 is_stmt 1 view .LVU558
 2025              		.loc 18 242 22 is_stmt 0 view .LVU559
 2026 001a FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 2027              	.LVL86:
 243:StepSequencer.cpp ****     sig = flt.Process(sig);
 2028              		.loc 18 243 22 view .LVU560
 2029 001e 2148     		ldr	r0, .L96+12
 242:StepSequencer.cpp ****     sig = flt.Process(sig);
 2030              		.loc 18 242 9 view .LVU561
 2031 0020 84ED000A 		vstr.32	s0, [r4]
 2032              		.loc 18 243 5 is_stmt 1 view .LVU562
 2033              		.loc 18 243 22 is_stmt 0 view .LVU563
ARM GAS  /tmp/cckObu0D.s 			page 61


 2034 0024 FFF7FEFF 		bl	_ZN7daisysp10MoogLadder7ProcessEf
 2035              	.LVL87:
 244:StepSequencer.cpp **** 
 245:StepSequencer.cpp ****     if(tick.Process() && !edit)
 2036              		.loc 18 245 20 view .LVU564
 2037 0028 1F48     		ldr	r0, .L96+16
 243:StepSequencer.cpp **** 
 2038              		.loc 18 243 9 view .LVU565
 2039 002a 84ED000A 		vstr.32	s0, [r4]
 2040              		.loc 18 245 5 is_stmt 1 view .LVU566
 2041              		.loc 18 245 20 is_stmt 0 view .LVU567
 2042 002e FFF7FEFF 		bl	_ZN7daisysp5Metro7ProcessEv
 2043              	.LVL88:
 2044              		.loc 18 245 23 view .LVU568
 2045 0032 10B1     		cbz	r0, .L79
 2046              		.loc 18 245 26 discriminator 1 view .LVU569
 2047 0034 1D4B     		ldr	r3, .L96+20
 2048              		.loc 18 245 23 discriminator 1 view .LVU570
 2049 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2050 0038 6BB1     		cbz	r3, .L95
 2051              	.L79:
 246:StepSequencer.cpp ****     {
 247:StepSequencer.cpp ****         step++;
 248:StepSequencer.cpp ****         step %= 8;
 249:StepSequencer.cpp ****         if(active[step])
 250:StepSequencer.cpp ****         {
 251:StepSequencer.cpp ****             env.Trigger();
 252:StepSequencer.cpp ****         }
 253:StepSequencer.cpp ****     }
 254:StepSequencer.cpp **** 
 255:StepSequencer.cpp ****     if(active[step])
 2052              		.loc 18 255 5 is_stmt 1 view .LVU571
 2053              		.loc 18 255 15 is_stmt 0 view .LVU572
 2054 003a 1D4B     		ldr	r3, .L96+24
 2055              		.loc 18 255 19 view .LVU573
 2056 003c 1D4A     		ldr	r2, .L96+28
 2057              		.loc 18 255 15 view .LVU574
 2058 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2059              		.loc 18 255 5 view .LVU575
 2060 0040 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2061 0042 B2B9     		cbnz	r2, .L82
 2062              	.L81:
 256:StepSequencer.cpp ****     {
 257:StepSequencer.cpp ****         env.SetTime(ADENV_SEG_DECAY, dec[step]);
 258:StepSequencer.cpp ****         osc.SetFreq(pitch[step]);
 259:StepSequencer.cpp ****     }
 260:StepSequencer.cpp ****     if(!env.IsRunning() && editCycle)
 2063              		.loc 18 260 5 is_stmt 1 view .LVU576
 2064              	.LVL89:
  71:../../DaisySP/Source/Control/adenv.h ****     /** Returns the current output value without processing the next sample */
  72:../../DaisySP/Source/Control/adenv.h ****     inline float GetValue() const { return (output_ * (max_ - min_)) + min_; }
  73:../../DaisySP/Source/Control/adenv.h ****     /** Returns the segment of the envelope that the phase is currently located
  74:../../DaisySP/Source/Control/adenv.h ****         in.
  75:../../DaisySP/Source/Control/adenv.h ****     */
  76:../../DaisySP/Source/Control/adenv.h ****     inline uint8_t GetCurrentSegment() { return current_segment_; }
  77:../../DaisySP/Source/Control/adenv.h ****     /** Returns true if the envelope is currently in any stage apart from idle.
  78:../../DaisySP/Source/Control/adenv.h ****     */
ARM GAS  /tmp/cckObu0D.s 			page 62


  79:../../DaisySP/Source/Control/adenv.h ****     inline bool IsRunning() const { return current_segment_ != ADENV_SEG_IDLE; }
 2065              		.loc 14 79 37 view .LVU577
 2066              		.loc 18 260 25 is_stmt 0 view .LVU578
 2067 0044 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 2068 0046 2BB9     		cbnz	r3, .L78
 2069              		.loc 18 260 25 discriminator 1 view .LVU579
 2070 0048 1B4B     		ldr	r3, .L96+32
 2071 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2072 004c 13B1     		cbz	r3, .L78
 261:StepSequencer.cpp ****     {
 262:StepSequencer.cpp ****         env.Trigger();
 2073              		.loc 18 262 9 is_stmt 1 view .LVU580
 2074              	.LBB638:
 2075              	.LBI638:
  56:../../DaisySP/Source/Control/adenv.h ****     /** Sets the length of time (in seconds) for a specific segment. */
 2076              		.loc 14 56 17 view .LVU581
 2077              	.LVL90:
 2078              	.LBB639:
  56:../../DaisySP/Source/Control/adenv.h ****     /** Sets the length of time (in seconds) for a specific segment. */
 2079              		.loc 14 56 29 view .LVU582
  56:../../DaisySP/Source/Control/adenv.h ****     /** Sets the length of time (in seconds) for a specific segment. */
 2080              		.loc 14 56 38 is_stmt 0 view .LVU583
 2081 004e 0123     		movs	r3, #1
 2082 0050 85F83430 		strb	r3, [r5, #52]
 2083              	.LVL91:
 2084              	.L78:
  56:../../DaisySP/Source/Control/adenv.h ****     /** Sets the length of time (in seconds) for a specific segment. */
 2085              		.loc 14 56 38 view .LVU584
 2086              	.LBE639:
 2087              	.LBE638:
 263:StepSequencer.cpp ****     }
 264:StepSequencer.cpp **** }
 2088              		.loc 18 264 1 view .LVU585
 2089 0054 70BD     		pop	{r4, r5, r6, pc}
 2090              	.LVL92:
 2091              	.L95:
 247:StepSequencer.cpp ****         step %= 8;
 2092              		.loc 18 247 9 is_stmt 1 view .LVU586
 248:StepSequencer.cpp ****         if(active[step])
 2093              		.loc 18 248 9 view .LVU587
 247:StepSequencer.cpp ****         step %= 8;
 2094              		.loc 18 247 13 is_stmt 0 view .LVU588
 2095 0056 1649     		ldr	r1, .L96+24
 249:StepSequencer.cpp ****         {
 2096              		.loc 18 249 23 view .LVU589
 2097 0058 1648     		ldr	r0, .L96+28
 247:StepSequencer.cpp ****         step %= 8;
 2098              		.loc 18 247 13 view .LVU590
 2099 005a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2100 005c 0132     		adds	r2, r2, #1
 248:StepSequencer.cpp ****         if(active[step])
 2101              		.loc 18 248 14 view .LVU591
 2102 005e 02F00702 		and	r2, r2, #7
 249:StepSequencer.cpp ****         {
 2103              		.loc 18 249 19 view .LVU592
 2104 0062 1346     		mov	r3, r2
 248:StepSequencer.cpp ****         if(active[step])
ARM GAS  /tmp/cckObu0D.s 			page 63


 2105              		.loc 18 248 14 view .LVU593
 2106 0064 0A70     		strb	r2, [r1]
 249:StepSequencer.cpp ****         {
 2107              		.loc 18 249 9 is_stmt 1 view .LVU594
 2108 0066 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 2109 0068 002A     		cmp	r2, #0
 2110 006a EBD0     		beq	.L81
 251:StepSequencer.cpp ****         }
 2111              		.loc 18 251 13 view .LVU595
 2112              	.LBB640:
 2113              	.LBI640:
  56:../../DaisySP/Source/Control/adenv.h ****     /** Sets the length of time (in seconds) for a specific segment. */
 2114              		.loc 14 56 17 view .LVU596
 2115              	.LVL93:
 2116              	.LBB641:
  56:../../DaisySP/Source/Control/adenv.h ****     /** Sets the length of time (in seconds) for a specific segment. */
 2117              		.loc 14 56 29 view .LVU597
  56:../../DaisySP/Source/Control/adenv.h ****     /** Sets the length of time (in seconds) for a specific segment. */
 2118              		.loc 14 56 38 is_stmt 0 view .LVU598
 2119 006c 0122     		movs	r2, #1
 2120 006e 85F83420 		strb	r2, [r5, #52]
 2121              	.LBE641:
 2122              	.LBE640:
 255:StepSequencer.cpp ****     {
 2123              		.loc 18 255 5 is_stmt 1 view .LVU599
 2124              	.LVL94:
 2125              	.L82:
 257:StepSequencer.cpp ****         osc.SetFreq(pitch[step]);
 2126              		.loc 18 257 9 view .LVU600
 2127              	.LBB642:
 2128              	.LBI642:
  58:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
 2129              		.loc 14 58 17 view .LVU601
 2130              	.LBB643:
  58:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
 2131              		.loc 14 58 52 view .LVU602
 2132              	.LBE643:
 2133              	.LBE642:
 257:StepSequencer.cpp ****         osc.SetFreq(pitch[step]);
 2134              		.loc 18 257 20 is_stmt 0 view .LVU603
 2135 0072 124A     		ldr	r2, .L96+36
 258:StepSequencer.cpp ****     }
 2136              		.loc 18 258 20 view .LVU604
 2137 0074 1249     		ldr	r1, .L96+40
 2138              	.LBB646:
 2139              	.LBB647:
  61:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 2140              		.loc 15 61 34 view .LVU605
 2141 0076 0948     		ldr	r0, .L96+4
 2142              	.LBE647:
 2143              	.LBE646:
 258:StepSequencer.cpp ****     }
 2144              		.loc 18 258 20 view .LVU606
 2145 0078 01EB8301 		add	r1, r1, r3, lsl #2
 257:StepSequencer.cpp ****         osc.SetFreq(pitch[step]);
 2146              		.loc 18 257 20 view .LVU607
 2147 007c 02EB8303 		add	r3, r2, r3, lsl #2
ARM GAS  /tmp/cckObu0D.s 			page 64


 2148              	.LVL95:
 258:StepSequencer.cpp ****     }
 2149              		.loc 18 258 20 view .LVU608
 2150 0080 91ED000A 		vldr.32	s0, [r1]
 2151              	.LBB650:
 2152              	.LBB644:
  58:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
 2153              		.loc 14 58 71 view .LVU609
 2154 0084 1B68     		ldr	r3, [r3]	@ float
 2155              	.LBE644:
 2156              	.LBE650:
 2157              	.LBB651:
 2158              	.LBB648:
  60:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 2159              		.loc 15 60 20 view .LVU610
 2160 0086 86ED020A 		vstr.32	s0, [r6, #8]
 2161              	.LBE648:
 2162              	.LBE651:
 2163              	.LBB652:
 2164              	.LBB645:
  58:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
 2165              		.loc 14 58 71 view .LVU611
 2166 008a EB60     		str	r3, [r5, #12]	@ float
 2167              	.LVL96:
  58:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
 2168              		.loc 14 58 71 view .LVU612
 2169              	.LBE645:
 2170              	.LBE652:
 258:StepSequencer.cpp ****     }
 2171              		.loc 18 258 9 is_stmt 1 view .LVU613
 2172              	.LBB653:
 2173              	.LBI646:
  58:../../DaisySP/Source/Synthesis/oscillator.h ****     {
 2174              		.loc 15 58 17 view .LVU614
 2175              	.LBB649:
  60:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 2176              		.loc 15 60 9 view .LVU615
  61:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 2177              		.loc 15 61 9 view .LVU616
  61:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 2178              		.loc 15 61 34 is_stmt 0 view .LVU617
 2179 008c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 2180              	.LVL97:
  61:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 2181              		.loc 15 61 20 view .LVU618
 2182 0090 86ED060A 		vstr.32	s0, [r6, #24]
  62:../../DaisySP/Source/Synthesis/oscillator.h **** 
 2183              		.loc 15 62 5 view .LVU619
 2184 0094 D6E7     		b	.L81
 2185              	.L97:
 2186 0096 00BF     		.align	2
 2187              	.L96:
 2188 0098 00000000 		.word	.LANCHOR5
 2189 009c 00000000 		.word	.LANCHOR4
 2190 00a0 00000000 		.word	.LANCHOR17
 2191 00a4 00000000 		.word	.LANCHOR7
 2192 00a8 00000000 		.word	.LANCHOR6
ARM GAS  /tmp/cckObu0D.s 			page 65


 2193 00ac 00000000 		.word	.LANCHOR14
 2194 00b0 00000000 		.word	.LANCHOR16
 2195 00b4 00000000 		.word	.LANCHOR20
 2196 00b8 00000000 		.word	.LANCHOR15
 2197 00bc 00000000 		.word	.LANCHOR19
 2198 00c0 00000000 		.word	.LANCHOR21
 2199              	.LBE649:
 2200              	.LBE653:
 2201              		.cfi_endproc
 2202              	.LFE4229:
 2204              		.section	.text._ZL13AudioCallbackPKfPfj,"ax",%progbits
 2205              		.align	1
 2206              		.p2align 2,,3
 2207              		.syntax unified
 2208              		.thumb
 2209              		.thumb_func
 2210              		.fpu fpv5-d16
 2212              	_ZL13AudioCallbackPKfPfj:
 2213              	.LVL98:
 2214              	.LFB4219:
  38:StepSequencer.cpp ****     float sig;
 2215              		.loc 18 38 1 is_stmt 1 view -0
 2216              		.cfi_startproc
 2217              		@ args = 0, pretend = 0, frame = 8
 2218              		@ frame_needed = 0, uses_anonymous_args = 0
  39:StepSequencer.cpp **** 
 2219              		.loc 18 39 5 view .LVU621
  41:StepSequencer.cpp **** 
 2220              		.loc 18 41 5 view .LVU622
  38:StepSequencer.cpp ****     float sig;
 2221              		.loc 18 38 1 is_stmt 0 view .LVU623
 2222 0000 70B5     		push	{r4, r5, r6, lr}
 2223              		.cfi_def_cfa_offset 16
 2224              		.cfi_offset 4, -16
 2225              		.cfi_offset 5, -12
 2226              		.cfi_offset 6, -8
 2227              		.cfi_offset 14, -4
 2228 0002 82B0     		sub	sp, sp, #8
 2229              		.cfi_def_cfa_offset 24
  38:StepSequencer.cpp ****     float sig;
 2230              		.loc 18 38 1 view .LVU624
 2231 0004 0C46     		mov	r4, r1
 2232 0006 1646     		mov	r6, r2
  41:StepSequencer.cpp **** 
 2233              		.loc 18 41 13 view .LVU625
 2234 0008 FFF7FEFF 		bl	_Z8Controlsv
 2235              	.LVL99:
  44:StepSequencer.cpp ****     for(size_t i = 0; i < size; i += 2)
 2236              		.loc 18 44 5 is_stmt 1 view .LVU626
  44:StepSequencer.cpp ****     for(size_t i = 0; i < size; i += 2)
 2237              		.loc 18 44 9 is_stmt 0 view .LVU627
 2238 000c 0023     		movs	r3, #0
 2239 000e 0193     		str	r3, [sp, #4]	@ float
  45:StepSequencer.cpp ****     {
 2240              		.loc 18 45 5 is_stmt 1 view .LVU628
 2241              	.LVL100:
 2242              	.LBB654:
ARM GAS  /tmp/cckObu0D.s 			page 66


  45:StepSequencer.cpp ****     {
 2243              		.loc 18 45 25 view .LVU629
 2244 0010 86B1     		cbz	r6, .L98
 2245 0012 013E     		subs	r6, r6, #1
 2246              	.LVL101:
  45:StepSequencer.cpp ****     {
 2247              		.loc 18 45 16 is_stmt 0 view .LVU630
 2248 0014 0025     		movs	r5, #0
 2249 0016 26F00106 		bic	r6, r6, #1
 2250              	.LVL102:
 2251              	.L100:
  47:StepSequencer.cpp **** 
 2252              		.loc 18 47 9 is_stmt 1 discriminator 2 view .LVU631
  47:StepSequencer.cpp **** 
 2253              		.loc 18 47 20 is_stmt 0 discriminator 2 view .LVU632
 2254 001a 01A8     		add	r0, sp, #4
 2255 001c 0834     		adds	r4, r4, #8
 2256 001e FFF7FEFF 		bl	_Z11NextSamplesRf
 2257              	.LVL103:
  49:StepSequencer.cpp ****         out[i + 1] = sig;
 2258              		.loc 18 49 9 is_stmt 1 discriminator 2 view .LVU633
  49:StepSequencer.cpp ****         out[i + 1] = sig;
 2259              		.loc 18 49 20 is_stmt 0 discriminator 2 view .LVU634
 2260 0022 019A     		ldr	r2, [sp, #4]	@ float
  45:StepSequencer.cpp ****     {
 2261              		.loc 18 45 25 discriminator 2 view .LVU635
 2262 0024 B542     		cmp	r5, r6
 2263 0026 05F10205 		add	r5, r5, #2
 2264              	.LVL104:
  49:StepSequencer.cpp ****         out[i + 1] = sig;
 2265              		.loc 18 49 20 discriminator 2 view .LVU636
 2266 002a 44F8082C 		str	r2, [r4, #-8]	@ float
  50:StepSequencer.cpp ****     }
 2267              		.loc 18 50 9 is_stmt 1 discriminator 2 view .LVU637
  50:StepSequencer.cpp ****     }
 2268              		.loc 18 50 20 is_stmt 0 discriminator 2 view .LVU638
 2269 002e 44F8042C 		str	r2, [r4, #-4]	@ float
  45:StepSequencer.cpp ****     {
 2270              		.loc 18 45 5 is_stmt 1 discriminator 2 view .LVU639
 2271              	.LVL105:
  45:StepSequencer.cpp ****     {
 2272              		.loc 18 45 25 discriminator 2 view .LVU640
 2273 0032 F2D1     		bne	.L100
 2274              	.L98:
 2275              	.LBE654:
  52:StepSequencer.cpp **** 
 2276              		.loc 18 52 1 is_stmt 0 view .LVU641
 2277 0034 02B0     		add	sp, sp, #8
 2278              		.cfi_def_cfa_offset 16
 2279              		@ sp needed
 2280 0036 70BD     		pop	{r4, r5, r6, pc}
 2281              		.cfi_endproc
 2282              	.LFE4219:
 2284              		.section	.text.startup._GLOBAL__sub_I_pod,"ax",%progbits
 2285              		.align	1
 2286              		.p2align 2,,3
 2287              		.syntax unified
ARM GAS  /tmp/cckObu0D.s 			page 67


 2288              		.thumb
 2289              		.thumb_func
 2290              		.fpu fpv5-d16
 2292              	_GLOBAL__sub_I_pod:
 2293              	.LFB4788:
 2294              		.loc 18 264 1 is_stmt 1 view -0
 2295              		.cfi_startproc
 2296              		@ args = 0, pretend = 0, frame = 0
 2297              		@ frame_needed = 0, uses_anonymous_args = 0
 2298              	.LBB741:
 2299              	.LBI741:
 2300              		.loc 18 264 1 view .LVU643
 2301              	.LVL106:
 2302              	.LBB742:
 2303              	.LBB743:
 2304              	.LBI743:
  35:../../libdaisy/src/daisy_pod.h ****     ~DaisyPod() {}
 2305              		.loc 3 35 5 view .LVU644
 2306              	.LBB744:
 2307              	.LBB745:
 2308              	.LBI745:
  21:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 2309              		.loc 9 21 5 view .LVU645
 2310              	.LBB746:
 2311              	.LBB747:
 2312              	.LBI747:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 2313              		.loc 13 62 5 view .LVU646
 2314              	.LBE747:
 2315              	.LBE746:
 2316              	.LBE745:
 2317              	.LBE744:
 2318              	.LBE743:
 2319              	.LBE742:
 2320              	.LBE741:
 2321              		.loc 18 264 1 is_stmt 0 view .LVU647
 2322 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2323              		.cfi_def_cfa_offset 24
 2324              		.cfi_offset 3, -24
 2325              		.cfi_offset 4, -20
 2326              		.cfi_offset 5, -16
 2327              		.cfi_offset 6, -12
 2328              		.cfi_offset 7, -8
 2329              		.cfi_offset 14, -4
 2330              	.LBB871:
 2331              	.LBB869:
 2332              	.LBB849:
 2333              	.LBB845:
 2334              	.LBB768:
 2335              	.LBB769:
 2336              	.LBB770:
 2337              	.LBB771:
 2338              	.LBB772:
 2339              	.LBB773:
 2340              	.LBB774:
  36:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 2341              		.loc 4 36 20 view .LVU648
ARM GAS  /tmp/cckObu0D.s 			page 68


 2342 0002 2C4B     		ldr	r3, .L108
 2343 0004 49F22027 		movw	r7, #37408
 2344              	.LBE774:
 2345              	.LBE773:
 2346              	.LBE772:
 2347              	.LBE771:
 2348              	.LBE770:
 2349              	.LBE769:
 2350              	.LBE768:
 2351              	.LBB819:
 2352              	.LBB764:
 2353              	.LBB754:
 2354              	.LBB748:
 2355              	.LBB749:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 2356              		.loc 13 62 35 view .LVU649
 2357 0008 2B48     		ldr	r0, .L108+4
 2358              	.LBE749:
 2359              	.LBE748:
 2360              	.LBE754:
 2361              	.LBE764:
 2362              	.LBE819:
 2363              	.LBB820:
 2364              	.LBB814:
 2365              	.LBB809:
 2366              	.LBB790:
 2367              	.LBB785:
 2368              	.LBB780:
 2369              	.LBB775:
  37:../../libdaisy/src/hid/midi.h ****         }
 2370              		.loc 4 37 20 view .LVU650
 2371 000a 49F22222 		movw	r2, #37410
  36:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 2372              		.loc 4 36 20 view .LVU651
 2373 000e B3F800C0 		ldrh	ip, [r3]
 2374              	.LBE775:
 2375              	.LBE780:
 2376              	.LBE785:
 2377              	.LBE790:
 2378              	.LBE809:
 2379              	.LBE814:
 2380              	.LBE820:
 2381              	.LBB821:
 2382              	.LBB765:
 2383              	.LBB755:
 2384              	.LBB752:
 2385              	.LBB750:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 2386              		.loc 13 62 35 view .LVU652
 2387 0012 0025     		movs	r5, #0
 2388              	.LBE750:
 2389              	.LBE752:
 2390              	.LBE755:
 2391              	.LBE765:
 2392              	.LBE821:
 2393              	.LBB822:
 2394              	.LBB815:
ARM GAS  /tmp/cckObu0D.s 			page 69


 2395              	.LBB810:
 2396              	.LBB791:
 2397              	.LBB786:
 2398              	.LBB781:
 2399              	.LBB776:
  37:../../libdaisy/src/hid/midi.h ****         }
 2400              		.loc 4 37 20 view .LVU653
 2401 0014 9988     		ldrh	r1, [r3, #4]
  35:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 2402              		.loc 4 35 20 view .LVU654
 2403 0016 49F21C26 		movw	r6, #37404
  36:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 2404              		.loc 4 36 20 view .LVU655
 2405 001a 20F807C0 		strh	ip, [r0, r7]	@ movhi
 2406              	.LBE776:
 2407              	.LBE781:
 2408              	.LBE786:
 2409              	.LBE791:
 2410              	.LBB792:
 2411              	.LBB793:
 2412              	.LBB794:
 2413              	.LBB795:
 2414              		.file 21 "../../libdaisy/src/per/uart.h"
   1:../../libdaisy/src/per/uart.h **** /* 
   2:../../libdaisy/src/per/uart.h **** TODO
   3:../../libdaisy/src/per/uart.h **** - UART1 defaults to DMA, add flexible config for DMA on all periphs
   4:../../libdaisy/src/per/uart.h **** - Transmit function improvements.
   5:../../libdaisy/src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   6:../../libdaisy/src/per/uart.h **** */
   7:../../libdaisy/src/per/uart.h **** 
   8:../../libdaisy/src/per/uart.h **** #pragma once
   9:../../libdaisy/src/per/uart.h **** #ifndef DSY_UART_H
  10:../../libdaisy/src/per/uart.h **** #define DSY_UART_H /**< macro */
  11:../../libdaisy/src/per/uart.h **** #include "daisy_core.h"
  12:../../libdaisy/src/per/uart.h **** 
  13:../../libdaisy/src/per/uart.h **** 
  14:../../libdaisy/src/per/uart.h **** namespace daisy
  15:../../libdaisy/src/per/uart.h **** {
  16:../../libdaisy/src/per/uart.h **** /** @addtogroup serial
  17:../../libdaisy/src/per/uart.h ****     @{
  18:../../libdaisy/src/per/uart.h ****     */
  19:../../libdaisy/src/per/uart.h **** 
  20:../../libdaisy/src/per/uart.h **** /** 
  21:../../libdaisy/src/per/uart.h ****     Uart Peripheral
  22:../../libdaisy/src/per/uart.h ****     @author shensley
  23:../../libdaisy/src/per/uart.h ****     @date March 2020
  24:../../libdaisy/src/per/uart.h ****     */
  25:../../libdaisy/src/per/uart.h **** class UartHandler
  26:../../libdaisy/src/per/uart.h **** {
  27:../../libdaisy/src/per/uart.h ****   public:
  28:../../libdaisy/src/per/uart.h ****     struct Config
  29:../../libdaisy/src/per/uart.h ****     {
  30:../../libdaisy/src/per/uart.h ****         enum class Peripheral
  31:../../libdaisy/src/per/uart.h ****         {
  32:../../libdaisy/src/per/uart.h ****             USART_1,
  33:../../libdaisy/src/per/uart.h ****             USART_2,
  34:../../libdaisy/src/per/uart.h ****             USART_3,
ARM GAS  /tmp/cckObu0D.s 			page 70


  35:../../libdaisy/src/per/uart.h ****             UART_4,
  36:../../libdaisy/src/per/uart.h ****             UART_5,
  37:../../libdaisy/src/per/uart.h ****             USART_6,
  38:../../libdaisy/src/per/uart.h ****             UART_7,
  39:../../libdaisy/src/per/uart.h ****             UART_8,
  40:../../libdaisy/src/per/uart.h ****             LPUART_1,
  41:../../libdaisy/src/per/uart.h ****         };
  42:../../libdaisy/src/per/uart.h **** 
  43:../../libdaisy/src/per/uart.h ****         enum class StopBits
  44:../../libdaisy/src/per/uart.h ****         {
  45:../../libdaisy/src/per/uart.h ****             BITS_0_5,
  46:../../libdaisy/src/per/uart.h ****             BITS_1,
  47:../../libdaisy/src/per/uart.h ****             BITS_1_5,
  48:../../libdaisy/src/per/uart.h ****             BITS_2,
  49:../../libdaisy/src/per/uart.h ****         };
  50:../../libdaisy/src/per/uart.h **** 
  51:../../libdaisy/src/per/uart.h ****         enum class Parity
  52:../../libdaisy/src/per/uart.h ****         {
  53:../../libdaisy/src/per/uart.h ****             NONE,
  54:../../libdaisy/src/per/uart.h ****             EVEN,
  55:../../libdaisy/src/per/uart.h ****             ODD,
  56:../../libdaisy/src/per/uart.h ****         };
  57:../../libdaisy/src/per/uart.h **** 
  58:../../libdaisy/src/per/uart.h ****         enum class Mode
  59:../../libdaisy/src/per/uart.h ****         {
  60:../../libdaisy/src/per/uart.h ****             RX,
  61:../../libdaisy/src/per/uart.h ****             TX,
  62:../../libdaisy/src/per/uart.h ****             TX_RX,
  63:../../libdaisy/src/per/uart.h ****         };
  64:../../libdaisy/src/per/uart.h **** 
  65:../../libdaisy/src/per/uart.h ****         enum class WordLength
  66:../../libdaisy/src/per/uart.h ****         {
  67:../../libdaisy/src/per/uart.h ****             BITS_7,
  68:../../libdaisy/src/per/uart.h ****             BITS_8,
  69:../../libdaisy/src/per/uart.h ****             BITS_9,
  70:../../libdaisy/src/per/uart.h ****         };
  71:../../libdaisy/src/per/uart.h **** 
  72:../../libdaisy/src/per/uart.h ****         struct
  73:../../libdaisy/src/per/uart.h ****         {
  74:../../libdaisy/src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  75:../../libdaisy/src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  76:../../libdaisy/src/per/uart.h ****         } pin_config;        /**< & */
  77:../../libdaisy/src/per/uart.h **** 
  78:../../libdaisy/src/per/uart.h ****         Peripheral periph;
  79:../../libdaisy/src/per/uart.h ****         StopBits   stopbits;
  80:../../libdaisy/src/per/uart.h ****         Parity     parity;
  81:../../libdaisy/src/per/uart.h ****         Mode       mode;
  82:../../libdaisy/src/per/uart.h ****         WordLength wordlength;
  83:../../libdaisy/src/per/uart.h ****         uint32_t   baudrate;
  84:../../libdaisy/src/per/uart.h ****     };
  85:../../libdaisy/src/per/uart.h **** 
  86:../../libdaisy/src/per/uart.h **** 
  87:../../libdaisy/src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 2415              		.loc 21 87 35 view .LVU656
 2416 001e 49F22423 		movw	r3, #37412
 2417              	.LBE795:
 2418              	.LBE794:
ARM GAS  /tmp/cckObu0D.s 			page 71


 2419              	.LBE793:
 2420              	.LBE792:
 2421              	.LBB800:
 2422              	.LBB787:
 2423              	.LBB782:
 2424              	.LBB777:
  37:../../libdaisy/src/hid/midi.h ****         }
 2425              		.loc 4 37 20 view .LVU657
 2426 0022 8152     		strh	r1, [r0, r2]	@ movhi
 2427              	.LBE777:
 2428              	.LBE782:
 2429              	.LBE787:
 2430              	.LBE800:
  82:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 2431              		.loc 4 82 19 view .LVU658
 2432 0024 49F22821 		movw	r1, #37416
 2433 0028 244F     		ldr	r7, .L108+8
 2434 002a 49F22C22 		movw	r2, #37420
 2435              	.LBE810:
 2436              	.LBE815:
 2437              	.LBE822:
 2438              	.LBE845:
 2439              	.LBE849:
   7:StepSequencer.cpp **** 
 2440              		.loc 18 7 10 view .LVU659
 2441 002e 244C     		ldr	r4, .L108+12
 2442              	.LBB850:
 2443              	.LBB846:
 2444              	.LBB823:
 2445              	.LBB816:
 2446              	.LBB811:
 2447              	.LBB801:
 2448              	.LBB798:
 2449              	.LBB797:
 2450              	.LBB796:
 2451              		.loc 21 87 35 view .LVU660
 2452 0030 C550     		str	r5, [r0, r3]
 2453              	.LBE796:
 2454              	.LBE797:
 2455              	.LBE798:
 2456              	.LBE801:
  82:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 2457              		.loc 4 82 19 view .LVU661
 2458 0032 49F22E23 		movw	r3, #37422
 2459              	.LBB802:
 2460              	.LBB788:
 2461              	.LBB783:
 2462              	.LBB778:
  35:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 2463              		.loc 4 35 20 view .LVU662
 2464 0036 8551     		str	r5, [r0, r6]
 2465              	.LBE778:
 2466              	.LBE783:
 2467              	.LBE788:
 2468              	.LBE802:
  82:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 2469              		.loc 4 82 19 view .LVU663
ARM GAS  /tmp/cckObu0D.s 			page 72


 2470 0038 4FF60F06 		movw	r6, #63503
 2471 003c 4750     		str	r7, [r0, r1]
 2472 003e 0721     		movs	r1, #7
 2473 0040 8652     		strh	r6, [r0, r2]	@ movhi
 2474              	.LBE811:
 2475              	.LBE816:
 2476              	.LBE823:
 2477              	.LBE846:
 2478              	.LBE850:
   7:StepSequencer.cpp **** 
 2479              		.loc 18 7 10 view .LVU664
 2480 0042 2246     		mov	r2, r4
 2481              	.LBB851:
 2482              	.LBB847:
 2483              	.LBB824:
 2484              	.LBB817:
 2485              	.LBB812:
  82:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 2486              		.loc 4 82 19 view .LVU665
 2487 0044 C154     		strb	r1, [r0, r3]
 2488              	.LBE812:
 2489              	.LBE817:
 2490              	.LBE824:
 2491              	.LBB825:
 2492              	.LBB766:
 2493              	.LBB756:
 2494              	.LBB753:
 2495              	.LBB751:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 2496              		.loc 13 62 35 view .LVU666
 2497 0046 4561     		str	r5, [r0, #20]
 2498              	.LVL107:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 2499              		.loc 13 62 35 view .LVU667
 2500              	.LBE751:
 2501              	.LBE753:
 2502              	.LBE756:
 2503              	.LBB757:
 2504              	.LBI757:
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 2505              		.loc 12 84 5 is_stmt 1 view .LVU668
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 2506              		.loc 12 84 5 is_stmt 0 view .LVU669
 2507              	.LBE757:
 2508              	.LBB758:
 2509              	.LBI758:
 2510              		.file 22 "../../libdaisy/src/per/dac.h"
   1:../../libdaisy/src/per/dac.h **** #pragma once
   2:../../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../../libdaisy/src/per/dac.h **** 
   5:../../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../../libdaisy/src/per/dac.h **** 
   7:../../libdaisy/src/per/dac.h **** namespace daisy
   8:../../libdaisy/src/per/dac.h **** {
   9:../../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../../libdaisy/src/per/dac.h ****  ** 
ARM GAS  /tmp/cckObu0D.s 			page 73


  11:../../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../../libdaisy/src/per/dac.h ****  **
  14:../../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../../libdaisy/src/per/dac.h ****  **
  16:../../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../../libdaisy/src/per/dac.h ****  ***/
  20:../../libdaisy/src/per/dac.h **** class DacHandle
  21:../../libdaisy/src/per/dac.h **** {
  22:../../libdaisy/src/per/dac.h ****   public:
  23:../../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../../libdaisy/src/per/dac.h ****     enum class Result
  25:../../libdaisy/src/per/dac.h ****     {
  26:../../libdaisy/src/per/dac.h ****         OK,
  27:../../libdaisy/src/per/dac.h ****         ERR,
  28:../../libdaisy/src/per/dac.h ****     };
  29:../../libdaisy/src/per/dac.h **** 
  30:../../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../../libdaisy/src/per/dac.h ****     enum class Channel
  32:../../libdaisy/src/per/dac.h ****     {
  33:../../libdaisy/src/per/dac.h ****         ONE,
  34:../../libdaisy/src/per/dac.h ****         TWO,
  35:../../libdaisy/src/per/dac.h ****         BOTH,
  36:../../libdaisy/src/per/dac.h ****     };
  37:../../libdaisy/src/per/dac.h **** 
  38:../../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../../libdaisy/src/per/dac.h ****      **
  40:../../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../../libdaisy/src/per/dac.h ****      **
  42:../../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../../libdaisy/src/per/dac.h ****      ***/
  45:../../libdaisy/src/per/dac.h ****     enum class Mode
  46:../../libdaisy/src/per/dac.h ****     {
  47:../../libdaisy/src/per/dac.h ****         POLLING,
  48:../../libdaisy/src/per/dac.h ****         DMA,
  49:../../libdaisy/src/per/dac.h ****     };
  50:../../libdaisy/src/per/dac.h **** 
  51:../../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../../libdaisy/src/per/dac.h ****      ***/
  55:../../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../../libdaisy/src/per/dac.h ****     {
  57:../../libdaisy/src/per/dac.h ****         BITS_8,
  58:../../libdaisy/src/per/dac.h ****         BITS_12
  59:../../libdaisy/src/per/dac.h ****     };
  60:../../libdaisy/src/per/dac.h **** 
  61:../../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../../libdaisy/src/per/dac.h ****     {
  64:../../libdaisy/src/per/dac.h ****         ENABLED,
  65:../../libdaisy/src/per/dac.h ****         DISABLED,
  66:../../libdaisy/src/per/dac.h ****     };
  67:../../libdaisy/src/per/dac.h **** 
ARM GAS  /tmp/cckObu0D.s 			page 74


  68:../../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../../libdaisy/src/per/dac.h ****     struct Config
  70:../../libdaisy/src/per/dac.h ****     {
  71:../../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../../libdaisy/src/per/dac.h **** 
  77:../../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../../libdaisy/src/per/dac.h ****     };
  82:../../libdaisy/src/per/dac.h **** 
  83:../../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 2511              		.loc 22 83 5 is_stmt 1 view .LVU670
 2512              	.LBE758:
 2513              	.LBE766:
 2514              	.LBE825:
 2515              	.LBE847:
 2516              	.LBE851:
   7:StepSequencer.cpp **** 
 2517              		.loc 18 7 10 is_stmt 0 view .LVU671
 2518 0048 1E49     		ldr	r1, .L108+16
 2519              	.LBB852:
 2520              	.LBB848:
 2521              	.LBB826:
 2522              	.LBB767:
 2523              	.LBB761:
 2524              	.LBB759:
 2525              	.LBB760:
 2526              		.loc 22 83 33 view .LVU672
 2527 004a 0562     		str	r5, [r0, #32]
 2528              	.LVL108:
 2529              		.loc 22 83 33 view .LVU673
 2530              	.LBE760:
 2531              	.LBE759:
 2532              	.LBE761:
 2533              	.LBB762:
 2534              	.LBI762:
  40:../../libdaisy/src/hid/usb.h **** 
 2535              		.loc 11 40 5 is_stmt 1 view .LVU674
  40:../../libdaisy/src/hid/usb.h **** 
 2536              		.loc 11 40 5 is_stmt 0 view .LVU675
 2537              	.LBE762:
 2538              	.LBB763:
 2539              	.LBI763:
  58:../../libdaisy/src/sys/system.h ****     ~System() {}
 2540              		.loc 10 58 5 is_stmt 1 view .LVU676
  58:../../libdaisy/src/sys/system.h ****     ~System() {}
 2541              		.loc 10 58 5 is_stmt 0 view .LVU677
 2542              	.LBE763:
 2543              	.LBE767:
 2544              	.LBE826:
 2545              	.LBB827:
 2546              	.LBI827:
ARM GAS  /tmp/cckObu0D.s 			page 75


  20:../../libdaisy/src/hid/encoder.h ****     ~Encoder() {}
 2547              		.loc 8 20 5 is_stmt 1 view .LVU678
 2548              	.LBB828:
 2549              	.LBB829:
 2550              	.LBI829:
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 2551              		.loc 7 40 5 view .LVU679
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 2552              		.loc 7 40 5 is_stmt 0 view .LVU680
 2553              	.LBE829:
 2554              	.LBE828:
 2555              	.LBE827:
 2556              	.LBB830:
 2557              	.LBI830:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 2558              		.loc 2 21 5 is_stmt 1 view .LVU681
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 2559              		.loc 2 21 5 is_stmt 0 view .LVU682
 2560              	.LBE830:
 2561              	.LBB831:
 2562              	.LBI831:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 2563              		.loc 2 21 5 is_stmt 1 view .LVU683
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 2564              		.loc 2 21 5 is_stmt 0 view .LVU684
 2565              	.LBE831:
 2566              	.LBB832:
 2567              	.LBI832:
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 2568              		.loc 7 40 5 is_stmt 1 view .LVU685
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 2569              		.loc 7 40 5 is_stmt 0 view .LVU686
 2570              	.LBE832:
 2571              	.LBB833:
 2572              	.LBI833:
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 2573              		.loc 7 40 5 is_stmt 1 view .LVU687
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 2574              		.loc 7 40 5 is_stmt 0 view .LVU688
 2575              	.LBE833:
 2576              	.LBB834:
 2577              	.LBI834:
  17:../../libdaisy/src/hid/rgb_led.h ****     ~RgbLed() {}
 2578              		.loc 5 17 5 is_stmt 1 view .LVU689
 2579              	.LBB835:
 2580              	.LBB836:
 2581              	.LBI836:
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 2582              		.loc 6 24 5 view .LVU690
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 2583              		.loc 6 24 5 is_stmt 0 view .LVU691
 2584              	.LBE836:
 2585              	.LBB837:
 2586              	.LBI837:
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 2587              		.loc 6 24 5 is_stmt 1 view .LVU692
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
ARM GAS  /tmp/cckObu0D.s 			page 76


 2588              		.loc 6 24 5 is_stmt 0 view .LVU693
 2589              	.LBE837:
 2590              	.LBB838:
 2591              	.LBI838:
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 2592              		.loc 6 24 5 is_stmt 1 view .LVU694
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 2593              		.loc 6 24 5 is_stmt 0 view .LVU695
 2594              	.LBE838:
 2595              	.LBE835:
 2596              	.LBE834:
 2597              	.LBB839:
 2598              	.LBI839:
  17:../../libdaisy/src/hid/rgb_led.h ****     ~RgbLed() {}
 2599              		.loc 5 17 5 is_stmt 1 view .LVU696
 2600              	.LBB840:
 2601              	.LBB841:
 2602              	.LBI841:
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 2603              		.loc 6 24 5 view .LVU697
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 2604              		.loc 6 24 5 is_stmt 0 view .LVU698
 2605              	.LBE841:
 2606              	.LBB842:
 2607              	.LBI842:
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 2608              		.loc 6 24 5 is_stmt 1 view .LVU699
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 2609              		.loc 6 24 5 is_stmt 0 view .LVU700
 2610              	.LBE842:
 2611              	.LBB843:
 2612              	.LBI843:
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 2613              		.loc 6 24 5 is_stmt 1 view .LVU701
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 2614              		.loc 6 24 5 is_stmt 0 view .LVU702
 2615              	.LBE843:
 2616              	.LBE840:
 2617              	.LBE839:
 2618              	.LBB844:
 2619              	.LBI768:
  82:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 2620              		.loc 4 82 5 is_stmt 1 view .LVU703
 2621              	.LBB818:
 2622              	.LBB813:
 2623              	.LBB803:
 2624              	.LBI803:
 2625              		.loc 21 87 5 view .LVU704
 2626              	.LBB804:
 2627              	.LBB805:
 2628              		.loc 21 87 35 is_stmt 0 view .LVU705
 2629 004c C0F87451 		str	r5, [r0, #372]
 2630              	.LVL109:
 2631              		.loc 21 87 35 view .LVU706
 2632              	.LBE805:
 2633              	.LBE804:
 2634              	.LBE803:
ARM GAS  /tmp/cckObu0D.s 			page 77


 2635              	.LBB806:
 2636              	.LBI806:
 2637              		.file 23 "../../libdaisy/src/util/ringbuffer.h"
   1:../../libdaisy/src/util/ringbuffer.h **** #pragma once
   2:../../libdaisy/src/util/ringbuffer.h **** #ifndef DSY_RINGBUFFER_H
   3:../../libdaisy/src/util/ringbuffer.h **** #define DSY_RINGBUFFER_H
   4:../../libdaisy/src/util/ringbuffer.h **** 
   5:../../libdaisy/src/util/ringbuffer.h **** #include <algorithm>
   6:../../libdaisy/src/util/ringbuffer.h **** 
   7:../../libdaisy/src/util/ringbuffer.h **** namespace daisy
   8:../../libdaisy/src/util/ringbuffer.h **** {
   9:../../libdaisy/src/util/ringbuffer.h **** /** @addtogroup utility
  10:../../libdaisy/src/util/ringbuffer.h ****     @{
  11:../../libdaisy/src/util/ringbuffer.h **** */
  12:../../libdaisy/src/util/ringbuffer.h **** 
  13:../../libdaisy/src/util/ringbuffer.h **** /**
  14:../../libdaisy/src/util/ringbuffer.h **** Utility Ring Buffer \n 
  15:../../libdaisy/src/util/ringbuffer.h **** imported from pichenettes/stmlib
  16:../../libdaisy/src/util/ringbuffer.h **** */
  17:../../libdaisy/src/util/ringbuffer.h **** template <typename T, size_t size>
  18:../../libdaisy/src/util/ringbuffer.h **** class RingBuffer
  19:../../libdaisy/src/util/ringbuffer.h **** {
  20:../../libdaisy/src/util/ringbuffer.h ****   public:
  21:../../libdaisy/src/util/ringbuffer.h ****     RingBuffer() {}
 2638              		.loc 23 21 5 is_stmt 1 view .LVU707
 2639              		.loc 23 21 5 is_stmt 0 view .LVU708
 2640              	.LBE806:
 2641              	.LBB807:
 2642              	.LBI771:
  84:../../libdaisy/src/hid/midi.h **** 
  85:../../libdaisy/src/hid/midi.h ****     struct Config
 2643              		.loc 4 85 12 is_stmt 1 view .LVU709
 2644              	.LBB789:
 2645              	.LBI772:
  33:../../libdaisy/src/hid/midi.h ****         {
 2646              		.loc 4 33 9 view .LVU710
 2647              	.LBB784:
 2648              	.LBB779:
  35:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 2649              		.loc 4 35 13 view .LVU711
  36:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 2650              		.loc 4 36 13 view .LVU712
  37:../../libdaisy/src/hid/midi.h ****         }
 2651              		.loc 4 37 13 view .LVU713
  37:../../libdaisy/src/hid/midi.h ****         }
 2652              		.loc 4 37 13 is_stmt 0 view .LVU714
 2653              	.LBE779:
 2654              	.LBE784:
 2655              	.LBE789:
 2656              	.LBE807:
 2657              	.LBB808:
 2658              	.LBI792:
  24:../../libdaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
 2659              		.loc 4 24 5 is_stmt 1 view .LVU715
 2660              	.LBB799:
 2661              	.LBI793:
 2662              		.loc 21 87 5 view .LVU716
ARM GAS  /tmp/cckObu0D.s 			page 78


 2663              		.loc 21 87 5 is_stmt 0 view .LVU717
 2664              	.LBE799:
 2665              	.LBE808:
 2666              	.LBE813:
 2667              	.LBE818:
 2668              	.LBE844:
 2669              	.LBE848:
 2670              	.LBE852:
  11:StepSequencer.cpp **** Metro      tick;
 2671              		.loc 18 11 12 view .LVU718
 2672 0050 1D4E     		ldr	r6, .L108+20
   7:StepSequencer.cpp **** 
 2673              		.loc 18 7 10 view .LVU719
 2674 0052 FFF7FEFF 		bl	__aeabi_atexit
 2675              	.LVL110:
 2676              	.LBB853:
 2677              	.LBI853:
  15:../../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 2678              		.loc 15 15 5 is_stmt 1 view .LVU720
  15:../../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 2679              		.loc 15 15 5 is_stmt 0 view .LVU721
 2680              	.LBE853:
   9:StepSequencer.cpp **** AdEnv      env;
 2681              		.loc 18 9 12 view .LVU722
 2682 0056 2246     		mov	r2, r4
 2683 0058 1C49     		ldr	r1, .L108+24
 2684 005a 1D48     		ldr	r0, .L108+28
 2685 005c FFF7FEFF 		bl	__aeabi_atexit
 2686              	.LVL111:
 2687              	.LBB854:
 2688              	.LBI854:
  34:../../DaisySP/Source/Control/adenv.h ****     ~AdEnv() {}
 2689              		.loc 14 34 5 is_stmt 1 view .LVU723
  34:../../DaisySP/Source/Control/adenv.h ****     ~AdEnv() {}
 2690              		.loc 14 34 5 is_stmt 0 view .LVU724
 2691              	.LBE854:
  10:StepSequencer.cpp **** Parameter  decayTimeParam, pitchParam, tickFreqParam, filterFreqParam;
 2692              		.loc 18 10 12 view .LVU725
 2693 0060 2246     		mov	r2, r4
 2694 0062 1C49     		ldr	r1, .L108+32
 2695 0064 1C48     		ldr	r0, .L108+36
 2696 0066 FFF7FEFF 		bl	__aeabi_atexit
 2697              	.LVL112:
 2698              	.LBB855:
 2699              	.LBI855:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 2700              		.loc 1 25 5 is_stmt 1 view .LVU726
 2701              	.LBB856:
 2702              	.LBB857:
 2703              	.LBI857:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 2704              		.loc 2 21 5 view .LVU727
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 2705              		.loc 2 21 5 is_stmt 0 view .LVU728
 2706              	.LBE857:
 2707              	.LBE856:
 2708              	.LBE855:
ARM GAS  /tmp/cckObu0D.s 			page 79


  11:StepSequencer.cpp **** Metro      tick;
 2709              		.loc 18 11 12 view .LVU729
 2710 006a 2246     		mov	r2, r4
 2711 006c 3146     		mov	r1, r6
 2712 006e 1B48     		ldr	r0, .L108+40
 2713 0070 FFF7FEFF 		bl	__aeabi_atexit
 2714              	.LVL113:
 2715              	.LBB858:
 2716              	.LBI858:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 2717              		.loc 1 25 5 is_stmt 1 view .LVU730
 2718              	.LBB859:
 2719              	.LBB860:
 2720              	.LBI860:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 2721              		.loc 2 21 5 view .LVU731
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 2722              		.loc 2 21 5 is_stmt 0 view .LVU732
 2723              	.LBE860:
 2724              	.LBE859:
 2725              	.LBE858:
  11:StepSequencer.cpp **** Metro      tick;
 2726              		.loc 18 11 28 view .LVU733
 2727 0074 2246     		mov	r2, r4
 2728 0076 3146     		mov	r1, r6
 2729 0078 1948     		ldr	r0, .L108+44
 2730 007a FFF7FEFF 		bl	__aeabi_atexit
 2731              	.LVL114:
 2732              	.LBB861:
 2733              	.LBI861:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 2734              		.loc 1 25 5 is_stmt 1 view .LVU734
 2735              	.LBB862:
 2736              	.LBB863:
 2737              	.LBI863:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 2738              		.loc 2 21 5 view .LVU735
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 2739              		.loc 2 21 5 is_stmt 0 view .LVU736
 2740              	.LBE863:
 2741              	.LBE862:
 2742              	.LBE861:
  11:StepSequencer.cpp **** Metro      tick;
 2743              		.loc 18 11 40 view .LVU737
 2744 007e 2246     		mov	r2, r4
 2745 0080 3146     		mov	r1, r6
 2746 0082 1848     		ldr	r0, .L108+48
 2747 0084 FFF7FEFF 		bl	__aeabi_atexit
 2748              	.LVL115:
 2749              	.LBB864:
 2750              	.LBI864:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 2751              		.loc 1 25 5 is_stmt 1 view .LVU738
 2752              	.LBB865:
 2753              	.LBB866:
 2754              	.LBI866:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
ARM GAS  /tmp/cckObu0D.s 			page 80


 2755              		.loc 2 21 5 view .LVU739
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 2756              		.loc 2 21 5 is_stmt 0 view .LVU740
 2757              	.LBE866:
 2758              	.LBE865:
 2759              	.LBE864:
  11:StepSequencer.cpp **** Metro      tick;
 2760              		.loc 18 11 55 view .LVU741
 2761 0088 2246     		mov	r2, r4
 2762 008a 3146     		mov	r1, r6
 2763 008c 1648     		ldr	r0, .L108+52
 2764 008e FFF7FEFF 		bl	__aeabi_atexit
 2765              	.LVL116:
 2766              	.LBB867:
 2767              	.LBI867:
  14:../../DaisySP/Source/Utility/metro.h ****     ~Metro() {}
 2768              		.loc 17 14 5 is_stmt 1 view .LVU742
  14:../../DaisySP/Source/Utility/metro.h ****     ~Metro() {}
 2769              		.loc 17 14 5 is_stmt 0 view .LVU743
 2770              	.LBE867:
  12:StepSequencer.cpp **** MoogLadder flt;
 2771              		.loc 18 12 12 view .LVU744
 2772 0092 2246     		mov	r2, r4
 2773 0094 1549     		ldr	r1, .L108+56
 2774 0096 1648     		ldr	r0, .L108+60
 2775 0098 FFF7FEFF 		bl	__aeabi_atexit
 2776              	.LVL117:
 2777              	.LBB868:
 2778              	.LBI868:
  20:../../DaisySP/Source/Filters/moogladder.h ****     ~MoogLadder() {}
 2779              		.loc 16 20 5 is_stmt 1 view .LVU745
  20:../../DaisySP/Source/Filters/moogladder.h ****     ~MoogLadder() {}
 2780              		.loc 16 20 5 is_stmt 0 view .LVU746
 2781              	.LBE868:
  13:StepSequencer.cpp **** 
 2782              		.loc 18 13 12 view .LVU747
 2783 009c 2246     		mov	r2, r4
 2784 009e 1549     		ldr	r1, .L108+64
 2785 00a0 1548     		ldr	r0, .L108+68
 2786 00a2 FFF7FEFF 		bl	__aeabi_atexit
 2787              	.LVL118:
  24:StepSequencer.cpp **** float pent[] = {110.f, 128.33f, 146.66f, 174.166f, 192.5f};
 2788              		.loc 18 24 15 is_stmt 1 view .LVU748
  24:StepSequencer.cpp **** float pent[] = {110.f, 128.33f, 146.66f, 174.166f, 192.5f};
 2789              		.loc 18 24 7 is_stmt 0 view .LVU749
 2790 00a6 2246     		mov	r2, r4
 2791 00a8 2846     		mov	r0, r5
 2792 00aa 1449     		ldr	r1, .L108+72
 2793              	.LBE869:
 2794              	.LBE871:
 2795              		.loc 18 264 1 view .LVU750
 2796 00ac BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 2797              		.cfi_restore 14
 2798              		.cfi_restore 7
 2799              		.cfi_restore 6
 2800              		.cfi_restore 5
 2801              		.cfi_restore 4
ARM GAS  /tmp/cckObu0D.s 			page 81


 2802              		.cfi_restore 3
 2803              		.cfi_def_cfa_offset 0
 2804              	.LBB872:
 2805              	.LBB870:
  24:StepSequencer.cpp **** float pent[] = {110.f, 128.33f, 146.66f, 174.166f, 192.5f};
 2806              		.loc 18 24 7 view .LVU751
 2807 00b0 FFF7FEBF 		b	__aeabi_atexit
 2808              	.LVL119:
 2809              	.L109:
 2810              		.align	2
 2811              	.L108:
 2812 00b4 00000000 		.word	.LANCHOR24
 2813 00b8 00000000 		.word	pod
 2814 00bc 80707FF0 		.word	-260083584
 2815 00c0 00000000 		.word	__dso_handle
 2816 00c4 00000000 		.word	_ZN5daisy8DaisyPodD1Ev
 2817 00c8 00000000 		.word	_ZN5daisy9ParameterD1Ev
 2818 00cc 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 2819 00d0 00000000 		.word	.LANCHOR4
 2820 00d4 00000000 		.word	_ZN7daisysp5AdEnvD1Ev
 2821 00d8 00000000 		.word	.LANCHOR5
 2822 00dc 00000000 		.word	.LANCHOR8
 2823 00e0 00000000 		.word	.LANCHOR9
 2824 00e4 00000000 		.word	.LANCHOR10
 2825 00e8 00000000 		.word	.LANCHOR11
 2826 00ec 00000000 		.word	_ZN7daisysp5MetroD1Ev
 2827 00f0 00000000 		.word	.LANCHOR6
 2828 00f4 00000000 		.word	_ZN7daisysp10MoogLadderD1Ev
 2829 00f8 00000000 		.word	.LANCHOR7
 2830 00fc 00000000 		.word	__tcf_0
 2831              	.LBE870:
 2832              	.LBE872:
 2833              		.cfi_endproc
 2834              	.LFE4788:
 2836              		.section	.init_array,"aw",%init_array
 2837              		.align	2
 2838 0000 00000000 		.word	_GLOBAL__sub_I_pod(target1)
 2839              		.global	k2
 2840              		.global	k1
 2841              		.global	filterFrequency
 2842              		.global	tickFrequency
 2843              		.global	oldk2
 2844              		.global	oldk1
 2845              		.global	pent
 2846              		.global	colors
 2847              		.global	env_out
 2848              		.global	active
 2849              		.global	pitch
 2850              		.global	dec
 2851              		.global	wave
 2852              		.global	step
 2853              		.global	editCycle
 2854              		.global	edit
 2855              		.global	flt
 2856              		.global	tick
 2857              		.global	filterFreqParam
 2858              		.global	tickFreqParam
ARM GAS  /tmp/cckObu0D.s 			page 82


 2859              		.global	pitchParam
 2860              		.global	decayTimeParam
 2861              		.global	env
 2862              		.global	osc
 2863              		.global	pod
 2864              		.section	.rodata
 2865              		.align	2
 2866              		.set	.LANCHOR24,. + 0
 2867              	.LC0:
 2868 0000 01       		.byte	1
 2869 0001 07       		.byte	7
 2870 0002 0000     		.space	2
 2871              	.LC1:
 2872 0004 01       		.byte	1
 2873 0005 06       		.byte	6
 2874              		.section	.bss.active,"aw",%nobits
 2875              		.align	2
 2876              		.set	.LANCHOR20,. + 0
 2879              	active:
 2880 0000 00000000 		.space	8
 2880      00000000 
 2881              		.section	.bss.colors,"aw",%nobits
 2882              		.align	2
 2883              		.set	.LANCHOR22,. + 0
 2886              	colors:
 2887 0000 00000000 		.space	96
 2887      00000000 
 2887      00000000 
 2887      00000000 
 2887      00000000 
 2888              		.section	.bss.dec,"aw",%nobits
 2889              		.align	2
 2890              		.set	.LANCHOR19,. + 0
 2893              	dec:
 2894 0000 00000000 		.space	32
 2894      00000000 
 2894      00000000 
 2894      00000000 
 2894      00000000 
 2895              		.section	.bss.decayTimeParam,"aw",%nobits
 2896              		.align	2
 2897              		.set	.LANCHOR8,. + 0
 2900              	decayTimeParam:
 2901 0000 00000000 		.space	56
 2901      00000000 
 2901      00000000 
 2901      00000000 
 2901      00000000 
 2902              		.section	.bss.edit,"aw",%nobits
 2903              		.set	.LANCHOR14,. + 0
 2906              	edit:
 2907 0000 00       		.space	1
 2908              		.section	.bss.editCycle,"aw",%nobits
 2909              		.set	.LANCHOR15,. + 0
 2912              	editCycle:
 2913 0000 00       		.space	1
 2914              		.section	.bss.env,"aw",%nobits
ARM GAS  /tmp/cckObu0D.s 			page 83


 2915              		.align	2
 2916              		.set	.LANCHOR5,. + 0
 2919              	env:
 2920 0000 00000000 		.space	56
 2920      00000000 
 2920      00000000 
 2920      00000000 
 2920      00000000 
 2921              		.section	.bss.env_out,"aw",%nobits
 2922              		.align	2
 2923              		.set	.LANCHOR17,. + 0
 2926              	env_out:
 2927 0000 00000000 		.space	4
 2928              		.section	.bss.filterFreqParam,"aw",%nobits
 2929              		.align	2
 2930              		.set	.LANCHOR11,. + 0
 2933              	filterFreqParam:
 2934 0000 00000000 		.space	56
 2934      00000000 
 2934      00000000 
 2934      00000000 
 2934      00000000 
 2935              		.section	.bss.filterFrequency,"aw",%nobits
 2936              		.align	2
 2937              		.set	.LANCHOR1,. + 0
 2940              	filterFrequency:
 2941 0000 00000000 		.space	4
 2942              		.section	.bss.flt,"aw",%nobits
 2943              		.align	2
 2944              		.set	.LANCHOR7,. + 0
 2947              	flt:
 2948 0000 00000000 		.space	68
 2948      00000000 
 2948      00000000 
 2948      00000000 
 2948      00000000 
 2949              		.section	.bss.k1,"aw",%nobits
 2950              		.align	2
 2951              		.set	.LANCHOR3,. + 0
 2954              	k1:
 2955 0000 00000000 		.space	4
 2956              		.section	.bss.k2,"aw",%nobits
 2957              		.align	2
 2958              		.set	.LANCHOR2,. + 0
 2961              	k2:
 2962 0000 00000000 		.space	4
 2963              		.section	.bss.oldk1,"aw",%nobits
 2964              		.align	2
 2965              		.set	.LANCHOR13,. + 0
 2968              	oldk1:
 2969 0000 00000000 		.space	4
 2970              		.section	.bss.oldk2,"aw",%nobits
 2971              		.align	2
 2972              		.set	.LANCHOR12,. + 0
 2975              	oldk2:
 2976 0000 00000000 		.space	4
 2977              		.section	.bss.osc,"aw",%nobits
ARM GAS  /tmp/cckObu0D.s 			page 84


 2978              		.align	2
 2979              		.set	.LANCHOR4,. + 0
 2982              	osc:
 2983 0000 00000000 		.space	40
 2983      00000000 
 2983      00000000 
 2983      00000000 
 2983      00000000 
 2984              		.section	.bss.pitch,"aw",%nobits
 2985              		.align	2
 2986              		.set	.LANCHOR21,. + 0
 2989              	pitch:
 2990 0000 00000000 		.space	32
 2990      00000000 
 2990      00000000 
 2990      00000000 
 2990      00000000 
 2991              		.section	.bss.pitchParam,"aw",%nobits
 2992              		.align	2
 2993              		.set	.LANCHOR9,. + 0
 2996              	pitchParam:
 2997 0000 00000000 		.space	56
 2997      00000000 
 2997      00000000 
 2997      00000000 
 2997      00000000 
 2998              		.section	.bss.pod,"aw",%nobits
 2999              		.align	2
 3002              	pod:
 3003 0000 00000000 		.space	37424
 3003      00000000 
 3003      00000000 
 3003      00000000 
 3003      00000000 
 3004              		.section	.bss.step,"aw",%nobits
 3005              		.set	.LANCHOR16,. + 0
 3008              	step:
 3009 0000 00       		.space	1
 3010              		.section	.bss.tick,"aw",%nobits
 3011              		.align	2
 3012              		.set	.LANCHOR6,. + 0
 3015              	tick:
 3016 0000 00000000 		.space	16
 3016      00000000 
 3016      00000000 
 3016      00000000 
 3017              		.section	.bss.tickFreqParam,"aw",%nobits
 3018              		.align	2
 3019              		.set	.LANCHOR10,. + 0
 3022              	tickFreqParam:
 3023 0000 00000000 		.space	56
 3023      00000000 
 3023      00000000 
 3023      00000000 
 3023      00000000 
 3024              		.section	.bss.tickFrequency,"aw",%nobits
 3025              		.align	2
ARM GAS  /tmp/cckObu0D.s 			page 85


 3026              		.set	.LANCHOR0,. + 0
 3029              	tickFrequency:
 3030 0000 00000000 		.space	4
 3031              		.section	.bss.wave,"aw",%nobits
 3032              		.set	.LANCHOR18,. + 0
 3035              	wave:
 3036 0000 00       		.space	1
 3037              		.section	.data.pent,"aw"
 3038              		.align	2
 3039              		.set	.LANCHOR23,. + 0
 3042              	pent:
 3043 0000 0000DC42 		.word	1121714176
 3044 0004 7B540043 		.word	1124095099
 3045 0008 F6A81243 		.word	1125296374
 3046 000c 7F2A2E43 		.word	1127099007
 3047 0010 00804043 		.word	1128300544
 3048              		.text
 3049              	.Letext0:
 3050              		.file 24 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 3051              		.file 25 "../../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 3052              		.file 26 "../../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 3053              		.file 27 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 3054              		.file 28 "/usr/include/newlib/c++/9.2.1/cmath"
 3055              		.file 29 "/usr/include/newlib/c++/9.2.1/cstdlib"
 3056              		.file 30 "/usr/include/newlib/c++/9.2.1/cstdint"
 3057              		.file 31 "/usr/include/newlib/c++/9.2.1/type_traits"
 3058              		.file 32 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/c++config.h"
 3059              		.file 33 "/usr/include/newlib/c++/9.2.1/bits/stl_pair.h"
 3060              		.file 34 "/usr/include/newlib/c++/9.2.1/debug/debug.h"
 3061              		.file 35 "/usr/include/newlib/c++/9.2.1/bits/algorithmfwd.h"
 3062              		.file 36 "/usr/include/newlib/c++/9.2.1/bits/exception_ptr.h"
 3063              		.file 37 "/usr/include/newlib/c++/9.2.1/new"
 3064              		.file 38 "/usr/include/newlib/c++/9.2.1/cstdarg"
 3065              		.file 39 "/usr/include/newlib/c++/9.2.1/cstdio"
 3066              		.file 40 "/usr/include/newlib/c++/9.2.1/cwchar"
 3067              		.file 41 "/usr/include/newlib/c++/9.2.1/clocale"
 3068              		.file 42 "/usr/include/newlib/c++/9.2.1/bits/basic_string.h"
 3069              		.file 43 "/usr/include/newlib/c++/9.2.1/bits/uniform_int_dist.h"
 3070              		.file 44 "/usr/include/newlib/c++/9.2.1/bits/random.h"
 3071              		.file 45 "/usr/include/newlib/c++/9.2.1/cstring"
 3072              		.file 46 "/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h"
 3073              		.file 47 "/usr/include/newlib/c++/9.2.1/ext/numeric_traits.h"
 3074              		.file 48 "/usr/include/newlib/c++/9.2.1/ext/new_allocator.h"
 3075              		.file 49 "/usr/include/newlib/sys/_types.h"
 3076              		.file 50 "<built-in>"
 3077              		.file 51 "/usr/include/newlib/sys/reent.h"
 3078              		.file 52 "/usr/include/newlib/sys/lock.h"
 3079              		.file 53 "/usr/include/newlib/math.h"
 3080              		.file 54 "/usr/include/newlib/stdlib.h"
 3081              		.file 55 "/usr/include/newlib/c++/9.2.1/math.h"
 3082              		.file 56 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 3083              		.file 57 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 3084              		.file 58 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 3085              		.file 59 "../../libdaisy/src/daisy_core.h"
 3086              		.file 60 "../../libdaisy/src/per/tim.h"
 3087              		.file 61 "../../libdaisy/src/per/sai.h"
 3088              		.file 62 "../../libdaisy/src/hid/MidiEvent.h"
ARM GAS  /tmp/cckObu0D.s 			page 86


 3089              		.file 63 "../../libdaisy/src/util/wav_format.h"
 3090              		.file 64 "../../libdaisy/src/per/qspi.h"
 3091              		.file 65 "../../libdaisy/src/per/gpio.h"
 3092              		.file 66 "../../libdaisy/src/dev/sdram.h"
 3093              		.file 67 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdarg.h"
 3094              		.file 68 "/usr/include/newlib/stdio.h"
 3095              		.file 69 "/usr/include/newlib/sys/unistd.h"
 3096              		.file 70 "../../libdaisy/src/util/oled_fonts.h"
 3097              		.file 71 "../../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 3098              		.file 72 "../../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 3099              		.file 73 "../../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 3100              		.file 74 "../../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 3101              		.file 75 "../../libdaisy/src/util/sd_diskio.h"
 3102              		.file 76 "../../libdaisy/src/sys/fatfs.h"
 3103              		.file 77 "../../DaisySP/Source/Utility/dsp.h"
 3104              		.file 78 "/usr/include/newlib/wchar.h"
 3105              		.file 79 "/usr/include/newlib/locale.h"
 3106              		.file 80 "/usr/include/newlib/ctype.h"
 3107              		.file 81 "/usr/include/newlib/sys/errno.h"
 3108              		.file 82 "/usr/include/newlib/string.h"
 3109              		.file 83 "../../libdaisy/src/dev/sr_595.h"
ARM GAS  /tmp/cckObu0D.s 			page 87


DEFINED SYMBOLS
                            *ABS*:0000000000000000 StepSequencer.cpp
     /tmp/cckObu0D.s:17     .text._ZN5daisy9ParameterD2Ev:0000000000000000 $t
     /tmp/cckObu0D.s:26     .text._ZN5daisy9ParameterD2Ev:0000000000000000 _ZN5daisy9ParameterD2Ev
     /tmp/cckObu0D.s:26     .text._ZN5daisy9ParameterD2Ev:0000000000000000 _ZN5daisy9ParameterD1Ev
     /tmp/cckObu0D.s:49     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 $t
     /tmp/cckObu0D.s:57     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD2Ev
     /tmp/cckObu0D.s:57     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD1Ev
     /tmp/cckObu0D.s:184    .text._ZN7daisysp5AdEnvD2Ev:0000000000000000 $t
     /tmp/cckObu0D.s:192    .text._ZN7daisysp5AdEnvD2Ev:0000000000000000 _ZN7daisysp5AdEnvD2Ev
     /tmp/cckObu0D.s:192    .text._ZN7daisysp5AdEnvD2Ev:0000000000000000 _ZN7daisysp5AdEnvD1Ev
     /tmp/cckObu0D.s:209    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
     /tmp/cckObu0D.s:217    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
     /tmp/cckObu0D.s:217    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
     /tmp/cckObu0D.s:234    .text._ZN7daisysp10MoogLadderD2Ev:0000000000000000 $t
     /tmp/cckObu0D.s:242    .text._ZN7daisysp10MoogLadderD2Ev:0000000000000000 _ZN7daisysp10MoogLadderD2Ev
     /tmp/cckObu0D.s:242    .text._ZN7daisysp10MoogLadderD2Ev:0000000000000000 _ZN7daisysp10MoogLadderD1Ev
     /tmp/cckObu0D.s:259    .text._ZN7daisysp5MetroD2Ev:0000000000000000 $t
     /tmp/cckObu0D.s:267    .text._ZN7daisysp5MetroD2Ev:0000000000000000 _ZN7daisysp5MetroD2Ev
     /tmp/cckObu0D.s:267    .text._ZN7daisysp5MetroD2Ev:0000000000000000 _ZN7daisysp5MetroD1Ev
     /tmp/cckObu0D.s:284    .text.__tcf_0:0000000000000000 $t
     /tmp/cckObu0D.s:291    .text.__tcf_0:0000000000000000 __tcf_0
     /tmp/cckObu0D.s:305    .text.startup.main:0000000000000000 $t
     /tmp/cckObu0D.s:313    .text.startup.main:0000000000000000 main
     /tmp/cckObu0D.s:807    .text.startup.main:00000000000001ec $d
     /tmp/cckObu0D.s:3002   .bss.pod:0000000000000000 pod
     /tmp/cckObu0D.s:2212   .text._ZL13AudioCallbackPKfPfj:0000000000000000 _ZL13AudioCallbackPKfPfj
     /tmp/cckObu0D.s:846    .text._Z20ConditionalParameterffRff:0000000000000000 $t
     /tmp/cckObu0D.s:854    .text._Z20ConditionalParameterffRff:0000000000000000 _Z20ConditionalParameterffRff
     /tmp/cckObu0D.s:899    .text._Z20ConditionalParameterffRff:0000000000000020 $d
     /tmp/cckObu0D.s:905    .text._Z20UpdateEncoderPressedv:0000000000000000 $t
     /tmp/cckObu0D.s:913    .text._Z20UpdateEncoderPressedv:0000000000000000 _Z20UpdateEncoderPressedv
     /tmp/cckObu0D.s:973    .text._Z20UpdateEncoderPressedv:0000000000000028 $d
     /tmp/cckObu0D.s:981    .text._Z22UpdateEncoderIncrementv:0000000000000000 $t
     /tmp/cckObu0D.s:989    .text._Z22UpdateEncoderIncrementv:0000000000000000 _Z22UpdateEncoderIncrementv
     /tmp/cckObu0D.s:1070   .text._Z22UpdateEncoderIncrementv:0000000000000030 $d
     /tmp/cckObu0D.s:1079   .text._Z13UpdateButtonsv:0000000000000000 $t
     /tmp/cckObu0D.s:1087   .text._Z13UpdateButtonsv:0000000000000000 _Z13UpdateButtonsv
     /tmp/cckObu0D.s:1164   .text._Z13UpdateButtonsv:0000000000000040 $d
     /tmp/cckObu0D.s:1173   .text._Z11UpdateKnobsv:0000000000000000 $t
     /tmp/cckObu0D.s:1181   .text._Z11UpdateKnobsv:0000000000000000 _Z11UpdateKnobsv
     /tmp/cckObu0D.s:1602   .text._Z11UpdateKnobsv:0000000000000178 $d
     /tmp/cckObu0D.s:1633   .text._Z13UpdateLedEditv:0000000000000000 $t
     /tmp/cckObu0D.s:1641   .text._Z13UpdateLedEditv:0000000000000000 _Z13UpdateLedEditv
     /tmp/cckObu0D.s:1749   .text._Z13UpdateLedEditv:0000000000000068 $d
     /tmp/cckObu0D.s:1760   .text._Z10UpdateLedsv:0000000000000000 $t
     /tmp/cckObu0D.s:1768   .text._Z10UpdateLedsv:0000000000000000 _Z10UpdateLedsv
     /tmp/cckObu0D.s:1833   .text._Z10UpdateLedsv:0000000000000048 $d
     /tmp/cckObu0D.s:1843   .text._Z8Controlsv:0000000000000000 $t
     /tmp/cckObu0D.s:1851   .text._Z8Controlsv:0000000000000000 _Z8Controlsv
     /tmp/cckObu0D.s:1953   .text._Z8Controlsv:0000000000000048 $d
     /tmp/cckObu0D.s:1963   .text._Z11NextSamplesRf:0000000000000000 $t
     /tmp/cckObu0D.s:1971   .text._Z11NextSamplesRf:0000000000000000 _Z11NextSamplesRf
     /tmp/cckObu0D.s:2188   .text._Z11NextSamplesRf:0000000000000098 $d
     /tmp/cckObu0D.s:2205   .text._ZL13AudioCallbackPKfPfj:0000000000000000 $t
     /tmp/cckObu0D.s:2285   .text.startup._GLOBAL__sub_I_pod:0000000000000000 $t
     /tmp/cckObu0D.s:2292   .text.startup._GLOBAL__sub_I_pod:0000000000000000 _GLOBAL__sub_I_pod
ARM GAS  /tmp/cckObu0D.s 			page 88


     /tmp/cckObu0D.s:2812   .text.startup._GLOBAL__sub_I_pod:00000000000000b4 $d
     /tmp/cckObu0D.s:2837   .init_array:0000000000000000 $d
     /tmp/cckObu0D.s:2961   .bss.k2:0000000000000000 k2
     /tmp/cckObu0D.s:2954   .bss.k1:0000000000000000 k1
     /tmp/cckObu0D.s:2940   .bss.filterFrequency:0000000000000000 filterFrequency
     /tmp/cckObu0D.s:3029   .bss.tickFrequency:0000000000000000 tickFrequency
     /tmp/cckObu0D.s:2975   .bss.oldk2:0000000000000000 oldk2
     /tmp/cckObu0D.s:2968   .bss.oldk1:0000000000000000 oldk1
     /tmp/cckObu0D.s:3042   .data.pent:0000000000000000 pent
     /tmp/cckObu0D.s:2886   .bss.colors:0000000000000000 colors
     /tmp/cckObu0D.s:2926   .bss.env_out:0000000000000000 env_out
     /tmp/cckObu0D.s:2879   .bss.active:0000000000000000 active
     /tmp/cckObu0D.s:2989   .bss.pitch:0000000000000000 pitch
     /tmp/cckObu0D.s:2893   .bss.dec:0000000000000000 dec
     /tmp/cckObu0D.s:3035   .bss.wave:0000000000000000 wave
     /tmp/cckObu0D.s:3008   .bss.step:0000000000000000 step
     /tmp/cckObu0D.s:2912   .bss.editCycle:0000000000000000 editCycle
     /tmp/cckObu0D.s:2906   .bss.edit:0000000000000000 edit
     /tmp/cckObu0D.s:2947   .bss.flt:0000000000000000 flt
     /tmp/cckObu0D.s:3015   .bss.tick:0000000000000000 tick
     /tmp/cckObu0D.s:2933   .bss.filterFreqParam:0000000000000000 filterFreqParam
     /tmp/cckObu0D.s:3022   .bss.tickFreqParam:0000000000000000 tickFreqParam
     /tmp/cckObu0D.s:2996   .bss.pitchParam:0000000000000000 pitchParam
     /tmp/cckObu0D.s:2900   .bss.decayTimeParam:0000000000000000 decayTimeParam
     /tmp/cckObu0D.s:2919   .bss.env:0000000000000000 env
     /tmp/cckObu0D.s:2982   .bss.osc:0000000000000000 osc
     /tmp/cckObu0D.s:2865   .rodata:0000000000000000 $d
     /tmp/cckObu0D.s:2875   .bss.active:0000000000000000 $d
     /tmp/cckObu0D.s:2882   .bss.colors:0000000000000000 $d
     /tmp/cckObu0D.s:2889   .bss.dec:0000000000000000 $d
     /tmp/cckObu0D.s:2896   .bss.decayTimeParam:0000000000000000 $d
     /tmp/cckObu0D.s:2907   .bss.edit:0000000000000000 $d
     /tmp/cckObu0D.s:2913   .bss.editCycle:0000000000000000 $d
     /tmp/cckObu0D.s:2915   .bss.env:0000000000000000 $d
     /tmp/cckObu0D.s:2922   .bss.env_out:0000000000000000 $d
     /tmp/cckObu0D.s:2929   .bss.filterFreqParam:0000000000000000 $d
     /tmp/cckObu0D.s:2936   .bss.filterFrequency:0000000000000000 $d
     /tmp/cckObu0D.s:2943   .bss.flt:0000000000000000 $d
     /tmp/cckObu0D.s:2950   .bss.k1:0000000000000000 $d
     /tmp/cckObu0D.s:2957   .bss.k2:0000000000000000 $d
     /tmp/cckObu0D.s:2964   .bss.oldk1:0000000000000000 $d
     /tmp/cckObu0D.s:2971   .bss.oldk2:0000000000000000 $d
     /tmp/cckObu0D.s:2978   .bss.osc:0000000000000000 $d
     /tmp/cckObu0D.s:2985   .bss.pitch:0000000000000000 $d
     /tmp/cckObu0D.s:2992   .bss.pitchParam:0000000000000000 $d
     /tmp/cckObu0D.s:2999   .bss.pod:0000000000000000 $d
     /tmp/cckObu0D.s:3009   .bss.step:0000000000000000 $d
     /tmp/cckObu0D.s:3011   .bss.tick:0000000000000000 $d
     /tmp/cckObu0D.s:3018   .bss.tickFreqParam:0000000000000000 $d
     /tmp/cckObu0D.s:3025   .bss.tickFrequency:0000000000000000 $d
     /tmp/cckObu0D.s:3036   .bss.wave:0000000000000000 $d
     /tmp/cckObu0D.s:3038   .data.pent:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy9ParameterD5Ev
                           .group:0000000000000000 _ZN5daisy8DaisyPodD5Ev
                           .group:0000000000000000 _ZN7daisysp5AdEnvD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN7daisysp10MoogLadderD5Ev
ARM GAS  /tmp/cckObu0D.s 			page 89


                           .group:0000000000000000 _ZN7daisysp5MetroD5Ev

UNDEFINED SYMBOLS
_ZN5daisy8DaisyPod4InitEb
_ZN5daisy8DaisyPod15AudioSampleRateEv
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp5AdEnv4InitEf
_ZN7daisysp5Metro4InitEff
_ZN7daisysp10MoogLadder4InitEf
_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
_ZN5daisy5Color4InitENS0_11PresetColorE
_ZN5daisy5Color4InitEfff
_ZN5daisy8DaisyPod8StartAdcEv
_ZN5daisy8DaisyPod10StartAudioEPFvPKfPfjE
_ZN5daisy13AnalogControl7ProcessEv
_ZN5daisy9Parameter7ProcessEv
_ZN7daisysp5Metro7SetFreqEf
_ZN5daisy6RgbLed8SetColorENS_5ColorE
_ZN5daisy8DaisyPod10UpdateLedsEv
_ZN5daisy6RgbLed3SetEfff
_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
_ZN7daisysp5AdEnv7ProcessEv
_ZN7daisysp10Oscillator7ProcessEv
_ZN7daisysp10MoogLadder7ProcessEf
_ZN7daisysp5Metro7ProcessEv
__aeabi_atexit
__dso_handle
