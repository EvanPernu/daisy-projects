ARM GAS  /tmp/ccDsoCRY.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stft.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN4STFT5ResetEv,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	_ZN4STFT5ResetEv
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN4STFT5ResetEv:
  27              	.LVL0:
  28              	.LFB4289:
  29              		.file 1 "dsp/pvoc/stft.cpp"
   1:dsp/pvoc/stft.cpp **** // Copyright 2014 Emilie Gillet.
   2:dsp/pvoc/stft.cpp **** //
   3:dsp/pvoc/stft.cpp **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/pvoc/stft.cpp **** //
   5:dsp/pvoc/stft.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/pvoc/stft.cpp **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/pvoc/stft.cpp **** // in the Software without restriction, including without limitation the rights
   8:dsp/pvoc/stft.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/pvoc/stft.cpp **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/pvoc/stft.cpp **** // furnished to do so, subject to the following conditions:
  11:dsp/pvoc/stft.cpp **** //
  12:dsp/pvoc/stft.cpp **** // The above copyright notice and this permission notice shall be included in
  13:dsp/pvoc/stft.cpp **** // all copies or substantial portions of the Software.
  14:dsp/pvoc/stft.cpp **** //
  15:dsp/pvoc/stft.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/pvoc/stft.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/pvoc/stft.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/pvoc/stft.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/pvoc/stft.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/pvoc/stft.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/pvoc/stft.cpp **** // THE SOFTWARE.
  22:dsp/pvoc/stft.cpp **** //
  23:dsp/pvoc/stft.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/pvoc/stft.cpp **** //
  25:dsp/pvoc/stft.cpp **** // -----------------------------------------------------------------------------
  26:dsp/pvoc/stft.cpp **** //
  27:dsp/pvoc/stft.cpp **** // STFT with overlap-add.
  28:dsp/pvoc/stft.cpp **** 
  29:dsp/pvoc/stft.cpp **** #include "stft.h"
ARM GAS  /tmp/ccDsoCRY.s 			page 2


  30:dsp/pvoc/stft.cpp **** #include "stmtemp.h"
  31:dsp/pvoc/stft.cpp **** #include <algorithm>
  32:dsp/pvoc/stft.cpp **** 
  33:dsp/pvoc/stft.cpp **** using namespace daisysp;
  34:dsp/pvoc/stft.cpp **** using namespace std;
  35:dsp/pvoc/stft.cpp **** using namespace daisy;
  36:dsp/pvoc/stft.cpp **** 
  37:dsp/pvoc/stft.cpp **** void STFT::Init(FFT*         fft,
  38:dsp/pvoc/stft.cpp ****                 size_t       fft_size,
  39:dsp/pvoc/stft.cpp ****                 size_t       hop_size,
  40:dsp/pvoc/stft.cpp ****                 float*       fft_buffer,
  41:dsp/pvoc/stft.cpp ****                 float*       ifft_buffer,
  42:dsp/pvoc/stft.cpp ****                 const float* window_lut,
  43:dsp/pvoc/stft.cpp ****                 short*       analysis_synthesis_buffer,
  44:dsp/pvoc/stft.cpp ****                 Modifier*    modifier)
  45:dsp/pvoc/stft.cpp **** {
  46:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
  47:dsp/pvoc/stft.cpp ****     hop_size_       = hop_size;
  48:dsp/pvoc/stft.cpp ****     fft_num_passes_ = 0;
  49:dsp/pvoc/stft.cpp ****     for(size_t t = fft_size; t > 1; t >>= 1)
  50:dsp/pvoc/stft.cpp ****     {
  51:dsp/pvoc/stft.cpp ****         ++fft_num_passes_;
  52:dsp/pvoc/stft.cpp ****     }
  53:dsp/pvoc/stft.cpp ****     buffer_size_ = fft_size_ + hop_size_;
  54:dsp/pvoc/stft.cpp **** 
  55:dsp/pvoc/stft.cpp ****     fft_ = fft;
  56:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
  57:dsp/pvoc/stft.cpp ****     arm_rfft_fast_init_f32(fft_, fft_size);
  58:dsp/pvoc/stft.cpp **** #else
  59:dsp/pvoc/stft.cpp ****     fft_->Init();
  60:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
  61:dsp/pvoc/stft.cpp **** 
  62:dsp/pvoc/stft.cpp ****     analysis_  = &analysis_synthesis_buffer[0];
  63:dsp/pvoc/stft.cpp ****     synthesis_ = &analysis_synthesis_buffer[buffer_size_];
  64:dsp/pvoc/stft.cpp **** 
  65:dsp/pvoc/stft.cpp ****     ifft_in_ = fft_in_ = fft_buffer;
  66:dsp/pvoc/stft.cpp ****     ifft_out_ = fft_out_ = ifft_buffer;
  67:dsp/pvoc/stft.cpp **** 
  68:dsp/pvoc/stft.cpp ****     window_        = window_lut;
  69:dsp/pvoc/stft.cpp ****     window_stride_ = LUT_SINE_WINDOW_4096_SIZE / fft_size;
  70:dsp/pvoc/stft.cpp ****     modifier_      = modifier;
  71:dsp/pvoc/stft.cpp **** 
  72:dsp/pvoc/stft.cpp ****     parameters_ = NULL;
  73:dsp/pvoc/stft.cpp **** 
  74:dsp/pvoc/stft.cpp ****     Reset();
  75:dsp/pvoc/stft.cpp **** }
  76:dsp/pvoc/stft.cpp **** 
  77:dsp/pvoc/stft.cpp **** void STFT::Reset()
  78:dsp/pvoc/stft.cpp **** {
  30              		.loc 1 78 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  79:dsp/pvoc/stft.cpp ****     buffer_ptr_  = 0;
  35              		.loc 1 79 5 view .LVU1
  80:dsp/pvoc/stft.cpp ****     process_ptr_ = (2 * hop_size_) % buffer_size_;
ARM GAS  /tmp/ccDsoCRY.s 			page 3


  36              		.loc 1 80 38 is_stmt 0 view .LVU2
  37 0000 D0E90321 		ldrd	r2, r1, [r0, #12]
  79:dsp/pvoc/stft.cpp ****     buffer_ptr_  = 0;
  38              		.loc 1 79 18 view .LVU3
  39 0004 0023     		movs	r3, #0
  40              		.loc 1 80 23 view .LVU4
  41 0006 5200     		lsls	r2, r2, #1
  79:dsp/pvoc/stft.cpp ****     buffer_ptr_  = 0;
  42              		.loc 1 79 18 view .LVU5
  43 0008 4363     		str	r3, [r0, #52]
  44              		.loc 1 80 5 is_stmt 1 view .LVU6
  81:dsp/pvoc/stft.cpp ****     block_size_  = 0;
  45              		.loc 1 81 18 is_stmt 0 view .LVU7
  46 000a C363     		str	r3, [r0, #60]
  82:dsp/pvoc/stft.cpp ****     fill(&analysis_[0], &analysis_[buffer_size_], 0);
  47              		.loc 1 82 11 view .LVU8
  48 000c C36A     		ldr	r3, [r0, #44]
  78:dsp/pvoc/stft.cpp ****     buffer_ptr_  = 0;
  49              		.loc 1 78 1 view .LVU9
  50 000e 30B4     		push	{r4, r5}
  51              		.cfi_def_cfa_offset 8
  52              		.cfi_offset 4, -8
  53              		.cfi_offset 5, -4
  80:dsp/pvoc/stft.cpp ****     block_size_  = 0;
  54              		.loc 1 80 36 view .LVU10
  55 0010 B2FBF1F5 		udiv	r5, r2, r1
  56              		.loc 1 82 48 view .LVU11
  57 0014 4C00     		lsls	r4, r1, #1
  80:dsp/pvoc/stft.cpp ****     block_size_  = 0;
  58              		.loc 1 80 36 view .LVU12
  59 0016 01FB1522 		mls	r2, r1, r5, r2
  60              		.loc 1 82 9 view .LVU13
  61 001a 03EB4101 		add	r1, r3, r1, lsl #1
  80:dsp/pvoc/stft.cpp ****     block_size_  = 0;
  62              		.loc 1 80 18 view .LVU14
  63 001e 8263     		str	r2, [r0, #56]
  81:dsp/pvoc/stft.cpp ****     fill(&analysis_[0], &analysis_[buffer_size_], 0);
  64              		.loc 1 81 5 is_stmt 1 view .LVU15
  65              		.loc 1 82 5 view .LVU16
  66              	.LVL1:
  67              	.LBB198:
  68              	.LBI198:
  69              		.file 2 "/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h"
   1:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
   3:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** //
   5:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  11:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // GNU General Public License for more details.
ARM GAS  /tmp/ccDsoCRY.s 			page 4


  15:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  16:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  20:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  25:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** /*
  26:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *
  27:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *
  30:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *
  38:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *
  39:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *
  42:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  */
  50:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  51:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  */
  55:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  56:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  59:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
ARM GAS  /tmp/ccDsoCRY.s 			page 5


  72:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  73:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** # include <type_traits>
  74:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
  75:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  76:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  77:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** {
  78:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  79:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  80:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
  81:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  82:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  83:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  84:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _BoolType>
  85:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __iter_swap
  86:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
  87:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  88:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static void
  89:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  90:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
  91:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
  92:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    _ValueType1;
  93:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
  94:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  *__a = *__b;
  95:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  *__b = __tmp;
  96:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
  97:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
  98:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  99:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<>
 100:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __iter_swap<true>
 101:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 102:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 103:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static void
 104:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 105:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 106:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  swap(*__a, *__b);
 107:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 108:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 109:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 110:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 111:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 112:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 113:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 114:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 115:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 116:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   Nothing.
 117:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 118:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 119:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  iterators themselves.
 120:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 121:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 122:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline void
 123:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 124:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 125:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 126:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 127:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 128:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
ARM GAS  /tmp/ccDsoCRY.s 			page 6


 129:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 130:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 131:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 132:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 133:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	_ValueType1;
 134:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 135:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	_ValueType2;
 136:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 137:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 138:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ValueType2>)
 139:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 140:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ValueType1>)
 141:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 142:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 143:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	_ReferenceType1;
 144:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 145:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	_ReferenceType2;
 146:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 147:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 148:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 149:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 150:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #else
 151:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       swap(*__a, *__b);
 152:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 153:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 154:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 155:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 156:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 157:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 158:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 159:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 160:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 161:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 162:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 163:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 164:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 165:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  The ranges must not overlap.
 166:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 167:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 168:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     _ForwardIterator2
 169:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 170:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 171:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 172:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 173:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 174:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 175:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 176:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 177:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 178:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 179:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 180:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 181:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return __first2;
 182:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 183:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 184:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 185:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
ARM GAS  /tmp/ccDsoCRY.s 			page 7


 186:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 187:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 188:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 189:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 190:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 191:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 192:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 193:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  preprocessor macro.
 194:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 195:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Tp>
 196:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 197:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline const _Tp&
 198:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 199:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 200:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 201:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 202:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 203:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       if (__b < __a)
 204:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	return __b;
 205:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return __a;
 206:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 207:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 208:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 209:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 210:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 211:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 212:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 213:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 214:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 215:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 216:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 217:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  preprocessor macro.
 218:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 219:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Tp>
 220:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 221:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline const _Tp&
 222:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 223:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 224:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 225:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 226:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 227:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       if (__a < __b)
 228:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	return __b;
 229:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return __a;
 230:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 231:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 232:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 233:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 234:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 235:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 236:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 237:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 238:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 239:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 240:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 241:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 242:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
ARM GAS  /tmp/ccDsoCRY.s 			page 8


 243:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 244:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 245:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline const _Tp&
 246:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 247:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 248:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 249:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       if (__comp(__b, __a))
 250:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	return __b;
 251:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return __a;
 252:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 253:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 254:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 255:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 256:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 257:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 258:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 259:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 260:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 261:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 262:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 263:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 264:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 265:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 266:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 267:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline const _Tp&
 268:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 269:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 270:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 271:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       if (__comp(__a, __b))
 272:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	return __b;
 273:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return __a;
 274:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 275:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 276:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 277:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 278:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Iterator>
 279:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _Iterator
 280:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 281:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 282:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     { return __it; }
 283:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 284:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 285:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 286:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 287:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _From, typename _To>
 288:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _From
 289:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 290:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 291:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 292:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 293:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Iterator>
 294:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _Iterator
 295:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 296:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     { return __res; }
 297:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 298:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 299:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
ARM GAS  /tmp/ccDsoCRY.s 			page 9


 300:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 301:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 302:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // a for loop with an explicit count.
 303:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 304:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 305:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move
 306:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 307:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 308:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _OI
 309:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 310:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 311:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 312:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    *__result = *__first;
 313:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result;
 314:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 315:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 316:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 317:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 318:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Category>
 319:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 320:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 321:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 322:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _OI
 323:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 324:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 325:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 326:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 327:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result;
 328:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 329:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 330:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 331:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 332:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<>
 333:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 334:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 335:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 336:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _OI
 337:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 338:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 339:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 340:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 341:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    {
 342:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	      *__result = *__first;
 343:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	      ++__first;
 344:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	      ++__result;
 345:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    }
 346:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result;
 347:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 348:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 349:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 350:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 351:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<>
 352:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 353:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 354:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 355:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _OI
 356:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
ARM GAS  /tmp/ccDsoCRY.s 			page 10


 357:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 358:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 359:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 360:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    {
 361:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 362:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	      ++__first;
 363:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	      ++__result;
 364:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    }
 365:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result;
 366:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 367:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 368:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 369:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 370:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove>
 371:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 372:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 373:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _Tp>
 374:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _Tp*
 375:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 376:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 377:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 378:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 379:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 380:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 381:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 382:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 383:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 384:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 385:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  if (_Num)
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 387:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 388:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 389:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 390:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 391:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 392:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _OI
 393:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 394:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 395:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::value_type _ValueTypeI;
 396:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
 397:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 398:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 399:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 			     && __is_pointer<_II>::__value
 400:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 			     && __is_pointer<_OI>::__value
 401:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
 402:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 403:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __simple,
 404:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 405:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 406:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 407:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 408:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 409:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _CharT>
 410:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct char_traits;
 411:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 412:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 413:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     class istreambuf_iterator;
ARM GAS  /tmp/ccDsoCRY.s 			page 11


 414:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 415:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 416:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     class ostreambuf_iterator;
 417:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 418:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 419:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 420:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 421:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 422:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 423:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 424:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 425:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 426:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 427:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 428:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 429:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 430:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 431:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 432:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				    _CharT*>::__type
 433:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 434:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 435:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 436:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 437:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _OI
 438:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 439:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 440:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 441:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 		std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 442:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 					    std::__niter_base(__last),
 443:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 					    std::__niter_base(__result)));
 444:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 445:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 446:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 447:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 448:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 449:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 450:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 451:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 452:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   result + (first - last)
 453:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 454:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 455:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 456:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 457:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 458:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 459:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 460:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 461:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  within [first,last).
 462:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 463:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 464:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _OI
 465:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 466:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 467:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 468:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 469:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 470:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
ARM GAS  /tmp/ccDsoCRY.s 			page 12


 471:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 472:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 473:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return std::__copy_move_a2<__is_move_iterator<_II>::__value>
 474:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 475:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 476:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 477:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 478:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 479:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 480:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 481:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 482:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 483:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 484:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   result + (first - last)
 485:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 486:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 487:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 488:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 489:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 490:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 491:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 492:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 493:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  within [first,last).
 494:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 495:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 496:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _OI
 497:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 498:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 499:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 500:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 501:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 502:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 503:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 504:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 505:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return std::__copy_move_a2<true>(std::__miter_base(__first),
 506:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				       std::__miter_base(__last), __result);
 507:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 508:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 509:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 510:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #else
 511:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 512:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 513:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 514:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool, bool, typename>
 515:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move_backward
 516:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 517:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 518:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _BI2
 519:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 520:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 521:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  while (__first != __last)
 522:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    *--__result = *--__last;
 523:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result;
 524:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 525:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 526:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 527:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
ARM GAS  /tmp/ccDsoCRY.s 			page 13


 528:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Category>
 529:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 530:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 531:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 532:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _BI2
 533:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 534:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 535:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  while (__first != __last)
 536:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 537:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result;
 538:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 539:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 540:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 541:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 542:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<>
 543:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 544:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 545:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 546:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _BI2
 547:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 548:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 549:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 550:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 551:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    *--__result = *--__last;
 552:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result;
 553:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 554:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 555:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 556:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 557:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<>
 558:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 559:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 560:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 561:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _BI2
 562:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 563:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 564:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 565:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 566:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 567:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result;
 568:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 569:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 570:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 571:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 572:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove>
 573:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 574:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 575:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _Tp>
 576:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _Tp*
 577:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 578:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 579:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 580:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 581:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 582:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 583:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 584:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
ARM GAS  /tmp/ccDsoCRY.s 			page 14


 585:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 586:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 587:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  if (_Num)
 588:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 589:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result - _Num;
 590:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 591:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 592:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 593:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 594:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _BI2
 595:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
 596:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 597:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::value_type _ValueType1;
 598:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI2>::value_type _ValueType2;
 599:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 600:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       const bool __simple = (__is_trivially_copyable(_ValueType1)
 601:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 			     && __is_pointer<_BI1>::__value
 602:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 			     && __is_pointer<_BI2>::__value
 603:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 			     && __are_same<_ValueType1, _ValueType2>::__value);
 604:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 605:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return std::__copy_move_backward<_IsMove, __simple,
 606:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				       _Category>::__copy_move_b(__first,
 607:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 								 __last,
 608:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 								 __result);
 609:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 610:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 611:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 612:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _BI2
 613:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 614:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 615:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 616:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 		std::__copy_move_backward_a<_IsMove>
 617:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 618:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 619:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 620:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 621:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 622:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 623:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 624:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 625:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 626:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 627:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   result - (first - last)
 628:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 629:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 630:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 631:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 632:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 633:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 634:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 635:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 636:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 637:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 638:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 639:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 640:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _BI2
 641:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
ARM GAS  /tmp/ccDsoCRY.s 			page 15


 642:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 643:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 644:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 645:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 646:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 647:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 648:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 649:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
 650:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 651:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
 652:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 653:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 654:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 655:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 656:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 657:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 658:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 659:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 660:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 661:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 662:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   result - (first - last)
 663:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 664:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 665:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 666:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 667:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 668:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 669:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 670:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 671:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 672:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 673:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 674:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 675:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _BI2
 676:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 677:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 678:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 679:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 680:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 681:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 682:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 683:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 684:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
 685:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 686:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return std::__copy_move_backward_a2<true>(std::__miter_base(__first),
 687:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 						std::__miter_base(__last),
 688:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 						__result);
 689:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 690:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 691:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::move_backward(_Tp, _Up, _Vp)
 692:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #else
 693:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::copy_backward(_Tp, _Up, _Vp)
 694:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 695:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 696:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 697:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline typename
 698:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type
ARM GAS  /tmp/ccDsoCRY.s 			page 16


 699:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __fill_a(_ForwardIterator __first, _ForwardIterator __last,
 700:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  	     const _Tp& __value)
 701:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 702:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 703:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	*__first = __value;
 704:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 705:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 706:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 707:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline typename
 708:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
 709:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __fill_a(_ForwardIterator __first, _ForwardIterator __last,
 710:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	     const _Tp& __value)
 711:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 712:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 713:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 714:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	*__first = __tmp;
 715:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 716:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 717:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // Specialization: for char types we can use memset.
 718:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Tp>
 719:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline typename
 720:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
 721:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __fill_a(_Tp* __first, _Tp* __last, const _Tp& __c)
 722:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 723:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       const _Tp __tmp = __c;
 724:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       if (const size_t __len = __last - __first)
 725:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
 726:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 727:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 728:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 729:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief Fills the range [first,last) with copies of value.
 730:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 731:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __first  A forward iterator.
 732:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __last   A forward iterator.
 733:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 734:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   Nothing.
 735:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 736:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 737:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 738:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  to @c memset or @c wmemset.
 739:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 740:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 741:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline void
 742:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
  70              		.loc 2 742 5 view .LVU17
  71              	.LBB199:
  72              	.LBI199:
 709:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	     const _Tp& __value)
  73              		.loc 2 709 5 view .LVU18
  74              	.LBB200:
 713:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	*__first = __tmp;
  75              		.loc 2 713 22 view .LVU19
  76 0020 8B42     		cmp	r3, r1
  77 0022 04D0     		beq	.L2
  78              	.LVL2:
  79              	.L3:
 714:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
ARM GAS  /tmp/ccDsoCRY.s 			page 17


  80              		.loc 2 714 2 is_stmt 0 view .LVU20
  81 0024 0022     		movs	r2, #0
  82 0026 23F8022B 		strh	r2, [r3], #2	@ movhi
  83              	.LVL3:
 713:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	*__first = __tmp;
  84              		.loc 2 713 7 is_stmt 1 view .LVU21
 713:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	*__first = __tmp;
  85              		.loc 2 713 22 view .LVU22
  86 002a 9942     		cmp	r1, r3
  87 002c FAD1     		bne	.L3
  88              	.L2:
  89              	.LVL4:
 713:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	*__first = __tmp;
  90              		.loc 2 713 22 is_stmt 0 view .LVU23
  91              	.LBE200:
  92              	.LBE199:
  93              	.LBE198:
  83:dsp/pvoc/stft.cpp ****     fill(&synthesis_[0], &synthesis_[buffer_size_], 0);
  94              		.loc 1 83 5 is_stmt 1 view .LVU24
  95              		.loc 1 83 11 is_stmt 0 view .LVU25
  96 002e 036B     		ldr	r3, [r0, #48]
  97              		.loc 1 83 9 view .LVU26
  98 0030 1919     		adds	r1, r3, r4
  99              	.LVL5:
 100              	.LBB201:
 101              	.LBI201:
 102              		.loc 2 742 5 is_stmt 1 view .LVU27
 103              	.LBB202:
 104              	.LBI202:
 709:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	     const _Tp& __value)
 105              		.loc 2 709 5 view .LVU28
 106              	.LBB203:
 713:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	*__first = __tmp;
 107              		.loc 2 713 22 view .LVU29
 108 0032 8B42     		cmp	r3, r1
 109 0034 04D0     		beq	.L4
 110              	.LVL6:
 111              	.L5:
 714:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 112              		.loc 2 714 2 is_stmt 0 view .LVU30
 113 0036 0022     		movs	r2, #0
 114 0038 23F8022B 		strh	r2, [r3], #2	@ movhi
 115              	.LVL7:
 713:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	*__first = __tmp;
 116              		.loc 2 713 7 is_stmt 1 view .LVU31
 713:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	*__first = __tmp;
 117              		.loc 2 713 22 view .LVU32
 118 003c 9942     		cmp	r1, r3
 119 003e FAD1     		bne	.L5
 120              	.L4:
 121              	.LVL8:
 713:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	*__first = __tmp;
 122              		.loc 2 713 22 is_stmt 0 view .LVU33
 123              	.LBE203:
 124              	.LBE202:
 125              	.LBE201:
  84:dsp/pvoc/stft.cpp ****     ready_ = 0;
ARM GAS  /tmp/ccDsoCRY.s 			page 18


 126              		.loc 1 84 5 is_stmt 1 view .LVU34
 127              		.loc 1 84 12 is_stmt 0 view .LVU35
 128 0040 0023     		movs	r3, #0
  85:dsp/pvoc/stft.cpp ****     done_  = 0;
  86:dsp/pvoc/stft.cpp **** }
 129              		.loc 1 86 1 view .LVU36
 130 0042 30BC     		pop	{r4, r5}
 131              		.cfi_restore 5
 132              		.cfi_restore 4
 133              		.cfi_def_cfa_offset 0
  85:dsp/pvoc/stft.cpp ****     done_  = 0;
 134              		.loc 1 85 12 view .LVU37
 135 0044 C0E91033 		strd	r3, r3, [r0, #64]
 136              		.loc 1 86 1 view .LVU38
 137 0048 7047     		bx	lr
 138              		.cfi_endproc
 139              	.LFE4289:
 141 004a 00BF     		.section	.text._ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation,
 142              		.align	1
 143              		.p2align 2,,3
 144              		.global	_ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	_ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation:
 151              	.LVL9:
 152              	.LFB4288:
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 153              		.loc 1 45 1 is_stmt 1 view -0
 154              		.cfi_startproc
 155              		@ args = 20, pretend = 0, frame = 8
 156              		@ frame_needed = 0, uses_anonymous_args = 0
  46:dsp/pvoc/stft.cpp ****     hop_size_       = hop_size;
 157              		.loc 1 46 5 view .LVU40
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 158              		.loc 1 45 1 is_stmt 0 view .LVU41
 159 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 160              		.cfi_def_cfa_offset 36
 161              		.cfi_offset 4, -36
 162              		.cfi_offset 5, -32
 163              		.cfi_offset 6, -28
 164              		.cfi_offset 7, -24
 165              		.cfi_offset 8, -20
 166              		.cfi_offset 9, -16
 167              		.cfi_offset 10, -12
 168              		.cfi_offset 11, -8
 169              		.cfi_offset 14, -4
 170 0004 1446     		mov	r4, r2
  48:dsp/pvoc/stft.cpp ****     for(size_t t = fft_size; t > 1; t >>= 1)
 171              		.loc 1 48 21 view .LVU42
 172 0006 0022     		movs	r2, #0
 173              	.LVL10:
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 174              		.loc 1 45 1 view .LVU43
 175 0008 8046     		mov	r8, r0
 176              	.LBB215:
ARM GAS  /tmp/ccDsoCRY.s 			page 19


  49:dsp/pvoc/stft.cpp ****     {
 177              		.loc 1 49 32 view .LVU44
 178 000a 012C     		cmp	r4, #1
 179              	.LBE215:
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 180              		.loc 1 45 1 view .LVU45
 181 000c 2DED028B 		vpush.64	{d8}
 182              		.cfi_def_cfa_offset 44
 183              		.cfi_offset 80, -44
 184              		.cfi_offset 81, -40
 185 0010 83B0     		sub	sp, sp, #12
 186              		.cfi_def_cfa_offset 56
  46:dsp/pvoc/stft.cpp ****     hop_size_       = hop_size;
 187              		.loc 1 46 21 view .LVU46
 188 0012 4460     		str	r4, [r0, #4]
  47:dsp/pvoc/stft.cpp ****     fft_num_passes_ = 0;
 189              		.loc 1 47 5 is_stmt 1 view .LVU47
  48:dsp/pvoc/stft.cpp ****     for(size_t t = fft_size; t > 1; t >>= 1)
 190              		.loc 1 48 21 is_stmt 0 view .LVU48
 191 0014 C0E90223 		strd	r2, r3, [r0, #8]
  49:dsp/pvoc/stft.cpp ****     {
 192              		.loc 1 49 5 is_stmt 1 view .LVU49
 193              	.LVL11:
 194              	.LBB216:
  49:dsp/pvoc/stft.cpp ****     {
 195              		.loc 1 49 32 view .LVU50
 196              	.LBE216:
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 197              		.loc 1 45 1 is_stmt 0 view .LVU51
 198 0018 129A     		ldr	r2, [sp, #72]
 199 001a DDE90E76 		ldrd	r7, r6, [sp, #56]
 200 001e DDE91095 		ldrd	r9, r5, [sp, #64]
 201 0022 0192     		str	r2, [sp, #4]
 202              	.LBB217:
  49:dsp/pvoc/stft.cpp ****     {
 203              		.loc 1 49 32 view .LVU52
 204 0024 0AD9     		bls	.L11
 205 0026 A446     		mov	ip, r4
 206 0028 0122     		movs	r2, #1
 207              	.LVL12:
 208              	.L12:
  51:dsp/pvoc/stft.cpp ****     }
 209              		.loc 1 51 9 is_stmt 1 discriminator 2 view .LVU53
  49:dsp/pvoc/stft.cpp ****     {
 210              		.loc 1 49 5 discriminator 2 view .LVU54
  49:dsp/pvoc/stft.cpp ****     {
 211              		.loc 1 49 39 is_stmt 0 discriminator 2 view .LVU55
 212 002a 4FEA5C0C 		lsr	ip, ip, #1
 213              	.LVL13:
  49:dsp/pvoc/stft.cpp ****     {
 214              		.loc 1 49 32 is_stmt 1 discriminator 2 view .LVU56
 215 002e 1046     		mov	r0, r2
 216 0030 0132     		adds	r2, r2, #1
 217 0032 BCF1010F 		cmp	ip, #1
 218 0036 F8D1     		bne	.L12
 219 0038 C8F80800 		str	r0, [r8, #8]
 220              	.LVL14:
ARM GAS  /tmp/ccDsoCRY.s 			page 20


 221              	.L11:
  49:dsp/pvoc/stft.cpp ****     {
 222              		.loc 1 49 32 is_stmt 0 discriminator 2 view .LVU57
 223              	.LBE217:
  53:dsp/pvoc/stft.cpp **** 
 224              		.loc 1 53 5 is_stmt 1 view .LVU58
  53:dsp/pvoc/stft.cpp **** 
 225              		.loc 1 53 30 is_stmt 0 view .LVU59
 226 003c 2344     		add	r3, r3, r4
 227              	.LVL15:
 228              	.LBB218:
 229              	.LBB219:
 230              		.file 3 "./shy_fft.h"
   1:./shy_fft.h   **** // Copyright 2014 Emilie Gillet.
   2:./shy_fft.h   **** //
   3:./shy_fft.h   **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:./shy_fft.h   **** //
   5:./shy_fft.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:./shy_fft.h   **** // of this software and associated documentation files (the "Software"), to deal
   7:./shy_fft.h   **** // in the Software without restriction, including without limitation the rights
   8:./shy_fft.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:./shy_fft.h   **** // copies of the Software, and to permit persons to whom the Software is
  10:./shy_fft.h   **** // furnished to do so, subject to the following conditions:
  11:./shy_fft.h   **** //
  12:./shy_fft.h   **** // The above copyright notice and this permission notice shall be included in
  13:./shy_fft.h   **** // all copies or substantial portions of the Software.
  14:./shy_fft.h   **** //
  15:./shy_fft.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:./shy_fft.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:./shy_fft.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:./shy_fft.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:./shy_fft.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:./shy_fft.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:./shy_fft.h   **** // THE SOFTWARE.
  22:./shy_fft.h   **** //
  23:./shy_fft.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:./shy_fft.h   **** //
  25:./shy_fft.h   **** // -----------------------------------------------------------------------------
  26:./shy_fft.h   **** //
  27:./shy_fft.h   **** // A modest implementation of real FFT for embedded audio applications,
  28:./shy_fft.h   **** // largely based on Laurent de Soras' FFTReal.
  29:./shy_fft.h   **** //
  30:./shy_fft.h   **** // Improvements:
  31:./shy_fft.h   **** // * No dynamic allocations.
  32:./shy_fft.h   **** // * No additional buffering (can use the input buffer as a workspace).
  33:./shy_fft.h   **** // * No big bitrev lookup table.
  34:./shy_fft.h   **** // * Keep the fixed size template signature, but also provide method for
  35:./shy_fft.h   **** //   variable size (up to the fixed size).
  36:./shy_fft.h   **** 
  37:./shy_fft.h   **** #ifndef STMLIB_FFT_SHY_FFT_H_
  38:./shy_fft.h   **** #define STMLIB_FFT_SHY_FFT_H_
  39:./shy_fft.h   **** 
  40:./shy_fft.h   **** #include <algorithm>
  41:./shy_fft.h   **** #include <cmath>
  42:./shy_fft.h   **** 
  43:./shy_fft.h   **** // Compile-time log 2
  44:./shy_fft.h   **** template <size_t x>
ARM GAS  /tmp/ccDsoCRY.s 			page 21


  45:./shy_fft.h   **** struct Log2
  46:./shy_fft.h   **** {
  47:./shy_fft.h   ****     enum
  48:./shy_fft.h   ****     {
  49:./shy_fft.h   ****         value = Log2<x / 2>::value + 1
  50:./shy_fft.h   ****     };
  51:./shy_fft.h   ****     typedef char CheckPowerOf2[((x & (x - 1)) == 0 ? 1 : -1)];
  52:./shy_fft.h   **** };
  53:./shy_fft.h   **** 
  54:./shy_fft.h   **** template <>
  55:./shy_fft.h   **** struct Log2<1>
  56:./shy_fft.h   **** {
  57:./shy_fft.h   ****     enum
  58:./shy_fft.h   ****     {
  59:./shy_fft.h   ****         value = 0
  60:./shy_fft.h   ****     };
  61:./shy_fft.h   **** };
  62:./shy_fft.h   **** 
  63:./shy_fft.h   **** 
  64:./shy_fft.h   **** // Bit reversal LUT size.
  65:./shy_fft.h   **** template <size_t>
  66:./shy_fft.h   **** struct BitReversalLut
  67:./shy_fft.h   **** {
  68:./shy_fft.h   ****     enum
  69:./shy_fft.h   ****     {
  70:./shy_fft.h   ****         size = 1
  71:./shy_fft.h   ****     };
  72:./shy_fft.h   **** };
  73:./shy_fft.h   **** template <>
  74:./shy_fft.h   **** struct BitReversalLut<3>
  75:./shy_fft.h   **** {
  76:./shy_fft.h   ****     enum
  77:./shy_fft.h   ****     {
  78:./shy_fft.h   ****         size = 2
  79:./shy_fft.h   ****     };
  80:./shy_fft.h   **** };
  81:./shy_fft.h   **** template <>
  82:./shy_fft.h   **** struct BitReversalLut<4>
  83:./shy_fft.h   **** {
  84:./shy_fft.h   ****     enum
  85:./shy_fft.h   ****     {
  86:./shy_fft.h   ****         size = 4
  87:./shy_fft.h   ****     };
  88:./shy_fft.h   **** };
  89:./shy_fft.h   **** template <>
  90:./shy_fft.h   **** struct BitReversalLut<5>
  91:./shy_fft.h   **** {
  92:./shy_fft.h   ****     enum
  93:./shy_fft.h   ****     {
  94:./shy_fft.h   ****         size = 8
  95:./shy_fft.h   ****     };
  96:./shy_fft.h   **** };
  97:./shy_fft.h   **** template <>
  98:./shy_fft.h   **** struct BitReversalLut<6>
  99:./shy_fft.h   **** {
 100:./shy_fft.h   ****     enum
 101:./shy_fft.h   ****     {
ARM GAS  /tmp/ccDsoCRY.s 			page 22


 102:./shy_fft.h   ****         size = 16
 103:./shy_fft.h   ****     };
 104:./shy_fft.h   **** };
 105:./shy_fft.h   **** template <>
 106:./shy_fft.h   **** struct BitReversalLut<7>
 107:./shy_fft.h   **** {
 108:./shy_fft.h   ****     enum
 109:./shy_fft.h   ****     {
 110:./shy_fft.h   ****         size = 32
 111:./shy_fft.h   ****     };
 112:./shy_fft.h   **** };
 113:./shy_fft.h   **** template <>
 114:./shy_fft.h   **** struct BitReversalLut<8>
 115:./shy_fft.h   **** {
 116:./shy_fft.h   ****     enum
 117:./shy_fft.h   ****     {
 118:./shy_fft.h   ****         size = 64
 119:./shy_fft.h   ****     };
 120:./shy_fft.h   **** };
 121:./shy_fft.h   **** 
 122:./shy_fft.h   **** 
 123:./shy_fft.h   **** // Typed math functions and constants.
 124:./shy_fft.h   **** template <typename T>
 125:./shy_fft.h   **** struct Math
 126:./shy_fft.h   **** {
 127:./shy_fft.h   ****     inline T pi() const;
 128:./shy_fft.h   ****     inline T sqrt_2_div_2() const;
 129:./shy_fft.h   ****     inline T cos(T x);
 130:./shy_fft.h   ****     inline T sin(T x);
 131:./shy_fft.h   **** };
 132:./shy_fft.h   **** 
 133:./shy_fft.h   **** template <>
 134:./shy_fft.h   **** struct Math<float>
 135:./shy_fft.h   **** {
 136:./shy_fft.h   ****     inline float pi() const { return 3.141592653589793f; }
 137:./shy_fft.h   ****     inline float sqrt_2_div_2() const { return 0.7071067811865476f; }
 138:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 139:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
 140:./shy_fft.h   **** };
 141:./shy_fft.h   **** 
 142:./shy_fft.h   **** template <>
 143:./shy_fft.h   **** struct Math<double>
 144:./shy_fft.h   **** {
 145:./shy_fft.h   ****     inline double pi() const { return 3.141592653589793; }
 146:./shy_fft.h   ****     inline float  sqrt_2_div_2() const { return 0.7071067811865476; }
 147:./shy_fft.h   ****     inline double cos(double x) { return cos(x); }
 148:./shy_fft.h   ****     inline double sin(double x) { return sin(x); }
 149:./shy_fft.h   **** };
 150:./shy_fft.h   **** 
 151:./shy_fft.h   **** 
 152:./shy_fft.h   **** // Look-up table for trigonometric data.
 153:./shy_fft.h   **** template <typename T, size_t num_passes>
 154:./shy_fft.h   **** class LutPhasor
 155:./shy_fft.h   **** {
 156:./shy_fft.h   ****   public:
 157:./shy_fft.h   ****     LutPhasor() {}
 158:./shy_fft.h   ****     ~LutPhasor() {}
ARM GAS  /tmp/ccDsoCRY.s 			page 23


 159:./shy_fft.h   **** 
 160:./shy_fft.h   ****     void Init()
 161:./shy_fft.h   ****     {
 162:./shy_fft.h   ****         Math<T> math;
 163:./shy_fft.h   **** 
 164:./shy_fft.h   ****         for(size_t pass = 3; pass < num_passes; ++pass)
 165:./shy_fft.h   ****         {
 166:./shy_fft.h   ****             size_t pass_size = 1L << (pass - 1);
 167:./shy_fft.h   ****             T*     pass_ptr  = &trig_lut_[(1L << (pass - 1)) - 4];
 168:./shy_fft.h   ****             T      increment = math.pi() / (pass_size << 1);
 169:./shy_fft.h   ****             T      phase     = 0.0;
 170:./shy_fft.h   ****             for(size_t i = 0; i < pass_size; ++i)
 171:./shy_fft.h   ****             {
 172:./shy_fft.h   ****                 pass_ptr[i] = math.cos(phase);
 173:./shy_fft.h   ****                 phase += increment;
 174:./shy_fft.h   ****             }
 175:./shy_fft.h   ****         }
 176:./shy_fft.h   ****     }
 177:./shy_fft.h   **** 
 178:./shy_fft.h   ****     inline void Start(size_t pass)
 179:./shy_fft.h   ****     {
 180:./shy_fft.h   ****         size_t pass_size = 1 << (pass - 1);
 181:./shy_fft.h   ****         cos_ptr_         = &trig_lut_[pass_size - 4 + 1];
 182:./shy_fft.h   ****         sin_ptr_         = &trig_lut_[pass_size + pass_size - 4 - 1];
 183:./shy_fft.h   ****     }
 184:./shy_fft.h   **** 
 185:./shy_fft.h   ****     inline void Rotate()
 186:./shy_fft.h   ****     {
 187:./shy_fft.h   ****         ++cos_ptr_;
 188:./shy_fft.h   ****         --sin_ptr_;
 189:./shy_fft.h   ****     }
 190:./shy_fft.h   **** 
 191:./shy_fft.h   ****     inline T cos() const { return *cos_ptr_; }
 192:./shy_fft.h   ****     inline T sin() const { return *sin_ptr_; }
 193:./shy_fft.h   **** 
 194:./shy_fft.h   ****   private:
 195:./shy_fft.h   ****     T  trig_lut_[(1 << (num_passes - 1)) - 4];
 196:./shy_fft.h   ****     T* cos_ptr_;
 197:./shy_fft.h   ****     T* sin_ptr_;
 198:./shy_fft.h   **** };
 199:./shy_fft.h   **** 
 200:./shy_fft.h   **** template <typename T>
 201:./shy_fft.h   **** struct LutPhasor<T, 0>
 202:./shy_fft.h   **** {
 203:./shy_fft.h   ****     void Init(){};
 204:./shy_fft.h   **** };
 205:./shy_fft.h   **** template <typename T>
 206:./shy_fft.h   **** struct LutPhasor<T, 1>
 207:./shy_fft.h   **** {
 208:./shy_fft.h   ****     void Init(){};
 209:./shy_fft.h   **** };
 210:./shy_fft.h   **** template <typename T>
 211:./shy_fft.h   **** struct LutPhasor<T, 2>
 212:./shy_fft.h   **** {
 213:./shy_fft.h   ****     void Init(){};
 214:./shy_fft.h   **** };
 215:./shy_fft.h   **** 
ARM GAS  /tmp/ccDsoCRY.s 			page 24


 216:./shy_fft.h   **** template <typename T>
 217:./shy_fft.h   **** struct LutPhasor<T, 3>
 218:./shy_fft.h   **** {
 219:./shy_fft.h   ****     void     Init(){};
 220:./shy_fft.h   ****     void     Start(size_t){};
 221:./shy_fft.h   ****     void     Rotate(){};
 222:./shy_fft.h   ****     inline T cos() const { return 1.0; }
 223:./shy_fft.h   ****     inline T sin() const { return 0.0; }
 224:./shy_fft.h   **** };
 225:./shy_fft.h   **** 
 226:./shy_fft.h   **** 
 227:./shy_fft.h   **** // Another way of generating roots of unity.
 228:./shy_fft.h   **** template <typename T, size_t num_passes>
 229:./shy_fft.h   **** class RotationPhasor
 230:./shy_fft.h   **** {
 231:./shy_fft.h   ****   public:
 232:./shy_fft.h   ****     RotationPhasor() {}
 233:./shy_fft.h   ****     ~RotationPhasor() {}
 234:./shy_fft.h   **** 
 235:./shy_fft.h   ****     void Init()
 236:./shy_fft.h   ****     {
 237:./shy_fft.h   ****         Math<T> math;
 238:./shy_fft.h   ****         for(size_t pass = 3; pass < num_passes; ++pass)
 239:./shy_fft.h   ****         {
 240:./shy_fft.h   ****             size_t index            = (pass - 3) << 1;
 241:./shy_fft.h   ****             T      angle            = math.pi() / (1 << pass);
 242:./shy_fft.h   ****             sin_cos_lut_[index]     = math.cos(angle);
 243:./shy_fft.h   ****             sin_cos_lut_[index + 1] = math.sin(angle);
 244:./shy_fft.h   ****         }
 245:./shy_fft.h   ****     }
 246:./shy_fft.h   **** 
 247:./shy_fft.h   ****     inline void Start(size_t pass)
 248:./shy_fft.h   ****     {
 249:./shy_fft.h   ****         size_t index = (pass - 3) << 1;
 250:./shy_fft.h   ****         cos_ = real_ = sin_cos_lut_[index];
 251:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 252:./shy_fft.h   ****     }
 253:./shy_fft.h   **** 
 254:./shy_fft.h   ****     inline void Rotate()
 255:./shy_fft.h   ****     {
 256:./shy_fft.h   ****         T temp = cos_ * real_ - sin_ * imag_;
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 258:./shy_fft.h   ****         cos_   = temp;
 259:./shy_fft.h   ****     }
 260:./shy_fft.h   **** 
 261:./shy_fft.h   ****     inline T cos() const { return cos_; }
 262:./shy_fft.h   ****     inline T sin() const { return sin_; }
 263:./shy_fft.h   **** 
 264:./shy_fft.h   ****   private:
 265:./shy_fft.h   ****     T sin_cos_lut_[(num_passes - 3) << 1];
 266:./shy_fft.h   ****     T cos_;
 267:./shy_fft.h   ****     T sin_;
 268:./shy_fft.h   ****     T real_;
 269:./shy_fft.h   ****     T imag_;
 270:./shy_fft.h   **** };
 271:./shy_fft.h   **** 
 272:./shy_fft.h   **** template <typename T>
ARM GAS  /tmp/ccDsoCRY.s 			page 25


 273:./shy_fft.h   **** struct RotationPhasor<T, 0>
 274:./shy_fft.h   **** {
 275:./shy_fft.h   ****     void Init(){};
 276:./shy_fft.h   **** };
 277:./shy_fft.h   **** template <typename T>
 278:./shy_fft.h   **** struct RotationPhasor<T, 1>
 279:./shy_fft.h   **** {
 280:./shy_fft.h   ****     void Init(){};
 281:./shy_fft.h   **** };
 282:./shy_fft.h   **** template <typename T>
 283:./shy_fft.h   **** struct RotationPhasor<T, 2>
 284:./shy_fft.h   **** {
 285:./shy_fft.h   ****     void Init(){};
 286:./shy_fft.h   **** };
 287:./shy_fft.h   **** 
 288:./shy_fft.h   **** template <typename T>
 289:./shy_fft.h   **** struct RotationPhasor<T, 3>
 290:./shy_fft.h   **** {
 291:./shy_fft.h   ****     void     Init(){};
 292:./shy_fft.h   ****     void     Start(size_t){};
 293:./shy_fft.h   ****     void     Rotate(){};
 294:./shy_fft.h   ****     inline T cos() const { return 1.0; }
 295:./shy_fft.h   ****     inline T sin() const { return 0.0; }
 296:./shy_fft.h   **** };
 297:./shy_fft.h   **** 
 298:./shy_fft.h   **** // Direct transform
 299:./shy_fft.h   **** template <typename T, size_t num_passes, typename Phasor>
 300:./shy_fft.h   **** struct DirectTransform
 301:./shy_fft.h   **** {
 302:./shy_fft.h   ****   private:
 303:./shy_fft.h   ****     enum
 304:./shy_fft.h   ****     {
 305:./shy_fft.h   ****         size = 1 << num_passes
 306:./shy_fft.h   ****     };
 307:./shy_fft.h   **** 
 308:./shy_fft.h   ****   public:
 309:./shy_fft.h   ****     void operator()(T* input, T* output, const uint8_t* bit_rev, Phasor* phasor)
 310:./shy_fft.h   ****     {
 311:./shy_fft.h   ****         T*      s;
 312:./shy_fft.h   ****         T*      d;
 313:./shy_fft.h   ****         Math<T> math;
 314:./shy_fft.h   **** 
 315:./shy_fft.h   ****         // First and second pass.
 316:./shy_fft.h   ****         d = output;
 317:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 4)
 318:./shy_fft.h   ****         {
 319:./shy_fft.h   ****             const T* s  = input;
 320:./shy_fft.h   ****             size_t   r0 = num_passes <= 8
 321:./shy_fft.h   ****                             ? bit_rev[i >> 2]
 322:./shy_fft.h   ****                             : ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 323:./shy_fft.h   ****                                   >> (16 - num_passes);
 324:./shy_fft.h   ****             size_t r1 = r0 + 2 * (size >> 2);
 325:./shy_fft.h   ****             size_t r2 = r0 + 1 * (size >> 2);
 326:./shy_fft.h   ****             size_t r3 = r0 + 3 * (size >> 2);
 327:./shy_fft.h   **** 
 328:./shy_fft.h   ****             d[1] = s[r0] - s[r1];
 329:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
ARM GAS  /tmp/ccDsoCRY.s 			page 26


 330:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 331:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 332:./shy_fft.h   ****             d[0] = a + b;
 333:./shy_fft.h   ****             d[2] = a - b;
 334:./shy_fft.h   ****             d += 4;
 335:./shy_fft.h   ****         }
 336:./shy_fft.h   **** 
 337:./shy_fft.h   ****         // Third pass.
 338:./shy_fft.h   ****         s = output;
 339:./shy_fft.h   ****         d = input;
 340:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 8)
 341:./shy_fft.h   ****         {
 342:./shy_fft.h   ****             T v;
 343:./shy_fft.h   **** 
 344:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 345:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 346:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 347:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 348:./shy_fft.h   **** 
 349:./shy_fft.h   ****             v        = (s[i + 5] - s[i + 7]) * math.sqrt_2_div_2();
 350:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 351:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 352:./shy_fft.h   **** 
 353:./shy_fft.h   ****             v        = (s[i + 5] + s[i + 7]) * math.sqrt_2_div_2();
 354:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 355:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 356:./shy_fft.h   ****         }
 357:./shy_fft.h   **** 
 358:./shy_fft.h   ****         // Remaining passes.
 359:./shy_fft.h   ****         for(size_t pass = 3; pass < num_passes; ++pass)
 360:./shy_fft.h   ****         {
 361:./shy_fft.h   ****             // Flip source and destination pointers
 362:./shy_fft.h   ****             {
 363:./shy_fft.h   ****                 T* tmp = s;
 364:./shy_fft.h   ****                 s      = d;
 365:./shy_fft.h   ****                 d      = tmp;
 366:./shy_fft.h   ****             }
 367:./shy_fft.h   **** 
 368:./shy_fft.h   ****             size_t n   = 1 << pass;
 369:./shy_fft.h   ****             size_t n_2 = n >> 1;
 370:./shy_fft.h   **** 
 371:./shy_fft.h   ****             for(size_t i = 0; i < size; i += (n << 1))
 372:./shy_fft.h   ****             {
 373:./shy_fft.h   ****                 T* s1r = s + i;
 374:./shy_fft.h   ****                 T* s2r = s1r + n;
 375:./shy_fft.h   ****                 T* dr  = d + i;
 376:./shy_fft.h   ****                 T* di  = dr + n;
 377:./shy_fft.h   **** 
 378:./shy_fft.h   ****                 dr[0]   = s1r[0] + s2r[0];
 379:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 380:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 381:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 382:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 383:./shy_fft.h   ****                 T* s2i  = s1i + n;
 384:./shy_fft.h   ****                 phasor->Start(pass);
 385:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 386:./shy_fft.h   ****                 {
ARM GAS  /tmp/ccDsoCRY.s 			page 27


 387:./shy_fft.h   ****                     T c = phasor->cos();
 388:./shy_fft.h   ****                     T s = phasor->sin();
 389:./shy_fft.h   ****                     T v;
 390:./shy_fft.h   **** 
 391:./shy_fft.h   ****                     v      = s2r[j] * c - s2i[j] * s;
 392:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 393:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 394:./shy_fft.h   **** 
 395:./shy_fft.h   ****                     v         = s2r[j] * s + s2i[j] * c;
 396:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 397:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 398:./shy_fft.h   ****                     phasor->Rotate();
 399:./shy_fft.h   ****                 }
 400:./shy_fft.h   ****             }
 401:./shy_fft.h   ****         }
 402:./shy_fft.h   **** 
 403:./shy_fft.h   ****         // Annoying additional data copy step.
 404:./shy_fft.h   ****         if(d != output)
 405:./shy_fft.h   ****         {
 406:./shy_fft.h   ****             std::copy(&d[0], &d[size], &output[0]);
 407:./shy_fft.h   ****         }
 408:./shy_fft.h   ****     }
 409:./shy_fft.h   **** 
 410:./shy_fft.h   ****     // The exact same thing but with "num_passes" as a run-time argument.
 411:./shy_fft.h   ****     void operator()(T*             input,
 412:./shy_fft.h   ****                     T*             output,
 413:./shy_fft.h   ****                     const uint8_t* bit_rev,
 414:./shy_fft.h   ****                     Phasor*        phasor,
 415:./shy_fft.h   ****                     size_t         rt_num_passes)
 416:./shy_fft.h   ****     {
 417:./shy_fft.h   ****         T*      s;
 418:./shy_fft.h   ****         T*      d;
 419:./shy_fft.h   ****         Math<T> math;
 420:./shy_fft.h   ****         size_t  rt_size = 1 << rt_num_passes;
 421:./shy_fft.h   ****         // First and second pass.
 422:./shy_fft.h   ****         d = output;
 423:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 4)
 424:./shy_fft.h   ****         {
 425:./shy_fft.h   ****             const T* s  = input;
 426:./shy_fft.h   ****             size_t   r0 = ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 427:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 428:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 429:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 430:./shy_fft.h   ****             size_t r3 = r0 + 3 * (rt_size >> 2);
 431:./shy_fft.h   **** 
 432:./shy_fft.h   ****             d[1] = s[r0] - s[r1];
 433:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 434:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 435:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 436:./shy_fft.h   ****             d[0] = a + b;
 437:./shy_fft.h   ****             d[2] = a - b;
 438:./shy_fft.h   ****             d += 4;
 439:./shy_fft.h   ****         }
 440:./shy_fft.h   **** 
 441:./shy_fft.h   ****         // Third pass.
 442:./shy_fft.h   ****         s = output;
 443:./shy_fft.h   ****         d = input;
ARM GAS  /tmp/ccDsoCRY.s 			page 28


 444:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 8)
 445:./shy_fft.h   ****         {
 446:./shy_fft.h   ****             T v;
 447:./shy_fft.h   **** 
 448:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 449:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 450:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 451:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 452:./shy_fft.h   **** 
 453:./shy_fft.h   ****             v        = (s[i + 5] - s[i + 7]) * math.sqrt_2_div_2();
 454:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 455:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 456:./shy_fft.h   **** 
 457:./shy_fft.h   ****             v        = (s[i + 5] + s[i + 7]) * math.sqrt_2_div_2();
 458:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 459:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 460:./shy_fft.h   ****         }
 461:./shy_fft.h   **** 
 462:./shy_fft.h   ****         // Remaining passes.
 463:./shy_fft.h   ****         for(size_t pass = 3; pass < rt_num_passes; ++pass)
 464:./shy_fft.h   ****         {
 465:./shy_fft.h   ****             // Flip source and destination pointers
 466:./shy_fft.h   ****             {
 467:./shy_fft.h   ****                 T* tmp = s;
 468:./shy_fft.h   ****                 s      = d;
 469:./shy_fft.h   ****                 d      = tmp;
 470:./shy_fft.h   ****             }
 471:./shy_fft.h   **** 
 472:./shy_fft.h   ****             size_t n   = 1 << pass;
 473:./shy_fft.h   ****             size_t n_2 = n >> 1;
 474:./shy_fft.h   **** 
 475:./shy_fft.h   ****             for(size_t i = 0; i < rt_size; i += (n << 1))
 476:./shy_fft.h   ****             {
 477:./shy_fft.h   ****                 T* s1r = s + i;
 478:./shy_fft.h   ****                 T* s2r = s1r + n;
 479:./shy_fft.h   ****                 T* dr  = d + i;
 480:./shy_fft.h   ****                 T* di  = dr + n;
 481:./shy_fft.h   **** 
 482:./shy_fft.h   ****                 dr[0]   = s1r[0] + s2r[0];
 483:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 484:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 485:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 486:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 487:./shy_fft.h   ****                 T* s2i  = s1i + n;
 488:./shy_fft.h   ****                 phasor->Start(pass);
 489:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 490:./shy_fft.h   ****                 {
 491:./shy_fft.h   ****                     T c = phasor->cos();
 492:./shy_fft.h   ****                     T s = phasor->sin();
 493:./shy_fft.h   ****                     T v;
 494:./shy_fft.h   **** 
 495:./shy_fft.h   ****                     v      = s2r[j] * c - s2i[j] * s;
 496:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 497:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 498:./shy_fft.h   **** 
 499:./shy_fft.h   ****                     v         = s2r[j] * s + s2i[j] * c;
 500:./shy_fft.h   ****                     di[j]     = v + s1i[j];
ARM GAS  /tmp/ccDsoCRY.s 			page 29


 501:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 502:./shy_fft.h   ****                     phasor->Rotate();
 503:./shy_fft.h   ****                 }
 504:./shy_fft.h   ****             }
 505:./shy_fft.h   ****         }
 506:./shy_fft.h   **** 
 507:./shy_fft.h   ****         // Annoying additional data copy step.
 508:./shy_fft.h   ****         if(d != output)
 509:./shy_fft.h   ****         {
 510:./shy_fft.h   ****             std::copy(&d[0], &d[rt_size], &output[0]);
 511:./shy_fft.h   ****         }
 512:./shy_fft.h   ****     }
 513:./shy_fft.h   **** };
 514:./shy_fft.h   **** 
 515:./shy_fft.h   **** template <typename T, typename Phasor>
 516:./shy_fft.h   **** struct DirectTransform<T, 0, Phasor>
 517:./shy_fft.h   **** {
 518:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 519:./shy_fft.h   ****     {
 520:./shy_fft.h   ****         o[0] = i[0];
 521:./shy_fft.h   ****     }
 522:./shy_fft.h   **** };
 523:./shy_fft.h   **** 
 524:./shy_fft.h   **** template <typename T, typename Phasor>
 525:./shy_fft.h   **** struct DirectTransform<T, 1, Phasor>
 526:./shy_fft.h   **** {
 527:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 528:./shy_fft.h   ****     {
 529:./shy_fft.h   ****         o[0] = i[0] + i[1];
 530:./shy_fft.h   ****         o[1] = i[0] - i[1];
 531:./shy_fft.h   ****     }
 532:./shy_fft.h   **** };
 533:./shy_fft.h   **** 
 534:./shy_fft.h   **** template <typename T, typename Phasor>
 535:./shy_fft.h   **** struct DirectTransform<T, 2, Phasor>
 536:./shy_fft.h   **** {
 537:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 538:./shy_fft.h   ****     {
 539:./shy_fft.h   ****         o[1] = i[0] - i[2];
 540:./shy_fft.h   ****         o[3] = i[1] - i[3];
 541:./shy_fft.h   ****         T a  = i[0] + i[2];
 542:./shy_fft.h   ****         T b  = i[1] + i[3];
 543:./shy_fft.h   ****         o[0] = a + b;
 544:./shy_fft.h   ****         o[2] = a - b;
 545:./shy_fft.h   ****     }
 546:./shy_fft.h   **** };
 547:./shy_fft.h   **** 
 548:./shy_fft.h   **** 
 549:./shy_fft.h   **** // Inverse transform
 550:./shy_fft.h   **** template <typename T, size_t num_passes, typename Phasor>
 551:./shy_fft.h   **** struct InverseTransform
 552:./shy_fft.h   **** {
 553:./shy_fft.h   ****   private:
 554:./shy_fft.h   ****     enum
 555:./shy_fft.h   ****     {
 556:./shy_fft.h   ****         size = 1 << num_passes
 557:./shy_fft.h   ****     };
ARM GAS  /tmp/ccDsoCRY.s 			page 30


 558:./shy_fft.h   **** 
 559:./shy_fft.h   ****   public:
 560:./shy_fft.h   ****     void operator()(T* input, T* output, const uint8_t* bit_rev, Phasor* phasor)
 561:./shy_fft.h   ****     {
 562:./shy_fft.h   ****         T*      s = (T*)(input);
 563:./shy_fft.h   ****         T*      d = output;
 564:./shy_fft.h   ****         Math<T> math;
 565:./shy_fft.h   **** 
 566:./shy_fft.h   ****         // Remaining passes.
 567:./shy_fft.h   ****         for(size_t pass = num_passes - 1; pass >= 3; --pass)
 568:./shy_fft.h   ****         {
 569:./shy_fft.h   ****             size_t n   = 1 << pass;
 570:./shy_fft.h   ****             size_t n_2 = n >> 1;
 571:./shy_fft.h   **** 
 572:./shy_fft.h   ****             for(size_t i = 0; i < size; i += (n << 1))
 573:./shy_fft.h   ****             {
 574:./shy_fft.h   ****                 T* sr  = s + i;
 575:./shy_fft.h   ****                 T* si  = sr + n;
 576:./shy_fft.h   ****                 T* d1r = d + i;
 577:./shy_fft.h   ****                 T* d2r = d1r + n;
 578:./shy_fft.h   **** 
 579:./shy_fft.h   ****                 d1r[0]   = sr[0] + si[0];
 580:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 581:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 582:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 583:./shy_fft.h   **** 
 584:./shy_fft.h   ****                 T* d1i = d1r + n_2;
 585:./shy_fft.h   ****                 T* d2i = d1i + n;
 586:./shy_fft.h   ****                 phasor->Start(pass);
 587:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 588:./shy_fft.h   ****                 {
 589:./shy_fft.h   ****                     d1r[j] = sr[j] + si[-j];
 590:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 591:./shy_fft.h   **** 
 592:./shy_fft.h   ****                     T c  = phasor->cos();
 593:./shy_fft.h   ****                     T s  = phasor->sin();
 594:./shy_fft.h   ****                     T vr = sr[j] - si[-j];
 595:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 596:./shy_fft.h   **** 
 597:./shy_fft.h   ****                     d2r[j] = vr * c + vi * s;
 598:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 599:./shy_fft.h   ****                     phasor->Rotate();
 600:./shy_fft.h   ****                 }
 601:./shy_fft.h   ****             }
 602:./shy_fft.h   **** 
 603:./shy_fft.h   ****             // Flip source and destination pointers for the next pass.
 604:./shy_fft.h   ****             if(d == output)
 605:./shy_fft.h   ****             {
 606:./shy_fft.h   ****                 s = output;
 607:./shy_fft.h   ****                 d = input;
 608:./shy_fft.h   ****             }
 609:./shy_fft.h   ****             else
 610:./shy_fft.h   ****             {
 611:./shy_fft.h   ****                 s = input;
 612:./shy_fft.h   ****                 d = output;
 613:./shy_fft.h   ****             }
 614:./shy_fft.h   ****         }
ARM GAS  /tmp/ccDsoCRY.s 			page 31


 615:./shy_fft.h   **** 
 616:./shy_fft.h   ****         // Copy data if necessary.
 617:./shy_fft.h   ****         if(d == output)
 618:./shy_fft.h   ****         {
 619:./shy_fft.h   ****             std::copy(&s[0], &s[size], &output[0]);
 620:./shy_fft.h   ****         }
 621:./shy_fft.h   **** 
 622:./shy_fft.h   ****         s = output;
 623:./shy_fft.h   ****         d = input;
 624:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 8)
 625:./shy_fft.h   ****         {
 626:./shy_fft.h   ****             T vr, vi;
 627:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 628:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 629:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 630:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 631:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 632:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 633:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 634:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 635:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 636:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 637:./shy_fft.h   ****         }
 638:./shy_fft.h   **** 
 639:./shy_fft.h   ****         // First and second pass.
 640:./shy_fft.h   ****         s = input;
 641:./shy_fft.h   ****         d = output;
 642:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 4)
 643:./shy_fft.h   ****         {
 644:./shy_fft.h   ****             size_t r0 = num_passes <= 8
 645:./shy_fft.h   ****                             ? bit_rev[i >> 2]
 646:./shy_fft.h   ****                             : ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 647:./shy_fft.h   ****                                   >> (16 - num_passes);
 648:./shy_fft.h   ****             size_t r1 = r0 + 2 * (size >> 2);
 649:./shy_fft.h   ****             size_t r2 = r0 + 1 * (size >> 2);
 650:./shy_fft.h   ****             size_t r3 = r0 + 3 * (size >> 2);
 651:./shy_fft.h   **** 
 652:./shy_fft.h   ****             T b_0 = s[0] + s[2];
 653:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 654:./shy_fft.h   ****             T b_1 = s[1] * T(2);
 655:./shy_fft.h   ****             T b_3 = s[3] * T(2);
 656:./shy_fft.h   **** 
 657:./shy_fft.h   ****             d[r0] = b_0 + b_1;
 658:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 659:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 660:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 661:./shy_fft.h   ****             s += 4;
 662:./shy_fft.h   ****         }
 663:./shy_fft.h   ****     }
 664:./shy_fft.h   **** 
 665:./shy_fft.h   ****     void operator()(T*             input,
 666:./shy_fft.h   ****                     T*             output,
 667:./shy_fft.h   ****                     const uint8_t* bit_rev,
 668:./shy_fft.h   ****                     Phasor*        phasor,
 669:./shy_fft.h   ****                     size_t         rt_num_passes)
 670:./shy_fft.h   ****     {
 671:./shy_fft.h   ****         T*      s = (T*)(input);
ARM GAS  /tmp/ccDsoCRY.s 			page 32


 672:./shy_fft.h   ****         T*      d = output;
 673:./shy_fft.h   ****         Math<T> math;
 674:./shy_fft.h   **** 
 675:./shy_fft.h   ****         size_t rt_size = 1 << rt_num_passes;
 676:./shy_fft.h   **** 
 677:./shy_fft.h   ****         // Remaining passes.
 678:./shy_fft.h   ****         for(size_t pass = rt_num_passes - 1; pass >= 3; --pass)
 679:./shy_fft.h   ****         {
 680:./shy_fft.h   ****             size_t n   = 1 << pass;
 681:./shy_fft.h   ****             size_t n_2 = n >> 1;
 682:./shy_fft.h   **** 
 683:./shy_fft.h   ****             for(size_t i = 0; i < rt_size; i += (n << 1))
 684:./shy_fft.h   ****             {
 685:./shy_fft.h   ****                 T* sr  = s + i;
 686:./shy_fft.h   ****                 T* si  = sr + n;
 687:./shy_fft.h   ****                 T* d1r = d + i;
 688:./shy_fft.h   ****                 T* d2r = d1r + n;
 689:./shy_fft.h   **** 
 690:./shy_fft.h   ****                 d1r[0]   = sr[0] + si[0];
 691:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 692:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 693:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 694:./shy_fft.h   **** 
 695:./shy_fft.h   ****                 T* d1i = d1r + n_2;
 696:./shy_fft.h   ****                 T* d2i = d1i + n;
 697:./shy_fft.h   ****                 phasor->Start(pass);
 698:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 699:./shy_fft.h   ****                 {
 700:./shy_fft.h   ****                     d1r[j] = sr[j] + si[-j];
 701:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 702:./shy_fft.h   **** 
 703:./shy_fft.h   ****                     T c  = phasor->cos();
 704:./shy_fft.h   ****                     T s  = phasor->sin();
 705:./shy_fft.h   ****                     T vr = sr[j] - si[-j];
 706:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 707:./shy_fft.h   **** 
 708:./shy_fft.h   ****                     d2r[j] = vr * c + vi * s;
 709:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 710:./shy_fft.h   ****                     phasor->Rotate();
 711:./shy_fft.h   ****                 }
 712:./shy_fft.h   ****             }
 713:./shy_fft.h   **** 
 714:./shy_fft.h   ****             // Flip source and destination pointers for the next pass.
 715:./shy_fft.h   ****             if(d == output)
 716:./shy_fft.h   ****             {
 717:./shy_fft.h   ****                 s = output;
 718:./shy_fft.h   ****                 d = input;
 719:./shy_fft.h   ****             }
 720:./shy_fft.h   ****             else
 721:./shy_fft.h   ****             {
 722:./shy_fft.h   ****                 s = input;
 723:./shy_fft.h   ****                 d = output;
 724:./shy_fft.h   ****             }
 725:./shy_fft.h   ****         }
 726:./shy_fft.h   **** 
 727:./shy_fft.h   ****         // Copy data if necessary.
 728:./shy_fft.h   ****         if(d == output)
ARM GAS  /tmp/ccDsoCRY.s 			page 33


 729:./shy_fft.h   ****         {
 730:./shy_fft.h   ****             std::copy(&s[0], &s[rt_size], &output[0]);
 731:./shy_fft.h   ****         }
 732:./shy_fft.h   **** 
 733:./shy_fft.h   ****         s = output;
 734:./shy_fft.h   ****         d = input;
 735:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 8)
 736:./shy_fft.h   ****         {
 737:./shy_fft.h   ****             T vr, vi;
 738:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 739:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 740:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 741:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 742:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 743:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 744:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 745:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 746:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 747:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 748:./shy_fft.h   ****         }
 749:./shy_fft.h   **** 
 750:./shy_fft.h   ****         // First and second pass.
 751:./shy_fft.h   ****         s = input;
 752:./shy_fft.h   ****         d = output;
 753:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 4)
 754:./shy_fft.h   ****         {
 755:./shy_fft.h   ****             size_t r0 = ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 756:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 757:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 758:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 759:./shy_fft.h   ****             size_t r3 = r0 + 3 * (rt_size >> 2);
 760:./shy_fft.h   **** 
 761:./shy_fft.h   ****             T b_0 = s[0] + s[2];
 762:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 763:./shy_fft.h   ****             T b_1 = s[1] * T(2);
 764:./shy_fft.h   ****             T b_3 = s[3] * T(2);
 765:./shy_fft.h   **** 
 766:./shy_fft.h   ****             d[r0] = b_0 + b_1;
 767:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 768:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 769:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 770:./shy_fft.h   ****             s += 4;
 771:./shy_fft.h   ****         }
 772:./shy_fft.h   ****     }
 773:./shy_fft.h   **** };
 774:./shy_fft.h   **** 
 775:./shy_fft.h   **** template <typename T, typename Phasor>
 776:./shy_fft.h   **** struct InverseTransform<T, 0, Phasor>
 777:./shy_fft.h   **** {
 778:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 779:./shy_fft.h   ****     {
 780:./shy_fft.h   ****         o[0] = i[0];
 781:./shy_fft.h   ****     }
 782:./shy_fft.h   **** };
 783:./shy_fft.h   **** 
 784:./shy_fft.h   **** template <typename T, typename Phasor>
 785:./shy_fft.h   **** struct InverseTransform<T, 1, Phasor>
ARM GAS  /tmp/ccDsoCRY.s 			page 34


 786:./shy_fft.h   **** {
 787:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 788:./shy_fft.h   ****     {
 789:./shy_fft.h   ****         o[0] = i[0] + i[1];
 790:./shy_fft.h   ****         o[1] = i[0] - i[1];
 791:./shy_fft.h   ****     }
 792:./shy_fft.h   **** };
 793:./shy_fft.h   **** 
 794:./shy_fft.h   **** template <typename T, typename Phasor>
 795:./shy_fft.h   **** struct InverseTransform<T, 2, Phasor>
 796:./shy_fft.h   **** {
 797:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 798:./shy_fft.h   ****     {
 799:./shy_fft.h   ****         T a = i[0] + i[2];
 800:./shy_fft.h   ****         T b = i[0] - i[2];
 801:./shy_fft.h   **** 
 802:./shy_fft.h   ****         o[0] = a + i[1] * T(2);
 803:./shy_fft.h   ****         o[2] = a - i[1] * T(2);
 804:./shy_fft.h   ****         o[1] = b + i[3] * T(2);
 805:./shy_fft.h   ****         o[3] = b - i[3] * T(2);
 806:./shy_fft.h   ****     }
 807:./shy_fft.h   **** };
 808:./shy_fft.h   **** 
 809:./shy_fft.h   **** 
 810:./shy_fft.h   **** template <typename T                               = float,
 811:./shy_fft.h   ****           size_t size                              = 16,
 812:./shy_fft.h   ****           template <typename, size_t> class Phasor = LutPhasor>
 813:./shy_fft.h   **** class ShyFFT
 814:./shy_fft.h   **** {
 815:./shy_fft.h   ****   public:
 816:./shy_fft.h   ****     enum
 817:./shy_fft.h   ****     {
 818:./shy_fft.h   ****         num_passes = Log2<size>::value,
 819:./shy_fft.h   ****         max_size   = size
 820:./shy_fft.h   ****     };
 821:./shy_fft.h   **** 
 822:./shy_fft.h   ****   private:
 823:./shy_fft.h   ****     typedef Phasor<T, num_passes> PhasorType;
 824:./shy_fft.h   **** 
 825:./shy_fft.h   ****   public:
 826:./shy_fft.h   ****     ShyFFT() {}
 827:./shy_fft.h   ****     ~ShyFFT() {}
 828:./shy_fft.h   **** 
 829:./shy_fft.h   ****     void Init()
 830:./shy_fft.h   ****     {
 831:./shy_fft.h   ****         bit_rev_[0] = 0;
 231              		.loc 3 831 9 view .LVU60
 232 003e 0022     		movs	r2, #0
 233              	.LBE219:
 234              	.LBE218:
  55:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 235              		.loc 1 55 10 view .LVU61
 236 0040 C8F80010 		str	r1, [r8]
 237 0044 8B46     		mov	fp, r1
  53:dsp/pvoc/stft.cpp **** 
 238              		.loc 1 53 18 view .LVU62
 239 0046 C8F81030 		str	r3, [r8, #16]
ARM GAS  /tmp/ccDsoCRY.s 			page 35


  55:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 240              		.loc 1 55 5 is_stmt 1 view .LVU63
  59:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 241              		.loc 1 59 5 view .LVU64
 242              	.LVL16:
 243              	.LBB245:
 244              	.LBI218:
 829:./shy_fft.h   ****     {
 245              		.loc 3 829 10 view .LVU65
 246              	.LBB240:
 247              	.LBB220:
 248              	.LBB221:
 249              	.LBB222:
 238:./shy_fft.h   ****         {
 250              		.loc 3 238 20 is_stmt 0 view .LVU66
 251 004a 4FF0030A 		mov	r10, #3
 252              	.LBE222:
 253              	.LBE221:
 254              	.LBE220:
 255              		.loc 3 831 9 view .LVU67
 256 004e 9FED250A 		vldr.32	s0, .L18
 257 0052 9FED258A 		vldr.32	s16, .L18+4
 258 0056 81F85820 		strb	r2, [r1, #88]
 259              	.LVL17:
 260              		.loc 3 831 9 view .LVU68
 261              	.LBE240:
 262              	.LBE245:
 832:./shy_fft.h   ****         for(size_t i = 1; i < sizeof(bit_rev_); ++i)
 263              		.loc 3 832 29 is_stmt 1 view .LVU69
 264              	.LBB246:
 265              	.LBB241:
 266              	.LBB236:
 267              	.LBI220:
 235:./shy_fft.h   ****     {
 268              		.loc 3 235 10 view .LVU70
 269              	.LBB232:
 270              	.LBB228:
 238:./shy_fft.h   ****         {
 271              		.loc 3 238 35 view .LVU71
 272 005a 0FE0     		b	.L14
 273              	.LVL18:
 274              	.L17:
 238:./shy_fft.h   ****         {
 275              		.loc 3 238 35 is_stmt 0 view .LVU72
 276 005c 07EE903A 		vmov	s15, r3	@ int
 277 0060 F8EEE77A 		vcvt.f32.s32	s15, s15
 278 0064 C7EE278A 		vdiv.f32	s17, s14, s15
 279 0068 B0EE680A 		vmov.f32	s0, s17
 280 006c FFF7FEFF 		bl	cosf
 281              	.LVL19:
 238:./shy_fft.h   ****         {
 282              		.loc 3 238 35 view .LVU73
 283 0070 B0EE408A 		vmov.f32	s16, s0
 284 0074 B0EE680A 		vmov.f32	s0, s17
 285 0078 FFF7FEFF 		bl	sinf
 286              	.LVL20:
 287              	.L14:
ARM GAS  /tmp/ccDsoCRY.s 			page 36


 238:./shy_fft.h   ****         {
 288              		.loc 3 238 35 view .LVU74
 289              	.LBE228:
 290              	.LBE232:
 291              	.LBE236:
 292              	.LBE241:
 293              	.LBE246:
 136:./shy_fft.h   ****     inline float sqrt_2_div_2() const { return 0.7071067811865476f; }
 294              		.loc 3 136 31 is_stmt 1 view .LVU75
 295              	.LBB247:
 296              	.LBB242:
 297              	.LBB237:
 298              	.LBB233:
 299              	.LBB229:
 300              	.LBB223:
 301              	.LBB224:
 302              	.LBI224:
 138:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
 303              		.loc 3 138 18 view .LVU76
 138:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
 304              		.loc 3 138 18 is_stmt 0 view .LVU77
 305              	.LBE224:
 306              	.LBE223:
 307              	.LBE229:
 308              	.LBE233:
 309              	.LBE237:
 310              	.LBE242:
 311              	.LBE247:
 138:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
 312              		.loc 3 138 33 is_stmt 1 view .LVU78
 138:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
 313              		.loc 3 138 33 is_stmt 0 view .LVU79
 314 007c 0123     		movs	r3, #1
 315              	.LBB248:
 316              	.LBB243:
 317              	.LBB238:
 318              	.LBB234:
 319              	.LBB230:
 320              	.LBB226:
 242:./shy_fft.h   ****             sin_cos_lut_[index + 1] = math.sin(angle);
 321              		.loc 3 242 13 view .LVU80
 322 007e 8BED008A 		vstr.32	s16, [fp]
 243:./shy_fft.h   ****         }
 323              		.loc 3 243 13 view .LVU81
 324 0082 8BED010A 		vstr.32	s0, [fp, #4]
 325 0086 0BF1080B 		add	fp, fp, #8
 326              	.LBE226:
 238:./shy_fft.h   ****         {
 327              		.loc 3 238 9 view .LVU82
 328 008a 9A44     		add	r10, r10, r3
 329              	.LVL21:
 330              	.LBB227:
 331              	.LBB225:
 332              	.LBI225:
 139:./shy_fft.h   **** };
 333              		.loc 3 139 18 is_stmt 1 view .LVU83
 139:./shy_fft.h   **** };
ARM GAS  /tmp/ccDsoCRY.s 			page 37


 334              		.loc 3 139 18 is_stmt 0 view .LVU84
 335              	.LBE225:
 336              	.LBE227:
 337              	.LBE230:
 338              	.LBE234:
 339              	.LBE238:
 340              	.LBE243:
 341              	.LBE248:
 139:./shy_fft.h   **** };
 342              		.loc 3 139 33 is_stmt 1 view .LVU85
 343              	.LBB249:
 344              	.LBB244:
 345              	.LBB239:
 346              	.LBB235:
 347              	.LBB231:
 238:./shy_fft.h   ****         {
 348              		.loc 3 238 9 view .LVU86
 238:./shy_fft.h   ****         {
 349              		.loc 3 238 35 view .LVU87
 350 008c 9FED177A 		vldr.32	s14, .L18+8
 351 0090 BAF10C0F 		cmp	r10, #12
 352 0094 03FA0AF3 		lsl	r3, r3, r10
 353              	.LVL22:
 238:./shy_fft.h   ****         {
 354              		.loc 3 238 35 is_stmt 0 view .LVU88
 355 0098 E0D1     		bne	.L17
 356              	.LVL23:
 238:./shy_fft.h   ****         {
 357              		.loc 3 238 35 view .LVU89
 358              	.LBE231:
 359              	.LBE235:
 360              	.LBE239:
 361              	.LBE244:
 362              	.LBE249:
  62:dsp/pvoc/stft.cpp ****     synthesis_ = &analysis_synthesis_buffer[buffer_size_];
 363              		.loc 1 62 5 is_stmt 1 view .LVU90
  69:dsp/pvoc/stft.cpp ****     modifier_      = modifier;
 364              		.loc 1 69 48 is_stmt 0 view .LVU91
 365 009a 4FF48052 		mov	r2, #4096
  63:dsp/pvoc/stft.cpp **** 
 366              		.loc 1 63 57 view .LVU92
 367 009e D8F81010 		ldr	r1, [r8, #16]
  72:dsp/pvoc/stft.cpp **** 
 368              		.loc 1 72 17 view .LVU93
 369 00a2 0023     		movs	r3, #0
  62:dsp/pvoc/stft.cpp ****     synthesis_ = &analysis_synthesis_buffer[buffer_size_];
 370              		.loc 1 62 16 view .LVU94
 371 00a4 C8F82C50 		str	r5, [r8, #44]
  63:dsp/pvoc/stft.cpp **** 
 372              		.loc 1 63 5 is_stmt 1 view .LVU95
  74:dsp/pvoc/stft.cpp **** }
 373              		.loc 1 74 10 is_stmt 0 view .LVU96
 374 00a8 4046     		mov	r0, r8
  63:dsp/pvoc/stft.cpp **** 
 375              		.loc 1 63 18 view .LVU97
 376 00aa 05EB4105 		add	r5, r5, r1, lsl #1
  65:dsp/pvoc/stft.cpp ****     ifft_out_ = fft_out_ = ifft_buffer;
ARM GAS  /tmp/ccDsoCRY.s 			page 38


 377              		.loc 1 65 24 view .LVU98
 378 00ae C8F81470 		str	r7, [r8, #20]
  65:dsp/pvoc/stft.cpp ****     ifft_out_ = fft_out_ = ifft_buffer;
 379              		.loc 1 65 14 view .LVU99
 380 00b2 C8F82070 		str	r7, [r8, #32]
  68:dsp/pvoc/stft.cpp ****     window_stride_ = LUT_SINE_WINDOW_4096_SIZE / fft_size;
 381              		.loc 1 68 20 view .LVU100
 382 00b6 C8F82490 		str	r9, [r8, #36]
  72:dsp/pvoc/stft.cpp **** 
 383              		.loc 1 72 17 view .LVU101
 384 00ba C8F84830 		str	r3, [r8, #72]
  63:dsp/pvoc/stft.cpp **** 
 385              		.loc 1 63 16 view .LVU102
 386 00be C8F83050 		str	r5, [r8, #48]
  65:dsp/pvoc/stft.cpp ****     ifft_out_ = fft_out_ = ifft_buffer;
 387              		.loc 1 65 5 is_stmt 1 view .LVU103
  66:dsp/pvoc/stft.cpp **** 
 388              		.loc 1 66 5 view .LVU104
  68:dsp/pvoc/stft.cpp ****     window_stride_ = LUT_SINE_WINDOW_4096_SIZE / fft_size;
 389              		.loc 1 68 5 view .LVU105
  69:dsp/pvoc/stft.cpp ****     modifier_      = modifier;
 390              		.loc 1 69 5 view .LVU106
  69:dsp/pvoc/stft.cpp ****     modifier_      = modifier;
 391              		.loc 1 69 48 is_stmt 0 view .LVU107
 392 00c2 B2FBF4F4 		udiv	r4, r2, r4
 393              	.LVL24:
  66:dsp/pvoc/stft.cpp **** 
 394              		.loc 1 66 15 view .LVU108
 395 00c6 C8E90666 		strd	r6, r6, [r8, #24]
  70:dsp/pvoc/stft.cpp **** 
 396              		.loc 1 70 20 view .LVU109
 397 00ca 019E     		ldr	r6, [sp, #4]
  69:dsp/pvoc/stft.cpp ****     modifier_      = modifier;
 398              		.loc 1 69 20 view .LVU110
 399 00cc C8F82840 		str	r4, [r8, #40]
  70:dsp/pvoc/stft.cpp **** 
 400              		.loc 1 70 5 is_stmt 1 view .LVU111
  72:dsp/pvoc/stft.cpp **** 
 401              		.loc 1 72 5 view .LVU112
  74:dsp/pvoc/stft.cpp **** }
 402              		.loc 1 74 5 view .LVU113
  70:dsp/pvoc/stft.cpp **** 
 403              		.loc 1 70 20 is_stmt 0 view .LVU114
 404 00d0 C8F84C60 		str	r6, [r8, #76]
  75:dsp/pvoc/stft.cpp **** 
 405              		.loc 1 75 1 view .LVU115
 406 00d4 03B0     		add	sp, sp, #12
 407              		.cfi_def_cfa_offset 44
 408              		@ sp needed
 409 00d6 BDEC028B 		vldm	sp!, {d8}
 410              		.cfi_restore 80
 411              		.cfi_restore 81
 412              		.cfi_def_cfa_offset 36
 413 00da BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 414              		.cfi_restore 14
 415              		.cfi_restore 11
 416              		.cfi_restore 10
ARM GAS  /tmp/ccDsoCRY.s 			page 39


 417              		.cfi_restore 9
 418              		.cfi_restore 8
 419              		.cfi_restore 7
 420              		.cfi_restore 6
 421              		.cfi_restore 5
 422              		.cfi_restore 4
 423              		.cfi_def_cfa_offset 0
 424              	.LVL25:
  74:dsp/pvoc/stft.cpp **** }
 425              		.loc 1 74 10 view .LVU116
 426 00de FFF7FEBF 		b	_ZN4STFT5ResetEv
 427              	.LVL26:
 428              	.L19:
 429 00e2 00BF     		.align	2
 430              	.L18:
 431 00e4 16EFC33E 		.word	1053028118
 432 00e8 5E836C3F 		.word	1064076126
 433 00ec DB0F4940 		.word	1078530011
 434              		.cfi_endproc
 435              	.LFE4288:
 437              		.section	.text._ZN4STFT7ProcessERK10ParametersPKfPfjj,"ax",%progbits
 438              		.align	1
 439              		.p2align 2,,3
 440              		.global	_ZN4STFT7ProcessERK10ParametersPKfPfjj
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 444              		.fpu fpv5-d16
 446              	_ZN4STFT7ProcessERK10ParametersPKfPfjj:
 447              	.LVL27:
 448              	.LFB4290:
  87:dsp/pvoc/stft.cpp **** 
  88:dsp/pvoc/stft.cpp **** void STFT::Process(const Parameters& parameters,
  89:dsp/pvoc/stft.cpp ****                    const float*      input,
  90:dsp/pvoc/stft.cpp ****                    float*            output,
  91:dsp/pvoc/stft.cpp ****                    size_t            size,
  92:dsp/pvoc/stft.cpp ****                    size_t            stride)
  93:dsp/pvoc/stft.cpp **** {
 449              		.loc 1 93 1 is_stmt 1 view -0
 450              		.cfi_startproc
 451              		@ args = 8, pretend = 0, frame = 8
 452              		@ frame_needed = 0, uses_anonymous_args = 0
  94:dsp/pvoc/stft.cpp ****     parameters_ = &parameters;
 453              		.loc 1 94 5 view .LVU118
  93:dsp/pvoc/stft.cpp ****     parameters_ = &parameters;
 454              		.loc 1 93 1 is_stmt 0 view .LVU119
 455 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 456              		.cfi_def_cfa_offset 36
 457              		.cfi_offset 4, -36
 458              		.cfi_offset 5, -32
 459              		.cfi_offset 6, -28
 460              		.cfi_offset 7, -24
 461              		.cfi_offset 8, -20
 462              		.cfi_offset 9, -16
 463              		.cfi_offset 10, -12
 464              		.cfi_offset 11, -8
 465              		.cfi_offset 14, -4
ARM GAS  /tmp/ccDsoCRY.s 			page 40


 466 0004 83B0     		sub	sp, sp, #12
 467              		.cfi_def_cfa_offset 48
 468              		.loc 1 94 17 view .LVU120
 469 0006 8164     		str	r1, [r0, #72]
  93:dsp/pvoc/stft.cpp ****     parameters_ = &parameters;
 470              		.loc 1 93 1 view .LVU121
 471 0008 DDF83080 		ldr	r8, [sp, #48]
  95:dsp/pvoc/stft.cpp ****     while(size)
 472              		.loc 1 95 5 is_stmt 1 view .LVU122
 473              		.loc 1 95 11 view .LVU123
 474 000c B8F1000F 		cmp	r8, #0
 475 0010 4FD0     		beq	.L20
 476 0012 9A46     		mov	r10, r3
 477              	.LBB250:
  96:dsp/pvoc/stft.cpp ****     {
  97:dsp/pvoc/stft.cpp ****         size_t processed = min(size, hop_size_ - block_size_);
 478              		.loc 1 97 38 is_stmt 0 view .LVU124
 479 0014 C368     		ldr	r3, [r0, #12]
 480              	.LVL28:
 481              		.loc 1 97 38 view .LVU125
 482 0016 9146     		mov	r9, r2
 483 0018 0093     		str	r3, [sp]
 484              	.LBB251:
 485              	.LBB252:
  98:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
  99:dsp/pvoc/stft.cpp ****         {
 100:dsp/pvoc/stft.cpp ****             int32_t sample             = *input * 32768.0f;
 101:dsp/pvoc/stft.cpp ****             analysis_[buffer_ptr_ + i] = Clip16(sample);
 102:dsp/pvoc/stft.cpp ****             *output
 103:dsp/pvoc/stft.cpp ****                 = static_cast<float>(synthesis_[buffer_ptr_ + i]) / 16384.0f;
 104:dsp/pvoc/stft.cpp ****             input += stride;
 486              		.loc 1 104 19 view .LVU126
 487 001a 0D9B     		ldr	r3, [sp, #52]
 488 001c 4FEA830C 		lsl	ip, r3, #2
 489 0020 0369     		ldr	r3, [r0, #16]
 490 0022 0193     		str	r3, [sp, #4]
 491              	.LVL29:
 492              	.L22:
 493              		.loc 1 104 19 view .LVU127
 494              	.LBE252:
 495              	.LBE251:
  97:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
 496              		.loc 1 97 9 is_stmt 1 view .LVU128
  97:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
 497              		.loc 1 97 50 is_stmt 0 view .LVU129
 498 0024 C76B     		ldr	r7, [r0, #60]
 499              	.LVL30:
  97:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
 500              		.loc 1 97 48 view .LVU130
 501 0026 009B     		ldr	r3, [sp]
 502 0028 DE1B     		subs	r6, r3, r7
 503 002a 4645     		cmp	r6, r8
 504 002c 28BF     		it	cs
 505 002e 4646     		movcs	r6, r8
 506              	.LVL31:
  98:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
 507              		.loc 1 98 9 is_stmt 1 view .LVU131
ARM GAS  /tmp/ccDsoCRY.s 			page 41


 508              	.LBB256:
  98:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
 509              		.loc 1 98 29 view .LVU132
 510 0030 002E     		cmp	r6, #0
 511 0032 46D0     		beq	.L23
 512              	.LBB253:
 101:dsp/pvoc/stft.cpp ****             *output
 513              		.loc 1 101 23 is_stmt 0 view .LVU133
 514 0034 426B     		ldr	r2, [r0, #52]
 103:dsp/pvoc/stft.cpp ****             input += stride;
 515              		.loc 1 103 38 view .LVU134
 516 0036 5446     		mov	r4, r10
 101:dsp/pvoc/stft.cpp ****             *output
 517              		.loc 1 101 13 view .LVU135
 518 0038 D0F82CB0 		ldr	fp, [r0, #44]
 103:dsp/pvoc/stft.cpp ****             input += stride;
 519              		.loc 1 103 38 view .LVU136
 520 003c 4946     		mov	r1, r9
 521 003e 5500     		lsls	r5, r2, #1
 522 0040 02EB060E 		add	lr, r2, r6
 523 0044 036B     		ldr	r3, [r0, #48]
 524 0046 0BEB4202 		add	r2, fp, r2, lsl #1
 525 004a 023D     		subs	r5, r5, #2
 526 004c 0BEB4E0B 		add	fp, fp, lr, lsl #1
 527 0050 1D44     		add	r5, r5, r3
 528              	.LVL32:
 529              	.L24:
 100:dsp/pvoc/stft.cpp ****             analysis_[buffer_ptr_ + i] = Clip16(sample);
 530              		.loc 1 100 13 is_stmt 1 discriminator 2 view .LVU137
 101:dsp/pvoc/stft.cpp ****             *output
 531              		.loc 1 101 13 discriminator 2 view .LVU138
 101:dsp/pvoc/stft.cpp ****             *output
 532              		.loc 1 101 13 is_stmt 0 discriminator 2 view .LVU139
 533              	.LBE253:
 534              	.LBE256:
 535              	.LBE250:
 536              		.file 4 "./stmtemp.h"
   1:./stmtemp.h   **** #include "daisy.h"
   2:./stmtemp.h   **** #include "daisysp.h"
   3:./stmtemp.h   **** #include "resources.h"
   4:./stmtemp.h   **** 
   5:./stmtemp.h   **** using namespace daisy;
   6:./stmtemp.h   **** using namespace daisysp;
   7:./stmtemp.h   **** 
   8:./stmtemp.h   **** #define MAKE_INTEGRAL_FRACTIONAL(x)                   \
   9:./stmtemp.h   ****     int32_t x##_integral   = static_cast<int32_t>(x); \
  10:./stmtemp.h   ****     float   x##_fractional = x - static_cast<float>(x##_integral);
  11:./stmtemp.h   **** 
  12:./stmtemp.h   **** #define SLOPE(out, in, positive, negative)                \
  13:./stmtemp.h   ****     {                                                     \
  14:./stmtemp.h   ****         float error = (in)-out;                           \
  15:./stmtemp.h   ****         out += (error > 0 ? positive : negative) * error; \
  16:./stmtemp.h   ****     }
  17:./stmtemp.h   **** 
  18:./stmtemp.h   **** #define ONE_POLE(out, in, coefficient) out += (coefficient) * ((in)-out);
  19:./stmtemp.h   **** 
  20:./stmtemp.h   **** #define CONSTRAIN(var, min, max) \
ARM GAS  /tmp/ccDsoCRY.s 			page 42


  21:./stmtemp.h   ****     if(var < (min))              \
  22:./stmtemp.h   ****     {                            \
  23:./stmtemp.h   ****         var = (min);             \
  24:./stmtemp.h   ****     }                            \
  25:./stmtemp.h   ****     else if(var > (max))         \
  26:./stmtemp.h   ****     {                            \
  27:./stmtemp.h   ****         var = (max);             \
  28:./stmtemp.h   ****     }
  29:./stmtemp.h   **** 
  30:./stmtemp.h   **** #define JOIN(lhs, rhs) JOIN_1(lhs, rhs)
  31:./stmtemp.h   **** #define JOIN_1(lhs, rhs) JOIN_2(lhs, rhs)
  32:./stmtemp.h   **** #define JOIN_2(lhs, rhs) lhs##rhs
  33:./stmtemp.h   **** 
  34:./stmtemp.h   **** #define STATIC_ASSERT(expression, message)                                  \
  35:./stmtemp.h   ****     struct JOIN(__static_assertion_at_line_, __LINE__)                      \
  36:./stmtemp.h   ****     {                                                                       \
  37:./stmtemp.h   ****         impl::StaticAssertion<static_cast<bool>((expression))>              \
  38:./stmtemp.h   ****             JOIN(JOIN(JOIN(STATIC_ASSERTION_FAILED_AT_LINE_, __LINE__), _), \
  39:./stmtemp.h   ****                  message);                                                  \
  40:./stmtemp.h   ****     };
  41:./stmtemp.h   **** 
  42:./stmtemp.h   **** namespace impl
  43:./stmtemp.h   **** {
  44:./stmtemp.h   **** template <bool>
  45:./stmtemp.h   **** struct StaticAssertion;
  46:./stmtemp.h   **** 
  47:./stmtemp.h   **** template <>
  48:./stmtemp.h   **** struct StaticAssertion<true>
  49:./stmtemp.h   **** {
  50:./stmtemp.h   **** }; // StaticAssertion<true>
  51:./stmtemp.h   **** 
  52:./stmtemp.h   **** template <int i>
  53:./stmtemp.h   **** struct StaticAssertionTest
  54:./stmtemp.h   **** {
  55:./stmtemp.h   **** }; // StaticAssertionTest<int>
  56:./stmtemp.h   **** 
  57:./stmtemp.h   **** } // namespace impl
  58:./stmtemp.h   **** 
  59:./stmtemp.h   **** template <uint32_t a, uint32_t b, uint32_t c, uint32_t d>
  60:./stmtemp.h   **** struct FourCC
  61:./stmtemp.h   **** {
  62:./stmtemp.h   ****     static const uint32_t value = (((((d << 8) | c) << 8) | b) << 8) | a;
  63:./stmtemp.h   **** };
  64:./stmtemp.h   **** 
  65:./stmtemp.h   **** class CosineOscillator
  66:./stmtemp.h   **** {
  67:./stmtemp.h   ****   public:
  68:./stmtemp.h   ****     CosineOscillator() {}
  69:./stmtemp.h   ****     ~CosineOscillator() {}
  70:./stmtemp.h   **** 
  71:./stmtemp.h   ****     void Init(float freq)
  72:./stmtemp.h   ****     {
  73:./stmtemp.h   ****         float sample_rate = 48000; //hardcoded for now
  74:./stmtemp.h   ****         phs_inc_          = freq / sample_rate;
  75:./stmtemp.h   ****     }
  76:./stmtemp.h   **** 
  77:./stmtemp.h   ****     float Next()
ARM GAS  /tmp/ccDsoCRY.s 			page 43


  78:./stmtemp.h   ****     {
  79:./stmtemp.h   ****         phs_ += phs_inc_;
  80:./stmtemp.h   **** 
  81:./stmtemp.h   ****         if(phs_ >= 1.f)
  82:./stmtemp.h   ****         {
  83:./stmtemp.h   ****             phs_ -= 1.f;
  84:./stmtemp.h   ****         }
  85:./stmtemp.h   **** 
  86:./stmtemp.h   ****         value_ = cos(phs_);
  87:./stmtemp.h   **** 
  88:./stmtemp.h   ****         return value_;
  89:./stmtemp.h   ****     }
  90:./stmtemp.h   **** 
  91:./stmtemp.h   ****     float value() { return value_; }
  92:./stmtemp.h   **** 
  93:./stmtemp.h   ****   private:
  94:./stmtemp.h   ****     float value_ = 0.f;
  95:./stmtemp.h   ****     float sample_rate_;
  96:./stmtemp.h   ****     float phs_ = 0.f;
  97:./stmtemp.h   ****     float phs_inc_;
  98:./stmtemp.h   **** };
  99:./stmtemp.h   **** 
 100:./stmtemp.h   **** inline int32_t Clip16(int32_t x)
 101:./stmtemp.h   **** {
 102:./stmtemp.h   ****     if(x < -32768)
 537              		.loc 4 102 5 is_stmt 1 discriminator 2 view .LVU140
 538              	.LBB258:
 539              	.LBB257:
 540              	.LBB254:
 100:dsp/pvoc/stft.cpp ****             analysis_[buffer_ptr_ + i] = Clip16(sample);
 541              		.loc 1 100 49 is_stmt 0 discriminator 2 view .LVU141
 542 0052 D1ED007A 		vldr.32	s15, [r1]
 543              		.loc 1 104 19 discriminator 2 view .LVU142
 544 0056 6144     		add	r1, r1, ip
 545              	.LVL33:
 100:dsp/pvoc/stft.cpp ****             analysis_[buffer_ptr_ + i] = Clip16(sample);
 546              		.loc 1 100 21 discriminator 2 view .LVU143
 547 0058 B0EE677A 		vmov.f32	s14, s15
 548 005c BEEEE87A 		vcvt.s32.f32	s14, s14, #15
 549 0060 17EE103A 		vmov	r3, s14	@ int
 101:dsp/pvoc/stft.cpp ****             *output
 550              		.loc 1 101 40 discriminator 2 view .LVU144
 551 0064 03F30F03 		ssat	r3, #16, r3
 552 0068 22F8023B 		strh	r3, [r2], #2	@ movhi
 102:dsp/pvoc/stft.cpp ****                 = static_cast<float>(synthesis_[buffer_ptr_ + i]) / 16384.0f;
 553              		.loc 1 102 13 is_stmt 1 discriminator 2 view .LVU145
 554              	.LBE254:
  98:dsp/pvoc/stft.cpp ****         {
 555              		.loc 1 98 29 is_stmt 0 discriminator 2 view .LVU146
 556 006c 9345     		cmp	fp, r2
 557              	.LBB255:
 103:dsp/pvoc/stft.cpp ****             input += stride;
 558              		.loc 1 103 19 discriminator 2 view .LVU147
 559 006e 35F9023F 		ldrsh	r3, [r5, #2]!
 560 0072 07EE903A 		vmov	s15, r3	@ int
 561              	.LVL34:
 103:dsp/pvoc/stft.cpp ****             input += stride;
ARM GAS  /tmp/ccDsoCRY.s 			page 44


 562              		.loc 1 103 67 discriminator 2 view .LVU148
 563 0076 FAEEC97A 		vcvt.f32.s32	s15, s15, #14
 103:dsp/pvoc/stft.cpp ****             input += stride;
 564              		.loc 1 103 17 discriminator 2 view .LVU149
 565 007a C4ED007A 		vstr.32	s15, [r4]
 566              		.loc 1 104 13 is_stmt 1 discriminator 2 view .LVU150
 567              	.LVL35:
 105:dsp/pvoc/stft.cpp ****             output += stride;
 568              		.loc 1 105 13 discriminator 2 view .LVU151
 569              		.loc 1 105 20 is_stmt 0 discriminator 2 view .LVU152
 570 007e 6444     		add	r4, r4, ip
 571              	.LVL36:
 572              		.loc 1 105 20 discriminator 2 view .LVU153
 573              	.LBE255:
  98:dsp/pvoc/stft.cpp ****         {
 574              		.loc 1 98 9 is_stmt 1 discriminator 2 view .LVU154
  98:dsp/pvoc/stft.cpp ****         {
 575              		.loc 1 98 29 discriminator 2 view .LVU155
 576 0080 E7D1     		bne	.L24
 577 0082 06FB0CF3 		mul	r3, r6, ip
 578 0086 9944     		add	r9, r9, r3
 579 0088 9A44     		add	r10, r10, r3
 580              	.LVL37:
 581              	.L25:
  98:dsp/pvoc/stft.cpp ****         {
 582              		.loc 1 98 29 is_stmt 0 discriminator 2 view .LVU156
 583              	.LBE257:
 106:dsp/pvoc/stft.cpp ****         }
 107:dsp/pvoc/stft.cpp **** 
 108:dsp/pvoc/stft.cpp ****         block_size_ += processed;
 584              		.loc 1 108 9 is_stmt 1 view .LVU157
 109:dsp/pvoc/stft.cpp ****         size -= processed;
 110:dsp/pvoc/stft.cpp ****         buffer_ptr_ += processed;
 111:dsp/pvoc/stft.cpp ****         if(buffer_ptr_ >= buffer_size_)
 585              		.loc 1 111 9 is_stmt 0 view .LVU158
 586 008a 019B     		ldr	r3, [sp, #4]
 108:dsp/pvoc/stft.cpp ****         size -= processed;
 587              		.loc 1 108 21 view .LVU159
 588 008c 3744     		add	r7, r7, r6
 109:dsp/pvoc/stft.cpp ****         size -= processed;
 589              		.loc 1 109 14 view .LVU160
 590 008e A8EB0608 		sub	r8, r8, r6
 591              		.loc 1 111 9 view .LVU161
 592 0092 9E45     		cmp	lr, r3
 108:dsp/pvoc/stft.cpp ****         size -= processed;
 593              		.loc 1 108 21 view .LVU162
 594 0094 C763     		str	r7, [r0, #60]
 109:dsp/pvoc/stft.cpp ****         size -= processed;
 595              		.loc 1 109 9 is_stmt 1 view .LVU163
 596              	.LVL38:
 110:dsp/pvoc/stft.cpp ****         if(buffer_ptr_ >= buffer_size_)
 597              		.loc 1 110 9 view .LVU164
 598              		.loc 1 111 9 view .LVU165
 599 0096 0FD2     		bcs	.L26
 110:dsp/pvoc/stft.cpp ****         if(buffer_ptr_ >= buffer_size_)
 600              		.loc 1 110 21 is_stmt 0 view .LVU166
 601 0098 C0F834E0 		str	lr, [r0, #52]
ARM GAS  /tmp/ccDsoCRY.s 			page 45


 602              	.L27:
 112:dsp/pvoc/stft.cpp ****         {
 113:dsp/pvoc/stft.cpp ****             buffer_ptr_ -= buffer_size_;
 114:dsp/pvoc/stft.cpp ****         }
 115:dsp/pvoc/stft.cpp ****         if(block_size_ >= hop_size_)
 603              		.loc 1 115 9 is_stmt 1 view .LVU167
 604 009c 009A     		ldr	r2, [sp]
 605 009e BA42     		cmp	r2, r7
 606 00a0 04D8     		bhi	.L28
 116:dsp/pvoc/stft.cpp ****         {
 117:dsp/pvoc/stft.cpp ****             block_size_ -= hop_size_;
 607              		.loc 1 117 13 view .LVU168
 118:dsp/pvoc/stft.cpp ****             ++ready_;
 608              		.loc 1 118 13 is_stmt 0 view .LVU169
 609 00a2 036C     		ldr	r3, [r0, #64]
 117:dsp/pvoc/stft.cpp ****             ++ready_;
 610              		.loc 1 117 25 view .LVU170
 611 00a4 BF1A     		subs	r7, r7, r2
 612              		.loc 1 118 13 view .LVU171
 613 00a6 0133     		adds	r3, r3, #1
 614 00a8 C0E90F73 		strd	r7, r3, [r0, #60]
 615              	.L28:
 616              	.LVL39:
 617              		.loc 1 118 13 view .LVU172
 618              	.LBE258:
  95:dsp/pvoc/stft.cpp ****     {
 619              		.loc 1 95 5 is_stmt 1 view .LVU173
  95:dsp/pvoc/stft.cpp ****     {
 620              		.loc 1 95 11 view .LVU174
 621 00ac B8F1000F 		cmp	r8, #0
 622 00b0 B8D1     		bne	.L22
 623              	.LVL40:
 624              	.L20:
 119:dsp/pvoc/stft.cpp ****         }
 120:dsp/pvoc/stft.cpp ****     }
 121:dsp/pvoc/stft.cpp **** }
 625              		.loc 1 121 1 is_stmt 0 view .LVU175
 626 00b2 03B0     		add	sp, sp, #12
 627              		.cfi_remember_state
 628              		.cfi_def_cfa_offset 36
 629              		@ sp needed
 630 00b4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 631              	.LVL41:
 632              	.L26:
 633              		.cfi_restore_state
 634              	.LBB259:
 113:dsp/pvoc/stft.cpp ****         }
 635              		.loc 1 113 13 is_stmt 1 view .LVU176
 113:dsp/pvoc/stft.cpp ****         }
 636              		.loc 1 113 25 is_stmt 0 view .LVU177
 637 00b8 019B     		ldr	r3, [sp, #4]
 638 00ba AEEB0303 		sub	r3, lr, r3
 639 00be 4363     		str	r3, [r0, #52]
 640 00c0 ECE7     		b	.L27
 641              	.LVL42:
 642              	.L23:
 113:dsp/pvoc/stft.cpp ****         }
ARM GAS  /tmp/ccDsoCRY.s 			page 46


 643              		.loc 1 113 25 view .LVU178
 644 00c2 D0F834E0 		ldr	lr, [r0, #52]
 645 00c6 E0E7     		b	.L25
 646              	.LBE259:
 647              		.cfi_endproc
 648              	.LFE4290:
 650              		.section	.text._ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j,"axG",%progbit
 651              		.align	1
 652              		.p2align 2,,3
 653              		.weak	_ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j
 654              		.syntax unified
 655              		.thumb
 656              		.thumb_func
 657              		.fpu fpv5-d16
 659              	_ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j:
 660              	.LVL43:
 661              	.LFB4715:
 411:./shy_fft.h   ****                     T*             output,
 662              		.loc 3 411 10 is_stmt 1 view -0
 663              		.cfi_startproc
 664              		@ args = 8, pretend = 0, frame = 72
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 411:./shy_fft.h   ****                     T*             output,
 666              		.loc 3 411 10 is_stmt 0 view .LVU180
 667 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 668              		.cfi_def_cfa_offset 36
 669              		.cfi_offset 4, -36
 670              		.cfi_offset 5, -32
 671              		.cfi_offset 6, -28
 672              		.cfi_offset 7, -24
 673              		.cfi_offset 8, -20
 674              		.cfi_offset 9, -16
 675              		.cfi_offset 10, -12
 676              		.cfi_offset 11, -8
 677              		.cfi_offset 14, -4
 678 0004 93B0     		sub	sp, sp, #76
 679              		.cfi_def_cfa_offset 112
 420:./shy_fft.h   ****         // First and second pass.
 680              		.loc 3 420 29 view .LVU181
 681 0006 0120     		movs	r0, #1
 682              	.LVL44:
 411:./shy_fft.h   ****                     T*             output,
 683              		.loc 3 411 10 view .LVU182
 684 0008 1D9C     		ldr	r4, [sp, #116]
 685              	.LVL45:
 411:./shy_fft.h   ****                     T*             output,
 686              		.loc 3 411 10 view .LVU183
 687 000a DDF870A0 		ldr	r10, [sp, #112]
 688              	.LBB260:
 423:./shy_fft.h   ****         {
 689              		.loc 3 423 29 view .LVU184
 690 000e 10FA04F5 		lsls	r5, r0, r4
 691              	.LVL46:
 423:./shy_fft.h   ****         {
 692              		.loc 3 423 29 view .LVU185
 693              	.LBE260:
 411:./shy_fft.h   ****                     T*             output,
ARM GAS  /tmp/ccDsoCRY.s 			page 47


 694              		.loc 3 411 10 view .LVU186
 695 0012 1094     		str	r4, [sp, #64]
 696 0014 0E91     		str	r1, [sp, #56]
 697 0016 1192     		str	r2, [sp, #68]
 698              	.LVL47:
 699              	.LBB265:
 423:./shy_fft.h   ****         {
 700              		.loc 3 423 29 is_stmt 1 view .LVU187
 701 0018 0995     		str	r5, [sp, #36]
 702 001a 00F08F80 		beq	.L38
 703              	.LBB261:
 428:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 704              		.loc 3 428 43 is_stmt 0 view .LVU188
 705 001e AF08     		lsrs	r7, r5, #2
 706 0020 C4F1100E 		rsb	lr, r4, #16
 707 0024 02F11000 		add	r0, r2, #16
 708              	.LBE261:
 423:./shy_fft.h   ****         {
 709              		.loc 3 423 20 view .LVU189
 710 0028 0024     		movs	r4, #0
 711              	.LBB262:
 428:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 712              		.loc 3 428 32 view .LVU190
 713 002a 4FEA470C 		lsl	ip, r7, #1
 714              	.LVL48:
 715              	.L40:
 426:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 716              		.loc 3 426 39 discriminator 2 view .LVU191
 717 002e E6B2     		uxtb	r6, r4
 718 0030 1030     		adds	r0, r0, #16
 719              	.LVL49:
 426:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 720              		.loc 3 426 65 discriminator 2 view .LVU192
 721 0032 220A     		lsrs	r2, r4, #8
 722              	.LBE262:
 423:./shy_fft.h   ****         {
 723              		.loc 3 423 9 discriminator 2 view .LVU193
 724 0034 0434     		adds	r4, r4, #4
 725              	.LVL50:
 726              	.LBB263:
 426:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 727              		.loc 3 426 47 discriminator 2 view .LVU194
 728 0036 9E5D     		ldrb	r6, [r3, r6]	@ zero_extendqisi2
 426:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 729              		.loc 3 426 53 discriminator 2 view .LVU195
 730 0038 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 731              	.LBE263:
 423:./shy_fft.h   ****         {
 732              		.loc 3 423 29 discriminator 2 view .LVU196
 733 003a A542     		cmp	r5, r4
 734              	.LBB264:
 426:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 735              		.loc 3 426 53 discriminator 2 view .LVU197
 736 003c 42EA0622 		orr	r2, r2, r6, lsl #8
 427:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 737              		.loc 3 427 25 discriminator 2 view .LVU198
 738 0040 42FA0EF2 		asr	r2, r2, lr
ARM GAS  /tmp/ccDsoCRY.s 			page 48


 739              	.LVL51:
 428:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 740              		.loc 3 428 20 discriminator 2 view .LVU199
 741 0044 0CEB0206 		add	r6, ip, r2
 742              	.LVL52:
 432:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 743              		.loc 3 432 21 discriminator 2 view .LVU200
 744 0048 01EB8208 		add	r8, r1, r2, lsl #2
 429:./shy_fft.h   ****             size_t r3 = r0 + 3 * (rt_size >> 2);
 745              		.loc 3 429 20 discriminator 2 view .LVU201
 746 004c 3A44     		add	r2, r2, r7
 747              	.LVL53:
 432:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 748              		.loc 3 432 29 discriminator 2 view .LVU202
 749 004e 01EB8609 		add	r9, r1, r6, lsl #2
 432:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 750              		.loc 3 432 26 discriminator 2 view .LVU203
 751 0052 D8ED007A 		vldr.32	s15, [r8]
 430:./shy_fft.h   **** 
 752              		.loc 3 430 20 discriminator 2 view .LVU204
 753 0056 3E44     		add	r6, r6, r7
 754              	.LVL54:
 433:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 755              		.loc 3 433 21 discriminator 2 view .LVU205
 756 0058 01EB8202 		add	r2, r1, r2, lsl #2
 757              	.LVL55:
 432:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 758              		.loc 3 432 26 discriminator 2 view .LVU206
 759 005c 99ED007A 		vldr.32	s14, [r9]
 433:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 760              		.loc 3 433 29 discriminator 2 view .LVU207
 761 0060 01EB8606 		add	r6, r1, r6, lsl #2
 762              	.LVL56:
 432:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 763              		.loc 3 432 26 discriminator 2 view .LVU208
 764 0064 77EEC77A 		vsub.f32	s15, s15, s14
 432:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 765              		.loc 3 432 13 discriminator 2 view .LVU209
 766 0068 40ED077A 		vstr.32	s15, [r0, #-28]
 433:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 767              		.loc 3 433 26 discriminator 2 view .LVU210
 768 006c 96ED007A 		vldr.32	s14, [r6]
 769 0070 D2ED007A 		vldr.32	s15, [r2]
 770 0074 77EEC77A 		vsub.f32	s15, s15, s14
 433:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 771              		.loc 3 433 13 discriminator 2 view .LVU211
 772 0078 40ED057A 		vstr.32	s15, [r0, #-20]
 435:./shy_fft.h   ****             d[0] = a + b;
 773              		.loc 3 435 15 discriminator 2 view .LVU212
 774 007c D6ED006A 		vldr.32	s13, [r6]
 434:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 775              		.loc 3 434 15 discriminator 2 view .LVU213
 776 0080 D8ED007A 		vldr.32	s15, [r8]
 777 0084 99ED006A 		vldr.32	s12, [r9]
 435:./shy_fft.h   ****             d[0] = a + b;
 778              		.loc 3 435 15 discriminator 2 view .LVU214
 779 0088 92ED007A 		vldr.32	s14, [r2]
ARM GAS  /tmp/ccDsoCRY.s 			page 49


 434:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 780              		.loc 3 434 15 discriminator 2 view .LVU215
 781 008c 77EE867A 		vadd.f32	s15, s15, s12
 782              	.LVL57:
 435:./shy_fft.h   ****             d[0] = a + b;
 783              		.loc 3 435 15 discriminator 2 view .LVU216
 784 0090 37EE267A 		vadd.f32	s14, s14, s13
 785              	.LVL58:
 436:./shy_fft.h   ****             d[2] = a - b;
 786              		.loc 3 436 22 discriminator 2 view .LVU217
 787 0094 77EE876A 		vadd.f32	s13, s15, s14
 437:./shy_fft.h   ****             d += 4;
 788              		.loc 3 437 22 discriminator 2 view .LVU218
 789 0098 77EEC77A 		vsub.f32	s15, s15, s14
 790              	.LVL59:
 436:./shy_fft.h   ****             d[2] = a - b;
 791              		.loc 3 436 13 discriminator 2 view .LVU219
 792 009c 40ED086A 		vstr.32	s13, [r0, #-32]
 793              	.LVL60:
 437:./shy_fft.h   ****             d += 4;
 794              		.loc 3 437 13 discriminator 2 view .LVU220
 795 00a0 40ED067A 		vstr.32	s15, [r0, #-24]
 796              	.LVL61:
 437:./shy_fft.h   ****             d += 4;
 797              		.loc 3 437 13 discriminator 2 view .LVU221
 798              	.LBE264:
 423:./shy_fft.h   ****         {
 799              		.loc 3 423 9 is_stmt 1 discriminator 2 view .LVU222
 423:./shy_fft.h   ****         {
 800              		.loc 3 423 29 discriminator 2 view .LVU223
 801 00a4 C3D8     		bhi	.L40
 802 00a6 099B     		ldr	r3, [sp, #36]
 803              	.LVL62:
 423:./shy_fft.h   ****         {
 804              		.loc 3 423 29 is_stmt 0 discriminator 2 view .LVU224
 805 00a8 0E9A     		ldr	r2, [sp, #56]
 806 00aa 591E     		subs	r1, r3, #1
 807              	.LVL63:
 423:./shy_fft.h   ****         {
 808              		.loc 3 423 29 discriminator 2 view .LVU225
 809 00ac 119B     		ldr	r3, [sp, #68]
 810 00ae C908     		lsrs	r1, r1, #3
 811 00b0 03F12000 		add	r0, r3, #32
 812 00b4 00EB4110 		add	r0, r0, r1, lsl #5
 813              	.LVL64:
 814              	.L43:
 423:./shy_fft.h   ****         {
 815              		.loc 3 423 29 discriminator 2 view .LVU226
 816              	.LBE265:
 817              	.LBB266:
 818              	.LBB267:
 448:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 819              		.loc 3 448 29 discriminator 2 view .LVU227
 820 00b8 D3ED046A 		vldr.32	s13, [r3, #16]
 821 00bc 2033     		adds	r3, r3, #32
 822 00be 13ED087A 		vldr.32	s14, [r3, #-32]
 823 00c2 2032     		adds	r2, r2, #32
ARM GAS  /tmp/ccDsoCRY.s 			page 50


 454:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 824              		.loc 3 454 33 discriminator 2 view .LVU228
 825 00c4 DFED967A 		vldr.32	s15, .L63
 448:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 826              		.loc 3 448 29 discriminator 2 view .LVU229
 827 00c8 37EE267A 		vadd.f32	s14, s14, s13
 448:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 828              		.loc 3 448 13 discriminator 2 view .LVU230
 829 00cc 02ED087A 		vstr.32	s14, [r2, #-32]
 449:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 830              		.loc 3 449 29 discriminator 2 view .LVU231
 831 00d0 53ED046A 		vldr.32	s13, [r3, #-16]
 832 00d4 13ED087A 		vldr.32	s14, [r3, #-32]
 833 00d8 37EE667A 		vsub.f32	s14, s14, s13
 449:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 834              		.loc 3 449 13 discriminator 2 view .LVU232
 835 00dc 02ED047A 		vstr.32	s14, [r2, #-16]
 450:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 836              		.loc 3 450 25 discriminator 2 view .LVU233
 837 00e0 53F8181C 		ldr	r1, [r3, #-24]	@ float
 450:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 838              		.loc 3 450 13 discriminator 2 view .LVU234
 839 00e4 42F8181C 		str	r1, [r2, #-24]	@ float
 451:./shy_fft.h   **** 
 840              		.loc 3 451 25 discriminator 2 view .LVU235
 841 00e8 53F8081C 		ldr	r1, [r3, #-8]	@ float
 451:./shy_fft.h   **** 
 842              		.loc 3 451 13 discriminator 2 view .LVU236
 843 00ec 42F8081C 		str	r1, [r2, #-8]	@ float
 453:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 844              		.loc 3 453 34 discriminator 2 view .LVU237
 845 00f0 13ED016A 		vldr.32	s12, [r3, #-4]
 846 00f4 13ED037A 		vldr.32	s14, [r3, #-12]
 454:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 847              		.loc 3 454 33 discriminator 2 view .LVU238
 848 00f8 53ED076A 		vldr.32	s13, [r3, #-28]
 453:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 849              		.loc 3 453 34 discriminator 2 view .LVU239
 850 00fc 37EE467A 		vsub.f32	s14, s14, s12
 851              	.LVL65:
 453:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 852              		.loc 3 453 34 discriminator 2 view .LVU240
 853              	.LBE267:
 854              	.LBE266:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 855              		.loc 3 137 41 is_stmt 1 discriminator 2 view .LVU241
 856              	.LBB271:
 857              	.LBB268:
 454:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 858              		.loc 3 454 33 is_stmt 0 discriminator 2 view .LVU242
 859 0100 E7EE276A 		vfma.f32	s13, s14, s15
 454:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 860              		.loc 3 454 13 discriminator 2 view .LVU243
 861 0104 42ED076A 		vstr.32	s13, [r2, #-28]
 455:./shy_fft.h   **** 
 862              		.loc 3 455 33 discriminator 2 view .LVU244
 863 0108 53ED076A 		vldr.32	s13, [r3, #-28]
ARM GAS  /tmp/ccDsoCRY.s 			page 51


 864 010c E7EE676A 		vfms.f32	s13, s14, s15
 455:./shy_fft.h   **** 
 865              		.loc 3 455 13 discriminator 2 view .LVU245
 866 0110 42ED056A 		vstr.32	s13, [r2, #-20]
 457:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 867              		.loc 3 457 34 discriminator 2 view .LVU246
 868 0114 13ED037A 		vldr.32	s14, [r3, #-12]
 869              	.LVL66:
 457:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 870              		.loc 3 457 34 discriminator 2 view .LVU247
 871 0118 13ED016A 		vldr.32	s12, [r3, #-4]
 458:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 872              		.loc 3 458 26 discriminator 2 view .LVU248
 873 011c 53ED056A 		vldr.32	s13, [r3, #-20]
 457:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 874              		.loc 3 457 34 discriminator 2 view .LVU249
 875 0120 37EE067A 		vadd.f32	s14, s14, s12
 876              	.LVL67:
 457:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 877              		.loc 3 457 34 discriminator 2 view .LVU250
 878              	.LBE268:
 879              	.LBE271:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 880              		.loc 3 137 41 is_stmt 1 discriminator 2 view .LVU251
 881              	.LBB272:
 882              	.LBB269:
 458:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 883              		.loc 3 458 26 is_stmt 0 discriminator 2 view .LVU252
 884 0124 E7EE276A 		vfma.f32	s13, s14, s15
 458:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 885              		.loc 3 458 13 discriminator 2 view .LVU253
 886 0128 42ED036A 		vstr.32	s13, [r2, #-12]
 459:./shy_fft.h   ****         }
 887              		.loc 3 459 26 discriminator 2 view .LVU254
 888 012c 53ED056A 		vldr.32	s13, [r3, #-20]
 889              	.LBE269:
 444:./shy_fft.h   ****         {
 890              		.loc 3 444 29 discriminator 2 view .LVU255
 891 0130 8342     		cmp	r3, r0
 892              	.LBB270:
 459:./shy_fft.h   ****         }
 893              		.loc 3 459 26 discriminator 2 view .LVU256
 894 0132 D7EE276A 		vfnms.f32	s13, s14, s15
 459:./shy_fft.h   ****         }
 895              		.loc 3 459 13 discriminator 2 view .LVU257
 896 0136 42ED016A 		vstr.32	s13, [r2, #-4]
 897              	.LBE270:
 444:./shy_fft.h   ****         {
 898              		.loc 3 444 9 is_stmt 1 discriminator 2 view .LVU258
 444:./shy_fft.h   ****         {
 899              		.loc 3 444 29 discriminator 2 view .LVU259
 900 013a BDD1     		bne	.L43
 901              	.LVL68:
 902              	.L38:
 444:./shy_fft.h   ****         {
 903              		.loc 3 444 29 is_stmt 0 discriminator 2 view .LVU260
 904              	.LBE272:
ARM GAS  /tmp/ccDsoCRY.s 			page 52


 905              	.LBB273:
 463:./shy_fft.h   ****         {
 906              		.loc 3 463 35 is_stmt 1 view .LVU261
 907 013c 109B     		ldr	r3, [sp, #64]
 908 013e 032B     		cmp	r3, #3
 909 0140 40F2DC80 		bls	.L62
 910 0144 0AF10403 		add	r3, r10, #4
 911 0148 CDF81CA0 		str	r10, [sp, #28]
 912 014c 0693     		str	r3, [sp, #24]
 913 014e 119B     		ldr	r3, [sp, #68]
 914 0150 0F93     		str	r3, [sp, #60]
 463:./shy_fft.h   ****         {
 915              		.loc 3 463 20 is_stmt 0 view .LVU262
 916 0152 0323     		movs	r3, #3
 917 0154 0D93     		str	r3, [sp, #52]
 918              	.LVL69:
 919              	.L45:
 920              	.LBB274:
 472:./shy_fft.h   ****             size_t n_2 = n >> 1;
 921              		.loc 3 472 28 view .LVU263
 922 0156 0D9B     		ldr	r3, [sp, #52]
 923 0158 4FF0010E 		mov	lr, #1
 924 015c 0EFA03FE 		lsl	lr, lr, r3
 925              	.LVL70:
 473:./shy_fft.h   **** 
 926              		.loc 3 473 20 view .LVU264
 927 0160 4FEA5E03 		lsr	r3, lr, #1
 928 0164 0893     		str	r3, [sp, #32]
 929              	.LVL71:
 930              	.LBB275:
 475:./shy_fft.h   ****             {
 931              		.loc 3 475 33 is_stmt 1 view .LVU265
 932 0166 099B     		ldr	r3, [sp, #36]
 933              	.LVL72:
 475:./shy_fft.h   ****             {
 934              		.loc 3 475 33 is_stmt 0 view .LVU266
 935 0168 002B     		cmp	r3, #0
 936 016a 00F0B680 		beq	.L47
 475:./shy_fft.h   ****             {
 937              		.loc 3 475 52 view .LVU267
 938 016e 4FEA4E02 		lsl	r2, lr, #1
 939              	.LBB276:
 478:./shy_fft.h   ****                 T* dr  = d + i;
 940              		.loc 3 478 30 view .LVU268
 941 0172 0423     		movs	r3, #4
 484:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 942              		.loc 3 484 30 view .LVU269
 943 0174 089E     		ldr	r6, [sp, #32]
 944 0176 4FEACE0E 		lsl	lr, lr, #3
 945              	.LVL73:
 484:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 946              		.loc 3 484 30 view .LVU270
 947              	.LBE276:
 475:./shy_fft.h   ****             {
 948              		.loc 3 475 52 view .LVU271
 949 017a 0B92     		str	r2, [sp, #44]
 950              	.LBB290:
ARM GAS  /tmp/ccDsoCRY.s 			page 53


 478:./shy_fft.h   ****                 T* dr  = d + i;
 951              		.loc 3 478 30 view .LVU272
 952 017c 0D9A     		ldr	r2, [sp, #52]
 484:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 953              		.loc 3 484 30 view .LVU273
 954 017e 4FEA860C 		lsl	ip, r6, #2
 955 0182 0E99     		ldr	r1, [sp, #56]
 478:./shy_fft.h   ****                 T* dr  = d + i;
 956              		.loc 3 478 30 view .LVU274
 957 0184 03FA02F4 		lsl	r4, r3, r2
 958 0188 0F9F     		ldr	r7, [sp, #60]
 959 018a 01EB0309 		add	r9, r1, r3
 960 018e 6346     		mov	r3, ip
 961 0190 01EB040C 		add	ip, r1, r4
 962 0194 04F10408 		add	r8, r4, #4
 963 0198 1A1D     		adds	r2, r3, #4
 964 019a 381D     		adds	r0, r7, #4
 965 019c 9C44     		add	ip, ip, r3
 966 019e 6300     		lsls	r3, r4, #1
 967 01a0 8A18     		adds	r2, r1, r2
 968 01a2 08EB860B 		add	fp, r8, r6, lsl #2
 969 01a6 0C93     		str	r3, [sp, #48]
 970 01a8 07EB8603 		add	r3, r7, r6, lsl #2
 971 01ac 0192     		str	r2, [sp, #4]
 972 01ae 8844     		add	r8, r8, r1
 973 01b0 3A19     		adds	r2, r7, r4
 974 01b2 0493     		str	r3, [sp, #16]
 975 01b4 8B44     		add	fp, fp, r1
 976              	.LBE290:
 475:./shy_fft.h   ****             {
 977              		.loc 3 475 24 view .LVU275
 978 01b6 0023     		movs	r3, #0
 979              	.LBB291:
 478:./shy_fft.h   ****                 T* dr  = d + i;
 980              		.loc 3 478 30 view .LVU276
 981 01b8 0A94     		str	r4, [sp, #40]
 982 01ba 0290     		str	r0, [sp, #8]
 983 01bc 0392     		str	r2, [sp, #12]
 984              	.LBE291:
 475:./shy_fft.h   ****             {
 985              		.loc 3 475 24 view .LVU277
 986 01be 0593     		str	r3, [sp, #20]
 987              	.LVL74:
 988              	.L48:
 989              	.LBB292:
 482:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 990              		.loc 3 482 34 view .LVU278
 991 01c0 18ED017A 		vldr.32	s14, [r8, #-4]
 992 01c4 59ED017A 		vldr.32	s15, [r9, #-4]
 482:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 993              		.loc 3 482 17 view .LVU279
 994 01c8 029A     		ldr	r2, [sp, #8]
 482:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 995              		.loc 3 482 34 view .LVU280
 996 01ca 77EE877A 		vadd.f32	s15, s15, s14
 485:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 997              		.loc 3 485 17 view .LVU281
ARM GAS  /tmp/ccDsoCRY.s 			page 54


 998 01ce 0499     		ldr	r1, [sp, #16]
 999 01d0 0A9B     		ldr	r3, [sp, #40]
 482:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 1000              		.loc 3 482 17 view .LVU282
 1001 01d2 42ED017A 		vstr.32	s15, [r2, #-4]
 485:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 1002              		.loc 3 485 17 view .LVU283
 1003 01d6 CB18     		adds	r3, r1, r3
 483:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 1004              		.loc 3 483 34 view .LVU284
 1005 01d8 59ED017A 		vldr.32	s15, [r9, #-4]
 1006 01dc 18ED017A 		vldr.32	s14, [r8, #-4]
 483:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 1007              		.loc 3 483 17 view .LVU285
 1008 01e0 039A     		ldr	r2, [sp, #12]
 483:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 1009              		.loc 3 483 34 view .LVU286
 1010 01e2 77EEC77A 		vsub.f32	s15, s15, s14
 483:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 1011              		.loc 3 483 17 view .LVU287
 1012 01e6 C2ED007A 		vstr.32	s15, [r2]
 484:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 1013              		.loc 3 484 30 view .LVU288
 1014 01ea 019A     		ldr	r2, [sp, #4]
 1015 01ec 52F8042C 		ldr	r2, [r2, #-4]	@ float
 484:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 1016              		.loc 3 484 17 view .LVU289
 1017 01f0 0A60     		str	r2, [r1]	@ float
 485:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 1018              		.loc 3 485 30 view .LVU290
 1019 01f2 5BF8042C 		ldr	r2, [fp, #-4]	@ float
 485:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 1020              		.loc 3 485 17 view .LVU291
 1021 01f6 1A60     		str	r2, [r3]	@ float
 1022              	.LVL75:
 1023              	.LBB277:
 1024              	.LBI277:
 247:./shy_fft.h   ****     {
 1025              		.loc 3 247 17 is_stmt 1 view .LVU292
 1026              	.LBB278:
 250:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 1027              		.loc 3 250 36 is_stmt 0 view .LVU293
 1028 01f8 069B     		ldr	r3, [sp, #24]
 1029 01fa 53ED017A 		vldr.32	s15, [r3, #-4]
 251:./shy_fft.h   ****     }
 1030              		.loc 3 251 36 view .LVU294
 1031 01fe 079B     		ldr	r3, [sp, #28]
 250:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 1032              		.loc 3 250 9 view .LVU295
 1033 0200 CAED147A 		vstr.32	s15, [r10, #80]
 1034 0204 CAED127A 		vstr.32	s15, [r10, #72]
 251:./shy_fft.h   ****     }
 1035              		.loc 3 251 36 view .LVU296
 1036 0208 D3ED016A 		vldr.32	s13, [r3, #4]
 1037              	.LBE278:
 1038              	.LBE277:
 1039              	.LBB281:
ARM GAS  /tmp/ccDsoCRY.s 			page 55


 489:./shy_fft.h   ****                 {
 1040              		.loc 3 489 37 view .LVU297
 1041 020c 089B     		ldr	r3, [sp, #32]
 1042              	.LBE281:
 1043              	.LBB286:
 1044              	.LBB279:
 251:./shy_fft.h   ****     }
 1045              		.loc 3 251 9 view .LVU298
 1046 020e CAED156A 		vstr.32	s13, [r10, #84]
 1047              	.LBE279:
 1048              	.LBE286:
 1049              	.LBB287:
 489:./shy_fft.h   ****                 {
 1050              		.loc 3 489 37 view .LVU299
 1051 0212 012B     		cmp	r3, #1
 1052              	.LBE287:
 1053              	.LBB288:
 1054              	.LBB280:
 251:./shy_fft.h   ****     }
 1055              		.loc 3 251 9 view .LVU300
 1056 0214 CAED136A 		vstr.32	s13, [r10, #76]
 1057              	.LVL76:
 251:./shy_fft.h   ****     }
 1058              		.loc 3 251 9 view .LVU301
 1059              	.LBE280:
 1060              	.LBE288:
 1061              	.LBB289:
 489:./shy_fft.h   ****                 {
 1062              		.loc 3 489 37 is_stmt 1 view .LVU302
 1063 0218 47D9     		bls	.L49
 1064 021a 0C9B     		ldr	r3, [sp, #48]
 1065 021c 4946     		mov	r1, r9
 1066 021e 039E     		ldr	r6, [sp, #12]
 1067 0220 5A46     		mov	r2, fp
 1068 0222 1C1F     		subs	r4, r3, #4
 1069 0224 4346     		mov	r3, r8
 1070 0226 371D     		adds	r7, r6, #4
 1071 0228 DDE90105 		ldrd	r0, r5, [sp, #4]
 1072 022c 2C44     		add	r4, r4, r5
 1073              	.LVL77:
 1074              	.L50:
 1075              	.LBB282:
 495:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 1076              		.loc 3 495 46 is_stmt 0 discriminator 2 view .LVU303
 1077 022e 92ED007A 		vldr.32	s14, [r2]
 495:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 1078              		.loc 3 495 33 discriminator 2 view .LVU304
 1079 0232 D3ED005A 		vldr.32	s11, [r3]
 495:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 1080              		.loc 3 495 21 discriminator 2 view .LVU305
 1081 0236 26EEC77A 		vnmul.f32	s14, s13, s14
 496:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 1082              		.loc 3 496 33 discriminator 2 view .LVU306
 1083 023a 91ED006A 		vldr.32	s12, [r1]
 495:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 1084              		.loc 3 495 21 discriminator 2 view .LVU307
 1085 023e A5EEA77A 		vfma.f32	s14, s11, s15
ARM GAS  /tmp/ccDsoCRY.s 			page 56


 1086              	.LVL78:
 496:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 1087              		.loc 3 496 37 discriminator 2 view .LVU308
 1088 0242 36EE076A 		vadd.f32	s12, s12, s14
 496:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 1089              		.loc 3 496 21 discriminator 2 view .LVU309
 1090 0246 A5EC016A 		vstmia.32	r5!, {s12}
 1091              	.LVL79:
 497:./shy_fft.h   **** 
 1092              		.loc 3 497 37 discriminator 2 view .LVU310
 1093 024a B1EC016A 		vldmia.32	r1!, {s12}
 1094 024e 36EE477A 		vsub.f32	s14, s12, s14
 1095              	.LVL80:
 497:./shy_fft.h   **** 
 1096              		.loc 3 497 21 discriminator 2 view .LVU311
 1097 0252 26ED017A 		vstmdb.32	r6!, {s14}
 499:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 1098              		.loc 3 499 53 discriminator 2 view .LVU312
 1099 0256 B2EC017A 		vldmia.32	r2!, {s14}
 499:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 1100              		.loc 3 499 21 discriminator 2 view .LVU313
 1101 025a B3EC016A 		vldmia.32	r3!, {s12}
 499:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 1102              		.loc 3 499 53 discriminator 2 view .LVU314
 1103 025e 67EE877A 		vmul.f32	s15, s15, s14
 500:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 1104              		.loc 3 500 40 discriminator 2 view .LVU315
 1105 0262 90ED007A 		vldr.32	s14, [r0]
 1106              	.LBE282:
 489:./shy_fft.h   ****                 {
 1107              		.loc 3 489 37 discriminator 2 view .LVU316
 1108 0266 9C45     		cmp	ip, r3
 1109              	.LBB285:
 499:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 1110              		.loc 3 499 21 discriminator 2 view .LVU317
 1111 0268 E6EE267A 		vfma.f32	s15, s12, s13
 1112              	.LVL81:
 500:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 1113              		.loc 3 500 35 discriminator 2 view .LVU318
 1114 026c 37EE277A 		vadd.f32	s14, s14, s15
 500:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 1115              		.loc 3 500 21 discriminator 2 view .LVU319
 1116 0270 A7EC017A 		vstmia.32	r7!, {s14}
 501:./shy_fft.h   ****                     phasor->Rotate();
 1117              		.loc 3 501 35 discriminator 2 view .LVU320
 1118 0274 B0EC017A 		vldmia.32	r0!, {s14}
 1119 0278 77EEC77A 		vsub.f32	s15, s15, s14
 1120              	.LVL82:
 501:./shy_fft.h   ****                     phasor->Rotate();
 1121              		.loc 3 501 21 discriminator 2 view .LVU321
 1122 027c 64ED017A 		vstmdb.32	r4!, {s15}
 1123              	.LVL83:
 1124              	.LBB283:
 1125              	.LBI283:
 254:./shy_fft.h   ****     {
 1126              		.loc 3 254 17 is_stmt 1 discriminator 2 view .LVU322
 1127              	.LBB284:
ARM GAS  /tmp/ccDsoCRY.s 			page 57


 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1128              		.loc 3 256 33 is_stmt 0 discriminator 2 view .LVU323
 1129 0280 DAED137A 		vldr.32	s15, [r10, #76]
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1130              		.loc 3 256 25 discriminator 2 view .LVU324
 1131 0284 9AED147A 		vldr.32	s14, [r10, #80]
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1132              		.loc 3 256 40 discriminator 2 view .LVU325
 1133 0288 DAED155A 		vldr.32	s11, [r10, #84]
 257:./shy_fft.h   ****         cos_   = temp;
 1134              		.loc 3 257 38 discriminator 2 view .LVU326
 1135 028c 67EE276A 		vmul.f32	s13, s14, s15
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1136              		.loc 3 256 18 discriminator 2 view .LVU327
 1137 0290 9AED126A 		vldr.32	s12, [r10, #72]
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1138              		.loc 3 256 11 discriminator 2 view .LVU328
 1139 0294 65EEE77A 		vnmul.f32	s15, s11, s15
 257:./shy_fft.h   ****         cos_   = temp;
 1140              		.loc 3 257 31 discriminator 2 view .LVU329
 1141 0298 E6EE256A 		vfma.f32	s13, s12, s11
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1142              		.loc 3 256 11 discriminator 2 view .LVU330
 1143 029c E6EE077A 		vfma.f32	s15, s12, s14
 1144              	.LVL84:
 257:./shy_fft.h   ****         cos_   = temp;
 1145              		.loc 3 257 9 discriminator 2 view .LVU331
 1146 02a0 CAED136A 		vstr.32	s13, [r10, #76]
 258:./shy_fft.h   ****     }
 1147              		.loc 3 258 9 discriminator 2 view .LVU332
 1148 02a4 CAED127A 		vstr.32	s15, [r10, #72]
 1149              	.LVL85:
 258:./shy_fft.h   ****     }
 1150              		.loc 3 258 9 discriminator 2 view .LVU333
 1151              	.LBE284:
 1152              	.LBE283:
 1153              	.LBE285:
 489:./shy_fft.h   ****                 {
 1154              		.loc 3 489 17 is_stmt 1 discriminator 2 view .LVU334
 489:./shy_fft.h   ****                 {
 1155              		.loc 3 489 37 discriminator 2 view .LVU335
 1156 02a8 C1D1     		bne	.L50
 1157              	.LVL86:
 1158              	.L49:
 489:./shy_fft.h   ****                 {
 1159              		.loc 3 489 37 is_stmt 0 discriminator 2 view .LVU336
 1160              	.LBE289:
 1161              	.LBE292:
 475:./shy_fft.h   ****             {
 1162              		.loc 3 475 13 is_stmt 1 view .LVU337
 1163 02aa 059B     		ldr	r3, [sp, #20]
 1164 02ac F044     		add	r8, r8, lr
 1165              	.LVL87:
 475:./shy_fft.h   ****             {
 1166              		.loc 3 475 13 is_stmt 0 view .LVU338
 1167 02ae 0B9A     		ldr	r2, [sp, #44]
 1168 02b0 F344     		add	fp, fp, lr
ARM GAS  /tmp/ccDsoCRY.s 			page 58


 1169 02b2 F144     		add	r9, r9, lr
 1170              	.LVL88:
 475:./shy_fft.h   ****             {
 1171              		.loc 3 475 13 view .LVU339
 1172 02b4 F444     		add	ip, ip, lr
 1173 02b6 1344     		add	r3, r3, r2
 1174 02b8 039A     		ldr	r2, [sp, #12]
 1175 02ba 7244     		add	r2, r2, lr
 1176 02bc 0593     		str	r3, [sp, #20]
 1177              	.LVL89:
 475:./shy_fft.h   ****             {
 1178              		.loc 3 475 33 is_stmt 1 view .LVU340
 1179 02be 0392     		str	r2, [sp, #12]
 1180              	.LVL90:
 475:./shy_fft.h   ****             {
 1181              		.loc 3 475 33 is_stmt 0 view .LVU341
 1182 02c0 049A     		ldr	r2, [sp, #16]
 1183 02c2 7244     		add	r2, r2, lr
 1184 02c4 0492     		str	r2, [sp, #16]
 1185 02c6 029A     		ldr	r2, [sp, #8]
 1186 02c8 7244     		add	r2, r2, lr
 1187 02ca 0292     		str	r2, [sp, #8]
 1188              	.LVL91:
 475:./shy_fft.h   ****             {
 1189              		.loc 3 475 33 view .LVU342
 1190 02cc 019A     		ldr	r2, [sp, #4]
 1191 02ce 7244     		add	r2, r2, lr
 1192 02d0 0192     		str	r2, [sp, #4]
 1193              	.LVL92:
 475:./shy_fft.h   ****             {
 1194              		.loc 3 475 33 view .LVU343
 1195 02d2 099A     		ldr	r2, [sp, #36]
 1196 02d4 9A42     		cmp	r2, r3
 1197 02d6 3FF673AF 		bhi	.L48
 1198              	.LVL93:
 1199              	.L47:
 475:./shy_fft.h   ****             {
 1200              		.loc 3 475 33 view .LVU344
 1201              	.LBE275:
 1202              	.LBE274:
 463:./shy_fft.h   ****         {
 1203              		.loc 3 463 9 is_stmt 1 view .LVU345
 1204 02da 0799     		ldr	r1, [sp, #28]
 1205 02dc 0D9A     		ldr	r2, [sp, #52]
 1206 02de 0831     		adds	r1, r1, #8
 1207 02e0 0E9B     		ldr	r3, [sp, #56]
 1208 02e2 0132     		adds	r2, r2, #1
 1209 02e4 0791     		str	r1, [sp, #28]
 1210 02e6 0699     		ldr	r1, [sp, #24]
 1211 02e8 0D92     		str	r2, [sp, #52]
 1212              	.LVL94:
 463:./shy_fft.h   ****         {
 1213              		.loc 3 463 35 view .LVU346
 1214 02ea 0831     		adds	r1, r1, #8
 1215 02ec 0691     		str	r1, [sp, #24]
 1216 02ee 0F99     		ldr	r1, [sp, #60]
 1217 02f0 0E91     		str	r1, [sp, #56]
ARM GAS  /tmp/ccDsoCRY.s 			page 59


 1218 02f2 1099     		ldr	r1, [sp, #64]
 1219 02f4 9142     		cmp	r1, r2
 1220 02f6 03D0     		beq	.L41
 1221 02f8 0F93     		str	r3, [sp, #60]
 1222              	.LVL95:
 463:./shy_fft.h   ****         {
 1223              		.loc 3 463 35 is_stmt 0 view .LVU347
 1224 02fa 2CE7     		b	.L45
 1225              	.LVL96:
 1226              	.L62:
 463:./shy_fft.h   ****         {
 1227              		.loc 3 463 35 view .LVU348
 1228              	.LBE273:
 443:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 8)
 1229              		.loc 3 443 9 view .LVU349
 1230 02fc 0E9B     		ldr	r3, [sp, #56]
 1231 02fe 0F93     		str	r3, [sp, #60]
 1232              	.LVL97:
 1233              	.L41:
 508:./shy_fft.h   ****         {
 1234              		.loc 3 508 9 view .LVU350
 1235 0300 1198     		ldr	r0, [sp, #68]
 1236 0302 0F99     		ldr	r1, [sp, #60]
 1237 0304 8842     		cmp	r0, r1
 1238 0306 08D0     		beq	.L37
 510:./shy_fft.h   ****         }
 1239              		.loc 3 510 32 view .LVU351
 1240 0308 0422     		movs	r2, #4
 1241              	.LVL98:
 1242              	.LBB293:
 1243              	.LBI293:
 465:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 1244              		.loc 2 465 5 is_stmt 1 view .LVU352
 1245              	.LBB294:
 1246              	.LBI294:
 438:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 1247              		.loc 2 438 5 view .LVU353
 1248              	.LBB295:
 1249              	.LBI295:
 393:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 1250              		.loc 2 393 5 view .LVU354
 1251              	.LBB296:
 1252              	.LBB297:
 1253              	.LBI297:
 375:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 1254              		.loc 2 375 2 view .LVU355
 1255              	.LBB298:
 385:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 1256              		.loc 2 385 4 is_stmt 0 view .LVU356
 1257 030a 109B     		ldr	r3, [sp, #64]
 1258 030c 9A40     		lsls	r2, r2, r3
 1259              	.LVL99:
 385:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 1260              		.loc 2 385 4 view .LVU357
 1261 030e 04D0     		beq	.L37
 1262              	.LBE298:
 1263              	.LBE297:
ARM GAS  /tmp/ccDsoCRY.s 			page 60


 1264              	.LBE296:
 1265              	.LBE295:
 1266              	.LBE294:
 1267              	.LBE293:
 512:./shy_fft.h   **** };
 1268              		.loc 3 512 5 view .LVU358
 1269 0310 13B0     		add	sp, sp, #76
 1270              		.cfi_remember_state
 1271              		.cfi_def_cfa_offset 36
 1272              		@ sp needed
 1273 0312 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1274              		.cfi_restore 14
 1275              		.cfi_restore 11
 1276              		.cfi_restore 10
 1277              		.cfi_restore 9
 1278              		.cfi_restore 8
 1279              		.cfi_restore 7
 1280              		.cfi_restore 6
 1281              		.cfi_restore 5
 1282              		.cfi_restore 4
 1283              		.cfi_def_cfa_offset 0
 1284              	.LVL100:
 1285              	.LBB304:
 1286              	.LBB303:
 1287              	.LBB302:
 1288              	.LBB301:
 1289              	.LBB300:
 1290              	.LBB299:
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 1291              		.loc 2 386 23 view .LVU359
 1292 0316 FFF7FEBF 		b	memmove
 1293              	.LVL101:
 1294              	.L37:
 1295              		.cfi_restore_state
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 1296              		.loc 2 386 23 view .LVU360
 1297              	.LBE299:
 1298              	.LBE300:
 1299              	.LBE301:
 1300              	.LBE302:
 1301              	.LBE303:
 1302              	.LBE304:
 512:./shy_fft.h   **** };
 1303              		.loc 3 512 5 view .LVU361
 1304 031a 13B0     		add	sp, sp, #76
 1305              		.cfi_def_cfa_offset 36
 1306              		@ sp needed
 1307 031c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1308              	.LVL102:
 1309              	.L64:
 512:./shy_fft.h   **** };
 1310              		.loc 3 512 5 view .LVU362
 1311              		.align	2
 1312              	.L63:
 1313 0320 F304353F 		.word	1060439283
 1314              		.cfi_endproc
 1315              	.LFE4715:
ARM GAS  /tmp/ccDsoCRY.s 			page 61


 1317              		.section	.text._ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j,"axG",%progbi
 1318              		.align	1
 1319              		.p2align 2,,3
 1320              		.weak	_ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j
 1321              		.syntax unified
 1322              		.thumb
 1323              		.thumb_func
 1324              		.fpu fpv5-d16
 1326              	_ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j:
 1327              	.LVL103:
 1328              	.LFB4719:
 665:./shy_fft.h   ****                     T*             output,
 1329              		.loc 3 665 10 is_stmt 1 view -0
 1330              		.cfi_startproc
 1331              		@ args = 8, pretend = 0, frame = 64
 1332              		@ frame_needed = 0, uses_anonymous_args = 0
 665:./shy_fft.h   ****                     T*             output,
 1333              		.loc 3 665 10 is_stmt 0 view .LVU364
 1334 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1335              		.cfi_def_cfa_offset 36
 1336              		.cfi_offset 4, -36
 1337              		.cfi_offset 5, -32
 1338              		.cfi_offset 6, -28
 1339              		.cfi_offset 7, -24
 1340              		.cfi_offset 8, -20
 1341              		.cfi_offset 9, -16
 1342              		.cfi_offset 10, -12
 1343              		.cfi_offset 11, -8
 1344              		.cfi_offset 14, -4
 1345 0004 91B0     		sub	sp, sp, #68
 1346              		.cfi_def_cfa_offset 104
 1347              	.LBB305:
 678:./shy_fft.h   ****         {
 1348              		.loc 3 678 20 view .LVU365
 1349 0006 1B98     		ldr	r0, [sp, #108]
 1350              	.LVL104:
 678:./shy_fft.h   ****         {
 1351              		.loc 3 678 20 view .LVU366
 1352              	.LBE305:
 665:./shy_fft.h   ****                     T*             output,
 1353              		.loc 3 665 10 view .LVU367
 1354 0008 0F93     		str	r3, [sp, #60]
 1355              	.LBB322:
 678:./shy_fft.h   ****         {
 1356              		.loc 3 678 20 view .LVU368
 1357 000a 441E     		subs	r4, r0, #1
 1358              	.LBE322:
 675:./shy_fft.h   **** 
 1359              		.loc 3 675 28 view .LVU369
 1360 000c 1B9B     		ldr	r3, [sp, #108]
 1361              	.LVL105:
 675:./shy_fft.h   **** 
 1362              		.loc 3 675 28 view .LVU370
 1363 000e 0120     		movs	r0, #1
 665:./shy_fft.h   ****                     T*             output,
 1364              		.loc 3 665 10 view .LVU371
 1365 0010 DDF868B0 		ldr	fp, [sp, #104]
ARM GAS  /tmp/ccDsoCRY.s 			page 62


 1366              	.LBB323:
 678:./shy_fft.h   ****         {
 1367              		.loc 3 678 51 view .LVU372
 1368 0014 022C     		cmp	r4, #2
 678:./shy_fft.h   ****         {
 1369              		.loc 3 678 20 view .LVU373
 1370 0016 0B94     		str	r4, [sp, #44]
 1371              	.LBE323:
 675:./shy_fft.h   **** 
 1372              		.loc 3 675 28 view .LVU374
 1373 0018 00FA03F3 		lsl	r3, r0, r3
 665:./shy_fft.h   ****                     T*             output,
 1374              		.loc 3 665 10 view .LVU375
 1375 001c CDE90D21 		strd	r2, r1, [sp, #52]
 1376              	.LVL106:
 675:./shy_fft.h   **** 
 1377              		.loc 3 675 28 view .LVU376
 1378 0020 0793     		str	r3, [sp, #28]
 1379              	.LVL107:
 1380              	.LBB324:
 678:./shy_fft.h   ****         {
 1381              		.loc 3 678 51 is_stmt 1 view .LVU377
 1382 0022 40F28A81 		bls	.L81
 1383 0026 1B9B     		ldr	r3, [sp, #108]
 1384              	.LVL108:
 678:./shy_fft.h   ****         {
 1385              		.loc 3 678 51 is_stmt 0 view .LVU378
 1386              	.LBE324:
 671:./shy_fft.h   ****         T*      d = output;
 1387              		.loc 3 671 17 view .LVU379
 1388 0028 8846     		mov	r8, r1
 1389              	.LBB325:
 678:./shy_fft.h   ****         {
 1390              		.loc 3 678 51 view .LVU380
 1391 002a 0C92     		str	r2, [sp, #48]
 1392 002c 0BEBC303 		add	r3, fp, r3, lsl #3
 1393 0030 0593     		str	r3, [sp, #20]
 1394              	.LVL109:
 1395              	.L74:
 1396              	.LBB306:
 680:./shy_fft.h   ****             size_t n_2 = n >> 1;
 1397              		.loc 3 680 28 view .LVU381
 1398 0032 0B9B     		ldr	r3, [sp, #44]
 1399 0034 4FF0010E 		mov	lr, #1
 1400 0038 0EFA03FE 		lsl	lr, lr, r3
 1401              	.LVL110:
 681:./shy_fft.h   **** 
 1402              		.loc 3 681 20 view .LVU382
 1403 003c 4FEA5E03 		lsr	r3, lr, #1
 1404 0040 0693     		str	r3, [sp, #24]
 1405              	.LVL111:
 1406              	.LBB307:
 683:./shy_fft.h   ****             {
 1407              		.loc 3 683 33 is_stmt 1 view .LVU383
 1408 0042 079B     		ldr	r3, [sp, #28]
 1409              	.LVL112:
 683:./shy_fft.h   ****             {
ARM GAS  /tmp/ccDsoCRY.s 			page 63


 1410              		.loc 3 683 33 is_stmt 0 view .LVU384
 1411 0044 002B     		cmp	r3, #0
 1412 0046 00F0B980 		beq	.L70
 683:./shy_fft.h   ****             {
 1413              		.loc 3 683 33 view .LVU385
 1414 004a 0C99     		ldr	r1, [sp, #48]
 683:./shy_fft.h   ****             {
 1415              		.loc 3 683 52 view .LVU386
 1416 004c 4FEA4E02 		lsl	r2, lr, #1
 1417              	.LBB308:
 686:./shy_fft.h   ****                 T* d1r = d + i;
 1418              		.loc 3 686 29 view .LVU387
 1419 0050 0423     		movs	r3, #4
 1420 0052 0698     		ldr	r0, [sp, #24]
 1421              	.LBE308:
 683:./shy_fft.h   ****             {
 1422              		.loc 3 683 52 view .LVU388
 1423 0054 0992     		str	r2, [sp, #36]
 1424 0056 4FEACE0E 		lsl	lr, lr, #3
 1425              	.LVL113:
 683:./shy_fft.h   ****             {
 1426              		.loc 3 683 52 view .LVU389
 1427 005a CA18     		adds	r2, r1, r3
 1428 005c 08EB800A 		add	r10, r8, r0, lsl #2
 1429 0060 0392     		str	r2, [sp, #12]
 1430 0062 D446     		mov	ip, r10
 1431              	.LBB318:
 686:./shy_fft.h   ****                 T* d1r = d + i;
 1432              		.loc 3 686 29 view .LVU390
 1433 0064 0B9A     		ldr	r2, [sp, #44]
 1434 0066 9340     		lsls	r3, r3, r2
 1435              	.LBE318:
 683:./shy_fft.h   ****             {
 1436              		.loc 3 683 24 view .LVU391
 1437 0068 0022     		movs	r2, #0
 1438              	.LBB319:
 686:./shy_fft.h   ****                 T* d1r = d + i;
 1439              		.loc 3 686 29 view .LVU392
 1440 006a 0893     		str	r3, [sp, #32]
 1441              	.LBE319:
 683:./shy_fft.h   ****             {
 1442              		.loc 3 683 24 view .LVU393
 1443 006c 0492     		str	r2, [sp, #16]
 1444 006e 1A1D     		adds	r2, r3, #4
 1445 0070 5B00     		lsls	r3, r3, #1
 1446 0072 08EB0209 		add	r9, r8, r2
 1447 0076 0A93     		str	r3, [sp, #40]
 1448 0078 01EB8003 		add	r3, r1, r0, lsl #2
 1449 007c 0093     		str	r3, [sp]
 1450 007e 02EB8003 		add	r3, r2, r0, lsl #2
 1451 0082 8A18     		adds	r2, r1, r2
 1452 0084 CB18     		adds	r3, r1, r3
 1453 0086 0292     		str	r2, [sp, #8]
 1454 0088 0193     		str	r3, [sp, #4]
 1455              	.LVL114:
 1456              	.L71:
 1457              	.LBB320:
ARM GAS  /tmp/ccDsoCRY.s 			page 64


 690:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 1458              		.loc 3 690 34 view .LVU394
 1459 008a 19ED017A 		vldr.32	s14, [r9, #-4]
 1460 008e D8ED007A 		vldr.32	s15, [r8]
 690:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 1461              		.loc 3 690 17 view .LVU395
 1462 0092 0399     		ldr	r1, [sp, #12]
 690:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 1463              		.loc 3 690 34 view .LVU396
 1464 0094 77EE877A 		vadd.f32	s15, s15, s14
 693:./shy_fft.h   **** 
 1465              		.loc 3 693 30 view .LVU397
 1466 0098 089A     		ldr	r2, [sp, #32]
 1467 009a 0AEB0203 		add	r3, r10, r2
 1468 009e 4244     		add	r2, r2, r8
 1469              	.LVL115:
 690:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 1470              		.loc 3 690 17 view .LVU398
 1471 00a0 41ED017A 		vstr.32	s15, [r1, #-4]
 691:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 1472              		.loc 3 691 34 view .LVU399
 1473 00a4 D8ED007A 		vldr.32	s15, [r8]
 1474 00a8 19ED017A 		vldr.32	s14, [r9, #-4]
 691:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 1475              		.loc 3 691 17 view .LVU400
 1476 00ac 0299     		ldr	r1, [sp, #8]
 1477              	.LVL116:
 691:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 1478              		.loc 3 691 34 view .LVU401
 1479 00ae 77EEC77A 		vsub.f32	s15, s15, s14
 691:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 1480              		.loc 3 691 17 view .LVU402
 1481 00b2 41ED017A 		vstr.32	s15, [r1, #-4]
 692:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 1482              		.loc 3 692 36 view .LVU403
 1483 00b6 DAED007A 		vldr.32	s15, [r10]
 692:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 1484              		.loc 3 692 17 view .LVU404
 1485 00ba 0099     		ldr	r1, [sp]
 692:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 1486              		.loc 3 692 36 view .LVU405
 1487 00bc 77EEA77A 		vadd.f32	s15, s15, s15
 692:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 1488              		.loc 3 692 17 view .LVU406
 1489 00c0 C1ED007A 		vstr.32	s15, [r1]
 693:./shy_fft.h   **** 
 1490              		.loc 3 693 36 view .LVU407
 1491 00c4 D3ED007A 		vldr.32	s15, [r3]
 1492              	.LBB309:
 1493              	.LBB310:
 250:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 1494              		.loc 3 250 36 view .LVU408
 1495 00c8 0599     		ldr	r1, [sp, #20]
 1496              	.LBE310:
 1497              	.LBE309:
 693:./shy_fft.h   **** 
 1498              		.loc 3 693 36 view .LVU409
ARM GAS  /tmp/ccDsoCRY.s 			page 65


 1499 00ca 77EEA77A 		vadd.f32	s15, s15, s15
 693:./shy_fft.h   **** 
 1500              		.loc 3 693 17 view .LVU410
 1501 00ce 019B     		ldr	r3, [sp, #4]
 1502 00d0 43ED017A 		vstr.32	s15, [r3, #-4]
 1503              	.LVL117:
 1504              	.LBB312:
 1505              	.LBI309:
 247:./shy_fft.h   ****     {
 1506              		.loc 3 247 17 is_stmt 1 view .LVU411
 1507              	.LBB311:
 250:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 1508              		.loc 3 250 36 is_stmt 0 view .LVU412
 1509 00d4 51F8203C 		ldr	r3, [r1, #-32]	@ float
 250:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 1510              		.loc 3 250 9 view .LVU413
 1511 00d8 CBF85030 		str	r3, [fp, #80]	@ float
 1512 00dc CBF84830 		str	r3, [fp, #72]	@ float
 251:./shy_fft.h   ****     }
 1513              		.loc 3 251 36 view .LVU414
 1514 00e0 51F81C3C 		ldr	r3, [r1, #-28]	@ float
 251:./shy_fft.h   ****     }
 1515              		.loc 3 251 9 view .LVU415
 1516 00e4 CBF85430 		str	r3, [fp, #84]	@ float
 1517 00e8 CBF84C30 		str	r3, [fp, #76]	@ float
 1518              	.LVL118:
 251:./shy_fft.h   ****     }
 1519              		.loc 3 251 9 view .LVU416
 1520              	.LBE311:
 1521              	.LBE312:
 1522              	.LBB313:
 698:./shy_fft.h   ****                 {
 1523              		.loc 3 698 37 is_stmt 1 view .LVU417
 1524 00ec 069B     		ldr	r3, [sp, #24]
 1525 00ee 012B     		cmp	r3, #1
 1526 00f0 4CD9     		bls	.L72
 1527 00f2 0A99     		ldr	r1, [sp, #40]
 1528 00f4 08F10403 		add	r3, r8, #4
 1529 00f8 039C     		ldr	r4, [sp, #12]
 1530 00fa 08EB0100 		add	r0, r8, r1
 1531 00fe 0099     		ldr	r1, [sp]
 1532 0100 DDE90165 		ldrd	r6, r5, [sp, #4]
 1533 0104 0F1D     		adds	r7, r1, #4
 1534 0106 4946     		mov	r1, r9
 1535              	.LVL119:
 1536              	.L73:
 1537              	.LBB314:
 700:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 1538              		.loc 3 700 32 is_stmt 0 discriminator 2 view .LVU418
 1539 0108 93ED007A 		vldr.32	s14, [r3]
 700:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 1540              		.loc 3 700 36 discriminator 2 view .LVU419
 1541 010c 72ED017A 		vldmdb.32	r2!, {s15}
 1542 0110 77EE877A 		vadd.f32	s15, s15, s14
 700:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 1543              		.loc 3 700 21 discriminator 2 view .LVU420
 1544 0114 E4EC017A 		vstmia.32	r4!, {s15}
ARM GAS  /tmp/ccDsoCRY.s 			page 66


 701:./shy_fft.h   **** 
 1545              		.loc 3 701 36 discriminator 2 view .LVU421
 1546 0118 30ED017A 		vldmdb.32	r0!, {s14}
 701:./shy_fft.h   **** 
 1547              		.loc 3 701 32 discriminator 2 view .LVU422
 1548 011c D1ED007A 		vldr.32	s15, [r1]
 701:./shy_fft.h   **** 
 1549              		.loc 3 701 36 discriminator 2 view .LVU423
 1550 0120 77EEC77A 		vsub.f32	s15, s15, s14
 701:./shy_fft.h   **** 
 1551              		.loc 3 701 21 discriminator 2 view .LVU424
 1552 0124 E7EC017A 		vstmia.32	r7!, {s15}
 706:./shy_fft.h   **** 
 1553              		.loc 3 706 23 discriminator 2 view .LVU425
 1554 0128 D0ED007A 		vldr.32	s15, [r0]
 705:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 1555              		.loc 3 705 23 discriminator 2 view .LVU426
 1556 012c F3EC016A 		vldmia.32	r3!, {s13}
 1557 0130 92ED006A 		vldr.32	s12, [r2]
 706:./shy_fft.h   **** 
 1558              		.loc 3 706 23 discriminator 2 view .LVU427
 1559 0134 B1EC017A 		vldmia.32	r1!, {s14}
 1560              	.LBE314:
 698:./shy_fft.h   ****                 {
 1561              		.loc 3 698 37 discriminator 2 view .LVU428
 1562 0138 6345     		cmp	r3, ip
 1563              	.LBB317:
 705:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 1564              		.loc 3 705 23 discriminator 2 view .LVU429
 1565 013a 76EEC66A 		vsub.f32	s13, s13, s12
 703:./shy_fft.h   ****                     T s  = phasor->sin();
 1566              		.loc 3 703 23 discriminator 2 view .LVU430
 1567 013e DBED125A 		vldr.32	s11, [fp, #72]
 1568              	.LVL120:
 706:./shy_fft.h   **** 
 1569              		.loc 3 706 23 discriminator 2 view .LVU431
 1570 0142 37EE277A 		vadd.f32	s14, s14, s15
 704:./shy_fft.h   ****                     T vr = sr[j] - si[-j];
 1571              		.loc 3 704 23 discriminator 2 view .LVU432
 1572 0146 DBED137A 		vldr.32	s15, [fp, #76]
 1573              	.LVL121:
 708:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 1574              		.loc 3 708 42 discriminator 2 view .LVU433
 1575 014a 27EE276A 		vmul.f32	s12, s14, s15
 709:./shy_fft.h   ****                     phasor->Rotate();
 1576              		.loc 3 709 37 discriminator 2 view .LVU434
 1577 014e 67EEE67A 		vnmul.f32	s15, s15, s13
 1578              	.LVL122:
 708:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 1579              		.loc 3 708 37 discriminator 2 view .LVU435
 1580 0152 A6EEA56A 		vfma.f32	s12, s13, s11
 709:./shy_fft.h   ****                     phasor->Rotate();
 1581              		.loc 3 709 37 discriminator 2 view .LVU436
 1582 0156 E7EE257A 		vfma.f32	s15, s14, s11
 708:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 1583              		.loc 3 708 21 discriminator 2 view .LVU437
 1584 015a A5EC016A 		vstmia.32	r5!, {s12}
ARM GAS  /tmp/ccDsoCRY.s 			page 67


 1585              	.LVL123:
 709:./shy_fft.h   ****                     phasor->Rotate();
 1586              		.loc 3 709 21 discriminator 2 view .LVU438
 1587 015e E6EC017A 		vstmia.32	r6!, {s15}
 1588              	.LVL124:
 1589              	.LBB315:
 1590              	.LBI315:
 254:./shy_fft.h   ****     {
 1591              		.loc 3 254 17 is_stmt 1 discriminator 2 view .LVU439
 1592              	.LBB316:
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1593              		.loc 3 256 33 is_stmt 0 discriminator 2 view .LVU440
 1594 0162 DBED137A 		vldr.32	s15, [fp, #76]
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1595              		.loc 3 256 25 discriminator 2 view .LVU441
 1596 0166 DBED146A 		vldr.32	s13, [fp, #80]
 1597              	.LVL125:
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1598              		.loc 3 256 40 discriminator 2 view .LVU442
 1599 016a DBED155A 		vldr.32	s11, [fp, #84]
 1600              	.LVL126:
 257:./shy_fft.h   ****         cos_   = temp;
 1601              		.loc 3 257 38 discriminator 2 view .LVU443
 1602 016e 26EEA77A 		vmul.f32	s14, s13, s15
 1603              	.LVL127:
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1604              		.loc 3 256 18 discriminator 2 view .LVU444
 1605 0172 9BED126A 		vldr.32	s12, [fp, #72]
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1606              		.loc 3 256 11 discriminator 2 view .LVU445
 1607 0176 65EEE77A 		vnmul.f32	s15, s11, s15
 257:./shy_fft.h   ****         cos_   = temp;
 1608              		.loc 3 257 31 discriminator 2 view .LVU446
 1609 017a A6EE257A 		vfma.f32	s14, s12, s11
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1610              		.loc 3 256 11 discriminator 2 view .LVU447
 1611 017e E6EE267A 		vfma.f32	s15, s12, s13
 1612              	.LVL128:
 257:./shy_fft.h   ****         cos_   = temp;
 1613              		.loc 3 257 9 discriminator 2 view .LVU448
 1614 0182 8BED137A 		vstr.32	s14, [fp, #76]
 258:./shy_fft.h   ****     }
 1615              		.loc 3 258 9 discriminator 2 view .LVU449
 1616 0186 CBED127A 		vstr.32	s15, [fp, #72]
 1617              	.LVL129:
 258:./shy_fft.h   ****     }
 1618              		.loc 3 258 9 discriminator 2 view .LVU450
 1619              	.LBE316:
 1620              	.LBE315:
 1621              	.LBE317:
 698:./shy_fft.h   ****                 {
 1622              		.loc 3 698 17 is_stmt 1 discriminator 2 view .LVU451
 698:./shy_fft.h   ****                 {
 1623              		.loc 3 698 37 discriminator 2 view .LVU452
 1624 018a BDD1     		bne	.L73
 1625              	.LVL130:
 1626              	.L72:
ARM GAS  /tmp/ccDsoCRY.s 			page 68


 698:./shy_fft.h   ****                 {
 1627              		.loc 3 698 37 is_stmt 0 discriminator 2 view .LVU453
 1628              	.LBE313:
 1629              	.LBE320:
 683:./shy_fft.h   ****             {
 1630              		.loc 3 683 13 is_stmt 1 view .LVU454
 1631 018c 049B     		ldr	r3, [sp, #16]
 1632 018e F044     		add	r8, r8, lr
 1633              	.LVL131:
 683:./shy_fft.h   ****             {
 1634              		.loc 3 683 13 is_stmt 0 view .LVU455
 1635 0190 099A     		ldr	r2, [sp, #36]
 1636 0192 F244     		add	r10, r10, lr
 1637 0194 F144     		add	r9, r9, lr
 1638 0196 F444     		add	ip, ip, lr
 1639 0198 1344     		add	r3, r3, r2
 1640 019a 009A     		ldr	r2, [sp]
 1641 019c 7244     		add	r2, r2, lr
 1642 019e 0493     		str	r3, [sp, #16]
 1643              	.LVL132:
 683:./shy_fft.h   ****             {
 1644              		.loc 3 683 33 is_stmt 1 view .LVU456
 1645 01a0 0092     		str	r2, [sp]
 1646              	.LVL133:
 683:./shy_fft.h   ****             {
 1647              		.loc 3 683 33 is_stmt 0 view .LVU457
 1648 01a2 039A     		ldr	r2, [sp, #12]
 1649 01a4 7244     		add	r2, r2, lr
 1650 01a6 0392     		str	r2, [sp, #12]
 1651              	.LVL134:
 683:./shy_fft.h   ****             {
 1652              		.loc 3 683 33 view .LVU458
 1653 01a8 029A     		ldr	r2, [sp, #8]
 1654 01aa 7244     		add	r2, r2, lr
 1655 01ac 0292     		str	r2, [sp, #8]
 1656              	.LVL135:
 683:./shy_fft.h   ****             {
 1657              		.loc 3 683 33 view .LVU459
 1658 01ae 019A     		ldr	r2, [sp, #4]
 1659 01b0 7244     		add	r2, r2, lr
 1660 01b2 0192     		str	r2, [sp, #4]
 1661 01b4 079A     		ldr	r2, [sp, #28]
 1662 01b6 9A42     		cmp	r2, r3
 1663 01b8 3FF667AF 		bhi	.L71
 1664              	.LVL136:
 1665              	.L70:
 683:./shy_fft.h   ****             {
 1666              		.loc 3 683 33 view .LVU460
 1667              	.LBE307:
 715:./shy_fft.h   ****             {
 1668              		.loc 3 715 13 view .LVU461
 1669 01bc 0D9B     		ldr	r3, [sp, #52]
 1670 01be 0C99     		ldr	r1, [sp, #48]
 1671 01c0 8B42     		cmp	r3, r1
 1672 01c2 00F0B680 		beq	.L82
 722:./shy_fft.h   ****                 d = output;
 1673              		.loc 3 722 17 view .LVU462
ARM GAS  /tmp/ccDsoCRY.s 			page 69


 1674 01c6 DDF83880 		ldr	r8, [sp, #56]
 715:./shy_fft.h   ****             {
 1675              		.loc 3 715 13 view .LVU463
 1676 01ca 0C93     		str	r3, [sp, #48]
 1677              	.LVL137:
 1678              	.L68:
 715:./shy_fft.h   ****             {
 1679              		.loc 3 715 13 view .LVU464
 1680              	.LBE306:
 678:./shy_fft.h   ****         {
 1681              		.loc 3 678 9 is_stmt 1 discriminator 2 view .LVU465
 1682 01cc 0B9B     		ldr	r3, [sp, #44]
 1683 01ce 059A     		ldr	r2, [sp, #20]
 1684 01d0 013B     		subs	r3, r3, #1
 1685 01d2 083A     		subs	r2, r2, #8
 678:./shy_fft.h   ****         {
 1686              		.loc 3 678 51 is_stmt 0 discriminator 2 view .LVU466
 1687 01d4 022B     		cmp	r3, #2
 678:./shy_fft.h   ****         {
 1688              		.loc 3 678 9 discriminator 2 view .LVU467
 1689 01d6 0B93     		str	r3, [sp, #44]
 1690              	.LVL138:
 678:./shy_fft.h   ****         {
 1691              		.loc 3 678 51 is_stmt 1 discriminator 2 view .LVU468
 1692 01d8 0592     		str	r2, [sp, #20]
 1693 01da 7FF42AAF 		bne	.L74
 1694 01de 4146     		mov	r1, r8
 1695              	.LBE325:
 728:./shy_fft.h   ****         {
 1696              		.loc 3 728 9 is_stmt 0 view .LVU469
 1697 01e0 DDE90C32 		ldrd	r3, r2, [sp, #48]
 1698              	.LVL139:
 728:./shy_fft.h   ****         {
 1699              		.loc 3 728 9 view .LVU470
 1700 01e4 9342     		cmp	r3, r2
 1701 01e6 00F0A980 		beq	.L66
 1702              	.LVL140:
 1703              	.L75:
 1704              	.LBB326:
 735:./shy_fft.h   ****         {
 1705              		.loc 3 735 29 is_stmt 1 discriminator 3 view .LVU471
 1706 01ea 079B     		ldr	r3, [sp, #28]
 1707 01ec 002B     		cmp	r3, #0
 1708 01ee 00F09D80 		beq	.L65
 1709 01f2 581E     		subs	r0, r3, #1
 1710 01f4 0D9B     		ldr	r3, [sp, #52]
 1711 01f6 0E9A     		ldr	r2, [sp, #56]
 1712 01f8 03F12001 		add	r1, r3, #32
 1713 01fc C008     		lsrs	r0, r0, #3
 1714 01fe 01EB4011 		add	r1, r1, r0, lsl #5
 1715              	.LVL141:
 1716              	.L78:
 1717              	.LBB327:
 738:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 1718              		.loc 3 738 29 is_stmt 0 discriminator 2 view .LVU472
 1719 0202 93ED047A 		vldr.32	s14, [r3, #16]
 1720 0206 2033     		adds	r3, r3, #32
ARM GAS  /tmp/ccDsoCRY.s 			page 70


 1721 0208 53ED087A 		vldr.32	s15, [r3, #-32]
 1722 020c 2032     		adds	r2, r2, #32
 746:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 1723              		.loc 3 746 34 discriminator 2 view .LVU473
 1724 020e 9FED506A 		vldr.32	s12, .L89
 738:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 1725              		.loc 3 738 29 discriminator 2 view .LVU474
 1726 0212 77EE877A 		vadd.f32	s15, s15, s14
 738:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 1727              		.loc 3 738 13 discriminator 2 view .LVU475
 1728 0216 42ED087A 		vstr.32	s15, [r2, #-32]
 739:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 1729              		.loc 3 739 29 discriminator 2 view .LVU476
 1730 021a 13ED047A 		vldr.32	s14, [r3, #-16]
 1731 021e 53ED087A 		vldr.32	s15, [r3, #-32]
 1732 0222 77EEC77A 		vsub.f32	s15, s15, s14
 739:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 1733              		.loc 3 739 13 discriminator 2 view .LVU477
 1734 0226 42ED047A 		vstr.32	s15, [r2, #-16]
 740:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 1735              		.loc 3 740 33 discriminator 2 view .LVU478
 1736 022a 53ED067A 		vldr.32	s15, [r3, #-24]
 1737 022e 77EEA77A 		vadd.f32	s15, s15, s15
 740:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 1738              		.loc 3 740 13 discriminator 2 view .LVU479
 1739 0232 42ED067A 		vstr.32	s15, [r2, #-24]
 741:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 1740              		.loc 3 741 33 discriminator 2 view .LVU480
 1741 0236 53ED027A 		vldr.32	s15, [r3, #-8]
 1742 023a 77EEA77A 		vadd.f32	s15, s15, s15
 741:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 1743              		.loc 3 741 13 discriminator 2 view .LVU481
 1744 023e 42ED027A 		vstr.32	s15, [r2, #-8]
 742:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 1745              		.loc 3 742 33 discriminator 2 view .LVU482
 1746 0242 13ED057A 		vldr.32	s14, [r3, #-20]
 1747 0246 53ED077A 		vldr.32	s15, [r3, #-28]
 1748 024a 77EE877A 		vadd.f32	s15, s15, s14
 742:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 1749              		.loc 3 742 13 discriminator 2 view .LVU483
 1750 024e 42ED077A 		vstr.32	s15, [r2, #-28]
 743:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 1751              		.loc 3 743 33 discriminator 2 view .LVU484
 1752 0252 13ED017A 		vldr.32	s14, [r3, #-4]
 1753 0256 53ED037A 		vldr.32	s15, [r3, #-12]
 1754 025a 77EEC77A 		vsub.f32	s15, s15, s14
 743:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 1755              		.loc 3 743 13 discriminator 2 view .LVU485
 1756 025e 42ED057A 		vstr.32	s15, [r2, #-20]
 745:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 1757              		.loc 3 745 13 discriminator 2 view .LVU486
 1758 0262 53ED016A 		vldr.32	s13, [r3, #-4]
 744:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 1759              		.loc 3 744 13 discriminator 2 view .LVU487
 1760 0266 13ED077A 		vldr.32	s14, [r3, #-28]
 1761 026a 53ED055A 		vldr.32	s11, [r3, #-20]
 745:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
ARM GAS  /tmp/ccDsoCRY.s 			page 71


 1762              		.loc 3 745 13 discriminator 2 view .LVU488
 1763 026e 53ED037A 		vldr.32	s15, [r3, #-12]
 1764              	.LBE327:
 735:./shy_fft.h   ****         {
 1765              		.loc 3 735 29 discriminator 2 view .LVU489
 1766 0272 9942     		cmp	r1, r3
 1767              	.LBB328:
 744:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 1768              		.loc 3 744 13 discriminator 2 view .LVU490
 1769 0274 37EE657A 		vsub.f32	s14, s14, s11
 1770              	.LVL142:
 745:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 1771              		.loc 3 745 13 discriminator 2 view .LVU491
 1772 0278 77EEA67A 		vadd.f32	s15, s15, s13
 1773              	.LVL143:
 745:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 1774              		.loc 3 745 13 discriminator 2 view .LVU492
 1775              	.LBE328:
 1776              	.LBE326:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 1777              		.loc 3 137 41 is_stmt 1 discriminator 2 view .LVU493
 1778              	.LBB331:
 1779              	.LBB329:
 746:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 1780              		.loc 3 746 28 is_stmt 0 discriminator 2 view .LVU494
 1781 027c 77EE276A 		vadd.f32	s13, s14, s15
 747:./shy_fft.h   ****         }
 1782              		.loc 3 747 28 discriminator 2 view .LVU495
 1783 0280 77EEC77A 		vsub.f32	s15, s15, s14
 1784              	.LVL144:
 746:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 1785              		.loc 3 746 34 discriminator 2 view .LVU496
 1786 0284 26EE867A 		vmul.f32	s14, s13, s12
 1787              	.LVL145:
 747:./shy_fft.h   ****         }
 1788              		.loc 3 747 34 discriminator 2 view .LVU497
 1789 0288 67EE867A 		vmul.f32	s15, s15, s12
 746:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 1790              		.loc 3 746 13 discriminator 2 view .LVU498
 1791 028c 02ED037A 		vstr.32	s14, [r2, #-12]
 1792              	.LVL146:
 746:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 1793              		.loc 3 746 13 discriminator 2 view .LVU499
 1794              	.LBE329:
 1795              	.LBE331:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 1796              		.loc 3 137 41 is_stmt 1 discriminator 2 view .LVU500
 1797              	.LBB332:
 1798              	.LBB330:
 747:./shy_fft.h   ****         }
 1799              		.loc 3 747 13 is_stmt 0 discriminator 2 view .LVU501
 1800 0290 42ED017A 		vstr.32	s15, [r2, #-4]
 1801              	.LBE330:
 735:./shy_fft.h   ****         {
 1802              		.loc 3 735 9 is_stmt 1 discriminator 2 view .LVU502
 735:./shy_fft.h   ****         {
 1803              		.loc 3 735 29 discriminator 2 view .LVU503
ARM GAS  /tmp/ccDsoCRY.s 			page 72


 1804 0294 B5D1     		bne	.L78
 1805              	.LBE332:
 1806              	.LBB333:
 1807              	.LBB334:
 757:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 1808              		.loc 3 757 43 is_stmt 0 view .LVU504
 1809 0296 079B     		ldr	r3, [sp, #28]
 757:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 1810              		.loc 3 757 32 view .LVU505
 1811 0298 0021     		movs	r1, #0
 1812 029a 1B9A     		ldr	r2, [sp, #108]
 757:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 1813              		.loc 3 757 43 view .LVU506
 1814 029c 9C08     		lsrs	r4, r3, #2
 757:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 1815              		.loc 3 757 32 view .LVU507
 1816 029e 9E46     		mov	lr, r3
 1817 02a0 C2F11005 		rsb	r5, r2, #16
 1818 02a4 0E9A     		ldr	r2, [sp, #56]
 1819 02a6 6600     		lsls	r6, r4, #1
 1820 02a8 0D9F     		ldr	r7, [sp, #52]
 1821 02aa 1032     		adds	r2, r2, #16
 1822 02ac DDF83CC0 		ldr	ip, [sp, #60]
 1823              	.L80:
 1824              	.LVL147:
 761:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 1825              		.loc 3 761 29 discriminator 2 view .LVU508
 1826 02b0 12ED026A 		vldr.32	s12, [r2, #-8]
 755:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 1827              		.loc 3 755 37 discriminator 2 view .LVU509
 1828 02b4 C8B2     		uxtb	r0, r1
 761:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 1829              		.loc 3 761 22 discriminator 2 view .LVU510
 1830 02b6 52ED047A 		vldr.32	s15, [r2, #-16]
 755:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 1831              		.loc 3 755 63 discriminator 2 view .LVU511
 1832 02ba 0B0A     		lsrs	r3, r1, #8
 755:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 1833              		.loc 3 755 45 discriminator 2 view .LVU512
 1834 02bc 1CF80000 		ldrb	r0, [ip, r0]	@ zero_extendqisi2
 766:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 1835              		.loc 3 766 25 discriminator 2 view .LVU513
 1836 02c0 F0EE006A 		vmov.f32	s13, #2.0e+0
 761:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 1837              		.loc 3 761 15 discriminator 2 view .LVU514
 1838 02c4 37EE867A 		vadd.f32	s14, s15, s12
 755:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 1839              		.loc 3 755 51 discriminator 2 view .LVU515
 1840 02c8 1CF80330 		ldrb	r3, [ip, r3]	@ zero_extendqisi2
 762:./shy_fft.h   ****             T b_1 = s[1] * T(2);
 1841              		.loc 3 762 15 discriminator 2 view .LVU516
 1842 02cc 77EEC67A 		vsub.f32	s15, s15, s12
 763:./shy_fft.h   ****             T b_3 = s[3] * T(2);
 1843              		.loc 3 763 22 discriminator 2 view .LVU517
 1844 02d0 52ED035A 		vldr.32	s11, [r2, #-12]
 755:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 1845              		.loc 3 755 51 discriminator 2 view .LVU518
ARM GAS  /tmp/ccDsoCRY.s 			page 73


 1846 02d4 43EA0023 		orr	r3, r3, r0, lsl #8
 764:./shy_fft.h   **** 
 1847              		.loc 3 764 22 discriminator 2 view .LVU519
 1848 02d8 12ED016A 		vldr.32	s12, [r2, #-4]
 766:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 1849              		.loc 3 766 25 discriminator 2 view .LVU520
 1850 02dc B0EE475A 		vmov.f32	s10, s14
 1851              	.LBE334:
 753:./shy_fft.h   ****         {
 1852              		.loc 3 753 9 discriminator 2 view .LVU521
 1853 02e0 0431     		adds	r1, r1, #4
 1854              	.LVL148:
 1855              	.LBB335:
 767:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 1856              		.loc 3 767 25 discriminator 2 view .LVU522
 1857 02e2 A5EEE67A 		vfms.f32	s14, s11, s13
 756:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 1858              		.loc 3 756 25 discriminator 2 view .LVU523
 1859 02e6 2B41     		asrs	r3, r3, r5
 1860              	.LVL149:
 756:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 1861              		.loc 3 756 25 discriminator 2 view .LVU524
 1862              	.LBE335:
 753:./shy_fft.h   ****         {
 1863              		.loc 3 753 29 discriminator 2 view .LVU525
 1864 02e8 8E45     		cmp	lr, r1
 1865 02ea 02F11002 		add	r2, r2, #16
 1866              	.LVL150:
 1867              	.LBB336:
 766:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 1868              		.loc 3 766 25 discriminator 2 view .LVU526
 1869 02ee A5EEA65A 		vfma.f32	s10, s11, s13
 757:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 1870              		.loc 3 757 20 discriminator 2 view .LVU527
 1871 02f2 06EB0300 		add	r0, r6, r3
 1872              	.LVL151:
 768:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 1873              		.loc 3 768 25 discriminator 2 view .LVU528
 1874 02f6 F0EE675A 		vmov.f32	s11, s15
 758:./shy_fft.h   ****             size_t r3 = r0 + 3 * (rt_size >> 2);
 1875              		.loc 3 758 20 discriminator 2 view .LVU529
 1876 02fa 04EB0309 		add	r9, r4, r3
 1877              	.LVL152:
 769:./shy_fft.h   ****             s += 4;
 1878              		.loc 3 769 25 discriminator 2 view .LVU530
 1879 02fe E6EE667A 		vfms.f32	s15, s12, s13
 766:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 1880              		.loc 3 766 14 discriminator 2 view .LVU531
 1881 0302 07EB8303 		add	r3, r7, r3, lsl #2
 1882              	.LVL153:
 759:./shy_fft.h   **** 
 1883              		.loc 3 759 20 discriminator 2 view .LVU532
 1884 0306 04EB0008 		add	r8, r4, r0
 1885              	.LVL154:
 768:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 1886              		.loc 3 768 14 discriminator 2 view .LVU533
 1887 030a 07EB8909 		add	r9, r7, r9, lsl #2
ARM GAS  /tmp/ccDsoCRY.s 			page 74


 1888              	.LVL155:
 768:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 1889              		.loc 3 768 25 discriminator 2 view .LVU534
 1890 030e E6EE265A 		vfma.f32	s11, s12, s13
 1891              	.LVL156:
 767:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 1892              		.loc 3 767 14 discriminator 2 view .LVU535
 1893 0312 07EB8000 		add	r0, r7, r0, lsl #2
 1894              	.LVL157:
 766:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 1895              		.loc 3 766 13 discriminator 2 view .LVU536
 1896 0316 83ED005A 		vstr.32	s10, [r3]
 1897              	.LVL158:
 769:./shy_fft.h   ****             s += 4;
 1898              		.loc 3 769 14 discriminator 2 view .LVU537
 1899 031a 07EB8803 		add	r3, r7, r8, lsl #2
 767:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 1900              		.loc 3 767 13 discriminator 2 view .LVU538
 1901 031e 80ED007A 		vstr.32	s14, [r0]
 768:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 1902              		.loc 3 768 13 discriminator 2 view .LVU539
 1903 0322 C9ED005A 		vstr.32	s11, [r9]
 769:./shy_fft.h   ****             s += 4;
 1904              		.loc 3 769 13 discriminator 2 view .LVU540
 1905 0326 C3ED007A 		vstr.32	s15, [r3]
 1906              	.LVL159:
 769:./shy_fft.h   ****             s += 4;
 1907              		.loc 3 769 13 discriminator 2 view .LVU541
 1908              	.LBE336:
 753:./shy_fft.h   ****         {
 1909              		.loc 3 753 9 is_stmt 1 discriminator 2 view .LVU542
 753:./shy_fft.h   ****         {
 1910              		.loc 3 753 29 discriminator 2 view .LVU543
 1911 032a C1D8     		bhi	.L80
 1912              	.LVL160:
 1913              	.L65:
 753:./shy_fft.h   ****         {
 1914              		.loc 3 753 29 is_stmt 0 discriminator 2 view .LVU544
 1915              	.LBE333:
 772:./shy_fft.h   **** };
 1916              		.loc 3 772 5 view .LVU545
 1917 032c 11B0     		add	sp, sp, #68
 1918              		.cfi_remember_state
 1919              		.cfi_def_cfa_offset 36
 1920              		@ sp needed
 1921 032e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1922              	.LVL161:
 1923              	.L82:
 1924              		.cfi_restore_state
 1925              	.LBB337:
 1926              	.LBB321:
 718:./shy_fft.h   ****             }
 1927              		.loc 3 718 17 view .LVU546
 1928 0332 DDE90D83 		ldrd	r8, r3, [sp, #52]
 1929 0336 0C93     		str	r3, [sp, #48]
 1930              	.LVL162:
 718:./shy_fft.h   ****             }
ARM GAS  /tmp/ccDsoCRY.s 			page 75


 1931              		.loc 3 718 17 view .LVU547
 1932 0338 48E7     		b	.L68
 1933              	.LVL163:
 1934              	.L81:
 718:./shy_fft.h   ****             }
 1935              		.loc 3 718 17 view .LVU548
 1936              	.LBE321:
 1937              	.LBE337:
 671:./shy_fft.h   ****         T*      d = output;
 1938              		.loc 3 671 17 view .LVU549
 1939 033a 0E99     		ldr	r1, [sp, #56]
 1940              	.LVL164:
 1941              	.L66:
 730:./shy_fft.h   ****         }
 1942              		.loc 3 730 32 view .LVU550
 1943 033c 0422     		movs	r2, #4
 1944              	.LVL165:
 1945              	.LBB338:
 1946              	.LBI338:
 465:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 1947              		.loc 2 465 5 is_stmt 1 view .LVU551
 1948              	.LBB339:
 1949              	.LBI339:
 438:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 1950              		.loc 2 438 5 view .LVU552
 1951              	.LBB340:
 1952              	.LBI340:
 393:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 1953              		.loc 2 393 5 view .LVU553
 1954              	.LBB341:
 1955              	.LBB342:
 1956              	.LBI342:
 375:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 1957              		.loc 2 375 2 view .LVU554
 1958              	.LBB343:
 385:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 1959              		.loc 2 385 4 is_stmt 0 view .LVU555
 1960 033e 1B9B     		ldr	r3, [sp, #108]
 1961 0340 9A40     		lsls	r2, r2, r3
 1962              	.LVL166:
 385:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 1963              		.loc 2 385 4 view .LVU556
 1964 0342 3FF452AF 		beq	.L75
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 1965              		.loc 2 386 23 view .LVU557
 1966 0346 0D98     		ldr	r0, [sp, #52]
 1967 0348 FFF7FEFF 		bl	memmove
 1968              	.LVL167:
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 1969              		.loc 2 386 23 view .LVU558
 1970 034c 4DE7     		b	.L75
 1971              	.L90:
 1972 034e 00BF     		.align	2
 1973              	.L89:
 1974 0350 F304353F 		.word	1060439283
 1975              	.LBE343:
 1976              	.LBE342:
ARM GAS  /tmp/ccDsoCRY.s 			page 76


 1977              	.LBE341:
 1978              	.LBE340:
 1979              	.LBE339:
 1980              	.LBE338:
 1981              		.cfi_endproc
 1982              	.LFE4719:
 1984              		.section	.text._ZN4STFT6BufferEv,"ax",%progbits
 1985              		.align	1
 1986              		.p2align 2,,3
 1987              		.global	_ZN4STFT6BufferEv
 1988              		.syntax unified
 1989              		.thumb
 1990              		.thumb_func
 1991              		.fpu fpv5-d16
 1993              	_ZN4STFT6BufferEv:
 1994              	.LVL168:
 1995              	.LFB4291:
 122:dsp/pvoc/stft.cpp **** 
 123:dsp/pvoc/stft.cpp **** void STFT::Buffer()
 124:dsp/pvoc/stft.cpp **** {
 1996              		.loc 1 124 1 is_stmt 1 view -0
 1997              		.cfi_startproc
 1998              		@ args = 0, pretend = 0, frame = 88
 1999              		@ frame_needed = 0, uses_anonymous_args = 0
 125:dsp/pvoc/stft.cpp ****     if(ready_ == done_)
 2000              		.loc 1 125 5 view .LVU560
 2001 0000 026C     		ldr	r2, [r0, #64]
 2002 0002 436C     		ldr	r3, [r0, #68]
 124:dsp/pvoc/stft.cpp ****     if(ready_ == done_)
 2003              		.loc 1 124 1 is_stmt 0 view .LVU561
 2004 0004 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2005              		.cfi_def_cfa_offset 36
 2006              		.cfi_offset 4, -36
 2007              		.cfi_offset 5, -32
 2008              		.cfi_offset 6, -28
 2009              		.cfi_offset 7, -24
 2010              		.cfi_offset 8, -20
 2011              		.cfi_offset 9, -16
 2012              		.cfi_offset 10, -12
 2013              		.cfi_offset 11, -8
 2014              		.cfi_offset 14, -4
 2015              		.loc 1 125 5 view .LVU562
 2016 0008 9A42     		cmp	r2, r3
 124:dsp/pvoc/stft.cpp ****     if(ready_ == done_)
 2017              		.loc 1 124 1 view .LVU563
 2018 000a 99B0     		sub	sp, sp, #100
 2019              		.cfi_def_cfa_offset 136
 124:dsp/pvoc/stft.cpp ****     if(ready_ == done_)
 2020              		.loc 1 124 1 view .LVU564
 2021 000c 1290     		str	r0, [sp, #72]
 2022              		.loc 1 125 5 view .LVU565
 2023 000e 00F0A880 		beq	.L91
 126:dsp/pvoc/stft.cpp ****     {
 127:dsp/pvoc/stft.cpp ****         return;
 128:dsp/pvoc/stft.cpp ****     }
 129:dsp/pvoc/stft.cpp **** 
 130:dsp/pvoc/stft.cpp ****     // Copy block to FFT buffer and apply window.
ARM GAS  /tmp/ccDsoCRY.s 			page 77


 131:dsp/pvoc/stft.cpp ****     size_t       source_ptr = process_ptr_;
 2024              		.loc 1 131 5 is_stmt 1 view .LVU566
 2025              	.LBB409:
 132:dsp/pvoc/stft.cpp ****     const float* w          = window_;
 133:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_; ++i)
 2026              		.loc 1 133 27 is_stmt 0 view .LVU567
 2027 0012 D0F804C0 		ldr	ip, [r0, #4]
 2028              	.LBE409:
 131:dsp/pvoc/stft.cpp ****     const float* w          = window_;
 2029              		.loc 1 131 18 view .LVU568
 2030 0016 836B     		ldr	r3, [r0, #56]
 2031              	.LVL169:
 132:dsp/pvoc/stft.cpp ****     const float* w          = window_;
 2032              		.loc 1 132 5 is_stmt 1 view .LVU569
 132:dsp/pvoc/stft.cpp ****     const float* w          = window_;
 2033              		.loc 1 132 18 is_stmt 0 view .LVU570
 2034 0018 416A     		ldr	r1, [r0, #36]
 2035              	.LVL170:
 2036              		.loc 1 133 5 is_stmt 1 view .LVU571
 2037              	.LBB410:
 2038              		.loc 1 133 25 view .LVU572
 2039 001a BCF1000F 		cmp	ip, #0
 2040 001e 00F0BB83 		beq	.L156
 134:dsp/pvoc/stft.cpp ****     {
 135:dsp/pvoc/stft.cpp ****         fft_in_[i] = w[0] * analysis_[source_ptr];
 2041              		.loc 1 135 9 is_stmt 0 view .LVU573
 2042 0022 129C     		ldr	r4, [sp, #72]
 2043 0024 D4F81490 		ldr	r9, [r4, #20]
 136:dsp/pvoc/stft.cpp ****         ++source_ptr;
 137:dsp/pvoc/stft.cpp ****         if(source_ptr >= buffer_size_)
 138:dsp/pvoc/stft.cpp ****         {
 139:dsp/pvoc/stft.cpp ****             source_ptr -= buffer_size_;
 140:dsp/pvoc/stft.cpp ****         }
 141:dsp/pvoc/stft.cpp ****         w += window_stride_;
 2044              		.loc 1 141 11 view .LVU574
 2045 0028 A56A     		ldr	r5, [r4, #40]
 135:dsp/pvoc/stft.cpp ****         ++source_ptr;
 2046              		.loc 1 135 29 view .LVU575
 2047 002a E66A     		ldr	r6, [r4, #44]
 2048 002c 4A46     		mov	r2, r9
 2049 002e 09EB8C07 		add	r7, r9, ip, lsl #2
 2050              		.loc 1 141 11 view .LVU576
 2051 0032 4846     		mov	r0, r9
 2052              	.LVL171:
 2053              		.loc 1 141 11 view .LVU577
 2054 0034 AD00     		lsls	r5, r5, #2
 137:dsp/pvoc/stft.cpp ****         {
 2055              		.loc 1 137 26 view .LVU578
 2056 0036 2469     		ldr	r4, [r4, #16]
 2057              	.LVL172:
 2058              	.L97:
 135:dsp/pvoc/stft.cpp ****         ++source_ptr;
 2059              		.loc 1 135 9 is_stmt 1 view .LVU579
 139:dsp/pvoc/stft.cpp ****         }
 2060              		.loc 1 139 13 view .LVU580
 135:dsp/pvoc/stft.cpp ****         ++source_ptr;
 2061              		.loc 1 135 27 is_stmt 0 view .LVU581
ARM GAS  /tmp/ccDsoCRY.s 			page 78


 2062 0038 36F913E0 		ldrsh	lr, [r6, r3, lsl #1]
 136:dsp/pvoc/stft.cpp ****         if(source_ptr >= buffer_size_)
 2063              		.loc 1 136 9 view .LVU582
 2064 003c 0133     		adds	r3, r3, #1
 2065              	.LVL173:
 135:dsp/pvoc/stft.cpp ****         ++source_ptr;
 2066              		.loc 1 135 27 view .LVU583
 2067 003e 91ED007A 		vldr.32	s14, [r1]
 2068              		.loc 1 141 11 view .LVU584
 2069 0042 2944     		add	r1, r1, r5
 2070              	.LVL174:
 135:dsp/pvoc/stft.cpp ****         ++source_ptr;
 2071              		.loc 1 135 27 view .LVU585
 2072 0044 07EE90EA 		vmov	s15, lr	@ int
 137:dsp/pvoc/stft.cpp ****         {
 2073              		.loc 1 137 9 view .LVU586
 2074 0048 9C42     		cmp	r4, r3
 135:dsp/pvoc/stft.cpp ****         ++source_ptr;
 2075              		.loc 1 135 27 view .LVU587
 2076 004a F8EEE77A 		vcvt.f32.s32	s15, s15
 139:dsp/pvoc/stft.cpp ****         }
 2077              		.loc 1 139 24 view .LVU588
 2078 004e 98BF     		it	ls
 2079 0050 1B1B     		subls	r3, r3, r4
 2080              	.LVL175:
 135:dsp/pvoc/stft.cpp ****         ++source_ptr;
 2081              		.loc 1 135 27 view .LVU589
 2082 0052 67EE877A 		vmul.f32	s15, s15, s14
 135:dsp/pvoc/stft.cpp ****         ++source_ptr;
 2083              		.loc 1 135 20 view .LVU590
 2084 0056 E0EC017A 		vstmia.32	r0!, {s15}
 136:dsp/pvoc/stft.cpp ****         if(source_ptr >= buffer_size_)
 2085              		.loc 1 136 9 is_stmt 1 view .LVU591
 137:dsp/pvoc/stft.cpp ****         {
 2086              		.loc 1 137 9 view .LVU592
 2087              	.LVL176:
 2088              		.loc 1 141 9 view .LVU593
 133:dsp/pvoc/stft.cpp ****     {
 2089              		.loc 1 133 5 view .LVU594
 133:dsp/pvoc/stft.cpp ****     {
 2090              		.loc 1 133 25 view .LVU595
 2091 005a 8742     		cmp	r7, r0
 2092 005c ECD1     		bne	.L97
 2093              	.LBE410:
 142:dsp/pvoc/stft.cpp ****     }
 143:dsp/pvoc/stft.cpp **** 
 144:dsp/pvoc/stft.cpp ****     // Compute FFT. fft_in is lost.
 145:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 146:dsp/pvoc/stft.cpp ****     arm_rfft_fast_f32(fft_, fft_in_, fft_out_, 0);
 147:dsp/pvoc/stft.cpp ****     copy(&fft_out_[0], &fft_out_[fft_size_], &fft_in_[0]);
 148:dsp/pvoc/stft.cpp ****     // Re-arrange data.
 149:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_ / 2; ++i)
 150:dsp/pvoc/stft.cpp ****     {
 151:dsp/pvoc/stft.cpp ****         fft_out_[i]                 = fft_in_[2 * i];
 152:dsp/pvoc/stft.cpp ****         fft_out_[i + fft_size_ / 2] = fft_in_[2 * i + 1];
 153:dsp/pvoc/stft.cpp ****     }
 154:dsp/pvoc/stft.cpp **** #else
ARM GAS  /tmp/ccDsoCRY.s 			page 79


 155:dsp/pvoc/stft.cpp ****     if(fft_size_ != FFT::max_size)
 2094              		.loc 1 155 5 view .LVU596
 2095 005e BCF5805F 		cmp	ip, #4096
 2096 0062 00F08180 		beq	.L98
 2097              	.L95:
 156:dsp/pvoc/stft.cpp ****     {
 157:dsp/pvoc/stft.cpp ****         fft_->Direct(fft_in_, fft_out_, fft_num_passes_);
 2098              		.loc 1 157 9 view .LVU597
 2099              	.LVL177:
 2100              	.LBB411:
 2101              	.LBI411:
 833:./shy_fft.h   ****         {
 834:./shy_fft.h   ****             uint8_t byte        = 0;
 835:./shy_fft.h   ****             uint8_t source      = i << 2;
 836:./shy_fft.h   ****             uint8_t destination = static_cast<uint8_t>(size >> 1);
 837:./shy_fft.h   ****             while(source)
 838:./shy_fft.h   ****             {
 839:./shy_fft.h   ****                 if(source & 1)
 840:./shy_fft.h   ****                 {
 841:./shy_fft.h   ****                     byte |= destination;
 842:./shy_fft.h   ****                 }
 843:./shy_fft.h   ****                 destination >>= 1;
 844:./shy_fft.h   ****                 source >>= 1;
 845:./shy_fft.h   ****             }
 846:./shy_fft.h   ****             bit_rev_[i] = byte;
 847:./shy_fft.h   ****         }
 848:./shy_fft.h   ****         phasor_.Init();
 849:./shy_fft.h   ****     }
 850:./shy_fft.h   **** 
 851:./shy_fft.h   ****     void Direct(T* input, T* output)
 852:./shy_fft.h   ****     {
 853:./shy_fft.h   ****         DirectTransform<T, num_passes, Phasor<T, num_passes>> d;
 854:./shy_fft.h   ****         d(input,
 855:./shy_fft.h   ****           output,
 856:./shy_fft.h   ****           num_passes <= 8 ? &bit_rev_[0] : bit_rev_256_lut_,
 857:./shy_fft.h   ****           &phasor_);
 858:./shy_fft.h   ****     }
 859:./shy_fft.h   **** 
 860:./shy_fft.h   ****     void Inverse(T* input, T* output)
 861:./shy_fft.h   ****     {
 862:./shy_fft.h   ****         InverseTransform<T, num_passes, Phasor<T, num_passes>> i;
 863:./shy_fft.h   ****         i(input,
 864:./shy_fft.h   ****           output,
 865:./shy_fft.h   ****           num_passes <= 8 ? &bit_rev_[0] : bit_rev_256_lut_,
 866:./shy_fft.h   ****           &phasor_);
 867:./shy_fft.h   ****     }
 868:./shy_fft.h   **** 
 869:./shy_fft.h   ****     void Direct(T* input, T* output, size_t n)
 2102              		.loc 3 869 10 view .LVU598
 2103              	.LBB412:
 870:./shy_fft.h   ****     {
 871:./shy_fft.h   ****         DirectTransform<T, num_passes, Phasor<T, num_passes>> d;
 872:./shy_fft.h   ****         d(input, output, bit_rev_256_lut_, &phasor_, n);
 2104              		.loc 3 872 10 is_stmt 0 view .LVU599
 2105 0066 129C     		ldr	r4, [sp, #72]
 2106 0068 4946     		mov	r1, r9
 2107              	.LVL178:
ARM GAS  /tmp/ccDsoCRY.s 			page 80


 2108              		.loc 3 872 10 view .LVU600
 2109 006a 17A8     		add	r0, sp, #92
 2110 006c A268     		ldr	r2, [r4, #8]
 2111 006e 2368     		ldr	r3, [r4]
 2112              	.LVL179:
 2113              		.loc 3 872 10 view .LVU601
 2114 0070 CDE90032 		strd	r3, r2, [sp]
 2115              	.LVL180:
 2116              		.loc 3 872 10 view .LVU602
 2117 0074 424B     		ldr	r3, .L162
 2118              	.LVL181:
 2119              		.loc 3 872 10 view .LVU603
 2120 0076 A269     		ldr	r2, [r4, #24]
 2121              	.LVL182:
 2122              		.loc 3 872 10 view .LVU604
 2123 0078 FFF7FEFF 		bl	_ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j
 2124              	.LVL183:
 2125              		.loc 3 872 10 view .LVU605
 2126 007c A369     		ldr	r3, [r4, #24]
 2127 007e 0B93     		str	r3, [sp, #44]
 2128              	.L99:
 2129              		.loc 3 872 10 view .LVU606
 2130              	.LBE412:
 2131              	.LBE411:
 158:dsp/pvoc/stft.cpp ****     }
 159:dsp/pvoc/stft.cpp ****     else
 160:dsp/pvoc/stft.cpp ****     {
 161:dsp/pvoc/stft.cpp ****         fft_->Direct(fft_in_, fft_out_);
 162:dsp/pvoc/stft.cpp ****     }
 163:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 164:dsp/pvoc/stft.cpp ****     // Process in the frequency domain.
 165:dsp/pvoc/stft.cpp ****     if(modifier_ != NULL && parameters_ != NULL)
 2132              		.loc 1 165 5 is_stmt 1 view .LVU607
 2133              		.loc 1 165 8 is_stmt 0 view .LVU608
 2134 0080 129B     		ldr	r3, [sp, #72]
 2135 0082 D86C     		ldr	r0, [r3, #76]
 2136              		.loc 1 165 5 view .LVU609
 2137 0084 0028     		cmp	r0, #0
 2138 0086 00F0DD81 		beq	.L107
 2139              	.L127:
 2140              		.loc 1 165 29 discriminator 1 view .LVU610
 2141 008a 129C     		ldr	r4, [sp, #72]
 2142 008c A16C     		ldr	r1, [r4, #72]
 2143              		.loc 1 165 26 discriminator 1 view .LVU611
 2144 008e 0029     		cmp	r1, #0
 2145 0090 00F0D881 		beq	.L107
 166:dsp/pvoc/stft.cpp ****     {
 167:dsp/pvoc/stft.cpp ****         modifier_->Process(*parameters_, &fft_out_[0], &ifft_in_[0]);
 2146              		.loc 1 167 9 is_stmt 1 view .LVU612
 2147              		.loc 1 167 27 is_stmt 0 view .LVU613
 2148 0094 0B9A     		ldr	r2, [sp, #44]
 2149 0096 236A     		ldr	r3, [r4, #32]
 2150 0098 FFF7FEFF 		bl	_ZN19FrameTransformation7ProcessERK10ParametersPfS3_
 2151              	.LVL184:
 2152 009c 6268     		ldr	r2, [r4, #4]
 2153 009e 236A     		ldr	r3, [r4, #32]
 2154 00a0 1392     		str	r2, [sp, #76]
ARM GAS  /tmp/ccDsoCRY.s 			page 81


 2155 00a2 1193     		str	r3, [sp, #68]
 2156              	.L108:
 168:dsp/pvoc/stft.cpp ****     }
 169:dsp/pvoc/stft.cpp ****     else
 170:dsp/pvoc/stft.cpp ****     {
 171:dsp/pvoc/stft.cpp ****         copy(&fft_out_[0], &fft_out_[fft_size_], &ifft_in_[0]);
 172:dsp/pvoc/stft.cpp ****     }
 173:dsp/pvoc/stft.cpp **** 
 174:dsp/pvoc/stft.cpp ****     // Compute IFFT. ifft_in is lost.
 175:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 176:dsp/pvoc/stft.cpp ****     // Re-arrange data.
 177:dsp/pvoc/stft.cpp ****     copy(&ifft_in_[0], &ifft_in_[fft_size_], &ifft_out_[0]);
 178:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_ / 2; ++i)
 179:dsp/pvoc/stft.cpp ****     {
 180:dsp/pvoc/stft.cpp ****         ifft_in_[2 * i]     = ifft_out_[i];
 181:dsp/pvoc/stft.cpp ****         ifft_in_[2 * i + 1] = ifft_out_[i + fft_size_ / 2];
 182:dsp/pvoc/stft.cpp ****     }
 183:dsp/pvoc/stft.cpp ****     arm_rfft_fast_f32(fft_, ifft_in_, ifft_out_, 1);
 184:dsp/pvoc/stft.cpp **** #else
 185:dsp/pvoc/stft.cpp ****     if(fft_size_ != FFT::max_size)
 2157              		.loc 1 185 5 is_stmt 1 view .LVU614
 2158 00a4 139B     		ldr	r3, [sp, #76]
 2159 00a6 B3F5805F 		cmp	r3, #4096
 2160 00aa 00F0E181 		beq	.L109
 2161              	.L159:
 186:dsp/pvoc/stft.cpp ****     {
 187:dsp/pvoc/stft.cpp ****         fft_->Inverse(ifft_in_, ifft_out_, fft_num_passes_);
 2162              		.loc 1 187 9 view .LVU615
 2163              	.LVL185:
 2164              	.LBB413:
 2165              	.LBI413:
 873:./shy_fft.h   ****     }
 874:./shy_fft.h   **** 
 875:./shy_fft.h   ****     void Inverse(T* input, T* output, size_t n)
 2166              		.loc 3 875 10 view .LVU616
 2167              	.LBB414:
 876:./shy_fft.h   ****     {
 877:./shy_fft.h   ****         InverseTransform<T, num_passes, Phasor<T, num_passes>> i;
 878:./shy_fft.h   ****         i(input, output, bit_rev_256_lut_, &phasor_, n);
 2168              		.loc 3 878 10 is_stmt 0 view .LVU617
 2169 00ae 129C     		ldr	r4, [sp, #72]
 2170 00b0 17A8     		add	r0, sp, #92
 2171 00b2 1199     		ldr	r1, [sp, #68]
 2172 00b4 A268     		ldr	r2, [r4, #8]
 2173 00b6 2368     		ldr	r3, [r4]
 2174 00b8 CDE90032 		strd	r3, r2, [sp]
 2175              	.LVL186:
 2176              		.loc 3 878 10 view .LVU618
 2177 00bc 304B     		ldr	r3, .L162
 2178              	.LVL187:
 2179              		.loc 3 878 10 view .LVU619
 2180 00be E269     		ldr	r2, [r4, #28]
 2181              	.LVL188:
 2182              		.loc 3 878 10 view .LVU620
 2183 00c0 FFF7FEFF 		bl	_ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j
 2184              	.LVL189:
 2185              		.loc 3 878 10 view .LVU621
ARM GAS  /tmp/ccDsoCRY.s 			page 82


 2186 00c4 6368     		ldr	r3, [r4, #4]
 2187 00c6 1393     		str	r3, [sp, #76]
 2188              	.L110:
 2189              		.loc 3 878 10 view .LVU622
 2190              	.LBE414:
 2191              	.LBE413:
 188:dsp/pvoc/stft.cpp ****     }
 189:dsp/pvoc/stft.cpp ****     else
 190:dsp/pvoc/stft.cpp ****     {
 191:dsp/pvoc/stft.cpp ****         fft_->Inverse(ifft_in_, ifft_out_);
 192:dsp/pvoc/stft.cpp ****     }
 193:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 194:dsp/pvoc/stft.cpp **** 
 195:dsp/pvoc/stft.cpp ****     size_t destination_ptr = process_ptr_;
 2192              		.loc 1 195 5 is_stmt 1 view .LVU623
 196:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 197:dsp/pvoc/stft.cpp ****     float inverse_window_size = 1.0f / float(fft_size_ / hop_size_ >> 1);
 198:dsp/pvoc/stft.cpp **** #else
 199:dsp/pvoc/stft.cpp ****     float inverse_window_size
 200:dsp/pvoc/stft.cpp ****         = 1.0f / float(fft_size_ * fft_size_ / hop_size_ >> 1);
 2193              		.loc 1 200 34 is_stmt 0 view .LVU624
 2194 00c8 1398     		ldr	r0, [sp, #76]
 199:dsp/pvoc/stft.cpp ****         = 1.0f / float(fft_size_ * fft_size_ / hop_size_ >> 1);
 2195              		.loc 1 199 11 view .LVU625
 2196 00ca B7EE007A 		vmov.f32	s14, #1.0e+0
 2197              		.loc 1 200 48 view .LVU626
 2198 00ce 129A     		ldr	r2, [sp, #72]
 2199              		.loc 1 200 34 view .LVU627
 2200 00d0 0346     		mov	r3, r0
 2201              		.loc 1 200 48 view .LVU628
 2202 00d2 D2F80CE0 		ldr	lr, [r2, #12]
 2203              		.loc 1 200 34 view .LVU629
 2204 00d6 03FB00F3 		mul	r3, r3, r0
 195:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 2205              		.loc 1 195 12 view .LVU630
 2206 00da D2F83880 		ldr	r8, [r2, #56]
 2207              	.LVL190:
 199:dsp/pvoc/stft.cpp ****         = 1.0f / float(fft_size_ * fft_size_ / hop_size_ >> 1);
 2208              		.loc 1 199 5 is_stmt 1 view .LVU631
 201:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 202:dsp/pvoc/stft.cpp **** 
 203:dsp/pvoc/stft.cpp ****     w = window_;
 2209              		.loc 1 203 7 is_stmt 0 view .LVU632
 2210 00de 516A     		ldr	r1, [r2, #36]
 200:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 2211              		.loc 1 200 46 view .LVU633
 2212 00e0 B3FBFEF3 		udiv	r3, r3, lr
 200:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 2213              		.loc 1 200 58 view .LVU634
 2214 00e4 5B08     		lsrs	r3, r3, #1
 200:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 2215              		.loc 1 200 18 view .LVU635
 2216 00e6 07EE903A 		vmov	s15, r3	@ int
 2217 00ea F8EEE77A 		vcvt.f32.s32	s15, s15
 199:dsp/pvoc/stft.cpp ****         = 1.0f / float(fft_size_ * fft_size_ / hop_size_ >> 1);
 2218              		.loc 1 199 11 view .LVU636
 2219 00ee C7EE276A 		vdiv.f32	s13, s14, s15
ARM GAS  /tmp/ccDsoCRY.s 			page 83


 2220              	.LVL191:
 2221              		.loc 1 203 5 is_stmt 1 view .LVU637
 204:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_; ++i)
 2222              		.loc 1 204 5 view .LVU638
 2223              	.LBB415:
 2224              		.loc 1 204 25 view .LVU639
 2225 00f2 0028     		cmp	r0, #0
 2226 00f4 00F05383 		beq	.L118
 2227              	.LBB416:
 205:dsp/pvoc/stft.cpp ****     {
 206:dsp/pvoc/stft.cpp ****         float s = ifft_out_[i] * w[0] * inverse_window_size;
 207:dsp/pvoc/stft.cpp **** 
 208:dsp/pvoc/stft.cpp ****         int32_t x = static_cast<int32_t>(s);
 209:dsp/pvoc/stft.cpp ****         if(i < fft_size_ - hop_size_)
 210:dsp/pvoc/stft.cpp ****         {
 211:dsp/pvoc/stft.cpp ****             // Overlap-add.
 212:dsp/pvoc/stft.cpp ****             x += synthesis_[destination_ptr];
 213:dsp/pvoc/stft.cpp ****         }
 214:dsp/pvoc/stft.cpp ****         synthesis_[destination_ptr] = Clip16(x);
 215:dsp/pvoc/stft.cpp ****         ++destination_ptr;
 216:dsp/pvoc/stft.cpp ****         if(destination_ptr >= buffer_size_)
 217:dsp/pvoc/stft.cpp ****         {
 218:dsp/pvoc/stft.cpp ****             destination_ptr -= buffer_size_;
 219:dsp/pvoc/stft.cpp ****         }
 220:dsp/pvoc/stft.cpp ****         w += window_stride_;
 2228              		.loc 1 220 11 is_stmt 0 view .LVU640
 2229 00f8 976A     		ldr	r7, [r2, #40]
 2230 00fa A0EB0E0C 		sub	ip, r0, lr
 214:dsp/pvoc/stft.cpp ****         ++destination_ptr;
 2231              		.loc 1 214 9 view .LVU641
 2232 00fe 156B     		ldr	r5, [r2, #48]
 2233              	.LBE416:
 2234              	.LBE415:
 195:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 2235              		.loc 1 195 12 view .LVU642
 2236 0100 4346     		mov	r3, r8
 2237              	.LBB421:
 2238              	.LBB417:
 216:dsp/pvoc/stft.cpp ****         {
 2239              		.loc 1 216 31 view .LVU643
 2240 0102 1669     		ldr	r6, [r2, #16]
 2241              		.loc 1 220 11 view .LVU644
 2242 0104 BF00     		lsls	r7, r7, #2
 2243 0106 D469     		ldr	r4, [r2, #28]
 2244              	.LBE417:
 204:dsp/pvoc/stft.cpp ****     {
 2245              		.loc 1 204 16 view .LVU645
 2246 0108 0022     		movs	r2, #0
 2247 010a DDF84CA0 		ldr	r10, [sp, #76]
 2248              	.LVL192:
 2249              	.L123:
 2250              	.LBB418:
 206:dsp/pvoc/stft.cpp **** 
 2251              		.loc 1 206 9 is_stmt 1 view .LVU646
 212:dsp/pvoc/stft.cpp ****         }
 2252              		.loc 1 212 13 view .LVU647
 206:dsp/pvoc/stft.cpp **** 
ARM GAS  /tmp/ccDsoCRY.s 			page 84


 2253              		.loc 1 206 30 is_stmt 0 view .LVU648
 2254 010e F4EC017A 		vldmia.32	r4!, {s15}
 2255              	.LVL193:
 208:dsp/pvoc/stft.cpp ****         if(i < fft_size_ - hop_size_)
 2256              		.loc 1 208 9 is_stmt 1 view .LVU649
 209:dsp/pvoc/stft.cpp ****         {
 2257              		.loc 1 209 9 is_stmt 0 view .LVU650
 2258 0112 6245     		cmp	r2, ip
 206:dsp/pvoc/stft.cpp **** 
 2259              		.loc 1 206 32 view .LVU651
 2260 0114 91ED007A 		vldr.32	s14, [r1]
 212:dsp/pvoc/stft.cpp ****         }
 2261              		.loc 1 212 44 view .LVU652
 2262 0118 05EB4309 		add	r9, r5, r3, lsl #1
 206:dsp/pvoc/stft.cpp **** 
 2263              		.loc 1 206 32 view .LVU653
 2264 011c 67EE877A 		vmul.f32	s15, s15, s14
 2265              	.LVL194:
 206:dsp/pvoc/stft.cpp **** 
 2266              		.loc 1 206 15 view .LVU654
 2267 0120 67EEA67A 		vmul.f32	s15, s15, s13
 2268              	.LVL195:
 208:dsp/pvoc/stft.cpp ****         if(i < fft_size_ - hop_size_)
 2269              		.loc 1 208 17 view .LVU655
 2270 0124 FDEEE77A 		vcvt.s32.f32	s15, s15
 2271              	.LVL196:
 208:dsp/pvoc/stft.cpp ****         if(i < fft_size_ - hop_size_)
 2272              		.loc 1 208 17 view .LVU656
 2273 0128 17EE900A 		vmov	r0, s15	@ int
 2274              	.LVL197:
 209:dsp/pvoc/stft.cpp ****         {
 2275              		.loc 1 209 9 is_stmt 1 view .LVU657
 2276 012c 02D2     		bcs	.L120
 2277              	.LVL198:
 212:dsp/pvoc/stft.cpp ****         }
 2278              		.loc 1 212 44 is_stmt 0 view .LVU658
 2279 012e 35F913B0 		ldrsh	fp, [r5, r3, lsl #1]
 212:dsp/pvoc/stft.cpp ****         }
 2280              		.loc 1 212 15 view .LVU659
 2281 0132 5844     		add	r0, r0, fp
 2282              	.LVL199:
 2283              	.L120:
 214:dsp/pvoc/stft.cpp ****         ++destination_ptr;
 2284              		.loc 1 214 9 is_stmt 1 view .LVU660
 214:dsp/pvoc/stft.cpp ****         ++destination_ptr;
 2285              		.loc 1 214 9 is_stmt 0 view .LVU661
 2286              	.LBE418:
 2287              	.LBE421:
 2288              		.loc 4 102 5 is_stmt 1 view .LVU662
 2289              	.LBB422:
 2290              	.LBB419:
 218:dsp/pvoc/stft.cpp ****         }
 2291              		.loc 1 218 13 view .LVU663
 215:dsp/pvoc/stft.cpp ****         if(destination_ptr >= buffer_size_)
 2292              		.loc 1 215 9 is_stmt 0 view .LVU664
 2293 0134 0133     		adds	r3, r3, #1
 2294              	.LVL200:
ARM GAS  /tmp/ccDsoCRY.s 			page 85


 215:dsp/pvoc/stft.cpp ****         if(destination_ptr >= buffer_size_)
 2295              		.loc 1 215 9 view .LVU665
 2296              	.LBE419:
 204:dsp/pvoc/stft.cpp ****     {
 2297              		.loc 1 204 5 view .LVU666
 2298 0136 0132     		adds	r2, r2, #1
 2299              	.LVL201:
 2300              	.LBB420:
 214:dsp/pvoc/stft.cpp ****         ++destination_ptr;
 2301              		.loc 1 214 37 view .LVU667
 2302 0138 00F30F00 		ssat	r0, #16, r0
 2303              	.LVL202:
 2304              		.loc 1 220 11 view .LVU668
 2305 013c 3944     		add	r1, r1, r7
 2306              	.LVL203:
 216:dsp/pvoc/stft.cpp ****         {
 2307              		.loc 1 216 9 view .LVU669
 2308 013e 9E42     		cmp	r6, r3
 214:dsp/pvoc/stft.cpp ****         ++destination_ptr;
 2309              		.loc 1 214 37 view .LVU670
 2310 0140 A9F80000 		strh	r0, [r9]	@ movhi
 215:dsp/pvoc/stft.cpp ****         if(destination_ptr >= buffer_size_)
 2311              		.loc 1 215 9 is_stmt 1 view .LVU671
 2312              	.LVL204:
 216:dsp/pvoc/stft.cpp ****         {
 2313              		.loc 1 216 9 view .LVU672
 218:dsp/pvoc/stft.cpp ****         }
 2314              		.loc 1 218 29 is_stmt 0 view .LVU673
 2315 0144 98BF     		it	ls
 2316 0146 9B1B     		subls	r3, r3, r6
 2317              	.LVL205:
 2318              		.loc 1 220 9 is_stmt 1 view .LVU674
 2319              		.loc 1 220 9 is_stmt 0 view .LVU675
 2320              	.LBE420:
 204:dsp/pvoc/stft.cpp ****     {
 2321              		.loc 1 204 5 is_stmt 1 view .LVU676
 204:dsp/pvoc/stft.cpp ****     {
 2322              		.loc 1 204 25 view .LVU677
 2323 0148 5245     		cmp	r2, r10
 2324 014a E0D1     		bne	.L123
 2325              	.LVL206:
 2326              	.L122:
 204:dsp/pvoc/stft.cpp ****     {
 2327              		.loc 1 204 25 is_stmt 0 view .LVU678
 2328              	.LBE422:
 221:dsp/pvoc/stft.cpp ****     }
 222:dsp/pvoc/stft.cpp **** 
 223:dsp/pvoc/stft.cpp ****     ++done_;
 2329              		.loc 1 223 5 is_stmt 1 view .LVU679
 2330 014c 1299     		ldr	r1, [sp, #72]
 2331              	.LVL207:
 224:dsp/pvoc/stft.cpp ****     process_ptr_ += hop_size_;
 2332              		.loc 1 224 18 is_stmt 0 view .LVU680
 2333 014e 0EEB0803 		add	r3, lr, r8
 223:dsp/pvoc/stft.cpp ****     process_ptr_ += hop_size_;
 2334              		.loc 1 223 5 view .LVU681
 2335 0152 4A6C     		ldr	r2, [r1, #68]
ARM GAS  /tmp/ccDsoCRY.s 			page 86


 225:dsp/pvoc/stft.cpp ****     if(process_ptr_ >= buffer_size_)
 2336              		.loc 1 225 5 view .LVU682
 2337 0154 B342     		cmp	r3, r6
 223:dsp/pvoc/stft.cpp ****     process_ptr_ += hop_size_;
 2338              		.loc 1 223 5 view .LVU683
 2339 0156 02F10102 		add	r2, r2, #1
 2340 015a 4A64     		str	r2, [r1, #68]
 224:dsp/pvoc/stft.cpp ****     process_ptr_ += hop_size_;
 2341              		.loc 1 224 5 is_stmt 1 view .LVU684
 2342              		.loc 1 225 5 view .LVU685
 2343 015c 80F0FB82 		bcs	.L124
 224:dsp/pvoc/stft.cpp ****     process_ptr_ += hop_size_;
 2344              		.loc 1 224 18 is_stmt 0 view .LVU686
 2345 0160 8B63     		str	r3, [r1, #56]
 2346              	.LVL208:
 2347              	.L91:
 226:dsp/pvoc/stft.cpp ****     {
 227:dsp/pvoc/stft.cpp ****         process_ptr_ -= buffer_size_;
 228:dsp/pvoc/stft.cpp ****     }
 229:dsp/pvoc/stft.cpp **** }
 2348              		.loc 1 229 1 view .LVU687
 2349 0162 19B0     		add	sp, sp, #100
 2350              		.cfi_remember_state
 2351              		.cfi_def_cfa_offset 36
 2352              		@ sp needed
 2353 0164 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2354              	.LVL209:
 2355              	.L98:
 2356              		.cfi_restore_state
 161:dsp/pvoc/stft.cpp ****     }
 2357              		.loc 1 161 9 is_stmt 1 view .LVU688
 161:dsp/pvoc/stft.cpp ****     }
 2358              		.loc 1 161 21 is_stmt 0 view .LVU689
 2359 0168 1298     		ldr	r0, [sp, #72]
 2360 016a 0023     		movs	r3, #0
 2361              	.LVL210:
 161:dsp/pvoc/stft.cpp ****     }
 2362              		.loc 1 161 21 view .LVU690
 2363 016c 8169     		ldr	r1, [r0, #24]
 2364              	.LVL211:
 2365              	.LBB423:
 2366              	.LBB424:
 2367              	.LBB425:
 2368              	.LBB426:
 2369              	.LBB427:
 317:./shy_fft.h   ****         {
 2370              		.loc 3 317 20 view .LVU691
 2371 016e 1C46     		mov	r4, r3
 317:./shy_fft.h   ****         {
 2372              		.loc 3 317 20 view .LVU692
 2373              	.LBE427:
 2374              	.LBE426:
 2375              	.LBE425:
 2376              	.LBE424:
 2377              	.LBE423:
 161:dsp/pvoc/stft.cpp ****     }
 2378              		.loc 1 161 9 view .LVU693
ARM GAS  /tmp/ccDsoCRY.s 			page 87


 2379 0170 D0F80080 		ldr	r8, [r0]
 2380              	.LVL212:
 2381              	.LBB499:
 2382              	.LBI423:
 851:./shy_fft.h   ****     {
 2383              		.loc 3 851 10 is_stmt 1 view .LVU694
 2384              	.LBB493:
 2385              	.LBB487:
 2386              	.LBI425:
 309:./shy_fft.h   ****     {
 2387              		.loc 3 309 10 view .LVU695
 2388              	.LBB481:
 2389              	.LBB431:
 317:./shy_fft.h   ****         {
 2390              		.loc 3 317 29 view .LVU696
 2391              	.LBE431:
 2392              	.LBE481:
 2393              	.LBE487:
 2394              	.LBE493:
 2395              	.LBE499:
 161:dsp/pvoc/stft.cpp ****     }
 2396              		.loc 1 161 21 is_stmt 0 view .LVU697
 2397 0174 1591     		str	r1, [sp, #84]
 2398 0176 01F11000 		add	r0, r1, #16
 2399 017a 1946     		mov	r1, r3
 2400              	.LVL213:
 161:dsp/pvoc/stft.cpp ****     }
 2401              		.loc 1 161 21 view .LVU698
 2402 017c 05E0     		b	.L101
 2403              	.L163:
 2404 017e 00BF     		.align	2
 2405              	.L162:
 2406 0180 00000000 		.word	_ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E
 2407              	.LVL214:
 2408              	.L157:
 161:dsp/pvoc/stft.cpp ****     }
 2409              		.loc 1 161 21 view .LVU699
 2410 0184 B95D     		ldrb	r1, [r7, r6]	@ zero_extendqisi2
 2411 0186 1EF80630 		ldrb	r3, [lr, r6]	@ zero_extendqisi2
 2412              	.LVL215:
 2413              	.L101:
 2414              	.LBB500:
 2415              	.LBB494:
 2416              	.LBB488:
 2417              	.LBB482:
 2418              	.LBB432:
 2419              	.LBB428:
 322:./shy_fft.h   ****                                   >> (16 - num_passes);
 2420              		.loc 3 322 57 view .LVU700
 2421 018a 43EA0123 		orr	r3, r3, r1, lsl #8
 2422              	.LVL216:
 322:./shy_fft.h   ****                                   >> (16 - num_passes);
 2423              		.loc 3 322 57 view .LVU701
 2424              	.LBE428:
 317:./shy_fft.h   ****         {
 2425              		.loc 3 317 9 view .LVU702
 2426 018e 0434     		adds	r4, r4, #4
ARM GAS  /tmp/ccDsoCRY.s 			page 88


 2427              	.LVL217:
 317:./shy_fft.h   ****         {
 2428              		.loc 3 317 9 view .LVU703
 2429 0190 AA4E     		ldr	r6, .L164
 2430 0192 1030     		adds	r0, r0, #16
 2431              	.LVL218:
 2432              	.LBB429:
 323:./shy_fft.h   ****             size_t r1 = r0 + 2 * (size >> 2);
 2433              		.loc 3 323 35 view .LVU704
 2434 0194 1B11     		asrs	r3, r3, #4
 2435              	.LBE429:
 317:./shy_fft.h   ****         {
 2436              		.loc 3 317 29 view .LVU705
 2437 0196 B4F5805F 		cmp	r4, #4096
 2438 019a E7B2     		uxtb	r7, r4
 2439              	.LBB430:
 328:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 2440              		.loc 3 328 21 view .LVU706
 2441 019c 4FEA8301 		lsl	r1, r3, #2
 328:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 2442              		.loc 3 328 21 view .LVU707
 2443 01a0 09EB8303 		add	r3, r9, r3, lsl #2
 328:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 2444              		.loc 3 328 29 view .LVU708
 2445 01a4 01F5005C 		add	ip, r1, #8192
 329:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 2446              		.loc 3 329 21 view .LVU709
 2447 01a8 01F58055 		add	r5, r1, #4096
 328:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 2448              		.loc 3 328 26 view .LVU710
 2449 01ac D3ED007A 		vldr.32	s15, [r3]
 329:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 2450              		.loc 3 329 29 view .LVU711
 2451 01b0 01F54051 		add	r1, r1, #12288
 328:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 2452              		.loc 3 328 29 view .LVU712
 2453 01b4 CC44     		add	ip, ip, r9
 329:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 2454              		.loc 3 329 21 view .LVU713
 2455 01b6 4D44     		add	r5, r5, r9
 329:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 2456              		.loc 3 329 29 view .LVU714
 2457 01b8 4944     		add	r1, r1, r9
 2458 01ba 4FEA142E 		lsr	lr, r4, #8
 328:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 2459              		.loc 3 328 26 view .LVU715
 2460 01be 9CED007A 		vldr.32	s14, [ip]
 2461 01c2 77EEC77A 		vsub.f32	s15, s15, s14
 328:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 2462              		.loc 3 328 13 view .LVU716
 2463 01c6 40ED077A 		vstr.32	s15, [r0, #-28]
 329:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 2464              		.loc 3 329 26 view .LVU717
 2465 01ca 91ED007A 		vldr.32	s14, [r1]
 2466 01ce D5ED007A 		vldr.32	s15, [r5]
 2467 01d2 77EEC77A 		vsub.f32	s15, s15, s14
 329:./shy_fft.h   ****             T a  = s[r0] + s[r1];
ARM GAS  /tmp/ccDsoCRY.s 			page 89


 2468              		.loc 3 329 13 view .LVU718
 2469 01d6 40ED057A 		vstr.32	s15, [r0, #-20]
 331:./shy_fft.h   ****             d[0] = a + b;
 2470              		.loc 3 331 15 view .LVU719
 2471 01da D1ED006A 		vldr.32	s13, [r1]
 330:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 2472              		.loc 3 330 15 view .LVU720
 2473 01de D3ED007A 		vldr.32	s15, [r3]
 2474 01e2 9CED006A 		vldr.32	s12, [ip]
 331:./shy_fft.h   ****             d[0] = a + b;
 2475              		.loc 3 331 15 view .LVU721
 2476 01e6 95ED007A 		vldr.32	s14, [r5]
 330:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 2477              		.loc 3 330 15 view .LVU722
 2478 01ea 77EE867A 		vadd.f32	s15, s15, s12
 2479              	.LVL219:
 331:./shy_fft.h   ****             d[0] = a + b;
 2480              		.loc 3 331 15 view .LVU723
 2481 01ee 37EE267A 		vadd.f32	s14, s14, s13
 2482              	.LVL220:
 332:./shy_fft.h   ****             d[2] = a - b;
 2483              		.loc 3 332 22 view .LVU724
 2484 01f2 77EE876A 		vadd.f32	s13, s15, s14
 333:./shy_fft.h   ****             d += 4;
 2485              		.loc 3 333 22 view .LVU725
 2486 01f6 77EEC77A 		vsub.f32	s15, s15, s14
 2487              	.LVL221:
 332:./shy_fft.h   ****             d[2] = a - b;
 2488              		.loc 3 332 13 view .LVU726
 2489 01fa 40ED086A 		vstr.32	s13, [r0, #-32]
 2490              	.LVL222:
 333:./shy_fft.h   ****             d += 4;
 2491              		.loc 3 333 13 view .LVU727
 2492 01fe 40ED067A 		vstr.32	s15, [r0, #-24]
 2493              	.LVL223:
 333:./shy_fft.h   ****             d += 4;
 2494              		.loc 3 333 13 view .LVU728
 2495              	.LBE430:
 317:./shy_fft.h   ****         {
 2496              		.loc 3 317 9 is_stmt 1 view .LVU729
 317:./shy_fft.h   ****         {
 2497              		.loc 3 317 29 view .LVU730
 2498 0202 BFD1     		bne	.L157
 2499 0204 1599     		ldr	r1, [sp, #84]
 2500 0206 0B46     		mov	r3, r1
 2501 0208 01F58040 		add	r0, r1, #16384
 2502              	.LVL224:
 2503              	.L102:
 317:./shy_fft.h   ****         {
 2504              		.loc 3 317 29 is_stmt 0 view .LVU731
 2505              	.LBE432:
 2506              	.LBB433:
 2507              	.LBB434:
 344:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 2508              		.loc 3 344 29 view .LVU732
 2509 020c D3ED046A 		vldr.32	s13, [r3, #16]
 2510 0210 2033     		adds	r3, r3, #32
ARM GAS  /tmp/ccDsoCRY.s 			page 90


 2511 0212 13ED087A 		vldr.32	s14, [r3, #-32]
 2512 0216 2032     		adds	r2, r2, #32
 350:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 2513              		.loc 3 350 33 view .LVU733
 2514 0218 DFED897A 		vldr.32	s15, .L164+4
 344:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 2515              		.loc 3 344 29 view .LVU734
 2516 021c 37EE267A 		vadd.f32	s14, s14, s13
 344:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 2517              		.loc 3 344 13 view .LVU735
 2518 0220 02ED087A 		vstr.32	s14, [r2, #-32]
 345:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 2519              		.loc 3 345 29 view .LVU736
 2520 0224 53ED046A 		vldr.32	s13, [r3, #-16]
 2521 0228 13ED087A 		vldr.32	s14, [r3, #-32]
 2522 022c 37EE667A 		vsub.f32	s14, s14, s13
 345:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 2523              		.loc 3 345 13 view .LVU737
 2524 0230 02ED047A 		vstr.32	s14, [r2, #-16]
 346:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 2525              		.loc 3 346 25 view .LVU738
 2526 0234 53F8181C 		ldr	r1, [r3, #-24]	@ float
 346:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 2527              		.loc 3 346 13 view .LVU739
 2528 0238 42F8181C 		str	r1, [r2, #-24]	@ float
 347:./shy_fft.h   **** 
 2529              		.loc 3 347 25 view .LVU740
 2530 023c 53F8081C 		ldr	r1, [r3, #-8]	@ float
 347:./shy_fft.h   **** 
 2531              		.loc 3 347 13 view .LVU741
 2532 0240 42F8081C 		str	r1, [r2, #-8]	@ float
 349:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 2533              		.loc 3 349 34 view .LVU742
 2534 0244 13ED016A 		vldr.32	s12, [r3, #-4]
 2535 0248 13ED037A 		vldr.32	s14, [r3, #-12]
 350:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 2536              		.loc 3 350 33 view .LVU743
 2537 024c 53ED076A 		vldr.32	s13, [r3, #-28]
 349:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 2538              		.loc 3 349 34 view .LVU744
 2539 0250 37EE467A 		vsub.f32	s14, s14, s12
 2540              	.LVL225:
 349:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 2541              		.loc 3 349 34 view .LVU745
 2542              	.LBE434:
 2543              	.LBE433:
 2544              	.LBE482:
 2545              	.LBE488:
 2546              	.LBE494:
 2547              	.LBE500:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 2548              		.loc 3 137 41 is_stmt 1 view .LVU746
 2549              	.LBB501:
 2550              	.LBB495:
 2551              	.LBB489:
 2552              	.LBB483:
 2553              	.LBB438:
ARM GAS  /tmp/ccDsoCRY.s 			page 91


 2554              	.LBB435:
 350:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 2555              		.loc 3 350 33 is_stmt 0 view .LVU747
 2556 0254 E7EE276A 		vfma.f32	s13, s14, s15
 350:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 2557              		.loc 3 350 13 view .LVU748
 2558 0258 42ED076A 		vstr.32	s13, [r2, #-28]
 351:./shy_fft.h   **** 
 2559              		.loc 3 351 33 view .LVU749
 2560 025c 53ED076A 		vldr.32	s13, [r3, #-28]
 2561 0260 E7EE676A 		vfms.f32	s13, s14, s15
 351:./shy_fft.h   **** 
 2562              		.loc 3 351 13 view .LVU750
 2563 0264 42ED056A 		vstr.32	s13, [r2, #-20]
 353:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 2564              		.loc 3 353 34 view .LVU751
 2565 0268 13ED037A 		vldr.32	s14, [r3, #-12]
 2566              	.LVL226:
 353:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 2567              		.loc 3 353 34 view .LVU752
 2568 026c 13ED016A 		vldr.32	s12, [r3, #-4]
 354:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 2569              		.loc 3 354 26 view .LVU753
 2570 0270 53ED056A 		vldr.32	s13, [r3, #-20]
 353:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 2571              		.loc 3 353 34 view .LVU754
 2572 0274 37EE067A 		vadd.f32	s14, s14, s12
 2573              	.LVL227:
 353:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 2574              		.loc 3 353 34 view .LVU755
 2575              	.LBE435:
 2576              	.LBE438:
 2577              	.LBE483:
 2578              	.LBE489:
 2579              	.LBE495:
 2580              	.LBE501:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 2581              		.loc 3 137 41 is_stmt 1 view .LVU756
 2582              	.LBB502:
 2583              	.LBB496:
 2584              	.LBB490:
 2585              	.LBB484:
 2586              	.LBB439:
 2587              	.LBB436:
 354:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 2588              		.loc 3 354 26 is_stmt 0 view .LVU757
 2589 0278 E7EE276A 		vfma.f32	s13, s14, s15
 354:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 2590              		.loc 3 354 13 view .LVU758
 2591 027c 42ED036A 		vstr.32	s13, [r2, #-12]
 355:./shy_fft.h   ****         }
 2592              		.loc 3 355 26 view .LVU759
 2593 0280 53ED056A 		vldr.32	s13, [r3, #-20]
 2594              	.LBE436:
 340:./shy_fft.h   ****         {
 2595              		.loc 3 340 29 view .LVU760
 2596 0284 9842     		cmp	r0, r3
ARM GAS  /tmp/ccDsoCRY.s 			page 92


 2597              	.LBB437:
 355:./shy_fft.h   ****         }
 2598              		.loc 3 355 26 view .LVU761
 2599 0286 D7EE276A 		vfnms.f32	s13, s14, s15
 355:./shy_fft.h   ****         }
 2600              		.loc 3 355 13 view .LVU762
 2601 028a 42ED016A 		vstr.32	s13, [r2, #-4]
 2602              	.LBE437:
 340:./shy_fft.h   ****         {
 2603              		.loc 3 340 9 is_stmt 1 view .LVU763
 340:./shy_fft.h   ****         {
 2604              		.loc 3 340 29 view .LVU764
 2605 028e BDD1     		bne	.L102
 2606 0290 08F10403 		add	r3, r8, #4
 2607 0294 CDF83080 		str	r8, [sp, #48]
 2608 0298 0D93     		str	r3, [sp, #52]
 2609              	.LBE439:
 2610              	.LBE484:
 2611              	.LBE490:
 2612              	.LBE496:
 2613              	.LBE502:
 161:dsp/pvoc/stft.cpp ****     }
 2614              		.loc 1 161 21 is_stmt 0 view .LVU765
 2615 029a 159B     		ldr	r3, [sp, #84]
 2616 029c 0B93     		str	r3, [sp, #44]
 2617              	.LBB503:
 2618              	.LBB497:
 2619              	.LBB491:
 2620              	.LBB485:
 2621              	.LBB440:
 359:./shy_fft.h   ****         {
 2622              		.loc 3 359 20 view .LVU766
 2623 029e 0323     		movs	r3, #3
 2624 02a0 CDE91339 		strd	r3, r9, [sp, #76]
 2625              	.LVL228:
 2626              	.L105:
 359:./shy_fft.h   ****         {
 2627              		.loc 3 359 20 view .LVU767
 2628 02a4 149F     		ldr	r7, [sp, #80]
 2629              	.LBB441:
 2630              	.LBB442:
 2631              	.LBB443:
 374:./shy_fft.h   ****                 T* dr  = d + i;
 2632              		.loc 3 374 30 view .LVU768
 2633 02a6 0422     		movs	r2, #4
 2634 02a8 0B9E     		ldr	r6, [sp, #44]
 2635              	.LBE443:
 2636              	.LBE442:
 368:./shy_fft.h   ****             size_t n_2 = n >> 1;
 2637              		.loc 3 368 28 view .LVU769
 2638 02aa 0123     		movs	r3, #1
 2639 02ac 1398     		ldr	r0, [sp, #76]
 2640 02ae B918     		adds	r1, r7, r2
 2641 02b0 06EB020E 		add	lr, r6, r2
 2642 02b4 8340     		lsls	r3, r3, r0
 2643              	.LVL229:
 2644              	.LBB472:
ARM GAS  /tmp/ccDsoCRY.s 			page 93


 371:./shy_fft.h   ****             {
 2645              		.loc 3 371 33 is_stmt 1 view .LVU770
 2646              	.LBB469:
 374:./shy_fft.h   ****                 T* dr  = d + i;
 2647              		.loc 3 374 30 is_stmt 0 view .LVU771
 2648 02b6 8240     		lsls	r2, r2, r0
 2649              	.LBE469:
 371:./shy_fft.h   ****             {
 2650              		.loc 3 371 24 view .LVU772
 2651 02b8 0020     		movs	r0, #0
 2652              	.LBE472:
 369:./shy_fft.h   **** 
 2653              		.loc 3 369 20 view .LVU773
 2654 02ba 5D08     		lsrs	r5, r3, #1
 2655              	.LVL230:
 369:./shy_fft.h   **** 
 2656              		.loc 3 369 20 view .LVU774
 2657 02bc 06EB020A 		add	r10, r6, r2
 2658 02c0 5400     		lsls	r4, r2, #1
 2659              	.LBB473:
 371:./shy_fft.h   ****             {
 2660              		.loc 3 371 24 view .LVU775
 2661 02c2 0690     		str	r0, [sp, #24]
 2662              	.LBB470:
 380:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 2663              		.loc 3 380 30 view .LVU776
 2664 02c4 AE00     		lsls	r6, r5, #2
 2665 02c6 101D     		adds	r0, r2, #4
 2666 02c8 043C     		subs	r4, r4, #4
 374:./shy_fft.h   ****                 T* dr  = d + i;
 2667              		.loc 3 374 30 view .LVU777
 2668 02ca 0E92     		str	r2, [sp, #56]
 2669 02cc A6F1040C 		sub	ip, r6, #4
 2670 02d0 3A18     		adds	r2, r7, r0
 2671 02d2 1094     		str	r4, [sp, #64]
 2672 02d4 00EB8500 		add	r0, r0, r5, lsl #2
 2673 02d8 341D     		adds	r4, r6, #4
 2674 02da 0B9E     		ldr	r6, [sp, #44]
 2675 02dc 07EB0009 		add	r9, r7, r0
 2676 02e0 CDF844C0 		str	ip, [sp, #68]
 2677 02e4 06EB8500 		add	r0, r6, r5, lsl #2
 2678 02e8 07EB040B 		add	fp, r7, r4
 2679 02ec 0390     		str	r0, [sp, #12]
 2680              	.LBE470:
 371:./shy_fft.h   ****             {
 2681              		.loc 3 371 49 view .LVU778
 2682 02ee 5800     		lsls	r0, r3, #1
 2683 02f0 DB00     		lsls	r3, r3, #3
 2684              	.LVL231:
 371:./shy_fft.h   ****             {
 2685              		.loc 3 371 49 view .LVU779
 2686 02f2 0F90     		str	r0, [sp, #60]
 2687              	.LVL232:
 2688              	.L104:
 2689              	.LBB471:
 378:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 2690              		.loc 3 378 34 view .LVU780
ARM GAS  /tmp/ccDsoCRY.s 			page 94


 2691 02f4 12ED017A 		vldr.32	s14, [r2, #-4]
 379:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 2692              		.loc 3 379 17 view .LVU781
 2693 02f8 5046     		mov	r0, r10
 378:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 2694              		.loc 3 378 34 view .LVU782
 2695 02fa 51ED017A 		vldr.32	s15, [r1, #-4]
 2696              	.LBB444:
 2697              	.LBB445:
 251:./shy_fft.h   ****     }
 2698              		.loc 3 251 9 view .LVU783
 2699 02fe DC46     		mov	ip, fp
 2700 0300 109E     		ldr	r6, [sp, #64]
 2701 0302 0F46     		mov	r7, r1
 2702              	.LBE445:
 2703              	.LBE444:
 378:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 2704              		.loc 3 378 34 view .LVU784
 2705 0304 77EE877A 		vadd.f32	s15, s15, s14
 381:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 2706              		.loc 3 381 17 view .LVU785
 2707 0308 039C     		ldr	r4, [sp, #12]
 2708 030a 7644     		add	r6, r6, lr
 2709 030c 0E9D     		ldr	r5, [sp, #56]
 2710              	.LBB452:
 2711              	.LBB446:
 251:./shy_fft.h   ****     }
 2712              		.loc 3 251 9 view .LVU786
 2713 030e CDF814A0 		str	r10, [sp, #20]
 2714              	.LBE446:
 2715              	.LBE452:
 378:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 2716              		.loc 3 378 17 view .LVU787
 2717 0312 4EED017A 		vstr.32	s15, [lr, #-4]
 381:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 2718              		.loc 3 381 17 view .LVU788
 2719 0316 6519     		adds	r5, r4, r5
 379:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 2720              		.loc 3 379 34 view .LVU789
 2721 0318 51ED017A 		vldr.32	s15, [r1, #-4]
 2722 031c 12ED017A 		vldr.32	s14, [r2, #-4]
 2723 0320 0496     		str	r6, [sp, #16]
 2724 0322 77EEC77A 		vsub.f32	s15, s15, s14
 2725 0326 119E     		ldr	r6, [sp, #68]
 2726              	.LBB453:
 2727              	.LBB447:
 251:./shy_fft.h   ****     }
 2728              		.loc 3 251 9 view .LVU790
 2729 0328 CDF81CE0 		str	lr, [sp, #28]
 2730 032c 1644     		add	r6, r6, r2
 2731 032e 0892     		str	r2, [sp, #32]
 2732              	.LBE447:
 2733              	.LBE453:
 379:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 2734              		.loc 3 379 17 view .LVU791
 2735 0330 E0EC017A 		vstmia.32	r0!, {s15}
 380:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
ARM GAS  /tmp/ccDsoCRY.s 			page 95


 2736              		.loc 3 380 30 view .LVU792
 2737 0334 5BED017A 		vldr.32	s15, [fp, #-4]
 2738 0338 0996     		str	r6, [sp, #36]
 2739              	.LBB454:
 2740              	.LBB448:
 251:./shy_fft.h   ****     }
 2741              		.loc 3 251 9 view .LVU793
 2742 033a 4E46     		mov	r6, r9
 2743              	.LBE448:
 2744              	.LBE454:
 380:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 2745              		.loc 3 380 17 view .LVU794
 2746 033c C4ED007A 		vstr.32	s15, [r4]
 2747              	.LBB455:
 2748              	.LBB449:
 250:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 2749              		.loc 3 250 36 view .LVU795
 2750 0340 0D9C     		ldr	r4, [sp, #52]
 2751              	.LBE449:
 2752              	.LBE455:
 381:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 2753              		.loc 3 381 30 view .LVU796
 2754 0342 59ED017A 		vldr.32	s15, [r9, #-4]
 2755              	.LBB456:
 2756              	.LBB450:
 251:./shy_fft.h   ****     }
 2757              		.loc 3 251 9 view .LVU797
 2758 0346 0A93     		str	r3, [sp, #40]
 2759              	.LBE450:
 2760              	.LBE456:
 381:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 2761              		.loc 3 381 17 view .LVU798
 2762 0348 C5ED007A 		vstr.32	s15, [r5]
 2763              	.LVL233:
 2764              	.LBB457:
 2765              	.LBI444:
 247:./shy_fft.h   ****     {
 2766              		.loc 3 247 17 is_stmt 1 view .LVU799
 2767              	.LBB451:
 251:./shy_fft.h   ****     }
 2768              		.loc 3 251 9 is_stmt 0 view .LVU800
 2769 034c 5D46     		mov	r5, fp
 250:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 2770              		.loc 3 250 36 view .LVU801
 2771 034e 54ED017A 		vldr.32	s15, [r4, #-4]
 251:./shy_fft.h   ****     }
 2772              		.loc 3 251 9 view .LVU802
 2773 0352 F346     		mov	fp, lr
 2774              	.LVL234:
 251:./shy_fft.h   ****     }
 2775              		.loc 3 251 36 view .LVU803
 2776 0354 0C9C     		ldr	r4, [sp, #48]
 250:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 2777              		.loc 3 250 9 view .LVU804
 2778 0356 C8ED147A 		vstr.32	s15, [r8, #80]
 2779 035a C8ED127A 		vstr.32	s15, [r8, #72]
 251:./shy_fft.h   ****     }
ARM GAS  /tmp/ccDsoCRY.s 			page 96


 2780              		.loc 3 251 36 view .LVU805
 2781 035e D4ED016A 		vldr.32	s13, [r4, #4]
 251:./shy_fft.h   ****     }
 2782              		.loc 3 251 9 view .LVU806
 2783 0362 1446     		mov	r4, r2
 2784 0364 C8ED156A 		vstr.32	s13, [r8, #84]
 2785 0368 C8ED136A 		vstr.32	s13, [r8, #76]
 2786              	.LVL235:
 251:./shy_fft.h   ****     }
 2787              		.loc 3 251 9 view .LVU807
 2788              	.LBE451:
 2789              	.LBE457:
 2790              	.LBB458:
 385:./shy_fft.h   ****                 {
 2791              		.loc 3 385 37 is_stmt 1 view .LVU808
 2792              	.L103:
 2793              	.LBB459:
 391:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 2794              		.loc 3 391 46 is_stmt 0 view .LVU809
 2795 036c 96ED007A 		vldr.32	s14, [r6]
 391:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 2796              		.loc 3 391 33 view .LVU810
 2797 0370 D4ED005A 		vldr.32	s11, [r4]
 391:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 2798              		.loc 3 391 21 view .LVU811
 2799 0374 26EEC77A 		vnmul.f32	s14, s13, s14
 392:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 2800              		.loc 3 392 33 view .LVU812
 2801 0378 97ED006A 		vldr.32	s12, [r7]
 393:./shy_fft.h   **** 
 2802              		.loc 3 393 21 view .LVU813
 2803 037c 059B     		ldr	r3, [sp, #20]
 391:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 2804              		.loc 3 391 21 view .LVU814
 2805 037e A5EEA77A 		vfma.f32	s14, s11, s15
 2806              	.LVL236:
 392:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 2807              		.loc 3 392 37 view .LVU815
 2808 0382 37EE066A 		vadd.f32	s12, s14, s12
 392:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 2809              		.loc 3 392 21 view .LVU816
 2810 0386 ABEC016A 		vstmia.32	fp!, {s12}
 2811              	.LVL237:
 393:./shy_fft.h   **** 
 2812              		.loc 3 393 37 view .LVU817
 2813 038a B7EC016A 		vldmia.32	r7!, {s12}
 2814 038e 36EE477A 		vsub.f32	s14, s12, s14
 2815              	.LVL238:
 393:./shy_fft.h   **** 
 2816              		.loc 3 393 21 view .LVU818
 2817 0392 23ED017A 		vstmdb.32	r3!, {s14}
 395:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 2818              		.loc 3 395 53 view .LVU819
 2819 0396 B6EC017A 		vldmia.32	r6!, {s14}
 395:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 2820              		.loc 3 395 21 view .LVU820
 2821 039a B4EC016A 		vldmia.32	r4!, {s12}
ARM GAS  /tmp/ccDsoCRY.s 			page 97


 395:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 2822              		.loc 3 395 53 view .LVU821
 2823 039e 67EE877A 		vmul.f32	s15, s15, s14
 396:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 2824              		.loc 3 396 40 view .LVU822
 2825 03a2 9CED007A 		vldr.32	s14, [ip]
 393:./shy_fft.h   **** 
 2826              		.loc 3 393 21 view .LVU823
 2827 03a6 0593     		str	r3, [sp, #20]
 397:./shy_fft.h   ****                     phasor->Rotate();
 2828              		.loc 3 397 21 view .LVU824
 2829 03a8 049B     		ldr	r3, [sp, #16]
 395:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 2830              		.loc 3 395 21 view .LVU825
 2831 03aa E6EE267A 		vfma.f32	s15, s12, s13
 2832              	.LVL239:
 396:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 2833              		.loc 3 396 35 view .LVU826
 2834 03ae 37EE877A 		vadd.f32	s14, s15, s14
 396:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 2835              		.loc 3 396 21 view .LVU827
 2836 03b2 A0EC017A 		vstmia.32	r0!, {s14}
 397:./shy_fft.h   ****                     phasor->Rotate();
 2837              		.loc 3 397 35 view .LVU828
 2838 03b6 BCEC017A 		vldmia.32	ip!, {s14}
 2839 03ba 77EEC77A 		vsub.f32	s15, s15, s14
 2840              	.LVL240:
 397:./shy_fft.h   ****                     phasor->Rotate();
 2841              		.loc 3 397 21 view .LVU829
 2842 03be 63ED017A 		vstmdb.32	r3!, {s15}
 2843              	.LBB460:
 2844              	.LBB461:
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 2845              		.loc 3 256 33 view .LVU830
 2846 03c2 D8ED137A 		vldr.32	s15, [r8, #76]
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 2847              		.loc 3 256 25 view .LVU831
 2848 03c6 98ED147A 		vldr.32	s14, [r8, #80]
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 2849              		.loc 3 256 40 view .LVU832
 2850 03ca D8ED155A 		vldr.32	s11, [r8, #84]
 257:./shy_fft.h   ****         cos_   = temp;
 2851              		.loc 3 257 38 view .LVU833
 2852 03ce 67EE276A 		vmul.f32	s13, s14, s15
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 2853              		.loc 3 256 18 view .LVU834
 2854 03d2 98ED126A 		vldr.32	s12, [r8, #72]
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 2855              		.loc 3 256 11 view .LVU835
 2856 03d6 65EEE77A 		vnmul.f32	s15, s11, s15
 2857              	.LBE461:
 2858              	.LBE460:
 397:./shy_fft.h   ****                     phasor->Rotate();
 2859              		.loc 3 397 21 view .LVU836
 2860 03da 0493     		str	r3, [sp, #16]
 2861              	.LVL241:
 2862              	.LBB464:
ARM GAS  /tmp/ccDsoCRY.s 			page 98


 2863              	.LBI460:
 254:./shy_fft.h   ****     {
 2864              		.loc 3 254 17 is_stmt 1 view .LVU837
 2865              	.LBE464:
 2866              	.LBE459:
 385:./shy_fft.h   ****                 {
 2867              		.loc 3 385 37 is_stmt 0 view .LVU838
 2868 03dc 099B     		ldr	r3, [sp, #36]
 2869              	.LBB467:
 2870              	.LBB465:
 2871              	.LBB462:
 257:./shy_fft.h   ****         cos_   = temp;
 2872              		.loc 3 257 31 view .LVU839
 2873 03de E6EE256A 		vfma.f32	s13, s12, s11
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 2874              		.loc 3 256 11 view .LVU840
 2875 03e2 E6EE077A 		vfma.f32	s15, s12, s14
 2876              	.LVL242:
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 2877              		.loc 3 256 11 view .LVU841
 2878              	.LBE462:
 2879              	.LBE465:
 2880              	.LBE467:
 385:./shy_fft.h   ****                 {
 2881              		.loc 3 385 37 view .LVU842
 2882 03e6 9C42     		cmp	r4, r3
 2883              	.LBB468:
 2884              	.LBB466:
 2885              	.LBB463:
 257:./shy_fft.h   ****         cos_   = temp;
 2886              		.loc 3 257 9 view .LVU843
 2887 03e8 C8ED136A 		vstr.32	s13, [r8, #76]
 258:./shy_fft.h   ****     }
 2888              		.loc 3 258 9 view .LVU844
 2889 03ec C8ED127A 		vstr.32	s15, [r8, #72]
 2890              	.LVL243:
 258:./shy_fft.h   ****     }
 2891              		.loc 3 258 9 view .LVU845
 2892              	.LBE463:
 2893              	.LBE466:
 2894              	.LBE468:
 385:./shy_fft.h   ****                 {
 2895              		.loc 3 385 17 is_stmt 1 view .LVU846
 385:./shy_fft.h   ****                 {
 2896              		.loc 3 385 37 view .LVU847
 2897 03f0 BCD1     		bne	.L103
 2898              	.LBE458:
 2899              	.LBE471:
 371:./shy_fft.h   ****             {
 2900              		.loc 3 371 13 is_stmt 0 view .LVU848
 2901 03f2 0698     		ldr	r0, [sp, #24]
 2902 03f4 AB46     		mov	fp, r5
 2903 03f6 0F9C     		ldr	r4, [sp, #60]
 2904 03f8 0A9B     		ldr	r3, [sp, #40]
 371:./shy_fft.h   ****             {
 2905              		.loc 3 371 13 is_stmt 1 view .LVU849
 2906 03fa 2044     		add	r0, r0, r4
ARM GAS  /tmp/ccDsoCRY.s 			page 99


 2907 03fc 039C     		ldr	r4, [sp, #12]
 2908 03fe 9A44     		add	r10, r10, r3
 2909              	.LVL244:
 371:./shy_fft.h   ****             {
 2910              		.loc 3 371 13 is_stmt 0 view .LVU850
 2911 0400 1A44     		add	r2, r2, r3
 2912              	.LVL245:
 371:./shy_fft.h   ****             {
 2913              		.loc 3 371 13 view .LVU851
 2914 0402 1C44     		add	r4, r4, r3
 371:./shy_fft.h   ****             {
 2915              		.loc 3 371 33 view .LVU852
 2916 0404 B0F5805F 		cmp	r0, #4096
 2917 0408 9944     		add	r9, r9, r3
 2918 040a 1944     		add	r1, r1, r3
 2919              	.LVL246:
 371:./shy_fft.h   ****             {
 2920              		.loc 3 371 33 view .LVU853
 2921 040c 9E44     		add	lr, lr, r3
 2922              	.LVL247:
 371:./shy_fft.h   ****             {
 2923              		.loc 3 371 33 view .LVU854
 2924 040e 9B44     		add	fp, fp, r3
 371:./shy_fft.h   ****             {
 2925              		.loc 3 371 13 view .LVU855
 2926 0410 0690     		str	r0, [sp, #24]
 2927              	.LVL248:
 371:./shy_fft.h   ****             {
 2928              		.loc 3 371 33 is_stmt 1 view .LVU856
 2929 0412 0394     		str	r4, [sp, #12]
 2930 0414 FFF46EAF 		bcc	.L104
 2931              	.LBE473:
 2932              	.LBE441:
 359:./shy_fft.h   ****         {
 2933              		.loc 3 359 9 view .LVU857
 2934 0418 0C9A     		ldr	r2, [sp, #48]
 2935 041a 139B     		ldr	r3, [sp, #76]
 2936 041c 0832     		adds	r2, r2, #8
 2937 041e 0133     		adds	r3, r3, #1
 2938 0420 0C92     		str	r2, [sp, #48]
 2939 0422 0D9A     		ldr	r2, [sp, #52]
 359:./shy_fft.h   ****         {
 2940              		.loc 3 359 35 is_stmt 0 view .LVU858
 2941 0424 0C2B     		cmp	r3, #12
 359:./shy_fft.h   ****         {
 2942              		.loc 3 359 9 view .LVU859
 2943 0426 1393     		str	r3, [sp, #76]
 2944              	.LVL249:
 359:./shy_fft.h   ****         {
 2945              		.loc 3 359 35 is_stmt 1 view .LVU860
 2946 0428 02F10802 		add	r2, r2, #8
 2947 042c 0D92     		str	r2, [sp, #52]
 2948 042e 00F09C81 		beq	.L158
 2949 0432 149B     		ldr	r3, [sp, #80]
 2950              	.LVL250:
 359:./shy_fft.h   ****         {
 2951              		.loc 3 359 35 is_stmt 0 view .LVU861
ARM GAS  /tmp/ccDsoCRY.s 			page 100


 2952 0434 0B9A     		ldr	r2, [sp, #44]
 2953 0436 0B93     		str	r3, [sp, #44]
 2954              	.LVL251:
 359:./shy_fft.h   ****         {
 2955              		.loc 3 359 35 view .LVU862
 2956 0438 1492     		str	r2, [sp, #80]
 2957              	.LVL252:
 359:./shy_fft.h   ****         {
 2958              		.loc 3 359 35 view .LVU863
 2959 043a 33E7     		b	.L105
 2960              	.L165:
 2961              		.align	2
 2962              	.L164:
 2963 043c 00000000 		.word	_ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E
 2964 0440 F304353F 		.word	1060439283
 2965              	.LVL253:
 2966              	.L107:
 359:./shy_fft.h   ****         {
 2967              		.loc 3 359 35 view .LVU864
 2968              	.LBE440:
 2969              	.LBE485:
 2970              	.LBE491:
 2971              	.LBE497:
 2972              	.LBE503:
 171:dsp/pvoc/stft.cpp ****     }
 2973              		.loc 1 171 9 is_stmt 1 view .LVU865
 171:dsp/pvoc/stft.cpp ****     }
 2974              		.loc 1 171 38 is_stmt 0 view .LVU866
 2975 0444 129A     		ldr	r2, [sp, #72]
 2976 0446 5368     		ldr	r3, [r2, #4]
 171:dsp/pvoc/stft.cpp ****     }
 2977              		.loc 1 171 51 view .LVU867
 2978 0448 126A     		ldr	r2, [r2, #32]
 171:dsp/pvoc/stft.cpp ****     }
 2979              		.loc 1 171 38 view .LVU868
 2980 044a 1393     		str	r3, [sp, #76]
 171:dsp/pvoc/stft.cpp ****     }
 2981              		.loc 1 171 51 view .LVU869
 2982 044c 1192     		str	r2, [sp, #68]
 2983              	.LVL254:
 2984              	.LBB504:
 2985              	.LBI504:
 465:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 2986              		.loc 2 465 5 is_stmt 1 view .LVU870
 2987              	.LBB505:
 2988              	.LBI505:
 438:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 2989              		.loc 2 438 5 view .LVU871
 2990              	.LBB506:
 2991              	.LBI506:
 393:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 2992              		.loc 2 393 5 view .LVU872
 2993              	.LBB507:
 2994              	.LBB508:
 2995              	.LBI508:
 375:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 2996              		.loc 2 375 2 view .LVU873
ARM GAS  /tmp/ccDsoCRY.s 			page 101


 2997              	.LBB509:
 385:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 2998              		.loc 2 385 4 is_stmt 0 view .LVU874
 2999 044e 9A00     		lsls	r2, r3, #2
 3000              	.LVL255:
 385:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 3001              		.loc 2 385 4 view .LVU875
 3002 0450 3FF428AE 		beq	.L108
 3003              	.LVL256:
 3004              	.L126:
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 3005              		.loc 2 386 23 view .LVU876
 3006 0454 0B99     		ldr	r1, [sp, #44]
 3007 0456 1198     		ldr	r0, [sp, #68]
 3008 0458 FFF7FEFF 		bl	memmove
 3009              	.LVL257:
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 3010              		.loc 2 386 23 view .LVU877
 3011 045c 129B     		ldr	r3, [sp, #72]
 3012 045e 5A68     		ldr	r2, [r3, #4]
 3013 0460 1B6A     		ldr	r3, [r3, #32]
 3014 0462 1392     		str	r2, [sp, #76]
 3015 0464 1193     		str	r3, [sp, #68]
 3016              	.LVL258:
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 3017              		.loc 2 386 23 view .LVU878
 3018              	.LBE509:
 3019              	.LBE508:
 3020              	.LBE507:
 3021              	.LBE506:
 3022              	.LBE505:
 3023              	.LBE504:
 185:dsp/pvoc/stft.cpp ****     {
 3024              		.loc 1 185 5 is_stmt 1 view .LVU879
 3025 0466 139B     		ldr	r3, [sp, #76]
 3026 0468 B3F5805F 		cmp	r3, #4096
 3027 046c 7FF41FAE 		bne	.L159
 3028              	.LVL259:
 3029              	.L109:
 191:dsp/pvoc/stft.cpp ****     }
 3030              		.loc 1 191 9 view .LVU880
 3031 0470 129B     		ldr	r3, [sp, #72]
 3032              	.LBB514:
 3033              	.LBB515:
 3034              	.LBB516:
 3035              	.LBB517:
 562:./shy_fft.h   ****         T*      d = output;
 3036              		.loc 3 562 17 is_stmt 0 view .LVU881
 3037 0472 1199     		ldr	r1, [sp, #68]
 3038              	.LBE517:
 3039              	.LBE516:
 3040              	.LBE515:
 3041              	.LBE514:
 191:dsp/pvoc/stft.cpp ****     }
 3042              		.loc 1 191 22 view .LVU882
 3043 0474 D3F81CB0 		ldr	fp, [r3, #28]
 191:dsp/pvoc/stft.cpp ****     }
ARM GAS  /tmp/ccDsoCRY.s 			page 102


 3044              		.loc 1 191 9 view .LVU883
 3045 0478 D3F800C0 		ldr	ip, [r3]
 3046              	.LVL260:
 3047              	.LBB587:
 3048              	.LBI514:
 860:./shy_fft.h   ****     {
 3049              		.loc 3 860 10 is_stmt 1 view .LVU884
 3050              	.LBB581:
 3051              	.LBB575:
 3052              	.LBI516:
 560:./shy_fft.h   ****     {
 3053              		.loc 3 560 10 view .LVU885
 3054              	.LBB569:
 3055              	.LBB518:
 567:./shy_fft.h   ****         {
 3056              		.loc 3 567 48 view .LVU886
 567:./shy_fft.h   ****         {
 3057              		.loc 3 567 20 is_stmt 0 view .LVU887
 3058 047c 0B23     		movs	r3, #11
 3059              	.LVL261:
 567:./shy_fft.h   ****         {
 3060              		.loc 3 567 20 view .LVU888
 3061              	.LBE518:
 3062              	.LBE569:
 3063              	.LBE575:
 3064              	.LBE581:
 3065              	.LBE587:
 191:dsp/pvoc/stft.cpp ****     }
 3066              		.loc 1 191 22 view .LVU889
 3067 047e CDF83CB0 		str	fp, [sp, #60]
 3068 0482 CDF850B0 		str	fp, [sp, #80]
 3069 0486 E346     		mov	fp, ip
 3070              	.LVL262:
 3071              	.LBB588:
 3072              	.LBB582:
 3073              	.LBB576:
 3074              	.LBB570:
 3075              	.LBB549:
 567:./shy_fft.h   ****         {
 3076              		.loc 3 567 20 view .LVU890
 3077 0488 1093     		str	r3, [sp, #64]
 3078              	.LVL263:
 3079              	.L114:
 567:./shy_fft.h   ****         {
 3080              		.loc 3 567 20 view .LVU891
 3081 048a 0F9E     		ldr	r6, [sp, #60]
 3082              	.LBB519:
 3083              	.LBB520:
 3084              	.LBB521:
 575:./shy_fft.h   ****                 T* d1r = d + i;
 3085              		.loc 3 575 29 view .LVU892
 3086 048c 0422     		movs	r2, #4
 3087              	.LBE521:
 3088              	.LBE520:
 569:./shy_fft.h   ****             size_t n_2 = n >> 1;
 3089              		.loc 3 569 28 view .LVU893
 3090 048e 0123     		movs	r3, #1
ARM GAS  /tmp/ccDsoCRY.s 			page 103


 3091 0490 B018     		adds	r0, r6, r2
 3092 0492 0390     		str	r0, [sp, #12]
 3093 0494 1098     		ldr	r0, [sp, #64]
 3094 0496 8340     		lsls	r3, r3, r0
 3095              	.LVL264:
 3096              	.LBB546:
 572:./shy_fft.h   ****             {
 3097              		.loc 3 572 33 is_stmt 1 view .LVU894
 3098              	.LBB544:
 575:./shy_fft.h   ****                 T* d1r = d + i;
 3099              		.loc 3 575 29 is_stmt 0 view .LVU895
 3100 0498 02FA00F0 		lsl	r0, r2, r0
 3101              	.LBE544:
 572:./shy_fft.h   ****             {
 3102              		.loc 3 572 24 view .LVU896
 3103 049c 0022     		movs	r2, #0
 3104 049e 051D     		adds	r5, r0, #4
 572:./shy_fft.h   ****             {
 3105              		.loc 3 572 49 view .LVU897
 3106 04a0 5C00     		lsls	r4, r3, #1
 572:./shy_fft.h   ****             {
 3107              		.loc 3 572 24 view .LVU898
 3108 04a2 0792     		str	r2, [sp, #28]
 3109              	.LBE546:
 570:./shy_fft.h   **** 
 3110              		.loc 3 570 20 view .LVU899
 3111 04a4 5A08     		lsrs	r2, r3, #1
 3112              	.LVL265:
 3113              	.LBB547:
 572:./shy_fft.h   ****             {
 3114              		.loc 3 572 49 view .LVU900
 3115 04a6 0D94     		str	r4, [sp, #52]
 3116 04a8 06EB0509 		add	r9, r6, r5
 3117 04ac 05EB8204 		add	r4, r5, r2, lsl #2
 3118 04b0 0B90     		str	r0, [sp, #44]
 3119              	.LBB545:
 581:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 3120              		.loc 3 581 30 view .LVU901
 3121 04b2 9700     		lsls	r7, r2, #2
 3122 04b4 4819     		adds	r0, r1, r5
 3123 04b6 06EB0408 		add	r8, r6, r4
 3124 04ba 01EB820A 		add	r10, r1, r2, lsl #2
 3125 04be 06EB8204 		add	r4, r6, r2, lsl #2
 3126 04c2 0B9A     		ldr	r2, [sp, #44]
 3127              	.LVL266:
 581:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 3128              		.loc 3 581 30 view .LVU902
 3129 04c4 DB00     		lsls	r3, r3, #3
 3130              	.LVL267:
 581:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 3131              		.loc 3 581 30 view .LVU903
 3132 04c6 0C97     		str	r7, [sp, #48]
 3133 04c8 5200     		lsls	r2, r2, #1
 3134 04ca 0494     		str	r4, [sp, #16]
 3135 04cc 0E92     		str	r2, [sp, #56]
 3136              	.LVL268:
 3137              	.L112:
ARM GAS  /tmp/ccDsoCRY.s 			page 104


 582:./shy_fft.h   **** 
 3138              		.loc 3 582 30 view .LVU904
 3139 04ce 0B9E     		ldr	r6, [sp, #44]
 579:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 3140              		.loc 3 579 34 view .LVU905
 3141 04d0 10ED017A 		vldr.32	s14, [r0, #-4]
 582:./shy_fft.h   **** 
 3142              		.loc 3 582 30 view .LVU906
 3143 04d4 0AEB0602 		add	r2, r10, r6
 579:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 3144              		.loc 3 579 34 view .LVU907
 3145 04d8 D1ED007A 		vldr.32	s15, [r1]
 579:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 3146              		.loc 3 579 17 view .LVU908
 3147 04dc 039D     		ldr	r5, [sp, #12]
 3148 04de 06EB010E 		add	lr, r6, r1
 3149              	.LVL269:
 582:./shy_fft.h   **** 
 3150              		.loc 3 582 30 view .LVU909
 3151 04e2 0A92     		str	r2, [sp, #40]
 579:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 3152              		.loc 3 579 34 view .LVU910
 3153 04e4 77EE877A 		vadd.f32	s15, s15, s14
 3154 04e8 0E9A     		ldr	r2, [sp, #56]
 3155              	.LBB522:
 3156              	.LBB523:
 251:./shy_fft.h   ****     }
 3157              		.loc 3 251 9 view .LVU911
 3158 04ea 0646     		mov	r6, r0
 3159              	.LBE523:
 3160              	.LBE522:
 581:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 3161              		.loc 3 581 17 view .LVU912
 3162 04ec 049C     		ldr	r4, [sp, #16]
 3163 04ee 5718     		adds	r7, r2, r1
 3164 04f0 0C9A     		ldr	r2, [sp, #48]
 579:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 3165              		.loc 3 579 17 view .LVU913
 3166 04f2 45ED017A 		vstr.32	s15, [r5, #-4]
 3167 04f6 0A44     		add	r2, r2, r1
 580:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 3168              		.loc 3 580 34 view .LVU914
 3169 04f8 10ED017A 		vldr.32	s14, [r0, #-4]
 3170 04fc 0892     		str	r2, [sp, #32]
 579:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 3171              		.loc 3 579 17 view .LVU915
 3172 04fe 2A46     		mov	r2, r5
 580:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 3173              		.loc 3 580 34 view .LVU916
 3174 0500 0D46     		mov	r5, r1
 3175              	.LVL270:
 580:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 3176              		.loc 3 580 34 view .LVU917
 3177 0502 F5EC017A 		vldmia.32	r5!, {s15}
 3178 0506 77EEC77A 		vsub.f32	s15, s15, s14
 3179 050a 0995     		str	r5, [sp, #36]
 582:./shy_fft.h   **** 
ARM GAS  /tmp/ccDsoCRY.s 			page 105


 3180              		.loc 3 582 36 view .LVU918
 3181 050c 0A9D     		ldr	r5, [sp, #40]
 3182              	.LBB528:
 3183              	.LBB524:
 251:./shy_fft.h   ****     }
 3184              		.loc 3 251 9 view .LVU919
 3185 050e 0A93     		str	r3, [sp, #40]
 3186              	.LBE524:
 3187              	.LBE528:
 580:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 3188              		.loc 3 580 17 view .LVU920
 3189 0510 49ED017A 		vstr.32	s15, [r9, #-4]
 581:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 3190              		.loc 3 581 36 view .LVU921
 3191 0514 DAED007A 		vldr.32	s15, [r10]
 3192 0518 77EEA77A 		vadd.f32	s15, s15, s15
 3193              	.LBB529:
 3194              	.LBB525:
 251:./shy_fft.h   ****     }
 3195              		.loc 3 251 9 view .LVU922
 3196 051c CDE90589 		strd	r8, r9, [sp, #20]
 3197              	.LBE525:
 3198              	.LBE529:
 581:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 3199              		.loc 3 581 17 view .LVU923
 3200 0520 E4EC017A 		vstmia.32	r4!, {s15}
 582:./shy_fft.h   **** 
 3201              		.loc 3 582 36 view .LVU924
 3202 0524 D5ED007A 		vldr.32	s15, [r5]
 3203 0528 77EEA77A 		vadd.f32	s15, s15, s15
 582:./shy_fft.h   **** 
 3204              		.loc 3 582 17 view .LVU925
 3205 052c 48ED017A 		vstr.32	s15, [r8, #-4]
 3206              	.LVL271:
 3207              	.LBB530:
 3208              	.LBI522:
 247:./shy_fft.h   ****     {
 3209              		.loc 3 247 17 is_stmt 1 view .LVU926
 3210              	.LBB526:
 250:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 3211              		.loc 3 250 36 is_stmt 0 view .LVU927
 3212 0530 DBF84050 		ldr	r5, [fp, #64]	@ float
 250:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 3213              		.loc 3 250 9 view .LVU928
 3214 0534 CCF85050 		str	r5, [ip, #80]	@ float
 3215 0538 CCF84850 		str	r5, [ip, #72]	@ float
 251:./shy_fft.h   ****     }
 3216              		.loc 3 251 36 view .LVU929
 3217 053c DBF84450 		ldr	r5, [fp, #68]	@ float
 251:./shy_fft.h   ****     }
 3218              		.loc 3 251 9 view .LVU930
 3219 0540 CCF85450 		str	r5, [ip, #84]	@ float
 3220 0544 CCF84C50 		str	r5, [ip, #76]	@ float
 3221              	.LVL272:
 251:./shy_fft.h   ****     }
 3222              		.loc 3 251 9 view .LVU931
 3223              	.LBE526:
ARM GAS  /tmp/ccDsoCRY.s 			page 106


 3224              	.LBE530:
 3225              	.LBB531:
 587:./shy_fft.h   ****                 {
 3226              		.loc 3 587 37 is_stmt 1 view .LVU932
 3227              	.LBE531:
 3228              	.LBB542:
 3229              	.LBB527:
 251:./shy_fft.h   ****     }
 3230              		.loc 3 251 9 is_stmt 0 view .LVU933
 3231 0548 5D46     		mov	r5, fp
 3232 054a 9346     		mov	fp, r2
 3233 054c 099A     		ldr	r2, [sp, #36]
 3234              	.LVL273:
 3235              	.L111:
 251:./shy_fft.h   ****     }
 3236              		.loc 3 251 9 view .LVU934
 3237              	.LBE527:
 3238              	.LBE542:
 3239              	.LBB543:
 3240              	.LBB532:
 589:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 3241              		.loc 3 589 32 view .LVU935
 3242 054e 92ED007A 		vldr.32	s14, [r2]
 589:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 3243              		.loc 3 589 36 view .LVU936
 3244 0552 7EED017A 		vldmdb.32	lr!, {s15}
 597:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 3245              		.loc 3 597 21 view .LVU937
 3246 0556 069B     		ldr	r3, [sp, #24]
 589:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 3247              		.loc 3 589 36 view .LVU938
 3248 0558 77EE877A 		vadd.f32	s15, s15, s14
 589:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 3249              		.loc 3 589 21 view .LVU939
 3250 055c EBEC017A 		vstmia.32	fp!, {s15}
 590:./shy_fft.h   **** 
 3251              		.loc 3 590 36 view .LVU940
 3252 0560 37ED017A 		vldmdb.32	r7!, {s14}
 590:./shy_fft.h   **** 
 3253              		.loc 3 590 32 view .LVU941
 3254 0564 D6ED007A 		vldr.32	s15, [r6]
 590:./shy_fft.h   **** 
 3255              		.loc 3 590 36 view .LVU942
 3256 0568 77EEC77A 		vsub.f32	s15, s15, s14
 590:./shy_fft.h   **** 
 3257              		.loc 3 590 21 view .LVU943
 3258 056c E4EC017A 		vstmia.32	r4!, {s15}
 595:./shy_fft.h   **** 
 3259              		.loc 3 595 23 view .LVU944
 3260 0570 D7ED007A 		vldr.32	s15, [r7]
 3261 0574 B6EC017A 		vldmia.32	r6!, {s14}
 594:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 3262              		.loc 3 594 23 view .LVU945
 3263 0578 F2EC016A 		vldmia.32	r2!, {s13}
 3264 057c 9EED006A 		vldr.32	s12, [lr]
 595:./shy_fft.h   **** 
 3265              		.loc 3 595 23 view .LVU946
ARM GAS  /tmp/ccDsoCRY.s 			page 107


 3266 0580 37EE277A 		vadd.f32	s14, s14, s15
 593:./shy_fft.h   ****                     T vr = sr[j] - si[-j];
 3267              		.loc 3 593 23 view .LVU947
 3268 0584 DCED137A 		vldr.32	s15, [ip, #76]
 594:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 3269              		.loc 3 594 23 view .LVU948
 3270 0588 76EEC66A 		vsub.f32	s13, s13, s12
 592:./shy_fft.h   ****                     T s  = phasor->sin();
 3271              		.loc 3 592 23 view .LVU949
 3272 058c DCED125A 		vldr.32	s11, [ip, #72]
 3273              	.LVL274:
 597:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 3274              		.loc 3 597 42 view .LVU950
 3275 0590 27EE876A 		vmul.f32	s12, s15, s14
 598:./shy_fft.h   ****                     phasor->Rotate();
 3276              		.loc 3 598 37 view .LVU951
 3277 0594 66EEE77A 		vnmul.f32	s15, s13, s15
 3278              	.LVL275:
 597:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 3279              		.loc 3 597 37 view .LVU952
 3280 0598 A5EEA66A 		vfma.f32	s12, s11, s13
 598:./shy_fft.h   ****                     phasor->Rotate();
 3281              		.loc 3 598 37 view .LVU953
 3282 059c E5EE877A 		vfma.f32	s15, s11, s14
 597:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 3283              		.loc 3 597 21 view .LVU954
 3284 05a0 A3EC016A 		vstmia.32	r3!, {s12}
 3285              	.LVL276:
 597:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 3286              		.loc 3 597 21 view .LVU955
 3287 05a4 0693     		str	r3, [sp, #24]
 598:./shy_fft.h   ****                     phasor->Rotate();
 3288              		.loc 3 598 21 view .LVU956
 3289 05a6 059B     		ldr	r3, [sp, #20]
 3290 05a8 E3EC017A 		vstmia.32	r3!, {s15}
 3291              	.LBB533:
 3292              	.LBB534:
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 3293              		.loc 3 256 33 view .LVU957
 3294 05ac DCED137A 		vldr.32	s15, [ip, #76]
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 3295              		.loc 3 256 25 view .LVU958
 3296 05b0 DCED146A 		vldr.32	s13, [ip, #80]
 3297              	.LVL277:
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 3298              		.loc 3 256 40 view .LVU959
 3299 05b4 DCED155A 		vldr.32	s11, [ip, #84]
 3300              	.LVL278:
 257:./shy_fft.h   ****         cos_   = temp;
 3301              		.loc 3 257 38 view .LVU960
 3302 05b8 26EEA77A 		vmul.f32	s14, s13, s15
 3303              	.LVL279:
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 3304              		.loc 3 256 18 view .LVU961
 3305 05bc 9CED126A 		vldr.32	s12, [ip, #72]
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 3306              		.loc 3 256 11 view .LVU962
ARM GAS  /tmp/ccDsoCRY.s 			page 108


 3307 05c0 65EEE77A 		vnmul.f32	s15, s11, s15
 3308              	.LBE534:
 3309              	.LBE533:
 598:./shy_fft.h   ****                     phasor->Rotate();
 3310              		.loc 3 598 21 view .LVU963
 3311 05c4 0593     		str	r3, [sp, #20]
 3312              	.LVL280:
 3313              	.LBB537:
 3314              	.LBI533:
 254:./shy_fft.h   ****     {
 3315              		.loc 3 254 17 is_stmt 1 view .LVU964
 3316              	.LBE537:
 3317              	.LBE532:
 587:./shy_fft.h   ****                 {
 3318              		.loc 3 587 37 is_stmt 0 view .LVU965
 3319 05c6 089B     		ldr	r3, [sp, #32]
 3320              	.LBB540:
 3321              	.LBB538:
 3322              	.LBB535:
 257:./shy_fft.h   ****         cos_   = temp;
 3323              		.loc 3 257 31 view .LVU966
 3324 05c8 A6EE257A 		vfma.f32	s14, s12, s11
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 3325              		.loc 3 256 11 view .LVU967
 3326 05cc E6EE267A 		vfma.f32	s15, s12, s13
 3327              	.LVL281:
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 3328              		.loc 3 256 11 view .LVU968
 3329              	.LBE535:
 3330              	.LBE538:
 3331              	.LBE540:
 587:./shy_fft.h   ****                 {
 3332              		.loc 3 587 37 view .LVU969
 3333 05d0 9342     		cmp	r3, r2
 3334              	.LBB541:
 3335              	.LBB539:
 3336              	.LBB536:
 257:./shy_fft.h   ****         cos_   = temp;
 3337              		.loc 3 257 9 view .LVU970
 3338 05d2 8CED137A 		vstr.32	s14, [ip, #76]
 258:./shy_fft.h   ****     }
 3339              		.loc 3 258 9 view .LVU971
 3340 05d6 CCED127A 		vstr.32	s15, [ip, #72]
 3341              	.LVL282:
 258:./shy_fft.h   ****     }
 3342              		.loc 3 258 9 view .LVU972
 3343              	.LBE536:
 3344              	.LBE539:
 3345              	.LBE541:
 587:./shy_fft.h   ****                 {
 3346              		.loc 3 587 17 is_stmt 1 view .LVU973
 587:./shy_fft.h   ****                 {
 3347              		.loc 3 587 37 view .LVU974
 3348 05da B8D1     		bne	.L111
 3349              	.LBE543:
 3350              	.LBE545:
 572:./shy_fft.h   ****             {
ARM GAS  /tmp/ccDsoCRY.s 			page 109


 3351              		.loc 3 572 13 is_stmt 0 view .LVU975
 3352 05dc 079A     		ldr	r2, [sp, #28]
 3353 05de AB46     		mov	fp, r5
 3354 05e0 0D9C     		ldr	r4, [sp, #52]
 3355 05e2 0A9B     		ldr	r3, [sp, #40]
 572:./shy_fft.h   ****             {
 3356              		.loc 3 572 13 is_stmt 1 view .LVU976
 3357 05e4 2244     		add	r2, r2, r4
 3358 05e6 049C     		ldr	r4, [sp, #16]
 3359 05e8 1944     		add	r1, r1, r3
 3360              	.LVL283:
 572:./shy_fft.h   ****             {
 3361              		.loc 3 572 13 is_stmt 0 view .LVU977
 3362 05ea 9A44     		add	r10, r10, r3
 3363 05ec 1C44     		add	r4, r4, r3
 572:./shy_fft.h   ****             {
 3364              		.loc 3 572 33 view .LVU978
 3365 05ee B2F5805F 		cmp	r2, #4096
 3366 05f2 1844     		add	r0, r0, r3
 3367 05f4 9944     		add	r9, r9, r3
 3368              	.LVL284:
 572:./shy_fft.h   ****             {
 3369              		.loc 3 572 33 view .LVU979
 3370 05f6 0494     		str	r4, [sp, #16]
 3371              	.LVL285:
 572:./shy_fft.h   ****             {
 3372              		.loc 3 572 33 view .LVU980
 3373 05f8 9844     		add	r8, r8, r3
 3374 05fa 039C     		ldr	r4, [sp, #12]
 572:./shy_fft.h   ****             {
 3375              		.loc 3 572 13 view .LVU981
 3376 05fc 0792     		str	r2, [sp, #28]
 3377              	.LVL286:
 572:./shy_fft.h   ****             {
 3378              		.loc 3 572 33 is_stmt 1 view .LVU982
 3379 05fe 1C44     		add	r4, r4, r3
 3380 0600 0394     		str	r4, [sp, #12]
 3381              	.LVL287:
 572:./shy_fft.h   ****             {
 3382              		.loc 3 572 33 is_stmt 0 view .LVU983
 3383 0602 FFF464AF 		bcc	.L112
 3384              	.LBE547:
 604:./shy_fft.h   ****             {
 3385              		.loc 3 604 13 view .LVU984
 3386 0606 149B     		ldr	r3, [sp, #80]
 3387 0608 0F99     		ldr	r1, [sp, #60]
 3388 060a 8B42     		cmp	r3, r1
 3389 060c 00F0A980 		beq	.L130
 611:./shy_fft.h   ****                 d = output;
 3390              		.loc 3 611 17 view .LVU985
 3391 0610 1199     		ldr	r1, [sp, #68]
 604:./shy_fft.h   ****             {
 3392              		.loc 3 604 13 view .LVU986
 3393 0612 0F93     		str	r3, [sp, #60]
 3394              	.LVL288:
 3395              	.L113:
 604:./shy_fft.h   ****             {
ARM GAS  /tmp/ccDsoCRY.s 			page 110


 3396              		.loc 3 604 13 view .LVU987
 3397              	.LBE519:
 567:./shy_fft.h   ****         {
 3398              		.loc 3 567 9 is_stmt 1 view .LVU988
 3399 0614 109B     		ldr	r3, [sp, #64]
 3400 0616 ABF1080B 		sub	fp, fp, #8
 3401 061a 013B     		subs	r3, r3, #1
 567:./shy_fft.h   ****         {
 3402              		.loc 3 567 48 is_stmt 0 view .LVU989
 3403 061c 022B     		cmp	r3, #2
 567:./shy_fft.h   ****         {
 3404              		.loc 3 567 9 view .LVU990
 3405 061e 1093     		str	r3, [sp, #64]
 3406              	.LVL289:
 567:./shy_fft.h   ****         {
 3407              		.loc 3 567 48 is_stmt 1 view .LVU991
 3408 0620 7FF433AF 		bne	.L114
 3409 0624 DDF850B0 		ldr	fp, [sp, #80]
 3410              	.LBE549:
 617:./shy_fft.h   ****         {
 3411              		.loc 3 617 9 is_stmt 0 view .LVU992
 3412 0628 0F9B     		ldr	r3, [sp, #60]
 3413              	.LVL290:
 617:./shy_fft.h   ****         {
 3414              		.loc 3 617 9 view .LVU993
 3415 062a 9B45     		cmp	fp, r3
 3416 062c 00F0BA80 		beq	.L160
 3417              	.LVL291:
 3418              	.L115:
 617:./shy_fft.h   ****         {
 3419              		.loc 3 617 9 view .LVU994
 3420 0630 5B46     		mov	r3, fp
 3421 0632 119A     		ldr	r2, [sp, #68]
 3422 0634 0BF58041 		add	r1, fp, #16384
 3423              	.LVL292:
 3424              	.L116:
 3425              	.LBB550:
 3426              	.LBB551:
 627:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 3427              		.loc 3 627 29 view .LVU995
 3428 0638 D3ED047A 		vldr.32	s15, [r3, #16]
 3429 063c 2033     		adds	r3, r3, #32
 3430 063e 13ED087A 		vldr.32	s14, [r3, #-32]
 3431 0642 2032     		adds	r2, r2, #32
 635:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 3432              		.loc 3 635 34 view .LVU996
 3433 0644 1FED826A 		vldr.32	s12, .L164+4
 627:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 3434              		.loc 3 627 29 view .LVU997
 3435 0648 37EE277A 		vadd.f32	s14, s14, s15
 627:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 3436              		.loc 3 627 13 view .LVU998
 3437 064c 02ED087A 		vstr.32	s14, [r2, #-32]
 628:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 3438              		.loc 3 628 29 view .LVU999
 3439 0650 53ED047A 		vldr.32	s15, [r3, #-16]
 3440 0654 13ED087A 		vldr.32	s14, [r3, #-32]
ARM GAS  /tmp/ccDsoCRY.s 			page 111


 3441 0658 37EE677A 		vsub.f32	s14, s14, s15
 628:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 3442              		.loc 3 628 13 view .LVU1000
 3443 065c 02ED047A 		vstr.32	s14, [r2, #-16]
 629:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 3444              		.loc 3 629 33 view .LVU1001
 3445 0660 13ED067A 		vldr.32	s14, [r3, #-24]
 3446 0664 37EE077A 		vadd.f32	s14, s14, s14
 629:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 3447              		.loc 3 629 13 view .LVU1002
 3448 0668 02ED067A 		vstr.32	s14, [r2, #-24]
 630:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 3449              		.loc 3 630 33 view .LVU1003
 3450 066c 13ED027A 		vldr.32	s14, [r3, #-8]
 3451 0670 37EE077A 		vadd.f32	s14, s14, s14
 630:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 3452              		.loc 3 630 13 view .LVU1004
 3453 0674 02ED027A 		vstr.32	s14, [r2, #-8]
 631:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 3454              		.loc 3 631 33 view .LVU1005
 3455 0678 53ED057A 		vldr.32	s15, [r3, #-20]
 3456 067c 13ED077A 		vldr.32	s14, [r3, #-28]
 3457 0680 37EE277A 		vadd.f32	s14, s14, s15
 631:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 3458              		.loc 3 631 13 view .LVU1006
 3459 0684 02ED077A 		vstr.32	s14, [r2, #-28]
 632:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 3460              		.loc 3 632 33 view .LVU1007
 3461 0688 53ED017A 		vldr.32	s15, [r3, #-4]
 3462 068c 13ED037A 		vldr.32	s14, [r3, #-12]
 3463 0690 37EE677A 		vsub.f32	s14, s14, s15
 632:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 3464              		.loc 3 632 13 view .LVU1008
 3465 0694 02ED057A 		vstr.32	s14, [r2, #-20]
 633:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 3466              		.loc 3 633 13 view .LVU1009
 3467 0698 53ED077A 		vldr.32	s15, [r3, #-28]
 634:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 3468              		.loc 3 634 13 view .LVU1010
 3469 069c 13ED037A 		vldr.32	s14, [r3, #-12]
 633:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 3470              		.loc 3 633 13 view .LVU1011
 3471 06a0 53ED056A 		vldr.32	s13, [r3, #-20]
 634:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 3472              		.loc 3 634 13 view .LVU1012
 3473 06a4 53ED015A 		vldr.32	s11, [r3, #-4]
 3474              	.LBE551:
 624:./shy_fft.h   ****         {
 3475              		.loc 3 624 29 view .LVU1013
 3476 06a8 9942     		cmp	r1, r3
 3477              	.LBB552:
 633:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 3478              		.loc 3 633 13 view .LVU1014
 3479 06aa 77EEE66A 		vsub.f32	s13, s15, s13
 3480              	.LVL293:
 634:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 3481              		.loc 3 634 13 view .LVU1015
ARM GAS  /tmp/ccDsoCRY.s 			page 112


 3482 06ae 77EE257A 		vadd.f32	s15, s14, s11
 3483              	.LVL294:
 634:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 3484              		.loc 3 634 13 view .LVU1016
 3485              	.LBE552:
 3486              	.LBE550:
 3487              	.LBE570:
 3488              	.LBE576:
 3489              	.LBE582:
 3490              	.LBE588:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 3491              		.loc 3 137 41 is_stmt 1 view .LVU1017
 3492              	.LBB589:
 3493              	.LBB583:
 3494              	.LBB577:
 3495              	.LBB571:
 3496              	.LBB555:
 3497              	.LBB553:
 635:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 3498              		.loc 3 635 28 is_stmt 0 view .LVU1018
 3499 06b2 36EEA77A 		vadd.f32	s14, s13, s15
 636:./shy_fft.h   ****         }
 3500              		.loc 3 636 28 view .LVU1019
 3501 06b6 77EEE67A 		vsub.f32	s15, s15, s13
 3502              	.LVL295:
 635:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 3503              		.loc 3 635 34 view .LVU1020
 3504 06ba 27EE067A 		vmul.f32	s14, s14, s12
 636:./shy_fft.h   ****         }
 3505              		.loc 3 636 34 view .LVU1021
 3506 06be 67EE867A 		vmul.f32	s15, s15, s12
 635:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 3507              		.loc 3 635 13 view .LVU1022
 3508 06c2 02ED037A 		vstr.32	s14, [r2, #-12]
 3509              	.LVL296:
 635:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 3510              		.loc 3 635 13 view .LVU1023
 3511              	.LBE553:
 3512              	.LBE555:
 3513              	.LBE571:
 3514              	.LBE577:
 3515              	.LBE583:
 3516              	.LBE589:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 3517              		.loc 3 137 41 is_stmt 1 view .LVU1024
 3518              	.LBB590:
 3519              	.LBB584:
 3520              	.LBB578:
 3521              	.LBB572:
 3522              	.LBB556:
 3523              	.LBB554:
 636:./shy_fft.h   ****         }
 3524              		.loc 3 636 13 is_stmt 0 view .LVU1025
 3525 06c6 42ED017A 		vstr.32	s15, [r2, #-4]
 3526              	.LBE554:
 624:./shy_fft.h   ****         {
 3527              		.loc 3 624 9 is_stmt 1 view .LVU1026
ARM GAS  /tmp/ccDsoCRY.s 			page 113


 624:./shy_fft.h   ****         {
 3528              		.loc 3 624 29 view .LVU1027
 3529 06ca B5D1     		bne	.L116
 3530 06cc 0023     		movs	r3, #0
 3531 06ce 1199     		ldr	r1, [sp, #68]
 3532 06d0 1A46     		mov	r2, r3
 3533 06d2 1031     		adds	r1, r1, #16
 3534              	.LBE556:
 3535              	.LBB557:
 642:./shy_fft.h   ****         {
 3536              		.loc 3 642 20 is_stmt 0 view .LVU1028
 3537 06d4 1846     		mov	r0, r3
 3538 06d6 01E0     		b	.L117
 3539              	.LVL297:
 3540              	.L161:
 642:./shy_fft.h   ****         {
 3541              		.loc 3 642 20 view .LVU1029
 3542 06d8 BA5D     		ldrb	r2, [r7, r6]	@ zero_extendqisi2
 3543 06da 9B5D     		ldrb	r3, [r3, r6]	@ zero_extendqisi2
 3544              	.LVL298:
 3545              	.L117:
 3546              	.LBB558:
 652:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 3547              		.loc 3 652 29 view .LVU1030
 3548 06dc 11ED025A 		vldr.32	s10, [r1, #-8]
 657:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 3549              		.loc 3 657 25 view .LVU1031
 3550 06e0 F0EE006A 		vmov.f32	s13, #2.0e+0
 652:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 3551              		.loc 3 652 22 view .LVU1032
 3552 06e4 51ED047A 		vldr.32	s15, [r1, #-16]
 646:./shy_fft.h   ****                                   >> (16 - num_passes);
 3553              		.loc 3 646 57 view .LVU1033
 3554 06e8 43EA0223 		orr	r3, r3, r2, lsl #8
 3555              	.LVL299:
 654:./shy_fft.h   ****             T b_3 = s[3] * T(2);
 3556              		.loc 3 654 22 view .LVU1034
 3557 06ec 51ED035A 		vldr.32	s11, [r1, #-12]
 3558              	.LBE558:
 642:./shy_fft.h   ****         {
 3559              		.loc 3 642 9 view .LVU1035
 3560 06f0 0430     		adds	r0, r0, #4
 3561              	.LVL300:
 3562              	.LBB559:
 652:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 3563              		.loc 3 652 15 view .LVU1036
 3564 06f2 37EE857A 		vadd.f32	s14, s15, s10
 3565              	.LVL301:
 655:./shy_fft.h   **** 
 3566              		.loc 3 655 22 view .LVU1037
 3567 06f6 11ED016A 		vldr.32	s12, [r1, #-4]
 653:./shy_fft.h   ****             T b_1 = s[1] * T(2);
 3568              		.loc 3 653 15 view .LVU1038
 3569 06fa 77EEC57A 		vsub.f32	s15, s15, s10
 3570              	.LVL302:
 647:./shy_fft.h   ****             size_t r1 = r0 + 2 * (size >> 2);
 3571              		.loc 3 647 35 view .LVU1039
ARM GAS  /tmp/ccDsoCRY.s 			page 114


 3572 06fe 1B11     		asrs	r3, r3, #4
 3573              	.LBE559:
 642:./shy_fft.h   ****         {
 3574              		.loc 3 642 29 view .LVU1040
 3575 0700 B0F5805F 		cmp	r0, #4096
 3576 0704 01F11001 		add	r1, r1, #16
 3577              	.LVL303:
 3578              	.LBB560:
 657:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 3579              		.loc 3 657 25 view .LVU1041
 3580 0708 B0EE475A 		vmov.f32	s10, s14
 657:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 3581              		.loc 3 657 14 view .LVU1042
 3582 070c 4FEA8302 		lsl	r2, r3, #2
 658:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 3583              		.loc 3 658 25 view .LVU1043
 3584 0710 A5EEE67A 		vfms.f32	s14, s11, s13
 3585              	.LVL304:
 657:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 3586              		.loc 3 657 14 view .LVU1044
 3587 0714 0BEB8303 		add	r3, fp, r3, lsl #2
 658:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 3588              		.loc 3 658 14 view .LVU1045
 3589 0718 02F50055 		add	r5, r2, #8192
 659:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 3590              		.loc 3 659 14 view .LVU1046
 3591 071c 02F58054 		add	r4, r2, #4096
 657:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 3592              		.loc 3 657 25 view .LVU1047
 3593 0720 A5EEA65A 		vfma.f32	s10, s11, s13
 3594              	.LVL305:
 660:./shy_fft.h   ****             s += 4;
 3595              		.loc 3 660 14 view .LVU1048
 3596 0724 02F54052 		add	r2, r2, #12288
 659:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 3597              		.loc 3 659 25 view .LVU1049
 3598 0728 F0EE675A 		vmov.f32	s11, s15
 3599              	.LVL306:
 658:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 3600              		.loc 3 658 14 view .LVU1050
 3601 072c 5D44     		add	r5, r5, fp
 660:./shy_fft.h   ****             s += 4;
 3602              		.loc 3 660 25 view .LVU1051
 3603 072e E6EE667A 		vfms.f32	s15, s12, s13
 3604              	.LVL307:
 659:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 3605              		.loc 3 659 14 view .LVU1052
 3606 0732 5C44     		add	r4, r4, fp
 660:./shy_fft.h   ****             s += 4;
 3607              		.loc 3 660 14 view .LVU1053
 3608 0734 5A44     		add	r2, r2, fp
 3609 0736 204E     		ldr	r6, .L166
 659:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 3610              		.loc 3 659 25 view .LVU1054
 3611 0738 E6EE265A 		vfma.f32	s11, s12, s13
 3612              	.LVL308:
 659:./shy_fft.h   ****             d[r3] = b_2 - b_3;
ARM GAS  /tmp/ccDsoCRY.s 			page 115


 3613              		.loc 3 659 25 view .LVU1055
 3614 073c C7B2     		uxtb	r7, r0
 657:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 3615              		.loc 3 657 13 view .LVU1056
 3616 073e 83ED005A 		vstr.32	s10, [r3]
 3617              	.LVL309:
 657:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 3618              		.loc 3 657 13 view .LVU1057
 3619 0742 4FEA1023 		lsr	r3, r0, #8
 658:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 3620              		.loc 3 658 13 view .LVU1058
 3621 0746 85ED007A 		vstr.32	s14, [r5]
 659:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 3622              		.loc 3 659 13 view .LVU1059
 3623 074a C4ED005A 		vstr.32	s11, [r4]
 660:./shy_fft.h   ****             s += 4;
 3624              		.loc 3 660 13 view .LVU1060
 3625 074e C2ED007A 		vstr.32	s15, [r2]
 3626              	.LVL310:
 660:./shy_fft.h   ****             s += 4;
 3627              		.loc 3 660 13 view .LVU1061
 3628              	.LBE560:
 642:./shy_fft.h   ****         {
 3629              		.loc 3 642 9 is_stmt 1 view .LVU1062
 642:./shy_fft.h   ****         {
 3630              		.loc 3 642 29 view .LVU1063
 3631 0752 C1D1     		bne	.L161
 3632 0754 B8E4     		b	.L110
 3633              	.LVL311:
 3634              	.L124:
 642:./shy_fft.h   ****         {
 3635              		.loc 3 642 29 is_stmt 0 view .LVU1064
 3636              	.LBE557:
 3637              	.LBE572:
 3638              	.LBE578:
 3639              	.LBE584:
 3640              	.LBE590:
 227:dsp/pvoc/stft.cpp ****     }
 3641              		.loc 1 227 9 is_stmt 1 view .LVU1065
 227:dsp/pvoc/stft.cpp ****     }
 3642              		.loc 1 227 22 is_stmt 0 view .LVU1066
 3643 0756 9E1B     		subs	r6, r3, r6
 3644 0758 129B     		ldr	r3, [sp, #72]
 3645 075a 9E63     		str	r6, [r3, #56]
 3646              		.loc 1 229 1 view .LVU1067
 3647 075c 19B0     		add	sp, sp, #100
 3648              		.cfi_remember_state
 3649              		.cfi_def_cfa_offset 36
 3650              		@ sp needed
 3651 075e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3652              	.LVL312:
 3653              	.L130:
 3654              		.cfi_restore_state
 3655              	.LBB591:
 3656              	.LBB585:
 3657              	.LBB579:
 3658              	.LBB573:
ARM GAS  /tmp/ccDsoCRY.s 			page 116


 3659              	.LBB561:
 3660              	.LBB548:
 607:./shy_fft.h   ****             }
 3661              		.loc 3 607 17 view .LVU1068
 3662 0762 119B     		ldr	r3, [sp, #68]
 3663 0764 1499     		ldr	r1, [sp, #80]
 3664 0766 0F93     		str	r3, [sp, #60]
 3665              	.LVL313:
 607:./shy_fft.h   ****             }
 3666              		.loc 3 607 17 view .LVU1069
 3667 0768 54E7     		b	.L113
 3668              	.LVL314:
 3669              	.L158:
 607:./shy_fft.h   ****             }
 3670              		.loc 3 607 17 view .LVU1070
 3671              	.LBE548:
 3672              	.LBE561:
 3673              	.LBE573:
 3674              	.LBE579:
 3675              	.LBE585:
 3676              	.LBE591:
 3677              	.LBB592:
 3678              	.LBB498:
 3679              	.LBB492:
 3680              	.LBB486:
 404:./shy_fft.h   ****         {
 3681              		.loc 3 404 9 view .LVU1071
 3682 076a 1598     		ldr	r0, [sp, #84]
 3683              	.LVL315:
 404:./shy_fft.h   ****         {
 3684              		.loc 3 404 9 view .LVU1072
 3685 076c 0B99     		ldr	r1, [sp, #44]
 3686 076e 8842     		cmp	r0, r1
 3687 0770 07D0     		beq	.L106
 3688              	.LVL316:
 3689              	.LBB474:
 3690              	.LBI474:
 465:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 3691              		.loc 2 465 5 is_stmt 1 view .LVU1073
 3692              	.LBB475:
 3693              	.LBB476:
 3694              	.LBI476:
 438:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 3695              		.loc 2 438 5 view .LVU1074
 3696              	.LBB477:
 3697              	.LBI477:
 393:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 3698              		.loc 2 393 5 view .LVU1075
 3699              	.LBB478:
 3700              	.LBB479:
 3701              	.LBI479:
 375:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 3702              		.loc 2 375 2 view .LVU1076
 3703              	.LBB480:
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 3704              		.loc 2 386 23 is_stmt 0 view .LVU1077
 3705 0772 4FF48042 		mov	r2, #16384
ARM GAS  /tmp/ccDsoCRY.s 			page 117


 3706 0776 FFF7FEFF 		bl	memmove
 3707              	.LVL317:
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 3708              		.loc 2 386 23 view .LVU1078
 3709 077a 129B     		ldr	r3, [sp, #72]
 3710 077c 9B69     		ldr	r3, [r3, #24]
 3711 077e 0B93     		str	r3, [sp, #44]
 3712              	.LVL318:
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 3713              		.loc 2 386 23 view .LVU1079
 3714              	.LBE480:
 3715              	.LBE479:
 3716              	.LBE478:
 3717              	.LBE477:
 3718              	.LBE476:
 474:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 3719              		.loc 2 474 71 view .LVU1080
 3720 0780 7EE4     		b	.L99
 3721              	.LVL319:
 3722              	.L106:
 474:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 3723              		.loc 2 474 71 view .LVU1081
 3724              	.LBE475:
 3725              	.LBE474:
 3726              	.LBE486:
 3727              	.LBE492:
 3728              	.LBE498:
 3729              	.LBE592:
 165:dsp/pvoc/stft.cpp ****     {
 3730              		.loc 1 165 5 is_stmt 1 view .LVU1082
 165:dsp/pvoc/stft.cpp ****     {
 3731              		.loc 1 165 8 is_stmt 0 view .LVU1083
 3732 0782 129B     		ldr	r3, [sp, #72]
 3733 0784 D86C     		ldr	r0, [r3, #76]
 165:dsp/pvoc/stft.cpp ****     {
 3734              		.loc 1 165 5 view .LVU1084
 3735 0786 0028     		cmp	r0, #0
 3736 0788 7FF47FAC 		bne	.L127
 171:dsp/pvoc/stft.cpp ****     }
 3737              		.loc 1 171 9 is_stmt 1 view .LVU1085
 171:dsp/pvoc/stft.cpp ****     }
 3738              		.loc 1 171 51 is_stmt 0 view .LVU1086
 3739 078c 129B     		ldr	r3, [sp, #72]
 171:dsp/pvoc/stft.cpp ****     }
 3740              		.loc 1 171 47 view .LVU1087
 3741 078e 4FF48042 		mov	r2, #16384
 171:dsp/pvoc/stft.cpp ****     }
 3742              		.loc 1 171 51 view .LVU1088
 3743 0792 1B6A     		ldr	r3, [r3, #32]
 3744 0794 1193     		str	r3, [sp, #68]
 3745              	.LVL320:
 3746              	.LBB593:
 465:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 3747              		.loc 2 465 5 is_stmt 1 view .LVU1089
 3748              	.LBB513:
 438:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 3749              		.loc 2 438 5 view .LVU1090
ARM GAS  /tmp/ccDsoCRY.s 			page 118


 3750              	.LBB512:
 393:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 3751              		.loc 2 393 5 view .LVU1091
 3752              	.LBB511:
 3753              	.LBB510:
 375:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 3754              		.loc 2 375 2 view .LVU1092
 375:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 3755              		.loc 2 375 2 is_stmt 0 view .LVU1093
 3756 0796 5DE6     		b	.L126
 3757              	.LVL321:
 3758              	.L156:
 375:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 3759              		.loc 2 375 2 view .LVU1094
 3760 0798 D0F81490 		ldr	r9, [r0, #20]
 3761 079c 63E4     		b	.L95
 3762              	.LVL322:
 3763              	.L118:
 375:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 3764              		.loc 2 375 2 view .LVU1095
 3765 079e 129B     		ldr	r3, [sp, #72]
 3766 07a0 1E69     		ldr	r6, [r3, #16]
 3767 07a2 D3E4     		b	.L122
 3768              	.LVL323:
 3769              	.L160:
 375:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 3770              		.loc 2 375 2 view .LVU1096
 3771              	.LBE510:
 3772              	.LBE511:
 3773              	.LBE512:
 3774              	.LBE513:
 3775              	.LBE593:
 3776              	.LBB594:
 3777              	.LBB586:
 3778              	.LBB580:
 3779              	.LBB574:
 3780              	.LBB562:
 3781              	.LBI562:
 465:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 3782              		.loc 2 465 5 is_stmt 1 view .LVU1097
 3783              	.LBB563:
 3784              	.LBB564:
 3785              	.LBI564:
 438:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 3786              		.loc 2 438 5 view .LVU1098
 3787              	.LBB565:
 3788              	.LBI565:
 393:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 3789              		.loc 2 393 5 view .LVU1099
 3790              	.LBB566:
 3791              	.LBB567:
 3792              	.LBI567:
 375:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 3793              		.loc 2 375 2 view .LVU1100
 3794              	.LBB568:
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 3795              		.loc 2 386 23 is_stmt 0 view .LVU1101
ARM GAS  /tmp/ccDsoCRY.s 			page 119


 3796 07a4 4FF48042 		mov	r2, #16384
 3797              	.LVL324:
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 3798              		.loc 2 386 23 view .LVU1102
 3799 07a8 5846     		mov	r0, fp
 3800 07aa FFF7FEFF 		bl	memmove
 3801              	.LVL325:
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 3802              		.loc 2 386 23 view .LVU1103
 3803 07ae 129B     		ldr	r3, [sp, #72]
 3804 07b0 5B68     		ldr	r3, [r3, #4]
 3805 07b2 1393     		str	r3, [sp, #76]
 3806              	.LBE568:
 3807              	.LBE567:
 3808              	.LBE566:
 3809              	.LBE565:
 3810              	.LBE564:
 474:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 3811              		.loc 2 474 71 view .LVU1104
 3812 07b4 3CE7     		b	.L115
 3813              	.L167:
 3814 07b6 00BF     		.align	2
 3815              	.L166:
 3816 07b8 00000000 		.word	_ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E
 3817              	.LBE563:
 3818              	.LBE562:
 3819              	.LBE574:
 3820              	.LBE580:
 3821              	.LBE586:
 3822              	.LBE594:
 3823              		.cfi_endproc
 3824              	.LFE4291:
 3826              		.weak	_ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E
 3827              		.section	.rodata._ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E,"aG",%progbits,_ZN6ShyFFT
 3828              		.align	2
 3831              	_ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E:
 3832 0000 008040C0 		.ascii	"\000\200@\300 \240`\340\020\220P\3200\260p\360\010\210"
 3832      20A060E0 
 3832      109050D0 
 3832      30B070F0 
 3832      0888
 3833 0012 48C828A8 		.ascii	"H\310(\250h\350\030\230X\3308\270x\370\004\204D\304"
 3833      68E81898 
 3833      58D838B8 
 3833      78F80484 
 3833      44C4
 3834 0024 24A464E4 		.ascii	"$\244d\344\024\224T\3244\264t\364\014\214L\314,\254"
 3834      149454D4 
 3834      34B474F4 
 3834      0C8C4CCC 
 3834      2CAC
 3835 0036 6CEC1C9C 		.ascii	"l\354\034\234\\\334<\274|\374\002\202B\302\"\242b\342"
 3835      5CDC3CBC 
 3835      7CFC0282 
 3835      42C222A2 
 3835      62E2
 3836 0048 129252D2 		.ascii	"\022\222R\3222\262r\362\012\212J\312*\252j\352\032\232"
ARM GAS  /tmp/ccDsoCRY.s 			page 120


 3836      32B272F2 
 3836      0A8A4ACA 
 3836      2AAA6AEA 
 3836      1A9A
 3837 005a 5ADA3ABA 		.ascii	"Z\332:\272z\372\006\206F\306&\246f\346\026\226V\326"
 3837      7AFA0686 
 3837      46C626A6 
 3837      66E61696 
 3837      56D6
 3838 006c 36B676F6 		.ascii	"6\266v\366\016\216N\316.\256n\356\036\236^\336>\276"
 3838      0E8E4ECE 
 3838      2EAE6EEE 
 3838      1E9E5EDE 
 3838      3EBE
 3839 007e 7EFE0181 		.ascii	"~\376\001\201A\301!\241a\341\021\221Q\3211\261q\361"
 3839      41C121A1 
 3839      61E11191 
 3839      51D131B1 
 3839      71F1
 3840 0090 098949C9 		.ascii	"\011\211I\311)\251i\351\031\231Y\3319\271y\371\005\205"
 3840      29A969E9 
 3840      199959D9 
 3840      39B979F9 
 3840      0585
 3841 00a2 45C525A5 		.ascii	"E\305%\245e\345\025\225U\3255\265u\365\015\215M\315"
 3841      65E51595 
 3841      55D535B5 
 3841      75F50D8D 
 3841      4DCD
 3842 00b4 2DAD6DED 		.ascii	"-\255m\355\035\235]\335=\275}\375\003\203C\303#\243"
 3842      1D9D5DDD 
 3842      3DBD7DFD 
 3842      038343C3 
 3842      23A3
 3843 00c6 63E31393 		.ascii	"c\343\023\223S\3233\263s\363\013\213K\313+\253k\353"
 3843      53D333B3 
 3843      73F30B8B 
 3843      4BCB2BAB 
 3843      6BEB
 3844 00d8 1B9B5BDB 		.ascii	"\033\233[\333;\273{\373\007\207G\307'\247g\347\027\227"
 3844      3BBB7BFB 
 3844      078747C7 
 3844      27A767E7 
 3844      1797
 3845 00ea 57D737B7 		.ascii	"W\3277\267w\367\017\217O\317/\257o\357\037\237_\337"
 3845      77F70F8F 
 3845      4FCF2FAF 
 3845      6FEF1F9F 
 3845      5FDF
 3846 00fc 3FBF7FFF 		.ascii	"?\277\177\377"
 3847              		.text
 3848              	.Letext0:
 3849              		.file 5 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 3850              		.file 6 "../../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 3851              		.file 7 "../../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 3852              		.file 8 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 3853              		.file 9 "/usr/include/newlib/c++/9.2.1/bits/cpp_type_traits.h"
ARM GAS  /tmp/ccDsoCRY.s 			page 121


 3854              		.file 10 "/usr/include/newlib/c++/9.2.1/cmath"
 3855              		.file 11 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 3856              		.file 12 "/usr/include/newlib/c++/9.2.1/cstdlib"
 3857              		.file 13 "/usr/include/newlib/c++/9.2.1/cstdint"
 3858              		.file 14 "/usr/include/newlib/c++/9.2.1/type_traits"
 3859              		.file 15 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/c++config.h"
 3860              		.file 16 "/usr/include/newlib/c++/9.2.1/bits/stl_pair.h"
 3861              		.file 17 "/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_types.h"
 3862              		.file 18 "/usr/include/newlib/c++/9.2.1/debug/debug.h"
 3863              		.file 19 "/usr/include/newlib/c++/9.2.1/bits/algorithmfwd.h"
 3864              		.file 20 "/usr/include/newlib/c++/9.2.1/bits/exception_ptr.h"
 3865              		.file 21 "/usr/include/newlib/c++/9.2.1/new"
 3866              		.file 22 "/usr/include/newlib/c++/9.2.1/cstdarg"
 3867              		.file 23 "/usr/include/newlib/c++/9.2.1/cstdio"
 3868              		.file 24 "/usr/include/newlib/c++/9.2.1/cwchar"
 3869              		.file 25 "/usr/include/newlib/c++/9.2.1/clocale"
 3870              		.file 26 "/usr/include/newlib/c++/9.2.1/bits/basic_string.h"
 3871              		.file 27 "/usr/include/newlib/c++/9.2.1/bits/uniform_int_dist.h"
 3872              		.file 28 "/usr/include/newlib/c++/9.2.1/bits/random.h"
 3873              		.file 29 "/usr/include/newlib/c++/9.2.1/cstring"
 3874              		.file 30 "/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h"
 3875              		.file 31 "/usr/include/newlib/c++/9.2.1/ext/numeric_traits.h"
 3876              		.file 32 "/usr/include/newlib/c++/9.2.1/ext/new_allocator.h"
 3877              		.file 33 "/usr/include/newlib/sys/_types.h"
 3878              		.file 34 "<built-in>"
 3879              		.file 35 "/usr/include/newlib/sys/reent.h"
 3880              		.file 36 "/usr/include/newlib/sys/lock.h"
 3881              		.file 37 "/usr/include/newlib/math.h"
 3882              		.file 38 "/usr/include/newlib/stdlib.h"
 3883              		.file 39 "/usr/include/newlib/c++/9.2.1/math.h"
 3884              		.file 40 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 3885              		.file 41 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 3886              		.file 42 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 3887              		.file 43 "../../libdaisy/src/per/tim.h"
 3888              		.file 44 "../../libdaisy/src/util/wav_format.h"
 3889              		.file 45 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdarg.h"
 3890              		.file 46 "/usr/include/newlib/stdio.h"
 3891              		.file 47 "/usr/include/newlib/sys/unistd.h"
 3892              		.file 48 "../../libdaisy/src/util/oled_fonts.h"
 3893              		.file 49 "../../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 3894              		.file 50 "../../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 3895              		.file 51 "../../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 3896              		.file 52 "../../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 3897              		.file 53 "../../libdaisy/src/util/sd_diskio.h"
 3898              		.file 54 "../../libdaisy/src/sys/fatfs.h"
 3899              		.file 55 "../../DaisySP/Source/Control/adenv.h"
 3900              		.file 56 "../../DaisySP/Source/Utility/dsp.h"
 3901              		.file 57 "/usr/include/newlib/wchar.h"
 3902              		.file 58 "/usr/include/newlib/locale.h"
 3903              		.file 59 "/usr/include/newlib/ctype.h"
 3904              		.file 60 "/usr/include/newlib/sys/errno.h"
 3905              		.file 61 "/usr/include/newlib/string.h"
 3906              		.file 62 "./resources.h"
 3907              		.file 63 "../../libdaisy/src/dev/sr_595.h"
 3908              		.file 64 "dsp/pvoc/frame_transformation.h"
 3909              		.file 65 "dsp/pvoc/stft.h"
ARM GAS  /tmp/ccDsoCRY.s 			page 122


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stft.cpp
     /tmp/ccDsoCRY.s:17     .text._ZN4STFT5ResetEv:0000000000000000 $t
     /tmp/ccDsoCRY.s:26     .text._ZN4STFT5ResetEv:0000000000000000 _ZN4STFT5ResetEv
     /tmp/ccDsoCRY.s:142    .text._ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation:0000000000000000 $t
     /tmp/ccDsoCRY.s:150    .text._ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation:0000000000000000 _ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation
     /tmp/ccDsoCRY.s:431    .text._ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation:00000000000000e4 $d
     /tmp/ccDsoCRY.s:438    .text._ZN4STFT7ProcessERK10ParametersPKfPfjj:0000000000000000 $t
     /tmp/ccDsoCRY.s:446    .text._ZN4STFT7ProcessERK10ParametersPKfPfjj:0000000000000000 _ZN4STFT7ProcessERK10ParametersPKfPfjj
     /tmp/ccDsoCRY.s:651    .text._ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j:0000000000000000 $t
     /tmp/ccDsoCRY.s:659    .text._ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j:0000000000000000 _ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j
     /tmp/ccDsoCRY.s:1313   .text._ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j:0000000000000320 $d
     /tmp/ccDsoCRY.s:1318   .text._ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j:0000000000000000 $t
     /tmp/ccDsoCRY.s:1326   .text._ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j:0000000000000000 _ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j
     /tmp/ccDsoCRY.s:1974   .text._ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j:0000000000000350 $d
     /tmp/ccDsoCRY.s:1985   .text._ZN4STFT6BufferEv:0000000000000000 $t
     /tmp/ccDsoCRY.s:1993   .text._ZN4STFT6BufferEv:0000000000000000 _ZN4STFT6BufferEv
     /tmp/ccDsoCRY.s:2406   .text._ZN4STFT6BufferEv:0000000000000180 $d
     /tmp/ccDsoCRY.s:3831   .rodata._ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E:0000000000000000 _ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E
     /tmp/ccDsoCRY.s:2410   .text._ZN4STFT6BufferEv:0000000000000184 $t
     /tmp/ccDsoCRY.s:2963   .text._ZN4STFT6BufferEv:000000000000043c $d
     /tmp/ccDsoCRY.s:2975   .text._ZN4STFT6BufferEv:0000000000000444 $t
     /tmp/ccDsoCRY.s:3816   .text._ZN4STFT6BufferEv:00000000000007b8 $d
     /tmp/ccDsoCRY.s:3828   .rodata._ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E:0000000000000000 $d

UNDEFINED SYMBOLS
cosf
sinf
memmove
_ZN19FrameTransformation7ProcessERK10ParametersPfS3_
