ARM GAS  /tmp/cchieLBQ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stft.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN4STFT5ResetEv,"ax",%progbits
  17              		.align	1
  18              		.global	_ZN4STFT5ResetEv
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	_ZN4STFT5ResetEv:
  26              	.LVL0:
  27              	.LFB4289:
  28              		.file 1 "dsp/pvoc/stft.cpp"
   1:dsp/pvoc/stft.cpp **** // Copyright 2014 Emilie Gillet.
   2:dsp/pvoc/stft.cpp **** //
   3:dsp/pvoc/stft.cpp **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/pvoc/stft.cpp **** //
   5:dsp/pvoc/stft.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/pvoc/stft.cpp **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/pvoc/stft.cpp **** // in the Software without restriction, including without limitation the rights
   8:dsp/pvoc/stft.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/pvoc/stft.cpp **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/pvoc/stft.cpp **** // furnished to do so, subject to the following conditions:
  11:dsp/pvoc/stft.cpp **** //
  12:dsp/pvoc/stft.cpp **** // The above copyright notice and this permission notice shall be included in
  13:dsp/pvoc/stft.cpp **** // all copies or substantial portions of the Software.
  14:dsp/pvoc/stft.cpp **** //
  15:dsp/pvoc/stft.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/pvoc/stft.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/pvoc/stft.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/pvoc/stft.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/pvoc/stft.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/pvoc/stft.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/pvoc/stft.cpp **** // THE SOFTWARE.
  22:dsp/pvoc/stft.cpp **** //
  23:dsp/pvoc/stft.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/pvoc/stft.cpp **** //
  25:dsp/pvoc/stft.cpp **** // -----------------------------------------------------------------------------
  26:dsp/pvoc/stft.cpp **** //
  27:dsp/pvoc/stft.cpp **** // STFT with overlap-add.
  28:dsp/pvoc/stft.cpp **** 
  29:dsp/pvoc/stft.cpp **** #include "stft.h"
  30:dsp/pvoc/stft.cpp **** #include "stmtemp.h"
ARM GAS  /tmp/cchieLBQ.s 			page 2


  31:dsp/pvoc/stft.cpp **** #include <algorithm>
  32:dsp/pvoc/stft.cpp **** 
  33:dsp/pvoc/stft.cpp **** using namespace daisysp;
  34:dsp/pvoc/stft.cpp **** using namespace std;
  35:dsp/pvoc/stft.cpp **** using namespace daisy;
  36:dsp/pvoc/stft.cpp **** 
  37:dsp/pvoc/stft.cpp **** void STFT::Init(FFT*         fft,
  38:dsp/pvoc/stft.cpp ****                 size_t       fft_size,
  39:dsp/pvoc/stft.cpp ****                 size_t       hop_size,
  40:dsp/pvoc/stft.cpp ****                 float*       fft_buffer,
  41:dsp/pvoc/stft.cpp ****                 float*       ifft_buffer,
  42:dsp/pvoc/stft.cpp ****                 const float* window_lut,
  43:dsp/pvoc/stft.cpp ****                 short*       analysis_synthesis_buffer,
  44:dsp/pvoc/stft.cpp ****                 Modifier*    modifier)
  45:dsp/pvoc/stft.cpp **** {
  46:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
  47:dsp/pvoc/stft.cpp ****     hop_size_       = hop_size;
  48:dsp/pvoc/stft.cpp ****     fft_num_passes_ = 0;
  49:dsp/pvoc/stft.cpp ****     for(size_t t = fft_size; t > 1; t >>= 1)
  50:dsp/pvoc/stft.cpp ****     {
  51:dsp/pvoc/stft.cpp ****         ++fft_num_passes_;
  52:dsp/pvoc/stft.cpp ****     }
  53:dsp/pvoc/stft.cpp ****     buffer_size_ = fft_size_ + hop_size_;
  54:dsp/pvoc/stft.cpp **** 
  55:dsp/pvoc/stft.cpp ****     fft_ = fft;
  56:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
  57:dsp/pvoc/stft.cpp ****     arm_rfft_fast_init_f32(fft_, fft_size);
  58:dsp/pvoc/stft.cpp **** #else
  59:dsp/pvoc/stft.cpp ****     fft_->Init();
  60:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
  61:dsp/pvoc/stft.cpp **** 
  62:dsp/pvoc/stft.cpp ****     analysis_  = &analysis_synthesis_buffer[0];
  63:dsp/pvoc/stft.cpp ****     synthesis_ = &analysis_synthesis_buffer[buffer_size_];
  64:dsp/pvoc/stft.cpp **** 
  65:dsp/pvoc/stft.cpp ****     ifft_in_ = fft_in_ = fft_buffer;
  66:dsp/pvoc/stft.cpp ****     ifft_out_ = fft_out_ = ifft_buffer;
  67:dsp/pvoc/stft.cpp **** 
  68:dsp/pvoc/stft.cpp ****     window_        = window_lut;
  69:dsp/pvoc/stft.cpp ****     window_stride_ = LUT_SINE_WINDOW_4096_SIZE / fft_size;
  70:dsp/pvoc/stft.cpp ****     modifier_      = modifier;
  71:dsp/pvoc/stft.cpp **** 
  72:dsp/pvoc/stft.cpp ****     parameters_ = NULL;
  73:dsp/pvoc/stft.cpp **** 
  74:dsp/pvoc/stft.cpp ****     Reset();
  75:dsp/pvoc/stft.cpp **** }
  76:dsp/pvoc/stft.cpp **** 
  77:dsp/pvoc/stft.cpp **** void STFT::Reset()
  78:dsp/pvoc/stft.cpp **** {
  29              		.loc 1 78 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  79:dsp/pvoc/stft.cpp ****     buffer_ptr_  = 0;
  33              		.loc 1 79 5 view .LVU1
  80:dsp/pvoc/stft.cpp ****     process_ptr_ = (2 * hop_size_) % buffer_size_;
  34              		.loc 1 80 23 is_stmt 0 view .LVU2
  35 0000 D0E90323 		ldrd	r2, r3, [r0, #12]
ARM GAS  /tmp/cchieLBQ.s 			page 3


  78:dsp/pvoc/stft.cpp ****     buffer_ptr_  = 0;
  36              		.loc 1 78 1 view .LVU3
  37 0004 10B5     		push	{r4, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 4, -8
  40              		.cfi_offset 14, -4
  41              		.loc 1 80 23 view .LVU4
  42 0006 5200     		lsls	r2, r2, #1
  79:dsp/pvoc/stft.cpp ****     buffer_ptr_  = 0;
  43              		.loc 1 79 18 view .LVU5
  44 0008 0024     		movs	r4, #0
  45              		.loc 1 80 36 view .LVU6
  46 000a B2FBF3F1 		udiv	r1, r2, r3
  47 000e 03FB1122 		mls	r2, r3, r1, r2
  81:dsp/pvoc/stft.cpp ****     block_size_  = 0;
  82:dsp/pvoc/stft.cpp ****     fill(&analysis_[0], &analysis_[buffer_size_], 0);
  48              		.loc 1 82 48 view .LVU7
  49 0012 5900     		lsls	r1, r3, #1
  79:dsp/pvoc/stft.cpp ****     process_ptr_ = (2 * hop_size_) % buffer_size_;
  50              		.loc 1 79 18 view .LVU8
  51 0014 4463     		str	r4, [r0, #52]
  80:dsp/pvoc/stft.cpp ****     block_size_  = 0;
  52              		.loc 1 80 5 is_stmt 1 view .LVU9
  81:dsp/pvoc/stft.cpp ****     block_size_  = 0;
  53              		.loc 1 81 18 is_stmt 0 view .LVU10
  54 0016 C0E90E24 		strd	r2, r4, [r0, #56]
  55              		.loc 1 82 5 is_stmt 1 view .LVU11
  56              		.loc 1 82 11 is_stmt 0 view .LVU12
  57 001a C26A     		ldr	r2, [r0, #44]
  58              		.loc 1 82 9 view .LVU13
  59 001c 02EB4303 		add	r3, r2, r3, lsl #1
  60              	.LVL1:
  61              	.LBB123:
  62              	.LBI123:
  63              		.file 2 "/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h"
   1:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
   3:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** //
   5:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  11:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  16:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  20:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
ARM GAS  /tmp/cchieLBQ.s 			page 4


  23:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  25:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** /*
  26:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *
  27:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *
  30:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *
  38:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *
  39:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *
  42:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  */
  50:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  51:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  */
  55:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  56:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  59:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  73:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** # include <type_traits>
  74:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
  75:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  76:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  77:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** {
  78:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  79:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
ARM GAS  /tmp/cchieLBQ.s 			page 5


  80:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
  81:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  82:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  83:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  84:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _BoolType>
  85:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __iter_swap
  86:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
  87:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  88:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static void
  89:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  90:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
  91:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
  92:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    _ValueType1;
  93:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
  94:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  *__a = *__b;
  95:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  *__b = __tmp;
  96:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
  97:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
  98:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  99:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<>
 100:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __iter_swap<true>
 101:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 102:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 103:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static void
 104:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 105:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 106:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  swap(*__a, *__b);
 107:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 108:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 109:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 110:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 111:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 112:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 113:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 114:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 115:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 116:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   Nothing.
 117:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 118:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 119:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  iterators themselves.
 120:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 121:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 122:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline void
 123:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 124:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 125:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 126:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 127:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 128:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 129:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 130:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 131:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 132:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 133:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	_ValueType1;
 134:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 135:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	_ValueType2;
 136:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
ARM GAS  /tmp/cchieLBQ.s 			page 6


 137:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 138:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ValueType2>)
 139:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 140:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ValueType1>)
 141:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 142:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 143:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	_ReferenceType1;
 144:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 145:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	_ReferenceType2;
 146:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 147:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 148:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 149:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 150:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #else
 151:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       swap(*__a, *__b);
 152:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 153:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 154:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 155:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 156:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 157:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 158:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 159:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 160:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 161:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 162:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 163:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 164:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 165:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  The ranges must not overlap.
 166:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 167:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 168:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     _ForwardIterator2
 169:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 170:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 171:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 172:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 173:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 174:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 175:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 176:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 177:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 178:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 179:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 180:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 181:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return __first2;
 182:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 183:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 184:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 185:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 186:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 187:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 188:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 189:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 190:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 191:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 192:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 193:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  preprocessor macro.
ARM GAS  /tmp/cchieLBQ.s 			page 7


 194:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 195:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Tp>
 196:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 197:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline const _Tp&
 198:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 199:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 200:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 201:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 202:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 203:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       if (__b < __a)
 204:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	return __b;
 205:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return __a;
 206:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 207:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 208:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 209:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 210:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 211:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 212:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 213:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 214:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 215:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 216:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 217:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  preprocessor macro.
 218:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 219:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Tp>
 220:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 221:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline const _Tp&
 222:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 223:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 224:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 225:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 226:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 227:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       if (__a < __b)
 228:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	return __b;
 229:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return __a;
 230:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 231:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 232:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 233:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 234:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 235:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 236:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 237:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 238:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 239:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 240:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 241:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 242:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 243:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 244:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 245:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline const _Tp&
 246:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 247:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 248:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 249:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       if (__comp(__b, __a))
 250:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	return __b;
ARM GAS  /tmp/cchieLBQ.s 			page 8


 251:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return __a;
 252:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 253:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 254:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 255:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 256:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 257:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 258:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 259:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 260:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 261:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 262:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 263:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 264:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 265:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 266:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 267:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline const _Tp&
 268:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 269:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 270:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 271:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       if (__comp(__a, __b))
 272:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	return __b;
 273:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return __a;
 274:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 275:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 276:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 277:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 278:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Iterator>
 279:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _Iterator
 280:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 281:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 282:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     { return __it; }
 283:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 284:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 285:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 286:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 287:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _From, typename _To>
 288:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _From
 289:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 290:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 291:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 292:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 293:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Iterator>
 294:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _Iterator
 295:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 296:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     { return __res; }
 297:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 298:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 299:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 300:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 301:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 302:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // a for loop with an explicit count.
 303:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 304:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 305:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move
 306:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 307:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
ARM GAS  /tmp/cchieLBQ.s 			page 9


 308:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _OI
 309:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 310:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 311:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 312:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    *__result = *__first;
 313:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result;
 314:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 315:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 316:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 317:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 318:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Category>
 319:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 320:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 321:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 322:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _OI
 323:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 324:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 325:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 326:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 327:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result;
 328:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 329:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 330:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 331:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 332:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<>
 333:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 334:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 335:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 336:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _OI
 337:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 338:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 339:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 340:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 341:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    {
 342:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	      *__result = *__first;
 343:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	      ++__first;
 344:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	      ++__result;
 345:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    }
 346:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result;
 347:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 348:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 349:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 350:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 351:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<>
 352:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 353:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 354:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 355:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _OI
 356:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 357:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 358:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 359:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 360:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    {
 361:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 362:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	      ++__first;
 363:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	      ++__result;
 364:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    }
ARM GAS  /tmp/cchieLBQ.s 			page 10


 365:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result;
 366:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 367:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 368:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 369:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 370:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove>
 371:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 372:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 373:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _Tp>
 374:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _Tp*
 375:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 376:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 377:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 378:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 379:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 380:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 381:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 382:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 383:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 384:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 385:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  if (_Num)
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 387:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 388:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 389:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 390:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 391:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 392:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _OI
 393:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 394:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 395:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::value_type _ValueTypeI;
 396:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
 397:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 398:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 399:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 			     && __is_pointer<_II>::__value
 400:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 			     && __is_pointer<_OI>::__value
 401:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
 402:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 403:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __simple,
 404:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 405:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 406:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 407:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 408:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 409:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _CharT>
 410:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct char_traits;
 411:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 412:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 413:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     class istreambuf_iterator;
 414:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 415:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 416:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     class ostreambuf_iterator;
 417:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 418:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 419:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 420:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 421:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
ARM GAS  /tmp/cchieLBQ.s 			page 11


 422:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 423:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 424:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 425:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 426:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 427:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 428:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 429:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 430:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 431:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 432:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				    _CharT*>::__type
 433:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 434:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 435:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 436:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 437:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _OI
 438:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 439:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 440:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 441:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 		std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 442:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 					    std::__niter_base(__last),
 443:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 					    std::__niter_base(__result)));
 444:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 445:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 446:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 447:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 448:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 449:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 450:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 451:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 452:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   result + (first - last)
 453:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 454:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 455:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 456:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 457:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 458:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 459:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 460:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 461:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  within [first,last).
 462:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 463:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 464:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _OI
 465:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 466:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 467:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 468:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 469:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 470:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 471:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 472:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 473:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return std::__copy_move_a2<__is_move_iterator<_II>::__value>
 474:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 475:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 476:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 477:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 478:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
ARM GAS  /tmp/cchieLBQ.s 			page 12


 479:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 480:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 481:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 482:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 483:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 484:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   result + (first - last)
 485:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 486:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 487:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 488:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 489:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 490:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 491:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 492:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 493:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  within [first,last).
 494:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 495:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 496:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _OI
 497:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 498:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 499:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 500:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 501:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 502:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 503:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 504:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 505:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return std::__copy_move_a2<true>(std::__miter_base(__first),
 506:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				       std::__miter_base(__last), __result);
 507:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 508:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 509:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 510:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #else
 511:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 512:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 513:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 514:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool, bool, typename>
 515:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move_backward
 516:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 517:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 518:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _BI2
 519:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 520:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 521:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  while (__first != __last)
 522:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    *--__result = *--__last;
 523:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result;
 524:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 525:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 526:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 527:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 528:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Category>
 529:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 530:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 531:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 532:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _BI2
 533:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 534:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 535:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  while (__first != __last)
ARM GAS  /tmp/cchieLBQ.s 			page 13


 536:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 537:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result;
 538:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 539:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 540:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 541:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 542:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<>
 543:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 544:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 545:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 546:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _BI2
 547:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 548:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 549:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 550:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 551:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    *--__result = *--__last;
 552:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result;
 553:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 554:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 555:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 556:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 557:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<>
 558:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 559:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 560:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 561:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _BI2
 562:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 563:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 564:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 565:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 566:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 567:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result;
 568:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 569:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 570:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 571:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 572:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove>
 573:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 574:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 575:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _Tp>
 576:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _Tp*
 577:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 578:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 579:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 580:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 581:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 582:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 583:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 584:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 585:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 586:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 587:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  if (_Num)
 588:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 589:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result - _Num;
 590:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 591:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 592:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
ARM GAS  /tmp/cchieLBQ.s 			page 14


 593:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 594:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _BI2
 595:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
 596:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 597:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::value_type _ValueType1;
 598:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI2>::value_type _ValueType2;
 599:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 600:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       const bool __simple = (__is_trivially_copyable(_ValueType1)
 601:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 			     && __is_pointer<_BI1>::__value
 602:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 			     && __is_pointer<_BI2>::__value
 603:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 			     && __are_same<_ValueType1, _ValueType2>::__value);
 604:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 605:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return std::__copy_move_backward<_IsMove, __simple,
 606:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				       _Category>::__copy_move_b(__first,
 607:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 								 __last,
 608:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 								 __result);
 609:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 610:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 611:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 612:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _BI2
 613:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 614:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 615:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 616:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 		std::__copy_move_backward_a<_IsMove>
 617:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 618:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 619:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 620:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 621:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 622:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 623:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 624:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 625:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 626:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 627:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   result - (first - last)
 628:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 629:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 630:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 631:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 632:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 633:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 634:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 635:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 636:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 637:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 638:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 639:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 640:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _BI2
 641:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 642:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 643:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 644:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 645:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 646:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 647:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 648:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 649:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
ARM GAS  /tmp/cchieLBQ.s 			page 15


 650:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 651:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
 652:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 653:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 654:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 655:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 656:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 657:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 658:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 659:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 660:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 661:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 662:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   result - (first - last)
 663:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 664:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 665:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 666:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 667:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 668:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 669:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 670:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 671:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 672:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 673:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 674:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 675:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _BI2
 676:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 677:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 678:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 679:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 680:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 681:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 682:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 683:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 684:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
 685:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 686:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return std::__copy_move_backward_a2<true>(std::__miter_base(__first),
 687:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 						std::__miter_base(__last),
 688:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 						__result);
 689:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 690:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 691:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::move_backward(_Tp, _Up, _Vp)
 692:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #else
 693:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::copy_backward(_Tp, _Up, _Vp)
 694:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 695:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 696:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 697:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline typename
 698:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type
 699:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __fill_a(_ForwardIterator __first, _ForwardIterator __last,
 700:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  	     const _Tp& __value)
 701:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 702:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 703:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	*__first = __value;
 704:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 705:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 706:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
ARM GAS  /tmp/cchieLBQ.s 			page 16


 707:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline typename
 708:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
 709:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __fill_a(_ForwardIterator __first, _ForwardIterator __last,
 710:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	     const _Tp& __value)
 711:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 712:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 713:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 714:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	*__first = __tmp;
 715:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 716:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 717:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // Specialization: for char types we can use memset.
 718:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Tp>
 719:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline typename
 720:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
 721:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __fill_a(_Tp* __first, _Tp* __last, const _Tp& __c)
 722:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 723:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       const _Tp __tmp = __c;
 724:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       if (const size_t __len = __last - __first)
 725:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
 726:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 727:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 728:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 729:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief Fills the range [first,last) with copies of value.
 730:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 731:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __first  A forward iterator.
 732:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __last   A forward iterator.
 733:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 734:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   Nothing.
 735:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 736:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 737:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 738:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  to @c memset or @c wmemset.
 739:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 740:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 741:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline void
 742:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
  64              		.loc 2 742 5 is_stmt 1 view .LVU14
  65              	.LBB124:
  66              	.LBI124:
 709:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	     const _Tp& __value)
  67              		.loc 2 709 5 view .LVU15
  68              	.L3:
  69              	.LBB125:
 713:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	*__first = __tmp;
  70              		.loc 2 713 22 view .LVU16
  71 0020 9342     		cmp	r3, r2
  72 0022 03D0     		beq	.L2
 714:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
  73              		.loc 2 714 2 is_stmt 0 view .LVU17
  74 0024 0024     		movs	r4, #0
  75 0026 22F8024B 		strh	r4, [r2], #2	@ movhi
  76              	.LVL2:
 713:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	*__first = __tmp;
  77              		.loc 2 713 7 is_stmt 1 view .LVU18
 713:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	*__first = __tmp;
  78              		.loc 2 713 7 is_stmt 0 view .LVU19
  79 002a F9E7     		b	.L3
ARM GAS  /tmp/cchieLBQ.s 			page 17


  80              	.L2:
  81              	.LVL3:
 713:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	*__first = __tmp;
  82              		.loc 2 713 7 view .LVU20
  83              	.LBE125:
  84              	.LBE124:
  85              	.LBE123:
  83:dsp/pvoc/stft.cpp ****     fill(&synthesis_[0], &synthesis_[buffer_size_], 0);
  86              		.loc 1 83 5 is_stmt 1 view .LVU21
  87              		.loc 1 83 11 is_stmt 0 view .LVU22
  88 002c 036B     		ldr	r3, [r0, #48]
  89              		.loc 1 83 9 view .LVU23
  90 002e 1944     		add	r1, r1, r3
  91              	.LVL4:
  92              	.LBB126:
  93              	.LBI126:
  94              		.loc 2 742 5 is_stmt 1 view .LVU24
  95              	.LBB127:
  96              	.LBI127:
 709:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	     const _Tp& __value)
  97              		.loc 2 709 5 view .LVU25
  98              	.L5:
  99              	.LBB128:
 713:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	*__first = __tmp;
 100              		.loc 2 713 22 view .LVU26
 101 0030 9942     		cmp	r1, r3
 102 0032 4FF00002 		mov	r2, #0
 103 0036 02D0     		beq	.L4
 714:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 104              		.loc 2 714 2 is_stmt 0 view .LVU27
 105 0038 23F8022B 		strh	r2, [r3], #2	@ movhi
 106              	.LVL5:
 713:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	*__first = __tmp;
 107              		.loc 2 713 7 is_stmt 1 view .LVU28
 713:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	*__first = __tmp;
 108              		.loc 2 713 7 is_stmt 0 view .LVU29
 109 003c F8E7     		b	.L5
 110              	.L4:
 111              	.LVL6:
 713:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	*__first = __tmp;
 112              		.loc 2 713 7 view .LVU30
 113              	.LBE128:
 114              	.LBE127:
 115              	.LBE126:
  84:dsp/pvoc/stft.cpp ****     ready_ = 0;
 116              		.loc 1 84 5 is_stmt 1 view .LVU31
  85:dsp/pvoc/stft.cpp ****     done_  = 0;
 117              		.loc 1 85 12 is_stmt 0 view .LVU32
 118 003e C0E91022 		strd	r2, r2, [r0, #64]
  86:dsp/pvoc/stft.cpp **** }
 119              		.loc 1 86 1 view .LVU33
 120 0042 10BD     		pop	{r4, pc}
 121              		.cfi_endproc
 122              	.LFE4289:
 124              		.section	.text._ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation,
 125              		.align	1
 126              		.global	_ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation
ARM GAS  /tmp/cchieLBQ.s 			page 18


 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu fpv5-d16
 132              	_ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation:
 133              	.LVL7:
 134              	.LFB4288:
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 135              		.loc 1 45 1 is_stmt 1 view -0
 136              		.cfi_startproc
 137              		@ args = 20, pretend = 0, frame = 8
 138              		@ frame_needed = 0, uses_anonymous_args = 0
  46:dsp/pvoc/stft.cpp ****     hop_size_       = hop_size;
 139              		.loc 1 46 5 view .LVU35
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 140              		.loc 1 45 1 is_stmt 0 view .LVU36
 141 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 142              		.cfi_def_cfa_offset 36
 143              		.cfi_offset 4, -36
 144              		.cfi_offset 5, -32
 145              		.cfi_offset 6, -28
 146              		.cfi_offset 7, -24
 147              		.cfi_offset 8, -20
 148              		.cfi_offset 9, -16
 149              		.cfi_offset 10, -12
 150              		.cfi_offset 11, -8
 151              		.cfi_offset 14, -4
 152 0004 2DED028B 		vpush.64	{d8}
 153              		.cfi_def_cfa_offset 44
 154              		.cfi_offset 80, -44
 155              		.cfi_offset 81, -40
 156 0008 83B0     		sub	sp, sp, #12
 157              		.cfi_def_cfa_offset 56
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 158              		.loc 1 45 1 view .LVU37
 159 000a 1646     		mov	r6, r2
 160 000c 0446     		mov	r4, r0
  47:dsp/pvoc/stft.cpp ****     fft_num_passes_ = 0;
 161              		.loc 1 47 21 view .LVU38
 162 000e C360     		str	r3, [r0, #12]
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 163              		.loc 1 45 1 view .LVU39
 164 0010 129A     		ldr	r2, [sp, #72]
 165              	.LVL8:
  46:dsp/pvoc/stft.cpp ****     hop_size_       = hop_size;
 166              		.loc 1 46 21 view .LVU40
 167 0012 4660     		str	r6, [r0, #4]
  47:dsp/pvoc/stft.cpp ****     fft_num_passes_ = 0;
 168              		.loc 1 47 5 is_stmt 1 view .LVU41
  48:dsp/pvoc/stft.cpp ****     for(size_t t = fft_size; t > 1; t >>= 1)
 169              		.loc 1 48 5 view .LVU42
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 170              		.loc 1 45 1 is_stmt 0 view .LVU43
 171 0014 0192     		str	r2, [sp, #4]
  48:dsp/pvoc/stft.cpp ****     for(size_t t = fft_size; t > 1; t >>= 1)
 172              		.loc 1 48 21 view .LVU44
 173 0016 0022     		movs	r2, #0
ARM GAS  /tmp/cchieLBQ.s 			page 19


  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 174              		.loc 1 45 1 view .LVU45
 175 0018 DDE90E98 		ldrd	r9, r8, [sp, #56]
  48:dsp/pvoc/stft.cpp ****     for(size_t t = fft_size; t > 1; t >>= 1)
 176              		.loc 1 48 21 view .LVU46
 177 001c 8260     		str	r2, [r0, #8]
  49:dsp/pvoc/stft.cpp ****     {
 178              		.loc 1 49 5 is_stmt 1 view .LVU47
 179              	.LVL9:
 180              	.LBB140:
  49:dsp/pvoc/stft.cpp ****     {
 181              		.loc 1 49 16 is_stmt 0 view .LVU48
 182 001e 3046     		mov	r0, r6
 183              	.LVL10:
  49:dsp/pvoc/stft.cpp ****     {
 184              		.loc 1 49 16 view .LVU49
 185              	.LBE140:
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 186              		.loc 1 45 1 view .LVU50
 187 0020 DDE910B7 		ldrd	fp, r7, [sp, #64]
 188              	.LVL11:
 189              	.L9:
 190              	.LBB141:
  49:dsp/pvoc/stft.cpp ****     {
 191              		.loc 1 49 32 is_stmt 1 discriminator 3 view .LVU51
 192 0024 0128     		cmp	r0, #1
 193 0026 04D9     		bls	.L8
  51:dsp/pvoc/stft.cpp ****     }
 194              		.loc 1 51 9 discriminator 2 view .LVU52
 195 0028 A268     		ldr	r2, [r4, #8]
  49:dsp/pvoc/stft.cpp ****     {
 196              		.loc 1 49 39 is_stmt 0 discriminator 2 view .LVU53
 197 002a 4008     		lsrs	r0, r0, #1
 198              	.LVL12:
  51:dsp/pvoc/stft.cpp ****     }
 199              		.loc 1 51 9 discriminator 2 view .LVU54
 200 002c 0132     		adds	r2, r2, #1
 201 002e A260     		str	r2, [r4, #8]
  49:dsp/pvoc/stft.cpp ****     {
 202              		.loc 1 49 5 is_stmt 1 discriminator 2 view .LVU55
 203              	.LVL13:
  49:dsp/pvoc/stft.cpp ****     {
 204              		.loc 1 49 5 is_stmt 0 discriminator 2 view .LVU56
 205 0030 F8E7     		b	.L9
 206              	.L8:
  49:dsp/pvoc/stft.cpp ****     {
 207              		.loc 1 49 5 discriminator 2 view .LVU57
 208              	.LBE141:
  53:dsp/pvoc/stft.cpp **** 
 209              		.loc 1 53 5 is_stmt 1 view .LVU58
  53:dsp/pvoc/stft.cpp **** 
 210              		.loc 1 53 30 is_stmt 0 view .LVU59
 211 0032 3344     		add	r3, r3, r6
 212              	.LVL14:
  53:dsp/pvoc/stft.cpp **** 
 213              		.loc 1 53 30 view .LVU60
 214 0034 0D46     		mov	r5, r1
ARM GAS  /tmp/cchieLBQ.s 			page 20


 215              	.LBB142:
 216              	.LBB143:
 217              	.LBB144:
 218              	.LBB145:
 219              	.LBB146:
 220              		.file 3 "./shy_fft.h"
   1:./shy_fft.h   **** // Copyright 2014 Emilie Gillet.
   2:./shy_fft.h   **** //
   3:./shy_fft.h   **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:./shy_fft.h   **** //
   5:./shy_fft.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:./shy_fft.h   **** // of this software and associated documentation files (the "Software"), to deal
   7:./shy_fft.h   **** // in the Software without restriction, including without limitation the rights
   8:./shy_fft.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:./shy_fft.h   **** // copies of the Software, and to permit persons to whom the Software is
  10:./shy_fft.h   **** // furnished to do so, subject to the following conditions:
  11:./shy_fft.h   **** //
  12:./shy_fft.h   **** // The above copyright notice and this permission notice shall be included in
  13:./shy_fft.h   **** // all copies or substantial portions of the Software.
  14:./shy_fft.h   **** //
  15:./shy_fft.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:./shy_fft.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:./shy_fft.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:./shy_fft.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:./shy_fft.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:./shy_fft.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:./shy_fft.h   **** // THE SOFTWARE.
  22:./shy_fft.h   **** //
  23:./shy_fft.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:./shy_fft.h   **** //
  25:./shy_fft.h   **** // -----------------------------------------------------------------------------
  26:./shy_fft.h   **** //
  27:./shy_fft.h   **** // A modest implementation of real FFT for embedded audio applications,
  28:./shy_fft.h   **** // largely based on Laurent de Soras' FFTReal.
  29:./shy_fft.h   **** //
  30:./shy_fft.h   **** // Improvements:
  31:./shy_fft.h   **** // * No dynamic allocations.
  32:./shy_fft.h   **** // * No additional buffering (can use the input buffer as a workspace).
  33:./shy_fft.h   **** // * No big bitrev lookup table.
  34:./shy_fft.h   **** // * Keep the fixed size template signature, but also provide method for
  35:./shy_fft.h   **** //   variable size (up to the fixed size).
  36:./shy_fft.h   **** 
  37:./shy_fft.h   **** #ifndef STMLIB_FFT_SHY_FFT_H_
  38:./shy_fft.h   **** #define STMLIB_FFT_SHY_FFT_H_
  39:./shy_fft.h   **** 
  40:./shy_fft.h   **** #include <algorithm>
  41:./shy_fft.h   **** #include <cmath>
  42:./shy_fft.h   **** 
  43:./shy_fft.h   **** // Compile-time log 2
  44:./shy_fft.h   **** template <size_t x>
  45:./shy_fft.h   **** struct Log2
  46:./shy_fft.h   **** {
  47:./shy_fft.h   ****     enum
  48:./shy_fft.h   ****     {
  49:./shy_fft.h   ****         value = Log2<x / 2>::value + 1
  50:./shy_fft.h   ****     };
  51:./shy_fft.h   ****     typedef char CheckPowerOf2[((x & (x - 1)) == 0 ? 1 : -1)];
ARM GAS  /tmp/cchieLBQ.s 			page 21


  52:./shy_fft.h   **** };
  53:./shy_fft.h   **** 
  54:./shy_fft.h   **** template <>
  55:./shy_fft.h   **** struct Log2<1>
  56:./shy_fft.h   **** {
  57:./shy_fft.h   ****     enum
  58:./shy_fft.h   ****     {
  59:./shy_fft.h   ****         value = 0
  60:./shy_fft.h   ****     };
  61:./shy_fft.h   **** };
  62:./shy_fft.h   **** 
  63:./shy_fft.h   **** 
  64:./shy_fft.h   **** // Bit reversal LUT size.
  65:./shy_fft.h   **** template <size_t>
  66:./shy_fft.h   **** struct BitReversalLut
  67:./shy_fft.h   **** {
  68:./shy_fft.h   ****     enum
  69:./shy_fft.h   ****     {
  70:./shy_fft.h   ****         size = 1
  71:./shy_fft.h   ****     };
  72:./shy_fft.h   **** };
  73:./shy_fft.h   **** template <>
  74:./shy_fft.h   **** struct BitReversalLut<3>
  75:./shy_fft.h   **** {
  76:./shy_fft.h   ****     enum
  77:./shy_fft.h   ****     {
  78:./shy_fft.h   ****         size = 2
  79:./shy_fft.h   ****     };
  80:./shy_fft.h   **** };
  81:./shy_fft.h   **** template <>
  82:./shy_fft.h   **** struct BitReversalLut<4>
  83:./shy_fft.h   **** {
  84:./shy_fft.h   ****     enum
  85:./shy_fft.h   ****     {
  86:./shy_fft.h   ****         size = 4
  87:./shy_fft.h   ****     };
  88:./shy_fft.h   **** };
  89:./shy_fft.h   **** template <>
  90:./shy_fft.h   **** struct BitReversalLut<5>
  91:./shy_fft.h   **** {
  92:./shy_fft.h   ****     enum
  93:./shy_fft.h   ****     {
  94:./shy_fft.h   ****         size = 8
  95:./shy_fft.h   ****     };
  96:./shy_fft.h   **** };
  97:./shy_fft.h   **** template <>
  98:./shy_fft.h   **** struct BitReversalLut<6>
  99:./shy_fft.h   **** {
 100:./shy_fft.h   ****     enum
 101:./shy_fft.h   ****     {
 102:./shy_fft.h   ****         size = 16
 103:./shy_fft.h   ****     };
 104:./shy_fft.h   **** };
 105:./shy_fft.h   **** template <>
 106:./shy_fft.h   **** struct BitReversalLut<7>
 107:./shy_fft.h   **** {
 108:./shy_fft.h   ****     enum
ARM GAS  /tmp/cchieLBQ.s 			page 22


 109:./shy_fft.h   ****     {
 110:./shy_fft.h   ****         size = 32
 111:./shy_fft.h   ****     };
 112:./shy_fft.h   **** };
 113:./shy_fft.h   **** template <>
 114:./shy_fft.h   **** struct BitReversalLut<8>
 115:./shy_fft.h   **** {
 116:./shy_fft.h   ****     enum
 117:./shy_fft.h   ****     {
 118:./shy_fft.h   ****         size = 64
 119:./shy_fft.h   ****     };
 120:./shy_fft.h   **** };
 121:./shy_fft.h   **** 
 122:./shy_fft.h   **** 
 123:./shy_fft.h   **** // Typed math functions and constants.
 124:./shy_fft.h   **** template <typename T>
 125:./shy_fft.h   **** struct Math
 126:./shy_fft.h   **** {
 127:./shy_fft.h   ****     inline T pi() const;
 128:./shy_fft.h   ****     inline T sqrt_2_div_2() const;
 129:./shy_fft.h   ****     inline T cos(T x);
 130:./shy_fft.h   ****     inline T sin(T x);
 131:./shy_fft.h   **** };
 132:./shy_fft.h   **** 
 133:./shy_fft.h   **** template <>
 134:./shy_fft.h   **** struct Math<float>
 135:./shy_fft.h   **** {
 136:./shy_fft.h   ****     inline float pi() const { return 3.141592653589793f; }
 137:./shy_fft.h   ****     inline float sqrt_2_div_2() const { return 0.7071067811865476f; }
 138:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 139:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
 140:./shy_fft.h   **** };
 141:./shy_fft.h   **** 
 142:./shy_fft.h   **** template <>
 143:./shy_fft.h   **** struct Math<double>
 144:./shy_fft.h   **** {
 145:./shy_fft.h   ****     inline double pi() const { return 3.141592653589793; }
 146:./shy_fft.h   ****     inline float  sqrt_2_div_2() const { return 0.7071067811865476; }
 147:./shy_fft.h   ****     inline double cos(double x) { return cos(x); }
 148:./shy_fft.h   ****     inline double sin(double x) { return sin(x); }
 149:./shy_fft.h   **** };
 150:./shy_fft.h   **** 
 151:./shy_fft.h   **** 
 152:./shy_fft.h   **** // Look-up table for trigonometric data.
 153:./shy_fft.h   **** template <typename T, size_t num_passes>
 154:./shy_fft.h   **** class LutPhasor
 155:./shy_fft.h   **** {
 156:./shy_fft.h   ****   public:
 157:./shy_fft.h   ****     LutPhasor() {}
 158:./shy_fft.h   ****     ~LutPhasor() {}
 159:./shy_fft.h   **** 
 160:./shy_fft.h   ****     void Init()
 161:./shy_fft.h   ****     {
 162:./shy_fft.h   ****         Math<T> math;
 163:./shy_fft.h   **** 
 164:./shy_fft.h   ****         for(size_t pass = 3; pass < num_passes; ++pass)
 165:./shy_fft.h   ****         {
ARM GAS  /tmp/cchieLBQ.s 			page 23


 166:./shy_fft.h   ****             size_t pass_size = 1L << (pass - 1);
 167:./shy_fft.h   ****             T*     pass_ptr  = &trig_lut_[(1L << (pass - 1)) - 4];
 168:./shy_fft.h   ****             T      increment = math.pi() / (pass_size << 1);
 169:./shy_fft.h   ****             T      phase     = 0.0;
 170:./shy_fft.h   ****             for(size_t i = 0; i < pass_size; ++i)
 171:./shy_fft.h   ****             {
 172:./shy_fft.h   ****                 pass_ptr[i] = math.cos(phase);
 173:./shy_fft.h   ****                 phase += increment;
 174:./shy_fft.h   ****             }
 175:./shy_fft.h   ****         }
 176:./shy_fft.h   ****     }
 177:./shy_fft.h   **** 
 178:./shy_fft.h   ****     inline void Start(size_t pass)
 179:./shy_fft.h   ****     {
 180:./shy_fft.h   ****         size_t pass_size = 1 << (pass - 1);
 181:./shy_fft.h   ****         cos_ptr_         = &trig_lut_[pass_size - 4 + 1];
 182:./shy_fft.h   ****         sin_ptr_         = &trig_lut_[pass_size + pass_size - 4 - 1];
 183:./shy_fft.h   ****     }
 184:./shy_fft.h   **** 
 185:./shy_fft.h   ****     inline void Rotate()
 186:./shy_fft.h   ****     {
 187:./shy_fft.h   ****         ++cos_ptr_;
 188:./shy_fft.h   ****         --sin_ptr_;
 189:./shy_fft.h   ****     }
 190:./shy_fft.h   **** 
 191:./shy_fft.h   ****     inline T cos() const { return *cos_ptr_; }
 192:./shy_fft.h   ****     inline T sin() const { return *sin_ptr_; }
 193:./shy_fft.h   **** 
 194:./shy_fft.h   ****   private:
 195:./shy_fft.h   ****     T  trig_lut_[(1 << (num_passes - 1)) - 4];
 196:./shy_fft.h   ****     T* cos_ptr_;
 197:./shy_fft.h   ****     T* sin_ptr_;
 198:./shy_fft.h   **** };
 199:./shy_fft.h   **** 
 200:./shy_fft.h   **** template <typename T>
 201:./shy_fft.h   **** struct LutPhasor<T, 0>
 202:./shy_fft.h   **** {
 203:./shy_fft.h   ****     void Init(){};
 204:./shy_fft.h   **** };
 205:./shy_fft.h   **** template <typename T>
 206:./shy_fft.h   **** struct LutPhasor<T, 1>
 207:./shy_fft.h   **** {
 208:./shy_fft.h   ****     void Init(){};
 209:./shy_fft.h   **** };
 210:./shy_fft.h   **** template <typename T>
 211:./shy_fft.h   **** struct LutPhasor<T, 2>
 212:./shy_fft.h   **** {
 213:./shy_fft.h   ****     void Init(){};
 214:./shy_fft.h   **** };
 215:./shy_fft.h   **** 
 216:./shy_fft.h   **** template <typename T>
 217:./shy_fft.h   **** struct LutPhasor<T, 3>
 218:./shy_fft.h   **** {
 219:./shy_fft.h   ****     void     Init(){};
 220:./shy_fft.h   ****     void     Start(size_t){};
 221:./shy_fft.h   ****     void     Rotate(){};
 222:./shy_fft.h   ****     inline T cos() const { return 1.0; }
ARM GAS  /tmp/cchieLBQ.s 			page 24


 223:./shy_fft.h   ****     inline T sin() const { return 0.0; }
 224:./shy_fft.h   **** };
 225:./shy_fft.h   **** 
 226:./shy_fft.h   **** 
 227:./shy_fft.h   **** // Another way of generating roots of unity.
 228:./shy_fft.h   **** template <typename T, size_t num_passes>
 229:./shy_fft.h   **** class RotationPhasor
 230:./shy_fft.h   **** {
 231:./shy_fft.h   ****   public:
 232:./shy_fft.h   ****     RotationPhasor() {}
 233:./shy_fft.h   ****     ~RotationPhasor() {}
 234:./shy_fft.h   **** 
 235:./shy_fft.h   ****     void Init()
 236:./shy_fft.h   ****     {
 237:./shy_fft.h   ****         Math<T> math;
 238:./shy_fft.h   ****         for(size_t pass = 3; pass < num_passes; ++pass)
 221              		.loc 3 238 20 view .LVU61
 222 0036 4FF0030A 		mov	r10, #3
 223              	.LBE146:
 224              	.LBE145:
 225              	.LBE144:
 226              	.LBE143:
 227              	.LBE142:
  55:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 228              		.loc 1 55 10 view .LVU62
 229 003a 2160     		str	r1, [r4]
  53:dsp/pvoc/stft.cpp **** 
 230              		.loc 1 53 18 view .LVU63
 231 003c 2361     		str	r3, [r4, #16]
  55:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 232              		.loc 1 55 5 is_stmt 1 view .LVU64
  59:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 233              		.loc 1 59 5 view .LVU65
 234              	.LVL15:
 235              	.LBB163:
 236              	.LBI142:
 239:./shy_fft.h   ****         {
 240:./shy_fft.h   ****             size_t index            = (pass - 3) << 1;
 241:./shy_fft.h   ****             T      angle            = math.pi() / (1 << pass);
 242:./shy_fft.h   ****             sin_cos_lut_[index]     = math.cos(angle);
 243:./shy_fft.h   ****             sin_cos_lut_[index + 1] = math.sin(angle);
 244:./shy_fft.h   ****         }
 245:./shy_fft.h   ****     }
 246:./shy_fft.h   **** 
 247:./shy_fft.h   ****     inline void Start(size_t pass)
 248:./shy_fft.h   ****     {
 249:./shy_fft.h   ****         size_t index = (pass - 3) << 1;
 250:./shy_fft.h   ****         cos_ = real_ = sin_cos_lut_[index];
 251:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 252:./shy_fft.h   ****     }
 253:./shy_fft.h   **** 
 254:./shy_fft.h   ****     inline void Rotate()
 255:./shy_fft.h   ****     {
 256:./shy_fft.h   ****         T temp = cos_ * real_ - sin_ * imag_;
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 258:./shy_fft.h   ****         cos_   = temp;
 259:./shy_fft.h   ****     }
ARM GAS  /tmp/cchieLBQ.s 			page 25


 260:./shy_fft.h   **** 
 261:./shy_fft.h   ****     inline T cos() const { return cos_; }
 262:./shy_fft.h   ****     inline T sin() const { return sin_; }
 263:./shy_fft.h   **** 
 264:./shy_fft.h   ****   private:
 265:./shy_fft.h   ****     T sin_cos_lut_[(num_passes - 3) << 1];
 266:./shy_fft.h   ****     T cos_;
 267:./shy_fft.h   ****     T sin_;
 268:./shy_fft.h   ****     T real_;
 269:./shy_fft.h   ****     T imag_;
 270:./shy_fft.h   **** };
 271:./shy_fft.h   **** 
 272:./shy_fft.h   **** template <typename T>
 273:./shy_fft.h   **** struct RotationPhasor<T, 0>
 274:./shy_fft.h   **** {
 275:./shy_fft.h   ****     void Init(){};
 276:./shy_fft.h   **** };
 277:./shy_fft.h   **** template <typename T>
 278:./shy_fft.h   **** struct RotationPhasor<T, 1>
 279:./shy_fft.h   **** {
 280:./shy_fft.h   ****     void Init(){};
 281:./shy_fft.h   **** };
 282:./shy_fft.h   **** template <typename T>
 283:./shy_fft.h   **** struct RotationPhasor<T, 2>
 284:./shy_fft.h   **** {
 285:./shy_fft.h   ****     void Init(){};
 286:./shy_fft.h   **** };
 287:./shy_fft.h   **** 
 288:./shy_fft.h   **** template <typename T>
 289:./shy_fft.h   **** struct RotationPhasor<T, 3>
 290:./shy_fft.h   **** {
 291:./shy_fft.h   ****     void     Init(){};
 292:./shy_fft.h   ****     void     Start(size_t){};
 293:./shy_fft.h   ****     void     Rotate(){};
 294:./shy_fft.h   ****     inline T cos() const { return 1.0; }
 295:./shy_fft.h   ****     inline T sin() const { return 0.0; }
 296:./shy_fft.h   **** };
 297:./shy_fft.h   **** 
 298:./shy_fft.h   **** // Direct transform
 299:./shy_fft.h   **** template <typename T, size_t num_passes, typename Phasor>
 300:./shy_fft.h   **** struct DirectTransform
 301:./shy_fft.h   **** {
 302:./shy_fft.h   ****   private:
 303:./shy_fft.h   ****     enum
 304:./shy_fft.h   ****     {
 305:./shy_fft.h   ****         size = 1 << num_passes
 306:./shy_fft.h   ****     };
 307:./shy_fft.h   **** 
 308:./shy_fft.h   ****   public:
 309:./shy_fft.h   ****     void operator()(T* input, T* output, const uint8_t* bit_rev, Phasor* phasor)
 310:./shy_fft.h   ****     {
 311:./shy_fft.h   ****         T*      s;
 312:./shy_fft.h   ****         T*      d;
 313:./shy_fft.h   ****         Math<T> math;
 314:./shy_fft.h   **** 
 315:./shy_fft.h   ****         // First and second pass.
 316:./shy_fft.h   ****         d = output;
ARM GAS  /tmp/cchieLBQ.s 			page 26


 317:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 4)
 318:./shy_fft.h   ****         {
 319:./shy_fft.h   ****             const T* s  = input;
 320:./shy_fft.h   ****             size_t   r0 = num_passes <= 8
 321:./shy_fft.h   ****                             ? bit_rev[i >> 2]
 322:./shy_fft.h   ****                             : ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 323:./shy_fft.h   ****                                   >> (16 - num_passes);
 324:./shy_fft.h   ****             size_t r1 = r0 + 2 * (size >> 2);
 325:./shy_fft.h   ****             size_t r2 = r0 + 1 * (size >> 2);
 326:./shy_fft.h   ****             size_t r3 = r0 + 3 * (size >> 2);
 327:./shy_fft.h   **** 
 328:./shy_fft.h   ****             d[1] = s[r0] - s[r1];
 329:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 330:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 331:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 332:./shy_fft.h   ****             d[0] = a + b;
 333:./shy_fft.h   ****             d[2] = a - b;
 334:./shy_fft.h   ****             d += 4;
 335:./shy_fft.h   ****         }
 336:./shy_fft.h   **** 
 337:./shy_fft.h   ****         // Third pass.
 338:./shy_fft.h   ****         s = output;
 339:./shy_fft.h   ****         d = input;
 340:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 8)
 341:./shy_fft.h   ****         {
 342:./shy_fft.h   ****             T v;
 343:./shy_fft.h   **** 
 344:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 345:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 346:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 347:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 348:./shy_fft.h   **** 
 349:./shy_fft.h   ****             v        = (s[i + 5] - s[i + 7]) * math.sqrt_2_div_2();
 350:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 351:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 352:./shy_fft.h   **** 
 353:./shy_fft.h   ****             v        = (s[i + 5] + s[i + 7]) * math.sqrt_2_div_2();
 354:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 355:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 356:./shy_fft.h   ****         }
 357:./shy_fft.h   **** 
 358:./shy_fft.h   ****         // Remaining passes.
 359:./shy_fft.h   ****         for(size_t pass = 3; pass < num_passes; ++pass)
 360:./shy_fft.h   ****         {
 361:./shy_fft.h   ****             // Flip source and destination pointers
 362:./shy_fft.h   ****             {
 363:./shy_fft.h   ****                 T* tmp = s;
 364:./shy_fft.h   ****                 s      = d;
 365:./shy_fft.h   ****                 d      = tmp;
 366:./shy_fft.h   ****             }
 367:./shy_fft.h   **** 
 368:./shy_fft.h   ****             size_t n   = 1 << pass;
 369:./shy_fft.h   ****             size_t n_2 = n >> 1;
 370:./shy_fft.h   **** 
 371:./shy_fft.h   ****             for(size_t i = 0; i < size; i += (n << 1))
 372:./shy_fft.h   ****             {
 373:./shy_fft.h   ****                 T* s1r = s + i;
ARM GAS  /tmp/cchieLBQ.s 			page 27


 374:./shy_fft.h   ****                 T* s2r = s1r + n;
 375:./shy_fft.h   ****                 T* dr  = d + i;
 376:./shy_fft.h   ****                 T* di  = dr + n;
 377:./shy_fft.h   **** 
 378:./shy_fft.h   ****                 dr[0]   = s1r[0] + s2r[0];
 379:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 380:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 381:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 382:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 383:./shy_fft.h   ****                 T* s2i  = s1i + n;
 384:./shy_fft.h   ****                 phasor->Start(pass);
 385:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 386:./shy_fft.h   ****                 {
 387:./shy_fft.h   ****                     T c = phasor->cos();
 388:./shy_fft.h   ****                     T s = phasor->sin();
 389:./shy_fft.h   ****                     T v;
 390:./shy_fft.h   **** 
 391:./shy_fft.h   ****                     v      = s2r[j] * c - s2i[j] * s;
 392:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 393:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 394:./shy_fft.h   **** 
 395:./shy_fft.h   ****                     v         = s2r[j] * s + s2i[j] * c;
 396:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 397:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 398:./shy_fft.h   ****                     phasor->Rotate();
 399:./shy_fft.h   ****                 }
 400:./shy_fft.h   ****             }
 401:./shy_fft.h   ****         }
 402:./shy_fft.h   **** 
 403:./shy_fft.h   ****         // Annoying additional data copy step.
 404:./shy_fft.h   ****         if(d != output)
 405:./shy_fft.h   ****         {
 406:./shy_fft.h   ****             std::copy(&d[0], &d[size], &output[0]);
 407:./shy_fft.h   ****         }
 408:./shy_fft.h   ****     }
 409:./shy_fft.h   **** 
 410:./shy_fft.h   ****     // The exact same thing but with "num_passes" as a run-time argument.
 411:./shy_fft.h   ****     void operator()(T*             input,
 412:./shy_fft.h   ****                     T*             output,
 413:./shy_fft.h   ****                     const uint8_t* bit_rev,
 414:./shy_fft.h   ****                     Phasor*        phasor,
 415:./shy_fft.h   ****                     size_t         rt_num_passes)
 416:./shy_fft.h   ****     {
 417:./shy_fft.h   ****         T*      s;
 418:./shy_fft.h   ****         T*      d;
 419:./shy_fft.h   ****         Math<T> math;
 420:./shy_fft.h   ****         size_t  rt_size = 1 << rt_num_passes;
 421:./shy_fft.h   ****         // First and second pass.
 422:./shy_fft.h   ****         d = output;
 423:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 4)
 424:./shy_fft.h   ****         {
 425:./shy_fft.h   ****             const T* s  = input;
 426:./shy_fft.h   ****             size_t   r0 = ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 427:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 428:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 429:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 430:./shy_fft.h   ****             size_t r3 = r0 + 3 * (rt_size >> 2);
ARM GAS  /tmp/cchieLBQ.s 			page 28


 431:./shy_fft.h   **** 
 432:./shy_fft.h   ****             d[1] = s[r0] - s[r1];
 433:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 434:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 435:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 436:./shy_fft.h   ****             d[0] = a + b;
 437:./shy_fft.h   ****             d[2] = a - b;
 438:./shy_fft.h   ****             d += 4;
 439:./shy_fft.h   ****         }
 440:./shy_fft.h   **** 
 441:./shy_fft.h   ****         // Third pass.
 442:./shy_fft.h   ****         s = output;
 443:./shy_fft.h   ****         d = input;
 444:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 8)
 445:./shy_fft.h   ****         {
 446:./shy_fft.h   ****             T v;
 447:./shy_fft.h   **** 
 448:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 449:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 450:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 451:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 452:./shy_fft.h   **** 
 453:./shy_fft.h   ****             v        = (s[i + 5] - s[i + 7]) * math.sqrt_2_div_2();
 454:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 455:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 456:./shy_fft.h   **** 
 457:./shy_fft.h   ****             v        = (s[i + 5] + s[i + 7]) * math.sqrt_2_div_2();
 458:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 459:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 460:./shy_fft.h   ****         }
 461:./shy_fft.h   **** 
 462:./shy_fft.h   ****         // Remaining passes.
 463:./shy_fft.h   ****         for(size_t pass = 3; pass < rt_num_passes; ++pass)
 464:./shy_fft.h   ****         {
 465:./shy_fft.h   ****             // Flip source and destination pointers
 466:./shy_fft.h   ****             {
 467:./shy_fft.h   ****                 T* tmp = s;
 468:./shy_fft.h   ****                 s      = d;
 469:./shy_fft.h   ****                 d      = tmp;
 470:./shy_fft.h   ****             }
 471:./shy_fft.h   **** 
 472:./shy_fft.h   ****             size_t n   = 1 << pass;
 473:./shy_fft.h   ****             size_t n_2 = n >> 1;
 474:./shy_fft.h   **** 
 475:./shy_fft.h   ****             for(size_t i = 0; i < rt_size; i += (n << 1))
 476:./shy_fft.h   ****             {
 477:./shy_fft.h   ****                 T* s1r = s + i;
 478:./shy_fft.h   ****                 T* s2r = s1r + n;
 479:./shy_fft.h   ****                 T* dr  = d + i;
 480:./shy_fft.h   ****                 T* di  = dr + n;
 481:./shy_fft.h   **** 
 482:./shy_fft.h   ****                 dr[0]   = s1r[0] + s2r[0];
 483:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 484:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 485:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 486:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 487:./shy_fft.h   ****                 T* s2i  = s1i + n;
ARM GAS  /tmp/cchieLBQ.s 			page 29


 488:./shy_fft.h   ****                 phasor->Start(pass);
 489:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 490:./shy_fft.h   ****                 {
 491:./shy_fft.h   ****                     T c = phasor->cos();
 492:./shy_fft.h   ****                     T s = phasor->sin();
 493:./shy_fft.h   ****                     T v;
 494:./shy_fft.h   **** 
 495:./shy_fft.h   ****                     v      = s2r[j] * c - s2i[j] * s;
 496:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 497:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 498:./shy_fft.h   **** 
 499:./shy_fft.h   ****                     v         = s2r[j] * s + s2i[j] * c;
 500:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 501:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 502:./shy_fft.h   ****                     phasor->Rotate();
 503:./shy_fft.h   ****                 }
 504:./shy_fft.h   ****             }
 505:./shy_fft.h   ****         }
 506:./shy_fft.h   **** 
 507:./shy_fft.h   ****         // Annoying additional data copy step.
 508:./shy_fft.h   ****         if(d != output)
 509:./shy_fft.h   ****         {
 510:./shy_fft.h   ****             std::copy(&d[0], &d[rt_size], &output[0]);
 511:./shy_fft.h   ****         }
 512:./shy_fft.h   ****     }
 513:./shy_fft.h   **** };
 514:./shy_fft.h   **** 
 515:./shy_fft.h   **** template <typename T, typename Phasor>
 516:./shy_fft.h   **** struct DirectTransform<T, 0, Phasor>
 517:./shy_fft.h   **** {
 518:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 519:./shy_fft.h   ****     {
 520:./shy_fft.h   ****         o[0] = i[0];
 521:./shy_fft.h   ****     }
 522:./shy_fft.h   **** };
 523:./shy_fft.h   **** 
 524:./shy_fft.h   **** template <typename T, typename Phasor>
 525:./shy_fft.h   **** struct DirectTransform<T, 1, Phasor>
 526:./shy_fft.h   **** {
 527:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 528:./shy_fft.h   ****     {
 529:./shy_fft.h   ****         o[0] = i[0] + i[1];
 530:./shy_fft.h   ****         o[1] = i[0] - i[1];
 531:./shy_fft.h   ****     }
 532:./shy_fft.h   **** };
 533:./shy_fft.h   **** 
 534:./shy_fft.h   **** template <typename T, typename Phasor>
 535:./shy_fft.h   **** struct DirectTransform<T, 2, Phasor>
 536:./shy_fft.h   **** {
 537:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 538:./shy_fft.h   ****     {
 539:./shy_fft.h   ****         o[1] = i[0] - i[2];
 540:./shy_fft.h   ****         o[3] = i[1] - i[3];
 541:./shy_fft.h   ****         T a  = i[0] + i[2];
 542:./shy_fft.h   ****         T b  = i[1] + i[3];
 543:./shy_fft.h   ****         o[0] = a + b;
 544:./shy_fft.h   ****         o[2] = a - b;
ARM GAS  /tmp/cchieLBQ.s 			page 30


 545:./shy_fft.h   ****     }
 546:./shy_fft.h   **** };
 547:./shy_fft.h   **** 
 548:./shy_fft.h   **** 
 549:./shy_fft.h   **** // Inverse transform
 550:./shy_fft.h   **** template <typename T, size_t num_passes, typename Phasor>
 551:./shy_fft.h   **** struct InverseTransform
 552:./shy_fft.h   **** {
 553:./shy_fft.h   ****   private:
 554:./shy_fft.h   ****     enum
 555:./shy_fft.h   ****     {
 556:./shy_fft.h   ****         size = 1 << num_passes
 557:./shy_fft.h   ****     };
 558:./shy_fft.h   **** 
 559:./shy_fft.h   ****   public:
 560:./shy_fft.h   ****     void operator()(T* input, T* output, const uint8_t* bit_rev, Phasor* phasor)
 561:./shy_fft.h   ****     {
 562:./shy_fft.h   ****         T*      s = (T*)(input);
 563:./shy_fft.h   ****         T*      d = output;
 564:./shy_fft.h   ****         Math<T> math;
 565:./shy_fft.h   **** 
 566:./shy_fft.h   ****         // Remaining passes.
 567:./shy_fft.h   ****         for(size_t pass = num_passes - 1; pass >= 3; --pass)
 568:./shy_fft.h   ****         {
 569:./shy_fft.h   ****             size_t n   = 1 << pass;
 570:./shy_fft.h   ****             size_t n_2 = n >> 1;
 571:./shy_fft.h   **** 
 572:./shy_fft.h   ****             for(size_t i = 0; i < size; i += (n << 1))
 573:./shy_fft.h   ****             {
 574:./shy_fft.h   ****                 T* sr  = s + i;
 575:./shy_fft.h   ****                 T* si  = sr + n;
 576:./shy_fft.h   ****                 T* d1r = d + i;
 577:./shy_fft.h   ****                 T* d2r = d1r + n;
 578:./shy_fft.h   **** 
 579:./shy_fft.h   ****                 d1r[0]   = sr[0] + si[0];
 580:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 581:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 582:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 583:./shy_fft.h   **** 
 584:./shy_fft.h   ****                 T* d1i = d1r + n_2;
 585:./shy_fft.h   ****                 T* d2i = d1i + n;
 586:./shy_fft.h   ****                 phasor->Start(pass);
 587:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 588:./shy_fft.h   ****                 {
 589:./shy_fft.h   ****                     d1r[j] = sr[j] + si[-j];
 590:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 591:./shy_fft.h   **** 
 592:./shy_fft.h   ****                     T c  = phasor->cos();
 593:./shy_fft.h   ****                     T s  = phasor->sin();
 594:./shy_fft.h   ****                     T vr = sr[j] - si[-j];
 595:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 596:./shy_fft.h   **** 
 597:./shy_fft.h   ****                     d2r[j] = vr * c + vi * s;
 598:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 599:./shy_fft.h   ****                     phasor->Rotate();
 600:./shy_fft.h   ****                 }
 601:./shy_fft.h   ****             }
ARM GAS  /tmp/cchieLBQ.s 			page 31


 602:./shy_fft.h   **** 
 603:./shy_fft.h   ****             // Flip source and destination pointers for the next pass.
 604:./shy_fft.h   ****             if(d == output)
 605:./shy_fft.h   ****             {
 606:./shy_fft.h   ****                 s = output;
 607:./shy_fft.h   ****                 d = input;
 608:./shy_fft.h   ****             }
 609:./shy_fft.h   ****             else
 610:./shy_fft.h   ****             {
 611:./shy_fft.h   ****                 s = input;
 612:./shy_fft.h   ****                 d = output;
 613:./shy_fft.h   ****             }
 614:./shy_fft.h   ****         }
 615:./shy_fft.h   **** 
 616:./shy_fft.h   ****         // Copy data if necessary.
 617:./shy_fft.h   ****         if(d == output)
 618:./shy_fft.h   ****         {
 619:./shy_fft.h   ****             std::copy(&s[0], &s[size], &output[0]);
 620:./shy_fft.h   ****         }
 621:./shy_fft.h   **** 
 622:./shy_fft.h   ****         s = output;
 623:./shy_fft.h   ****         d = input;
 624:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 8)
 625:./shy_fft.h   ****         {
 626:./shy_fft.h   ****             T vr, vi;
 627:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 628:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 629:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 630:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 631:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 632:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 633:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 634:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 635:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 636:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 637:./shy_fft.h   ****         }
 638:./shy_fft.h   **** 
 639:./shy_fft.h   ****         // First and second pass.
 640:./shy_fft.h   ****         s = input;
 641:./shy_fft.h   ****         d = output;
 642:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 4)
 643:./shy_fft.h   ****         {
 644:./shy_fft.h   ****             size_t r0 = num_passes <= 8
 645:./shy_fft.h   ****                             ? bit_rev[i >> 2]
 646:./shy_fft.h   ****                             : ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 647:./shy_fft.h   ****                                   >> (16 - num_passes);
 648:./shy_fft.h   ****             size_t r1 = r0 + 2 * (size >> 2);
 649:./shy_fft.h   ****             size_t r2 = r0 + 1 * (size >> 2);
 650:./shy_fft.h   ****             size_t r3 = r0 + 3 * (size >> 2);
 651:./shy_fft.h   **** 
 652:./shy_fft.h   ****             T b_0 = s[0] + s[2];
 653:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 654:./shy_fft.h   ****             T b_1 = s[1] * T(2);
 655:./shy_fft.h   ****             T b_3 = s[3] * T(2);
 656:./shy_fft.h   **** 
 657:./shy_fft.h   ****             d[r0] = b_0 + b_1;
 658:./shy_fft.h   ****             d[r1] = b_0 - b_1;
ARM GAS  /tmp/cchieLBQ.s 			page 32


 659:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 660:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 661:./shy_fft.h   ****             s += 4;
 662:./shy_fft.h   ****         }
 663:./shy_fft.h   ****     }
 664:./shy_fft.h   **** 
 665:./shy_fft.h   ****     void operator()(T*             input,
 666:./shy_fft.h   ****                     T*             output,
 667:./shy_fft.h   ****                     const uint8_t* bit_rev,
 668:./shy_fft.h   ****                     Phasor*        phasor,
 669:./shy_fft.h   ****                     size_t         rt_num_passes)
 670:./shy_fft.h   ****     {
 671:./shy_fft.h   ****         T*      s = (T*)(input);
 672:./shy_fft.h   ****         T*      d = output;
 673:./shy_fft.h   ****         Math<T> math;
 674:./shy_fft.h   **** 
 675:./shy_fft.h   ****         size_t rt_size = 1 << rt_num_passes;
 676:./shy_fft.h   **** 
 677:./shy_fft.h   ****         // Remaining passes.
 678:./shy_fft.h   ****         for(size_t pass = rt_num_passes - 1; pass >= 3; --pass)
 679:./shy_fft.h   ****         {
 680:./shy_fft.h   ****             size_t n   = 1 << pass;
 681:./shy_fft.h   ****             size_t n_2 = n >> 1;
 682:./shy_fft.h   **** 
 683:./shy_fft.h   ****             for(size_t i = 0; i < rt_size; i += (n << 1))
 684:./shy_fft.h   ****             {
 685:./shy_fft.h   ****                 T* sr  = s + i;
 686:./shy_fft.h   ****                 T* si  = sr + n;
 687:./shy_fft.h   ****                 T* d1r = d + i;
 688:./shy_fft.h   ****                 T* d2r = d1r + n;
 689:./shy_fft.h   **** 
 690:./shy_fft.h   ****                 d1r[0]   = sr[0] + si[0];
 691:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 692:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 693:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 694:./shy_fft.h   **** 
 695:./shy_fft.h   ****                 T* d1i = d1r + n_2;
 696:./shy_fft.h   ****                 T* d2i = d1i + n;
 697:./shy_fft.h   ****                 phasor->Start(pass);
 698:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 699:./shy_fft.h   ****                 {
 700:./shy_fft.h   ****                     d1r[j] = sr[j] + si[-j];
 701:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 702:./shy_fft.h   **** 
 703:./shy_fft.h   ****                     T c  = phasor->cos();
 704:./shy_fft.h   ****                     T s  = phasor->sin();
 705:./shy_fft.h   ****                     T vr = sr[j] - si[-j];
 706:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 707:./shy_fft.h   **** 
 708:./shy_fft.h   ****                     d2r[j] = vr * c + vi * s;
 709:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 710:./shy_fft.h   ****                     phasor->Rotate();
 711:./shy_fft.h   ****                 }
 712:./shy_fft.h   ****             }
 713:./shy_fft.h   **** 
 714:./shy_fft.h   ****             // Flip source and destination pointers for the next pass.
 715:./shy_fft.h   ****             if(d == output)
ARM GAS  /tmp/cchieLBQ.s 			page 33


 716:./shy_fft.h   ****             {
 717:./shy_fft.h   ****                 s = output;
 718:./shy_fft.h   ****                 d = input;
 719:./shy_fft.h   ****             }
 720:./shy_fft.h   ****             else
 721:./shy_fft.h   ****             {
 722:./shy_fft.h   ****                 s = input;
 723:./shy_fft.h   ****                 d = output;
 724:./shy_fft.h   ****             }
 725:./shy_fft.h   ****         }
 726:./shy_fft.h   **** 
 727:./shy_fft.h   ****         // Copy data if necessary.
 728:./shy_fft.h   ****         if(d == output)
 729:./shy_fft.h   ****         {
 730:./shy_fft.h   ****             std::copy(&s[0], &s[rt_size], &output[0]);
 731:./shy_fft.h   ****         }
 732:./shy_fft.h   **** 
 733:./shy_fft.h   ****         s = output;
 734:./shy_fft.h   ****         d = input;
 735:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 8)
 736:./shy_fft.h   ****         {
 737:./shy_fft.h   ****             T vr, vi;
 738:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 739:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 740:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 741:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 742:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 743:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 744:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 745:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 746:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 747:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 748:./shy_fft.h   ****         }
 749:./shy_fft.h   **** 
 750:./shy_fft.h   ****         // First and second pass.
 751:./shy_fft.h   ****         s = input;
 752:./shy_fft.h   ****         d = output;
 753:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 4)
 754:./shy_fft.h   ****         {
 755:./shy_fft.h   ****             size_t r0 = ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 756:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 757:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 758:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 759:./shy_fft.h   ****             size_t r3 = r0 + 3 * (rt_size >> 2);
 760:./shy_fft.h   **** 
 761:./shy_fft.h   ****             T b_0 = s[0] + s[2];
 762:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 763:./shy_fft.h   ****             T b_1 = s[1] * T(2);
 764:./shy_fft.h   ****             T b_3 = s[3] * T(2);
 765:./shy_fft.h   **** 
 766:./shy_fft.h   ****             d[r0] = b_0 + b_1;
 767:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 768:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 769:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 770:./shy_fft.h   ****             s += 4;
 771:./shy_fft.h   ****         }
 772:./shy_fft.h   ****     }
ARM GAS  /tmp/cchieLBQ.s 			page 34


 773:./shy_fft.h   **** };
 774:./shy_fft.h   **** 
 775:./shy_fft.h   **** template <typename T, typename Phasor>
 776:./shy_fft.h   **** struct InverseTransform<T, 0, Phasor>
 777:./shy_fft.h   **** {
 778:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 779:./shy_fft.h   ****     {
 780:./shy_fft.h   ****         o[0] = i[0];
 781:./shy_fft.h   ****     }
 782:./shy_fft.h   **** };
 783:./shy_fft.h   **** 
 784:./shy_fft.h   **** template <typename T, typename Phasor>
 785:./shy_fft.h   **** struct InverseTransform<T, 1, Phasor>
 786:./shy_fft.h   **** {
 787:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 788:./shy_fft.h   ****     {
 789:./shy_fft.h   ****         o[0] = i[0] + i[1];
 790:./shy_fft.h   ****         o[1] = i[0] - i[1];
 791:./shy_fft.h   ****     }
 792:./shy_fft.h   **** };
 793:./shy_fft.h   **** 
 794:./shy_fft.h   **** template <typename T, typename Phasor>
 795:./shy_fft.h   **** struct InverseTransform<T, 2, Phasor>
 796:./shy_fft.h   **** {
 797:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 798:./shy_fft.h   ****     {
 799:./shy_fft.h   ****         T a = i[0] + i[2];
 800:./shy_fft.h   ****         T b = i[0] - i[2];
 801:./shy_fft.h   **** 
 802:./shy_fft.h   ****         o[0] = a + i[1] * T(2);
 803:./shy_fft.h   ****         o[2] = a - i[1] * T(2);
 804:./shy_fft.h   ****         o[1] = b + i[3] * T(2);
 805:./shy_fft.h   ****         o[3] = b - i[3] * T(2);
 806:./shy_fft.h   ****     }
 807:./shy_fft.h   **** };
 808:./shy_fft.h   **** 
 809:./shy_fft.h   **** 
 810:./shy_fft.h   **** template <typename T                               = float,
 811:./shy_fft.h   ****           size_t size                              = 16,
 812:./shy_fft.h   ****           template <typename, size_t> class Phasor = LutPhasor>
 813:./shy_fft.h   **** class ShyFFT
 814:./shy_fft.h   **** {
 815:./shy_fft.h   ****   public:
 816:./shy_fft.h   ****     enum
 817:./shy_fft.h   ****     {
 818:./shy_fft.h   ****         num_passes = Log2<size>::value,
 819:./shy_fft.h   ****         max_size   = size
 820:./shy_fft.h   ****     };
 821:./shy_fft.h   **** 
 822:./shy_fft.h   ****   private:
 823:./shy_fft.h   ****     typedef Phasor<T, num_passes> PhasorType;
 824:./shy_fft.h   **** 
 825:./shy_fft.h   ****   public:
 826:./shy_fft.h   ****     ShyFFT() {}
 827:./shy_fft.h   ****     ~ShyFFT() {}
 828:./shy_fft.h   **** 
 829:./shy_fft.h   ****     void Init()
ARM GAS  /tmp/cchieLBQ.s 			page 35


 237              		.loc 3 829 10 view .LVU66
 238              	.LBB160:
 830:./shy_fft.h   ****     {
 831:./shy_fft.h   ****         bit_rev_[0] = 0;
 239              		.loc 3 831 9 is_stmt 0 view .LVU67
 240 003e 0023     		movs	r3, #0
 241 0040 81F85830 		strb	r3, [r1, #88]
 242              	.LVL16:
 243              		.loc 3 831 9 view .LVU68
 244              	.LBE160:
 245              	.LBE163:
 832:./shy_fft.h   ****         for(size_t i = 1; i < sizeof(bit_rev_); ++i)
 246              		.loc 3 832 29 is_stmt 1 view .LVU69
 247              	.LBB164:
 248              	.LBB161:
 249              	.LBB158:
 250              	.LBI144:
 235:./shy_fft.h   ****     {
 251              		.loc 3 235 10 view .LVU70
 252              	.LBB156:
 253              	.LBB154:
 238:./shy_fft.h   ****         {
 254              		.loc 3 238 35 view .LVU71
 255              	.L10:
 238:./shy_fft.h   ****         {
 256              		.loc 3 238 35 is_stmt 0 view .LVU72
 257              	.LBE154:
 258              	.LBE156:
 259              	.LBE158:
 260              	.LBE161:
 261              	.LBE164:
 136:./shy_fft.h   ****     inline float sqrt_2_div_2() const { return 0.7071067811865476f; }
 262              		.loc 3 136 31 is_stmt 1 view .LVU73
 263              	.LBB165:
 264              	.LBB162:
 265              	.LBB159:
 266              	.LBB157:
 267              	.LBB155:
 268              	.LBB147:
 241:./shy_fft.h   ****             sin_cos_lut_[index]     = math.cos(angle);
 269              		.loc 3 241 54 is_stmt 0 view .LVU74
 270 0044 0123     		movs	r3, #1
 241:./shy_fft.h   ****             sin_cos_lut_[index]     = math.cos(angle);
 271              		.loc 3 241 20 view .LVU75
 272 0046 9FED1D7A 		vldr.32	s14, .L12
 273 004a 0835     		adds	r5, r5, #8
 241:./shy_fft.h   ****             sin_cos_lut_[index]     = math.cos(angle);
 274              		.loc 3 241 54 view .LVU76
 275 004c 03FA0AF3 		lsl	r3, r3, r10
 276              	.LBE147:
 238:./shy_fft.h   ****         {
 277              		.loc 3 238 9 view .LVU77
 278 0050 0AF1010A 		add	r10, r10, #1
 279              	.LVL17:
 280              	.LBB152:
 241:./shy_fft.h   ****             sin_cos_lut_[index]     = math.cos(angle);
 281              		.loc 3 241 49 view .LVU78
ARM GAS  /tmp/cchieLBQ.s 			page 36


 282 0054 07EE903A 		vmov	s15, r3	@ int
 283 0058 F8EEE77A 		vcvt.f32.s32	s15, s15
 241:./shy_fft.h   ****             sin_cos_lut_[index]     = math.cos(angle);
 284              		.loc 3 241 20 view .LVU79
 285 005c 87EE278A 		vdiv.f32	s16, s14, s15
 286              	.LVL18:
 287              	.LBB148:
 288              	.LBI148:
 138:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
 289              		.loc 3 138 18 is_stmt 1 view .LVU80
 290              	.LBB149:
 138:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
 291              		.loc 3 138 33 view .LVU81
 138:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
 292              		.loc 3 138 44 is_stmt 0 view .LVU82
 293 0060 B0EE480A 		vmov.f32	s0, s16
 294 0064 FFF7FEFF 		bl	cosf
 295              	.LVL19:
 138:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
 296              		.loc 3 138 44 view .LVU83
 297              	.LBE149:
 298              	.LBE148:
 242:./shy_fft.h   ****             sin_cos_lut_[index + 1] = math.sin(angle);
 299              		.loc 3 242 13 view .LVU84
 300 0068 05ED020A 		vstr.32	s0, [r5, #-8]
 301              	.LVL20:
 302              	.LBB150:
 303              	.LBI150:
 139:./shy_fft.h   **** };
 304              		.loc 3 139 18 is_stmt 1 view .LVU85
 305              	.LBB151:
 139:./shy_fft.h   **** };
 306              		.loc 3 139 33 view .LVU86
 139:./shy_fft.h   **** };
 307              		.loc 3 139 44 is_stmt 0 view .LVU87
 308 006c B0EE480A 		vmov.f32	s0, s16
 309 0070 FFF7FEFF 		bl	sinf
 310              	.LVL21:
 139:./shy_fft.h   **** };
 311              		.loc 3 139 44 view .LVU88
 312              	.LBE151:
 313              	.LBE150:
 314              	.LBE152:
 238:./shy_fft.h   ****         {
 315              		.loc 3 238 35 view .LVU89
 316 0074 BAF10C0F 		cmp	r10, #12
 317              	.LBB153:
 243:./shy_fft.h   ****         }
 318              		.loc 3 243 13 view .LVU90
 319 0078 05ED010A 		vstr.32	s0, [r5, #-4]
 320              	.LBE153:
 238:./shy_fft.h   ****         {
 321              		.loc 3 238 9 is_stmt 1 view .LVU91
 322              	.LVL22:
 238:./shy_fft.h   ****         {
 323              		.loc 3 238 35 view .LVU92
 324 007c E2D1     		bne	.L10
ARM GAS  /tmp/cchieLBQ.s 			page 37


 325              	.LVL23:
 238:./shy_fft.h   ****         {
 326              		.loc 3 238 35 is_stmt 0 view .LVU93
 327              	.LBE155:
 328              	.LBE157:
 329              	.LBE159:
 330              	.LBE162:
 331              	.LBE165:
  62:dsp/pvoc/stft.cpp ****     synthesis_ = &analysis_synthesis_buffer[buffer_size_];
 332              		.loc 1 62 5 is_stmt 1 view .LVU94
  63:dsp/pvoc/stft.cpp **** 
 333              		.loc 1 63 57 is_stmt 0 view .LVU95
 334 007e 2369     		ldr	r3, [r4, #16]
  69:dsp/pvoc/stft.cpp ****     modifier_      = modifier;
 335              		.loc 1 69 48 view .LVU96
 336 0080 4FF48052 		mov	r2, #4096
  62:dsp/pvoc/stft.cpp ****     synthesis_ = &analysis_synthesis_buffer[buffer_size_];
 337              		.loc 1 62 16 view .LVU97
 338 0084 E762     		str	r7, [r4, #44]
  63:dsp/pvoc/stft.cpp **** 
 339              		.loc 1 63 5 is_stmt 1 view .LVU98
  74:dsp/pvoc/stft.cpp **** }
 340              		.loc 1 74 10 is_stmt 0 view .LVU99
 341 0086 2046     		mov	r0, r4
  63:dsp/pvoc/stft.cpp **** 
 342              		.loc 1 63 18 view .LVU100
 343 0088 07EB4307 		add	r7, r7, r3, lsl #1
  70:dsp/pvoc/stft.cpp **** 
 344              		.loc 1 70 20 view .LVU101
 345 008c 019B     		ldr	r3, [sp, #4]
  65:dsp/pvoc/stft.cpp ****     ifft_out_ = fft_out_ = ifft_buffer;
 346              		.loc 1 65 24 view .LVU102
 347 008e C4F81490 		str	r9, [r4, #20]
  70:dsp/pvoc/stft.cpp **** 
 348              		.loc 1 70 20 view .LVU103
 349 0092 E364     		str	r3, [r4, #76]
  72:dsp/pvoc/stft.cpp **** 
 350              		.loc 1 72 17 view .LVU104
 351 0094 0023     		movs	r3, #0
  63:dsp/pvoc/stft.cpp **** 
 352              		.loc 1 63 16 view .LVU105
 353 0096 2763     		str	r7, [r4, #48]
  65:dsp/pvoc/stft.cpp ****     ifft_out_ = fft_out_ = ifft_buffer;
 354              		.loc 1 65 5 is_stmt 1 view .LVU106
  65:dsp/pvoc/stft.cpp ****     ifft_out_ = fft_out_ = ifft_buffer;
 355              		.loc 1 65 14 is_stmt 0 view .LVU107
 356 0098 C4F82090 		str	r9, [r4, #32]
  66:dsp/pvoc/stft.cpp **** 
 357              		.loc 1 66 5 is_stmt 1 view .LVU108
  68:dsp/pvoc/stft.cpp ****     window_stride_ = LUT_SINE_WINDOW_4096_SIZE / fft_size;
 358              		.loc 1 68 20 is_stmt 0 view .LVU109
 359 009c C4F824B0 		str	fp, [r4, #36]
  72:dsp/pvoc/stft.cpp **** 
 360              		.loc 1 72 17 view .LVU110
 361 00a0 A364     		str	r3, [r4, #72]
  69:dsp/pvoc/stft.cpp ****     modifier_      = modifier;
 362              		.loc 1 69 48 view .LVU111
ARM GAS  /tmp/cchieLBQ.s 			page 38


 363 00a2 B2FBF6F6 		udiv	r6, r2, r6
 364              	.LVL24:
  66:dsp/pvoc/stft.cpp **** 
 365              		.loc 1 66 15 view .LVU112
 366 00a6 C4E90688 		strd	r8, r8, [r4, #24]
  68:dsp/pvoc/stft.cpp ****     window_stride_ = LUT_SINE_WINDOW_4096_SIZE / fft_size;
 367              		.loc 1 68 5 is_stmt 1 view .LVU113
  69:dsp/pvoc/stft.cpp ****     modifier_      = modifier;
 368              		.loc 1 69 5 view .LVU114
  69:dsp/pvoc/stft.cpp ****     modifier_      = modifier;
 369              		.loc 1 69 20 is_stmt 0 view .LVU115
 370 00aa A662     		str	r6, [r4, #40]
  70:dsp/pvoc/stft.cpp **** 
 371              		.loc 1 70 5 is_stmt 1 view .LVU116
  72:dsp/pvoc/stft.cpp **** 
 372              		.loc 1 72 5 view .LVU117
  74:dsp/pvoc/stft.cpp **** }
 373              		.loc 1 74 5 view .LVU118
  75:dsp/pvoc/stft.cpp **** 
 374              		.loc 1 75 1 is_stmt 0 view .LVU119
 375 00ac 03B0     		add	sp, sp, #12
 376              		.cfi_def_cfa_offset 44
 377              		@ sp needed
 378 00ae BDEC028B 		vldm	sp!, {d8}
 379              		.cfi_restore 80
 380              		.cfi_restore 81
 381              		.cfi_def_cfa_offset 36
 382 00b2 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 383              		.cfi_restore 14
 384              		.cfi_restore 11
 385              		.cfi_restore 10
 386              		.cfi_restore 9
 387              		.cfi_restore 8
 388              		.cfi_restore 7
 389              		.cfi_restore 6
 390              		.cfi_restore 5
 391              		.cfi_restore 4
 392              		.cfi_def_cfa_offset 0
 393              	.LVL25:
  74:dsp/pvoc/stft.cpp **** }
 394              		.loc 1 74 10 view .LVU120
 395 00b6 FFF7FEBF 		b	_ZN4STFT5ResetEv
 396              	.LVL26:
 397              	.L13:
 398 00ba 00BF     		.align	2
 399              	.L12:
 400 00bc DB0F4940 		.word	1078530011
 401              		.cfi_endproc
 402              	.LFE4288:
 404              		.section	.text._ZN4STFT7ProcessERK10ParametersPKfPfjj,"ax",%progbits
 405              		.align	1
 406              		.global	_ZN4STFT7ProcessERK10ParametersPKfPfjj
 407              		.syntax unified
 408              		.thumb
 409              		.thumb_func
 410              		.fpu fpv5-d16
 412              	_ZN4STFT7ProcessERK10ParametersPKfPfjj:
ARM GAS  /tmp/cchieLBQ.s 			page 39


 413              	.LVL27:
 414              	.LFB4290:
  87:dsp/pvoc/stft.cpp **** 
  88:dsp/pvoc/stft.cpp **** void STFT::Process(const Parameters& parameters,
  89:dsp/pvoc/stft.cpp ****                    const float*      input,
  90:dsp/pvoc/stft.cpp ****                    float*            output,
  91:dsp/pvoc/stft.cpp ****                    size_t            size,
  92:dsp/pvoc/stft.cpp ****                    size_t            stride)
  93:dsp/pvoc/stft.cpp **** {
 415              		.loc 1 93 1 is_stmt 1 view -0
 416              		.cfi_startproc
 417              		@ args = 8, pretend = 0, frame = 8
 418              		@ frame_needed = 0, uses_anonymous_args = 0
  94:dsp/pvoc/stft.cpp ****     parameters_ = &parameters;
 419              		.loc 1 94 5 view .LVU122
  93:dsp/pvoc/stft.cpp ****     parameters_ = &parameters;
 420              		.loc 1 93 1 is_stmt 0 view .LVU123
 421 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 422              		.cfi_def_cfa_offset 48
 423              		.cfi_offset 4, -36
 424              		.cfi_offset 5, -32
 425              		.cfi_offset 6, -28
 426              		.cfi_offset 7, -24
 427              		.cfi_offset 8, -20
 428              		.cfi_offset 9, -16
 429              		.cfi_offset 10, -12
 430              		.cfi_offset 11, -8
 431              		.cfi_offset 14, -4
 432              	.LBB173:
 433              	.LBB174:
 434              	.LBB175:
  95:dsp/pvoc/stft.cpp ****     while(size)
  96:dsp/pvoc/stft.cpp ****     {
  97:dsp/pvoc/stft.cpp ****         size_t processed = min(size, hop_size_ - block_size_);
  98:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
  99:dsp/pvoc/stft.cpp ****         {
 100:dsp/pvoc/stft.cpp ****             int32_t sample             = *input * 32768.0f;
 101:dsp/pvoc/stft.cpp ****             analysis_[buffer_ptr_ + i] = Clip16(sample);
 102:dsp/pvoc/stft.cpp ****             *output
 103:dsp/pvoc/stft.cpp ****                 = static_cast<float>(synthesis_[buffer_ptr_ + i]) / 16384.0f;
 104:dsp/pvoc/stft.cpp ****             input += stride;
 435              		.loc 1 104 19 view .LVU124
 436 0004 0D9E     		ldr	r6, [sp, #52]
 437              	.LBE175:
 438              	.LBE174:
 439              	.LBE173:
  93:dsp/pvoc/stft.cpp ****     parameters_ = &parameters;
 440              		.loc 1 93 1 view .LVU125
 441 0006 DDF830B0 		ldr	fp, [sp, #48]
 442              	.LBB184:
 443              	.LBB180:
 444              	.LBB176:
 445              		.loc 1 104 19 view .LVU126
 446 000a B600     		lsls	r6, r6, #2
 447              	.LBE176:
 448              	.LBE180:
 449              	.LBE184:
ARM GAS  /tmp/cchieLBQ.s 			page 40


  93:dsp/pvoc/stft.cpp ****     parameters_ = &parameters;
 450              		.loc 1 93 1 view .LVU127
 451 000c 0193     		str	r3, [sp, #4]
  94:dsp/pvoc/stft.cpp ****     while(size)
 452              		.loc 1 94 17 view .LVU128
 453 000e 8164     		str	r1, [r0, #72]
 454              	.LVL28:
 455              	.L15:
  95:dsp/pvoc/stft.cpp ****     while(size)
 456              		.loc 1 95 5 is_stmt 1 view .LVU129
  95:dsp/pvoc/stft.cpp ****     while(size)
 457              		.loc 1 95 11 view .LVU130
 458 0010 BBF1000F 		cmp	fp, #0
 459 0014 47D0     		beq	.L14
 460              	.LBB185:
  97:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
 461              		.loc 1 97 9 view .LVU131
  97:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
 462              		.loc 1 97 38 is_stmt 0 view .LVU132
 463 0016 D0F80CE0 		ldr	lr, [r0, #12]
  97:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
 464              		.loc 1 97 48 view .LVU133
 465 001a 9146     		mov	r9, r2
  97:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
 466              		.loc 1 97 50 view .LVU134
 467 001c C16B     		ldr	r1, [r0, #60]
 468              	.LVL29:
 469              	.LBB181:
  98:dsp/pvoc/stft.cpp ****         {
 470              		.loc 1 98 20 view .LVU135
 471 001e 4FF0000C 		mov	ip, #0
 472 0022 446B     		ldr	r4, [r0, #52]
 473              	.LBE181:
  97:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
 474              		.loc 1 97 48 view .LVU136
 475 0024 AEEB0105 		sub	r5, lr, r1
 476 0028 DDF80480 		ldr	r8, [sp, #4]
 477 002c 5D45     		cmp	r5, fp
 478 002e 28BF     		it	cs
 479 0030 5D46     		movcs	r5, fp
 480              	.LVL30:
  98:dsp/pvoc/stft.cpp ****         {
 481              		.loc 1 98 9 is_stmt 1 view .LVU137
 482              	.L18:
 483              	.LBB182:
  98:dsp/pvoc/stft.cpp ****         {
 484              		.loc 1 98 29 discriminator 3 view .LVU138
 485 0032 6545     		cmp	r5, ip
 486 0034 1CD0     		beq	.L17
 487              	.LBB177:
 100:dsp/pvoc/stft.cpp ****             analysis_[buffer_ptr_ + i] = Clip16(sample);
 488              		.loc 1 100 13 discriminator 2 view .LVU139
 489              	.LVL31:
 101:dsp/pvoc/stft.cpp ****             *output
 490              		.loc 1 101 13 discriminator 2 view .LVU140
 101:dsp/pvoc/stft.cpp ****             *output
 491              		.loc 1 101 13 is_stmt 0 discriminator 2 view .LVU141
ARM GAS  /tmp/cchieLBQ.s 			page 41


 492              	.LBE177:
 493              	.LBE182:
 494              	.LBE185:
 495              		.file 4 "./stmtemp.h"
   1:./stmtemp.h   **** #include "daisy.h"
   2:./stmtemp.h   **** #include "daisysp.h"
   3:./stmtemp.h   **** #include "resources.h"
   4:./stmtemp.h   **** 
   5:./stmtemp.h   **** using namespace daisy;
   6:./stmtemp.h   **** using namespace daisysp;
   7:./stmtemp.h   **** 
   8:./stmtemp.h   **** #define MAKE_INTEGRAL_FRACTIONAL(x)                   \
   9:./stmtemp.h   ****     int32_t x##_integral   = static_cast<int32_t>(x); \
  10:./stmtemp.h   ****     float   x##_fractional = x - static_cast<float>(x##_integral);
  11:./stmtemp.h   **** 
  12:./stmtemp.h   **** #define SLOPE(out, in, positive, negative)                \
  13:./stmtemp.h   ****     {                                                     \
  14:./stmtemp.h   ****         float error = (in)-out;                           \
  15:./stmtemp.h   ****         out += (error > 0 ? positive : negative) * error; \
  16:./stmtemp.h   ****     }
  17:./stmtemp.h   **** 
  18:./stmtemp.h   **** #define ONE_POLE(out, in, coefficient) out += (coefficient) * ((in)-out);
  19:./stmtemp.h   **** 
  20:./stmtemp.h   **** #define CONSTRAIN(var, min, max) \
  21:./stmtemp.h   ****     if(var < (min))              \
  22:./stmtemp.h   ****     {                            \
  23:./stmtemp.h   ****         var = (min);             \
  24:./stmtemp.h   ****     }                            \
  25:./stmtemp.h   ****     else if(var > (max))         \
  26:./stmtemp.h   ****     {                            \
  27:./stmtemp.h   ****         var = (max);             \
  28:./stmtemp.h   ****     }
  29:./stmtemp.h   **** 
  30:./stmtemp.h   **** #define JOIN(lhs, rhs) JOIN_1(lhs, rhs)
  31:./stmtemp.h   **** #define JOIN_1(lhs, rhs) JOIN_2(lhs, rhs)
  32:./stmtemp.h   **** #define JOIN_2(lhs, rhs) lhs##rhs
  33:./stmtemp.h   **** 
  34:./stmtemp.h   **** #define STATIC_ASSERT(expression, message)                                  \
  35:./stmtemp.h   ****     struct JOIN(__static_assertion_at_line_, __LINE__)                      \
  36:./stmtemp.h   ****     {                                                                       \
  37:./stmtemp.h   ****         impl::StaticAssertion<static_cast<bool>((expression))>              \
  38:./stmtemp.h   ****             JOIN(JOIN(JOIN(STATIC_ASSERTION_FAILED_AT_LINE_, __LINE__), _), \
  39:./stmtemp.h   ****                  message);                                                  \
  40:./stmtemp.h   ****     };
  41:./stmtemp.h   **** 
  42:./stmtemp.h   **** namespace impl
  43:./stmtemp.h   **** {
  44:./stmtemp.h   **** template <bool>
  45:./stmtemp.h   **** struct StaticAssertion;
  46:./stmtemp.h   **** 
  47:./stmtemp.h   **** template <>
  48:./stmtemp.h   **** struct StaticAssertion<true>
  49:./stmtemp.h   **** {
  50:./stmtemp.h   **** }; // StaticAssertion<true>
  51:./stmtemp.h   **** 
  52:./stmtemp.h   **** template <int i>
  53:./stmtemp.h   **** struct StaticAssertionTest
ARM GAS  /tmp/cchieLBQ.s 			page 42


  54:./stmtemp.h   **** {
  55:./stmtemp.h   **** }; // StaticAssertionTest<int>
  56:./stmtemp.h   **** 
  57:./stmtemp.h   **** } // namespace impl
  58:./stmtemp.h   **** 
  59:./stmtemp.h   **** template <uint32_t a, uint32_t b, uint32_t c, uint32_t d>
  60:./stmtemp.h   **** struct FourCC
  61:./stmtemp.h   **** {
  62:./stmtemp.h   ****     static const uint32_t value = (((((d << 8) | c) << 8) | b) << 8) | a;
  63:./stmtemp.h   **** };
  64:./stmtemp.h   **** 
  65:./stmtemp.h   **** class CosineOscillator
  66:./stmtemp.h   **** {
  67:./stmtemp.h   ****   public:
  68:./stmtemp.h   ****     CosineOscillator() {}
  69:./stmtemp.h   ****     ~CosineOscillator() {}
  70:./stmtemp.h   **** 
  71:./stmtemp.h   ****     void Init(float freq)
  72:./stmtemp.h   ****     {
  73:./stmtemp.h   ****         float sample_rate = 48000; //hardcoded for now
  74:./stmtemp.h   ****         phs_inc_          = freq / sample_rate;
  75:./stmtemp.h   ****     }
  76:./stmtemp.h   **** 
  77:./stmtemp.h   ****     float Next()
  78:./stmtemp.h   ****     {
  79:./stmtemp.h   ****         phs_ += phs_inc_;
  80:./stmtemp.h   **** 
  81:./stmtemp.h   ****         if(phs_ >= 1.f)
  82:./stmtemp.h   ****         {
  83:./stmtemp.h   ****             phs_ -= 1.f;
  84:./stmtemp.h   ****         }
  85:./stmtemp.h   **** 
  86:./stmtemp.h   ****         value_ = cos(phs_);
  87:./stmtemp.h   **** 
  88:./stmtemp.h   ****         return value_;
  89:./stmtemp.h   ****     }
  90:./stmtemp.h   **** 
  91:./stmtemp.h   ****     float value() { return value_; }
  92:./stmtemp.h   **** 
  93:./stmtemp.h   ****   private:
  94:./stmtemp.h   ****     float value_ = 0.f;
  95:./stmtemp.h   ****     float sample_rate_;
  96:./stmtemp.h   ****     float phs_ = 0.f;
  97:./stmtemp.h   ****     float phs_inc_;
  98:./stmtemp.h   **** };
  99:./stmtemp.h   **** 
 100:./stmtemp.h   **** inline int32_t Clip16(int32_t x)
 101:./stmtemp.h   **** {
 102:./stmtemp.h   ****     if(x < -32768)
 496              		.loc 4 102 5 is_stmt 1 discriminator 2 view .LVU142
 497              	.LBB186:
 498              	.LBB183:
 499              	.LBB178:
 100:dsp/pvoc/stft.cpp ****             analysis_[buffer_ptr_ + i] = Clip16(sample);
 500              		.loc 1 100 49 is_stmt 0 discriminator 2 view .LVU143
 501 0036 D9ED007A 		vldr.32	s15, [r9]
 101:dsp/pvoc/stft.cpp ****             *output
ARM GAS  /tmp/cchieLBQ.s 			page 43


 502              		.loc 1 101 35 discriminator 2 view .LVU144
 503 003a 04EB0C0A 		add	r10, r4, ip
 101:dsp/pvoc/stft.cpp ****             *output
 504              		.loc 1 101 40 discriminator 2 view .LVU145
 505 003e C36A     		ldr	r3, [r0, #44]
 506              		.loc 1 104 19 discriminator 2 view .LVU146
 507 0040 B144     		add	r9, r9, r6
 508              	.LVL32:
 100:dsp/pvoc/stft.cpp ****             analysis_[buffer_ptr_ + i] = Clip16(sample);
 509              		.loc 1 100 21 discriminator 2 view .LVU147
 510 0042 B0EE677A 		vmov.f32	s14, s15
 511              	.LBE178:
  98:dsp/pvoc/stft.cpp ****         {
 512              		.loc 1 98 9 discriminator 2 view .LVU148
 513 0046 0CF1010C 		add	ip, ip, #1
 514              	.LVL33:
 515              	.LBB179:
 100:dsp/pvoc/stft.cpp ****             analysis_[buffer_ptr_ + i] = Clip16(sample);
 516              		.loc 1 100 21 discriminator 2 view .LVU149
 517 004a BEEEE87A 		vcvt.s32.f32	s14, s14, #15
 518 004e 17EE107A 		vmov	r7, s14	@ int
 101:dsp/pvoc/stft.cpp ****             *output
 519              		.loc 1 101 40 discriminator 2 view .LVU150
 520 0052 07F30F07 		ssat	r7, #16, r7
 521 0056 23F81A70 		strh	r7, [r3, r10, lsl #1]	@ movhi
 102:dsp/pvoc/stft.cpp ****                 = static_cast<float>(synthesis_[buffer_ptr_ + i]) / 16384.0f;
 522              		.loc 1 102 13 is_stmt 1 discriminator 2 view .LVU151
 103:dsp/pvoc/stft.cpp ****             input += stride;
 523              		.loc 1 103 64 is_stmt 0 discriminator 2 view .LVU152
 524 005a 076B     		ldr	r7, [r0, #48]
 103:dsp/pvoc/stft.cpp ****             input += stride;
 525              		.loc 1 103 19 discriminator 2 view .LVU153
 526 005c 37F91A30 		ldrsh	r3, [r7, r10, lsl #1]
 527 0060 07EE903A 		vmov	s15, r3	@ int
 528              	.LVL34:
 103:dsp/pvoc/stft.cpp ****             input += stride;
 529              		.loc 1 103 67 discriminator 2 view .LVU154
 530 0064 FAEEC97A 		vcvt.f32.s32	s15, s15, #14
 103:dsp/pvoc/stft.cpp ****             input += stride;
 531              		.loc 1 103 17 discriminator 2 view .LVU155
 532 0068 C8ED007A 		vstr.32	s15, [r8]
 533              		.loc 1 104 13 is_stmt 1 discriminator 2 view .LVU156
 534              	.LVL35:
 105:dsp/pvoc/stft.cpp ****             output += stride;
 535              		.loc 1 105 13 discriminator 2 view .LVU157
 536              		.loc 1 105 20 is_stmt 0 discriminator 2 view .LVU158
 537 006c B044     		add	r8, r8, r6
 538              	.LVL36:
 539              		.loc 1 105 20 discriminator 2 view .LVU159
 540              	.LBE179:
  98:dsp/pvoc/stft.cpp ****         {
 541              		.loc 1 98 9 is_stmt 1 discriminator 2 view .LVU160
  98:dsp/pvoc/stft.cpp ****         {
 542              		.loc 1 98 9 is_stmt 0 discriminator 2 view .LVU161
 543 006e E0E7     		b	.L18
 544              	.L17:
  98:dsp/pvoc/stft.cpp ****         {
ARM GAS  /tmp/cchieLBQ.s 			page 44


 545              		.loc 1 98 9 discriminator 2 view .LVU162
 546              	.LBE183:
 106:dsp/pvoc/stft.cpp ****         }
 107:dsp/pvoc/stft.cpp **** 
 108:dsp/pvoc/stft.cpp ****         block_size_ += processed;
 109:dsp/pvoc/stft.cpp ****         size -= processed;
 110:dsp/pvoc/stft.cpp ****         buffer_ptr_ += processed;
 547              		.loc 1 110 21 view .LVU163
 548 0070 2C44     		add	r4, r4, r5
 549 0072 05FB06F7 		mul	r7, r5, r6
 108:dsp/pvoc/stft.cpp ****         size -= processed;
 550              		.loc 1 108 21 view .LVU164
 551 0076 2944     		add	r1, r1, r5
 109:dsp/pvoc/stft.cpp ****         buffer_ptr_ += processed;
 552              		.loc 1 109 14 view .LVU165
 553 0078 ABEB050B 		sub	fp, fp, r5
 554              	.LVL37:
 111:dsp/pvoc/stft.cpp ****         if(buffer_ptr_ >= buffer_size_)
 555              		.loc 1 111 27 view .LVU166
 556 007c 0569     		ldr	r5, [r0, #16]
 557 007e 3A44     		add	r2, r2, r7
 558 0080 019B     		ldr	r3, [sp, #4]
 559              		.loc 1 111 9 view .LVU167
 560 0082 AC42     		cmp	r4, r5
 110:dsp/pvoc/stft.cpp ****         if(buffer_ptr_ >= buffer_size_)
 561              		.loc 1 110 21 view .LVU168
 562 0084 4463     		str	r4, [r0, #52]
 563 0086 3B44     		add	r3, r3, r7
 108:dsp/pvoc/stft.cpp ****         size -= processed;
 564              		.loc 1 108 21 view .LVU169
 565 0088 C163     		str	r1, [r0, #60]
 112:dsp/pvoc/stft.cpp ****         {
 113:dsp/pvoc/stft.cpp ****             buffer_ptr_ -= buffer_size_;
 566              		.loc 1 113 25 view .LVU170
 567 008a 28BF     		it	cs
 568 008c 641B     		subcs	r4, r4, r5
 569 008e 0193     		str	r3, [sp, #4]
 108:dsp/pvoc/stft.cpp ****         size -= processed;
 570              		.loc 1 108 9 is_stmt 1 view .LVU171
 109:dsp/pvoc/stft.cpp ****         buffer_ptr_ += processed;
 571              		.loc 1 109 9 view .LVU172
 572              	.LVL38:
 110:dsp/pvoc/stft.cpp ****         if(buffer_ptr_ >= buffer_size_)
 573              		.loc 1 110 9 view .LVU173
 111:dsp/pvoc/stft.cpp ****         {
 574              		.loc 1 111 9 view .LVU174
 575              		.loc 1 113 13 view .LVU175
 576              		.loc 1 113 25 is_stmt 0 view .LVU176
 577 0090 28BF     		it	cs
 578 0092 4463     		strcs	r4, [r0, #52]
 114:dsp/pvoc/stft.cpp ****         }
 115:dsp/pvoc/stft.cpp ****         if(block_size_ >= hop_size_)
 579              		.loc 1 115 9 is_stmt 1 view .LVU177
 580 0094 8E45     		cmp	lr, r1
 581 0096 BBD8     		bhi	.L15
 116:dsp/pvoc/stft.cpp ****         {
 117:dsp/pvoc/stft.cpp ****             block_size_ -= hop_size_;
ARM GAS  /tmp/cchieLBQ.s 			page 45


 582              		.loc 1 117 13 view .LVU178
 583              		.loc 1 117 25 is_stmt 0 view .LVU179
 584 0098 A1EB0E01 		sub	r1, r1, lr
 585 009c C163     		str	r1, [r0, #60]
 118:dsp/pvoc/stft.cpp ****             ++ready_;
 586              		.loc 1 118 13 is_stmt 1 view .LVU180
 587 009e 016C     		ldr	r1, [r0, #64]
 588 00a0 0131     		adds	r1, r1, #1
 589 00a2 0164     		str	r1, [r0, #64]
 590 00a4 B4E7     		b	.L15
 591              	.LVL39:
 592              	.L14:
 593              		.loc 1 118 13 is_stmt 0 view .LVU181
 594              	.LBE186:
 119:dsp/pvoc/stft.cpp ****         }
 120:dsp/pvoc/stft.cpp ****     }
 121:dsp/pvoc/stft.cpp **** }
 595              		.loc 1 121 1 view .LVU182
 596 00a6 03B0     		add	sp, sp, #12
 597              		.cfi_def_cfa_offset 36
 598              		@ sp needed
 599 00a8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 600              		.loc 1 121 1 view .LVU183
 601              		.cfi_endproc
 602              	.LFE4290:
 604              		.section	.text._ZSt4copyIPfS0_ET0_T_S2_S1_,"axG",%progbits,_ZSt4copyIPfS0_ET0_T_S2_S1_,comdat
 605              		.align	1
 606              		.weak	_ZSt4copyIPfS0_ET0_T_S2_S1_
 607              		.syntax unified
 608              		.thumb
 609              		.thumb_func
 610              		.fpu fpv5-d16
 612              	_ZSt4copyIPfS0_ET0_T_S2_S1_:
 613              	.LVL40:
 614              	.LFB4594:
 465:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 615              		.loc 2 465 5 is_stmt 1 view -0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619              	.LBB192:
 620              	.LBB193:
 621              	.LBB194:
 622              	.LBB195:
 623              	.LBB196:
 385:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 624              		.loc 2 385 4 is_stmt 0 view .LVU185
 625 0000 8842     		cmp	r0, r1
 626              	.LBE196:
 627              	.LBE195:
 628              	.LBE194:
 629              	.LBE193:
 630              	.LBE192:
 465:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 631              		.loc 2 465 5 view .LVU186
 632 0002 1346     		mov	r3, r2
 633              	.LVL41:
ARM GAS  /tmp/cchieLBQ.s 			page 46


 634              	.LBB204:
 635              	.LBI192:
 438:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 636              		.loc 2 438 5 is_stmt 1 view .LVU187
 637              	.LBB202:
 638              	.LBI193:
 393:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 639              		.loc 2 393 5 view .LVU188
 640              	.LBB200:
 641              	.LBB198:
 642              	.LBI195:
 375:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 643              		.loc 2 375 2 view .LVU189
 375:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 644              		.loc 2 375 2 is_stmt 0 view .LVU190
 645              	.LBE198:
 646              	.LBE200:
 647              	.LBE202:
 648              	.LBE204:
 465:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 649              		.loc 2 465 5 view .LVU191
 650 0004 10B5     		push	{r4, lr}
 651              		.cfi_def_cfa_offset 8
 652              		.cfi_offset 4, -8
 653              		.cfi_offset 14, -4
 654              	.LBB205:
 655              	.LBB203:
 656              	.LBB201:
 657              	.LBB199:
 658              	.LBB197:
 384:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  if (_Num)
 659              		.loc 2 384 34 view .LVU192
 660 0006 A1EB0004 		sub	r4, r1, r0
 385:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 661              		.loc 2 385 4 view .LVU193
 662 000a 05D0     		beq	.L23
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 663              		.loc 2 386 23 view .LVU194
 664 000c 0146     		mov	r1, r0
 665              	.LVL42:
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 666              		.loc 2 386 23 view .LVU195
 667 000e 2246     		mov	r2, r4
 668              	.LVL43:
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 669              		.loc 2 386 23 view .LVU196
 670 0010 1846     		mov	r0, r3
 671              	.LVL44:
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 672              		.loc 2 386 23 view .LVU197
 673 0012 FFF7FEFF 		bl	memmove
 674              	.LVL45:
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 675              		.loc 2 386 23 view .LVU198
 676 0016 0346     		mov	r3, r0
 677              	.L23:
 678              	.LVL46:
ARM GAS  /tmp/cchieLBQ.s 			page 47


 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 679              		.loc 2 386 23 view .LVU199
 680              	.LBE197:
 681              	.LBE199:
 682              	.LBE201:
 683              	.LBE203:
 684              	.LBE205:
 475:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 685              		.loc 2 475 5 view .LVU200
 686 0018 1819     		adds	r0, r3, r4
 687 001a 10BD     		pop	{r4, pc}
 688              		.cfi_endproc
 689              	.LFE4594:
 691              		.section	.text._ZN14RotationPhasorIfLj12EE5StartEj,"axG",%progbits,_ZN14RotationPhasorIfLj12EE5Sta
 692              		.align	1
 693              		.weak	_ZN14RotationPhasorIfLj12EE5StartEj
 694              		.syntax unified
 695              		.thumb
 696              		.thumb_func
 697              		.fpu fpv5-d16
 699              	_ZN14RotationPhasorIfLj12EE5StartEj:
 700              	.LVL47:
 701              	.LFB4757:
 247:./shy_fft.h   ****     {
 702              		.loc 3 247 17 is_stmt 1 view -0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 249:./shy_fft.h   ****         cos_ = real_ = sin_cos_lut_[index];
 707              		.loc 3 249 30 is_stmt 0 view .LVU202
 708 0000 0339     		subs	r1, r1, #3
 709              	.LVL48:
 249:./shy_fft.h   ****         cos_ = real_ = sin_cos_lut_[index];
 710              		.loc 3 249 30 view .LVU203
 711 0002 00EBC101 		add	r1, r0, r1, lsl #3
 712              	.LVL49:
 250:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 713              		.loc 3 250 36 view .LVU204
 714 0006 0B68     		ldr	r3, [r1]	@ float
 250:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 715              		.loc 3 250 9 view .LVU205
 716 0008 0365     		str	r3, [r0, #80]	@ float
 717 000a 8364     		str	r3, [r0, #72]	@ float
 251:./shy_fft.h   ****     }
 718              		.loc 3 251 36 view .LVU206
 719 000c 4B68     		ldr	r3, [r1, #4]	@ float
 251:./shy_fft.h   ****     }
 720              		.loc 3 251 9 view .LVU207
 721 000e 4365     		str	r3, [r0, #84]	@ float
 722 0010 C364     		str	r3, [r0, #76]	@ float
 252:./shy_fft.h   **** 
 723              		.loc 3 252 5 view .LVU208
 724 0012 7047     		bx	lr
 725              		.cfi_endproc
 726              	.LFE4757:
 728              		.section	.text._ZN14RotationPhasorIfLj12EE6RotateEv,"axG",%progbits,_ZN14RotationPhasorIfLj12EE6Ro
ARM GAS  /tmp/cchieLBQ.s 			page 48


 729              		.align	1
 730              		.weak	_ZN14RotationPhasorIfLj12EE6RotateEv
 731              		.syntax unified
 732              		.thumb
 733              		.thumb_func
 734              		.fpu fpv5-d16
 736              	_ZN14RotationPhasorIfLj12EE6RotateEv:
 737              	.LVL50:
 738              	.LFB4760:
 254:./shy_fft.h   ****     {
 739              		.loc 3 254 17 is_stmt 1 view -0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743              		@ link register save eliminated.
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 744              		.loc 3 256 33 is_stmt 0 view .LVU210
 745 0000 D0ED135A 		vldr.32	s11, [r0, #76]
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 746              		.loc 3 256 40 view .LVU211
 747 0004 D0ED156A 		vldr.32	s13, [r0, #84]
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 748              		.loc 3 256 18 view .LVU212
 749 0008 90ED126A 		vldr.32	s12, [r0, #72]
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 750              		.loc 3 256 11 view .LVU213
 751 000c 26EEE57A 		vnmul.f32	s14, s13, s11
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 752              		.loc 3 256 25 view .LVU214
 753 0010 D0ED147A 		vldr.32	s15, [r0, #80]
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 754              		.loc 3 256 11 view .LVU215
 755 0014 A6EE277A 		vfma.f32	s14, s12, s15
 756              	.LVL51:
 257:./shy_fft.h   ****         cos_   = temp;
 757              		.loc 3 257 38 view .LVU216
 758 0018 67EEA57A 		vmul.f32	s15, s15, s11
 257:./shy_fft.h   ****         cos_   = temp;
 759              		.loc 3 257 31 view .LVU217
 760 001c E6EE267A 		vfma.f32	s15, s12, s13
 258:./shy_fft.h   ****     }
 761              		.loc 3 258 9 view .LVU218
 762 0020 80ED127A 		vstr.32	s14, [r0, #72]
 257:./shy_fft.h   ****         cos_   = temp;
 763              		.loc 3 257 9 view .LVU219
 764 0024 C0ED137A 		vstr.32	s15, [r0, #76]
 259:./shy_fft.h   **** 
 765              		.loc 3 259 5 view .LVU220
 766 0028 7047     		bx	lr
 767              		.cfi_endproc
 768              	.LFE4760:
 770              		.section	.text._ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j,"axG",%progbit
 771              		.align	1
 772              		.weak	_ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j
 773              		.syntax unified
 774              		.thumb
 775              		.thumb_func
ARM GAS  /tmp/cchieLBQ.s 			page 49


 776              		.fpu fpv5-d16
 778              	_ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j:
 779              	.LVL52:
 780              	.LFB4715:
 411:./shy_fft.h   ****                     T*             output,
 781              		.loc 3 411 10 is_stmt 1 view -0
 782              		.cfi_startproc
 783              		@ args = 8, pretend = 0, frame = 64
 784              		@ frame_needed = 0, uses_anonymous_args = 0
 411:./shy_fft.h   ****                     T*             output,
 785              		.loc 3 411 10 is_stmt 0 view .LVU222
 786 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 787              		.cfi_def_cfa_offset 36
 788              		.cfi_offset 4, -36
 789              		.cfi_offset 5, -32
 790              		.cfi_offset 6, -28
 791              		.cfi_offset 7, -24
 792              		.cfi_offset 8, -20
 793              		.cfi_offset 9, -16
 794              		.cfi_offset 10, -12
 795              		.cfi_offset 11, -8
 796              		.cfi_offset 14, -4
 797 0004 91B0     		sub	sp, sp, #68
 798              		.cfi_def_cfa_offset 104
 411:./shy_fft.h   ****                     T*             output,
 799              		.loc 3 411 10 view .LVU223
 800 0006 9346     		mov	fp, r2
 801 0008 0C46     		mov	r4, r1
 420:./shy_fft.h   ****         // First and second pass.
 802              		.loc 3 420 29 view .LVU224
 803 000a 0122     		movs	r2, #1
 804              	.LVL53:
 420:./shy_fft.h   ****         // First and second pass.
 805              		.loc 3 420 29 view .LVU225
 806 000c 1B99     		ldr	r1, [sp, #108]
 807              	.LVL54:
 808              	.LBB206:
 809              	.LBB207:
 428:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 810              		.loc 3 428 32 view .LVU226
 811 000e 5E46     		mov	r6, fp
 812              	.LBE207:
 813              	.LBE206:
 411:./shy_fft.h   ****                     T*             output,
 814              		.loc 3 411 10 view .LVU227
 815 0010 1A98     		ldr	r0, [sp, #104]
 816              	.LVL55:
 817              	.LBB212:
 423:./shy_fft.h   ****         {
 818              		.loc 3 423 20 view .LVU228
 819 0012 0027     		movs	r7, #0
 820              	.LBE212:
 420:./shy_fft.h   ****         // First and second pass.
 821              		.loc 3 420 29 view .LVU229
 822 0014 8A40     		lsls	r2, r2, r1
 823              	.LBB213:
 824              	.LBB208:
ARM GAS  /tmp/cchieLBQ.s 			page 50


 428:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 825              		.loc 3 428 43 view .LVU230
 826 0016 4FEA920C 		lsr	ip, r2, #2
 827              	.LBE208:
 828              	.LBE213:
 420:./shy_fft.h   ****         // First and second pass.
 829              		.loc 3 420 29 view .LVU231
 830 001a 0692     		str	r2, [sp, #24]
 831              	.LVL56:
 420:./shy_fft.h   ****         // First and second pass.
 832              		.loc 3 420 29 view .LVU232
 833 001c 5A46     		mov	r2, fp
 834              	.LVL57:
 835              	.LBB214:
 836              	.LBB209:
 428:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 837              		.loc 3 428 32 view .LVU233
 838 001e 4FEA4C09 		lsl	r9, ip, #1
 839              	.LVL58:
 840              	.L29:
 428:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 841              		.loc 3 428 32 view .LVU234
 842              	.LBE209:
 423:./shy_fft.h   ****         {
 843              		.loc 3 423 29 is_stmt 1 discriminator 3 view .LVU235
 844 0022 0699     		ldr	r1, [sp, #24]
 845 0024 1036     		adds	r6, r6, #16
 846              	.LVL59:
 423:./shy_fft.h   ****         {
 847              		.loc 3 423 29 is_stmt 0 discriminator 3 view .LVU236
 848 0026 8F42     		cmp	r7, r1
 849 0028 46D3     		bcc	.L27
 850 002a 2346     		mov	r3, r4
 851              	.LVL60:
 423:./shy_fft.h   ****         {
 852              		.loc 3 423 29 discriminator 3 view .LVU237
 853              	.LBE214:
 854              	.LBB215:
 444:./shy_fft.h   ****         {
 855              		.loc 3 444 20 view .LVU238
 856 002c 0021     		movs	r1, #0
 857              	.LVL61:
 858              	.L28:
 444:./shy_fft.h   ****         {
 859              		.loc 3 444 29 is_stmt 1 discriminator 3 view .LVU239
 860 002e 069D     		ldr	r5, [sp, #24]
 861 0030 2032     		adds	r2, r2, #32
 862 0032 2033     		adds	r3, r3, #32
 863 0034 A942     		cmp	r1, r5
 864 0036 7BD2     		bcs	.L37
 865              	.LBB216:
 448:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 866              		.loc 3 448 29 is_stmt 0 discriminator 2 view .LVU240
 867 0038 12ED047A 		vldr.32	s14, [r2, #-16]
 868              	.LBE216:
 444:./shy_fft.h   ****         {
 869              		.loc 3 444 9 discriminator 2 view .LVU241
ARM GAS  /tmp/cchieLBQ.s 			page 51


 870 003c 0831     		adds	r1, r1, #8
 871              	.LVL62:
 872              	.LBB217:
 448:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 873              		.loc 3 448 29 discriminator 2 view .LVU242
 874 003e 52ED087A 		vldr.32	s15, [r2, #-32]
 875 0042 77EE877A 		vadd.f32	s15, s15, s14
 448:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 876              		.loc 3 448 13 discriminator 2 view .LVU243
 877 0046 43ED087A 		vstr.32	s15, [r3, #-32]
 449:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 878              		.loc 3 449 29 discriminator 2 view .LVU244
 879 004a 12ED047A 		vldr.32	s14, [r2, #-16]
 880 004e 52ED087A 		vldr.32	s15, [r2, #-32]
 881 0052 77EEC77A 		vsub.f32	s15, s15, s14
 449:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 882              		.loc 3 449 13 discriminator 2 view .LVU245
 883 0056 43ED047A 		vstr.32	s15, [r3, #-16]
 450:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 884              		.loc 3 450 25 discriminator 2 view .LVU246
 885 005a 52F8185C 		ldr	r5, [r2, #-24]	@ float
 450:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 886              		.loc 3 450 13 discriminator 2 view .LVU247
 887 005e 43F8185C 		str	r5, [r3, #-24]	@ float
 451:./shy_fft.h   **** 
 888              		.loc 3 451 25 discriminator 2 view .LVU248
 889 0062 52F8085C 		ldr	r5, [r2, #-8]	@ float
 451:./shy_fft.h   **** 
 890              		.loc 3 451 13 discriminator 2 view .LVU249
 891 0066 43F8085C 		str	r5, [r3, #-8]	@ float
 453:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 892              		.loc 3 453 34 discriminator 2 view .LVU250
 893 006a 52ED017A 		vldr.32	s15, [r2, #-4]
 894 006e 12ED037A 		vldr.32	s14, [r2, #-12]
 454:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 895              		.loc 3 454 33 discriminator 2 view .LVU251
 896 0072 52ED076A 		vldr.32	s13, [r2, #-28]
 453:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 897              		.loc 3 453 34 discriminator 2 view .LVU252
 898 0076 37EE677A 		vsub.f32	s14, s14, s15
 899              	.LVL63:
 453:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 900              		.loc 3 453 34 discriminator 2 view .LVU253
 901              	.LBE217:
 902              	.LBE215:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 903              		.loc 3 137 41 is_stmt 1 discriminator 2 view .LVU254
 904              	.LBB220:
 905              	.LBB218:
 454:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 906              		.loc 3 454 33 is_stmt 0 discriminator 2 view .LVU255
 907 007a DFED917A 		vldr.32	s15, .L38
 908 007e E7EE276A 		vfma.f32	s13, s14, s15
 454:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 909              		.loc 3 454 13 discriminator 2 view .LVU256
 910 0082 43ED076A 		vstr.32	s13, [r3, #-28]
 455:./shy_fft.h   **** 
ARM GAS  /tmp/cchieLBQ.s 			page 52


 911              		.loc 3 455 33 discriminator 2 view .LVU257
 912 0086 52ED076A 		vldr.32	s13, [r2, #-28]
 913 008a E7EE676A 		vfms.f32	s13, s14, s15
 455:./shy_fft.h   **** 
 914              		.loc 3 455 13 discriminator 2 view .LVU258
 915 008e 43ED056A 		vstr.32	s13, [r3, #-20]
 457:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 916              		.loc 3 457 34 discriminator 2 view .LVU259
 917 0092 52ED016A 		vldr.32	s13, [r2, #-4]
 918 0096 12ED037A 		vldr.32	s14, [r2, #-12]
 919              	.LVL64:
 457:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 920              		.loc 3 457 34 discriminator 2 view .LVU260
 921 009a 37EE267A 		vadd.f32	s14, s14, s13
 922              	.LVL65:
 457:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 923              		.loc 3 457 34 discriminator 2 view .LVU261
 924              	.LBE218:
 925              	.LBE220:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 926              		.loc 3 137 41 is_stmt 1 discriminator 2 view .LVU262
 927              	.LBB221:
 928              	.LBB219:
 458:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 929              		.loc 3 458 26 is_stmt 0 discriminator 2 view .LVU263
 930 009e 52ED056A 		vldr.32	s13, [r2, #-20]
 931 00a2 E7EE276A 		vfma.f32	s13, s14, s15
 458:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 932              		.loc 3 458 13 discriminator 2 view .LVU264
 933 00a6 43ED036A 		vstr.32	s13, [r3, #-12]
 459:./shy_fft.h   ****         }
 934              		.loc 3 459 26 discriminator 2 view .LVU265
 935 00aa 52ED056A 		vldr.32	s13, [r2, #-20]
 936 00ae D7EE276A 		vfnms.f32	s13, s14, s15
 459:./shy_fft.h   ****         }
 937              		.loc 3 459 13 discriminator 2 view .LVU266
 938 00b2 43ED016A 		vstr.32	s13, [r3, #-4]
 939              	.LBE219:
 444:./shy_fft.h   ****         {
 940              		.loc 3 444 9 is_stmt 1 discriminator 2 view .LVU267
 941              	.LVL66:
 444:./shy_fft.h   ****         {
 942              		.loc 3 444 9 is_stmt 0 discriminator 2 view .LVU268
 943 00b6 BAE7     		b	.L28
 944              	.LVL67:
 945              	.L27:
 444:./shy_fft.h   ****         {
 946              		.loc 3 444 9 discriminator 2 view .LVU269
 947              	.LBE221:
 948              	.LBB222:
 949              	.LBB210:
 426:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 950              		.loc 3 426 39 discriminator 2 view .LVU270
 951 00b8 F9B2     		uxtb	r1, r7
 426:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 952              		.loc 3 426 47 discriminator 2 view .LVU271
 953 00ba 5D5C     		ldrb	r5, [r3, r1]	@ zero_extendqisi2
ARM GAS  /tmp/cchieLBQ.s 			page 53


 426:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 954              		.loc 3 426 65 discriminator 2 view .LVU272
 955 00bc 390A     		lsrs	r1, r7, #8
 956              	.LBE210:
 423:./shy_fft.h   ****         {
 957              		.loc 3 423 9 discriminator 2 view .LVU273
 958 00be 0437     		adds	r7, r7, #4
 959              	.LVL68:
 960              	.LBB211:
 426:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 961              		.loc 3 426 53 discriminator 2 view .LVU274
 962 00c0 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 963 00c2 41EA0521 		orr	r1, r1, r5, lsl #8
 427:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 964              		.loc 3 427 32 discriminator 2 view .LVU275
 965 00c6 1B9D     		ldr	r5, [sp, #108]
 966 00c8 C5F11005 		rsb	r5, r5, #16
 427:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 967              		.loc 3 427 25 discriminator 2 view .LVU276
 968 00cc 2941     		asrs	r1, r1, r5
 969              	.LVL69:
 428:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 970              		.loc 3 428 20 discriminator 2 view .LVU277
 971 00ce 09EB0105 		add	r5, r9, r1
 972              	.LVL70:
 432:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 973              		.loc 3 432 21 discriminator 2 view .LVU278
 974 00d2 04EB8108 		add	r8, r4, r1, lsl #2
 429:./shy_fft.h   ****             size_t r3 = r0 + 3 * (rt_size >> 2);
 975              		.loc 3 429 20 discriminator 2 view .LVU279
 976 00d6 6144     		add	r1, r1, ip
 977              	.LVL71:
 432:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 978              		.loc 3 432 29 discriminator 2 view .LVU280
 979 00d8 04EB850E 		add	lr, r4, r5, lsl #2
 432:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 980              		.loc 3 432 26 discriminator 2 view .LVU281
 981 00dc D8ED007A 		vldr.32	s15, [r8]
 430:./shy_fft.h   **** 
 982              		.loc 3 430 20 discriminator 2 view .LVU282
 983 00e0 6544     		add	r5, r5, ip
 984              	.LVL72:
 433:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 985              		.loc 3 433 21 discriminator 2 view .LVU283
 986 00e2 04EB8101 		add	r1, r4, r1, lsl #2
 987              	.LVL73:
 432:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 988              		.loc 3 432 26 discriminator 2 view .LVU284
 989 00e6 9EED007A 		vldr.32	s14, [lr]
 433:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 990              		.loc 3 433 29 discriminator 2 view .LVU285
 991 00ea 04EB8505 		add	r5, r4, r5, lsl #2
 992              	.LVL74:
 432:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 993              		.loc 3 432 26 discriminator 2 view .LVU286
 994 00ee 77EEC77A 		vsub.f32	s15, s15, s14
 432:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
ARM GAS  /tmp/cchieLBQ.s 			page 54


 995              		.loc 3 432 13 discriminator 2 view .LVU287
 996 00f2 46ED037A 		vstr.32	s15, [r6, #-12]
 433:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 997              		.loc 3 433 26 discriminator 2 view .LVU288
 998 00f6 95ED007A 		vldr.32	s14, [r5]
 999 00fa D1ED007A 		vldr.32	s15, [r1]
 1000 00fe 77EEC77A 		vsub.f32	s15, s15, s14
 433:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 1001              		.loc 3 433 13 discriminator 2 view .LVU289
 1002 0102 46ED017A 		vstr.32	s15, [r6, #-4]
 434:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 1003              		.loc 3 434 15 discriminator 2 view .LVU290
 1004 0106 9EED007A 		vldr.32	s14, [lr]
 1005 010a D8ED007A 		vldr.32	s15, [r8]
 435:./shy_fft.h   ****             d[0] = a + b;
 1006              		.loc 3 435 15 discriminator 2 view .LVU291
 1007 010e D5ED006A 		vldr.32	s13, [r5]
 434:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 1008              		.loc 3 434 15 discriminator 2 view .LVU292
 1009 0112 77EE877A 		vadd.f32	s15, s15, s14
 1010              	.LVL75:
 435:./shy_fft.h   ****             d[0] = a + b;
 1011              		.loc 3 435 15 discriminator 2 view .LVU293
 1012 0116 91ED007A 		vldr.32	s14, [r1]
 1013 011a 37EE267A 		vadd.f32	s14, s14, s13
 1014              	.LVL76:
 436:./shy_fft.h   ****             d[2] = a - b;
 1015              		.loc 3 436 22 discriminator 2 view .LVU294
 1016 011e 77EE876A 		vadd.f32	s13, s15, s14
 437:./shy_fft.h   ****             d += 4;
 1017              		.loc 3 437 22 discriminator 2 view .LVU295
 1018 0122 77EEC77A 		vsub.f32	s15, s15, s14
 1019              	.LVL77:
 436:./shy_fft.h   ****             d[2] = a - b;
 1020              		.loc 3 436 13 discriminator 2 view .LVU296
 1021 0126 46ED046A 		vstr.32	s13, [r6, #-16]
 1022              	.LVL78:
 437:./shy_fft.h   ****             d += 4;
 1023              		.loc 3 437 13 discriminator 2 view .LVU297
 1024 012a 46ED027A 		vstr.32	s15, [r6, #-8]
 1025              	.LVL79:
 437:./shy_fft.h   ****             d += 4;
 1026              		.loc 3 437 13 discriminator 2 view .LVU298
 1027              	.LBE211:
 423:./shy_fft.h   ****         {
 1028              		.loc 3 423 9 is_stmt 1 discriminator 2 view .LVU299
 423:./shy_fft.h   ****         {
 1029              		.loc 3 423 9 is_stmt 0 discriminator 2 view .LVU300
 1030 012e 78E7     		b	.L29
 1031              	.LVL80:
 1032              	.L37:
 423:./shy_fft.h   ****         {
 1033              		.loc 3 423 9 discriminator 2 view .LVU301
 1034              	.LBE222:
 1035              	.LBB223:
 463:./shy_fft.h   ****         {
 1036              		.loc 3 463 20 view .LVU302
ARM GAS  /tmp/cchieLBQ.s 			page 55


 1037 0130 0326     		movs	r6, #3
 1038              	.LBE223:
 1039              	.LBB235:
 1040 0132 CDF814B0 		str	fp, [sp, #20]
 1041              	.LVL81:
 1042              	.L30:
 463:./shy_fft.h   ****         {
 1043              		.loc 3 463 20 view .LVU303
 1044              	.LBE235:
 1045              	.LBB236:
 463:./shy_fft.h   ****         {
 1046              		.loc 3 463 35 is_stmt 1 discriminator 1 view .LVU304
 1047 0136 1B9B     		ldr	r3, [sp, #108]
 1048 0138 9E42     		cmp	r6, r3
 1049 013a 80F0B480 		bcs	.L31
 1050              	.LVL82:
 1051              	.LBB224:
 472:./shy_fft.h   ****             size_t n_2 = n >> 1;
 1052              		.loc 3 472 28 is_stmt 0 view .LVU305
 1053 013e 0123     		movs	r3, #1
 1054 0140 04F10408 		add	r8, r4, #4
 1055 0144 B340     		lsls	r3, r3, r6
 1056              	.LVL83:
 473:./shy_fft.h   **** 
 1057              		.loc 3 473 20 view .LVU306
 1058 0146 5A08     		lsrs	r2, r3, #1
 1059 0148 0C92     		str	r2, [sp, #48]
 1060              	.LVL84:
 1061              	.LBB225:
 1062              	.LBB226:
 478:./shy_fft.h   ****                 T* dr  = d + i;
 1063              		.loc 3 478 30 view .LVU307
 1064 014a 0422     		movs	r2, #4
 1065              	.LVL85:
 478:./shy_fft.h   ****                 T* dr  = d + i;
 1066              		.loc 3 478 30 view .LVU308
 1067 014c B240     		lsls	r2, r2, r6
 1068 014e 0092     		str	r2, [sp]
 484:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 1069              		.loc 3 484 30 view .LVU309
 1070 0150 5A08     		lsrs	r2, r3, #1
 1071 0152 9200     		lsls	r2, r2, #2
 1072 0154 0492     		str	r2, [sp, #16]
 1073              	.LBE226:
 475:./shy_fft.h   ****             {
 1074              		.loc 3 475 52 view .LVU310
 1075 0156 5A00     		lsls	r2, r3, #1
 1076 0158 DB00     		lsls	r3, r3, #3
 1077              	.LVL86:
 475:./shy_fft.h   ****             {
 1078              		.loc 3 475 52 view .LVU311
 1079 015a 0B92     		str	r2, [sp, #44]
 1080 015c 0193     		str	r3, [sp, #4]
 1081 015e 009B     		ldr	r3, [sp]
 1082 0160 009A     		ldr	r2, [sp]
 1083 0162 04EB0309 		add	r9, r4, r3
 1084 0166 059B     		ldr	r3, [sp, #20]
ARM GAS  /tmp/cchieLBQ.s 			page 56


 1085 0168 0293     		str	r3, [sp, #8]
 1086 016a 049B     		ldr	r3, [sp, #16]
 1087 016c 1D1D     		adds	r5, r3, #4
 1088 016e 2B19     		adds	r3, r5, r4
 1089 0170 0393     		str	r3, [sp, #12]
 1090 0172 059B     		ldr	r3, [sp, #20]
 1091 0174 9F18     		adds	r7, r3, r2
 475:./shy_fft.h   ****             {
 1092              		.loc 3 475 24 view .LVU312
 1093 0176 0023     		movs	r3, #0
 1094 0178 0793     		str	r3, [sp, #28]
 1095              	.LVL87:
 1096              	.L35:
 475:./shy_fft.h   ****             {
 1097              		.loc 3 475 33 is_stmt 1 discriminator 1 view .LVU313
 1098 017a DDE90623 		ldrd	r2, r3, [sp, #24]
 1099 017e 9342     		cmp	r3, r2
 1100 0180 80F08C80 		bcs	.L32
 1101              	.LVL88:
 1102              	.LBB232:
 482:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 1103              		.loc 3 482 34 is_stmt 0 view .LVU314
 1104 0184 99ED007A 		vldr.32	s14, [r9]
 1105              	.LBB227:
 489:./shy_fft.h   ****                 {
 1106              		.loc 3 489 28 view .LVU315
 1107 0188 4FF0010A 		mov	r10, #1
 1108              	.LVL89:
 489:./shy_fft.h   ****                 {
 1109              		.loc 3 489 28 view .LVU316
 1110              	.LBE227:
 482:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 1111              		.loc 3 482 34 view .LVU317
 1112 018c 58ED017A 		vldr.32	s15, [r8, #-4]
 482:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 1113              		.loc 3 482 17 view .LVU318
 1114 0190 029B     		ldr	r3, [sp, #8]
 482:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 1115              		.loc 3 482 34 view .LVU319
 1116 0192 77EE877A 		vadd.f32	s15, s15, s14
 484:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 1117              		.loc 3 484 17 view .LVU320
 1118 0196 0499     		ldr	r1, [sp, #16]
 488:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 1119              		.loc 3 488 17 view .LVU321
 1120 0198 1A90     		str	r0, [sp, #104]
 482:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 1121              		.loc 3 482 17 view .LVU322
 1122 019a C3ED007A 		vstr.32	s15, [r3]
 483:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 1123              		.loc 3 483 34 view .LVU323
 1124 019e 58ED017A 		vldr.32	s15, [r8, #-4]
 1125 01a2 99ED007A 		vldr.32	s14, [r9]
 484:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 1126              		.loc 3 484 30 view .LVU324
 1127 01a6 039B     		ldr	r3, [sp, #12]
 483:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
ARM GAS  /tmp/cchieLBQ.s 			page 57


 1128              		.loc 3 483 34 view .LVU325
 1129 01a8 77EEC77A 		vsub.f32	s15, s15, s14
 483:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 1130              		.loc 3 483 17 view .LVU326
 1131 01ac C7ED007A 		vstr.32	s15, [r7]
 484:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 1132              		.loc 3 484 30 view .LVU327
 1133 01b0 53F8042C 		ldr	r2, [r3, #-4]	@ float
 484:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 1134              		.loc 3 484 17 view .LVU328
 1135 01b4 029B     		ldr	r3, [sp, #8]
 1136 01b6 0B44     		add	r3, r3, r1
 1137 01b8 1A60     		str	r2, [r3]	@ float
 485:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 1138              		.loc 3 485 30 view .LVU329
 1139 01ba 09EB0103 		add	r3, r9, r1
 1140 01be 1A68     		ldr	r2, [r3]	@ float
 485:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 1141              		.loc 3 485 17 view .LVU330
 1142 01c0 7B18     		adds	r3, r7, r1
 488:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 1143              		.loc 3 488 17 view .LVU331
 1144 01c2 3146     		mov	r1, r6
 485:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 1145              		.loc 3 485 17 view .LVU332
 1146 01c4 1A60     		str	r2, [r3]	@ float
 1147              	.LVL90:
 488:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 1148              		.loc 3 488 17 view .LVU333
 1149 01c6 FFF7FEFF 		bl	_ZN14RotationPhasorIfLj12EE5StartEj
 1150              	.LVL91:
 488:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 1151              		.loc 3 488 17 view .LVU334
 1152 01ca 0399     		ldr	r1, [sp, #12]
 1153 01cc 009A     		ldr	r2, [sp]
 1154 01ce 009B     		ldr	r3, [sp]
 1155 01d0 0A44     		add	r2, r2, r1
 1156 01d2 0299     		ldr	r1, [sp, #8]
 1157 01d4 4344     		add	r3, r3, r8
 1158              	.LBB230:
 489:./shy_fft.h   ****                 {
 1159              		.loc 3 489 28 view .LVU335
 1160 01d6 1A98     		ldr	r0, [sp, #104]
 1161 01d8 0431     		adds	r1, r1, #4
 1162 01da 0A91     		str	r1, [sp, #40]
 1163 01dc 0099     		ldr	r1, [sp]
 1164 01de 3944     		add	r1, r1, r7
 1165 01e0 0991     		str	r1, [sp, #36]
 1166              	.LBE230:
 488:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 1167              		.loc 3 488 17 view .LVU336
 1168 01e2 0399     		ldr	r1, [sp, #12]
 1169 01e4 0891     		str	r1, [sp, #32]
 1170 01e6 4146     		mov	r1, r8
 1171              	.LVL92:
 1172              	.L34:
 1173              	.LBB231:
ARM GAS  /tmp/cchieLBQ.s 			page 58


 489:./shy_fft.h   ****                 {
 1174              		.loc 3 489 37 is_stmt 1 discriminator 3 view .LVU337
 1175 01e8 0C9D     		ldr	r5, [sp, #48]
 1176 01ea AA45     		cmp	r10, r5
 1177 01ec 44D2     		bcs	.L33
 1178              	.LBB228:
 492:./shy_fft.h   ****                     T v;
 1179              		.loc 3 492 23 is_stmt 0 discriminator 2 view .LVU338
 1180 01ee 90ED136A 		vldr.32	s12, [r0, #76]
 1181 01f2 6FF0030C 		mvn	ip, #3
 495:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 1182              		.loc 3 495 46 discriminator 2 view .LVU339
 1183 01f6 92ED007A 		vldr.32	s14, [r2]
 491:./shy_fft.h   ****                     T s = phasor->sin();
 1184              		.loc 3 491 23 discriminator 2 view .LVU340
 1185 01fa D0ED127A 		vldr.32	s15, [r0, #72]
 1186              	.LVL93:
 491:./shy_fft.h   ****                     T s = phasor->sin();
 1187              		.loc 3 491 23 discriminator 2 view .LVU341
 1188 01fe 0CFB0A7C 		mla	ip, ip, r10, r7
 495:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 1189              		.loc 3 495 21 discriminator 2 view .LVU342
 1190 0202 26EE477A 		vnmul.f32	s14, s12, s14
 495:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 1191              		.loc 3 495 33 discriminator 2 view .LVU343
 1192 0206 D3ED006A 		vldr.32	s13, [r3]
 496:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 1193              		.loc 3 496 21 discriminator 2 view .LVU344
 1194 020a 0A9D     		ldr	r5, [sp, #40]
 502:./shy_fft.h   ****                 }
 1195              		.loc 3 502 21 discriminator 2 view .LVU345
 1196 020c 1A90     		str	r0, [sp, #104]
 495:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 1197              		.loc 3 495 21 discriminator 2 view .LVU346
 1198 020e A6EEA77A 		vfma.f32	s14, s13, s15
 1199              	.LVL94:
 496:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 1200              		.loc 3 496 33 discriminator 2 view .LVU347
 1201 0212 D1ED006A 		vldr.32	s13, [r1]
 496:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 1202              		.loc 3 496 37 discriminator 2 view .LVU348
 1203 0216 76EE876A 		vadd.f32	s13, s13, s14
 496:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 1204              		.loc 3 496 21 discriminator 2 view .LVU349
 1205 021a E5EC016A 		vstmia.32	r5!, {s13}
 497:./shy_fft.h   **** 
 1206              		.loc 3 497 37 discriminator 2 view .LVU350
 1207 021e F1EC016A 		vldmia.32	r1!, {s13}
 496:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 1208              		.loc 3 496 21 discriminator 2 view .LVU351
 1209 0222 0A95     		str	r5, [sp, #40]
 497:./shy_fft.h   **** 
 1210              		.loc 3 497 37 discriminator 2 view .LVU352
 1211 0224 36EEC77A 		vsub.f32	s14, s13, s14
 1212              	.LVL95:
 497:./shy_fft.h   **** 
 1213              		.loc 3 497 37 discriminator 2 view .LVU353
ARM GAS  /tmp/cchieLBQ.s 			page 59


 1214 0228 0F91     		str	r1, [sp, #60]
 497:./shy_fft.h   **** 
 1215              		.loc 3 497 21 discriminator 2 view .LVU354
 1216 022a 8CED007A 		vstr.32	s14, [ip]
 500:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 1217              		.loc 3 500 21 discriminator 2 view .LVU355
 1218 022e 0CEBCA0C 		add	ip, ip, r10, lsl #3
 499:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 1219              		.loc 3 499 53 discriminator 2 view .LVU356
 1220 0232 B2EC017A 		vldmia.32	r2!, {s14}
 1221              	.LBE228:
 489:./shy_fft.h   ****                 {
 1222              		.loc 3 489 17 discriminator 2 view .LVU357
 1223 0236 0AF1010A 		add	r10, r10, #1
 1224              	.LVL96:
 1225              	.LBB229:
 499:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 1226              		.loc 3 499 53 discriminator 2 view .LVU358
 1227 023a 67EE877A 		vmul.f32	s15, s15, s14
 1228              	.LVL97:
 499:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 1229              		.loc 3 499 21 discriminator 2 view .LVU359
 1230 023e B3EC017A 		vldmia.32	r3!, {s14}
 499:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 1231              		.loc 3 499 53 discriminator 2 view .LVU360
 1232 0242 0E92     		str	r2, [sp, #56]
 499:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 1233              		.loc 3 499 21 discriminator 2 view .LVU361
 1234 0244 0D93     		str	r3, [sp, #52]
 1235 0246 E7EE067A 		vfma.f32	s15, s14, s12
 1236              	.LVL98:
 500:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 1237              		.loc 3 500 40 discriminator 2 view .LVU362
 1238 024a 089B     		ldr	r3, [sp, #32]
 1239 024c 93ED007A 		vldr.32	s14, [r3]
 500:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 1240              		.loc 3 500 35 discriminator 2 view .LVU363
 1241 0250 37EE277A 		vadd.f32	s14, s14, s15
 500:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 1242              		.loc 3 500 21 discriminator 2 view .LVU364
 1243 0254 8CED007A 		vstr.32	s14, [ip]
 501:./shy_fft.h   ****                     phasor->Rotate();
 1244              		.loc 3 501 35 discriminator 2 view .LVU365
 1245 0258 B3EC017A 		vldmia.32	r3!, {s14}
 1246 025c 77EEC77A 		vsub.f32	s15, s15, s14
 1247              	.LVL99:
 501:./shy_fft.h   ****                     phasor->Rotate();
 1248              		.loc 3 501 35 discriminator 2 view .LVU366
 1249 0260 0893     		str	r3, [sp, #32]
 501:./shy_fft.h   ****                     phasor->Rotate();
 1250              		.loc 3 501 21 discriminator 2 view .LVU367
 1251 0262 099B     		ldr	r3, [sp, #36]
 1252 0264 63ED017A 		vstmdb.32	r3!, {s15}
 1253 0268 0993     		str	r3, [sp, #36]
 502:./shy_fft.h   ****                 }
 1254              		.loc 3 502 21 discriminator 2 view .LVU368
 1255 026a FFF7FEFF 		bl	_ZN14RotationPhasorIfLj12EE6RotateEv
ARM GAS  /tmp/cchieLBQ.s 			page 60


 1256              	.LVL100:
 502:./shy_fft.h   ****                 }
 1257              		.loc 3 502 21 discriminator 2 view .LVU369
 1258              	.LBE229:
 489:./shy_fft.h   ****                 {
 1259              		.loc 3 489 17 is_stmt 1 discriminator 2 view .LVU370
 489:./shy_fft.h   ****                 {
 1260              		.loc 3 489 17 is_stmt 0 discriminator 2 view .LVU371
 1261 026e 1A98     		ldr	r0, [sp, #104]
 1262 0270 0F99     		ldr	r1, [sp, #60]
 1263 0272 DDE90D32 		ldrd	r3, r2, [sp, #52]
 1264 0276 B7E7     		b	.L34
 1265              	.LVL101:
 1266              	.L33:
 489:./shy_fft.h   ****                 {
 1267              		.loc 3 489 17 discriminator 2 view .LVU372
 1268              	.LBE231:
 1269              	.LBE232:
 475:./shy_fft.h   ****             {
 1270              		.loc 3 475 13 is_stmt 1 discriminator 2 view .LVU373
 1271 0278 079B     		ldr	r3, [sp, #28]
 1272 027a 0B9A     		ldr	r2, [sp, #44]
 1273 027c 1344     		add	r3, r3, r2
 1274 027e 0793     		str	r3, [sp, #28]
 1275              	.LVL102:
 475:./shy_fft.h   ****             {
 1276              		.loc 3 475 13 is_stmt 0 discriminator 2 view .LVU374
 1277 0280 019B     		ldr	r3, [sp, #4]
 1278              	.LVL103:
 475:./shy_fft.h   ****             {
 1279              		.loc 3 475 13 discriminator 2 view .LVU375
 1280 0282 9944     		add	r9, r9, r3
 1281              	.LVL104:
 475:./shy_fft.h   ****             {
 1282              		.loc 3 475 13 discriminator 2 view .LVU376
 1283 0284 9844     		add	r8, r8, r3
 1284              	.LVL105:
 475:./shy_fft.h   ****             {
 1285              		.loc 3 475 13 discriminator 2 view .LVU377
 1286 0286 DDE90123 		ldrd	r2, r3, [sp, #4]
 1287 028a 1344     		add	r3, r3, r2
 1288 028c 0293     		str	r3, [sp, #8]
 1289              	.LVL106:
 475:./shy_fft.h   ****             {
 1290              		.loc 3 475 13 discriminator 2 view .LVU378
 1291 028e 1346     		mov	r3, r2
 1292 0290 039A     		ldr	r2, [sp, #12]
 1293 0292 1A44     		add	r2, r2, r3
 1294 0294 019B     		ldr	r3, [sp, #4]
 1295 0296 0392     		str	r2, [sp, #12]
 1296              	.LVL107:
 475:./shy_fft.h   ****             {
 1297              		.loc 3 475 13 discriminator 2 view .LVU379
 1298 0298 1F44     		add	r7, r7, r3
 1299              	.LVL108:
 475:./shy_fft.h   ****             {
 1300              		.loc 3 475 13 discriminator 2 view .LVU380
ARM GAS  /tmp/cchieLBQ.s 			page 61


 1301 029a 6EE7     		b	.L35
 1302              	.LVL109:
 1303              	.L32:
 475:./shy_fft.h   ****             {
 1304              		.loc 3 475 13 discriminator 2 view .LVU381
 1305              	.LBE225:
 1306              	.LBE224:
 463:./shy_fft.h   ****         {
 1307              		.loc 3 463 9 is_stmt 1 discriminator 2 view .LVU382
 1308 029c 059B     		ldr	r3, [sp, #20]
 1309              	.LVL110:
 463:./shy_fft.h   ****         {
 1310              		.loc 3 463 9 is_stmt 0 discriminator 2 view .LVU383
 1311 029e 0136     		adds	r6, r6, #1
 1312              	.LVL111:
 463:./shy_fft.h   ****         {
 1313              		.loc 3 463 9 discriminator 2 view .LVU384
 1314 02a0 0594     		str	r4, [sp, #20]
 1315              	.LVL112:
 1316              	.LBB234:
 1317              	.LBB233:
 469:./shy_fft.h   ****             }
 1318              		.loc 3 469 17 discriminator 2 view .LVU385
 1319 02a2 1C46     		mov	r4, r3
 1320              	.LVL113:
 469:./shy_fft.h   ****             }
 1321              		.loc 3 469 17 discriminator 2 view .LVU386
 1322              	.LBE233:
 1323              	.LBE234:
 463:./shy_fft.h   ****         {
 1324              		.loc 3 463 9 discriminator 2 view .LVU387
 1325 02a4 47E7     		b	.L30
 1326              	.LVL114:
 1327              	.L31:
 463:./shy_fft.h   ****         {
 1328              		.loc 3 463 9 discriminator 2 view .LVU388
 1329              	.LBE236:
 508:./shy_fft.h   ****         {
 1330              		.loc 3 508 9 view .LVU389
 1331 02a6 5C45     		cmp	r4, fp
 1332 02a8 07D0     		beq	.L26
 510:./shy_fft.h   ****         }
 1333              		.loc 3 510 32 view .LVU390
 1334 02aa 0421     		movs	r1, #4
 1335 02ac 1B9B     		ldr	r3, [sp, #108]
 510:./shy_fft.h   ****         }
 1336              		.loc 3 510 22 view .LVU391
 1337 02ae 5A46     		mov	r2, fp
 1338 02b0 2046     		mov	r0, r4
 510:./shy_fft.h   ****         }
 1339              		.loc 3 510 32 view .LVU392
 1340 02b2 9940     		lsls	r1, r1, r3
 510:./shy_fft.h   ****         }
 1341              		.loc 3 510 22 view .LVU393
 1342 02b4 2144     		add	r1, r1, r4
 1343 02b6 FFF7FEFF 		bl	_ZSt4copyIPfS0_ET0_T_S2_S1_
 1344              	.LVL115:
ARM GAS  /tmp/cchieLBQ.s 			page 62


 1345              	.L26:
 512:./shy_fft.h   **** };
 1346              		.loc 3 512 5 view .LVU394
 1347 02ba 11B0     		add	sp, sp, #68
 1348              		.cfi_def_cfa_offset 36
 1349              		@ sp needed
 1350 02bc BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1351              	.LVL116:
 1352              	.L39:
 512:./shy_fft.h   **** };
 1353              		.loc 3 512 5 view .LVU395
 1354              		.align	2
 1355              	.L38:
 1356 02c0 F304353F 		.word	1060439283
 1357              		.cfi_endproc
 1358              	.LFE4715:
 1360              		.section	.text._ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_,"axG",%progbits
 1361              		.align	1
 1362              		.weak	_ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_
 1363              		.syntax unified
 1364              		.thumb
 1365              		.thumb_func
 1366              		.fpu fpv5-d16
 1368              	_ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_:
 1369              	.LVL117:
 1370              	.LFB4716:
 309:./shy_fft.h   ****     {
 1371              		.loc 3 309 10 is_stmt 1 view -0
 1372              		.cfi_startproc
 1373              		@ args = 4, pretend = 0, frame = 64
 1374              		@ frame_needed = 0, uses_anonymous_args = 0
 1375              	.LBB237:
 317:./shy_fft.h   ****         {
 1376              		.loc 3 317 29 view .LVU397
 1377              	.LBE237:
 309:./shy_fft.h   ****     {
 1378              		.loc 3 309 10 is_stmt 0 view .LVU398
 1379 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1380              		.cfi_def_cfa_offset 36
 1381              		.cfi_offset 4, -36
 1382              		.cfi_offset 5, -32
 1383              		.cfi_offset 6, -28
 1384              		.cfi_offset 7, -24
 1385              		.cfi_offset 8, -20
 1386              		.cfi_offset 9, -16
 1387              		.cfi_offset 10, -12
 1388              		.cfi_offset 11, -8
 1389              		.cfi_offset 14, -4
 1390 0004 91B0     		sub	sp, sp, #68
 1391              		.cfi_def_cfa_offset 104
 309:./shy_fft.h   ****     {
 1392              		.loc 3 309 10 view .LVU399
 1393 0006 0C46     		mov	r4, r1
 1394 0008 9346     		mov	fp, r2
 1395 000a 02F11005 		add	r5, r2, #16
 1396 000e 1A98     		ldr	r0, [sp, #104]
 1397              	.LVL118:
ARM GAS  /tmp/cchieLBQ.s 			page 63


 1398              	.LBB241:
 317:./shy_fft.h   ****         {
 1399              		.loc 3 317 20 view .LVU400
 1400 0010 0026     		movs	r6, #0
 1401              	.LVL119:
 1402              	.L41:
 1403              	.LBB238:
 322:./shy_fft.h   ****                                   >> (16 - num_passes);
 1404              		.loc 3 322 43 discriminator 2 view .LVU401
 1405 0012 F2B2     		uxtb	r2, r6
 1406 0014 1035     		adds	r5, r5, #16
 1407              	.LVL120:
 322:./shy_fft.h   ****                                   >> (16 - num_passes);
 1408              		.loc 3 322 51 discriminator 2 view .LVU402
 1409 0016 995C     		ldrb	r1, [r3, r2]	@ zero_extendqisi2
 322:./shy_fft.h   ****                                   >> (16 - num_passes);
 1410              		.loc 3 322 69 discriminator 2 view .LVU403
 1411 0018 320A     		lsrs	r2, r6, #8
 1412              	.LBE238:
 317:./shy_fft.h   ****         {
 1413              		.loc 3 317 9 discriminator 2 view .LVU404
 1414 001a 0436     		adds	r6, r6, #4
 1415              	.LVL121:
 1416              	.LBB239:
 322:./shy_fft.h   ****                                   >> (16 - num_passes);
 1417              		.loc 3 322 57 discriminator 2 view .LVU405
 1418 001c 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 1419              	.LBE239:
 317:./shy_fft.h   ****         {
 1420              		.loc 3 317 29 discriminator 2 view .LVU406
 1421 001e B6F5805F 		cmp	r6, #4096
 1422              	.LBB240:
 322:./shy_fft.h   ****                                   >> (16 - num_passes);
 1423              		.loc 3 322 57 discriminator 2 view .LVU407
 1424 0022 42EA0122 		orr	r2, r2, r1, lsl #8
 323:./shy_fft.h   ****             size_t r1 = r0 + 2 * (size >> 2);
 1425              		.loc 3 323 35 discriminator 2 view .LVU408
 1426 0026 4FEA2212 		asr	r2, r2, #4
 328:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 1427              		.loc 3 328 21 discriminator 2 view .LVU409
 1428 002a 4FEA8201 		lsl	r1, r2, #2
 1429 002e 04EB8202 		add	r2, r4, r2, lsl #2
 328:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 1430              		.loc 3 328 29 discriminator 2 view .LVU410
 1431 0032 01F5005C 		add	ip, r1, #8192
 329:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 1432              		.loc 3 329 21 discriminator 2 view .LVU411
 1433 0036 01F58057 		add	r7, r1, #4096
 328:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 1434              		.loc 3 328 26 discriminator 2 view .LVU412
 1435 003a D2ED007A 		vldr.32	s15, [r2]
 329:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 1436              		.loc 3 329 29 discriminator 2 view .LVU413
 1437 003e 01F54051 		add	r1, r1, #12288
 328:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 1438              		.loc 3 328 29 discriminator 2 view .LVU414
 1439 0042 A444     		add	ip, ip, r4
ARM GAS  /tmp/cchieLBQ.s 			page 64


 329:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 1440              		.loc 3 329 21 discriminator 2 view .LVU415
 1441 0044 2744     		add	r7, r7, r4
 329:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 1442              		.loc 3 329 29 discriminator 2 view .LVU416
 1443 0046 2144     		add	r1, r1, r4
 328:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 1444              		.loc 3 328 26 discriminator 2 view .LVU417
 1445 0048 9CED007A 		vldr.32	s14, [ip]
 1446 004c 77EEC77A 		vsub.f32	s15, s15, s14
 328:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 1447              		.loc 3 328 13 discriminator 2 view .LVU418
 1448 0050 45ED077A 		vstr.32	s15, [r5, #-28]
 1449              	.LVL122:
 329:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 1450              		.loc 3 329 26 discriminator 2 view .LVU419
 1451 0054 D7ED007A 		vldr.32	s15, [r7]
 1452 0058 91ED007A 		vldr.32	s14, [r1]
 1453 005c 77EEC77A 		vsub.f32	s15, s15, s14
 329:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 1454              		.loc 3 329 13 discriminator 2 view .LVU420
 1455 0060 45ED057A 		vstr.32	s15, [r5, #-20]
 330:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 1456              		.loc 3 330 15 discriminator 2 view .LVU421
 1457 0064 9CED007A 		vldr.32	s14, [ip]
 1458 0068 D2ED007A 		vldr.32	s15, [r2]
 331:./shy_fft.h   ****             d[0] = a + b;
 1459              		.loc 3 331 15 discriminator 2 view .LVU422
 1460 006c D1ED006A 		vldr.32	s13, [r1]
 330:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 1461              		.loc 3 330 15 discriminator 2 view .LVU423
 1462 0070 77EE877A 		vadd.f32	s15, s15, s14
 1463              	.LVL123:
 331:./shy_fft.h   ****             d[0] = a + b;
 1464              		.loc 3 331 15 discriminator 2 view .LVU424
 1465 0074 97ED007A 		vldr.32	s14, [r7]
 1466 0078 37EE267A 		vadd.f32	s14, s14, s13
 1467              	.LVL124:
 332:./shy_fft.h   ****             d[2] = a - b;
 1468              		.loc 3 332 22 discriminator 2 view .LVU425
 1469 007c 77EE876A 		vadd.f32	s13, s15, s14
 333:./shy_fft.h   ****             d += 4;
 1470              		.loc 3 333 22 discriminator 2 view .LVU426
 1471 0080 77EEC77A 		vsub.f32	s15, s15, s14
 1472              	.LVL125:
 332:./shy_fft.h   ****             d[2] = a - b;
 1473              		.loc 3 332 13 discriminator 2 view .LVU427
 1474 0084 45ED086A 		vstr.32	s13, [r5, #-32]
 1475              	.LVL126:
 333:./shy_fft.h   ****             d += 4;
 1476              		.loc 3 333 13 discriminator 2 view .LVU428
 1477 0088 45ED067A 		vstr.32	s15, [r5, #-24]
 1478              	.LVL127:
 333:./shy_fft.h   ****             d += 4;
 1479              		.loc 3 333 13 discriminator 2 view .LVU429
 1480              	.LBE240:
 317:./shy_fft.h   ****         {
ARM GAS  /tmp/cchieLBQ.s 			page 65


 1481              		.loc 3 317 9 is_stmt 1 discriminator 2 view .LVU430
 317:./shy_fft.h   ****         {
 1482              		.loc 3 317 29 discriminator 2 view .LVU431
 1483 008c C1D1     		bne	.L41
 1484 008e 5B46     		mov	r3, fp
 1485              	.LVL128:
 317:./shy_fft.h   ****         {
 1486              		.loc 3 317 29 is_stmt 0 discriminator 2 view .LVU432
 1487 0090 2246     		mov	r2, r4
 1488 0092 0BF58041 		add	r1, fp, #16384
 1489              	.LVL129:
 1490              	.L42:
 317:./shy_fft.h   ****         {
 1491              		.loc 3 317 29 discriminator 2 view .LVU433
 1492              	.LBE241:
 1493              	.LBB242:
 1494              	.LBB243:
 344:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 1495              		.loc 3 344 29 discriminator 2 view .LVU434
 1496 0096 93ED047A 		vldr.32	s14, [r3, #16]
 1497 009a 2033     		adds	r3, r3, #32
 1498 009c 53ED087A 		vldr.32	s15, [r3, #-32]
 1499 00a0 2032     		adds	r2, r2, #32
 1500 00a2 77EE877A 		vadd.f32	s15, s15, s14
 344:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 1501              		.loc 3 344 13 discriminator 2 view .LVU435
 1502 00a6 42ED087A 		vstr.32	s15, [r2, #-32]
 345:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 1503              		.loc 3 345 29 discriminator 2 view .LVU436
 1504 00aa 13ED047A 		vldr.32	s14, [r3, #-16]
 1505 00ae 53ED087A 		vldr.32	s15, [r3, #-32]
 1506 00b2 77EEC77A 		vsub.f32	s15, s15, s14
 345:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 1507              		.loc 3 345 13 discriminator 2 view .LVU437
 1508 00b6 42ED047A 		vstr.32	s15, [r2, #-16]
 346:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 1509              		.loc 3 346 25 discriminator 2 view .LVU438
 1510 00ba 53F8185C 		ldr	r5, [r3, #-24]	@ float
 346:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 1511              		.loc 3 346 13 discriminator 2 view .LVU439
 1512 00be 42F8185C 		str	r5, [r2, #-24]	@ float
 347:./shy_fft.h   **** 
 1513              		.loc 3 347 25 discriminator 2 view .LVU440
 1514 00c2 53F8085C 		ldr	r5, [r3, #-8]	@ float
 347:./shy_fft.h   **** 
 1515              		.loc 3 347 13 discriminator 2 view .LVU441
 1516 00c6 42F8085C 		str	r5, [r2, #-8]	@ float
 349:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 1517              		.loc 3 349 34 discriminator 2 view .LVU442
 1518 00ca 53ED017A 		vldr.32	s15, [r3, #-4]
 1519 00ce 13ED037A 		vldr.32	s14, [r3, #-12]
 350:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 1520              		.loc 3 350 33 discriminator 2 view .LVU443
 1521 00d2 53ED076A 		vldr.32	s13, [r3, #-28]
 349:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 1522              		.loc 3 349 34 discriminator 2 view .LVU444
 1523 00d6 37EE677A 		vsub.f32	s14, s14, s15
ARM GAS  /tmp/cchieLBQ.s 			page 66


 1524              	.LVL130:
 349:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 1525              		.loc 3 349 34 discriminator 2 view .LVU445
 1526              	.LBE243:
 1527              	.LBE242:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 1528              		.loc 3 137 41 is_stmt 1 discriminator 2 view .LVU446
 1529              	.LBB247:
 1530              	.LBB244:
 350:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 1531              		.loc 3 350 33 is_stmt 0 discriminator 2 view .LVU447
 1532 00da DFED717A 		vldr.32	s15, .L52
 1533 00de E7EE276A 		vfma.f32	s13, s14, s15
 350:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 1534              		.loc 3 350 13 discriminator 2 view .LVU448
 1535 00e2 42ED076A 		vstr.32	s13, [r2, #-28]
 351:./shy_fft.h   **** 
 1536              		.loc 3 351 33 discriminator 2 view .LVU449
 1537 00e6 53ED076A 		vldr.32	s13, [r3, #-28]
 1538 00ea E7EE676A 		vfms.f32	s13, s14, s15
 351:./shy_fft.h   **** 
 1539              		.loc 3 351 13 discriminator 2 view .LVU450
 1540 00ee 42ED056A 		vstr.32	s13, [r2, #-20]
 353:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 1541              		.loc 3 353 34 discriminator 2 view .LVU451
 1542 00f2 53ED016A 		vldr.32	s13, [r3, #-4]
 1543 00f6 13ED037A 		vldr.32	s14, [r3, #-12]
 1544              	.LVL131:
 353:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 1545              		.loc 3 353 34 discriminator 2 view .LVU452
 1546 00fa 37EE267A 		vadd.f32	s14, s14, s13
 1547              	.LVL132:
 353:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 1548              		.loc 3 353 34 discriminator 2 view .LVU453
 1549              	.LBE244:
 1550              	.LBE247:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 1551              		.loc 3 137 41 is_stmt 1 discriminator 2 view .LVU454
 1552              	.LBB248:
 1553              	.LBB245:
 354:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 1554              		.loc 3 354 26 is_stmt 0 discriminator 2 view .LVU455
 1555 00fe 53ED056A 		vldr.32	s13, [r3, #-20]
 1556 0102 E7EE276A 		vfma.f32	s13, s14, s15
 354:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 1557              		.loc 3 354 13 discriminator 2 view .LVU456
 1558 0106 42ED036A 		vstr.32	s13, [r2, #-12]
 355:./shy_fft.h   ****         }
 1559              		.loc 3 355 26 discriminator 2 view .LVU457
 1560 010a 53ED056A 		vldr.32	s13, [r3, #-20]
 1561              	.LBE245:
 340:./shy_fft.h   ****         {
 1562              		.loc 3 340 29 discriminator 2 view .LVU458
 1563 010e 8B42     		cmp	r3, r1
 1564              	.LBB246:
 355:./shy_fft.h   ****         }
 1565              		.loc 3 355 26 discriminator 2 view .LVU459
ARM GAS  /tmp/cchieLBQ.s 			page 67


 1566 0110 D7EE276A 		vfnms.f32	s13, s14, s15
 355:./shy_fft.h   ****         }
 1567              		.loc 3 355 13 discriminator 2 view .LVU460
 1568 0114 42ED016A 		vstr.32	s13, [r2, #-4]
 1569              	.LBE246:
 340:./shy_fft.h   ****         {
 1570              		.loc 3 340 9 is_stmt 1 discriminator 2 view .LVU461
 340:./shy_fft.h   ****         {
 1571              		.loc 3 340 29 discriminator 2 view .LVU462
 1572 0118 BDD1     		bne	.L42
 1573 011a 5E46     		mov	r6, fp
 1574              	.LVL133:
 340:./shy_fft.h   ****         {
 1575              		.loc 3 340 29 is_stmt 0 discriminator 2 view .LVU463
 1576              	.LBE248:
 1577              	.LBB249:
 359:./shy_fft.h   ****         {
 1578              		.loc 3 359 20 view .LVU464
 1579 011c 0321     		movs	r1, #3
 1580              	.LVL134:
 1581              	.L45:
 1582              	.LBB250:
 368:./shy_fft.h   ****             size_t n_2 = n >> 1;
 1583              		.loc 3 368 28 view .LVU465
 1584 011e 0123     		movs	r3, #1
 1585              	.LBB251:
 1586              	.LBB252:
 374:./shy_fft.h   ****                 T* dr  = d + i;
 1587              		.loc 3 374 30 view .LVU466
 1588 0120 0422     		movs	r2, #4
 1589 0122 04F10409 		add	r9, r4, #4
 1590 0126 0096     		str	r6, [sp]
 1591              	.LBE252:
 1592              	.LBE251:
 368:./shy_fft.h   ****             size_t n_2 = n >> 1;
 1593              		.loc 3 368 28 view .LVU467
 1594 0128 8B40     		lsls	r3, r3, r1
 1595              	.LVL135:
 1596              	.LBB259:
 371:./shy_fft.h   ****             {
 1597              		.loc 3 371 33 is_stmt 1 view .LVU468
 1598              	.LBB256:
 374:./shy_fft.h   ****                 T* dr  = d + i;
 1599              		.loc 3 374 30 is_stmt 0 view .LVU469
 1600 012a 8A40     		lsls	r2, r2, r1
 1601 012c 0192     		str	r2, [sp, #4]
 1602              	.LBE256:
 1603              	.LBE259:
 369:./shy_fft.h   **** 
 1604              		.loc 3 369 20 view .LVU470
 1605 012e 5A08     		lsrs	r2, r3, #1
 1606              	.LVL136:
 369:./shy_fft.h   **** 
 1607              		.loc 3 369 20 view .LVU471
 1608 0130 4FEAC308 		lsl	r8, r3, #3
 1609              	.LBB260:
 1610              	.LBB257:
ARM GAS  /tmp/cchieLBQ.s 			page 68


 380:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 1611              		.loc 3 380 30 view .LVU472
 1612 0134 9500     		lsls	r5, r2, #2
 1613 0136 04EB820A 		add	r10, r4, r2, lsl #2
 1614 013a 0295     		str	r5, [sp, #8]
 1615              	.LBE257:
 371:./shy_fft.h   ****             {
 1616              		.loc 3 371 49 view .LVU473
 1617 013c 5D00     		lsls	r5, r3, #1
 1618 013e 019B     		ldr	r3, [sp, #4]
 1619              	.LVL137:
 371:./shy_fft.h   ****             {
 1620              		.loc 3 371 49 view .LVU474
 1621 0140 0B95     		str	r5, [sp, #44]
 1622 0142 F718     		adds	r7, r6, r3
 1623 0144 1D1D     		adds	r5, r3, #4
 1624 0146 E318     		adds	r3, r4, r3
 1625 0148 2544     		add	r5, r5, r4
 1626 014a 03EB8203 		add	r3, r3, r2, lsl #2
 1627 014e 0493     		str	r3, [sp, #16]
 1628 0150 019B     		ldr	r3, [sp, #4]
 1629 0152 5B00     		lsls	r3, r3, #1
 1630 0154 0C93     		str	r3, [sp, #48]
 371:./shy_fft.h   ****             {
 1631              		.loc 3 371 24 view .LVU475
 1632 0156 0023     		movs	r3, #0
 1633 0158 0393     		str	r3, [sp, #12]
 1634              	.LVL138:
 1635              	.L44:
 1636              	.LBB258:
 378:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 1637              		.loc 3 378 34 view .LVU476
 1638 015a 15ED017A 		vldr.32	s14, [r5, #-4]
 1639 015e 59ED017A 		vldr.32	s15, [r9, #-4]
 378:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 1640              		.loc 3 378 17 view .LVU477
 1641 0162 009B     		ldr	r3, [sp]
 378:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 1642              		.loc 3 378 34 view .LVU478
 1643 0164 77EE877A 		vadd.f32	s15, s15, s14
 380:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 1644              		.loc 3 380 17 view .LVU479
 1645 0168 029A     		ldr	r2, [sp, #8]
 384:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 1646              		.loc 3 384 17 view .LVU480
 1647 016a 0D91     		str	r1, [sp, #52]
 1648 016c 1A90     		str	r0, [sp, #104]
 378:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 1649              		.loc 3 378 17 view .LVU481
 1650 016e C3ED007A 		vstr.32	s15, [r3]
 380:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 1651              		.loc 3 380 17 view .LVU482
 1652 0172 1344     		add	r3, r3, r2
 379:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 1653              		.loc 3 379 34 view .LVU483
 1654 0174 59ED017A 		vldr.32	s15, [r9, #-4]
 1655 0178 15ED017A 		vldr.32	s14, [r5, #-4]
ARM GAS  /tmp/cchieLBQ.s 			page 69


 1656 017c 77EEC77A 		vsub.f32	s15, s15, s14
 379:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 1657              		.loc 3 379 17 view .LVU484
 1658 0180 C7ED007A 		vstr.32	s15, [r7]
 380:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 1659              		.loc 3 380 30 view .LVU485
 1660 0184 DAF800C0 		ldr	ip, [r10]	@ float
 380:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 1661              		.loc 3 380 17 view .LVU486
 1662 0188 C3F800C0 		str	ip, [r3]	@ float
 381:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 1663              		.loc 3 381 30 view .LVU487
 1664 018c 019B     		ldr	r3, [sp, #4]
 1665 018e 5344     		add	r3, r10, r3
 1666 0190 1A68     		ldr	r2, [r3]	@ float
 381:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 1667              		.loc 3 381 17 view .LVU488
 1668 0192 029B     		ldr	r3, [sp, #8]
 1669 0194 FB18     		adds	r3, r7, r3
 1670 0196 1A60     		str	r2, [r3]	@ float
 1671              	.LVL139:
 384:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 1672              		.loc 3 384 17 view .LVU489
 1673 0198 FFF7FEFF 		bl	_ZN14RotationPhasorIfLj12EE5StartEj
 1674              	.LVL140:
 1675              	.LBB253:
 385:./shy_fft.h   ****                 {
 1676              		.loc 3 385 37 is_stmt 1 view .LVU490
 1677 019c 029B     		ldr	r3, [sp, #8]
 1678 019e 0099     		ldr	r1, [sp]
 1679 01a0 0AF10402 		add	r2, r10, #4
 1680 01a4 2B44     		add	r3, r3, r5
 1681              	.LBE253:
 384:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 1682              		.loc 3 384 17 is_stmt 0 view .LVU491
 1683 01a6 1A98     		ldr	r0, [sp, #104]
 1684 01a8 0997     		str	r7, [sp, #36]
 1685 01aa 0693     		str	r3, [sp, #24]
 1686 01ac 009B     		ldr	r3, [sp]
 1687 01ae CDF81490 		str	r9, [sp, #20]
 1688 01b2 0433     		adds	r3, r3, #4
 1689 01b4 0A93     		str	r3, [sp, #40]
 1690 01b6 3B1D     		adds	r3, r7, #4
 1691 01b8 0893     		str	r3, [sp, #32]
 1692 01ba 0C9B     		ldr	r3, [sp, #48]
 1693 01bc 0B44     		add	r3, r3, r1
 1694 01be 0D99     		ldr	r1, [sp, #52]
 1695 01c0 0793     		str	r3, [sp, #28]
 1696 01c2 2B46     		mov	r3, r5
 1697              	.LVL141:
 1698              	.L43:
 384:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 1699              		.loc 3 384 17 view .LVU492
 1700 01c4 0F91     		str	r1, [sp, #60]
 1701              	.LBB255:
 1702              	.LBB254:
 391:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
ARM GAS  /tmp/cchieLBQ.s 			page 70


 1703              		.loc 3 391 46 discriminator 2 view .LVU493
 1704 01c6 0699     		ldr	r1, [sp, #24]
 388:./shy_fft.h   ****                     T v;
 1705              		.loc 3 388 23 discriminator 2 view .LVU494
 1706 01c8 90ED136A 		vldr.32	s12, [r0, #76]
 391:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 1707              		.loc 3 391 46 discriminator 2 view .LVU495
 1708 01cc 91ED007A 		vldr.32	s14, [r1]
 387:./shy_fft.h   ****                     T s = phasor->sin();
 1709              		.loc 3 387 23 discriminator 2 view .LVU496
 1710 01d0 D0ED127A 		vldr.32	s15, [r0, #72]
 1711              	.LVL142:
 391:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 1712              		.loc 3 391 21 discriminator 2 view .LVU497
 1713 01d4 26EE477A 		vnmul.f32	s14, s12, s14
 391:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 1714              		.loc 3 391 33 discriminator 2 view .LVU498
 1715 01d8 D3ED006A 		vldr.32	s13, [r3]
 392:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 1716              		.loc 3 392 33 discriminator 2 view .LVU499
 1717 01dc 0599     		ldr	r1, [sp, #20]
 398:./shy_fft.h   ****                 }
 1718              		.loc 3 398 21 discriminator 2 view .LVU500
 1719 01de 1A90     		str	r0, [sp, #104]
 391:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 1720              		.loc 3 391 21 discriminator 2 view .LVU501
 1721 01e0 A6EEA77A 		vfma.f32	s14, s13, s15
 1722              	.LVL143:
 392:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 1723              		.loc 3 392 33 discriminator 2 view .LVU502
 1724 01e4 D1ED006A 		vldr.32	s13, [r1]
 392:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 1725              		.loc 3 392 21 discriminator 2 view .LVU503
 1726 01e8 0A99     		ldr	r1, [sp, #40]
 392:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 1727              		.loc 3 392 37 discriminator 2 view .LVU504
 1728 01ea 76EE876A 		vadd.f32	s13, s13, s14
 392:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 1729              		.loc 3 392 21 discriminator 2 view .LVU505
 1730 01ee E1EC016A 		vstmia.32	r1!, {s13}
 1731 01f2 0A91     		str	r1, [sp, #40]
 393:./shy_fft.h   **** 
 1732              		.loc 3 393 37 discriminator 2 view .LVU506
 1733 01f4 0599     		ldr	r1, [sp, #20]
 1734 01f6 F1EC016A 		vldmia.32	r1!, {s13}
 1735 01fa 36EEC77A 		vsub.f32	s14, s13, s14
 1736              	.LVL144:
 393:./shy_fft.h   **** 
 1737              		.loc 3 393 37 discriminator 2 view .LVU507
 1738 01fe 0591     		str	r1, [sp, #20]
 393:./shy_fft.h   **** 
 1739              		.loc 3 393 21 discriminator 2 view .LVU508
 1740 0200 0999     		ldr	r1, [sp, #36]
 1741 0202 21ED017A 		vstmdb.32	r1!, {s14}
 1742 0206 0991     		str	r1, [sp, #36]
 395:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 1743              		.loc 3 395 53 discriminator 2 view .LVU509
ARM GAS  /tmp/cchieLBQ.s 			page 71


 1744 0208 0699     		ldr	r1, [sp, #24]
 1745 020a B1EC017A 		vldmia.32	r1!, {s14}
 1746 020e 67EE877A 		vmul.f32	s15, s15, s14
 1747              	.LVL145:
 395:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 1748              		.loc 3 395 21 discriminator 2 view .LVU510
 1749 0212 B3EC017A 		vldmia.32	r3!, {s14}
 395:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 1750              		.loc 3 395 53 discriminator 2 view .LVU511
 1751 0216 0691     		str	r1, [sp, #24]
 395:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 1752              		.loc 3 395 21 discriminator 2 view .LVU512
 1753 0218 0E93     		str	r3, [sp, #56]
 1754 021a E7EE067A 		vfma.f32	s15, s14, s12
 1755              	.LVL146:
 396:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 1756              		.loc 3 396 40 discriminator 2 view .LVU513
 1757 021e 92ED007A 		vldr.32	s14, [r2]
 396:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 1758              		.loc 3 396 21 discriminator 2 view .LVU514
 1759 0222 089B     		ldr	r3, [sp, #32]
 396:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 1760              		.loc 3 396 35 discriminator 2 view .LVU515
 1761 0224 37EE277A 		vadd.f32	s14, s14, s15
 396:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 1762              		.loc 3 396 21 discriminator 2 view .LVU516
 1763 0228 A3EC017A 		vstmia.32	r3!, {s14}
 397:./shy_fft.h   ****                     phasor->Rotate();
 1764              		.loc 3 397 35 discriminator 2 view .LVU517
 1765 022c B2EC017A 		vldmia.32	r2!, {s14}
 396:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 1766              		.loc 3 396 21 discriminator 2 view .LVU518
 1767 0230 0893     		str	r3, [sp, #32]
 397:./shy_fft.h   ****                     phasor->Rotate();
 1768              		.loc 3 397 35 discriminator 2 view .LVU519
 1769 0232 77EEC77A 		vsub.f32	s15, s15, s14
 1770              	.LVL147:
 397:./shy_fft.h   ****                     phasor->Rotate();
 1771              		.loc 3 397 21 discriminator 2 view .LVU520
 1772 0236 079B     		ldr	r3, [sp, #28]
 397:./shy_fft.h   ****                     phasor->Rotate();
 1773              		.loc 3 397 35 discriminator 2 view .LVU521
 1774 0238 0D92     		str	r2, [sp, #52]
 397:./shy_fft.h   ****                     phasor->Rotate();
 1775              		.loc 3 397 21 discriminator 2 view .LVU522
 1776 023a 63ED017A 		vstmdb.32	r3!, {s15}
 1777 023e 0793     		str	r3, [sp, #28]
 398:./shy_fft.h   ****                 }
 1778              		.loc 3 398 21 discriminator 2 view .LVU523
 1779 0240 FFF7FEFF 		bl	_ZN14RotationPhasorIfLj12EE6RotateEv
 1780              	.LVL148:
 398:./shy_fft.h   ****                 }
 1781              		.loc 3 398 21 discriminator 2 view .LVU524
 1782              	.LBE254:
 385:./shy_fft.h   ****                 {
 1783              		.loc 3 385 17 is_stmt 1 discriminator 2 view .LVU525
 385:./shy_fft.h   ****                 {
ARM GAS  /tmp/cchieLBQ.s 			page 72


 1784              		.loc 3 385 37 discriminator 2 view .LVU526
 1785 0244 049B     		ldr	r3, [sp, #16]
 1786 0246 1A98     		ldr	r0, [sp, #104]
 1787 0248 1A46     		mov	r2, r3
 1788 024a 0E9B     		ldr	r3, [sp, #56]
 1789 024c 0F99     		ldr	r1, [sp, #60]
 1790 024e 9A42     		cmp	r2, r3
 1791 0250 0D9A     		ldr	r2, [sp, #52]
 1792 0252 B7D1     		bne	.L43
 1793              	.LBE255:
 1794              	.LBE258:
 371:./shy_fft.h   ****             {
 1795              		.loc 3 371 13 discriminator 2 view .LVU527
 1796 0254 039B     		ldr	r3, [sp, #12]
 1797 0256 4744     		add	r7, r7, r8
 1798              	.LVL149:
 371:./shy_fft.h   ****             {
 1799              		.loc 3 371 13 is_stmt 0 discriminator 2 view .LVU528
 1800 0258 0B9A     		ldr	r2, [sp, #44]
 1801 025a C244     		add	r10, r10, r8
 1802              	.LVL150:
 371:./shy_fft.h   ****             {
 1803              		.loc 3 371 13 discriminator 2 view .LVU529
 1804 025c 4544     		add	r5, r5, r8
 1805              	.LVL151:
 371:./shy_fft.h   ****             {
 1806              		.loc 3 371 13 discriminator 2 view .LVU530
 1807 025e C144     		add	r9, r9, r8
 1808              	.LVL152:
 371:./shy_fft.h   ****             {
 1809              		.loc 3 371 13 discriminator 2 view .LVU531
 1810 0260 1344     		add	r3, r3, r2
 1811 0262 0393     		str	r3, [sp, #12]
 1812              	.LVL153:
 371:./shy_fft.h   ****             {
 1813              		.loc 3 371 33 is_stmt 1 discriminator 2 view .LVU532
 1814 0264 009B     		ldr	r3, [sp]
 1815              	.LVL154:
 371:./shy_fft.h   ****             {
 1816              		.loc 3 371 33 is_stmt 0 discriminator 2 view .LVU533
 1817 0266 4344     		add	r3, r3, r8
 1818 0268 0093     		str	r3, [sp]
 1819              	.LVL155:
 371:./shy_fft.h   ****             {
 1820              		.loc 3 371 33 discriminator 2 view .LVU534
 1821 026a 049B     		ldr	r3, [sp, #16]
 1822 026c 4344     		add	r3, r3, r8
 1823 026e 0493     		str	r3, [sp, #16]
 1824 0270 039B     		ldr	r3, [sp, #12]
 1825 0272 B3F5805F 		cmp	r3, #4096
 1826 0276 FFF470AF 		bcc	.L44
 1827              	.LBE260:
 1828              	.LBE250:
 359:./shy_fft.h   ****         {
 1829              		.loc 3 359 9 is_stmt 1 discriminator 2 view .LVU535
 1830 027a 0131     		adds	r1, r1, #1
 1831              	.LVL156:
ARM GAS  /tmp/cchieLBQ.s 			page 73


 359:./shy_fft.h   ****         {
 1832              		.loc 3 359 35 discriminator 2 view .LVU536
 1833 027c 2346     		mov	r3, r4
 1834 027e 3446     		mov	r4, r6
 1835              	.LVL157:
 359:./shy_fft.h   ****         {
 1836              		.loc 3 359 35 is_stmt 0 discriminator 2 view .LVU537
 1837 0280 0C29     		cmp	r1, #12
 1838 0282 0AD1     		bne	.L47
 1839              	.LVL158:
 359:./shy_fft.h   ****         {
 1840              		.loc 3 359 35 discriminator 2 view .LVU538
 1841              	.LBE249:
 404:./shy_fft.h   ****         {
 1842              		.loc 3 404 9 view .LVU539
 1843 0284 B345     		cmp	fp, r6
 1844 0286 05D0     		beq	.L40
 406:./shy_fft.h   ****         }
 1845              		.loc 3 406 22 view .LVU540
 1846 0288 5A46     		mov	r2, fp
 1847 028a 06F58041 		add	r1, r6, #16384
 1848              	.LVL159:
 406:./shy_fft.h   ****         }
 1849              		.loc 3 406 22 view .LVU541
 1850 028e 3046     		mov	r0, r6
 1851 0290 FFF7FEFF 		bl	_ZSt4copyIPfS0_ET0_T_S2_S1_
 1852              	.LVL160:
 1853              	.L40:
 408:./shy_fft.h   **** 
 1854              		.loc 3 408 5 view .LVU542
 1855 0294 11B0     		add	sp, sp, #68
 1856              		.cfi_remember_state
 1857              		.cfi_def_cfa_offset 36
 1858              		@ sp needed
 1859 0296 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1860              	.LVL161:
 1861              	.L47:
 1862              		.cfi_restore_state
 1863              	.LBB261:
 408:./shy_fft.h   **** 
 1864              		.loc 3 408 5 view .LVU543
 1865 029a 1E46     		mov	r6, r3
 1866 029c 3FE7     		b	.L45
 1867              	.L53:
 1868 029e 00BF     		.align	2
 1869              	.L52:
 1870 02a0 F304353F 		.word	1060439283
 1871              	.LBE261:
 1872              		.cfi_endproc
 1873              	.LFE4716:
 1875              		.section	.text._ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j,"axG",%progbi
 1876              		.align	1
 1877              		.weak	_ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j
 1878              		.syntax unified
 1879              		.thumb
 1880              		.thumb_func
 1881              		.fpu fpv5-d16
ARM GAS  /tmp/cchieLBQ.s 			page 74


 1883              	_ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j:
 1884              	.LVL162:
 1885              	.LFB4719:
 665:./shy_fft.h   ****                     T*             output,
 1886              		.loc 3 665 10 is_stmt 1 view -0
 1887              		.cfi_startproc
 1888              		@ args = 8, pretend = 0, frame = 72
 1889              		@ frame_needed = 0, uses_anonymous_args = 0
 665:./shy_fft.h   ****                     T*             output,
 1890              		.loc 3 665 10 is_stmt 0 view .LVU545
 1891 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1892              		.cfi_def_cfa_offset 36
 1893              		.cfi_offset 4, -36
 1894              		.cfi_offset 5, -32
 1895              		.cfi_offset 6, -28
 1896              		.cfi_offset 7, -24
 1897              		.cfi_offset 8, -20
 1898              		.cfi_offset 9, -16
 1899              		.cfi_offset 10, -12
 1900              		.cfi_offset 11, -8
 1901              		.cfi_offset 14, -4
 1902 0004 93B0     		sub	sp, sp, #76
 1903              		.cfi_def_cfa_offset 112
 1904              	.LVL163:
 665:./shy_fft.h   ****                     T*             output,
 1905              		.loc 3 665 10 view .LVU546
 1906 0006 1446     		mov	r4, r2
 1907              	.LVL164:
 665:./shy_fft.h   ****                     T*             output,
 1908              		.loc 3 665 10 view .LVU547
 1909 0008 0D93     		str	r3, [sp, #52]
 675:./shy_fft.h   **** 
 1910              		.loc 3 675 28 view .LVU548
 1911 000a 0123     		movs	r3, #1
 1912              	.LVL165:
 675:./shy_fft.h   **** 
 1913              		.loc 3 675 28 view .LVU549
 1914 000c 1D9A     		ldr	r2, [sp, #116]
 1915              	.LVL166:
 1916              	.LBB262:
 678:./shy_fft.h   ****         {
 1917              		.loc 3 678 20 view .LVU550
 1918 000e 2746     		mov	r7, r4
 1919              	.LBE262:
 665:./shy_fft.h   ****                     T*             output,
 1920              		.loc 3 665 10 view .LVU551
 1921 0010 1C98     		ldr	r0, [sp, #112]
 1922              	.LVL167:
 675:./shy_fft.h   **** 
 1923              		.loc 3 675 28 view .LVU552
 1924 0012 9340     		lsls	r3, r3, r2
 1925              	.LBB276:
 678:./shy_fft.h   ****         {
 1926              		.loc 3 678 20 view .LVU553
 1927 0014 02F1FF38 		add	r8, r2, #-1
 1928              	.LBE276:
 665:./shy_fft.h   ****                     T*             output,
ARM GAS  /tmp/cchieLBQ.s 			page 75


 1929              		.loc 3 665 10 view .LVU554
 1930 0018 0591     		str	r1, [sp, #20]
 1931              	.LVL168:
 675:./shy_fft.h   **** 
 1932              		.loc 3 675 28 view .LVU555
 1933 001a 0393     		str	r3, [sp, #12]
 1934              	.LVL169:
 671:./shy_fft.h   ****         T*      d = output;
 1935              		.loc 3 671 17 view .LVU556
 1936 001c 0B46     		mov	r3, r1
 1937              	.LVL170:
 1938              	.L61:
 1939              	.LBB277:
 678:./shy_fft.h   ****         {
 1940              		.loc 3 678 51 is_stmt 1 discriminator 1 view .LVU557
 1941 001e B8F1020F 		cmp	r8, #2
 1942 0022 40F2BE80 		bls	.L55
 1943              	.LBB263:
 680:./shy_fft.h   ****             size_t n_2 = n >> 1;
 1944              		.loc 3 680 28 is_stmt 0 view .LVU558
 1945 0026 0125     		movs	r5, #1
 1946              	.LBB264:
 1947              	.LBB265:
 686:./shy_fft.h   ****                 T* d1r = d + i;
 1948              		.loc 3 686 29 view .LVU559
 1949 0028 0426     		movs	r6, #4
 1950 002a 03F1040A 		add	r10, r3, #4
 1951              	.LBE265:
 1952              	.LBE264:
 680:./shy_fft.h   ****             size_t n_2 = n >> 1;
 1953              		.loc 3 680 28 view .LVU560
 1954 002e 05FA08F5 		lsl	r5, r5, r8
 1955              	.LVL171:
 1956              	.LBB272:
 1957              	.LBB270:
 686:./shy_fft.h   ****                 T* d1r = d + i;
 1958              		.loc 3 686 29 view .LVU561
 1959 0032 06FA08F6 		lsl	r6, r6, r8
 1960              	.LBE270:
 1961              	.LBE272:
 681:./shy_fft.h   **** 
 1962              		.loc 3 681 20 view .LVU562
 1963 0036 6A08     		lsrs	r2, r5, #1
 1964 0038 03EB0609 		add	r9, r3, r6
 1965 003c 0892     		str	r2, [sp, #32]
 1966              	.LVL172:
 1967              	.LBB273:
 683:./shy_fft.h   ****             {
 1968              		.loc 3 683 52 view .LVU563
 1969 003e 6A00     		lsls	r2, r5, #1
 1970              	.LVL173:
 683:./shy_fft.h   ****             {
 1971              		.loc 3 683 52 view .LVU564
 1972 0040 ED00     		lsls	r5, r5, #3
 1973              	.LVL174:
 683:./shy_fft.h   ****             {
 1974              		.loc 3 683 52 view .LVU565
ARM GAS  /tmp/cchieLBQ.s 			page 76


 1975 0042 0E92     		str	r2, [sp, #56]
 1976 0044 3A1D     		adds	r2, r7, #4
 1977 0046 0192     		str	r2, [sp, #4]
 1978 0048 089A     		ldr	r2, [sp, #32]
 1979 004a 07EB8202 		add	r2, r7, r2, lsl #2
 1980 004e 0292     		str	r2, [sp, #8]
 1981 0050 BA19     		adds	r2, r7, r6
 1982 0052 0A92     		str	r2, [sp, #40]
 1983 0054 089A     		ldr	r2, [sp, #32]
 1984 0056 03EB8203 		add	r3, r3, r2, lsl #2
 1985              	.LVL175:
 683:./shy_fft.h   ****             {
 1986              		.loc 3 683 52 view .LVU566
 1987 005a 0493     		str	r3, [sp, #16]
 683:./shy_fft.h   ****             {
 1988              		.loc 3 683 24 view .LVU567
 1989 005c 0023     		movs	r3, #0
 1990 005e 0693     		str	r3, [sp, #24]
 1991              	.LVL176:
 1992              	.L59:
 683:./shy_fft.h   ****             {
 1993              		.loc 3 683 33 is_stmt 1 discriminator 1 view .LVU568
 1994 0060 069B     		ldr	r3, [sp, #24]
 1995 0062 039A     		ldr	r2, [sp, #12]
 1996 0064 9342     		cmp	r3, r2
 1997 0066 80F09380 		bcs	.L56
 1998              	.LVL177:
 1999              	.LBB271:
 690:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 2000              		.loc 3 690 34 is_stmt 0 view .LVU569
 2001 006a 99ED007A 		vldr.32	s14, [r9]
 691:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 2002              		.loc 3 691 34 view .LVU570
 2003 006e CB46     		mov	fp, r9
 690:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 2004              		.loc 3 690 34 view .LVU571
 2005 0070 5AED017A 		vldr.32	s15, [r10, #-4]
 697:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 2006              		.loc 3 697 17 view .LVU572
 2007 0074 4146     		mov	r1, r8
 690:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 2008              		.loc 3 690 17 view .LVU573
 2009 0076 019B     		ldr	r3, [sp, #4]
 690:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 2010              		.loc 3 690 34 view .LVU574
 2011 0078 77EE877A 		vadd.f32	s15, s15, s14
 693:./shy_fft.h   **** 
 2012              		.loc 3 693 30 view .LVU575
 2013 007c 049A     		ldr	r2, [sp, #16]
 697:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 2014              		.loc 3 697 17 view .LVU576
 2015 007e 1C90     		str	r0, [sp, #112]
 693:./shy_fft.h   **** 
 2016              		.loc 3 693 30 view .LVU577
 2017 0080 3244     		add	r2, r2, r6
 690:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 2018              		.loc 3 690 17 view .LVU578
ARM GAS  /tmp/cchieLBQ.s 			page 77


 2019 0082 43ED017A 		vstr.32	s15, [r3, #-4]
 691:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 2020              		.loc 3 691 34 view .LVU579
 2021 0086 5AED017A 		vldr.32	s15, [r10, #-4]
 2022 008a BBEC017A 		vldmia.32	fp!, {s14}
 691:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 2023              		.loc 3 691 17 view .LVU580
 2024 008e 0A9B     		ldr	r3, [sp, #40]
 691:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 2025              		.loc 3 691 34 view .LVU581
 2026 0090 77EEC77A 		vsub.f32	s15, s15, s14
 691:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 2027              		.loc 3 691 17 view .LVU582
 2028 0094 C3ED007A 		vstr.32	s15, [r3]
 692:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 2029              		.loc 3 692 36 view .LVU583
 2030 0098 049B     		ldr	r3, [sp, #16]
 2031 009a D3ED007A 		vldr.32	s15, [r3]
 692:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 2032              		.loc 3 692 17 view .LVU584
 2033 009e 029B     		ldr	r3, [sp, #8]
 692:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 2034              		.loc 3 692 36 view .LVU585
 2035 00a0 77EEA77A 		vadd.f32	s15, s15, s15
 692:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 2036              		.loc 3 692 17 view .LVU586
 2037 00a4 C3ED007A 		vstr.32	s15, [r3]
 693:./shy_fft.h   **** 
 2038              		.loc 3 693 17 view .LVU587
 2039 00a8 3344     		add	r3, r3, r6
 693:./shy_fft.h   **** 
 2040              		.loc 3 693 36 view .LVU588
 2041 00aa D2ED007A 		vldr.32	s15, [r2]
 2042 00ae 77EEA77A 		vadd.f32	s15, s15, s15
 693:./shy_fft.h   **** 
 2043              		.loc 3 693 17 view .LVU589
 2044 00b2 C3ED007A 		vstr.32	s15, [r3]
 2045              	.LVL178:
 697:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 2046              		.loc 3 697 17 view .LVU590
 2047 00b6 FFF7FEFF 		bl	_ZN14RotationPhasorIfLj12EE5StartEj
 2048              	.LVL179:
 697:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 2049              		.loc 3 697 17 view .LVU591
 2050 00ba 029A     		ldr	r2, [sp, #8]
 2051              	.LBB266:
 698:./shy_fft.h   ****                 {
 2052              		.loc 3 698 28 view .LVU592
 2053 00bc 0120     		movs	r0, #1
 2054              	.LVL180:
 698:./shy_fft.h   ****                 {
 2055              		.loc 3 698 28 view .LVU593
 2056 00be 06EB090E 		add	lr, r6, r9
 2057 00c2 0432     		adds	r2, r2, #4
 2058              	.LBE266:
 697:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 2059              		.loc 3 697 17 view .LVU594
ARM GAS  /tmp/cchieLBQ.s 			page 78


 2060 00c4 5146     		mov	r1, r10
 2061              	.LBB268:
 698:./shy_fft.h   ****                 {
 2062              		.loc 3 698 28 view .LVU595
 2063 00c6 0790     		str	r0, [sp, #28]
 2064 00c8 0992     		str	r2, [sp, #36]
 2065 00ca 019A     		ldr	r2, [sp, #4]
 2066 00cc 1C98     		ldr	r0, [sp, #112]
 2067              	.LVL181:
 698:./shy_fft.h   ****                 {
 2068              		.loc 3 698 28 view .LVU596
 2069 00ce B218     		adds	r2, r6, r2
 2070 00d0 0C92     		str	r2, [sp, #48]
 2071              	.LBE268:
 697:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 2072              		.loc 3 697 17 view .LVU597
 2073 00d2 019A     		ldr	r2, [sp, #4]
 2074 00d4 0B92     		str	r2, [sp, #44]
 2075 00d6 4A46     		mov	r2, r9
 2076              	.LVL182:
 2077              	.L58:
 2078              	.LBB269:
 698:./shy_fft.h   ****                 {
 2079              		.loc 3 698 37 is_stmt 1 discriminator 3 view .LVU598
 2080 00d8 079B     		ldr	r3, [sp, #28]
 2081 00da 9C46     		mov	ip, r3
 2082 00dc 089B     		ldr	r3, [sp, #32]
 2083 00de 9C45     		cmp	ip, r3
 2084 00e0 43D2     		bcs	.L57
 2085              	.LBB267:
 700:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 2086              		.loc 3 700 32 is_stmt 0 discriminator 2 view .LVU599
 2087 00e2 91ED007A 		vldr.32	s14, [r1]
 700:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 2088              		.loc 3 700 36 discriminator 2 view .LVU600
 2089 00e6 72ED017A 		vldmdb.32	r2!, {s15}
 700:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 2090              		.loc 3 700 21 discriminator 2 view .LVU601
 2091 00ea 0B9B     		ldr	r3, [sp, #44]
 700:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 2092              		.loc 3 700 36 discriminator 2 view .LVU602
 2093 00ec 77EE877A 		vadd.f32	s15, s15, s14
 705:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 2094              		.loc 3 705 23 discriminator 2 view .LVU603
 2095 00f0 1092     		str	r2, [sp, #64]
 710:./shy_fft.h   ****                 }
 2096              		.loc 3 710 21 discriminator 2 view .LVU604
 2097 00f2 1C90     		str	r0, [sp, #112]
 700:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 2098              		.loc 3 700 21 discriminator 2 view .LVU605
 2099 00f4 E3EC017A 		vstmia.32	r3!, {s15}
 701:./shy_fft.h   **** 
 2100              		.loc 3 701 36 discriminator 2 view .LVU606
 2101 00f8 3EED017A 		vldmdb.32	lr!, {s14}
 701:./shy_fft.h   **** 
 2102              		.loc 3 701 32 discriminator 2 view .LVU607
 2103 00fc DBED007A 		vldr.32	s15, [fp]
ARM GAS  /tmp/cchieLBQ.s 			page 79


 700:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 2104              		.loc 3 700 21 discriminator 2 view .LVU608
 2105 0100 0B93     		str	r3, [sp, #44]
 701:./shy_fft.h   **** 
 2106              		.loc 3 701 36 discriminator 2 view .LVU609
 2107 0102 77EEC77A 		vsub.f32	s15, s15, s14
 701:./shy_fft.h   **** 
 2108              		.loc 3 701 21 discriminator 2 view .LVU610
 2109 0106 099B     		ldr	r3, [sp, #36]
 706:./shy_fft.h   **** 
 2110              		.loc 3 706 23 discriminator 2 view .LVU611
 2111 0108 CDF83CE0 		str	lr, [sp, #60]
 701:./shy_fft.h   **** 
 2112              		.loc 3 701 21 discriminator 2 view .LVU612
 2113 010c E3EC017A 		vstmia.32	r3!, {s15}
 705:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 2114              		.loc 3 705 23 discriminator 2 view .LVU613
 2115 0110 F1EC016A 		vldmia.32	r1!, {s13}
 2116 0114 92ED007A 		vldr.32	s14, [r2]
 706:./shy_fft.h   **** 
 2117              		.loc 3 706 23 discriminator 2 view .LVU614
 2118 0118 9EED006A 		vldr.32	s12, [lr]
 705:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 2119              		.loc 3 705 23 discriminator 2 view .LVU615
 2120 011c 76EEC76A 		vsub.f32	s13, s13, s14
 706:./shy_fft.h   **** 
 2121              		.loc 3 706 23 discriminator 2 view .LVU616
 2122 0120 BBEC017A 		vldmia.32	fp!, {s14}
 704:./shy_fft.h   ****                     T vr = sr[j] - si[-j];
 2123              		.loc 3 704 23 discriminator 2 view .LVU617
 2124 0124 D0ED137A 		vldr.32	s15, [r0, #76]
 706:./shy_fft.h   **** 
 2125              		.loc 3 706 23 discriminator 2 view .LVU618
 2126 0128 37EE067A 		vadd.f32	s14, s14, s12
 703:./shy_fft.h   ****                     T s  = phasor->sin();
 2127              		.loc 3 703 23 discriminator 2 view .LVU619
 2128 012c D0ED125A 		vldr.32	s11, [r0, #72]
 2129              	.LVL183:
 701:./shy_fft.h   **** 
 2130              		.loc 3 701 21 discriminator 2 view .LVU620
 2131 0130 0993     		str	r3, [sp, #36]
 708:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 2132              		.loc 3 708 21 discriminator 2 view .LVU621
 2133 0132 0C9B     		ldr	r3, [sp, #48]
 708:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 2134              		.loc 3 708 42 discriminator 2 view .LVU622
 2135 0134 27EE276A 		vmul.f32	s12, s14, s15
 705:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 2136              		.loc 3 705 23 discriminator 2 view .LVU623
 2137 0138 1191     		str	r1, [sp, #68]
 709:./shy_fft.h   ****                     phasor->Rotate();
 2138              		.loc 3 709 37 discriminator 2 view .LVU624
 2139 013a 67EEE67A 		vnmul.f32	s15, s15, s13
 2140              	.LVL184:
 708:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 2141              		.loc 3 708 37 discriminator 2 view .LVU625
 2142 013e A6EEA56A 		vfma.f32	s12, s13, s11
ARM GAS  /tmp/cchieLBQ.s 			page 80


 709:./shy_fft.h   ****                     phasor->Rotate();
 2143              		.loc 3 709 37 discriminator 2 view .LVU626
 2144 0142 E7EE257A 		vfma.f32	s15, s14, s11
 708:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 2145              		.loc 3 708 21 discriminator 2 view .LVU627
 2146 0146 A3EC016A 		vstmia.32	r3!, {s12}
 2147              	.LVL185:
 708:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 2148              		.loc 3 708 21 discriminator 2 view .LVU628
 2149 014a 0C93     		str	r3, [sp, #48]
 709:./shy_fft.h   ****                     phasor->Rotate();
 2150              		.loc 3 709 21 discriminator 2 view .LVU629
 2151 014c 099B     		ldr	r3, [sp, #36]
 2152 014e 03EB060C 		add	ip, r3, r6
 2153 0152 4CED017A 		vstr.32	s15, [ip, #-4]
 710:./shy_fft.h   ****                 }
 2154              		.loc 3 710 21 discriminator 2 view .LVU630
 2155 0156 FFF7FEFF 		bl	_ZN14RotationPhasorIfLj12EE6RotateEv
 2156              	.LVL186:
 710:./shy_fft.h   ****                 }
 2157              		.loc 3 710 21 discriminator 2 view .LVU631
 2158              	.LBE267:
 698:./shy_fft.h   ****                 {
 2159              		.loc 3 698 17 is_stmt 1 discriminator 2 view .LVU632
 2160 015a 079B     		ldr	r3, [sp, #28]
 2161 015c 1C98     		ldr	r0, [sp, #112]
 2162 015e 0133     		adds	r3, r3, #1
 2163 0160 1199     		ldr	r1, [sp, #68]
 2164 0162 DDE90FE2 		ldrd	lr, r2, [sp, #60]
 2165 0166 0793     		str	r3, [sp, #28]
 2166              	.LVL187:
 698:./shy_fft.h   ****                 {
 2167              		.loc 3 698 17 is_stmt 0 discriminator 2 view .LVU633
 2168 0168 B6E7     		b	.L58
 2169              	.LVL188:
 2170              	.L57:
 698:./shy_fft.h   ****                 {
 2171              		.loc 3 698 17 discriminator 2 view .LVU634
 2172              	.LBE269:
 2173              	.LBE271:
 683:./shy_fft.h   ****             {
 2174              		.loc 3 683 13 is_stmt 1 discriminator 2 view .LVU635
 2175 016a 069B     		ldr	r3, [sp, #24]
 2176 016c AA44     		add	r10, r10, r5
 2177              	.LVL189:
 683:./shy_fft.h   ****             {
 2178              		.loc 3 683 13 is_stmt 0 discriminator 2 view .LVU636
 2179 016e 0E9A     		ldr	r2, [sp, #56]
 2180 0170 A944     		add	r9, r9, r5
 2181              	.LVL190:
 683:./shy_fft.h   ****             {
 2182              		.loc 3 683 13 discriminator 2 view .LVU637
 2183 0172 1344     		add	r3, r3, r2
 2184 0174 0693     		str	r3, [sp, #24]
 2185              	.LVL191:
 683:./shy_fft.h   ****             {
 2186              		.loc 3 683 13 discriminator 2 view .LVU638
ARM GAS  /tmp/cchieLBQ.s 			page 81


 2187 0176 019B     		ldr	r3, [sp, #4]
 2188              	.LVL192:
 683:./shy_fft.h   ****             {
 2189              		.loc 3 683 13 discriminator 2 view .LVU639
 2190 0178 2B44     		add	r3, r3, r5
 2191 017a 0193     		str	r3, [sp, #4]
 2192              	.LVL193:
 683:./shy_fft.h   ****             {
 2193              		.loc 3 683 13 discriminator 2 view .LVU640
 2194 017c 029B     		ldr	r3, [sp, #8]
 2195 017e 2B44     		add	r3, r3, r5
 2196 0180 0293     		str	r3, [sp, #8]
 2197              	.LVL194:
 683:./shy_fft.h   ****             {
 2198              		.loc 3 683 13 discriminator 2 view .LVU641
 2199 0182 0A9B     		ldr	r3, [sp, #40]
 2200 0184 2B44     		add	r3, r3, r5
 2201 0186 0A93     		str	r3, [sp, #40]
 2202              	.LVL195:
 683:./shy_fft.h   ****             {
 2203              		.loc 3 683 13 discriminator 2 view .LVU642
 2204 0188 049B     		ldr	r3, [sp, #16]
 2205 018a 2B44     		add	r3, r3, r5
 2206 018c 0493     		str	r3, [sp, #16]
 2207 018e 67E7     		b	.L59
 2208              	.LVL196:
 2209              	.L56:
 683:./shy_fft.h   ****             {
 2210              		.loc 3 683 13 discriminator 2 view .LVU643
 2211              	.LBE273:
 715:./shy_fft.h   ****             {
 2212              		.loc 3 715 13 view .LVU644
 2213 0190 A742     		cmp	r7, r4
 2214              	.LBE263:
 678:./shy_fft.h   ****         {
 2215              		.loc 3 678 9 view .LVU645
 2216 0192 08F1FF38 		add	r8, r8, #-1
 2217              	.LVL197:
 2218              	.LBB274:
 715:./shy_fft.h   ****             {
 2219              		.loc 3 715 13 view .LVU646
 2220 0196 19BF     		ittee	ne
 2221 0198 2746     		movne	r7, r4
 2222              	.LVL198:
 722:./shy_fft.h   ****                 d = output;
 2223              		.loc 3 722 17 view .LVU647
 2224 019a 059B     		ldrne	r3, [sp, #20]
 2225              	.LVL199:
 718:./shy_fft.h   ****             }
 2226              		.loc 3 718 17 view .LVU648
 2227 019c 059F     		ldreq	r7, [sp, #20]
 2228 019e 2346     		moveq	r3, r4
 2229              	.LVL200:
 718:./shy_fft.h   ****             }
 2230              		.loc 3 718 17 view .LVU649
 2231              	.LBE274:
 678:./shy_fft.h   ****         {
ARM GAS  /tmp/cchieLBQ.s 			page 82


 2232              		.loc 3 678 9 is_stmt 1 view .LVU650
 678:./shy_fft.h   ****         {
 2233              		.loc 3 678 9 is_stmt 0 view .LVU651
 2234 01a0 3DE7     		b	.L61
 2235              	.LVL201:
 2236              	.L55:
 678:./shy_fft.h   ****         {
 2237              		.loc 3 678 9 view .LVU652
 2238              	.LBE277:
 728:./shy_fft.h   ****         {
 2239              		.loc 3 728 9 view .LVU653
 2240 01a2 A742     		cmp	r7, r4
 2241 01a4 07D1     		bne	.L62
 730:./shy_fft.h   ****         }
 2242              		.loc 3 730 32 view .LVU654
 2243 01a6 1D9A     		ldr	r2, [sp, #116]
 2244 01a8 0421     		movs	r1, #4
 730:./shy_fft.h   ****         }
 2245              		.loc 3 730 22 view .LVU655
 2246 01aa 1846     		mov	r0, r3
 730:./shy_fft.h   ****         }
 2247              		.loc 3 730 32 view .LVU656
 2248 01ac 9140     		lsls	r1, r1, r2
 730:./shy_fft.h   ****         }
 2249              		.loc 3 730 22 view .LVU657
 2250 01ae 2246     		mov	r2, r4
 2251 01b0 1944     		add	r1, r1, r3
 2252 01b2 FFF7FEFF 		bl	_ZSt4copyIPfS0_ET0_T_S2_S1_
 2253              	.LVL202:
 2254              	.L62:
 730:./shy_fft.h   ****         }
 2255              		.loc 3 730 22 view .LVU658
 2256 01b6 0599     		ldr	r1, [sp, #20]
 2257 01b8 2346     		mov	r3, r4
 2258              	.LBB278:
 2259              	.LBB275:
 722:./shy_fft.h   ****                 d = output;
 2260              		.loc 3 722 17 discriminator 3 view .LVU659
 2261 01ba 0020     		movs	r0, #0
 2262 01bc 0A46     		mov	r2, r1
 2263              	.LVL203:
 2264              	.L65:
 722:./shy_fft.h   ****                 d = output;
 2265              		.loc 3 722 17 discriminator 3 view .LVU660
 2266              	.LBE275:
 2267              	.LBE278:
 2268              	.LBB279:
 735:./shy_fft.h   ****         {
 2269              		.loc 3 735 29 is_stmt 1 discriminator 3 view .LVU661
 2270 01be 039D     		ldr	r5, [sp, #12]
 2271 01c0 2033     		adds	r3, r3, #32
 2272 01c2 2032     		adds	r2, r2, #32
 2273 01c4 A842     		cmp	r0, r5
 2274 01c6 43D3     		bcc	.L63
 2275              	.LBE279:
 2276              	.LBB284:
 2277              	.LBB285:
ARM GAS  /tmp/cchieLBQ.s 			page 83


 757:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 2278              		.loc 3 757 43 is_stmt 0 view .LVU662
 2279 01c8 AD08     		lsrs	r5, r5, #2
 2280              	.LBE285:
 753:./shy_fft.h   ****         {
 2281              		.loc 3 753 20 view .LVU663
 2282 01ca 0022     		movs	r2, #0
 2283              	.LBB286:
 757:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 2284              		.loc 3 757 32 view .LVU664
 2285 01cc 6E00     		lsls	r6, r5, #1
 2286              	.LVL204:
 2287              	.L64:
 757:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 2288              		.loc 3 757 32 view .LVU665
 2289              	.LBE286:
 753:./shy_fft.h   ****         {
 2290              		.loc 3 753 29 is_stmt 1 discriminator 3 view .LVU666
 2291 01ce 039B     		ldr	r3, [sp, #12]
 2292 01d0 1031     		adds	r1, r1, #16
 2293              	.LVL205:
 753:./shy_fft.h   ****         {
 2294              		.loc 3 753 29 is_stmt 0 discriminator 3 view .LVU667
 2295 01d2 9A42     		cmp	r2, r3
 2296 01d4 80F08480 		bcs	.L54
 2297              	.LBB287:
 755:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 2298              		.loc 3 755 37 discriminator 2 view .LVU668
 2299 01d8 D3B2     		uxtb	r3, r2
 755:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 2300              		.loc 3 755 45 discriminator 2 view .LVU669
 2301 01da 0D98     		ldr	r0, [sp, #52]
 761:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 2302              		.loc 3 761 29 discriminator 2 view .LVU670
 2303 01dc 11ED027A 		vldr.32	s14, [r1, #-8]
 755:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 2304              		.loc 3 755 45 discriminator 2 view .LVU671
 2305 01e0 C05C     		ldrb	r0, [r0, r3]	@ zero_extendqisi2
 755:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 2306              		.loc 3 755 63 discriminator 2 view .LVU672
 2307 01e2 130A     		lsrs	r3, r2, #8
 761:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 2308              		.loc 3 761 22 discriminator 2 view .LVU673
 2309 01e4 51ED047A 		vldr.32	s15, [r1, #-16]
 2310              	.LBE287:
 753:./shy_fft.h   ****         {
 2311              		.loc 3 753 9 discriminator 2 view .LVU674
 2312 01e8 0432     		adds	r2, r2, #4
 2313              	.LVL206:
 2314              	.LBB288:
 755:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 2315              		.loc 3 755 51 discriminator 2 view .LVU675
 2316 01ea 0D9F     		ldr	r7, [sp, #52]
 761:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 2317              		.loc 3 761 15 discriminator 2 view .LVU676
 2318 01ec 77EE876A 		vadd.f32	s13, s15, s14
 763:./shy_fft.h   ****             T b_3 = s[3] * T(2);
ARM GAS  /tmp/cchieLBQ.s 			page 84


 2319              		.loc 3 763 22 discriminator 2 view .LVU677
 2320 01f0 51ED035A 		vldr.32	s11, [r1, #-12]
 755:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 2321              		.loc 3 755 51 discriminator 2 view .LVU678
 2322 01f4 FB5C     		ldrb	r3, [r7, r3]	@ zero_extendqisi2
 762:./shy_fft.h   ****             T b_1 = s[1] * T(2);
 2323              		.loc 3 762 15 discriminator 2 view .LVU679
 2324 01f6 77EEC77A 		vsub.f32	s15, s15, s14
 766:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 2325              		.loc 3 766 25 discriminator 2 view .LVU680
 2326 01fa B0EE007A 		vmov.f32	s14, #2.0e+0
 764:./shy_fft.h   **** 
 2327              		.loc 3 764 22 discriminator 2 view .LVU681
 2328 01fe 11ED016A 		vldr.32	s12, [r1, #-4]
 755:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 2329              		.loc 3 755 51 discriminator 2 view .LVU682
 2330 0202 43EA0023 		orr	r3, r3, r0, lsl #8
 756:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 2331              		.loc 3 756 32 discriminator 2 view .LVU683
 2332 0206 1D98     		ldr	r0, [sp, #116]
 766:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 2333              		.loc 3 766 25 discriminator 2 view .LVU684
 2334 0208 B0EE665A 		vmov.f32	s10, s13
 756:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 2335              		.loc 3 756 32 discriminator 2 view .LVU685
 2336 020c C0F11000 		rsb	r0, r0, #16
 767:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 2337              		.loc 3 767 25 discriminator 2 view .LVU686
 2338 0210 E5EEC76A 		vfms.f32	s13, s11, s14
 756:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 2339              		.loc 3 756 25 discriminator 2 view .LVU687
 2340 0214 0341     		asrs	r3, r3, r0
 2341              	.LVL207:
 766:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 2342              		.loc 3 766 25 discriminator 2 view .LVU688
 2343 0216 A5EE875A 		vfma.f32	s10, s11, s14
 757:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 2344              		.loc 3 757 20 discriminator 2 view .LVU689
 2345 021a F018     		adds	r0, r6, r3
 2346              	.LVL208:
 758:./shy_fft.h   ****             size_t r3 = r0 + 3 * (rt_size >> 2);
 2347              		.loc 3 758 20 discriminator 2 view .LVU690
 2348 021c 05EB030C 		add	ip, r5, r3
 2349              	.LVL209:
 766:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 2350              		.loc 3 766 14 discriminator 2 view .LVU691
 2351 0220 04EB8303 		add	r3, r4, r3, lsl #2
 2352              	.LVL210:
 759:./shy_fft.h   **** 
 2353              		.loc 3 759 20 discriminator 2 view .LVU692
 2354 0224 2F18     		adds	r7, r5, r0
 2355              	.LVL211:
 767:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 2356              		.loc 3 767 14 discriminator 2 view .LVU693
 2357 0226 04EB8000 		add	r0, r4, r0, lsl #2
 2358              	.LVL212:
 766:./shy_fft.h   ****             d[r1] = b_0 - b_1;
ARM GAS  /tmp/cchieLBQ.s 			page 85


 2359              		.loc 3 766 13 discriminator 2 view .LVU694
 2360 022a 83ED005A 		vstr.32	s10, [r3]
 768:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 2361              		.loc 3 768 14 discriminator 2 view .LVU695
 2362 022e 04EB8C03 		add	r3, r4, ip, lsl #2
 767:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 2363              		.loc 3 767 13 discriminator 2 view .LVU696
 2364 0232 C0ED006A 		vstr.32	s13, [r0]
 768:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 2365              		.loc 3 768 25 discriminator 2 view .LVU697
 2366 0236 F0EE676A 		vmov.f32	s13, s15
 769:./shy_fft.h   ****             s += 4;
 2367              		.loc 3 769 25 discriminator 2 view .LVU698
 2368 023a E6EE477A 		vfms.f32	s15, s12, s14
 2369              	.LVL213:
 768:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 2370              		.loc 3 768 25 discriminator 2 view .LVU699
 2371 023e E6EE076A 		vfma.f32	s13, s12, s14
 2372              	.LVL214:
 768:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 2373              		.loc 3 768 13 discriminator 2 view .LVU700
 2374 0242 C3ED006A 		vstr.32	s13, [r3]
 769:./shy_fft.h   ****             s += 4;
 2375              		.loc 3 769 14 discriminator 2 view .LVU701
 2376 0246 04EB8703 		add	r3, r4, r7, lsl #2
 769:./shy_fft.h   ****             s += 4;
 2377              		.loc 3 769 13 discriminator 2 view .LVU702
 2378 024a C3ED007A 		vstr.32	s15, [r3]
 2379              	.LVL215:
 769:./shy_fft.h   ****             s += 4;
 2380              		.loc 3 769 13 discriminator 2 view .LVU703
 2381              	.LBE288:
 753:./shy_fft.h   ****         {
 2382              		.loc 3 753 9 is_stmt 1 discriminator 2 view .LVU704
 753:./shy_fft.h   ****         {
 2383              		.loc 3 753 9 is_stmt 0 discriminator 2 view .LVU705
 2384 024e BEE7     		b	.L64
 2385              	.LVL216:
 2386              	.L63:
 753:./shy_fft.h   ****         {
 2387              		.loc 3 753 9 discriminator 2 view .LVU706
 2388              	.LBE284:
 2389              	.LBB289:
 2390              	.LBB280:
 738:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 2391              		.loc 3 738 29 discriminator 2 view .LVU707
 2392 0250 13ED047A 		vldr.32	s14, [r3, #-16]
 2393              	.LBE280:
 735:./shy_fft.h   ****         {
 2394              		.loc 3 735 9 discriminator 2 view .LVU708
 2395 0254 0830     		adds	r0, r0, #8
 2396              	.LVL217:
 2397              	.LBB281:
 738:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 2398              		.loc 3 738 29 discriminator 2 view .LVU709
 2399 0256 53ED087A 		vldr.32	s15, [r3, #-32]
 746:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
ARM GAS  /tmp/cchieLBQ.s 			page 86


 2400              		.loc 3 746 34 discriminator 2 view .LVU710
 2401 025a 9FED236A 		vldr.32	s12, .L68
 738:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 2402              		.loc 3 738 29 discriminator 2 view .LVU711
 2403 025e 77EE877A 		vadd.f32	s15, s15, s14
 738:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 2404              		.loc 3 738 13 discriminator 2 view .LVU712
 2405 0262 42ED087A 		vstr.32	s15, [r2, #-32]
 739:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 2406              		.loc 3 739 29 discriminator 2 view .LVU713
 2407 0266 13ED047A 		vldr.32	s14, [r3, #-16]
 2408 026a 53ED087A 		vldr.32	s15, [r3, #-32]
 2409 026e 77EEC77A 		vsub.f32	s15, s15, s14
 739:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 2410              		.loc 3 739 13 discriminator 2 view .LVU714
 2411 0272 42ED047A 		vstr.32	s15, [r2, #-16]
 740:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 2412              		.loc 3 740 33 discriminator 2 view .LVU715
 2413 0276 53ED067A 		vldr.32	s15, [r3, #-24]
 2414 027a 77EEA77A 		vadd.f32	s15, s15, s15
 740:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 2415              		.loc 3 740 13 discriminator 2 view .LVU716
 2416 027e 42ED067A 		vstr.32	s15, [r2, #-24]
 741:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 2417              		.loc 3 741 33 discriminator 2 view .LVU717
 2418 0282 53ED027A 		vldr.32	s15, [r3, #-8]
 2419 0286 77EEA77A 		vadd.f32	s15, s15, s15
 741:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 2420              		.loc 3 741 13 discriminator 2 view .LVU718
 2421 028a 42ED027A 		vstr.32	s15, [r2, #-8]
 742:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 2422              		.loc 3 742 33 discriminator 2 view .LVU719
 2423 028e 13ED057A 		vldr.32	s14, [r3, #-20]
 2424 0292 53ED077A 		vldr.32	s15, [r3, #-28]
 2425 0296 77EE877A 		vadd.f32	s15, s15, s14
 742:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 2426              		.loc 3 742 13 discriminator 2 view .LVU720
 2427 029a 42ED077A 		vstr.32	s15, [r2, #-28]
 743:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 2428              		.loc 3 743 33 discriminator 2 view .LVU721
 2429 029e 13ED017A 		vldr.32	s14, [r3, #-4]
 2430 02a2 53ED037A 		vldr.32	s15, [r3, #-12]
 2431 02a6 77EEC77A 		vsub.f32	s15, s15, s14
 743:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 2432              		.loc 3 743 13 discriminator 2 view .LVU722
 2433 02aa 42ED057A 		vstr.32	s15, [r2, #-20]
 744:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 2434              		.loc 3 744 13 discriminator 2 view .LVU723
 2435 02ae 53ED077A 		vldr.32	s15, [r3, #-28]
 2436 02b2 53ED056A 		vldr.32	s13, [r3, #-20]
 745:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 2437              		.loc 3 745 13 discriminator 2 view .LVU724
 2438 02b6 13ED037A 		vldr.32	s14, [r3, #-12]
 744:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 2439              		.loc 3 744 13 discriminator 2 view .LVU725
 2440 02ba 77EEE66A 		vsub.f32	s13, s15, s13
 2441              	.LVL218:
ARM GAS  /tmp/cchieLBQ.s 			page 87


 745:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 2442              		.loc 3 745 13 discriminator 2 view .LVU726
 2443 02be 53ED017A 		vldr.32	s15, [r3, #-4]
 2444 02c2 77EE277A 		vadd.f32	s15, s14, s15
 2445              	.LVL219:
 745:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 2446              		.loc 3 745 13 discriminator 2 view .LVU727
 2447              	.LBE281:
 2448              	.LBE289:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 2449              		.loc 3 137 41 is_stmt 1 discriminator 2 view .LVU728
 2450              	.LBB290:
 2451              	.LBB282:
 746:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 2452              		.loc 3 746 28 is_stmt 0 discriminator 2 view .LVU729
 2453 02c6 36EEA77A 		vadd.f32	s14, s13, s15
 747:./shy_fft.h   ****         }
 2454              		.loc 3 747 28 discriminator 2 view .LVU730
 2455 02ca 77EEE67A 		vsub.f32	s15, s15, s13
 2456              	.LVL220:
 746:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 2457              		.loc 3 746 34 discriminator 2 view .LVU731
 2458 02ce 27EE067A 		vmul.f32	s14, s14, s12
 747:./shy_fft.h   ****         }
 2459              		.loc 3 747 34 discriminator 2 view .LVU732
 2460 02d2 67EE867A 		vmul.f32	s15, s15, s12
 746:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 2461              		.loc 3 746 13 discriminator 2 view .LVU733
 2462 02d6 02ED037A 		vstr.32	s14, [r2, #-12]
 2463              	.LVL221:
 746:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 2464              		.loc 3 746 13 discriminator 2 view .LVU734
 2465              	.LBE282:
 2466              	.LBE290:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 2467              		.loc 3 137 41 is_stmt 1 discriminator 2 view .LVU735
 2468              	.LBB291:
 2469              	.LBB283:
 747:./shy_fft.h   ****         }
 2470              		.loc 3 747 13 is_stmt 0 discriminator 2 view .LVU736
 2471 02da 42ED017A 		vstr.32	s15, [r2, #-4]
 2472              	.LBE283:
 735:./shy_fft.h   ****         {
 2473              		.loc 3 735 9 is_stmt 1 discriminator 2 view .LVU737
 2474              	.LVL222:
 735:./shy_fft.h   ****         {
 2475              		.loc 3 735 9 is_stmt 0 discriminator 2 view .LVU738
 2476 02de 6EE7     		b	.L65
 2477              	.LVL223:
 2478              	.L54:
 735:./shy_fft.h   ****         {
 2479              		.loc 3 735 9 discriminator 2 view .LVU739
 2480              	.LBE291:
 772:./shy_fft.h   **** };
 2481              		.loc 3 772 5 view .LVU740
 2482 02e0 13B0     		add	sp, sp, #76
 2483              		.cfi_def_cfa_offset 36
ARM GAS  /tmp/cchieLBQ.s 			page 88


 2484              		@ sp needed
 2485 02e2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2486              	.LVL224:
 2487              	.L69:
 772:./shy_fft.h   **** };
 2488              		.loc 3 772 5 view .LVU741
 2489 02e6 00BF     		.align	2
 2490              	.L68:
 2491 02e8 F304353F 		.word	1060439283
 2492              		.cfi_endproc
 2493              	.LFE4719:
 2495              		.section	.text._ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_,"axG",%progbit
 2496              		.align	1
 2497              		.weak	_ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_
 2498              		.syntax unified
 2499              		.thumb
 2500              		.thumb_func
 2501              		.fpu fpv5-d16
 2503              	_ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_:
 2504              	.LVL225:
 2505              	.LFB4720:
 560:./shy_fft.h   ****     {
 2506              		.loc 3 560 10 is_stmt 1 view -0
 2507              		.cfi_startproc
 2508              		@ args = 4, pretend = 0, frame = 72
 2509              		@ frame_needed = 0, uses_anonymous_args = 0
 2510              	.LBB292:
 567:./shy_fft.h   ****         {
 2511              		.loc 3 567 48 view .LVU743
 2512              	.LBE292:
 560:./shy_fft.h   ****     {
 2513              		.loc 3 560 10 is_stmt 0 view .LVU744
 2514 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2515              		.cfi_def_cfa_offset 36
 2516              		.cfi_offset 4, -36
 2517              		.cfi_offset 5, -32
 2518              		.cfi_offset 6, -28
 2519              		.cfi_offset 7, -24
 2520              		.cfi_offset 8, -20
 2521              		.cfi_offset 9, -16
 2522              		.cfi_offset 10, -12
 2523              		.cfi_offset 11, -8
 2524              		.cfi_offset 14, -4
 2525 0004 93B0     		sub	sp, sp, #76
 2526              		.cfi_def_cfa_offset 112
 560:./shy_fft.h   ****     {
 2527              		.loc 3 560 10 view .LVU745
 2528 0006 8B46     		mov	fp, r1
 562:./shy_fft.h   ****         T*      d = output;
 2529              		.loc 3 562 17 view .LVU746
 2530 0008 0C46     		mov	r4, r1
 560:./shy_fft.h   ****     {
 2531              		.loc 3 560 10 view .LVU747
 2532 000a 1546     		mov	r5, r2
 2533 000c 1C98     		ldr	r0, [sp, #112]
 2534              	.LVL226:
 560:./shy_fft.h   ****     {
ARM GAS  /tmp/cchieLBQ.s 			page 89


 2535              		.loc 3 560 10 view .LVU748
 2536 000e 9046     		mov	r8, r2
 2537              	.LBB305:
 567:./shy_fft.h   ****         {
 2538              		.loc 3 567 20 view .LVU749
 2539 0010 0B21     		movs	r1, #11
 2540              	.LVL227:
 567:./shy_fft.h   ****         {
 2541              		.loc 3 567 20 view .LVU750
 2542              	.LBE305:
 560:./shy_fft.h   ****     {
 2543              		.loc 3 560 10 view .LVU751
 2544 0012 0C93     		str	r3, [sp, #48]
 2545              	.LVL228:
 2546              	.L74:
 2547              	.LBB306:
 2548              	.LBB293:
 569:./shy_fft.h   ****             size_t n_2 = n >> 1;
 2549              		.loc 3 569 28 view .LVU752
 2550 0014 0123     		movs	r3, #1
 2551              	.LBB294:
 2552              	.LBB295:
 575:./shy_fft.h   ****                 T* d1r = d + i;
 2553              		.loc 3 575 29 view .LVU753
 2554 0016 0422     		movs	r2, #4
 2555              	.LBE295:
 2556              	.LBE294:
 569:./shy_fft.h   ****             size_t n_2 = n >> 1;
 2557              		.loc 3 569 28 view .LVU754
 2558 0018 8B40     		lsls	r3, r3, r1
 2559              	.LVL229:
 2560              	.LBB302:
 572:./shy_fft.h   ****             {
 2561              		.loc 3 572 33 is_stmt 1 view .LVU755
 2562              	.LBB299:
 575:./shy_fft.h   ****                 T* d1r = d + i;
 2563              		.loc 3 575 29 is_stmt 0 view .LVU756
 2564 001a 8A40     		lsls	r2, r2, r1
 2565 001c 0192     		str	r2, [sp, #4]
 2566              	.LBE299:
 2567              	.LBE302:
 570:./shy_fft.h   **** 
 2568              		.loc 3 570 20 view .LVU757
 2569 001e 5A08     		lsrs	r2, r3, #1
 2570              	.LVL230:
 570:./shy_fft.h   **** 
 2571              		.loc 3 570 20 view .LVU758
 2572 0020 4FEAC309 		lsl	r9, r3, #3
 2573              	.LBB303:
 2574              	.LBB300:
 581:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 2575              		.loc 3 581 30 view .LVU759
 2576 0024 9200     		lsls	r2, r2, #2
 2577              	.LVL231:
 581:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 2578              		.loc 3 581 30 view .LVU760
 2579 0026 0292     		str	r2, [sp, #8]
ARM GAS  /tmp/cchieLBQ.s 			page 90


 2580              	.LBE300:
 572:./shy_fft.h   ****             {
 2581              		.loc 3 572 49 view .LVU761
 2582 0028 5A00     		lsls	r2, r3, #1
 2583 002a 019B     		ldr	r3, [sp, #4]
 2584              	.LVL232:
 572:./shy_fft.h   ****             {
 2585              		.loc 3 572 49 view .LVU762
 2586 002c 0D92     		str	r2, [sp, #52]
 2587 002e E618     		adds	r6, r4, r3
 2588 0030 4344     		add	r3, r8, r3
 2589 0032 0493     		str	r3, [sp, #16]
 2590 0034 08F10403 		add	r3, r8, #4
 2591 0038 0393     		str	r3, [sp, #12]
 2592 003a 029B     		ldr	r3, [sp, #8]
 2593 003c 0433     		adds	r3, r3, #4
 2594 003e 08EB030A 		add	r10, r8, r3
 2595 0042 029B     		ldr	r3, [sp, #8]
 2596 0044 E318     		adds	r3, r4, r3
 2597 0046 0593     		str	r3, [sp, #20]
 2598 0048 019B     		ldr	r3, [sp, #4]
 2599 004a 5B00     		lsls	r3, r3, #1
 2600 004c 0E93     		str	r3, [sp, #56]
 572:./shy_fft.h   ****             {
 2601              		.loc 3 572 24 view .LVU763
 2602 004e 0023     		movs	r3, #0
 2603 0050 0693     		str	r3, [sp, #24]
 2604              	.LVL233:
 2605              	.L72:
 2606              	.LBB301:
 579:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 2607              		.loc 3 579 34 view .LVU764
 2608 0052 96ED007A 		vldr.32	s14, [r6]
 2609 0056 271D     		adds	r7, r4, #4
 2610 0058 D4ED007A 		vldr.32	s15, [r4]
 579:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 2611              		.loc 3 579 17 view .LVU765
 2612 005c 039B     		ldr	r3, [sp, #12]
 579:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 2613              		.loc 3 579 34 view .LVU766
 2614 005e 77EE877A 		vadd.f32	s15, s15, s14
 582:./shy_fft.h   **** 
 2615              		.loc 3 582 17 view .LVU767
 2616 0062 029A     		ldr	r2, [sp, #8]
 586:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 2617              		.loc 3 586 17 view .LVU768
 2618 0064 0F91     		str	r1, [sp, #60]
 2619 0066 1C90     		str	r0, [sp, #112]
 579:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 2620              		.loc 3 579 17 view .LVU769
 2621 0068 43ED017A 		vstr.32	s15, [r3, #-4]
 580:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 2622              		.loc 3 580 34 view .LVU770
 2623 006c D4ED007A 		vldr.32	s15, [r4]
 2624 0070 96ED007A 		vldr.32	s14, [r6]
 580:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 2625              		.loc 3 580 17 view .LVU771
ARM GAS  /tmp/cchieLBQ.s 			page 91


 2626 0074 049B     		ldr	r3, [sp, #16]
 580:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 2627              		.loc 3 580 34 view .LVU772
 2628 0076 77EEC77A 		vsub.f32	s15, s15, s14
 580:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 2629              		.loc 3 580 17 view .LVU773
 2630 007a C3ED007A 		vstr.32	s15, [r3]
 581:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 2631              		.loc 3 581 30 view .LVU774
 2632 007e 029B     		ldr	r3, [sp, #8]
 2633 0080 E318     		adds	r3, r4, r3
 581:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 2634              		.loc 3 581 36 view .LVU775
 2635 0082 D3ED007A 		vldr.32	s15, [r3]
 582:./shy_fft.h   **** 
 2636              		.loc 3 582 17 view .LVU776
 2637 0086 049B     		ldr	r3, [sp, #16]
 581:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 2638              		.loc 3 581 36 view .LVU777
 2639 0088 77EEA77A 		vadd.f32	s15, s15, s15
 582:./shy_fft.h   **** 
 2640              		.loc 3 582 17 view .LVU778
 2641 008c 1344     		add	r3, r3, r2
 582:./shy_fft.h   **** 
 2642              		.loc 3 582 30 view .LVU779
 2643 008e B218     		adds	r2, r6, r2
 581:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 2644              		.loc 3 581 17 view .LVU780
 2645 0090 4AED017A 		vstr.32	s15, [r10, #-4]
 582:./shy_fft.h   **** 
 2646              		.loc 3 582 36 view .LVU781
 2647 0094 D2ED007A 		vldr.32	s15, [r2]
 2648 0098 77EEA77A 		vadd.f32	s15, s15, s15
 582:./shy_fft.h   **** 
 2649              		.loc 3 582 17 view .LVU782
 2650 009c C3ED007A 		vstr.32	s15, [r3]
 2651              	.LVL234:
 586:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 2652              		.loc 3 586 17 view .LVU783
 2653 00a0 FFF7FEFF 		bl	_ZN14RotationPhasorIfLj12EE5StartEj
 2654              	.LVL235:
 2655              	.LBB296:
 587:./shy_fft.h   ****                 {
 2656              		.loc 3 587 37 is_stmt 1 view .LVU784
 2657 00a4 0398     		ldr	r0, [sp, #12]
 2658 00a6 0199     		ldr	r1, [sp, #4]
 2659 00a8 321D     		adds	r2, r6, #4
 2660 00aa 0E9B     		ldr	r3, [sp, #56]
 2661 00ac 0144     		add	r1, r1, r0
 2662              	.LBE296:
 586:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 2663              		.loc 3 586 17 is_stmt 0 view .LVU785
 2664 00ae 0B90     		str	r0, [sp, #44]
 2665 00b0 E318     		adds	r3, r4, r3
 2666 00b2 1C98     		ldr	r0, [sp, #112]
 2667 00b4 0991     		str	r1, [sp, #36]
 2668 00b6 0199     		ldr	r1, [sp, #4]
ARM GAS  /tmp/cchieLBQ.s 			page 92


 2669 00b8 CDF828A0 		str	r10, [sp, #40]
 2670 00bc 5144     		add	r1, r1, r10
 2671 00be 0796     		str	r6, [sp, #28]
 2672 00c0 0891     		str	r1, [sp, #32]
 2673 00c2 0F99     		ldr	r1, [sp, #60]
 2674              	.LVL236:
 2675              	.L71:
 586:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 2676              		.loc 3 586 17 view .LVU786
 2677 00c4 1191     		str	r1, [sp, #68]
 2678              	.LBB298:
 2679              	.LBB297:
 589:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 2680              		.loc 3 589 36 discriminator 2 view .LVU787
 2681 00c6 0799     		ldr	r1, [sp, #28]
 589:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 2682              		.loc 3 589 32 discriminator 2 view .LVU788
 2683 00c8 97ED007A 		vldr.32	s14, [r7]
 589:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 2684              		.loc 3 589 36 discriminator 2 view .LVU789
 2685 00cc 71ED017A 		vldmdb.32	r1!, {s15}
 599:./shy_fft.h   ****                 }
 2686              		.loc 3 599 21 discriminator 2 view .LVU790
 2687 00d0 1C90     		str	r0, [sp, #112]
 589:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 2688              		.loc 3 589 36 discriminator 2 view .LVU791
 2689 00d2 77EE877A 		vadd.f32	s15, s15, s14
 2690 00d6 0791     		str	r1, [sp, #28]
 589:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 2691              		.loc 3 589 21 discriminator 2 view .LVU792
 2692 00d8 0B99     		ldr	r1, [sp, #44]
 2693 00da E1EC017A 		vstmia.32	r1!, {s15}
 590:./shy_fft.h   **** 
 2694              		.loc 3 590 32 discriminator 2 view .LVU793
 2695 00de D2ED007A 		vldr.32	s15, [r2]
 590:./shy_fft.h   **** 
 2696              		.loc 3 590 36 discriminator 2 view .LVU794
 2697 00e2 33ED017A 		vldmdb.32	r3!, {s14}
 589:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 2698              		.loc 3 589 21 discriminator 2 view .LVU795
 2699 00e6 0B91     		str	r1, [sp, #44]
 590:./shy_fft.h   **** 
 2700              		.loc 3 590 36 discriminator 2 view .LVU796
 2701 00e8 77EEC77A 		vsub.f32	s15, s15, s14
 590:./shy_fft.h   **** 
 2702              		.loc 3 590 21 discriminator 2 view .LVU797
 2703 00ec 0A99     		ldr	r1, [sp, #40]
 595:./shy_fft.h   **** 
 2704              		.loc 3 595 23 discriminator 2 view .LVU798
 2705 00ee 0F93     		str	r3, [sp, #60]
 590:./shy_fft.h   **** 
 2706              		.loc 3 590 21 discriminator 2 view .LVU799
 2707 00f0 E1EC017A 		vstmia.32	r1!, {s15}
 2708 00f4 0A91     		str	r1, [sp, #40]
 594:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 2709              		.loc 3 594 23 discriminator 2 view .LVU800
 2710 00f6 0799     		ldr	r1, [sp, #28]
ARM GAS  /tmp/cchieLBQ.s 			page 93


 2711 00f8 F7EC016A 		vldmia.32	r7!, {s13}
 2712 00fc 91ED007A 		vldr.32	s14, [r1]
 595:./shy_fft.h   **** 
 2713              		.loc 3 595 23 discriminator 2 view .LVU801
 2714 0100 93ED006A 		vldr.32	s12, [r3]
 594:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 2715              		.loc 3 594 23 discriminator 2 view .LVU802
 2716 0104 76EEC76A 		vsub.f32	s13, s13, s14
 595:./shy_fft.h   **** 
 2717              		.loc 3 595 23 discriminator 2 view .LVU803
 2718 0108 B2EC017A 		vldmia.32	r2!, {s14}
 593:./shy_fft.h   ****                     T vr = sr[j] - si[-j];
 2719              		.loc 3 593 23 discriminator 2 view .LVU804
 2720 010c D0ED137A 		vldr.32	s15, [r0, #76]
 595:./shy_fft.h   **** 
 2721              		.loc 3 595 23 discriminator 2 view .LVU805
 2722 0110 37EE067A 		vadd.f32	s14, s14, s12
 592:./shy_fft.h   ****                     T s  = phasor->sin();
 2723              		.loc 3 592 23 discriminator 2 view .LVU806
 2724 0114 D0ED125A 		vldr.32	s11, [r0, #72]
 2725              	.LVL237:
 597:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 2726              		.loc 3 597 21 discriminator 2 view .LVU807
 2727 0118 099B     		ldr	r3, [sp, #36]
 595:./shy_fft.h   **** 
 2728              		.loc 3 595 23 discriminator 2 view .LVU808
 2729 011a 1092     		str	r2, [sp, #64]
 597:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 2730              		.loc 3 597 42 discriminator 2 view .LVU809
 2731 011c 27EE276A 		vmul.f32	s12, s14, s15
 598:./shy_fft.h   ****                     phasor->Rotate();
 2732              		.loc 3 598 37 discriminator 2 view .LVU810
 2733 0120 67EEE67A 		vnmul.f32	s15, s15, s13
 2734              	.LVL238:
 597:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 2735              		.loc 3 597 37 discriminator 2 view .LVU811
 2736 0124 A6EEA56A 		vfma.f32	s12, s13, s11
 598:./shy_fft.h   ****                     phasor->Rotate();
 2737              		.loc 3 598 37 discriminator 2 view .LVU812
 2738 0128 E7EE257A 		vfma.f32	s15, s14, s11
 597:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 2739              		.loc 3 597 21 discriminator 2 view .LVU813
 2740 012c A3EC016A 		vstmia.32	r3!, {s12}
 2741              	.LVL239:
 597:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 2742              		.loc 3 597 21 discriminator 2 view .LVU814
 2743 0130 0993     		str	r3, [sp, #36]
 598:./shy_fft.h   ****                     phasor->Rotate();
 2744              		.loc 3 598 21 discriminator 2 view .LVU815
 2745 0132 089B     		ldr	r3, [sp, #32]
 2746 0134 E3EC017A 		vstmia.32	r3!, {s15}
 2747 0138 0893     		str	r3, [sp, #32]
 599:./shy_fft.h   ****                 }
 2748              		.loc 3 599 21 discriminator 2 view .LVU816
 2749 013a FFF7FEFF 		bl	_ZN14RotationPhasorIfLj12EE6RotateEv
 2750              	.LVL240:
 599:./shy_fft.h   ****                 }
ARM GAS  /tmp/cchieLBQ.s 			page 94


 2751              		.loc 3 599 21 discriminator 2 view .LVU817
 2752              	.LBE297:
 587:./shy_fft.h   ****                 {
 2753              		.loc 3 587 17 is_stmt 1 discriminator 2 view .LVU818
 587:./shy_fft.h   ****                 {
 2754              		.loc 3 587 37 discriminator 2 view .LVU819
 2755 013e 059B     		ldr	r3, [sp, #20]
 2756 0140 1C98     		ldr	r0, [sp, #112]
 2757 0142 BB42     		cmp	r3, r7
 2758 0144 1199     		ldr	r1, [sp, #68]
 2759 0146 DDE90F32 		ldrd	r3, r2, [sp, #60]
 2760 014a BBD1     		bne	.L71
 2761              	.LBE298:
 2762              	.LBE301:
 572:./shy_fft.h   ****             {
 2763              		.loc 3 572 13 discriminator 2 view .LVU820
 2764 014c 069B     		ldr	r3, [sp, #24]
 2765 014e 4C44     		add	r4, r4, r9
 2766              	.LVL241:
 572:./shy_fft.h   ****             {
 2767              		.loc 3 572 13 is_stmt 0 discriminator 2 view .LVU821
 2768 0150 0D9A     		ldr	r2, [sp, #52]
 2769 0152 4E44     		add	r6, r6, r9
 2770              	.LVL242:
 572:./shy_fft.h   ****             {
 2771              		.loc 3 572 13 discriminator 2 view .LVU822
 2772 0154 CA44     		add	r10, r10, r9
 2773              	.LVL243:
 572:./shy_fft.h   ****             {
 2774              		.loc 3 572 13 discriminator 2 view .LVU823
 2775 0156 1344     		add	r3, r3, r2
 2776 0158 0693     		str	r3, [sp, #24]
 2777              	.LVL244:
 572:./shy_fft.h   ****             {
 2778              		.loc 3 572 33 is_stmt 1 discriminator 2 view .LVU824
 2779 015a 049B     		ldr	r3, [sp, #16]
 2780              	.LVL245:
 572:./shy_fft.h   ****             {
 2781              		.loc 3 572 33 is_stmt 0 discriminator 2 view .LVU825
 2782 015c 4B44     		add	r3, r3, r9
 2783 015e 0493     		str	r3, [sp, #16]
 2784              	.LVL246:
 572:./shy_fft.h   ****             {
 2785              		.loc 3 572 33 discriminator 2 view .LVU826
 2786 0160 039B     		ldr	r3, [sp, #12]
 2787 0162 4B44     		add	r3, r3, r9
 2788 0164 0393     		str	r3, [sp, #12]
 2789              	.LVL247:
 572:./shy_fft.h   ****             {
 2790              		.loc 3 572 33 discriminator 2 view .LVU827
 2791 0166 059B     		ldr	r3, [sp, #20]
 2792 0168 4B44     		add	r3, r3, r9
 2793 016a 0593     		str	r3, [sp, #20]
 2794 016c 069B     		ldr	r3, [sp, #24]
 2795 016e B3F5805F 		cmp	r3, #4096
 2796 0172 FFF46EAF 		bcc	.L72
 2797              	.LBE303:
ARM GAS  /tmp/cchieLBQ.s 			page 95


 604:./shy_fft.h   ****             {
 2798              		.loc 3 604 13 view .LVU828
 2799 0176 4545     		cmp	r5, r8
 2800              	.LBE293:
 567:./shy_fft.h   ****         {
 2801              		.loc 3 567 9 view .LVU829
 2802 0178 01F1FF31 		add	r1, r1, #-1
 2803              	.LBB304:
 604:./shy_fft.h   ****             {
 2804              		.loc 3 604 13 view .LVU830
 2805 017c 19BF     		ittee	ne
 2806 017e A846     		movne	r8, r5
 2807              	.LVL248:
 611:./shy_fft.h   ****                 d = output;
 2808              		.loc 3 611 17 view .LVU831
 2809 0180 5C46     		movne	r4, fp
 2810 0182 2C46     		moveq	r4, r5
 607:./shy_fft.h   ****             }
 2811              		.loc 3 607 17 view .LVU832
 2812 0184 D846     		moveq	r8, fp
 2813              	.LVL249:
 607:./shy_fft.h   ****             }
 2814              		.loc 3 607 17 view .LVU833
 2815              	.LBE304:
 567:./shy_fft.h   ****         {
 2816              		.loc 3 567 9 is_stmt 1 view .LVU834
 567:./shy_fft.h   ****         {
 2817              		.loc 3 567 48 view .LVU835
 2818 0186 0229     		cmp	r1, #2
 2819 0188 7FF444AF 		bne	.L74
 2820              	.LBE306:
 617:./shy_fft.h   ****         {
 2821              		.loc 3 617 9 is_stmt 0 view .LVU836
 2822 018c A845     		cmp	r8, r5
 2823 018e 05D1     		bne	.L75
 619:./shy_fft.h   ****         }
 2824              		.loc 3 619 22 view .LVU837
 2825 0190 2A46     		mov	r2, r5
 2826 0192 04F58041 		add	r1, r4, #16384
 2827              	.LVL250:
 619:./shy_fft.h   ****         }
 2828              		.loc 3 619 22 view .LVU838
 2829 0196 2046     		mov	r0, r4
 2830 0198 FFF7FEFF 		bl	_ZSt4copyIPfS0_ET0_T_S2_S1_
 2831              	.LVL251:
 2832              	.L75:
 2833 019c 2B46     		mov	r3, r5
 2834 019e 5A46     		mov	r2, fp
 2835 01a0 05F58041 		add	r1, r5, #16384
 2836              	.LVL252:
 2837              	.L76:
 2838              	.LBB307:
 2839              	.LBB308:
 627:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 2840              		.loc 3 627 29 discriminator 2 view .LVU839
 2841 01a4 93ED047A 		vldr.32	s14, [r3, #16]
 2842 01a8 2033     		adds	r3, r3, #32
ARM GAS  /tmp/cchieLBQ.s 			page 96


 2843 01aa 53ED087A 		vldr.32	s15, [r3, #-32]
 2844 01ae 2032     		adds	r2, r2, #32
 635:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 2845              		.loc 3 635 34 discriminator 2 view .LVU840
 2846 01b0 9FED436A 		vldr.32	s12, .L84
 627:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 2847              		.loc 3 627 29 discriminator 2 view .LVU841
 2848 01b4 77EE877A 		vadd.f32	s15, s15, s14
 627:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 2849              		.loc 3 627 13 discriminator 2 view .LVU842
 2850 01b8 42ED087A 		vstr.32	s15, [r2, #-32]
 628:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 2851              		.loc 3 628 29 discriminator 2 view .LVU843
 2852 01bc 13ED047A 		vldr.32	s14, [r3, #-16]
 2853 01c0 53ED087A 		vldr.32	s15, [r3, #-32]
 2854 01c4 77EEC77A 		vsub.f32	s15, s15, s14
 628:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 2855              		.loc 3 628 13 discriminator 2 view .LVU844
 2856 01c8 42ED047A 		vstr.32	s15, [r2, #-16]
 629:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 2857              		.loc 3 629 33 discriminator 2 view .LVU845
 2858 01cc 53ED067A 		vldr.32	s15, [r3, #-24]
 2859 01d0 77EEA77A 		vadd.f32	s15, s15, s15
 629:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 2860              		.loc 3 629 13 discriminator 2 view .LVU846
 2861 01d4 42ED067A 		vstr.32	s15, [r2, #-24]
 630:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 2862              		.loc 3 630 33 discriminator 2 view .LVU847
 2863 01d8 53ED027A 		vldr.32	s15, [r3, #-8]
 2864 01dc 77EEA77A 		vadd.f32	s15, s15, s15
 630:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 2865              		.loc 3 630 13 discriminator 2 view .LVU848
 2866 01e0 42ED027A 		vstr.32	s15, [r2, #-8]
 631:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 2867              		.loc 3 631 33 discriminator 2 view .LVU849
 2868 01e4 13ED057A 		vldr.32	s14, [r3, #-20]
 2869 01e8 53ED077A 		vldr.32	s15, [r3, #-28]
 2870 01ec 77EE877A 		vadd.f32	s15, s15, s14
 631:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 2871              		.loc 3 631 13 discriminator 2 view .LVU850
 2872 01f0 42ED077A 		vstr.32	s15, [r2, #-28]
 632:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 2873              		.loc 3 632 33 discriminator 2 view .LVU851
 2874 01f4 13ED017A 		vldr.32	s14, [r3, #-4]
 2875 01f8 53ED037A 		vldr.32	s15, [r3, #-12]
 2876 01fc 77EEC77A 		vsub.f32	s15, s15, s14
 632:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 2877              		.loc 3 632 13 discriminator 2 view .LVU852
 2878 0200 42ED057A 		vstr.32	s15, [r2, #-20]
 633:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 2879              		.loc 3 633 13 discriminator 2 view .LVU853
 2880 0204 53ED077A 		vldr.32	s15, [r3, #-28]
 2881 0208 53ED056A 		vldr.32	s13, [r3, #-20]
 634:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 2882              		.loc 3 634 13 discriminator 2 view .LVU854
 2883 020c 13ED037A 		vldr.32	s14, [r3, #-12]
 633:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
ARM GAS  /tmp/cchieLBQ.s 			page 97


 2884              		.loc 3 633 13 discriminator 2 view .LVU855
 2885 0210 77EEE66A 		vsub.f32	s13, s15, s13
 2886              	.LVL253:
 634:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 2887              		.loc 3 634 13 discriminator 2 view .LVU856
 2888 0214 53ED017A 		vldr.32	s15, [r3, #-4]
 2889              	.LBE308:
 624:./shy_fft.h   ****         {
 2890              		.loc 3 624 29 discriminator 2 view .LVU857
 2891 0218 9942     		cmp	r1, r3
 2892              	.LBB309:
 634:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 2893              		.loc 3 634 13 discriminator 2 view .LVU858
 2894 021a 77EE277A 		vadd.f32	s15, s14, s15
 2895              	.LVL254:
 634:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 2896              		.loc 3 634 13 discriminator 2 view .LVU859
 2897              	.LBE309:
 2898              	.LBE307:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 2899              		.loc 3 137 41 is_stmt 1 discriminator 2 view .LVU860
 2900              	.LBB312:
 2901              	.LBB310:
 635:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 2902              		.loc 3 635 28 is_stmt 0 discriminator 2 view .LVU861
 2903 021e 36EEA77A 		vadd.f32	s14, s13, s15
 636:./shy_fft.h   ****         }
 2904              		.loc 3 636 28 discriminator 2 view .LVU862
 2905 0222 77EEE67A 		vsub.f32	s15, s15, s13
 2906              	.LVL255:
 635:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 2907              		.loc 3 635 34 discriminator 2 view .LVU863
 2908 0226 27EE067A 		vmul.f32	s14, s14, s12
 636:./shy_fft.h   ****         }
 2909              		.loc 3 636 34 discriminator 2 view .LVU864
 2910 022a 67EE867A 		vmul.f32	s15, s15, s12
 635:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 2911              		.loc 3 635 13 discriminator 2 view .LVU865
 2912 022e 02ED037A 		vstr.32	s14, [r2, #-12]
 2913              	.LVL256:
 635:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 2914              		.loc 3 635 13 discriminator 2 view .LVU866
 2915              	.LBE310:
 2916              	.LBE312:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 2917              		.loc 3 137 41 is_stmt 1 discriminator 2 view .LVU867
 2918              	.LBB313:
 2919              	.LBB311:
 636:./shy_fft.h   ****         }
 2920              		.loc 3 636 13 is_stmt 0 discriminator 2 view .LVU868
 2921 0232 42ED017A 		vstr.32	s15, [r2, #-4]
 2922              	.LBE311:
 624:./shy_fft.h   ****         {
 2923              		.loc 3 624 9 is_stmt 1 discriminator 2 view .LVU869
 624:./shy_fft.h   ****         {
 2924              		.loc 3 624 29 discriminator 2 view .LVU870
 2925 0236 B5D1     		bne	.L76
ARM GAS  /tmp/cchieLBQ.s 			page 98


 2926 0238 0BF11001 		add	r1, fp, #16
 2927              	.LBE313:
 2928              	.LBB314:
 642:./shy_fft.h   ****         {
 2929              		.loc 3 642 20 is_stmt 0 view .LVU871
 2930 023c 0020     		movs	r0, #0
 2931              	.LVL257:
 2932              	.L77:
 2933              	.LBB315:
 652:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 2934              		.loc 3 652 29 discriminator 2 view .LVU872
 2935 023e 11ED027A 		vldr.32	s14, [r1, #-8]
 646:./shy_fft.h   ****                                   >> (16 - num_passes);
 2936              		.loc 3 646 43 discriminator 2 view .LVU873
 2937 0242 C3B2     		uxtb	r3, r0
 652:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 2938              		.loc 3 652 22 discriminator 2 view .LVU874
 2939 0244 51ED047A 		vldr.32	s15, [r1, #-16]
 2940 0248 1031     		adds	r1, r1, #16
 2941              	.LVL258:
 646:./shy_fft.h   ****                                   >> (16 - num_passes);
 2942              		.loc 3 646 51 discriminator 2 view .LVU875
 2943 024a 0C9A     		ldr	r2, [sp, #48]
 652:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 2944              		.loc 3 652 15 discriminator 2 view .LVU876
 2945 024c 77EE876A 		vadd.f32	s13, s15, s14
 2946              	.LVL259:
 646:./shy_fft.h   ****                                   >> (16 - num_passes);
 2947              		.loc 3 646 57 discriminator 2 view .LVU877
 2948 0250 0C9C     		ldr	r4, [sp, #48]
 646:./shy_fft.h   ****                                   >> (16 - num_passes);
 2949              		.loc 3 646 51 discriminator 2 view .LVU878
 2950 0252 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 646:./shy_fft.h   ****                                   >> (16 - num_passes);
 2951              		.loc 3 646 69 discriminator 2 view .LVU879
 2952 0254 030A     		lsrs	r3, r0, #8
 653:./shy_fft.h   ****             T b_1 = s[1] * T(2);
 2953              		.loc 3 653 15 discriminator 2 view .LVU880
 2954 0256 77EEC77A 		vsub.f32	s15, s15, s14
 2955              	.LVL260:
 654:./shy_fft.h   ****             T b_3 = s[3] * T(2);
 2956              		.loc 3 654 22 discriminator 2 view .LVU881
 2957 025a 51ED075A 		vldr.32	s11, [r1, #-28]
 2958              	.LVL261:
 657:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 2959              		.loc 3 657 25 discriminator 2 view .LVU882
 2960 025e B0EE007A 		vmov.f32	s14, #2.0e+0
 646:./shy_fft.h   ****                                   >> (16 - num_passes);
 2961              		.loc 3 646 57 discriminator 2 view .LVU883
 2962 0262 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 657:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 2963              		.loc 3 657 25 discriminator 2 view .LVU884
 2964 0264 B0EE665A 		vmov.f32	s10, s13
 655:./shy_fft.h   **** 
 2965              		.loc 3 655 22 discriminator 2 view .LVU885
 2966 0268 11ED056A 		vldr.32	s12, [r1, #-20]
 2967              	.LVL262:
ARM GAS  /tmp/cchieLBQ.s 			page 99


 646:./shy_fft.h   ****                                   >> (16 - num_passes);
 2968              		.loc 3 646 57 discriminator 2 view .LVU886
 2969 026c 43EA0223 		orr	r3, r3, r2, lsl #8
 2970              	.LBE315:
 642:./shy_fft.h   ****         {
 2971              		.loc 3 642 9 discriminator 2 view .LVU887
 2972 0270 0430     		adds	r0, r0, #4
 2973              	.LVL263:
 2974              	.LBB316:
 658:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 2975              		.loc 3 658 25 discriminator 2 view .LVU888
 2976 0272 E5EEC76A 		vfms.f32	s13, s11, s14
 2977              	.LVL264:
 657:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 2978              		.loc 3 657 25 discriminator 2 view .LVU889
 2979 0276 A5EE875A 		vfma.f32	s10, s11, s14
 2980              	.LVL265:
 647:./shy_fft.h   ****             size_t r1 = r0 + 2 * (size >> 2);
 2981              		.loc 3 647 35 discriminator 2 view .LVU890
 2982 027a 1B11     		asrs	r3, r3, #4
 2983              	.LBE316:
 642:./shy_fft.h   ****         {
 2984              		.loc 3 642 29 discriminator 2 view .LVU891
 2985 027c B0F5805F 		cmp	r0, #4096
 2986              	.LBB317:
 657:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 2987              		.loc 3 657 14 discriminator 2 view .LVU892
 2988 0280 4FEA8302 		lsl	r2, r3, #2
 2989 0284 05EB8303 		add	r3, r5, r3, lsl #2
 657:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 2990              		.loc 3 657 13 discriminator 2 view .LVU893
 2991 0288 83ED005A 		vstr.32	s10, [r3]
 2992              	.LVL266:
 658:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 2993              		.loc 3 658 14 discriminator 2 view .LVU894
 2994 028c 02F50053 		add	r3, r2, #8192
 2995 0290 2B44     		add	r3, r3, r5
 658:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 2996              		.loc 3 658 13 discriminator 2 view .LVU895
 2997 0292 C3ED006A 		vstr.32	s13, [r3]
 659:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 2998              		.loc 3 659 25 discriminator 2 view .LVU896
 2999 0296 F0EE676A 		vmov.f32	s13, s15
 660:./shy_fft.h   ****             s += 4;
 3000              		.loc 3 660 25 discriminator 2 view .LVU897
 3001 029a E6EE477A 		vfms.f32	s15, s12, s14
 3002              	.LVL267:
 659:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 3003              		.loc 3 659 14 discriminator 2 view .LVU898
 3004 029e 02F58053 		add	r3, r2, #4096
 660:./shy_fft.h   ****             s += 4;
 3005              		.loc 3 660 14 discriminator 2 view .LVU899
 3006 02a2 02F54052 		add	r2, r2, #12288
 659:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 3007              		.loc 3 659 25 discriminator 2 view .LVU900
 3008 02a6 E6EE076A 		vfma.f32	s13, s12, s14
 3009              	.LVL268:
ARM GAS  /tmp/cchieLBQ.s 			page 100


 659:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 3010              		.loc 3 659 14 discriminator 2 view .LVU901
 3011 02aa 2B44     		add	r3, r3, r5
 660:./shy_fft.h   ****             s += 4;
 3012              		.loc 3 660 14 discriminator 2 view .LVU902
 3013 02ac 2A44     		add	r2, r2, r5
 659:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 3014              		.loc 3 659 13 discriminator 2 view .LVU903
 3015 02ae C3ED006A 		vstr.32	s13, [r3]
 660:./shy_fft.h   ****             s += 4;
 3016              		.loc 3 660 13 discriminator 2 view .LVU904
 3017 02b2 C2ED007A 		vstr.32	s15, [r2]
 3018              	.LVL269:
 660:./shy_fft.h   ****             s += 4;
 3019              		.loc 3 660 13 discriminator 2 view .LVU905
 3020              	.LBE317:
 642:./shy_fft.h   ****         {
 3021              		.loc 3 642 9 is_stmt 1 discriminator 2 view .LVU906
 642:./shy_fft.h   ****         {
 3022              		.loc 3 642 29 discriminator 2 view .LVU907
 3023 02b6 C2D1     		bne	.L77
 3024              	.LBE314:
 663:./shy_fft.h   **** 
 3025              		.loc 3 663 5 is_stmt 0 view .LVU908
 3026 02b8 13B0     		add	sp, sp, #76
 3027              		.cfi_def_cfa_offset 36
 3028              		@ sp needed
 3029 02ba BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3030              	.LVL270:
 3031              	.L85:
 663:./shy_fft.h   **** 
 3032              		.loc 3 663 5 view .LVU909
 3033 02be 00BF     		.align	2
 3034              	.L84:
 3035 02c0 F304353F 		.word	1060439283
 3036              		.cfi_endproc
 3037              	.LFE4720:
 3039              		.section	.text._ZN4STFT6BufferEv,"ax",%progbits
 3040              		.align	1
 3041              		.global	_ZN4STFT6BufferEv
 3042              		.syntax unified
 3043              		.thumb
 3044              		.thumb_func
 3045              		.fpu fpv5-d16
 3047              	_ZN4STFT6BufferEv:
 3048              	.LVL271:
 3049              	.LFB4291:
 122:dsp/pvoc/stft.cpp **** 
 123:dsp/pvoc/stft.cpp **** void STFT::Buffer()
 124:dsp/pvoc/stft.cpp **** {
 3050              		.loc 1 124 1 is_stmt 1 view -0
 3051              		.cfi_startproc
 3052              		@ args = 0, pretend = 0, frame = 8
 3053              		@ frame_needed = 0, uses_anonymous_args = 0
 125:dsp/pvoc/stft.cpp ****     if(ready_ == done_)
 3054              		.loc 1 125 5 view .LVU911
 3055 0000 D0E91023 		ldrd	r2, r3, [r0, #64]
ARM GAS  /tmp/cchieLBQ.s 			page 101


 124:dsp/pvoc/stft.cpp ****     if(ready_ == done_)
 3056              		.loc 1 124 1 is_stmt 0 view .LVU912
 3057 0004 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3058              		.cfi_def_cfa_offset 28
 3059              		.cfi_offset 4, -28
 3060              		.cfi_offset 5, -24
 3061              		.cfi_offset 6, -20
 3062              		.cfi_offset 7, -16
 3063              		.cfi_offset 8, -12
 3064              		.cfi_offset 9, -8
 3065              		.cfi_offset 14, -4
 3066              		.loc 1 125 5 view .LVU913
 3067 0008 9A42     		cmp	r2, r3
 124:dsp/pvoc/stft.cpp ****     if(ready_ == done_)
 3068              		.loc 1 124 1 view .LVU914
 3069 000a 85B0     		sub	sp, sp, #20
 3070              		.cfi_def_cfa_offset 48
 124:dsp/pvoc/stft.cpp ****     if(ready_ == done_)
 3071              		.loc 1 124 1 view .LVU915
 3072 000c 0446     		mov	r4, r0
 3073              		.loc 1 125 5 view .LVU916
 3074 000e 00F0A580 		beq	.L86
 126:dsp/pvoc/stft.cpp ****     {
 127:dsp/pvoc/stft.cpp ****         return;
 128:dsp/pvoc/stft.cpp ****     }
 129:dsp/pvoc/stft.cpp **** 
 130:dsp/pvoc/stft.cpp ****     // Copy block to FFT buffer and apply window.
 131:dsp/pvoc/stft.cpp ****     size_t       source_ptr = process_ptr_;
 3075              		.loc 1 131 5 is_stmt 1 view .LVU917
 3076              		.loc 1 131 18 is_stmt 0 view .LVU918
 3077 0012 836B     		ldr	r3, [r0, #56]
 3078              	.LVL272:
 132:dsp/pvoc/stft.cpp ****     const float* w          = window_;
 3079              		.loc 1 132 5 is_stmt 1 view .LVU919
 3080              	.LBB331:
 133:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_; ++i)
 3081              		.loc 1 133 16 is_stmt 0 view .LVU920
 3082 0014 0022     		movs	r2, #0
 3083              	.LBE331:
 132:dsp/pvoc/stft.cpp ****     const float* w          = window_;
 3084              		.loc 1 132 18 view .LVU921
 3085 0016 406A     		ldr	r0, [r0, #36]
 3086              	.LVL273:
 3087              		.loc 1 133 5 is_stmt 1 view .LVU922
 3088              	.LBB332:
 3089              		.loc 1 133 27 is_stmt 0 view .LVU923
 3090 0018 6568     		ldr	r5, [r4, #4]
 3091 001a 6169     		ldr	r1, [r4, #20]
 3092              	.LVL274:
 3093              	.L91:
 3094              		.loc 1 133 25 is_stmt 1 discriminator 1 view .LVU924
 3095 001c 9542     		cmp	r5, r2
 3096 001e 18D0     		beq	.L89
 134:dsp/pvoc/stft.cpp ****     {
 135:dsp/pvoc/stft.cpp ****         fft_in_[i] = w[0] * analysis_[source_ptr];
 3097              		.loc 1 135 9 view .LVU925
 3098              		.loc 1 135 49 is_stmt 0 view .LVU926
ARM GAS  /tmp/cchieLBQ.s 			page 102


 3099 0020 E76A     		ldr	r7, [r4, #44]
 3100              		.loc 1 135 20 view .LVU927
 3101 0022 01EB8206 		add	r6, r1, r2, lsl #2
 3102              		.loc 1 135 27 view .LVU928
 3103 0026 90ED007A 		vldr.32	s14, [r0]
 133:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_; ++i)
 3104              		.loc 1 133 5 view .LVU929
 3105 002a 0132     		adds	r2, r2, #1
 3106              	.LVL275:
 3107              		.loc 1 135 27 view .LVU930
 3108 002c 37F91370 		ldrsh	r7, [r7, r3, lsl #1]
 136:dsp/pvoc/stft.cpp ****         ++source_ptr;
 3109              		.loc 1 136 9 view .LVU931
 3110 0030 0133     		adds	r3, r3, #1
 3111              	.LVL276:
 135:dsp/pvoc/stft.cpp ****         ++source_ptr;
 3112              		.loc 1 135 27 view .LVU932
 3113 0032 07EE907A 		vmov	s15, r7	@ int
 3114 0036 F8EEE77A 		vcvt.f32.s32	s15, s15
 3115 003a 67EE877A 		vmul.f32	s15, s15, s14
 135:dsp/pvoc/stft.cpp ****         ++source_ptr;
 3116              		.loc 1 135 20 view .LVU933
 3117 003e C6ED007A 		vstr.32	s15, [r6]
 3118              		.loc 1 136 9 is_stmt 1 view .LVU934
 3119              	.LVL277:
 137:dsp/pvoc/stft.cpp ****         if(source_ptr >= buffer_size_)
 3120              		.loc 1 137 9 view .LVU935
 3121              		.loc 1 137 26 is_stmt 0 view .LVU936
 3122 0042 2669     		ldr	r6, [r4, #16]
 3123              		.loc 1 137 9 view .LVU937
 3124 0044 9E42     		cmp	r6, r3
 138:dsp/pvoc/stft.cpp ****         {
 139:dsp/pvoc/stft.cpp ****             source_ptr -= buffer_size_;
 3125              		.loc 1 139 13 is_stmt 1 view .LVU938
 3126              		.loc 1 139 24 is_stmt 0 view .LVU939
 3127 0046 98BF     		it	ls
 3128 0048 9B1B     		subls	r3, r3, r6
 3129              	.LVL278:
 140:dsp/pvoc/stft.cpp ****         }
 141:dsp/pvoc/stft.cpp ****         w += window_stride_;
 3130              		.loc 1 141 9 is_stmt 1 view .LVU940
 3131              		.loc 1 141 11 is_stmt 0 view .LVU941
 3132 004a A66A     		ldr	r6, [r4, #40]
 3133 004c 00EB8600 		add	r0, r0, r6, lsl #2
 3134              	.LVL279:
 133:dsp/pvoc/stft.cpp ****     {
 3135              		.loc 1 133 5 is_stmt 1 view .LVU942
 133:dsp/pvoc/stft.cpp ****     {
 3136              		.loc 1 133 5 is_stmt 0 view .LVU943
 3137 0050 E4E7     		b	.L91
 3138              	.L89:
 133:dsp/pvoc/stft.cpp ****     {
 3139              		.loc 1 133 5 view .LVU944
 3140              	.LBE332:
 142:dsp/pvoc/stft.cpp ****     }
 143:dsp/pvoc/stft.cpp **** 
 144:dsp/pvoc/stft.cpp ****     // Compute FFT. fft_in is lost.
ARM GAS  /tmp/cchieLBQ.s 			page 103


 145:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 146:dsp/pvoc/stft.cpp ****     arm_rfft_fast_f32(fft_, fft_in_, fft_out_, 0);
 147:dsp/pvoc/stft.cpp ****     copy(&fft_out_[0], &fft_out_[fft_size_], &fft_in_[0]);
 148:dsp/pvoc/stft.cpp ****     // Re-arrange data.
 149:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_ / 2; ++i)
 150:dsp/pvoc/stft.cpp ****     {
 151:dsp/pvoc/stft.cpp ****         fft_out_[i]                 = fft_in_[2 * i];
 152:dsp/pvoc/stft.cpp ****         fft_out_[i + fft_size_ / 2] = fft_in_[2 * i + 1];
 153:dsp/pvoc/stft.cpp ****     }
 154:dsp/pvoc/stft.cpp **** #else
 155:dsp/pvoc/stft.cpp ****     if(fft_size_ != FFT::max_size)
 3141              		.loc 1 155 5 is_stmt 1 view .LVU945
 3142 0052 B5F5805F 		cmp	r5, #4096
 3143 0056 A269     		ldr	r2, [r4, #24]
 3144              	.LVL280:
 3145              		.loc 1 155 5 is_stmt 0 view .LVU946
 3146 0058 2368     		ldr	r3, [r4]
 3147              	.LVL281:
 3148              		.loc 1 155 5 view .LVU947
 3149 005a 61D0     		beq	.L92
 156:dsp/pvoc/stft.cpp ****     {
 157:dsp/pvoc/stft.cpp ****         fft_->Direct(fft_in_, fft_out_, fft_num_passes_);
 3150              		.loc 1 157 9 is_stmt 1 view .LVU948
 3151              	.LVL282:
 3152              	.LBB333:
 3153              	.LBI333:
 833:./shy_fft.h   ****         {
 834:./shy_fft.h   ****             uint8_t byte        = 0;
 835:./shy_fft.h   ****             uint8_t source      = i << 2;
 836:./shy_fft.h   ****             uint8_t destination = static_cast<uint8_t>(size >> 1);
 837:./shy_fft.h   ****             while(source)
 838:./shy_fft.h   ****             {
 839:./shy_fft.h   ****                 if(source & 1)
 840:./shy_fft.h   ****                 {
 841:./shy_fft.h   ****                     byte |= destination;
 842:./shy_fft.h   ****                 }
 843:./shy_fft.h   ****                 destination >>= 1;
 844:./shy_fft.h   ****                 source >>= 1;
 845:./shy_fft.h   ****             }
 846:./shy_fft.h   ****             bit_rev_[i] = byte;
 847:./shy_fft.h   ****         }
 848:./shy_fft.h   ****         phasor_.Init();
 849:./shy_fft.h   ****     }
 850:./shy_fft.h   **** 
 851:./shy_fft.h   ****     void Direct(T* input, T* output)
 852:./shy_fft.h   ****     {
 853:./shy_fft.h   ****         DirectTransform<T, num_passes, Phasor<T, num_passes>> d;
 854:./shy_fft.h   ****         d(input,
 855:./shy_fft.h   ****           output,
 856:./shy_fft.h   ****           num_passes <= 8 ? &bit_rev_[0] : bit_rev_256_lut_,
 857:./shy_fft.h   ****           &phasor_);
 858:./shy_fft.h   ****     }
 859:./shy_fft.h   **** 
 860:./shy_fft.h   ****     void Inverse(T* input, T* output)
 861:./shy_fft.h   ****     {
 862:./shy_fft.h   ****         InverseTransform<T, num_passes, Phasor<T, num_passes>> i;
 863:./shy_fft.h   ****         i(input,
ARM GAS  /tmp/cchieLBQ.s 			page 104


 864:./shy_fft.h   ****           output,
 865:./shy_fft.h   ****           num_passes <= 8 ? &bit_rev_[0] : bit_rev_256_lut_,
 866:./shy_fft.h   ****           &phasor_);
 867:./shy_fft.h   ****     }
 868:./shy_fft.h   **** 
 869:./shy_fft.h   ****     void Direct(T* input, T* output, size_t n)
 3154              		.loc 3 869 10 view .LVU949
 3155              	.LBB334:
 870:./shy_fft.h   ****     {
 871:./shy_fft.h   ****         DirectTransform<T, num_passes, Phasor<T, num_passes>> d;
 872:./shy_fft.h   ****         d(input, output, bit_rev_256_lut_, &phasor_, n);
 3156              		.loc 3 872 10 is_stmt 0 view .LVU950
 3157 005c A068     		ldr	r0, [r4, #8]
 3158              	.LVL283:
 3159              		.loc 3 872 10 view .LVU951
 3160 005e CDE90030 		strd	r3, r0, [sp]
 3161              	.LVL284:
 3162              		.loc 3 872 10 view .LVU952
 3163 0062 404B     		ldr	r3, .L111
 3164              	.LVL285:
 3165              		.loc 3 872 10 view .LVU953
 3166 0064 03A8     		add	r0, sp, #12
 3167              	.LVL286:
 3168              		.loc 3 872 10 view .LVU954
 3169 0066 FFF7FEFF 		bl	_ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j
 3170              	.LVL287:
 3171              	.L93:
 3172              		.loc 3 872 10 view .LVU955
 3173              	.LBE334:
 3174              	.LBE333:
 158:dsp/pvoc/stft.cpp ****     }
 159:dsp/pvoc/stft.cpp ****     else
 160:dsp/pvoc/stft.cpp ****     {
 161:dsp/pvoc/stft.cpp ****         fft_->Direct(fft_in_, fft_out_);
 162:dsp/pvoc/stft.cpp ****     }
 163:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 164:dsp/pvoc/stft.cpp ****     // Process in the frequency domain.
 165:dsp/pvoc/stft.cpp ****     if(modifier_ != NULL && parameters_ != NULL)
 3175              		.loc 1 165 5 is_stmt 1 view .LVU956
 3176              		.loc 1 165 8 is_stmt 0 view .LVU957
 3177 006a E56C     		ldr	r5, [r4, #76]
 3178 006c A069     		ldr	r0, [r4, #24]
 3179 006e 236A     		ldr	r3, [r4, #32]
 3180              		.loc 1 165 5 view .LVU958
 3181 0070 002D     		cmp	r5, #0
 3182 0072 5BD0     		beq	.L94
 3183              		.loc 1 165 29 discriminator 1 view .LVU959
 3184 0074 A16C     		ldr	r1, [r4, #72]
 3185              		.loc 1 165 26 discriminator 1 view .LVU960
 3186 0076 0029     		cmp	r1, #0
 3187 0078 58D0     		beq	.L94
 166:dsp/pvoc/stft.cpp ****     {
 167:dsp/pvoc/stft.cpp ****         modifier_->Process(*parameters_, &fft_out_[0], &ifft_in_[0]);
 3188              		.loc 1 167 9 is_stmt 1 view .LVU961
 3189              		.loc 1 167 27 is_stmt 0 view .LVU962
 3190 007a 0246     		mov	r2, r0
 3191 007c 2846     		mov	r0, r5
ARM GAS  /tmp/cchieLBQ.s 			page 105


 3192 007e FFF7FEFF 		bl	_ZN19FrameTransformation7ProcessERK10ParametersPfS3_
 3193              	.LVL288:
 3194              	.L95:
 168:dsp/pvoc/stft.cpp ****     }
 169:dsp/pvoc/stft.cpp ****     else
 170:dsp/pvoc/stft.cpp ****     {
 171:dsp/pvoc/stft.cpp ****         copy(&fft_out_[0], &fft_out_[fft_size_], &ifft_in_[0]);
 172:dsp/pvoc/stft.cpp ****     }
 173:dsp/pvoc/stft.cpp **** 
 174:dsp/pvoc/stft.cpp ****     // Compute IFFT. ifft_in is lost.
 175:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 176:dsp/pvoc/stft.cpp ****     // Re-arrange data.
 177:dsp/pvoc/stft.cpp ****     copy(&ifft_in_[0], &ifft_in_[fft_size_], &ifft_out_[0]);
 178:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_ / 2; ++i)
 179:dsp/pvoc/stft.cpp ****     {
 180:dsp/pvoc/stft.cpp ****         ifft_in_[2 * i]     = ifft_out_[i];
 181:dsp/pvoc/stft.cpp ****         ifft_in_[2 * i + 1] = ifft_out_[i + fft_size_ / 2];
 182:dsp/pvoc/stft.cpp ****     }
 183:dsp/pvoc/stft.cpp ****     arm_rfft_fast_f32(fft_, ifft_in_, ifft_out_, 1);
 184:dsp/pvoc/stft.cpp **** #else
 185:dsp/pvoc/stft.cpp ****     if(fft_size_ != FFT::max_size)
 3195              		.loc 1 185 5 is_stmt 1 view .LVU963
 3196 0082 D4E90030 		ldrd	r3, r0, [r4]
 3197 0086 D4E90721 		ldrd	r2, r1, [r4, #28]
 3198 008a B0F5805F 		cmp	r0, #4096
 3199 008e 54D0     		beq	.L96
 186:dsp/pvoc/stft.cpp ****     {
 187:dsp/pvoc/stft.cpp ****         fft_->Inverse(ifft_in_, ifft_out_, fft_num_passes_);
 3200              		.loc 1 187 9 view .LVU964
 3201              	.LVL289:
 3202              	.LBB335:
 3203              	.LBI335:
 873:./shy_fft.h   ****     }
 874:./shy_fft.h   **** 
 875:./shy_fft.h   ****     void Inverse(T* input, T* output, size_t n)
 3204              		.loc 3 875 10 view .LVU965
 3205              	.LBB336:
 876:./shy_fft.h   ****     {
 877:./shy_fft.h   ****         InverseTransform<T, num_passes, Phasor<T, num_passes>> i;
 878:./shy_fft.h   ****         i(input, output, bit_rev_256_lut_, &phasor_, n);
 3206              		.loc 3 878 10 is_stmt 0 view .LVU966
 3207 0090 A068     		ldr	r0, [r4, #8]
 3208 0092 CDE90030 		strd	r3, r0, [sp]
 3209              	.LVL290:
 3210              		.loc 3 878 10 view .LVU967
 3211 0096 334B     		ldr	r3, .L111
 3212              	.LVL291:
 3213              		.loc 3 878 10 view .LVU968
 3214 0098 03A8     		add	r0, sp, #12
 3215              	.LVL292:
 3216              		.loc 3 878 10 view .LVU969
 3217 009a FFF7FEFF 		bl	_ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j
 3218              	.LVL293:
 3219              	.L97:
 3220              		.loc 3 878 10 view .LVU970
 3221              	.LBE336:
 3222              	.LBE335:
ARM GAS  /tmp/cchieLBQ.s 			page 106


 188:dsp/pvoc/stft.cpp ****     }
 189:dsp/pvoc/stft.cpp ****     else
 190:dsp/pvoc/stft.cpp ****     {
 191:dsp/pvoc/stft.cpp ****         fft_->Inverse(ifft_in_, ifft_out_);
 192:dsp/pvoc/stft.cpp ****     }
 193:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 194:dsp/pvoc/stft.cpp **** 
 195:dsp/pvoc/stft.cpp ****     size_t destination_ptr = process_ptr_;
 3223              		.loc 1 195 5 is_stmt 1 view .LVU971
 196:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 197:dsp/pvoc/stft.cpp ****     float inverse_window_size = 1.0f / float(fft_size_ / hop_size_ >> 1);
 198:dsp/pvoc/stft.cpp **** #else
 199:dsp/pvoc/stft.cpp ****     float inverse_window_size
 200:dsp/pvoc/stft.cpp ****         = 1.0f / float(fft_size_ * fft_size_ / hop_size_ >> 1);
 3224              		.loc 1 200 24 is_stmt 0 view .LVU972
 3225 009e 6668     		ldr	r6, [r4, #4]
 199:dsp/pvoc/stft.cpp ****         = 1.0f / float(fft_size_ * fft_size_ / hop_size_ >> 1);
 3226              		.loc 1 199 11 view .LVU973
 3227 00a0 F7EE006A 		vmov.f32	s13, #1.0e+0
 3228              		.loc 1 200 48 view .LVU974
 3229 00a4 E268     		ldr	r2, [r4, #12]
 3230              	.LBB337:
 201:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 202:dsp/pvoc/stft.cpp **** 
 203:dsp/pvoc/stft.cpp ****     w = window_;
 204:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_; ++i)
 3231              		.loc 1 204 16 view .LVU975
 3232 00a6 0020     		movs	r0, #0
 3233              	.LBE337:
 200:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 3234              		.loc 1 200 34 view .LVU976
 3235 00a8 06FB06F1 		mul	r1, r6, r6
 195:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 3236              		.loc 1 195 12 view .LVU977
 3237 00ac A76B     		ldr	r7, [r4, #56]
 3238              	.LVL294:
 199:dsp/pvoc/stft.cpp ****         = 1.0f / float(fft_size_ * fft_size_ / hop_size_ >> 1);
 3239              		.loc 1 199 5 is_stmt 1 view .LVU978
 203:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_; ++i)
 3240              		.loc 1 203 7 is_stmt 0 view .LVU979
 3241 00ae D4F824C0 		ldr	ip, [r4, #36]
 200:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 3242              		.loc 1 200 46 view .LVU980
 3243 00b2 B1FBF2F1 		udiv	r1, r1, r2
 200:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 3244              		.loc 1 200 58 view .LVU981
 3245 00b6 4908     		lsrs	r1, r1, #1
 200:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 3246              		.loc 1 200 18 view .LVU982
 3247 00b8 07EE901A 		vmov	s15, r1	@ int
 195:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 3248              		.loc 1 195 12 view .LVU983
 3249 00bc 3946     		mov	r1, r7
 200:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 3250              		.loc 1 200 18 view .LVU984
 3251 00be F8EEE77A 		vcvt.f32.s32	s15, s15
 199:dsp/pvoc/stft.cpp ****         = 1.0f / float(fft_size_ * fft_size_ / hop_size_ >> 1);
ARM GAS  /tmp/cchieLBQ.s 			page 107


 3252              		.loc 1 199 11 view .LVU985
 3253 00c2 86EEA77A 		vdiv.f32	s14, s13, s15
 3254              	.LVL295:
 203:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_; ++i)
 3255              		.loc 1 203 5 is_stmt 1 view .LVU986
 3256              		.loc 1 204 5 view .LVU987
 3257              	.L101:
 3258              	.LBB341:
 3259              		.loc 1 204 25 discriminator 1 view .LVU988
 3260 00c6 8642     		cmp	r6, r0
 3261 00c8 2569     		ldr	r5, [r4, #16]
 3262 00ca 3CD0     		beq	.L98
 3263              	.LBB338:
 205:dsp/pvoc/stft.cpp ****     {
 206:dsp/pvoc/stft.cpp ****         float s = ifft_out_[i] * w[0] * inverse_window_size;
 3264              		.loc 1 206 9 view .LVU989
 3265              	.LVL296:
 207:dsp/pvoc/stft.cpp **** 
 208:dsp/pvoc/stft.cpp ****         int32_t x = static_cast<int32_t>(s);
 3266              		.loc 1 208 9 view .LVU990
 206:dsp/pvoc/stft.cpp **** 
 3267              		.loc 1 206 30 is_stmt 0 view .LVU991
 3268 00cc E369     		ldr	r3, [r4, #28]
 209:dsp/pvoc/stft.cpp ****         if(i < fft_size_ - hop_size_)
 3269              		.loc 1 209 26 view .LVU992
 3270 00ce A6EB0209 		sub	r9, r6, r2
 206:dsp/pvoc/stft.cpp **** 
 3271              		.loc 1 206 32 view .LVU993
 3272 00d2 DCED006A 		vldr.32	s13, [ip]
 3273 00d6 4FEA4108 		lsl	r8, r1, #1
 206:dsp/pvoc/stft.cpp **** 
 3274              		.loc 1 206 30 view .LVU994
 3275 00da 03EB8003 		add	r3, r3, r0, lsl #2
 3276              		.loc 1 209 9 view .LVU995
 3277 00de 8145     		cmp	r9, r0
 3278 00e0 D4F830E0 		ldr	lr, [r4, #48]
 3279              	.LBE338:
 204:dsp/pvoc/stft.cpp ****     {
 3280              		.loc 1 204 5 view .LVU996
 3281 00e4 00F10100 		add	r0, r0, #1
 3282              	.LVL297:
 3283              	.LBB339:
 206:dsp/pvoc/stft.cpp **** 
 3284              		.loc 1 206 32 view .LVU997
 3285 00e8 D3ED007A 		vldr.32	s15, [r3]
 210:dsp/pvoc/stft.cpp ****         {
 211:dsp/pvoc/stft.cpp ****             // Overlap-add.
 212:dsp/pvoc/stft.cpp ****             x += synthesis_[destination_ptr];
 3286              		.loc 1 212 44 view .LVU998
 3287 00ec 88BF     		it	hi
 3288 00ee 3EF91190 		ldrshhi	r9, [lr, r1, lsl #1]
 213:dsp/pvoc/stft.cpp ****         }
 214:dsp/pvoc/stft.cpp ****         synthesis_[destination_ptr] = Clip16(x);
 215:dsp/pvoc/stft.cpp ****         ++destination_ptr;
 3289              		.loc 1 215 9 view .LVU999
 3290 00f2 01F10101 		add	r1, r1, #1
 3291              	.LVL298:
ARM GAS  /tmp/cchieLBQ.s 			page 108


 206:dsp/pvoc/stft.cpp **** 
 3292              		.loc 1 206 32 view .LVU1000
 3293 00f6 67EEA67A 		vmul.f32	s15, s15, s13
 206:dsp/pvoc/stft.cpp **** 
 3294              		.loc 1 206 15 view .LVU1001
 3295 00fa 67EE877A 		vmul.f32	s15, s15, s14
 208:dsp/pvoc/stft.cpp ****         if(i < fft_size_ - hop_size_)
 3296              		.loc 1 208 17 view .LVU1002
 3297 00fe FDEEE77A 		vcvt.s32.f32	s15, s15
 3298 0102 17EE903A 		vmov	r3, s15	@ int
 3299              	.LVL299:
 209:dsp/pvoc/stft.cpp ****         {
 3300              		.loc 1 209 9 is_stmt 1 view .LVU1003
 212:dsp/pvoc/stft.cpp ****         }
 3301              		.loc 1 212 13 view .LVU1004
 212:dsp/pvoc/stft.cpp ****         }
 3302              		.loc 1 212 15 is_stmt 0 view .LVU1005
 3303 0106 88BF     		it	hi
 3304 0108 4B44     		addhi	r3, r3, r9
 3305              	.LVL300:
 214:dsp/pvoc/stft.cpp ****         ++destination_ptr;
 3306              		.loc 1 214 9 is_stmt 1 view .LVU1006
 214:dsp/pvoc/stft.cpp ****         ++destination_ptr;
 3307              		.loc 1 214 9 is_stmt 0 view .LVU1007
 3308              	.LBE339:
 3309              	.LBE341:
 3310              		.loc 4 102 5 is_stmt 1 view .LVU1008
 3311              	.LBB342:
 3312              	.LBB340:
 216:dsp/pvoc/stft.cpp ****         if(destination_ptr >= buffer_size_)
 3313              		.loc 1 216 9 is_stmt 0 view .LVU1009
 3314 010a 8D42     		cmp	r5, r1
 214:dsp/pvoc/stft.cpp ****         ++destination_ptr;
 3315              		.loc 1 214 37 view .LVU1010
 3316 010c 03F30F03 		ssat	r3, #16, r3
 3317              	.LVL301:
 217:dsp/pvoc/stft.cpp ****         {
 218:dsp/pvoc/stft.cpp ****             destination_ptr -= buffer_size_;
 3318              		.loc 1 218 29 view .LVU1011
 3319 0110 98BF     		it	ls
 3320 0112 491B     		subls	r1, r1, r5
 3321              	.LVL302:
 214:dsp/pvoc/stft.cpp ****         ++destination_ptr;
 3322              		.loc 1 214 37 view .LVU1012
 3323 0114 2EF80830 		strh	r3, [lr, r8]	@ movhi
 215:dsp/pvoc/stft.cpp ****         if(destination_ptr >= buffer_size_)
 3324              		.loc 1 215 9 is_stmt 1 view .LVU1013
 216:dsp/pvoc/stft.cpp ****         {
 3325              		.loc 1 216 9 view .LVU1014
 3326              		.loc 1 218 13 view .LVU1015
 3327              	.LVL303:
 219:dsp/pvoc/stft.cpp ****         }
 220:dsp/pvoc/stft.cpp ****         w += window_stride_;
 3328              		.loc 1 220 9 view .LVU1016
 3329              		.loc 1 220 11 is_stmt 0 view .LVU1017
 3330 0118 A36A     		ldr	r3, [r4, #40]
 3331 011a 0CEB830C 		add	ip, ip, r3, lsl #2
ARM GAS  /tmp/cchieLBQ.s 			page 109


 3332              	.LVL304:
 3333              		.loc 1 220 11 view .LVU1018
 3334              	.LBE340:
 204:dsp/pvoc/stft.cpp ****     {
 3335              		.loc 1 204 5 is_stmt 1 view .LVU1019
 204:dsp/pvoc/stft.cpp ****     {
 3336              		.loc 1 204 5 is_stmt 0 view .LVU1020
 3337 011e D2E7     		b	.L101
 3338              	.LVL305:
 3339              	.L92:
 204:dsp/pvoc/stft.cpp ****     {
 3340              		.loc 1 204 5 view .LVU1021
 3341              	.LBE342:
 161:dsp/pvoc/stft.cpp ****     }
 3342              		.loc 1 161 9 is_stmt 1 view .LVU1022
 3343              	.LBB343:
 3344              	.LBI343:
 851:./shy_fft.h   ****     {
 3345              		.loc 3 851 10 view .LVU1023
 3346              	.LBB344:
 854:./shy_fft.h   ****           output,
 3347              		.loc 3 854 10 is_stmt 0 view .LVU1024
 3348 0120 0093     		str	r3, [sp]
 3349              	.LVL306:
 854:./shy_fft.h   ****           output,
 3350              		.loc 3 854 10 view .LVU1025
 3351 0122 03A8     		add	r0, sp, #12
 3352              	.LVL307:
 854:./shy_fft.h   ****           output,
 3353              		.loc 3 854 10 view .LVU1026
 3354 0124 0F4B     		ldr	r3, .L111
 3355 0126 FFF7FEFF 		bl	_ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_
 3356              	.LVL308:
 858:./shy_fft.h   **** 
 3357              		.loc 3 858 5 view .LVU1027
 3358 012a 9EE7     		b	.L93
 3359              	.L94:
 858:./shy_fft.h   **** 
 3360              		.loc 3 858 5 view .LVU1028
 3361              	.LBE344:
 3362              	.LBE343:
 171:dsp/pvoc/stft.cpp ****     }
 3363              		.loc 1 171 9 is_stmt 1 view .LVU1029
 171:dsp/pvoc/stft.cpp ****     }
 3364              		.loc 1 171 47 is_stmt 0 view .LVU1030
 3365 012c 6168     		ldr	r1, [r4, #4]
 171:dsp/pvoc/stft.cpp ****     }
 3366              		.loc 1 171 13 view .LVU1031
 3367 012e 1A46     		mov	r2, r3
 3368 0130 00EB8101 		add	r1, r0, r1, lsl #2
 3369 0134 FFF7FEFF 		bl	_ZSt4copyIPfS0_ET0_T_S2_S1_
 3370              	.LVL309:
 3371 0138 A3E7     		b	.L95
 3372              	.L96:
 191:dsp/pvoc/stft.cpp ****     }
 3373              		.loc 1 191 9 is_stmt 1 view .LVU1032
 3374              	.LVL310:
ARM GAS  /tmp/cchieLBQ.s 			page 110


 3375              	.LBB345:
 3376              	.LBI345:
 860:./shy_fft.h   ****     {
 3377              		.loc 3 860 10 view .LVU1033
 3378              	.LBB346:
 863:./shy_fft.h   ****           output,
 3379              		.loc 3 863 10 is_stmt 0 view .LVU1034
 3380 013a 0093     		str	r3, [sp]
 3381              	.LVL311:
 863:./shy_fft.h   ****           output,
 3382              		.loc 3 863 10 view .LVU1035
 3383 013c 03A8     		add	r0, sp, #12
 3384 013e 094B     		ldr	r3, .L111
 3385 0140 FFF7FEFF 		bl	_ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_
 3386              	.LVL312:
 867:./shy_fft.h   **** 
 3387              		.loc 3 867 5 view .LVU1036
 3388 0144 ABE7     		b	.L97
 3389              	.LVL313:
 3390              	.L98:
 867:./shy_fft.h   **** 
 3391              		.loc 3 867 5 view .LVU1037
 3392              	.LBE346:
 3393              	.LBE345:
 221:dsp/pvoc/stft.cpp ****     }
 222:dsp/pvoc/stft.cpp **** 
 223:dsp/pvoc/stft.cpp ****     ++done_;
 3394              		.loc 1 223 5 is_stmt 1 view .LVU1038
 224:dsp/pvoc/stft.cpp ****     process_ptr_ += hop_size_;
 3395              		.loc 1 224 18 is_stmt 0 view .LVU1039
 3396 0146 D319     		adds	r3, r2, r7
 223:dsp/pvoc/stft.cpp ****     process_ptr_ += hop_size_;
 3397              		.loc 1 223 5 view .LVU1040
 3398 0148 616C     		ldr	r1, [r4, #68]
 3399              	.LVL314:
 225:dsp/pvoc/stft.cpp ****     if(process_ptr_ >= buffer_size_)
 3400              		.loc 1 225 5 view .LVU1041
 3401 014a AB42     		cmp	r3, r5
 224:dsp/pvoc/stft.cpp ****     process_ptr_ += hop_size_;
 3402              		.loc 1 224 18 view .LVU1042
 3403 014c A363     		str	r3, [r4, #56]
 223:dsp/pvoc/stft.cpp ****     process_ptr_ += hop_size_;
 3404              		.loc 1 223 5 view .LVU1043
 3405 014e 01F10101 		add	r1, r1, #1
 226:dsp/pvoc/stft.cpp ****     {
 227:dsp/pvoc/stft.cpp ****         process_ptr_ -= buffer_size_;
 3406              		.loc 1 227 22 view .LVU1044
 3407 0152 28BF     		it	cs
 3408 0154 5B1B     		subcs	r3, r3, r5
 223:dsp/pvoc/stft.cpp ****     process_ptr_ += hop_size_;
 3409              		.loc 1 223 5 view .LVU1045
 3410 0156 6164     		str	r1, [r4, #68]
 224:dsp/pvoc/stft.cpp ****     if(process_ptr_ >= buffer_size_)
 3411              		.loc 1 224 5 is_stmt 1 view .LVU1046
 225:dsp/pvoc/stft.cpp ****     {
 3412              		.loc 1 225 5 view .LVU1047
 3413              		.loc 1 227 9 view .LVU1048
ARM GAS  /tmp/cchieLBQ.s 			page 111


 3414              		.loc 1 227 22 is_stmt 0 view .LVU1049
 3415 0158 28BF     		it	cs
 3416 015a A363     		strcs	r3, [r4, #56]
 3417              	.LVL315:
 3418              	.L86:
 228:dsp/pvoc/stft.cpp ****     }
 229:dsp/pvoc/stft.cpp **** }
 3419              		.loc 1 229 1 view .LVU1050
 3420 015c 05B0     		add	sp, sp, #20
 3421              		.cfi_def_cfa_offset 28
 3422              		@ sp needed
 3423 015e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 3424              	.LVL316:
 3425              	.L112:
 3426              		.loc 1 229 1 view .LVU1051
 3427 0162 00BF     		.align	2
 3428              	.L111:
 3429 0164 00000000 		.word	_ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E
 3430              		.cfi_endproc
 3431              	.LFE4291:
 3433              		.weak	_ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E
 3434              		.section	.rodata._ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E,"aG",%progbits,_ZN6ShyFFT
 3437              	_ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E:
 3438 0000 008040C0 		.ascii	"\000\200@\300 \240`\340\020\220P\3200\260p\360\010\210"
 3438      20A060E0 
 3438      109050D0 
 3438      30B070F0 
 3438      0888
 3439 0012 48C828A8 		.ascii	"H\310(\250h\350\030\230X\3308\270x\370\004\204D\304"
 3439      68E81898 
 3439      58D838B8 
 3439      78F80484 
 3439      44C4
 3440 0024 24A464E4 		.ascii	"$\244d\344\024\224T\3244\264t\364\014\214L\314,\254"
 3440      149454D4 
 3440      34B474F4 
 3440      0C8C4CCC 
 3440      2CAC
 3441 0036 6CEC1C9C 		.ascii	"l\354\034\234\\\334<\274|\374\002\202B\302\"\242b\342"
 3441      5CDC3CBC 
 3441      7CFC0282 
 3441      42C222A2 
 3441      62E2
 3442 0048 129252D2 		.ascii	"\022\222R\3222\262r\362\012\212J\312*\252j\352\032\232"
 3442      32B272F2 
 3442      0A8A4ACA 
 3442      2AAA6AEA 
 3442      1A9A
 3443 005a 5ADA3ABA 		.ascii	"Z\332:\272z\372\006\206F\306&\246f\346\026\226V\326"
 3443      7AFA0686 
 3443      46C626A6 
 3443      66E61696 
 3443      56D6
 3444 006c 36B676F6 		.ascii	"6\266v\366\016\216N\316.\256n\356\036\236^\336>\276"
 3444      0E8E4ECE 
 3444      2EAE6EEE 
 3444      1E9E5EDE 
ARM GAS  /tmp/cchieLBQ.s 			page 112


 3444      3EBE
 3445 007e 7EFE0181 		.ascii	"~\376\001\201A\301!\241a\341\021\221Q\3211\261q\361"
 3445      41C121A1 
 3445      61E11191 
 3445      51D131B1 
 3445      71F1
 3446 0090 098949C9 		.ascii	"\011\211I\311)\251i\351\031\231Y\3319\271y\371\005\205"
 3446      29A969E9 
 3446      199959D9 
 3446      39B979F9 
 3446      0585
 3447 00a2 45C525A5 		.ascii	"E\305%\245e\345\025\225U\3255\265u\365\015\215M\315"
 3447      65E51595 
 3447      55D535B5 
 3447      75F50D8D 
 3447      4DCD
 3448 00b4 2DAD6DED 		.ascii	"-\255m\355\035\235]\335=\275}\375\003\203C\303#\243"
 3448      1D9D5DDD 
 3448      3DBD7DFD 
 3448      038343C3 
 3448      23A3
 3449 00c6 63E31393 		.ascii	"c\343\023\223S\3233\263s\363\013\213K\313+\253k\353"
 3449      53D333B3 
 3449      73F30B8B 
 3449      4BCB2BAB 
 3449      6BEB
 3450 00d8 1B9B5BDB 		.ascii	"\033\233[\333;\273{\373\007\207G\307'\247g\347\027\227"
 3450      3BBB7BFB 
 3450      078747C7 
 3450      27A767E7 
 3450      1797
 3451 00ea 57D737B7 		.ascii	"W\3277\267w\367\017\217O\317/\257o\357\037\237_\337"
 3451      77F70F8F 
 3451      4FCF2FAF 
 3451      6FEF1F9F 
 3451      5FDF
 3452 00fc 3FBF7FFF 		.ascii	"?\277\177\377"
 3453              		.text
 3454              	.Letext0:
 3455              		.file 5 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 3456              		.file 6 "../../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 3457              		.file 7 "../../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 3458              		.file 8 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 3459              		.file 9 "/usr/include/newlib/c++/9.2.1/bits/cpp_type_traits.h"
 3460              		.file 10 "/usr/include/newlib/c++/9.2.1/cmath"
 3461              		.file 11 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 3462              		.file 12 "/usr/include/newlib/c++/9.2.1/cstdlib"
 3463              		.file 13 "/usr/include/newlib/c++/9.2.1/cstdint"
 3464              		.file 14 "/usr/include/newlib/c++/9.2.1/type_traits"
 3465              		.file 15 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/c++config.h"
 3466              		.file 16 "/usr/include/newlib/c++/9.2.1/bits/stl_pair.h"
 3467              		.file 17 "/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_types.h"
 3468              		.file 18 "/usr/include/newlib/c++/9.2.1/debug/debug.h"
 3469              		.file 19 "/usr/include/newlib/c++/9.2.1/bits/algorithmfwd.h"
 3470              		.file 20 "/usr/include/newlib/c++/9.2.1/bits/exception_ptr.h"
 3471              		.file 21 "/usr/include/newlib/c++/9.2.1/new"
 3472              		.file 22 "/usr/include/newlib/c++/9.2.1/cstdarg"
ARM GAS  /tmp/cchieLBQ.s 			page 113


 3473              		.file 23 "/usr/include/newlib/c++/9.2.1/cstdio"
 3474              		.file 24 "/usr/include/newlib/c++/9.2.1/cwchar"
 3475              		.file 25 "/usr/include/newlib/c++/9.2.1/clocale"
 3476              		.file 26 "/usr/include/newlib/c++/9.2.1/bits/basic_string.h"
 3477              		.file 27 "/usr/include/newlib/c++/9.2.1/bits/uniform_int_dist.h"
 3478              		.file 28 "/usr/include/newlib/c++/9.2.1/bits/random.h"
 3479              		.file 29 "/usr/include/newlib/c++/9.2.1/cstring"
 3480              		.file 30 "/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h"
 3481              		.file 31 "/usr/include/newlib/c++/9.2.1/ext/numeric_traits.h"
 3482              		.file 32 "/usr/include/newlib/c++/9.2.1/ext/new_allocator.h"
 3483              		.file 33 "/usr/include/newlib/sys/_types.h"
 3484              		.file 34 "<built-in>"
 3485              		.file 35 "/usr/include/newlib/sys/reent.h"
 3486              		.file 36 "/usr/include/newlib/sys/lock.h"
 3487              		.file 37 "/usr/include/newlib/math.h"
 3488              		.file 38 "/usr/include/newlib/stdlib.h"
 3489              		.file 39 "/usr/include/newlib/c++/9.2.1/math.h"
 3490              		.file 40 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 3491              		.file 41 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 3492              		.file 42 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 3493              		.file 43 "../../libdaisy/src/per/tim.h"
 3494              		.file 44 "../../libdaisy/src/util/wav_format.h"
 3495              		.file 45 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdarg.h"
 3496              		.file 46 "/usr/include/newlib/stdio.h"
 3497              		.file 47 "/usr/include/newlib/sys/unistd.h"
 3498              		.file 48 "../../libdaisy/src/util/oled_fonts.h"
 3499              		.file 49 "../../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 3500              		.file 50 "../../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 3501              		.file 51 "../../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 3502              		.file 52 "../../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 3503              		.file 53 "../../libdaisy/src/util/sd_diskio.h"
 3504              		.file 54 "../../libdaisy/src/sys/fatfs.h"
 3505              		.file 55 "../../DaisySP/Source/Control/adenv.h"
 3506              		.file 56 "../../DaisySP/Source/Utility/dsp.h"
 3507              		.file 57 "/usr/include/newlib/wchar.h"
 3508              		.file 58 "/usr/include/newlib/locale.h"
 3509              		.file 59 "/usr/include/newlib/ctype.h"
 3510              		.file 60 "/usr/include/newlib/sys/errno.h"
 3511              		.file 61 "/usr/include/newlib/string.h"
 3512              		.file 62 "./resources.h"
 3513              		.file 63 "../../libdaisy/src/dev/sr_595.h"
 3514              		.file 64 "dsp/pvoc/frame_transformation.h"
 3515              		.file 65 "dsp/pvoc/stft.h"
ARM GAS  /tmp/cchieLBQ.s 			page 114


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stft.cpp
     /tmp/cchieLBQ.s:17     .text._ZN4STFT5ResetEv:0000000000000000 $t
     /tmp/cchieLBQ.s:25     .text._ZN4STFT5ResetEv:0000000000000000 _ZN4STFT5ResetEv
     /tmp/cchieLBQ.s:125    .text._ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation:0000000000000000 $t
     /tmp/cchieLBQ.s:132    .text._ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation:0000000000000000 _ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation
     /tmp/cchieLBQ.s:400    .text._ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation:00000000000000bc $d
     /tmp/cchieLBQ.s:405    .text._ZN4STFT7ProcessERK10ParametersPKfPfjj:0000000000000000 $t
     /tmp/cchieLBQ.s:412    .text._ZN4STFT7ProcessERK10ParametersPKfPfjj:0000000000000000 _ZN4STFT7ProcessERK10ParametersPKfPfjj
     /tmp/cchieLBQ.s:605    .text._ZSt4copyIPfS0_ET0_T_S2_S1_:0000000000000000 $t
     /tmp/cchieLBQ.s:612    .text._ZSt4copyIPfS0_ET0_T_S2_S1_:0000000000000000 _ZSt4copyIPfS0_ET0_T_S2_S1_
     /tmp/cchieLBQ.s:692    .text._ZN14RotationPhasorIfLj12EE5StartEj:0000000000000000 $t
     /tmp/cchieLBQ.s:699    .text._ZN14RotationPhasorIfLj12EE5StartEj:0000000000000000 _ZN14RotationPhasorIfLj12EE5StartEj
     /tmp/cchieLBQ.s:729    .text._ZN14RotationPhasorIfLj12EE6RotateEv:0000000000000000 $t
     /tmp/cchieLBQ.s:736    .text._ZN14RotationPhasorIfLj12EE6RotateEv:0000000000000000 _ZN14RotationPhasorIfLj12EE6RotateEv
     /tmp/cchieLBQ.s:771    .text._ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j:0000000000000000 $t
     /tmp/cchieLBQ.s:778    .text._ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j:0000000000000000 _ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j
     /tmp/cchieLBQ.s:1356   .text._ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j:00000000000002c0 $d
     /tmp/cchieLBQ.s:1361   .text._ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_:0000000000000000 $t
     /tmp/cchieLBQ.s:1368   .text._ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_:0000000000000000 _ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_
     /tmp/cchieLBQ.s:1870   .text._ZN15DirectTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_:00000000000002a0 $d
     /tmp/cchieLBQ.s:1876   .text._ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j:0000000000000000 $t
     /tmp/cchieLBQ.s:1883   .text._ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j:0000000000000000 _ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j
     /tmp/cchieLBQ.s:2491   .text._ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_j:00000000000002e8 $d
     /tmp/cchieLBQ.s:2496   .text._ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_:0000000000000000 $t
     /tmp/cchieLBQ.s:2503   .text._ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_:0000000000000000 _ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_
     /tmp/cchieLBQ.s:3035   .text._ZN16InverseTransformIfLj12E14RotationPhasorIfLj12EEEclEPfS3_PKhPS1_:00000000000002c0 $d
     /tmp/cchieLBQ.s:3040   .text._ZN4STFT6BufferEv:0000000000000000 $t
     /tmp/cchieLBQ.s:3047   .text._ZN4STFT6BufferEv:0000000000000000 _ZN4STFT6BufferEv
     /tmp/cchieLBQ.s:3429   .text._ZN4STFT6BufferEv:0000000000000164 $d
     /tmp/cchieLBQ.s:3437   .rodata._ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E:0000000000000000 _ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E

UNDEFINED SYMBOLS
cosf
sinf
memmove
_ZN19FrameTransformation7ProcessERK10ParametersPfS3_
