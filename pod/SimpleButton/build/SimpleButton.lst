ARM GAS  /tmp/ccvcTplo.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"SimpleButton.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy8DaisyPodD2Ev,"axG",%progbits,_ZN5daisy8DaisyPodD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy8DaisyPodD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy8DaisyPodD2Ev:
  27              	.LVL0:
  28              	.LFB2046:
  29              		.file 1 "../../libdaisy/src/daisy_pod.h"
   1:../../libdaisy/src/daisy_pod.h **** #pragma once
   2:../../libdaisy/src/daisy_pod.h **** #ifndef DSY_POD_BSP_H
   3:../../libdaisy/src/daisy_pod.h **** #define DSY_POD_BSP_H
   4:../../libdaisy/src/daisy_pod.h **** 
   5:../../libdaisy/src/daisy_pod.h **** #include "daisy_seed.h"
   6:../../libdaisy/src/daisy_pod.h **** 
   7:../../libdaisy/src/daisy_pod.h **** namespace daisy
   8:../../libdaisy/src/daisy_pod.h **** {
   9:../../libdaisy/src/daisy_pod.h **** /**
  10:../../libdaisy/src/daisy_pod.h ****     @brief Class that handles initializing all of the hardware specific to the Daisy Patch Board. \
  11:../../libdaisy/src/daisy_pod.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
  12:../../libdaisy/src/daisy_pod.h ****     @author Stephen Hensley
  13:../../libdaisy/src/daisy_pod.h ****     @date November 2019
  14:../../libdaisy/src/daisy_pod.h ****     @ingroup boards
  15:../../libdaisy/src/daisy_pod.h **** */
  16:../../libdaisy/src/daisy_pod.h **** class DaisyPod
  17:../../libdaisy/src/daisy_pod.h **** {
  18:../../libdaisy/src/daisy_pod.h ****   public:
  19:../../libdaisy/src/daisy_pod.h ****     /** Switches */
  20:../../libdaisy/src/daisy_pod.h ****     enum Sw
  21:../../libdaisy/src/daisy_pod.h ****     {
  22:../../libdaisy/src/daisy_pod.h ****         BUTTON_1,    /** & */
  23:../../libdaisy/src/daisy_pod.h ****         BUTTON_2,    /** & */
  24:../../libdaisy/src/daisy_pod.h ****         BUTTON_LAST, /** &  */
  25:../../libdaisy/src/daisy_pod.h ****     };
  26:../../libdaisy/src/daisy_pod.h **** 
  27:../../libdaisy/src/daisy_pod.h ****     /** Knobs */
  28:../../libdaisy/src/daisy_pod.h ****     enum Knob
  29:../../libdaisy/src/daisy_pod.h ****     {
ARM GAS  /tmp/ccvcTplo.s 			page 2


  30:../../libdaisy/src/daisy_pod.h ****         KNOB_1,    /** &  */
  31:../../libdaisy/src/daisy_pod.h ****         KNOB_2,    /** & */
  32:../../libdaisy/src/daisy_pod.h ****         KNOB_LAST, /** & */
  33:../../libdaisy/src/daisy_pod.h ****     };
  34:../../libdaisy/src/daisy_pod.h **** 
  35:../../libdaisy/src/daisy_pod.h ****     DaisyPod() {}
  36:../../libdaisy/src/daisy_pod.h ****     ~DaisyPod() {}
  30              		.loc 1 36 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB299:
  36              	.LBI299:
  37              		.file 2 "../../libdaisy/src/hid/midi.h"
   1:../../libdaisy/src/hid/midi.h **** #pragma once
   2:../../libdaisy/src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../../libdaisy/src/hid/midi.h **** #define DSY_MIDI_H
   4:../../libdaisy/src/hid/midi.h **** 
   5:../../libdaisy/src/hid/midi.h **** // TODO: make this adjustable
   6:../../libdaisy/src/hid/midi.h **** #define SYSEX_BUFFER_LEN 128
   7:../../libdaisy/src/hid/midi.h **** 
   8:../../libdaisy/src/hid/midi.h **** #include <stdint.h>
   9:../../libdaisy/src/hid/midi.h **** #include <stdlib.h>
  10:../../libdaisy/src/hid/midi.h **** #include "per/uart.h"
  11:../../libdaisy/src/hid/midi.h **** #include "util/ringbuffer.h"
  12:../../libdaisy/src/hid/midi.h **** #include "hid/MidiEvent.h"
  13:../../libdaisy/src/hid/midi.h **** #include "sys/system.h"
  14:../../libdaisy/src/hid/midi.h **** 
  15:../../libdaisy/src/hid/midi.h **** namespace daisy
  16:../../libdaisy/src/hid/midi.h **** {
  17:../../libdaisy/src/hid/midi.h **** /** @addtogroup external 
  18:../../libdaisy/src/hid/midi.h ****     @{ 
  19:../../libdaisy/src/hid/midi.h **** */
  20:../../libdaisy/src/hid/midi.h **** 
  21:../../libdaisy/src/hid/midi.h **** class MidiUartTransport
  22:../../libdaisy/src/hid/midi.h **** {
  23:../../libdaisy/src/hid/midi.h ****   public:
  24:../../libdaisy/src/hid/midi.h ****     MidiUartTransport() {}
  25:../../libdaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
  26:../../libdaisy/src/hid/midi.h **** 
  27:../../libdaisy/src/hid/midi.h ****     struct Config
  28:../../libdaisy/src/hid/midi.h ****     {
  29:../../libdaisy/src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  30:../../libdaisy/src/hid/midi.h ****         dsy_gpio_pin                    rx;
  31:../../libdaisy/src/hid/midi.h ****         dsy_gpio_pin                    tx;
  32:../../libdaisy/src/hid/midi.h **** 
  33:../../libdaisy/src/hid/midi.h ****         Config()
  34:../../libdaisy/src/hid/midi.h ****         {
  35:../../libdaisy/src/hid/midi.h ****             periph = UartHandler::Config::Peripheral::USART_1;
  36:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
  37:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
  38:../../libdaisy/src/hid/midi.h ****         }
  39:../../libdaisy/src/hid/midi.h ****     };
  40:../../libdaisy/src/hid/midi.h **** 
  41:../../libdaisy/src/hid/midi.h ****     inline void Init(Config config)
  42:../../libdaisy/src/hid/midi.h ****     {
ARM GAS  /tmp/ccvcTplo.s 			page 3


  43:../../libdaisy/src/hid/midi.h ****         UartHandler::Config uart_config;
  44:../../libdaisy/src/hid/midi.h **** 
  45:../../libdaisy/src/hid/midi.h ****         //defaults
  46:../../libdaisy/src/hid/midi.h ****         uart_config.baudrate   = 31250;
  47:../../libdaisy/src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  48:../../libdaisy/src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  49:../../libdaisy/src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  50:../../libdaisy/src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  51:../../libdaisy/src/hid/midi.h **** 
  52:../../libdaisy/src/hid/midi.h ****         //user settings
  53:../../libdaisy/src/hid/midi.h ****         uart_config.periph        = config.periph;
  54:../../libdaisy/src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  55:../../libdaisy/src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  56:../../libdaisy/src/hid/midi.h **** 
  57:../../libdaisy/src/hid/midi.h ****         uart_.Init(uart_config);
  58:../../libdaisy/src/hid/midi.h ****     }
  59:../../libdaisy/src/hid/midi.h **** 
  60:../../libdaisy/src/hid/midi.h ****     inline void    StartRx() { uart_.StartRx(); }
  61:../../libdaisy/src/hid/midi.h ****     inline size_t  Readable() { return uart_.Readable(); }
  62:../../libdaisy/src/hid/midi.h ****     inline uint8_t Rx() { return uart_.PopRx(); }
  63:../../libdaisy/src/hid/midi.h ****     inline bool    RxActive() { return uart_.RxActive(); }
  64:../../libdaisy/src/hid/midi.h ****     inline void    FlushRx() { uart_.FlushRx(); }
  65:../../libdaisy/src/hid/midi.h ****     inline void    Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
  66:../../libdaisy/src/hid/midi.h **** 
  67:../../libdaisy/src/hid/midi.h ****   private:
  68:../../libdaisy/src/hid/midi.h ****     UartHandler uart_;
  69:../../libdaisy/src/hid/midi.h **** };
  70:../../libdaisy/src/hid/midi.h **** 
  71:../../libdaisy/src/hid/midi.h **** /** 
  72:../../libdaisy/src/hid/midi.h ****     @brief Simple MIDI Handler \n 
  73:../../libdaisy/src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n 
  74:../../libdaisy/src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
  75:../../libdaisy/src/hid/midi.h ****     @author shensley
  76:../../libdaisy/src/hid/midi.h ****     @date March 2020
  77:../../libdaisy/src/hid/midi.h **** */
  78:../../libdaisy/src/hid/midi.h **** template <typename Transport>
  79:../../libdaisy/src/hid/midi.h **** class MidiHandler
  80:../../libdaisy/src/hid/midi.h **** {
  81:../../libdaisy/src/hid/midi.h ****   public:
  82:../../libdaisy/src/hid/midi.h ****     MidiHandler() {}
  83:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
  38              		.loc 2 83 5 view .LVU1
  39              	.LBB300:
  40              	.LBI300:
  25:../../libdaisy/src/hid/midi.h **** 
  41              		.loc 2 25 5 view .LVU2
  25:../../libdaisy/src/hid/midi.h **** 
  42              		.loc 2 25 5 is_stmt 0 view .LVU3
  43              	.LBE300:
  44              	.LBE299:
  45              	.LBB301:
  46              	.LBI301:
  47              		.file 3 "../../libdaisy/src/hid/rgb_led.h"
   1:../../libdaisy/src/hid/rgb_led.h **** #pragma once
   2:../../libdaisy/src/hid/rgb_led.h **** #ifndef DSY_RGB_LED_H
   3:../../libdaisy/src/hid/rgb_led.h **** #define DSY_RGB_LED_H
   4:../../libdaisy/src/hid/rgb_led.h **** #include "hid/led.h"
ARM GAS  /tmp/ccvcTplo.s 			page 4


   5:../../libdaisy/src/hid/rgb_led.h **** #include "util/color.h"
   6:../../libdaisy/src/hid/rgb_led.h **** 
   7:../../libdaisy/src/hid/rgb_led.h **** namespace daisy
   8:../../libdaisy/src/hid/rgb_led.h **** {
   9:../../libdaisy/src/hid/rgb_led.h **** /** @addtogroup feedback
  10:../../libdaisy/src/hid/rgb_led.h ****     @{
  11:../../libdaisy/src/hid/rgb_led.h **** */
  12:../../libdaisy/src/hid/rgb_led.h **** 
  13:../../libdaisy/src/hid/rgb_led.h **** /** 3x LEDs configured as an RGB for ease of use. */
  14:../../libdaisy/src/hid/rgb_led.h **** class RgbLed
  15:../../libdaisy/src/hid/rgb_led.h **** {
  16:../../libdaisy/src/hid/rgb_led.h ****   public:
  17:../../libdaisy/src/hid/rgb_led.h ****     RgbLed() {}
  18:../../libdaisy/src/hid/rgb_led.h ****     ~RgbLed() {}
  48              		.loc 3 18 5 is_stmt 1 view .LVU4
  49              	.LBB302:
  50              	.LBI302:
  51              		.file 4 "../../libdaisy/src/hid/led.h"
   1:../../libdaisy/src/hid/led.h **** 
   2:../../libdaisy/src/hid/led.h **** #pragma once
   3:../../libdaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../../libdaisy/src/hid/led.h **** #define DSY_LED_H
   5:../../libdaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../../libdaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../../libdaisy/src/hid/led.h **** 
   8:../../libdaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../../libdaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../../libdaisy/src/hid/led.h **** */
  11:../../libdaisy/src/hid/led.h **** 
  12:../../libdaisy/src/hid/led.h **** namespace daisy
  13:../../libdaisy/src/hid/led.h **** {
  14:../../libdaisy/src/hid/led.h **** /**
  15:../../libdaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../../libdaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../../libdaisy/src/hid/led.h ****     @author shensley
  18:../../libdaisy/src/hid/led.h ****     @date March 2020
  19:../../libdaisy/src/hid/led.h ****     @ingroup feedback
  20:../../libdaisy/src/hid/led.h **** */
  21:../../libdaisy/src/hid/led.h **** class Led
  22:../../libdaisy/src/hid/led.h **** {
  23:../../libdaisy/src/hid/led.h ****   public:
  24:../../libdaisy/src/hid/led.h ****     Led() {}
  25:../../libdaisy/src/hid/led.h ****     ~Led() {}
  52              		.loc 4 25 5 view .LVU5
  53              		.loc 4 25 5 is_stmt 0 view .LVU6
  54              	.LBE302:
  55              	.LBB303:
  56              	.LBI303:
  57              		.loc 4 25 5 is_stmt 1 view .LVU7
  58              		.loc 4 25 5 is_stmt 0 view .LVU8
  59              	.LBE303:
  60              	.LBB304:
  61              	.LBI304:
  62              		.loc 4 25 5 is_stmt 1 view .LVU9
  63              		.loc 4 25 5 is_stmt 0 view .LVU10
  64              	.LBE304:
  65              	.LBE301:
ARM GAS  /tmp/ccvcTplo.s 			page 5


  66              	.LBB305:
  67              	.LBI305:
  68              		.loc 3 18 5 is_stmt 1 view .LVU11
  69              	.LBB306:
  70              	.LBI306:
  71              		.loc 4 25 5 view .LVU12
  72              		.loc 4 25 5 is_stmt 0 view .LVU13
  73              	.LBE306:
  74              	.LBB307:
  75              	.LBI307:
  76              		.loc 4 25 5 is_stmt 1 view .LVU14
  77              		.loc 4 25 5 is_stmt 0 view .LVU15
  78              	.LBE307:
  79              	.LBB308:
  80              	.LBI308:
  81              		.loc 4 25 5 is_stmt 1 view .LVU16
  82              		.loc 4 25 5 is_stmt 0 view .LVU17
  83              	.LBE308:
  84              	.LBE305:
  85              	.LBB309:
  86              	.LBI309:
  87              		.file 5 "../../libdaisy/src/hid/switch.h"
   1:../../libdaisy/src/hid/switch.h **** #pragma once
   2:../../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../../libdaisy/src/hid/switch.h **** 
   7:../../libdaisy/src/hid/switch.h **** namespace daisy
   8:../../libdaisy/src/hid/switch.h **** {
   9:../../libdaisy/src/hid/switch.h **** /** 
  10:../../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../../libdaisy/src/hid/switch.h ****     @date December 2019
  14:../../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../../libdaisy/src/hid/switch.h **** */
  16:../../libdaisy/src/hid/switch.h **** class Switch
  17:../../libdaisy/src/hid/switch.h **** {
  18:../../libdaisy/src/hid/switch.h ****   public:
  19:../../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../../libdaisy/src/hid/switch.h ****     enum Type
  21:../../libdaisy/src/hid/switch.h ****     {
  22:../../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../../libdaisy/src/hid/switch.h ****     };
  25:../../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../../libdaisy/src/hid/switch.h ****     {
  28:../../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  30:../../libdaisy/src/hid/switch.h ****     };
  31:../../libdaisy/src/hid/switch.h **** 
  32:../../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../../libdaisy/src/hid/switch.h ****     enum Pull
  34:../../libdaisy/src/hid/switch.h ****     {
  35:../../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
ARM GAS  /tmp/ccvcTplo.s 			page 6


  36:../../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../../libdaisy/src/hid/switch.h ****     };
  39:../../libdaisy/src/hid/switch.h **** 
  40:../../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
  88              		.loc 5 41 5 is_stmt 1 view .LVU18
  89              		.loc 5 41 5 is_stmt 0 view .LVU19
  90              	.LBE309:
  91              	.LBB310:
  92              	.LBI310:
  93              		.loc 5 41 5 is_stmt 1 view .LVU20
  94              		.loc 5 41 5 is_stmt 0 view .LVU21
  95              	.LBE310:
  96              	.LBB311:
  97              	.LBI311:
  98              		.file 6 "../../libdaisy/src/hid/ctrl.h"
   1:../../libdaisy/src/hid/ctrl.h **** #pragma once
   2:../../libdaisy/src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libdaisy/src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libdaisy/src/hid/ctrl.h **** #include <stdint.h>
   5:../../libdaisy/src/hid/ctrl.h **** 
   6:../../libdaisy/src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libdaisy/src/hid/ctrl.h **** namespace daisy
   8:../../libdaisy/src/hid/ctrl.h **** {
   9:../../libdaisy/src/hid/ctrl.h **** /**
  10:../../libdaisy/src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libdaisy/src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libdaisy/src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libdaisy/src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libdaisy/src/hid/ctrl.h ****     @date November 2019
  15:../../libdaisy/src/hid/ctrl.h ****     @ingroup controls
  16:../../libdaisy/src/hid/ctrl.h **** */
  17:../../libdaisy/src/hid/ctrl.h **** class AnalogControl
  18:../../libdaisy/src/hid/ctrl.h **** {
  19:../../libdaisy/src/hid/ctrl.h ****   public:
  20:../../libdaisy/src/hid/ctrl.h ****     /** Constructor */
  21:../../libdaisy/src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
  23:../../libdaisy/src/hid/ctrl.h ****     ~AnalogControl() {}
  99              		.loc 6 23 5 is_stmt 1 view .LVU22
 100              		.loc 6 23 5 is_stmt 0 view .LVU23
 101              	.LBE311:
 102              	.LBB312:
 103              	.LBI312:
 104              		.loc 6 23 5 is_stmt 1 view .LVU24
 105              		.loc 6 23 5 is_stmt 0 view .LVU25
 106              	.LBE312:
 107              	.LBB313:
 108              	.LBI313:
 109              		.file 7 "../../libdaisy/src/hid/encoder.h"
   1:../../libdaisy/src/hid/encoder.h **** #pragma once
   2:../../libdaisy/src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../../libdaisy/src/hid/encoder.h **** #define DSY_ENCODER_H
   4:../../libdaisy/src/hid/encoder.h **** #include "daisy_core.h"
   5:../../libdaisy/src/hid/encoder.h **** #include "per/gpio.h"
   6:../../libdaisy/src/hid/encoder.h **** #include "hid/switch.h"
ARM GAS  /tmp/ccvcTplo.s 			page 7


   7:../../libdaisy/src/hid/encoder.h **** 
   8:../../libdaisy/src/hid/encoder.h **** namespace daisy
   9:../../libdaisy/src/hid/encoder.h **** {
  10:../../libdaisy/src/hid/encoder.h **** /** 
  11:../../libdaisy/src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../../libdaisy/src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../../libdaisy/src/hid/encoder.h ****     @author Stephen Hensley
  14:../../libdaisy/src/hid/encoder.h ****     @date December 2019
  15:../../libdaisy/src/hid/encoder.h ****     @ingroup controls
  16:../../libdaisy/src/hid/encoder.h **** */
  17:../../libdaisy/src/hid/encoder.h **** class Encoder
  18:../../libdaisy/src/hid/encoder.h **** {
  19:../../libdaisy/src/hid/encoder.h ****   public:
  20:../../libdaisy/src/hid/encoder.h ****     Encoder() {}
  21:../../libdaisy/src/hid/encoder.h ****     ~Encoder() {}
 110              		.loc 7 21 5 is_stmt 1 view .LVU26
 111              	.LBB314:
 112              	.LBI314:
 113              		.loc 5 41 5 view .LVU27
 114              		.loc 5 41 5 is_stmt 0 view .LVU28
 115              	.LBE314:
 116              	.LBE313:
 117              	.LBB315:
 118              	.LBI315:
 119              		.file 8 "../../libdaisy/src/daisy_seed.h"
   1:../../libdaisy/src/daisy_seed.h **** #pragma once
   2:../../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libdaisy/src/daisy_seed.h **** 
   5:../../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../../libdaisy/src/daisy_seed.h **** 
   7:../../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../../libdaisy/src/daisy_seed.h **** 
  10:../../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../../libdaisy/src/daisy_seed.h **** {
  12:../../libdaisy/src/daisy_seed.h **** /**
  13:../../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libdaisy/src/daisy_seed.h **** 
  16:../../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../../libdaisy/src/daisy_seed.h **** */
  18:../../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../../libdaisy/src/daisy_seed.h **** {
  20:../../libdaisy/src/daisy_seed.h ****   public:
  21:../../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 120              		.loc 8 22 5 is_stmt 1 view .LVU29
 121              	.LBB316:
 122              	.LBI316:
 123              		.file 9 "../../libdaisy/src/sys/system.h"
   1:../../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libdaisy/src/sys/system.h **** 
   4:../../libdaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libdaisy/src/sys/system.h **** 
   6:../../libdaisy/src/sys/system.h **** #include <cstdint>
ARM GAS  /tmp/ccvcTplo.s 			page 8


   7:../../libdaisy/src/sys/system.h **** #include "per/tim.h"
   8:../../libdaisy/src/sys/system.h **** 
   9:../../libdaisy/src/sys/system.h **** namespace daisy
  10:../../libdaisy/src/sys/system.h **** {
  11:../../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libdaisy/src/sys/system.h ****  **
  15:../../libdaisy/src/sys/system.h ****  ** @author shensley
  16:../../libdaisy/src/sys/system.h ****  ** @addtogroup system
  17:../../libdaisy/src/sys/system.h ****  */
  18:../../libdaisy/src/sys/system.h **** class System
  19:../../libdaisy/src/sys/system.h **** {
  20:../../libdaisy/src/sys/system.h ****   public:
  21:../../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libdaisy/src/sys/system.h ****     struct Config
  23:../../libdaisy/src/sys/system.h ****     {
  24:../../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../../libdaisy/src/sys/system.h ****         {
  27:../../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../../libdaisy/src/sys/system.h ****         };
  30:../../libdaisy/src/sys/system.h **** 
  31:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  34:../../libdaisy/src/sys/system.h ****          ** */
  35:../../libdaisy/src/sys/system.h ****         void Defaults()
  36:../../libdaisy/src/sys/system.h ****         {
  37:../../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  38:../../libdaisy/src/sys/system.h ****             use_dcache = true;
  39:../../libdaisy/src/sys/system.h ****             use_icache = true;
  40:../../libdaisy/src/sys/system.h ****         }
  41:../../libdaisy/src/sys/system.h **** 
  42:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  43:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  44:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  45:../../libdaisy/src/sys/system.h ****          ** */
  46:../../libdaisy/src/sys/system.h ****         void Boost()
  47:../../libdaisy/src/sys/system.h ****         {
  48:../../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  49:../../libdaisy/src/sys/system.h ****             use_dcache = true;
  50:../../libdaisy/src/sys/system.h ****             use_icache = true;
  51:../../libdaisy/src/sys/system.h ****         }
  52:../../libdaisy/src/sys/system.h **** 
  53:../../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  54:../../libdaisy/src/sys/system.h ****         bool       use_dcache;
  55:../../libdaisy/src/sys/system.h ****         bool       use_icache;
  56:../../libdaisy/src/sys/system.h ****     };
  57:../../libdaisy/src/sys/system.h **** 
  58:../../libdaisy/src/sys/system.h ****     System() {}
  59:../../libdaisy/src/sys/system.h ****     ~System() {}
 124              		.loc 9 59 5 view .LVU30
 125              		.loc 9 59 5 is_stmt 0 view .LVU31
 126              	.LBE316:
 127              	.LBB317:
ARM GAS  /tmp/ccvcTplo.s 			page 9


 128              	.LBI317:
 129              		.file 10 "../../libdaisy/src/hid/usb.h"
   1:../../libdaisy/src/hid/usb.h **** #pragma once
   2:../../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../../libdaisy/src/hid/usb.h **** 
   7:../../libdaisy/src/hid/usb.h **** namespace daisy
   8:../../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../../libdaisy/src/hid/usb.h ****     @{
  10:../../libdaisy/src/hid/usb.h **** */
  11:../../libdaisy/src/hid/usb.h **** 
  12:../../libdaisy/src/hid/usb.h **** {
  13:../../libdaisy/src/hid/usb.h **** /** 
  14:../../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../../libdaisy/src/hid/usb.h **** */
  18:../../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../../libdaisy/src/hid/usb.h **** {
  20:../../libdaisy/src/hid/usb.h ****   public:
  21:../../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libdaisy/src/hid/usb.h ****     enum class Result
  23:../../libdaisy/src/hid/usb.h ****     {
  24:../../libdaisy/src/hid/usb.h ****         OK,
  25:../../libdaisy/src/hid/usb.h ****         ERR,
  26:../../libdaisy/src/hid/usb.h ****     };
  27:../../libdaisy/src/hid/usb.h **** 
  28:../../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../../libdaisy/src/hid/usb.h ****     {
  31:../../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libdaisy/src/hid/usb.h ****     };
  35:../../libdaisy/src/hid/usb.h **** 
  36:../../libdaisy/src/hid/usb.h **** 
  37:../../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libdaisy/src/hid/usb.h **** 
  40:../../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../../libdaisy/src/hid/usb.h **** 
  42:../../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
 130              		.loc 10 42 5 is_stmt 1 view .LVU32
 131              		.loc 10 42 5 is_stmt 0 view .LVU33
 132              	.LBE317:
 133              	.LBB318:
 134              	.LBI318:
 135              		.file 11 "../../libdaisy/src/per/adc.h"
   1:../../libdaisy/src/per/adc.h **** #pragma once
   2:../../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../../libdaisy/src/per/adc.h **** #include "per/gpio.h"
ARM GAS  /tmp/ccvcTplo.s 			page 10


   8:../../libdaisy/src/per/adc.h **** 
   9:../../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../../libdaisy/src/per/adc.h **** 
  11:../../libdaisy/src/per/adc.h **** namespace daisy
  12:../../libdaisy/src/per/adc.h **** {
  13:../../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../../libdaisy/src/per/adc.h ****     @{
  15:../../libdaisy/src/per/adc.h **** */
  16:../../libdaisy/src/per/adc.h **** 
  17:../../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../../libdaisy/src/per/adc.h **** */
  21:../../libdaisy/src/per/adc.h **** 
  22:../../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../../libdaisy/src/per/adc.h **** {
  25:../../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../../libdaisy/src/per/adc.h ****     {
  28:../../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../../libdaisy/src/per/adc.h ****     };
  33:../../libdaisy/src/per/adc.h **** 
  34:../../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../../libdaisy/src/per/adc.h ****      */
  37:../../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../../libdaisy/src/per/adc.h **** 
  39:../../libdaisy/src/per/adc.h ****     /** 
  40:../../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../../libdaisy/src/per/adc.h ****     */
  51:../../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
  53:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../../libdaisy/src/per/adc.h **** 
  57:../../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../../libdaisy/src/per/adc.h **** };
  61:../../libdaisy/src/per/adc.h **** 
  62:../../libdaisy/src/per/adc.h **** /**
  63:../../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../../libdaisy/src/per/adc.h **** */
ARM GAS  /tmp/ccvcTplo.s 			page 11


  65:../../libdaisy/src/per/adc.h **** class AdcHandle
  66:../../libdaisy/src/per/adc.h **** {
  67:../../libdaisy/src/per/adc.h ****   public:
  68:../../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../../libdaisy/src/per/adc.h ****     {
  71:../../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../../libdaisy/src/per/adc.h ****     };
  83:../../libdaisy/src/per/adc.h **** 
  84:../../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 136              		.loc 11 85 5 is_stmt 1 view .LVU34
 137              		.loc 11 85 5 is_stmt 0 view .LVU35
 138              	.LBE318:
 139              	.LBB319:
 140              	.LBI319:
 141              		.file 12 "../../libdaisy/src/hid/audio.h"
   1:../../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libdaisy/src/hid/audio.h **** 
   4:../../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../../libdaisy/src/hid/audio.h **** 
   6:../../libdaisy/src/hid/audio.h **** namespace daisy
   7:../../libdaisy/src/hid/audio.h **** {
   8:../../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../../libdaisy/src/hid/audio.h **** {
  10:../../libdaisy/src/hid/audio.h ****   public:
  11:../../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../../libdaisy/src/hid/audio.h ****     struct Config
  14:../../libdaisy/src/hid/audio.h ****     {
  15:../../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../../libdaisy/src/hid/audio.h ****     };
  19:../../libdaisy/src/hid/audio.h **** 
  20:../../libdaisy/src/hid/audio.h ****     enum class Result
  21:../../libdaisy/src/hid/audio.h ****     {
  22:../../libdaisy/src/hid/audio.h ****         OK,
  23:../../libdaisy/src/hid/audio.h ****         ERR,
  24:../../libdaisy/src/hid/audio.h ****     };
  25:../../libdaisy/src/hid/audio.h **** 
  26:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  27:../../libdaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  28:../../libdaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  29:../../libdaisy/src/hid/audio.h ****     */
  30:../../libdaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
ARM GAS  /tmp/ccvcTplo.s 			page 12


  31:../../libdaisy/src/hid/audio.h **** 
  32:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  33:../../libdaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  34:../../libdaisy/src/hid/audio.h ****     */
  35:../../libdaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  36:../../libdaisy/src/hid/audio.h **** 
  37:../../libdaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  38:../../libdaisy/src/hid/audio.h ****    * Non-Interleaving audio callbacks in daisy will be of this type
  39:../../libdaisy/src/hid/audio.h ****   */
  40:../../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  41:../../libdaisy/src/hid/audio.h ****                                   OutputBuffer out,
  42:../../libdaisy/src/hid/audio.h ****                                   size_t       size);
  43:../../libdaisy/src/hid/audio.h **** 
  44:../../libdaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  45:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  46:../../libdaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  47:../../libdaisy/src/hid/audio.h ****     */
  48:../../libdaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  49:../../libdaisy/src/hid/audio.h **** 
  50:../../libdaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  51:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  52:../../libdaisy/src/hid/audio.h ****     */
  53:../../libdaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  54:../../libdaisy/src/hid/audio.h **** 
  55:../../libdaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  56:../../libdaisy/src/hid/audio.h ****    * Interleaving audio callbacks in daisy must be of this type
  57:../../libdaisy/src/hid/audio.h ****   */
  58:../../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  59:../../libdaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  60:../../libdaisy/src/hid/audio.h ****                                               size_t                   size);
  61:../../libdaisy/src/hid/audio.h **** 
  62:../../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  63:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 142              		.loc 12 63 5 is_stmt 1 view .LVU36
 143              		.loc 12 63 5 is_stmt 0 view .LVU37
 144              	.LBE319:
 145              	.LBE315:
 146              		.loc 1 36 18 view .LVU38
 147 0000 7047     		bx	lr
 148              		.cfi_endproc
 149              	.LFE2046:
 151              		.weak	_ZN5daisy8DaisyPodD1Ev
 152              		.thumb_set _ZN5daisy8DaisyPodD1Ev,_ZN5daisy8DaisyPodD2Ev
 153 0002 00BF     		.section	.text.startup.main,"ax",%progbits
 154              		.align	1
 155              		.p2align 2,,3
 156              		.global	main
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 160              		.fpu fpv5-d16
 162              	main:
 163              	.LFB2049:
 164              		.file 13 "SimpleButton.cpp"
   1:SimpleButton.cpp **** #include "daisy_pod.h"
   2:SimpleButton.cpp **** 
   3:SimpleButton.cpp **** using namespace daisy;
ARM GAS  /tmp/ccvcTplo.s 			page 13


   4:SimpleButton.cpp **** 
   5:SimpleButton.cpp **** DaisyPod hw;
   6:SimpleButton.cpp **** 
   7:SimpleButton.cpp **** int main(void)
   8:SimpleButton.cpp **** {
 165              		.loc 13 8 1 is_stmt 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
   9:SimpleButton.cpp ****     bool brightness1, brightness2;
 169              		.loc 13 9 5 view .LVU40
  10:SimpleButton.cpp ****     brightness1 = false;
 170              		.loc 13 10 5 view .LVU41
 171              	.LVL1:
  11:SimpleButton.cpp ****     brightness2 = false;
 172              		.loc 13 11 5 view .LVU42
  12:SimpleButton.cpp ****     hw.Init();
 173              		.loc 13 12 5 view .LVU43
   8:SimpleButton.cpp ****     bool brightness1, brightness2;
 174              		.loc 13 8 1 is_stmt 0 view .LVU44
 175 0000 38B5     		push	{r3, r4, r5, lr}
 176              		.cfi_def_cfa_offset 16
 177              		.cfi_offset 3, -16
 178              		.cfi_offset 4, -12
 179              		.cfi_offset 5, -8
 180              		.cfi_offset 14, -4
  11:SimpleButton.cpp ****     brightness2 = false;
 181              		.loc 13 11 17 view .LVU45
 182 0002 0024     		movs	r4, #0
 183 0004 174D     		ldr	r5, .L7
 184              		.loc 13 12 12 view .LVU46
 185 0006 2146     		mov	r1, r4
 186 0008 2846     		mov	r0, r5
 187 000a FFF7FEFF 		bl	_ZN5daisy8DaisyPod4InitEb
 188              	.LVL2:
 189              	.L5:
  13:SimpleButton.cpp **** 
  14:SimpleButton.cpp ****     while(1)
 190              		.loc 13 14 5 is_stmt 1 view .LVU47
  15:SimpleButton.cpp ****     {
  16:SimpleButton.cpp ****         hw.ProcessDigitalControls();
 191              		.loc 13 16 9 view .LVU48
 192              		.loc 13 16 34 is_stmt 0 view .LVU49
 193 000e 1548     		ldr	r0, .L7
 194 0010 FFF7FEFF 		bl	_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
 195              	.LVL3:
  17:SimpleButton.cpp **** 
  18:SimpleButton.cpp ****         // using button1 as momentary switch for turning on/off led1
  19:SimpleButton.cpp ****         brightness1 = hw.button1.Pressed();
 196              		.loc 13 19 9 is_stmt 1 view .LVU50
 197              	.LBB320:
 198              	.LBI320:
  42:../../libdaisy/src/hid/switch.h **** 
  43:../../libdaisy/src/hid/switch.h ****     /** 
  44:../../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
ARM GAS  /tmp/ccvcTplo.s 			page 14


  47:../../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../../libdaisy/src/hid/switch.h ****     */
  51:../../libdaisy/src/hid/switch.h ****     void
  52:../../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../../libdaisy/src/hid/switch.h **** 
  54:../../libdaisy/src/hid/switch.h ****     /**
  55:../../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../../libdaisy/src/hid/switch.h ****     */
  59:../../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../../libdaisy/src/hid/switch.h **** 
  61:../../libdaisy/src/hid/switch.h ****     /** 
  62:../../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../../libdaisy/src/hid/switch.h ****     */
  66:../../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../../libdaisy/src/hid/switch.h **** 
  68:../../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
  70:../../libdaisy/src/hid/switch.h **** 
  71:../../libdaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  72:../../libdaisy/src/hid/switch.h ****     inline bool FallingEdge() const { return state_ == 0x80; }
  73:../../libdaisy/src/hid/switch.h **** 
  74:../../libdaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  75:../../libdaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 199              		.loc 5 75 17 view .LVU51
 200              	.LBB321:
 201              		.loc 5 75 35 view .LVU52
 202              	.LBE321:
 203              	.LBE320:
  20:SimpleButton.cpp **** 
  21:SimpleButton.cpp ****         // using button2 as latching switch for toggling led2
  22:SimpleButton.cpp ****         if(hw.button2.RisingEdge())
  23:SimpleButton.cpp ****             brightness2 = !brightness2;
 204              		.loc 13 23 13 view .LVU53
 205              	.LBB326:
 206              	.LBB322:
 207              		.loc 5 75 52 is_stmt 0 view .LVU54
 208 0014 95F8A930 		ldrb	r3, [r5, #169]	@ zero_extendqisi2
 209              	.LBE322:
 210              	.LBE326:
  22:SimpleButton.cpp ****             brightness2 = !brightness2;
 211              		.loc 13 22 9 view .LVU55
 212 0018 95F8B920 		ldrb	r2, [r5, #185]	@ zero_extendqisi2
 213              	.LBB327:
 214              	.LBB323:
 215              		.loc 5 75 52 view .LVU56
 216 001c A3F1FF03 		sub	r3, #255
 217              	.LBE323:
 218              	.LBE327:
  24:SimpleButton.cpp **** 
  25:SimpleButton.cpp ****         // assign brightness levels to each led (R, G, B)
  26:SimpleButton.cpp ****         hw.led1.Set(brightness1, brightness1, brightness1);
ARM GAS  /tmp/ccvcTplo.s 			page 15


 219              		.loc 13 26 20 view .LVU57
 220 0020 1148     		ldr	r0, .L7+4
  22:SimpleButton.cpp ****             brightness2 = !brightness2;
 221              		.loc 13 22 9 view .LVU58
 222 0022 7F2A     		cmp	r2, #127
 223              	.LBB328:
 224              	.LBB324:
 225              		.loc 5 75 52 view .LVU59
 226 0024 B3FA83F3 		clz	r3, r3
 227              	.LBE324:
 228              	.LBE328:
  23:SimpleButton.cpp **** 
 229              		.loc 13 23 25 view .LVU60
 230 0028 08BF     		it	eq
 231 002a 84F00104 		eoreq	r4, r4, #1
 232              	.LVL4:
 233              	.LBB329:
 234              	.LBB325:
 235              		.loc 5 75 52 view .LVU61
 236 002e 5B09     		lsrs	r3, r3, #5
 237              	.LVL5:
 238              		.loc 5 75 52 view .LVU62
 239              	.LBE325:
 240              	.LBE329:
  22:SimpleButton.cpp ****             brightness2 = !brightness2;
 241              		.loc 13 22 9 is_stmt 1 view .LVU63
  69:../../libdaisy/src/hid/switch.h **** 
 242              		.loc 5 69 38 view .LVU64
 243              		.loc 13 26 9 view .LVU65
 244              		.loc 13 26 20 is_stmt 0 view .LVU66
 245 0030 07EE903A 		vmov	s15, r3	@ int
 246 0034 B8EE671A 		vcvt.f32.u32	s2, s15
 247 0038 F0EE410A 		vmov.f32	s1, s2
 248 003c B0EE410A 		vmov.f32	s0, s2
 249 0040 FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 250              	.LVL6:
  27:SimpleButton.cpp ****         hw.led2.Set(brightness2, brightness2, brightness2);
 251              		.loc 13 27 9 is_stmt 1 view .LVU67
 252              		.loc 13 27 20 is_stmt 0 view .LVU68
 253 0044 07EE904A 		vmov	s15, r4	@ int
 254 0048 0848     		ldr	r0, .L7+8
 255 004a B8EE671A 		vcvt.f32.u32	s2, s15
 256 004e F0EE410A 		vmov.f32	s1, s2
 257 0052 B0EE410A 		vmov.f32	s0, s2
 258 0056 FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 259              	.LVL7:
  28:SimpleButton.cpp ****         hw.UpdateLeds();
 260              		.loc 13 28 9 is_stmt 1 view .LVU69
 261              		.loc 13 28 22 is_stmt 0 view .LVU70
 262 005a 0248     		ldr	r0, .L7
 263 005c FFF7FEFF 		bl	_ZN5daisy8DaisyPod10UpdateLedsEv
 264              	.LVL8:
  14:SimpleButton.cpp ****     {
 265              		.loc 13 14 5 is_stmt 1 view .LVU71
  16:SimpleButton.cpp **** 
 266              		.loc 13 16 34 is_stmt 0 view .LVU72
 267 0060 D5E7     		b	.L5
ARM GAS  /tmp/ccvcTplo.s 			page 16


 268              	.L8:
 269 0062 00BF     		.align	2
 270              	.L7:
 271 0064 00000000 		.word	hw
 272 0068 CC000000 		.word	hw+204
 273 006c 20010000 		.word	hw+288
 274              		.cfi_endproc
 275              	.LFE2049:
 277              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 278              		.align	1
 279              		.p2align 2,,3
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu fpv5-d16
 285              	_GLOBAL__sub_I_hw:
 286              	.LFB2077:
  29:SimpleButton.cpp ****     }
  30:SimpleButton.cpp **** }
 287              		.loc 13 30 1 is_stmt 1 view -0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 292              	.LBB391:
 293              	.LBI391:
 294              		.loc 13 30 1 view .LVU74
 295              	.LVL9:
 296              	.LBB392:
 297              	.LBB393:
 298              	.LBI393:
  35:../../libdaisy/src/daisy_pod.h ****     ~DaisyPod() {}
 299              		.loc 1 35 5 view .LVU75
 300              	.LBB394:
 301              	.LBB395:
 302              	.LBI395:
  21:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 303              		.loc 8 21 5 view .LVU76
 304              	.LBB396:
 305              	.LBB397:
 306              	.LBI397:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 307              		.loc 12 62 5 view .LVU77
 308              	.LBE397:
 309              	.LBE396:
 310              	.LBE395:
 311              	.LBB412:
 312              	.LBB413:
 313              	.LBB414:
 314              	.LBB415:
 315              	.LBB416:
 316              	.LBB417:
 317              	.LBB418:
  36:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 318              		.loc 2 36 20 is_stmt 0 view .LVU78
 319 0000 134A     		ldr	r2, .L11
 320              	.LBE418:
ARM GAS  /tmp/ccvcTplo.s 			page 17


 321              	.LBE417:
 322              	.LBE416:
 323              	.LBE415:
 324              	.LBE414:
 325              	.LBE413:
 326              	.LBE412:
 327              	.LBB459:
 328              	.LBB410:
 329              	.LBB402:
 330              	.LBB398:
 331              	.LBB399:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 332              		.loc 12 62 35 view .LVU79
 333 0002 0023     		movs	r3, #0
 334 0004 1348     		ldr	r0, .L11+4
 335              	.LBE399:
 336              	.LBE398:
 337              	.LBE402:
 338              	.LBE410:
 339              	.LBE459:
 340              	.LBB460:
 341              	.LBB456:
 342              	.LBB453:
 343              	.LBB434:
 344              	.LBB429:
 345              	.LBB424:
 346              	.LBB419:
  35:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 347              		.loc 2 35 20 view .LVU80
 348 0006 49F21C21 		movw	r1, #37404
 349              	.LBE419:
 350              	.LBE424:
 351              	.LBE429:
 352              	.LBE434:
 353              	.LBE453:
 354              	.LBE456:
 355              	.LBE460:
 356              	.LBE394:
 357              	.LBE393:
 358              	.LBE392:
 359              	.LBE391:
 360              		.loc 13 30 1 view .LVU81
 361 000a 70B4     		push	{r4, r5, r6}
 362              		.cfi_def_cfa_offset 12
 363              		.cfi_offset 4, -12
 364              		.cfi_offset 5, -8
 365              		.cfi_offset 6, -4
 366              	.LBB485:
 367              	.LBB483:
 368              	.LBB482:
 369              	.LBB481:
 370              	.LBB461:
 371              	.LBB457:
 372              	.LBB454:
 373              	.LBB435:
 374              	.LBB430:
 375              	.LBB425:
ARM GAS  /tmp/ccvcTplo.s 			page 18


 376              	.LBB420:
  36:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 377              		.loc 2 36 20 view .LVU82
 378 000c 1688     		ldrh	r6, [r2]
 379 000e 49F22025 		movw	r5, #37408
  37:../../libdaisy/src/hid/midi.h ****         }
 380              		.loc 2 37 20 view .LVU83
 381 0012 49F22224 		movw	r4, #37410
 382 0016 9288     		ldrh	r2, [r2, #4]
  36:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 383              		.loc 2 36 20 view .LVU84
 384 0018 4653     		strh	r6, [r0, r5]	@ movhi
 385              	.LBE420:
 386              	.LBE425:
 387              	.LBE430:
 388              	.LBE435:
 389              	.LBB436:
 390              	.LBB437:
 391              	.LBB438:
 392              	.LBB439:
 393              		.file 14 "../../libdaisy/src/per/uart.h"
   1:../../libdaisy/src/per/uart.h **** /* 
   2:../../libdaisy/src/per/uart.h **** TODO
   3:../../libdaisy/src/per/uart.h **** - UART1 defaults to DMA, add flexible config for DMA on all periphs
   4:../../libdaisy/src/per/uart.h **** - Transmit function improvements.
   5:../../libdaisy/src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   6:../../libdaisy/src/per/uart.h **** */
   7:../../libdaisy/src/per/uart.h **** 
   8:../../libdaisy/src/per/uart.h **** #pragma once
   9:../../libdaisy/src/per/uart.h **** #ifndef DSY_UART_H
  10:../../libdaisy/src/per/uart.h **** #define DSY_UART_H /**< macro */
  11:../../libdaisy/src/per/uart.h **** #include "daisy_core.h"
  12:../../libdaisy/src/per/uart.h **** 
  13:../../libdaisy/src/per/uart.h **** 
  14:../../libdaisy/src/per/uart.h **** namespace daisy
  15:../../libdaisy/src/per/uart.h **** {
  16:../../libdaisy/src/per/uart.h **** /** @addtogroup serial
  17:../../libdaisy/src/per/uart.h ****     @{
  18:../../libdaisy/src/per/uart.h ****     */
  19:../../libdaisy/src/per/uart.h **** 
  20:../../libdaisy/src/per/uart.h **** /** 
  21:../../libdaisy/src/per/uart.h ****     Uart Peripheral
  22:../../libdaisy/src/per/uart.h ****     @author shensley
  23:../../libdaisy/src/per/uart.h ****     @date March 2020
  24:../../libdaisy/src/per/uart.h ****     */
  25:../../libdaisy/src/per/uart.h **** class UartHandler
  26:../../libdaisy/src/per/uart.h **** {
  27:../../libdaisy/src/per/uart.h ****   public:
  28:../../libdaisy/src/per/uart.h ****     struct Config
  29:../../libdaisy/src/per/uart.h ****     {
  30:../../libdaisy/src/per/uart.h ****         enum class Peripheral
  31:../../libdaisy/src/per/uart.h ****         {
  32:../../libdaisy/src/per/uart.h ****             USART_1,
  33:../../libdaisy/src/per/uart.h ****             USART_2,
  34:../../libdaisy/src/per/uart.h ****             USART_3,
  35:../../libdaisy/src/per/uart.h ****             UART_4,
  36:../../libdaisy/src/per/uart.h ****             UART_5,
ARM GAS  /tmp/ccvcTplo.s 			page 19


  37:../../libdaisy/src/per/uart.h ****             USART_6,
  38:../../libdaisy/src/per/uart.h ****             UART_7,
  39:../../libdaisy/src/per/uart.h ****             UART_8,
  40:../../libdaisy/src/per/uart.h ****             LPUART_1,
  41:../../libdaisy/src/per/uart.h ****         };
  42:../../libdaisy/src/per/uart.h **** 
  43:../../libdaisy/src/per/uart.h ****         enum class StopBits
  44:../../libdaisy/src/per/uart.h ****         {
  45:../../libdaisy/src/per/uart.h ****             BITS_0_5,
  46:../../libdaisy/src/per/uart.h ****             BITS_1,
  47:../../libdaisy/src/per/uart.h ****             BITS_1_5,
  48:../../libdaisy/src/per/uart.h ****             BITS_2,
  49:../../libdaisy/src/per/uart.h ****         };
  50:../../libdaisy/src/per/uart.h **** 
  51:../../libdaisy/src/per/uart.h ****         enum class Parity
  52:../../libdaisy/src/per/uart.h ****         {
  53:../../libdaisy/src/per/uart.h ****             NONE,
  54:../../libdaisy/src/per/uart.h ****             EVEN,
  55:../../libdaisy/src/per/uart.h ****             ODD,
  56:../../libdaisy/src/per/uart.h ****         };
  57:../../libdaisy/src/per/uart.h **** 
  58:../../libdaisy/src/per/uart.h ****         enum class Mode
  59:../../libdaisy/src/per/uart.h ****         {
  60:../../libdaisy/src/per/uart.h ****             RX,
  61:../../libdaisy/src/per/uart.h ****             TX,
  62:../../libdaisy/src/per/uart.h ****             TX_RX,
  63:../../libdaisy/src/per/uart.h ****         };
  64:../../libdaisy/src/per/uart.h **** 
  65:../../libdaisy/src/per/uart.h ****         enum class WordLength
  66:../../libdaisy/src/per/uart.h ****         {
  67:../../libdaisy/src/per/uart.h ****             BITS_7,
  68:../../libdaisy/src/per/uart.h ****             BITS_8,
  69:../../libdaisy/src/per/uart.h ****             BITS_9,
  70:../../libdaisy/src/per/uart.h ****         };
  71:../../libdaisy/src/per/uart.h **** 
  72:../../libdaisy/src/per/uart.h ****         struct
  73:../../libdaisy/src/per/uart.h ****         {
  74:../../libdaisy/src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  75:../../libdaisy/src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  76:../../libdaisy/src/per/uart.h ****         } pin_config;        /**< & */
  77:../../libdaisy/src/per/uart.h **** 
  78:../../libdaisy/src/per/uart.h ****         Peripheral periph;
  79:../../libdaisy/src/per/uart.h ****         StopBits   stopbits;
  80:../../libdaisy/src/per/uart.h ****         Parity     parity;
  81:../../libdaisy/src/per/uart.h ****         Mode       mode;
  82:../../libdaisy/src/per/uart.h ****         WordLength wordlength;
  83:../../libdaisy/src/per/uart.h ****         uint32_t   baudrate;
  84:../../libdaisy/src/per/uart.h ****     };
  85:../../libdaisy/src/per/uart.h **** 
  86:../../libdaisy/src/per/uart.h **** 
  87:../../libdaisy/src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 394              		.loc 14 87 35 view .LVU85
 395 001a 49F22426 		movw	r6, #37412
 396              	.LBE439:
 397              	.LBE438:
 398              	.LBE437:
 399              	.LBE436:
ARM GAS  /tmp/ccvcTplo.s 			page 20


 400              	.LBB444:
 401              	.LBB431:
 402              	.LBB426:
 403              	.LBB421:
  37:../../libdaisy/src/hid/midi.h ****         }
 404              		.loc 2 37 20 view .LVU86
 405 001e 0253     		strh	r2, [r0, r4]	@ movhi
 406              	.LBE421:
 407              	.LBE426:
 408              	.LBE431:
 409              	.LBE444:
  82:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 410              		.loc 2 82 19 view .LVU87
 411 0020 49F22824 		movw	r4, #37416
 412 0024 0C4D     		ldr	r5, .L11+8
 413 0026 49F22C22 		movw	r2, #37420
 414              	.LBB445:
 415              	.LBB432:
 416              	.LBB427:
 417              	.LBB422:
  35:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 418              		.loc 2 35 20 view .LVU88
 419 002a 4350     		str	r3, [r0, r1]
 420              	.LBE422:
 421              	.LBE427:
 422              	.LBE432:
 423              	.LBE445:
  82:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 424              		.loc 2 82 19 view .LVU89
 425 002c 4FF60F01 		movw	r1, #63503
 426              	.LBB446:
 427              	.LBB442:
 428              	.LBB441:
 429              	.LBB440:
 430              		.loc 14 87 35 view .LVU90
 431 0030 8351     		str	r3, [r0, r6]
 432              	.LBE440:
 433              	.LBE441:
 434              	.LBE442:
 435              	.LBE446:
  82:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 436              		.loc 2 82 19 view .LVU91
 437 0032 0551     		str	r5, [r0, r4]
 438 0034 0724     		movs	r4, #7
 439              	.LBE454:
 440              	.LBE457:
 441              	.LBE461:
 442              	.LBB462:
 443              	.LBB411:
 444              	.LBB403:
 445              	.LBB401:
 446              	.LBB400:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 447              		.loc 12 62 35 view .LVU92
 448 0036 4361     		str	r3, [r0, #20]
 449              	.LVL10:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
ARM GAS  /tmp/ccvcTplo.s 			page 21


 450              		.loc 12 62 35 view .LVU93
 451              	.LBE400:
 452              	.LBE401:
 453              	.LBE403:
 454              	.LBB404:
 455              	.LBI404:
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 456              		.loc 11 84 5 is_stmt 1 view .LVU94
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 457              		.loc 11 84 5 is_stmt 0 view .LVU95
 458              	.LBE404:
 459              	.LBB405:
 460              	.LBI405:
 461              		.file 15 "../../libdaisy/src/per/dac.h"
   1:../../libdaisy/src/per/dac.h **** #pragma once
   2:../../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../../libdaisy/src/per/dac.h **** 
   5:../../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../../libdaisy/src/per/dac.h **** 
   7:../../libdaisy/src/per/dac.h **** namespace daisy
   8:../../libdaisy/src/per/dac.h **** {
   9:../../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../../libdaisy/src/per/dac.h ****  ** 
  11:../../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../../libdaisy/src/per/dac.h ****  **
  14:../../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../../libdaisy/src/per/dac.h ****  **
  16:../../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../../libdaisy/src/per/dac.h ****  ***/
  20:../../libdaisy/src/per/dac.h **** class DacHandle
  21:../../libdaisy/src/per/dac.h **** {
  22:../../libdaisy/src/per/dac.h ****   public:
  23:../../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../../libdaisy/src/per/dac.h ****     enum class Result
  25:../../libdaisy/src/per/dac.h ****     {
  26:../../libdaisy/src/per/dac.h ****         OK,
  27:../../libdaisy/src/per/dac.h ****         ERR,
  28:../../libdaisy/src/per/dac.h ****     };
  29:../../libdaisy/src/per/dac.h **** 
  30:../../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../../libdaisy/src/per/dac.h ****     enum class Channel
  32:../../libdaisy/src/per/dac.h ****     {
  33:../../libdaisy/src/per/dac.h ****         ONE,
  34:../../libdaisy/src/per/dac.h ****         TWO,
  35:../../libdaisy/src/per/dac.h ****         BOTH,
  36:../../libdaisy/src/per/dac.h ****     };
  37:../../libdaisy/src/per/dac.h **** 
  38:../../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../../libdaisy/src/per/dac.h ****      **
  40:../../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../../libdaisy/src/per/dac.h ****      **
  42:../../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
ARM GAS  /tmp/ccvcTplo.s 			page 22


  44:../../libdaisy/src/per/dac.h ****      ***/
  45:../../libdaisy/src/per/dac.h ****     enum class Mode
  46:../../libdaisy/src/per/dac.h ****     {
  47:../../libdaisy/src/per/dac.h ****         POLLING,
  48:../../libdaisy/src/per/dac.h ****         DMA,
  49:../../libdaisy/src/per/dac.h ****     };
  50:../../libdaisy/src/per/dac.h **** 
  51:../../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../../libdaisy/src/per/dac.h ****      ***/
  55:../../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../../libdaisy/src/per/dac.h ****     {
  57:../../libdaisy/src/per/dac.h ****         BITS_8,
  58:../../libdaisy/src/per/dac.h ****         BITS_12
  59:../../libdaisy/src/per/dac.h ****     };
  60:../../libdaisy/src/per/dac.h **** 
  61:../../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../../libdaisy/src/per/dac.h ****     {
  64:../../libdaisy/src/per/dac.h ****         ENABLED,
  65:../../libdaisy/src/per/dac.h ****         DISABLED,
  66:../../libdaisy/src/per/dac.h ****     };
  67:../../libdaisy/src/per/dac.h **** 
  68:../../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../../libdaisy/src/per/dac.h ****     struct Config
  70:../../libdaisy/src/per/dac.h ****     {
  71:../../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../../libdaisy/src/per/dac.h **** 
  77:../../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../../libdaisy/src/per/dac.h ****     };
  82:../../libdaisy/src/per/dac.h **** 
  83:../../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 462              		.loc 15 83 5 is_stmt 1 view .LVU96
 463              	.LBB406:
 464              	.LBB407:
 465              		.loc 15 83 33 is_stmt 0 view .LVU97
 466 0038 0362     		str	r3, [r0, #32]
 467              	.LVL11:
 468              		.loc 15 83 33 view .LVU98
 469              	.LBE407:
 470              	.LBE406:
 471              	.LBE405:
 472              	.LBB408:
 473              	.LBI408:
  40:../../libdaisy/src/hid/usb.h **** 
 474              		.loc 10 40 5 is_stmt 1 view .LVU99
  40:../../libdaisy/src/hid/usb.h **** 
 475              		.loc 10 40 5 is_stmt 0 view .LVU100
 476              	.LBE408:
ARM GAS  /tmp/ccvcTplo.s 			page 23


 477              	.LBB409:
 478              	.LBI409:
  58:../../libdaisy/src/sys/system.h ****     ~System() {}
 479              		.loc 9 58 5 is_stmt 1 view .LVU101
  58:../../libdaisy/src/sys/system.h ****     ~System() {}
 480              		.loc 9 58 5 is_stmt 0 view .LVU102
 481              	.LBE409:
 482              	.LBE411:
 483              	.LBE462:
 484              	.LBB463:
 485              	.LBI463:
  20:../../libdaisy/src/hid/encoder.h ****     ~Encoder() {}
 486              		.loc 7 20 5 is_stmt 1 view .LVU103
 487              	.LBB464:
 488              	.LBB465:
 489              	.LBI465:
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 490              		.loc 5 40 5 view .LVU104
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 491              		.loc 5 40 5 is_stmt 0 view .LVU105
 492              	.LBE465:
 493              	.LBE464:
 494              	.LBE463:
 495              	.LBB466:
 496              	.LBI466:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 497              		.loc 6 21 5 is_stmt 1 view .LVU106
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 498              		.loc 6 21 5 is_stmt 0 view .LVU107
 499              	.LBE466:
 500              	.LBB467:
 501              	.LBI467:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 502              		.loc 6 21 5 is_stmt 1 view .LVU108
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 503              		.loc 6 21 5 is_stmt 0 view .LVU109
 504              	.LBE467:
 505              	.LBB468:
 506              	.LBI468:
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 507              		.loc 5 40 5 is_stmt 1 view .LVU110
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 508              		.loc 5 40 5 is_stmt 0 view .LVU111
 509              	.LBE468:
 510              	.LBB469:
 511              	.LBI469:
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 512              		.loc 5 40 5 is_stmt 1 view .LVU112
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 513              		.loc 5 40 5 is_stmt 0 view .LVU113
 514              	.LBE469:
 515              	.LBB470:
 516              	.LBI470:
  17:../../libdaisy/src/hid/rgb_led.h ****     ~RgbLed() {}
 517              		.loc 3 17 5 is_stmt 1 view .LVU114
 518              	.LBB471:
 519              	.LBB472:
ARM GAS  /tmp/ccvcTplo.s 			page 24


 520              	.LBI472:
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 521              		.loc 4 24 5 view .LVU115
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 522              		.loc 4 24 5 is_stmt 0 view .LVU116
 523              	.LBE472:
 524              	.LBB473:
 525              	.LBI473:
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 526              		.loc 4 24 5 is_stmt 1 view .LVU117
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 527              		.loc 4 24 5 is_stmt 0 view .LVU118
 528              	.LBE473:
 529              	.LBB474:
 530              	.LBI474:
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 531              		.loc 4 24 5 is_stmt 1 view .LVU119
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 532              		.loc 4 24 5 is_stmt 0 view .LVU120
 533              	.LBE474:
 534              	.LBE471:
 535              	.LBE470:
 536              	.LBB475:
 537              	.LBI475:
  17:../../libdaisy/src/hid/rgb_led.h ****     ~RgbLed() {}
 538              		.loc 3 17 5 is_stmt 1 view .LVU121
 539              	.LBB476:
 540              	.LBB477:
 541              	.LBI477:
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 542              		.loc 4 24 5 view .LVU122
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 543              		.loc 4 24 5 is_stmt 0 view .LVU123
 544              	.LBE477:
 545              	.LBB478:
 546              	.LBI478:
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 547              		.loc 4 24 5 is_stmt 1 view .LVU124
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 548              		.loc 4 24 5 is_stmt 0 view .LVU125
 549              	.LBE478:
 550              	.LBB479:
 551              	.LBI479:
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 552              		.loc 4 24 5 is_stmt 1 view .LVU126
  24:../../libdaisy/src/hid/led.h ****     ~Led() {}
 553              		.loc 4 24 5 is_stmt 0 view .LVU127
 554              	.LBE479:
 555              	.LBE476:
 556              	.LBE475:
 557              	.LBB480:
 558              	.LBI412:
  82:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 559              		.loc 2 82 5 is_stmt 1 view .LVU128
 560              	.LBB458:
 561              	.LBB455:
 562              	.LBB447:
ARM GAS  /tmp/ccvcTplo.s 			page 25


 563              	.LBI447:
 564              		.loc 14 87 5 view .LVU129
 565              	.LBB448:
 566              	.LBB449:
 567              		.loc 14 87 35 is_stmt 0 view .LVU130
 568 003a C0F87431 		str	r3, [r0, #372]
 569              	.LVL12:
 570              		.loc 14 87 35 view .LVU131
 571              	.LBE449:
 572              	.LBE448:
 573              	.LBE447:
 574              	.LBB450:
 575              	.LBI450:
 576              		.file 16 "../../libdaisy/src/util/ringbuffer.h"
   1:../../libdaisy/src/util/ringbuffer.h **** #pragma once
   2:../../libdaisy/src/util/ringbuffer.h **** #ifndef DSY_RINGBUFFER_H
   3:../../libdaisy/src/util/ringbuffer.h **** #define DSY_RINGBUFFER_H
   4:../../libdaisy/src/util/ringbuffer.h **** 
   5:../../libdaisy/src/util/ringbuffer.h **** #include <algorithm>
   6:../../libdaisy/src/util/ringbuffer.h **** 
   7:../../libdaisy/src/util/ringbuffer.h **** namespace daisy
   8:../../libdaisy/src/util/ringbuffer.h **** {
   9:../../libdaisy/src/util/ringbuffer.h **** /** @addtogroup utility
  10:../../libdaisy/src/util/ringbuffer.h ****     @{
  11:../../libdaisy/src/util/ringbuffer.h **** */
  12:../../libdaisy/src/util/ringbuffer.h **** 
  13:../../libdaisy/src/util/ringbuffer.h **** /**
  14:../../libdaisy/src/util/ringbuffer.h **** Utility Ring Buffer \n 
  15:../../libdaisy/src/util/ringbuffer.h **** imported from pichenettes/stmlib
  16:../../libdaisy/src/util/ringbuffer.h **** */
  17:../../libdaisy/src/util/ringbuffer.h **** template <typename T, size_t size>
  18:../../libdaisy/src/util/ringbuffer.h **** class RingBuffer
  19:../../libdaisy/src/util/ringbuffer.h **** {
  20:../../libdaisy/src/util/ringbuffer.h ****   public:
  21:../../libdaisy/src/util/ringbuffer.h ****     RingBuffer() {}
 577              		.loc 16 21 5 is_stmt 1 view .LVU132
 578              		.loc 16 21 5 is_stmt 0 view .LVU133
 579              	.LBE450:
 580              	.LBB451:
 581              	.LBI415:
  84:../../libdaisy/src/hid/midi.h **** 
  85:../../libdaisy/src/hid/midi.h ****     struct Config
 582              		.loc 2 85 12 is_stmt 1 view .LVU134
 583              	.LBB433:
 584              	.LBI416:
  33:../../libdaisy/src/hid/midi.h ****         {
 585              		.loc 2 33 9 view .LVU135
 586              	.LBB428:
 587              	.LBB423:
  35:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 588              		.loc 2 35 13 view .LVU136
  36:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 589              		.loc 2 36 13 view .LVU137
  37:../../libdaisy/src/hid/midi.h ****         }
 590              		.loc 2 37 13 view .LVU138
  37:../../libdaisy/src/hid/midi.h ****         }
 591              		.loc 2 37 13 is_stmt 0 view .LVU139
ARM GAS  /tmp/ccvcTplo.s 			page 26


 592              	.LBE423:
 593              	.LBE428:
 594              	.LBE433:
 595              	.LBE451:
 596              	.LBB452:
 597              	.LBI436:
  24:../../libdaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
 598              		.loc 2 24 5 is_stmt 1 view .LVU140
 599              	.LBB443:
 600              	.LBI437:
 601              		.loc 14 87 5 view .LVU141
 602              		.loc 14 87 5 is_stmt 0 view .LVU142
 603              	.LBE443:
 604              	.LBE452:
  82:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 605              		.loc 2 82 19 view .LVU143
 606 003e 49F22E23 		movw	r3, #37422
 607 0042 8152     		strh	r1, [r0, r2]	@ movhi
 608 0044 C454     		strb	r4, [r0, r3]
 609              	.LVL13:
  82:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 610              		.loc 2 82 19 view .LVU144
 611              	.LBE455:
 612              	.LBE458:
 613              	.LBE480:
 614              	.LBE481:
 615              	.LBE482:
   5:SimpleButton.cpp **** 
 616              		.loc 13 5 10 view .LVU145
 617 0046 054A     		ldr	r2, .L11+12
 618 0048 0549     		ldr	r1, .L11+16
 619              	.LBE483:
 620              	.LBE485:
 621              		.loc 13 30 1 view .LVU146
 622 004a 70BC     		pop	{r4, r5, r6}
 623              		.cfi_restore 6
 624              		.cfi_restore 5
 625              		.cfi_restore 4
 626              		.cfi_def_cfa_offset 0
 627              	.LBB486:
 628              	.LBB484:
   5:SimpleButton.cpp **** 
 629              		.loc 13 5 10 view .LVU147
 630 004c FFF7FEBF 		b	__aeabi_atexit
 631              	.LVL14:
 632              	.L12:
 633              		.align	2
 634              	.L11:
 635 0050 00000000 		.word	.LANCHOR0
 636 0054 00000000 		.word	hw
 637 0058 80707FF0 		.word	-260083584
 638 005c 00000000 		.word	__dso_handle
 639 0060 00000000 		.word	_ZN5daisy8DaisyPodD1Ev
 640              	.LBE484:
 641              	.LBE486:
 642              		.cfi_endproc
 643              	.LFE2077:
ARM GAS  /tmp/ccvcTplo.s 			page 27


 645              		.section	.init_array,"aw",%init_array
 646              		.align	2
 647 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 648              		.global	hw
 649              		.section	.rodata
 650              		.align	2
 651              		.set	.LANCHOR0,. + 0
 652              	.LC0:
 653 0000 01       		.byte	1
 654 0001 07       		.byte	7
 655 0002 0000     		.space	2
 656              	.LC1:
 657 0004 01       		.byte	1
 658 0005 06       		.byte	6
 659              		.section	.bss.hw,"aw",%nobits
 660              		.align	2
 663              	hw:
 664 0000 00000000 		.space	37424
 664      00000000 
 664      00000000 
 664      00000000 
 664      00000000 
 665              		.text
 666              	.Letext0:
 667              		.file 17 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 668              		.file 18 "../../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 669              		.file 19 "../../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 670              		.file 20 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 671              		.file 21 "/usr/include/newlib/c++/9.2.1/cmath"
 672              		.file 22 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 673              		.file 23 "/usr/include/newlib/c++/9.2.1/cstdlib"
 674              		.file 24 "/usr/include/newlib/c++/9.2.1/cstdint"
 675              		.file 25 "/usr/include/newlib/c++/9.2.1/type_traits"
 676              		.file 26 "/usr/include/newlib/c++/9.2.1/bits/stl_pair.h"
 677              		.file 27 "/usr/include/newlib/c++/9.2.1/debug/debug.h"
 678              		.file 28 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/c++config.h"
 679              		.file 29 "/usr/include/newlib/c++/9.2.1/bits/algorithmfwd.h"
 680              		.file 30 "/usr/include/newlib/c++/9.2.1/bits/exception_ptr.h"
 681              		.file 31 "/usr/include/newlib/c++/9.2.1/new"
 682              		.file 32 "/usr/include/newlib/c++/9.2.1/cstdarg"
 683              		.file 33 "/usr/include/newlib/c++/9.2.1/cstdio"
 684              		.file 34 "/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h"
 685              		.file 35 "/usr/include/newlib/c++/9.2.1/ext/numeric_traits.h"
 686              		.file 36 "/usr/include/newlib/sys/_types.h"
 687              		.file 37 "<built-in>"
 688              		.file 38 "/usr/include/newlib/sys/reent.h"
 689              		.file 39 "/usr/include/newlib/sys/lock.h"
 690              		.file 40 "/usr/include/newlib/math.h"
 691              		.file 41 "/usr/include/newlib/stdlib.h"
 692              		.file 42 "/usr/include/newlib/c++/9.2.1/math.h"
 693              		.file 43 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 694              		.file 44 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 695              		.file 45 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 696              		.file 46 "../../libdaisy/src/daisy_core.h"
 697              		.file 47 "../../libdaisy/src/per/tim.h"
 698              		.file 48 "../../libdaisy/src/per/sai.h"
 699              		.file 49 "../../libdaisy/src/hid/MidiEvent.h"
ARM GAS  /tmp/ccvcTplo.s 			page 28


 700              		.file 50 "../../libdaisy/src/util/wav_format.h"
 701              		.file 51 "../../libdaisy/src/util/color.h"
 702              		.file 52 "../../libdaisy/src/per/qspi.h"
 703              		.file 53 "../../libdaisy/src/per/gpio.h"
 704              		.file 54 "../../libdaisy/src/dev/sdram.h"
 705              		.file 55 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdarg.h"
 706              		.file 56 "/usr/include/newlib/stdio.h"
 707              		.file 57 "/usr/include/newlib/sys/unistd.h"
 708              		.file 58 "../../libdaisy/src/util/oled_fonts.h"
 709              		.file 59 "../../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 710              		.file 60 "../../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 711              		.file 61 "../../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 712              		.file 62 "../../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 713              		.file 63 "../../libdaisy/src/util/sd_diskio.h"
 714              		.file 64 "../../libdaisy/src/sys/fatfs.h"
 715              		.file 65 "../../libdaisy/src/dev/sr_595.h"
ARM GAS  /tmp/ccvcTplo.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 SimpleButton.cpp
     /tmp/ccvcTplo.s:17     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 $t
     /tmp/ccvcTplo.s:26     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD2Ev
     /tmp/ccvcTplo.s:26     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD1Ev
     /tmp/ccvcTplo.s:154    .text.startup.main:0000000000000000 $t
     /tmp/ccvcTplo.s:162    .text.startup.main:0000000000000000 main
     /tmp/ccvcTplo.s:271    .text.startup.main:0000000000000064 $d
     /tmp/ccvcTplo.s:663    .bss.hw:0000000000000000 hw
     /tmp/ccvcTplo.s:278    .text.startup._GLOBAL__sub_I_hw:0000000000000000 $t
     /tmp/ccvcTplo.s:285    .text.startup._GLOBAL__sub_I_hw:0000000000000000 _GLOBAL__sub_I_hw
     /tmp/ccvcTplo.s:635    .text.startup._GLOBAL__sub_I_hw:0000000000000050 $d
     /tmp/ccvcTplo.s:646    .init_array:0000000000000000 $d
     /tmp/ccvcTplo.s:650    .rodata:0000000000000000 $d
     /tmp/ccvcTplo.s:660    .bss.hw:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy8DaisyPodD5Ev

UNDEFINED SYMBOLS
_ZN5daisy8DaisyPod4InitEb
_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
_ZN5daisy6RgbLed3SetEfff
_ZN5daisy8DaisyPod10UpdateLedsEv
__aeabi_atexit
__dso_handle
