ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Jellybeans.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy9ParameterD2Ev,"axG",%progbits,_ZN5daisy9ParameterD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy9ParameterD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy9ParameterD2Ev:
  27              	.LVL0:
  28              	.LFB3867:
  29              		.file 1 "../../libdaisy/src/hid/parameter.h"
   1:../../libdaisy/src/hid/parameter.h **** #pragma once
   2:../../libdaisy/src/hid/parameter.h **** #include <stdint.h>
   3:../../libdaisy/src/hid/parameter.h **** #include "hid/ctrl.h"
   4:../../libdaisy/src/hid/parameter.h **** 
   5:../../libdaisy/src/hid/parameter.h **** namespace daisy
   6:../../libdaisy/src/hid/parameter.h **** {
   7:../../libdaisy/src/hid/parameter.h **** /** @addtogroup controls
   8:../../libdaisy/src/hid/parameter.h ****     @{
   9:../../libdaisy/src/hid/parameter.h **** */
  10:../../libdaisy/src/hid/parameter.h **** 
  11:../../libdaisy/src/hid/parameter.h **** /**      Simple parameter mapping tool that takes a 0-1 input from an hid_ctrl. */
  12:../../libdaisy/src/hid/parameter.h **** class Parameter
  13:../../libdaisy/src/hid/parameter.h **** {
  14:../../libdaisy/src/hid/parameter.h ****   public:
  15:../../libdaisy/src/hid/parameter.h ****     /** Curves are applied to the output signal */
  16:../../libdaisy/src/hid/parameter.h ****     enum Curve
  17:../../libdaisy/src/hid/parameter.h ****     {
  18:../../libdaisy/src/hid/parameter.h ****         LINEAR,      /**< Linear curve */
  19:../../libdaisy/src/hid/parameter.h ****         EXPONENTIAL, /**< Exponential curve */
  20:../../libdaisy/src/hid/parameter.h ****         LOGARITHMIC, /**<  Logarithmic curve */
  21:../../libdaisy/src/hid/parameter.h ****         CUBE,        /**< Cubic curve */
  22:../../libdaisy/src/hid/parameter.h ****         LAST,        /**< Final enum element. */
  23:../../libdaisy/src/hid/parameter.h ****     };
  24:../../libdaisy/src/hid/parameter.h ****     /** Constructor */
  25:../../libdaisy/src/hid/parameter.h ****     Parameter() {}
  26:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
  27:../../libdaisy/src/hid/parameter.h ****     ~Parameter() {}
  30              		.loc 1 27 5 view -0
  31              		.cfi_startproc
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 2


  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB4542:
  36              	.LBI4542:
  37              		.file 2 "../../libdaisy/src/hid/ctrl.h"
   1:../../libdaisy/src/hid/ctrl.h **** #pragma once
   2:../../libdaisy/src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libdaisy/src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libdaisy/src/hid/ctrl.h **** #include <stdint.h>
   5:../../libdaisy/src/hid/ctrl.h **** 
   6:../../libdaisy/src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libdaisy/src/hid/ctrl.h **** namespace daisy
   8:../../libdaisy/src/hid/ctrl.h **** {
   9:../../libdaisy/src/hid/ctrl.h **** /**
  10:../../libdaisy/src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libdaisy/src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libdaisy/src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libdaisy/src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libdaisy/src/hid/ctrl.h ****     @date November 2019
  15:../../libdaisy/src/hid/ctrl.h ****     @ingroup controls
  16:../../libdaisy/src/hid/ctrl.h **** */
  17:../../libdaisy/src/hid/ctrl.h **** class AnalogControl
  18:../../libdaisy/src/hid/ctrl.h **** {
  19:../../libdaisy/src/hid/ctrl.h ****   public:
  20:../../libdaisy/src/hid/ctrl.h ****     /** Constructor */
  21:../../libdaisy/src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
  23:../../libdaisy/src/hid/ctrl.h ****     ~AnalogControl() {}
  38              		.loc 2 23 5 view .LVU1
  39              		.loc 2 23 5 is_stmt 0 view .LVU2
  40              	.LBE4542:
  41              		.loc 1 27 19 view .LVU3
  42 0000 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE3867:
  46              		.weak	_ZN5daisy9ParameterD1Ev
  47              		.thumb_set _ZN5daisy9ParameterD1Ev,_ZN5daisy9ParameterD2Ev
  48 0002 00BF     		.section	.text._ZN5daisy10DaisyPatchD2Ev,"axG",%progbits,_ZN5daisy10DaisyPatchD5Ev,comdat
  49              		.align	1
  50              		.p2align 2,,3
  51              		.weak	_ZN5daisy10DaisyPatchD2Ev
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu fpv5-d16
  57              	_ZN5daisy10DaisyPatchD2Ev:
  58              	.LVL1:
  59              	.LFB4414:
  60              		.file 3 "../../libdaisy/src/daisy_patch.h"
   1:../../libdaisy/src/daisy_patch.h **** #pragma once
   2:../../libdaisy/src/daisy_patch.h **** #ifndef DSY_PATCH_BSP_H
   3:../../libdaisy/src/daisy_patch.h **** #define DSY_PATCH_BSP_H
   4:../../libdaisy/src/daisy_patch.h **** #include "daisy_seed.h"
   5:../../libdaisy/src/daisy_patch.h **** #include "dev/oled_ssd130x.h"
   6:../../libdaisy/src/daisy_patch.h **** 
   7:../../libdaisy/src/daisy_patch.h **** namespace daisy
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 3


   8:../../libdaisy/src/daisy_patch.h **** {
   9:../../libdaisy/src/daisy_patch.h **** /**
  10:../../libdaisy/src/daisy_patch.h ****     @brief Class that handles initializing all of the hardware specific to the Daisy Patch Board. \
  11:../../libdaisy/src/daisy_patch.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
  12:../../libdaisy/src/daisy_patch.h ****     @author Stephen Hensley
  13:../../libdaisy/src/daisy_patch.h ****     @date November 2019
  14:../../libdaisy/src/daisy_patch.h ****     @ingroup boards
  15:../../libdaisy/src/daisy_patch.h **** */
  16:../../libdaisy/src/daisy_patch.h **** class DaisyPatch
  17:../../libdaisy/src/daisy_patch.h **** {
  18:../../libdaisy/src/daisy_patch.h ****   public:
  19:../../libdaisy/src/daisy_patch.h ****     /** Enum of Ctrls to represent the four CV/Knob combos on the Patch
  20:../../libdaisy/src/daisy_patch.h ****      */
  21:../../libdaisy/src/daisy_patch.h ****     enum Ctrl
  22:../../libdaisy/src/daisy_patch.h ****     {
  23:../../libdaisy/src/daisy_patch.h ****         CTRL_1,    /**< */
  24:../../libdaisy/src/daisy_patch.h ****         CTRL_2,    /**< */
  25:../../libdaisy/src/daisy_patch.h ****         CTRL_3,    /**< */
  26:../../libdaisy/src/daisy_patch.h ****         CTRL_4,    /**< */
  27:../../libdaisy/src/daisy_patch.h ****         CTRL_LAST, /**< */
  28:../../libdaisy/src/daisy_patch.h ****     };
  29:../../libdaisy/src/daisy_patch.h **** 
  30:../../libdaisy/src/daisy_patch.h ****     /** Daisy patch gate inputs */
  31:../../libdaisy/src/daisy_patch.h ****     enum GateInput
  32:../../libdaisy/src/daisy_patch.h ****     {
  33:../../libdaisy/src/daisy_patch.h ****         GATE_IN_1,    /**< */
  34:../../libdaisy/src/daisy_patch.h ****         GATE_IN_2,    /** <*/
  35:../../libdaisy/src/daisy_patch.h ****         GATE_IN_LAST, /**< */
  36:../../libdaisy/src/daisy_patch.h ****     };
  37:../../libdaisy/src/daisy_patch.h **** 
  38:../../libdaisy/src/daisy_patch.h ****     /** Constructor */
  39:../../libdaisy/src/daisy_patch.h ****     DaisyPatch() {}
  40:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
  41:../../libdaisy/src/daisy_patch.h ****     ~DaisyPatch() {}
  61              		.loc 3 41 5 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.LBB4543:
  67              	.LBI4543:
  68              		.file 4 "../../libdaisy/src/hid/disp/oled_display.h"
   1:../../libdaisy/src/hid/disp/oled_display.h **** #pragma once
   2:../../libdaisy/src/hid/disp/oled_display.h **** #ifndef DSY_OLED_DISPLAY_H
   3:../../libdaisy/src/hid/disp/oled_display.h **** #define DSY_OLED_DISPLAY_H /**< Macro */
   4:../../libdaisy/src/hid/disp/oled_display.h **** 
   5:../../libdaisy/src/hid/disp/oled_display.h **** #include "display.h"
   6:../../libdaisy/src/hid/disp/oled_display.h **** 
   7:../../libdaisy/src/hid/disp/oled_display.h **** namespace daisy
   8:../../libdaisy/src/hid/disp/oled_display.h **** {
   9:../../libdaisy/src/hid/disp/oled_display.h **** /** 
  10:../../libdaisy/src/hid/disp/oled_display.h ****  * This class is for drawing to a monochrome OLED display. 
  11:../../libdaisy/src/hid/disp/oled_display.h **** */
  12:../../libdaisy/src/hid/disp/oled_display.h **** template <typename DisplayDriver>
  13:../../libdaisy/src/hid/disp/oled_display.h **** class OledDisplay : public OneBitGraphicsDisplayImpl<OledDisplay<DisplayDriver>>
  14:../../libdaisy/src/hid/disp/oled_display.h **** {
  15:../../libdaisy/src/hid/disp/oled_display.h ****   public:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 4


  16:../../libdaisy/src/hid/disp/oled_display.h ****     OledDisplay() {}
  17:../../libdaisy/src/hid/disp/oled_display.h ****     virtual ~OledDisplay() {}
  69              		.loc 4 17 13 view .LVU5
  70              	.LBB4544:
  71              	.LBI4544:
  72              		.file 5 "../../libdaisy/src/hid/disp/display.h"
   1:../../libdaisy/src/hid/disp/display.h **** #pragma once
   2:../../libdaisy/src/hid/disp/display.h **** #ifndef DSY_DISPLAY_H
   3:../../libdaisy/src/hid/disp/display.h **** #define DSY_DISPLAY_H /**< Macro */
   4:../../libdaisy/src/hid/disp/display.h **** #include <cmath>
   5:../../libdaisy/src/hid/disp/display.h **** #include "util/oled_fonts.h"
   6:../../libdaisy/src/hid/disp/display.h **** #include "daisy_core.h"
   7:../../libdaisy/src/hid/disp/display.h **** #include "graphics_common.h"
   8:../../libdaisy/src/hid/disp/display.h **** 
   9:../../libdaisy/src/hid/disp/display.h **** #ifndef deg2rad
  10:../../libdaisy/src/hid/disp/display.h **** #define deg2rad(deg) ((deg)*3.141592 / 180.0)
  11:../../libdaisy/src/hid/disp/display.h **** #endif
  12:../../libdaisy/src/hid/disp/display.h **** 
  13:../../libdaisy/src/hid/disp/display.h **** namespace daisy
  14:../../libdaisy/src/hid/disp/display.h **** {
  15:../../libdaisy/src/hid/disp/display.h **** /** 
  16:../../libdaisy/src/hid/disp/display.h ****  * This interface is used as a base class for all types of 1bit-per-pixel
  17:../../libdaisy/src/hid/disp/display.h ****  * graphics displays.
  18:../../libdaisy/src/hid/disp/display.h **** */
  19:../../libdaisy/src/hid/disp/display.h **** class OneBitGraphicsDisplay
  20:../../libdaisy/src/hid/disp/display.h **** {
  21:../../libdaisy/src/hid/disp/display.h ****   public:
  22:../../libdaisy/src/hid/disp/display.h ****     OneBitGraphicsDisplay() {}
  23:../../libdaisy/src/hid/disp/display.h ****     virtual ~OneBitGraphicsDisplay() {}
  24:../../libdaisy/src/hid/disp/display.h **** 
  25:../../libdaisy/src/hid/disp/display.h ****     virtual uint16_t Height() const = 0;
  26:../../libdaisy/src/hid/disp/display.h ****     virtual uint16_t Width() const  = 0;
  27:../../libdaisy/src/hid/disp/display.h **** 
  28:../../libdaisy/src/hid/disp/display.h ****     Rectangle GetBounds() const
  29:../../libdaisy/src/hid/disp/display.h ****     {
  30:../../libdaisy/src/hid/disp/display.h ****         return Rectangle(int16_t(Width()), int16_t(Height()));
  31:../../libdaisy/src/hid/disp/display.h ****     }
  32:../../libdaisy/src/hid/disp/display.h **** 
  33:../../libdaisy/src/hid/disp/display.h **** 
  34:../../libdaisy/src/hid/disp/display.h ****     size_t CurrentX() { return currentX_; };
  35:../../libdaisy/src/hid/disp/display.h ****     size_t CurrentY() { return currentY_; };
  36:../../libdaisy/src/hid/disp/display.h **** 
  37:../../libdaisy/src/hid/disp/display.h ****     /** 
  38:../../libdaisy/src/hid/disp/display.h ****     Fills the entire display with either on/off.
  39:../../libdaisy/src/hid/disp/display.h ****     \param on Sets on or off.
  40:../../libdaisy/src/hid/disp/display.h ****     */
  41:../../libdaisy/src/hid/disp/display.h ****     virtual void Fill(bool on) = 0;
  42:../../libdaisy/src/hid/disp/display.h **** 
  43:../../libdaisy/src/hid/disp/display.h ****     /**
  44:../../libdaisy/src/hid/disp/display.h ****     Sets the pixel at the specified coordinate to be on/off.
  45:../../libdaisy/src/hid/disp/display.h ****     \param x   x Coordinate
  46:../../libdaisy/src/hid/disp/display.h ****     \param y   y coordinate
  47:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
  48:../../libdaisy/src/hid/disp/display.h ****     */
  49:../../libdaisy/src/hid/disp/display.h ****     virtual void DrawPixel(uint_fast8_t x, uint_fast8_t y, bool on) = 0;
  50:../../libdaisy/src/hid/disp/display.h **** 
  51:../../libdaisy/src/hid/disp/display.h ****     /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 5


  52:../../libdaisy/src/hid/disp/display.h ****     Draws a line from (x1, y1) to (y1, y2)
  53:../../libdaisy/src/hid/disp/display.h ****     \param x1  x Coordinate of the starting point
  54:../../libdaisy/src/hid/disp/display.h ****     \param y1  y Coordinate of the starting point
  55:../../libdaisy/src/hid/disp/display.h ****     \param x2  x Coordinate of the ending point
  56:../../libdaisy/src/hid/disp/display.h ****     \param y2  y Coordinate of the ending point
  57:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
  58:../../libdaisy/src/hid/disp/display.h ****     */
  59:../../libdaisy/src/hid/disp/display.h ****     virtual void DrawLine(uint_fast8_t x1,
  60:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t y1,
  61:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t x2,
  62:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t y2,
  63:../../libdaisy/src/hid/disp/display.h ****                           bool         on)
  64:../../libdaisy/src/hid/disp/display.h ****         = 0;
  65:../../libdaisy/src/hid/disp/display.h **** 
  66:../../libdaisy/src/hid/disp/display.h ****     /**
  67:../../libdaisy/src/hid/disp/display.h ****     Draws a rectangle based on two coordinates.
  68:../../libdaisy/src/hid/disp/display.h ****     \param x1 x Coordinate of the first point
  69:../../libdaisy/src/hid/disp/display.h ****     \param y1 y Coordinate of the first point
  70:../../libdaisy/src/hid/disp/display.h ****     \param x2 x Coordinate of the second point
  71:../../libdaisy/src/hid/disp/display.h ****     \param y2 y Coordinate of the second point
  72:../../libdaisy/src/hid/disp/display.h ****     \param on on or off
  73:../../libdaisy/src/hid/disp/display.h ****     \param fill fill the rectangle or draw only the outline
  74:../../libdaisy/src/hid/disp/display.h ****     */
  75:../../libdaisy/src/hid/disp/display.h ****     virtual void DrawRect(uint_fast8_t x1,
  76:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t y1,
  77:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t x2,
  78:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t y2,
  79:../../libdaisy/src/hid/disp/display.h ****                           bool         on,
  80:../../libdaisy/src/hid/disp/display.h ****                           bool         fill = false)
  81:../../libdaisy/src/hid/disp/display.h ****         = 0;
  82:../../libdaisy/src/hid/disp/display.h **** 
  83:../../libdaisy/src/hid/disp/display.h ****     /**
  84:../../libdaisy/src/hid/disp/display.h ****     Draws a rectangle.
  85:../../libdaisy/src/hid/disp/display.h ****     \param rect the rectangle
  86:../../libdaisy/src/hid/disp/display.h ****     \param on   on or off
  87:../../libdaisy/src/hid/disp/display.h ****     \param fill fill the rectangle or draw only the outline
  88:../../libdaisy/src/hid/disp/display.h ****     */
  89:../../libdaisy/src/hid/disp/display.h ****     void DrawRect(const Rectangle& rect, bool on, bool fill = false)
  90:../../libdaisy/src/hid/disp/display.h ****     {
  91:../../libdaisy/src/hid/disp/display.h ****         DrawRect(rect.GetX(),
  92:../../libdaisy/src/hid/disp/display.h ****                  rect.GetY(),
  93:../../libdaisy/src/hid/disp/display.h ****                  rect.GetRight(),
  94:../../libdaisy/src/hid/disp/display.h ****                  rect.GetBottom(),
  95:../../libdaisy/src/hid/disp/display.h ****                  on,
  96:../../libdaisy/src/hid/disp/display.h ****                  fill);
  97:../../libdaisy/src/hid/disp/display.h ****     }
  98:../../libdaisy/src/hid/disp/display.h **** 
  99:../../libdaisy/src/hid/disp/display.h ****     /**
 100:../../libdaisy/src/hid/disp/display.h ****     Draws an arc around the specified coordinate
 101:../../libdaisy/src/hid/disp/display.h ****     \param x           x Coordinate of the center of the arc
 102:../../libdaisy/src/hid/disp/display.h ****     \param y           y Coordinate of the center of the arc
 103:../../libdaisy/src/hid/disp/display.h ****     \param radius      radius of the arc
 104:../../libdaisy/src/hid/disp/display.h ****     \param start_angle angle where to start the arc
 105:../../libdaisy/src/hid/disp/display.h ****     \param sweep       total angle of the arc
 106:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
 107:../../libdaisy/src/hid/disp/display.h ****     */
 108:../../libdaisy/src/hid/disp/display.h ****     virtual void DrawArc(uint_fast8_t x,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 6


 109:../../libdaisy/src/hid/disp/display.h ****                          uint_fast8_t y,
 110:../../libdaisy/src/hid/disp/display.h ****                          uint_fast8_t radius,
 111:../../libdaisy/src/hid/disp/display.h ****                          int_fast16_t start_angle,
 112:../../libdaisy/src/hid/disp/display.h ****                          int_fast16_t sweep,
 113:../../libdaisy/src/hid/disp/display.h ****                          bool         on)
 114:../../libdaisy/src/hid/disp/display.h ****         = 0;
 115:../../libdaisy/src/hid/disp/display.h **** 
 116:../../libdaisy/src/hid/disp/display.h ****     /**
 117:../../libdaisy/src/hid/disp/display.h ****     Draws a circle around the specified coordinate
 118:../../libdaisy/src/hid/disp/display.h ****     \param x           x Coordinate of the center of the circle
 119:../../libdaisy/src/hid/disp/display.h ****     \param y           y Coordinate of the center of the circle
 120:../../libdaisy/src/hid/disp/display.h ****     \param radius      radius of the circle
 121:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
 122:../../libdaisy/src/hid/disp/display.h ****     */
 123:../../libdaisy/src/hid/disp/display.h ****     void
 124:../../libdaisy/src/hid/disp/display.h ****     DrawCircle(uint_fast8_t x, uint_fast8_t y, uint_fast8_t radius, bool on)
 125:../../libdaisy/src/hid/disp/display.h ****     {
 126:../../libdaisy/src/hid/disp/display.h ****         DrawArc(x, y, radius, 0, 360, on);
 127:../../libdaisy/src/hid/disp/display.h ****     };
 128:../../libdaisy/src/hid/disp/display.h **** 
 129:../../libdaisy/src/hid/disp/display.h ****     /** 
 130:../../libdaisy/src/hid/disp/display.h ****     Writes the character with the specific FontDef
 131:../../libdaisy/src/hid/disp/display.h ****     to the display buffer at the current Cursor position.
 132:../../libdaisy/src/hid/disp/display.h ****     \param ch character to be written
 133:../../libdaisy/src/hid/disp/display.h ****     \param font font to be written in
 134:../../libdaisy/src/hid/disp/display.h ****     \param on    on or off
 135:../../libdaisy/src/hid/disp/display.h ****     \return &
 136:../../libdaisy/src/hid/disp/display.h ****     */
 137:../../libdaisy/src/hid/disp/display.h ****     virtual char WriteChar(char ch, FontDef font, bool on) = 0;
 138:../../libdaisy/src/hid/disp/display.h **** 
 139:../../libdaisy/src/hid/disp/display.h ****     /** 
 140:../../libdaisy/src/hid/disp/display.h ****     Similar to WriteChar, except it will handle an entire String.
 141:../../libdaisy/src/hid/disp/display.h ****     Wrapping does not happen automatically, so the width
 142:../../libdaisy/src/hid/disp/display.h ****     of the string must be kept within the dimensions of the screen.
 143:../../libdaisy/src/hid/disp/display.h ****     \param str string to be written
 144:../../libdaisy/src/hid/disp/display.h ****     \param font font to use
 145:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
 146:../../libdaisy/src/hid/disp/display.h ****     \return &
 147:../../libdaisy/src/hid/disp/display.h ****     */
 148:../../libdaisy/src/hid/disp/display.h ****     virtual char WriteString(const char* str, FontDef font, bool on) = 0;
 149:../../libdaisy/src/hid/disp/display.h **** 
 150:../../libdaisy/src/hid/disp/display.h ****     /** 
 151:../../libdaisy/src/hid/disp/display.h ****     Similar to WriteString but justified within a bounding box.
 152:../../libdaisy/src/hid/disp/display.h ****     \param str          string to be written
 153:../../libdaisy/src/hid/disp/display.h ****     \param font         font to use
 154:../../libdaisy/src/hid/disp/display.h ****     \param boundingBox  the bounding box to draw the text in
 155:../../libdaisy/src/hid/disp/display.h ****     \param alignment    the alignment to use
 156:../../libdaisy/src/hid/disp/display.h ****     \param on           on or off
 157:../../libdaisy/src/hid/disp/display.h ****     \return The rectangle that was drawn to
 158:../../libdaisy/src/hid/disp/display.h ****     */
 159:../../libdaisy/src/hid/disp/display.h ****     virtual Rectangle WriteStringAligned(const char*    str,
 160:../../libdaisy/src/hid/disp/display.h ****                                          const FontDef& font,
 161:../../libdaisy/src/hid/disp/display.h ****                                          Rectangle      boundingBox,
 162:../../libdaisy/src/hid/disp/display.h ****                                          Alignment      alignment,
 163:../../libdaisy/src/hid/disp/display.h ****                                          bool           on)
 164:../../libdaisy/src/hid/disp/display.h ****         = 0;
 165:../../libdaisy/src/hid/disp/display.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 7


 166:../../libdaisy/src/hid/disp/display.h ****     /** 
 167:../../libdaisy/src/hid/disp/display.h ****     Moves the 'Cursor' position used for WriteChar, and WriteStr to the specified coordinate.
 168:../../libdaisy/src/hid/disp/display.h ****     \param x x pos
 169:../../libdaisy/src/hid/disp/display.h ****     \param y y pos
 170:../../libdaisy/src/hid/disp/display.h ****     */
 171:../../libdaisy/src/hid/disp/display.h ****     void SetCursor(uint16_t x, uint16_t y)
 172:../../libdaisy/src/hid/disp/display.h ****     {
 173:../../libdaisy/src/hid/disp/display.h ****         currentX_ = (x >= Width()) ? Width() - 1 : x;
 174:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 175:../../libdaisy/src/hid/disp/display.h ****     }
 176:../../libdaisy/src/hid/disp/display.h **** 
 177:../../libdaisy/src/hid/disp/display.h ****     /** 
 178:../../libdaisy/src/hid/disp/display.h ****     Writes the current display buffer to the OLED device using SPI or I2C depending on 
 179:../../libdaisy/src/hid/disp/display.h ****     how the object was initialized.
 180:../../libdaisy/src/hid/disp/display.h ****     */
 181:../../libdaisy/src/hid/disp/display.h ****     virtual void Update() = 0;
 182:../../libdaisy/src/hid/disp/display.h **** 
 183:../../libdaisy/src/hid/disp/display.h ****   protected:
 184:../../libdaisy/src/hid/disp/display.h ****     uint16_t currentX_;
 185:../../libdaisy/src/hid/disp/display.h ****     uint16_t currentY_;
 186:../../libdaisy/src/hid/disp/display.h **** };
 187:../../libdaisy/src/hid/disp/display.h **** 
 188:../../libdaisy/src/hid/disp/display.h **** /** This class is intended as a intermediary class for your actual implementation of the OneBitGrap
 189:../../libdaisy/src/hid/disp/display.h ****  *  interface. It uses the CRTP design pattern where the template argument is the child class. It p
 190:../../libdaisy/src/hid/disp/display.h ****  *  implementations for most of the functions, except DrawPixel(), Update() and Fill(), which you'l
 191:../../libdaisy/src/hid/disp/display.h ****  *  to provide in your child class.
 192:../../libdaisy/src/hid/disp/display.h ****  *  The main goal of this class is to provide common drawing functions without relying on massive a
 193:../../libdaisy/src/hid/disp/display.h ****  *  virtual function calls that would result in a performance loss. To achieve this, any drawing fu
 194:../../libdaisy/src/hid/disp/display.h ****  *  is implemented here and internally calls other drawing functions (e.g. DrawRect() which interna
 195:../../libdaisy/src/hid/disp/display.h ****  *  DrawPixel() and DrawLine()) makes these calls via the qualified name of these functions to expl
 196:../../libdaisy/src/hid/disp/display.h ****  *  suppress the virtual dispatch mechanism like this:
 197:../../libdaisy/src/hid/disp/display.h ****  * 
 198:../../libdaisy/src/hid/disp/display.h ****  *      ChildType::DrawPixel(...); // no virtual function call; direct call into the child class fu
 199:../../libdaisy/src/hid/disp/display.h ****  *  
 200:../../libdaisy/src/hid/disp/display.h ****  *  To create a custom OneBitGraphicsDisplay implementation, you can 
 201:../../libdaisy/src/hid/disp/display.h ****  *  A) inherit from OneBitGraphicsDisplay directly and provide all the drawing functions yourself
 202:../../libdaisy/src/hid/disp/display.h ****  *  B) Inherit from OneBitGraphicsDisplayImpl and only provide DrawPixel(), Fill() and Update()
 203:../../libdaisy/src/hid/disp/display.h ****  *     like this:
 204:../../libdaisy/src/hid/disp/display.h ****  *  
 205:../../libdaisy/src/hid/disp/display.h ****  *      class MyDisplayClass : public OneBitGraphicsDisplayImpl<MyDisplayClass> 
 206:../../libdaisy/src/hid/disp/display.h ****  *      {
 207:../../libdaisy/src/hid/disp/display.h ****  *      public:
 208:../../libdaisy/src/hid/disp/display.h ****  *          void Fill() override { ... };
 209:../../libdaisy/src/hid/disp/display.h ****  *          void DrawPixel(uint_fast8_t x, uint_fast8_t y, bool on) override { ... };
 210:../../libdaisy/src/hid/disp/display.h ****  *          void Update() override { ... }
 211:../../libdaisy/src/hid/disp/display.h ****  *      };
 212:../../libdaisy/src/hid/disp/display.h ****  *  
 213:../../libdaisy/src/hid/disp/display.h ****  */
 214:../../libdaisy/src/hid/disp/display.h **** template <class ChildType>
 215:../../libdaisy/src/hid/disp/display.h **** class OneBitGraphicsDisplayImpl : public OneBitGraphicsDisplay
 216:../../libdaisy/src/hid/disp/display.h **** {
 217:../../libdaisy/src/hid/disp/display.h ****   public:
 218:../../libdaisy/src/hid/disp/display.h ****     OneBitGraphicsDisplayImpl() {}
 219:../../libdaisy/src/hid/disp/display.h ****     virtual ~OneBitGraphicsDisplayImpl() {}
  73              		.loc 5 219 13 view .LVU6
  74              	.LBB4545:
  75              	.LBI4545:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 8


  23:../../libdaisy/src/hid/disp/display.h **** 
  76              		.loc 5 23 13 view .LVU7
  23:../../libdaisy/src/hid/disp/display.h **** 
  77              		.loc 5 23 13 is_stmt 0 view .LVU8
  78              	.LBE4545:
  79              	.LBE4544:
  80              	.LBE4543:
  81              	.LBB4546:
  82              	.LBI4546:
  83              		.file 6 "../../libdaisy/src/hid/midi.h"
   1:../../libdaisy/src/hid/midi.h **** #pragma once
   2:../../libdaisy/src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../../libdaisy/src/hid/midi.h **** #define DSY_MIDI_H
   4:../../libdaisy/src/hid/midi.h **** 
   5:../../libdaisy/src/hid/midi.h **** // TODO: make this adjustable
   6:../../libdaisy/src/hid/midi.h **** #define SYSEX_BUFFER_LEN 128
   7:../../libdaisy/src/hid/midi.h **** 
   8:../../libdaisy/src/hid/midi.h **** #include <stdint.h>
   9:../../libdaisy/src/hid/midi.h **** #include <stdlib.h>
  10:../../libdaisy/src/hid/midi.h **** #include "per/uart.h"
  11:../../libdaisy/src/hid/midi.h **** #include "util/ringbuffer.h"
  12:../../libdaisy/src/hid/midi.h **** #include "hid/MidiEvent.h"
  13:../../libdaisy/src/hid/midi.h **** #include "hid/usb_midi.h"
  14:../../libdaisy/src/hid/midi.h **** #include "sys/system.h"
  15:../../libdaisy/src/hid/midi.h **** 
  16:../../libdaisy/src/hid/midi.h **** namespace daisy
  17:../../libdaisy/src/hid/midi.h **** {
  18:../../libdaisy/src/hid/midi.h **** /** @addtogroup external 
  19:../../libdaisy/src/hid/midi.h ****     @{ 
  20:../../libdaisy/src/hid/midi.h **** */
  21:../../libdaisy/src/hid/midi.h **** 
  22:../../libdaisy/src/hid/midi.h **** class MidiUartTransport
  23:../../libdaisy/src/hid/midi.h **** {
  24:../../libdaisy/src/hid/midi.h ****   public:
  25:../../libdaisy/src/hid/midi.h ****     MidiUartTransport() {}
  26:../../libdaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
  27:../../libdaisy/src/hid/midi.h **** 
  28:../../libdaisy/src/hid/midi.h ****     struct Config
  29:../../libdaisy/src/hid/midi.h ****     {
  30:../../libdaisy/src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  31:../../libdaisy/src/hid/midi.h ****         dsy_gpio_pin                    rx;
  32:../../libdaisy/src/hid/midi.h ****         dsy_gpio_pin                    tx;
  33:../../libdaisy/src/hid/midi.h **** 
  34:../../libdaisy/src/hid/midi.h ****         Config()
  35:../../libdaisy/src/hid/midi.h ****         {
  36:../../libdaisy/src/hid/midi.h ****             periph = UartHandler::Config::Peripheral::USART_1;
  37:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
  38:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
  39:../../libdaisy/src/hid/midi.h ****         }
  40:../../libdaisy/src/hid/midi.h ****     };
  41:../../libdaisy/src/hid/midi.h **** 
  42:../../libdaisy/src/hid/midi.h ****     inline void Init(Config config)
  43:../../libdaisy/src/hid/midi.h ****     {
  44:../../libdaisy/src/hid/midi.h ****         UartHandler::Config uart_config;
  45:../../libdaisy/src/hid/midi.h **** 
  46:../../libdaisy/src/hid/midi.h ****         //defaults
  47:../../libdaisy/src/hid/midi.h ****         uart_config.baudrate   = 31250;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 9


  48:../../libdaisy/src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  49:../../libdaisy/src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  50:../../libdaisy/src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  51:../../libdaisy/src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  52:../../libdaisy/src/hid/midi.h **** 
  53:../../libdaisy/src/hid/midi.h ****         //user settings
  54:../../libdaisy/src/hid/midi.h ****         uart_config.periph        = config.periph;
  55:../../libdaisy/src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  56:../../libdaisy/src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  57:../../libdaisy/src/hid/midi.h **** 
  58:../../libdaisy/src/hid/midi.h ****         uart_.Init(uart_config);
  59:../../libdaisy/src/hid/midi.h ****     }
  60:../../libdaisy/src/hid/midi.h **** 
  61:../../libdaisy/src/hid/midi.h ****     inline void    StartRx() { uart_.StartRx(); }
  62:../../libdaisy/src/hid/midi.h ****     inline size_t  Readable() { return uart_.Readable(); }
  63:../../libdaisy/src/hid/midi.h ****     inline uint8_t Rx() { return uart_.PopRx(); }
  64:../../libdaisy/src/hid/midi.h ****     inline bool    RxActive() { return uart_.RxActive(); }
  65:../../libdaisy/src/hid/midi.h ****     inline void    FlushRx() { uart_.FlushRx(); }
  66:../../libdaisy/src/hid/midi.h ****     inline void    Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
  67:../../libdaisy/src/hid/midi.h **** 
  68:../../libdaisy/src/hid/midi.h ****   private:
  69:../../libdaisy/src/hid/midi.h ****     UartHandler uart_;
  70:../../libdaisy/src/hid/midi.h **** };
  71:../../libdaisy/src/hid/midi.h **** 
  72:../../libdaisy/src/hid/midi.h **** /** 
  73:../../libdaisy/src/hid/midi.h ****     @brief Simple MIDI Handler \n 
  74:../../libdaisy/src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n 
  75:../../libdaisy/src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
  76:../../libdaisy/src/hid/midi.h ****     @author shensley
  77:../../libdaisy/src/hid/midi.h ****     @date March 2020
  78:../../libdaisy/src/hid/midi.h **** */
  79:../../libdaisy/src/hid/midi.h **** template <typename Transport>
  80:../../libdaisy/src/hid/midi.h **** class MidiHandler
  81:../../libdaisy/src/hid/midi.h **** {
  82:../../libdaisy/src/hid/midi.h ****   public:
  83:../../libdaisy/src/hid/midi.h ****     MidiHandler() {}
  84:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
  84              		.loc 6 84 5 is_stmt 1 view .LVU9
  85              	.LBB4547:
  86              	.LBI4547:
  26:../../libdaisy/src/hid/midi.h **** 
  87              		.loc 6 26 5 view .LVU10
  26:../../libdaisy/src/hid/midi.h **** 
  88              		.loc 6 26 5 is_stmt 0 view .LVU11
  89              	.LBE4547:
  90              	.LBE4546:
  91              	.LBB4548:
  92              	.LBI4548:
  93              		.file 7 "../../libdaisy/src/hid/encoder.h"
   1:../../libdaisy/src/hid/encoder.h **** #pragma once
   2:../../libdaisy/src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../../libdaisy/src/hid/encoder.h **** #define DSY_ENCODER_H
   4:../../libdaisy/src/hid/encoder.h **** #include "daisy_core.h"
   5:../../libdaisy/src/hid/encoder.h **** #include "per/gpio.h"
   6:../../libdaisy/src/hid/encoder.h **** #include "hid/switch.h"
   7:../../libdaisy/src/hid/encoder.h **** 
   8:../../libdaisy/src/hid/encoder.h **** namespace daisy
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 10


   9:../../libdaisy/src/hid/encoder.h **** {
  10:../../libdaisy/src/hid/encoder.h **** /** 
  11:../../libdaisy/src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../../libdaisy/src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../../libdaisy/src/hid/encoder.h ****     @author Stephen Hensley
  14:../../libdaisy/src/hid/encoder.h ****     @date December 2019
  15:../../libdaisy/src/hid/encoder.h ****     @ingroup controls
  16:../../libdaisy/src/hid/encoder.h **** */
  17:../../libdaisy/src/hid/encoder.h **** class Encoder
  18:../../libdaisy/src/hid/encoder.h **** {
  19:../../libdaisy/src/hid/encoder.h ****   public:
  20:../../libdaisy/src/hid/encoder.h ****     Encoder() {}
  21:../../libdaisy/src/hid/encoder.h ****     ~Encoder() {}
  94              		.loc 7 21 5 is_stmt 1 view .LVU12
  95              	.LBB4549:
  96              	.LBI4549:
  97              		.file 8 "../../libdaisy/src/hid/switch.h"
   1:../../libdaisy/src/hid/switch.h **** #pragma once
   2:../../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../../libdaisy/src/hid/switch.h **** #include "sys/system.h"
   7:../../libdaisy/src/hid/switch.h **** 
   8:../../libdaisy/src/hid/switch.h **** namespace daisy
   9:../../libdaisy/src/hid/switch.h **** {
  10:../../libdaisy/src/hid/switch.h **** /** 
  11:../../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  14:../../libdaisy/src/hid/switch.h ****     @date December 2019
  15:../../libdaisy/src/hid/switch.h ****     @ingroup controls
  16:../../libdaisy/src/hid/switch.h **** */
  17:../../libdaisy/src/hid/switch.h **** class Switch
  18:../../libdaisy/src/hid/switch.h **** {
  19:../../libdaisy/src/hid/switch.h ****   public:
  20:../../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libdaisy/src/hid/switch.h ****     enum Type
  22:../../libdaisy/src/hid/switch.h ****     {
  23:../../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libdaisy/src/hid/switch.h ****     };
  26:../../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libdaisy/src/hid/switch.h ****     enum Polarity
  28:../../libdaisy/src/hid/switch.h ****     {
  29:../../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libdaisy/src/hid/switch.h ****     };
  32:../../libdaisy/src/hid/switch.h **** 
  33:../../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libdaisy/src/hid/switch.h ****     enum Pull
  35:../../libdaisy/src/hid/switch.h ****     {
  36:../../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libdaisy/src/hid/switch.h ****     };
  40:../../libdaisy/src/hid/switch.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 11


  41:../../libdaisy/src/hid/switch.h ****     Switch() {}
  42:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
  98              		.loc 8 42 5 view .LVU13
  99              		.loc 8 42 5 is_stmt 0 view .LVU14
 100              	.LBE4549:
 101              	.LBE4548:
 102              	.LBB4550:
 103              	.LBI4550:
 104              		.file 9 "../../libdaisy/src/daisy_seed.h"
   1:../../libdaisy/src/daisy_seed.h **** #pragma once
   2:../../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libdaisy/src/daisy_seed.h **** 
   5:../../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../../libdaisy/src/daisy_seed.h **** 
   7:../../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../../libdaisy/src/daisy_seed.h **** 
  10:../../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../../libdaisy/src/daisy_seed.h **** {
  12:../../libdaisy/src/daisy_seed.h **** /**
  13:../../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libdaisy/src/daisy_seed.h **** 
  16:../../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../../libdaisy/src/daisy_seed.h **** */
  18:../../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../../libdaisy/src/daisy_seed.h **** {
  20:../../libdaisy/src/daisy_seed.h ****   public:
  21:../../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 105              		.loc 9 22 5 is_stmt 1 view .LVU15
 106              	.LBB4551:
 107              	.LBI4551:
 108              		.file 10 "../../libdaisy/src/sys/system.h"
   1:../../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libdaisy/src/sys/system.h **** 
   4:../../libdaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libdaisy/src/sys/system.h **** 
   6:../../libdaisy/src/sys/system.h **** #include <cstdint>
   7:../../libdaisy/src/sys/system.h **** #include "per/tim.h"
   8:../../libdaisy/src/sys/system.h **** 
   9:../../libdaisy/src/sys/system.h **** namespace daisy
  10:../../libdaisy/src/sys/system.h **** {
  11:../../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libdaisy/src/sys/system.h ****  **
  15:../../libdaisy/src/sys/system.h ****  ** @author shensley
  16:../../libdaisy/src/sys/system.h ****  ** @addtogroup system
  17:../../libdaisy/src/sys/system.h ****  */
  18:../../libdaisy/src/sys/system.h **** class System
  19:../../libdaisy/src/sys/system.h **** {
  20:../../libdaisy/src/sys/system.h ****   public:
  21:../../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libdaisy/src/sys/system.h ****     struct Config
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 12


  23:../../libdaisy/src/sys/system.h ****     {
  24:../../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../../libdaisy/src/sys/system.h ****         {
  27:../../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../../libdaisy/src/sys/system.h ****         };
  30:../../libdaisy/src/sys/system.h **** 
  31:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  34:../../libdaisy/src/sys/system.h ****          ** */
  35:../../libdaisy/src/sys/system.h ****         void Defaults()
  36:../../libdaisy/src/sys/system.h ****         {
  37:../../libdaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libdaisy/src/sys/system.h ****             use_dcache  = true;
  39:../../libdaisy/src/sys/system.h ****             use_icache  = true;
  40:../../libdaisy/src/sys/system.h ****             skip_clocks = false;
  41:../../libdaisy/src/sys/system.h ****         }
  42:../../libdaisy/src/sys/system.h **** 
  43:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  46:../../libdaisy/src/sys/system.h ****          ** */
  47:../../libdaisy/src/sys/system.h ****         void Boost()
  48:../../libdaisy/src/sys/system.h ****         {
  49:../../libdaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libdaisy/src/sys/system.h ****             use_dcache  = true;
  51:../../libdaisy/src/sys/system.h ****             use_icache  = true;
  52:../../libdaisy/src/sys/system.h ****             skip_clocks = false;
  53:../../libdaisy/src/sys/system.h ****         }
  54:../../libdaisy/src/sys/system.h **** 
  55:../../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libdaisy/src/sys/system.h ****         bool       use_dcache;
  57:../../libdaisy/src/sys/system.h ****         bool       use_icache;
  58:../../libdaisy/src/sys/system.h ****         bool       skip_clocks;
  59:../../libdaisy/src/sys/system.h ****     };
  60:../../libdaisy/src/sys/system.h **** 
  61:../../libdaisy/src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libdaisy/src/sys/system.h ****      * 
  63:../../libdaisy/src/sys/system.h ****      */
  64:../../libdaisy/src/sys/system.h ****     enum MemoryRegion
  65:../../libdaisy/src/sys/system.h ****     {
  66:../../libdaisy/src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libdaisy/src/sys/system.h ****         ITCMRAM,
  68:../../libdaisy/src/sys/system.h ****         DTCMRAM,
  69:../../libdaisy/src/sys/system.h ****         SRAM_D1,
  70:../../libdaisy/src/sys/system.h ****         SRAM_D2,
  71:../../libdaisy/src/sys/system.h ****         SRAM_D3,
  72:../../libdaisy/src/sys/system.h ****         SDRAM,
  73:../../libdaisy/src/sys/system.h ****         QSPI,
  74:../../libdaisy/src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libdaisy/src/sys/system.h ****     };
  76:../../libdaisy/src/sys/system.h **** 
  77:../../libdaisy/src/sys/system.h ****     System() {}
  78:../../libdaisy/src/sys/system.h ****     ~System() {}
 109              		.loc 10 78 5 view .LVU16
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 13


 110              		.loc 10 78 5 is_stmt 0 view .LVU17
 111              	.LBE4551:
 112              	.LBB4552:
 113              	.LBI4552:
 114              		.file 11 "../../libdaisy/src/hid/usb.h"
   1:../../libdaisy/src/hid/usb.h **** #pragma once
   2:../../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../../libdaisy/src/hid/usb.h **** 
   7:../../libdaisy/src/hid/usb.h **** namespace daisy
   8:../../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../../libdaisy/src/hid/usb.h ****     @{
  10:../../libdaisy/src/hid/usb.h **** */
  11:../../libdaisy/src/hid/usb.h **** 
  12:../../libdaisy/src/hid/usb.h **** {
  13:../../libdaisy/src/hid/usb.h **** /** 
  14:../../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../../libdaisy/src/hid/usb.h **** */
  18:../../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../../libdaisy/src/hid/usb.h **** {
  20:../../libdaisy/src/hid/usb.h ****   public:
  21:../../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libdaisy/src/hid/usb.h ****     enum class Result
  23:../../libdaisy/src/hid/usb.h ****     {
  24:../../libdaisy/src/hid/usb.h ****         OK,
  25:../../libdaisy/src/hid/usb.h ****         ERR,
  26:../../libdaisy/src/hid/usb.h ****     };
  27:../../libdaisy/src/hid/usb.h **** 
  28:../../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../../libdaisy/src/hid/usb.h ****     {
  31:../../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libdaisy/src/hid/usb.h ****     };
  35:../../libdaisy/src/hid/usb.h **** 
  36:../../libdaisy/src/hid/usb.h **** 
  37:../../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libdaisy/src/hid/usb.h **** 
  40:../../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../../libdaisy/src/hid/usb.h **** 
  42:../../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
 115              		.loc 11 42 5 is_stmt 1 view .LVU18
 116              		.loc 11 42 5 is_stmt 0 view .LVU19
 117              	.LBE4552:
 118              	.LBB4553:
 119              	.LBI4553:
 120              		.file 12 "../../libdaisy/src/per/adc.h"
   1:../../libdaisy/src/per/adc.h **** #pragma once
   2:../../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libdaisy/src/per/adc.h **** #include <stdint.h>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 14


   5:../../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../../libdaisy/src/per/adc.h **** 
   9:../../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libdaisy/src/per/adc.h **** 
  11:../../libdaisy/src/per/adc.h **** namespace daisy
  12:../../libdaisy/src/per/adc.h **** {
  13:../../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../../libdaisy/src/per/adc.h ****     @{
  15:../../libdaisy/src/per/adc.h **** */
  16:../../libdaisy/src/per/adc.h **** 
  17:../../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../../libdaisy/src/per/adc.h **** */
  21:../../libdaisy/src/per/adc.h **** 
  22:../../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../../libdaisy/src/per/adc.h **** {
  25:../../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../../libdaisy/src/per/adc.h ****     {
  28:../../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../../libdaisy/src/per/adc.h ****     };
  33:../../libdaisy/src/per/adc.h **** 
  34:../../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../../libdaisy/src/per/adc.h ****      */
  37:../../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../../libdaisy/src/per/adc.h **** 
  39:../../libdaisy/src/per/adc.h ****     /** 
  40:../../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../../libdaisy/src/per/adc.h ****     */
  51:../../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
  53:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../../libdaisy/src/per/adc.h **** 
  57:../../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../../libdaisy/src/per/adc.h **** };
  61:../../libdaisy/src/per/adc.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 15


  62:../../libdaisy/src/per/adc.h **** /**
  63:../../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../../libdaisy/src/per/adc.h **** */
  65:../../libdaisy/src/per/adc.h **** class AdcHandle
  66:../../libdaisy/src/per/adc.h **** {
  67:../../libdaisy/src/per/adc.h ****   public:
  68:../../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../../libdaisy/src/per/adc.h ****     {
  71:../../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../../libdaisy/src/per/adc.h ****     };
  83:../../libdaisy/src/per/adc.h **** 
  84:../../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 121              		.loc 12 85 5 is_stmt 1 view .LVU20
 122              		.loc 12 85 5 is_stmt 0 view .LVU21
 123              	.LBE4553:
 124              	.LBB4554:
 125              	.LBI4554:
 126              		.file 13 "../../libdaisy/src/hid/audio.h"
   1:../../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libdaisy/src/hid/audio.h **** 
   4:../../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../../libdaisy/src/hid/audio.h **** 
   6:../../libdaisy/src/hid/audio.h **** namespace daisy
   7:../../libdaisy/src/hid/audio.h **** {
   8:../../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../../libdaisy/src/hid/audio.h **** {
  10:../../libdaisy/src/hid/audio.h ****   public:
  11:../../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../../libdaisy/src/hid/audio.h ****     struct Config
  14:../../libdaisy/src/hid/audio.h ****     {
  15:../../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../../libdaisy/src/hid/audio.h ****     };
  19:../../libdaisy/src/hid/audio.h **** 
  20:../../libdaisy/src/hid/audio.h ****     enum class Result
  21:../../libdaisy/src/hid/audio.h ****     {
  22:../../libdaisy/src/hid/audio.h ****         OK,
  23:../../libdaisy/src/hid/audio.h ****         ERR,
  24:../../libdaisy/src/hid/audio.h ****     };
  25:../../libdaisy/src/hid/audio.h **** 
  26:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  27:../../libdaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 16


  28:../../libdaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  29:../../libdaisy/src/hid/audio.h ****     */
  30:../../libdaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  31:../../libdaisy/src/hid/audio.h **** 
  32:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  33:../../libdaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  34:../../libdaisy/src/hid/audio.h ****     */
  35:../../libdaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  36:../../libdaisy/src/hid/audio.h **** 
  37:../../libdaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  38:../../libdaisy/src/hid/audio.h ****    * Non-Interleaving audio callbacks in daisy will be of this type
  39:../../libdaisy/src/hid/audio.h ****   */
  40:../../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  41:../../libdaisy/src/hid/audio.h ****                                   OutputBuffer out,
  42:../../libdaisy/src/hid/audio.h ****                                   size_t       size);
  43:../../libdaisy/src/hid/audio.h **** 
  44:../../libdaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  45:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  46:../../libdaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  47:../../libdaisy/src/hid/audio.h ****     */
  48:../../libdaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  49:../../libdaisy/src/hid/audio.h **** 
  50:../../libdaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  51:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  52:../../libdaisy/src/hid/audio.h ****     */
  53:../../libdaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  54:../../libdaisy/src/hid/audio.h **** 
  55:../../libdaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  56:../../libdaisy/src/hid/audio.h ****    * Interleaving audio callbacks in daisy must be of this type
  57:../../libdaisy/src/hid/audio.h ****   */
  58:../../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  59:../../libdaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  60:../../libdaisy/src/hid/audio.h ****                                               size_t                   size);
  61:../../libdaisy/src/hid/audio.h **** 
  62:../../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  63:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 127              		.loc 13 63 5 is_stmt 1 view .LVU22
 128              		.loc 13 63 5 is_stmt 0 view .LVU23
 129              	.LBE4554:
 130              	.LBE4550:
 131              		.loc 3 41 20 view .LVU24
 132 0000 7047     		bx	lr
 133              		.cfi_endproc
 134              	.LFE4414:
 136              		.weak	_ZN5daisy10DaisyPatchD1Ev
 137              		.thumb_set _ZN5daisy10DaisyPatchD1Ev,_ZN5daisy10DaisyPatchD2Ev
 138 0002 00BF     		.section	.text._Z2cbv,"ax",%progbits
 139              		.align	1
 140              		.p2align 2,,3
 141              		.global	_Z2cbv
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv5-d16
 147              	_Z2cbv:
 148              	.LFB5111:
 149              		.file 14 "Jellybeans.cpp"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 17


   1:Jellybeans.cpp **** /* 
   2:Jellybeans.cpp ****  * Copyright (C) 2021 Evan Pernu - All Rights Reserved
   3:Jellybeans.cpp ****  * You may use, distribute and modify this code under the
   4:Jellybeans.cpp ****  * terms of the GNU AGPLv3 license.
   5:Jellybeans.cpp ****  * 
   6:Jellybeans.cpp ****  * You should have received a copy of the GNU AGPLv3 license with
   7:Jellybeans.cpp ****  * this file (LICENSE.md). If not, please write to: evanpernu@gmail.com, 
   8:Jellybeans.cpp ****  * or visit: https://www.gnu.org/licenses/agpl-3.0.en.html
   9:Jellybeans.cpp ****  *
  10:Jellybeans.cpp ****  * 
  11:Jellybeans.cpp ****  * ====================================================
  12:Jellybeans.cpp ****  * =   __       _        _                            =
  13:Jellybeans.cpp ****  * =   \ \  ___| | |_   _| |__   ___  __ _ _ __  ___  =
  14:Jellybeans.cpp ****  * =    \ \/ _ \ | | | | | '_ \ / _ \/ _` | '_ \/ __| =
  15:Jellybeans.cpp ****  * = /\_/ /  __/ | | |_| | |_) |  __/ (_| | | | \__ \ =
  16:Jellybeans.cpp ****  * = \___/ \___|_|_|\__, |_.__/ \___|\__,_|_| |_|___/ =
  17:Jellybeans.cpp ****  * =                |___/                             =
  18:Jellybeans.cpp ****  * ====================================================
  19:Jellybeans.cpp ****  * 
  20:Jellybeans.cpp ****  * 
  21:Jellybeans.cpp ****  * Jellybeans is an arpeggiator eurorack module designed for the 
  22:Jellybeans.cpp ****  * Electrosmith Daisy Patch platform.
  23:Jellybeans.cpp ****  */
  24:Jellybeans.cpp **** 
  25:Jellybeans.cpp **** 
  26:Jellybeans.cpp **** #include "daisysp.h"
  27:Jellybeans.cpp **** #include "daisy_patch.h"
  28:Jellybeans.cpp **** #include "daisysp.h"
  29:Jellybeans.cpp **** #include "resources.h"
  30:Jellybeans.cpp **** 
  31:Jellybeans.cpp **** 
  32:Jellybeans.cpp **** #include <string>
  33:Jellybeans.cpp **** #include <array>
  34:Jellybeans.cpp **** 
  35:Jellybeans.cpp **** using namespace daisy;
  36:Jellybeans.cpp **** using namespace daisysp;
  37:Jellybeans.cpp **** using namespace jellybeans;
  38:Jellybeans.cpp **** 
  39:Jellybeans.cpp **** DaisyPatch patch;
  40:Jellybeans.cpp **** 
  41:Jellybeans.cpp **** // If true, the bottom row will display debug data instead of a menu item
  42:Jellybeans.cpp **** const bool debugMode = true;
  43:Jellybeans.cpp **** std::string debugString;
  44:Jellybeans.cpp **** 
  45:Jellybeans.cpp **** // The note vallue currently being sent to Patches' DAC's output 1
  46:Jellybeans.cpp **** // This is stored so that it's only calculated upon a change
  47:Jellybeans.cpp **** float arpNoteDacOutput1;
  48:Jellybeans.cpp **** 
  49:Jellybeans.cpp **** // If true, send a trig to Patches' gate out 1 at the next frame
  50:Jellybeans.cpp **** bool trigOut;
  51:Jellybeans.cpp **** 
  52:Jellybeans.cpp **** const FontDef font = Font_7x10;
  53:Jellybeans.cpp **** const int     fontWidth = 7;
  54:Jellybeans.cpp **** const int     fontHeight = 10;
  55:Jellybeans.cpp **** 
  56:Jellybeans.cpp **** /// Menu navigating vars
  57:Jellybeans.cpp **** int  menuPos;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 18


  58:Jellybeans.cpp **** bool isEditing;
  59:Jellybeans.cpp **** 
  60:Jellybeans.cpp **** 
  61:Jellybeans.cpp **** // Given the 1V/oct and 0-5V range of the CV out port,
  62:Jellybeans.cpp **** // we are limited to a 5 octave register. Voicings span
  63:Jellybeans.cpp **** // up to 2 octaves and coarse tuning (mTonic) spans another,
  64:Jellybeans.cpp **** // leaving us 2 octaves of room for upwards transposition.
  65:Jellybeans.cpp **** //
  66:Jellybeans.cpp **** // Note that the indices of the elements are also their octave distances from 0
  67:Jellybeans.cpp **** const std::vector<std::string> allOctaves {
  68:Jellybeans.cpp ****     "0",
  69:Jellybeans.cpp ****     "+1", // TODO re-enable these once out-of-bounds notes have been handled
  70:Jellybeans.cpp ****     "+2"
  71:Jellybeans.cpp **** };
  72:Jellybeans.cpp **** 
  73:Jellybeans.cpp **** void UpdateControls();
  74:Jellybeans.cpp **** void UpdateOled();
  75:Jellybeans.cpp **** //void UpdateOutputs();
  76:Jellybeans.cpp **** //void OnClockPulseIn();
  77:Jellybeans.cpp **** void DrawString(std::string, int, int);
  78:Jellybeans.cpp **** 
  79:Jellybeans.cpp **** Arp* myArp;
  80:Jellybeans.cpp **** 
  81:Jellybeans.cpp **** std::array<MenuItem, 10> menuItems;
  82:Jellybeans.cpp **** 
  83:Jellybeans.cpp **** // Reference vars to make the code more readable
  84:Jellybeans.cpp **** MenuItem *mPattern   = &menuItems[0];
  85:Jellybeans.cpp **** MenuItem *mDivision  = &menuItems[1];
  86:Jellybeans.cpp **** MenuItem *mVoicing   = &menuItems[2];
  87:Jellybeans.cpp **** MenuItem *mInversion = &menuItems[3];
  88:Jellybeans.cpp **** MenuItem *mTonic     = &menuItems[4];
  89:Jellybeans.cpp **** MenuItem *mScale     = &menuItems[5];
  90:Jellybeans.cpp **** MenuItem *mRhythm    = &menuItems[6];
  91:Jellybeans.cpp **** MenuItem *mOctRng    = &menuItems[7];
  92:Jellybeans.cpp **** MenuItem *mOct       = &menuItems[8];
  93:Jellybeans.cpp **** MenuItem *mClockDiv  = &menuItems[9];
  94:Jellybeans.cpp **** 
  95:Jellybeans.cpp **** 
  96:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
  97:Jellybeans.cpp **** int patternCurCvVal, divisionCurCvVal, voicingCurCvVal, inversionCurCvVal;
  98:Jellybeans.cpp **** 
  99:Jellybeans.cpp **** // Callback function invoked whenever a menu parameter is changed
 100:Jellybeans.cpp **** void cb(){
 150              		.loc 14 100 10 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 101:Jellybeans.cpp ****     //myArp.UpdateTraversal();
 102:Jellybeans.cpp **** };
 155              		.loc 14 102 1 is_stmt 0 view .LVU26
 156 0000 7047     		bx	lr
 157              		.cfi_endproc
 158              	.LFE5111:
 160 0002 00BF     		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 161              		.align	1
 162              		.p2align 2,,3
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 19


 163              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu fpv5-d16
 169              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev:
 170              	.LVL2:
 171              	.LFB5447:
 172              		.loc 4 17 13 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 177              	.LBB4555:
 178              	.LBI4555:
 179              		.loc 5 219 13 view .LVU28
 180              	.LBB4556:
 181              	.LBI4556:
  23:../../libdaisy/src/hid/disp/display.h **** 
 182              		.loc 5 23 13 view .LVU29
  23:../../libdaisy/src/hid/disp/display.h **** 
 183              		.loc 5 23 13 is_stmt 0 view .LVU30
 184              	.LBE4556:
 185              	.LBE4555:
 186              		.loc 4 17 29 view .LVU31
 187 0000 7047     		bx	lr
 188              		.cfi_endproc
 189              	.LFE5447:
 191              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED1Ev
 192              		.thumb_set _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED
 193 0002 00BF     		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 194              		.align	1
 195              		.p2align 2,,3
 196              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillE
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 200              		.fpu fpv5-d16
 202              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillEb:
 203              	.LVL3:
 204              	.LFB5536:
  18:../../libdaisy/src/hid/disp/oled_display.h **** 
  19:../../libdaisy/src/hid/disp/oled_display.h ****     struct Config
  20:../../libdaisy/src/hid/disp/oled_display.h ****     {
  21:../../libdaisy/src/hid/disp/oled_display.h ****         typename DisplayDriver::Config driver_config;
  22:../../libdaisy/src/hid/disp/oled_display.h ****     };
  23:../../libdaisy/src/hid/disp/oled_display.h **** 
  24:../../libdaisy/src/hid/disp/oled_display.h ****     void Init(Config config) { driver_.Init(config.driver_config); }
  25:../../libdaisy/src/hid/disp/oled_display.h **** 
  26:../../libdaisy/src/hid/disp/oled_display.h ****     uint16_t Height() const override { return driver_.Height(); }
  27:../../libdaisy/src/hid/disp/oled_display.h ****     uint16_t Width() const override { return driver_.Width(); }
  28:../../libdaisy/src/hid/disp/oled_display.h **** 
  29:../../libdaisy/src/hid/disp/oled_display.h ****     /** 
  30:../../libdaisy/src/hid/disp/oled_display.h ****     Fills the entire display with either on/off.
  31:../../libdaisy/src/hid/disp/oled_display.h ****     \param on Sets on or off.
  32:../../libdaisy/src/hid/disp/oled_display.h ****     */
  33:../../libdaisy/src/hid/disp/oled_display.h ****     void Fill(bool on) override { driver_.Fill(on); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 20


 205              		.loc 4 33 10 is_stmt 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 210              	.LBB4557:
 211              	.LBI4557:
 212              		.file 15 "../../libdaisy/src/dev/oled_ssd130x.h"
   1:../../libdaisy/src/dev/oled_ssd130x.h **** #pragma once
   2:../../libdaisy/src/dev/oled_ssd130x.h **** #ifndef SA_OLED_SSD130X_H
   3:../../libdaisy/src/dev/oled_ssd130x.h **** #define SA_OLED_SSD130X_H /**< & */
   4:../../libdaisy/src/dev/oled_ssd130x.h **** 
   5:../../libdaisy/src/dev/oled_ssd130x.h **** #include "per/i2c.h"
   6:../../libdaisy/src/dev/oled_ssd130x.h **** #include "per/spi.h"
   7:../../libdaisy/src/dev/oled_ssd130x.h **** #include "per/gpio.h"
   8:../../libdaisy/src/dev/oled_ssd130x.h **** #include "sys/system.h"
   9:../../libdaisy/src/dev/oled_ssd130x.h **** 
  10:../../libdaisy/src/dev/oled_ssd130x.h **** namespace daisy
  11:../../libdaisy/src/dev/oled_ssd130x.h **** {
  12:../../libdaisy/src/dev/oled_ssd130x.h **** /**
  13:../../libdaisy/src/dev/oled_ssd130x.h ****  * I2C Transport for SSD1306 / SSD1309 OLED display devices
  14:../../libdaisy/src/dev/oled_ssd130x.h ****  */
  15:../../libdaisy/src/dev/oled_ssd130x.h **** class SSD130xI2CTransport
  16:../../libdaisy/src/dev/oled_ssd130x.h **** {
  17:../../libdaisy/src/dev/oled_ssd130x.h ****   public:
  18:../../libdaisy/src/dev/oled_ssd130x.h ****     struct Config
  19:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  20:../../libdaisy/src/dev/oled_ssd130x.h ****         I2CHandle::Config i2c_config;
  21:../../libdaisy/src/dev/oled_ssd130x.h ****         uint8_t           i2c_address;
  22:../../libdaisy/src/dev/oled_ssd130x.h ****         void              Defaults()
  23:../../libdaisy/src/dev/oled_ssd130x.h ****         {
  24:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.periph         = I2CHandle::Config::Peripheral::I2C_1;
  25:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.speed          = I2CHandle::Config::Speed::I2C_1MHZ;
  26:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.mode           = I2CHandle::Config::Mode::I2C_MASTER;
  27:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.pin_config.scl = {DSY_GPIOB, 8};
  28:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.pin_config.sda = {DSY_GPIOB, 9};
  29:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_address               = 0x3C;
  30:../../libdaisy/src/dev/oled_ssd130x.h ****         }
  31:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  32:../../libdaisy/src/dev/oled_ssd130x.h ****     void Init(const Config& config)
  33:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  34:../../libdaisy/src/dev/oled_ssd130x.h ****         i2c_address_ = config.i2c_address;
  35:../../libdaisy/src/dev/oled_ssd130x.h ****         i2c_.Init(config.i2c_config);
  36:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  37:../../libdaisy/src/dev/oled_ssd130x.h ****     void SendCommand(uint8_t cmd)
  38:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  39:../../libdaisy/src/dev/oled_ssd130x.h ****         uint8_t buf[2] = {0X00, cmd};
  40:../../libdaisy/src/dev/oled_ssd130x.h ****         i2c_.TransmitBlocking(i2c_address_, buf, 2, 1000);
  41:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  42:../../libdaisy/src/dev/oled_ssd130x.h **** 
  43:../../libdaisy/src/dev/oled_ssd130x.h ****     void SendData(uint8_t* buff, size_t size)
  44:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  45:../../libdaisy/src/dev/oled_ssd130x.h ****         for(size_t i = 0; i < size; i++)
  46:../../libdaisy/src/dev/oled_ssd130x.h ****         {
  47:../../libdaisy/src/dev/oled_ssd130x.h ****             uint8_t buf[2] = {0X40, buff[i]};
  48:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_.TransmitBlocking(i2c_address_, buf, 2, 1000);
  49:../../libdaisy/src/dev/oled_ssd130x.h ****         }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 21


  50:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  51:../../libdaisy/src/dev/oled_ssd130x.h **** 
  52:../../libdaisy/src/dev/oled_ssd130x.h ****   private:
  53:../../libdaisy/src/dev/oled_ssd130x.h ****     daisy::I2CHandle i2c_;
  54:../../libdaisy/src/dev/oled_ssd130x.h ****     uint8_t          i2c_address_;
  55:../../libdaisy/src/dev/oled_ssd130x.h **** };
  56:../../libdaisy/src/dev/oled_ssd130x.h **** 
  57:../../libdaisy/src/dev/oled_ssd130x.h **** /**
  58:../../libdaisy/src/dev/oled_ssd130x.h ****  * 4 Wire SPI Transport for SSD1306 / SSD1309 OLED display devices
  59:../../libdaisy/src/dev/oled_ssd130x.h ****  */
  60:../../libdaisy/src/dev/oled_ssd130x.h **** class SSD130x4WireSpiTransport
  61:../../libdaisy/src/dev/oled_ssd130x.h **** {
  62:../../libdaisy/src/dev/oled_ssd130x.h ****   public:
  63:../../libdaisy/src/dev/oled_ssd130x.h ****     struct Config
  64:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  65:../../libdaisy/src/dev/oled_ssd130x.h ****         struct
  66:../../libdaisy/src/dev/oled_ssd130x.h ****         {
  67:../../libdaisy/src/dev/oled_ssd130x.h ****             dsy_gpio_pin dc;    /**< & */
  68:../../libdaisy/src/dev/oled_ssd130x.h ****             dsy_gpio_pin reset; /**< & */
  69:../../libdaisy/src/dev/oled_ssd130x.h ****         } pin_config;
  70:../../libdaisy/src/dev/oled_ssd130x.h ****         void Defaults()
  71:../../libdaisy/src/dev/oled_ssd130x.h ****         {
  72:../../libdaisy/src/dev/oled_ssd130x.h ****             pin_config.dc    = {DSY_GPIOB, 4};
  73:../../libdaisy/src/dev/oled_ssd130x.h ****             pin_config.reset = {DSY_GPIOB, 15};
  74:../../libdaisy/src/dev/oled_ssd130x.h ****         }
  75:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  76:../../libdaisy/src/dev/oled_ssd130x.h ****     void Init(const Config& config)
  77:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  78:../../libdaisy/src/dev/oled_ssd130x.h ****         // Initialize both GPIO
  79:../../libdaisy/src/dev/oled_ssd130x.h ****         pin_dc_.mode = DSY_GPIO_MODE_OUTPUT_PP;
  80:../../libdaisy/src/dev/oled_ssd130x.h ****         pin_dc_.pin  = config.pin_config.dc;
  81:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_init(&pin_dc_);
  82:../../libdaisy/src/dev/oled_ssd130x.h ****         pin_reset_.mode = DSY_GPIO_MODE_OUTPUT_PP;
  83:../../libdaisy/src/dev/oled_ssd130x.h ****         pin_reset_.pin  = config.pin_config.reset;
  84:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_init(&pin_reset_);
  85:../../libdaisy/src/dev/oled_ssd130x.h ****         // Initialize SPI
  86:../../libdaisy/src/dev/oled_ssd130x.h ****         SpiHandle::Config spi_config;
  87:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.periph    = SpiHandle::Config::Peripheral::SPI_1;
  88:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.mode      = SpiHandle::Config::Mode::MASTER;
  89:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.direction = SpiHandle::Config::Direction::TWO_LINES_TX_ONLY;
  90:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.datasize  = 8;
  91:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.clock_polarity = SpiHandle::Config::ClockPolarity::LOW;
  92:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.clock_phase    = SpiHandle::Config::ClockPhase::ONE_EDGE;
  93:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.nss            = SpiHandle::Config::NSS::HARD_OUTPUT;
  94:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.baud_prescaler = SpiHandle::Config::BaudPrescaler::PS_8;
  95:../../libdaisy/src/dev/oled_ssd130x.h **** 
  96:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.pin_config.sclk = {DSY_GPIOG, 11};
  97:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.pin_config.miso = {DSY_GPIOX, 0};
  98:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.pin_config.mosi = {DSY_GPIOB, 5};
  99:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.pin_config.nss  = {DSY_GPIOG, 10};
 100:../../libdaisy/src/dev/oled_ssd130x.h **** 
 101:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.Init(spi_config);
 102:../../libdaisy/src/dev/oled_ssd130x.h **** 
 103:../../libdaisy/src/dev/oled_ssd130x.h ****         // Reset and Configure OLED.
 104:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_write(&pin_reset_, 0);
 105:../../libdaisy/src/dev/oled_ssd130x.h ****         System::Delay(10);
 106:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_write(&pin_reset_, 1);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 22


 107:../../libdaisy/src/dev/oled_ssd130x.h ****         System::Delay(10);
 108:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     void SendCommand(uint8_t cmd)
 110:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_write(&pin_dc_, 0);
 112:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 113:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 114:../../libdaisy/src/dev/oled_ssd130x.h **** 
 115:../../libdaisy/src/dev/oled_ssd130x.h ****     void SendData(uint8_t* buff, size_t size)
 116:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 117:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_write(&pin_dc_, 1);
 118:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 119:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 120:../../libdaisy/src/dev/oled_ssd130x.h **** 
 121:../../libdaisy/src/dev/oled_ssd130x.h ****   private:
 122:../../libdaisy/src/dev/oled_ssd130x.h ****     SpiHandle spi_;
 123:../../libdaisy/src/dev/oled_ssd130x.h ****     dsy_gpio  pin_reset_;
 124:../../libdaisy/src/dev/oled_ssd130x.h ****     dsy_gpio  pin_dc_;
 125:../../libdaisy/src/dev/oled_ssd130x.h **** };
 126:../../libdaisy/src/dev/oled_ssd130x.h **** 
 127:../../libdaisy/src/dev/oled_ssd130x.h **** 
 128:../../libdaisy/src/dev/oled_ssd130x.h **** /**
 129:../../libdaisy/src/dev/oled_ssd130x.h ****  * A driver implementation for the SSD1306/SSD1309
 130:../../libdaisy/src/dev/oled_ssd130x.h ****  */
 131:../../libdaisy/src/dev/oled_ssd130x.h **** template <size_t width, size_t height, typename Transport>
 132:../../libdaisy/src/dev/oled_ssd130x.h **** class SSD130xDriver
 133:../../libdaisy/src/dev/oled_ssd130x.h **** {
 134:../../libdaisy/src/dev/oled_ssd130x.h ****   public:
 135:../../libdaisy/src/dev/oled_ssd130x.h ****     struct Config
 136:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 137:../../libdaisy/src/dev/oled_ssd130x.h ****         typename Transport::Config transport_config;
 138:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 139:../../libdaisy/src/dev/oled_ssd130x.h **** 
 140:../../libdaisy/src/dev/oled_ssd130x.h ****     void Init(Config config)
 141:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 142:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.Init(config.transport_config);
 143:../../libdaisy/src/dev/oled_ssd130x.h **** 
 144:../../libdaisy/src/dev/oled_ssd130x.h ****         // Init routine...
 145:../../libdaisy/src/dev/oled_ssd130x.h **** 
 146:../../libdaisy/src/dev/oled_ssd130x.h ****         // Display Off
 147:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xaE);
 148:../../libdaisy/src/dev/oled_ssd130x.h ****         // Dimension dependent commands...
 149:../../libdaisy/src/dev/oled_ssd130x.h ****         switch(height)
 150:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 151:../../libdaisy/src/dev/oled_ssd130x.h ****             case 16:
 152:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Display Clock Divide Ratio
 153:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xD5);
 154:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x60);
 155:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Multiplex Ratio
 156:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xA8);
 157:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x0F);
 158:../../libdaisy/src/dev/oled_ssd130x.h ****                 // COM Pins
 159:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xDA);
 160:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x02);
 161:../../libdaisy/src/dev/oled_ssd130x.h ****                 break;
 162:../../libdaisy/src/dev/oled_ssd130x.h ****             case 32:
 163:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Display Clock Divide Ratio
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 23


 164:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xD5);
 165:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x80);
 166:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Multiplex Ratio
 167:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xA8);
 168:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x1F);
 169:../../libdaisy/src/dev/oled_ssd130x.h ****                 // COM Pins
 170:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xDA);
 171:../../libdaisy/src/dev/oled_ssd130x.h ****                 if(width == 64)
 172:../../libdaisy/src/dev/oled_ssd130x.h ****                 {
 173:../../libdaisy/src/dev/oled_ssd130x.h ****                     transport_.SendCommand(0x12);
 174:../../libdaisy/src/dev/oled_ssd130x.h ****                 }
 175:../../libdaisy/src/dev/oled_ssd130x.h ****                 else
 176:../../libdaisy/src/dev/oled_ssd130x.h ****                 {
 177:../../libdaisy/src/dev/oled_ssd130x.h ****                     transport_.SendCommand(0x02);
 178:../../libdaisy/src/dev/oled_ssd130x.h ****                 }
 179:../../libdaisy/src/dev/oled_ssd130x.h **** 
 180:../../libdaisy/src/dev/oled_ssd130x.h ****                 break;
 181:../../libdaisy/src/dev/oled_ssd130x.h ****             case 48:
 182:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Display Clock Divide Ratio
 183:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xD5);
 184:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x80);
 185:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Multiplex Ratio
 186:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xA8);
 187:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x2F);
 188:../../libdaisy/src/dev/oled_ssd130x.h ****                 // COM Pins
 189:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xDA);
 190:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x12);
 191:../../libdaisy/src/dev/oled_ssd130x.h ****                 break;
 192:../../libdaisy/src/dev/oled_ssd130x.h ****             default: // 128
 193:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Display Clock Divide Ratio
 194:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xD5);
 195:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x80);
 196:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Multiplex Ratio
 197:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xA8);
 198:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x3F);
 199:../../libdaisy/src/dev/oled_ssd130x.h ****                 // COM Pins
 200:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xDA);
 201:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x12);
 202:../../libdaisy/src/dev/oled_ssd130x.h ****                 break;
 203:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 204:../../libdaisy/src/dev/oled_ssd130x.h **** 
 205:../../libdaisy/src/dev/oled_ssd130x.h ****         // Display Offset
 206:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xD3);
 207:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x00);
 208:../../libdaisy/src/dev/oled_ssd130x.h ****         // Start Line Address
 209:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x40);
 210:../../libdaisy/src/dev/oled_ssd130x.h ****         // Normal Display
 211:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xA6);
 212:../../libdaisy/src/dev/oled_ssd130x.h ****         // All On Resume
 213:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xA4);
 214:../../libdaisy/src/dev/oled_ssd130x.h ****         // Charge Pump
 215:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x8D);
 216:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x14);
 217:../../libdaisy/src/dev/oled_ssd130x.h ****         // Set Segment Remap
 218:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xA1);
 219:../../libdaisy/src/dev/oled_ssd130x.h ****         // COM Output Scan Direction
 220:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xC8);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 24


 221:../../libdaisy/src/dev/oled_ssd130x.h ****         // Contrast Control
 222:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x81);
 223:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x8F);
 224:../../libdaisy/src/dev/oled_ssd130x.h ****         // Pre Charge
 225:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xD9);
 226:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x25);
 227:../../libdaisy/src/dev/oled_ssd130x.h ****         // VCOM Detect
 228:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xDB);
 229:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x34);
 230:../../libdaisy/src/dev/oled_ssd130x.h **** 
 231:../../libdaisy/src/dev/oled_ssd130x.h **** 
 232:../../libdaisy/src/dev/oled_ssd130x.h ****         // Display On
 233:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xAF); //--turn on oled panel
 234:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 235:../../libdaisy/src/dev/oled_ssd130x.h **** 
 236:../../libdaisy/src/dev/oled_ssd130x.h ****     size_t Width() const { return width; };
 237:../../libdaisy/src/dev/oled_ssd130x.h ****     size_t Height() const { return height; };
 238:../../libdaisy/src/dev/oled_ssd130x.h **** 
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     void DrawPixel(uint_fast8_t x, uint_fast8_t y, bool on)
 240:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 241:../../libdaisy/src/dev/oled_ssd130x.h ****         if(x >= width || y >= height)
 242:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 243:../../libdaisy/src/dev/oled_ssd130x.h ****         if(on)
 244:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 245:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 246:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] &= ~(1 << (y % 8));
 247:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 248:../../libdaisy/src/dev/oled_ssd130x.h **** 
 249:../../libdaisy/src/dev/oled_ssd130x.h ****     void Fill(bool on)
 213              		.loc 15 249 10 view .LVU33
 214              	.LBB4558:
 250:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 251:../../libdaisy/src/dev/oled_ssd130x.h ****         for(size_t i = 0; i < sizeof(buffer_); i++)
 215              		.loc 15 251 29 view .LVU34
 252:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 253:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[i] = on ? 0xff : 0x00;
 216              		.loc 15 253 24 is_stmt 0 view .LVU35
 217 0000 4942     		rsbs	r1, r1, #0
 218              	.LVL4:
 219              		.loc 15 253 24 view .LVU36
 220 0002 4FF48062 		mov	r2, #1024
 221 0006 1430     		adds	r0, r0, #20
 222              	.LVL5:
 223              		.loc 15 253 24 view .LVU37
 224 0008 C9B2     		uxtb	r1, r1
 225 000a FFF7FEBF 		b	memset
 226              	.LVL6:
 227              		.loc 15 253 24 view .LVU38
 228              	.LBE4558:
 229              	.LBE4557:
 230              		.cfi_endproc
 231              	.LFE5536:
 233 000e 00BF     		.section	.text._ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data,"axG",%progbits,_ZNSt17
 234              		.align	1
 235              		.p2align 2,,3
 236              		.weak	_ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data
 237              		.syntax unified
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 25


 238              		.thumb
 239              		.thumb_func
 240              		.fpu fpv5-d16
 242              	_ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data:
 243              	.LVL7:
 244              	.LFB5736:
 245              		.file 16 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // Implementation of std::function -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // Copyright (C) 2004-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** /** @file include/bits/std_function.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****  *  Do not attempt to use it directly. @headername{functional}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #ifndef _GLIBCXX_STD_FUNCTION_H
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #define _GLIBCXX_STD_FUNCTION_H 1
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #pragma GCC system_header
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cplusplus < 201103L
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** # include <bits/c++0x_warning.h>
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #else
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cpp_rtti
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** # include <typeinfo>
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #endif
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #include <bits/stl_function.h>
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #include <bits/invoke.h>
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #include <bits/refwrap.h>
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #include <bits/functexcept.h>
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** namespace std _GLIBCXX_VISIBILITY(default)
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** {
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 26


  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   /**
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  @brief Exception class thrown when class template function's
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  operator() is called with an empty target.
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  @ingroup exceptions
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    */
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   class bad_function_call : public std::exception
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   {
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   public:
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     virtual ~bad_function_call() noexcept;
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const char* what() const noexcept;
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   /**
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  Trait identifying "location-invariant" types, meaning that the
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  address of the object (or any of its members) will not escape.
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  Trivially copyable types are location-invariant and users can
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  specialize this trait for other types.
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    */
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Tp>
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __is_location_invariant
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : is_trivially_copyable<_Tp>::type
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { };
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   class _Undefined_class;
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   union _Nocopy_types
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   {
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     void*       _M_object;
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_const_object;
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     void (*_M_function_pointer)();
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     void (_Undefined_class::*_M_member_pointer)();
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   union [[gnu::may_alias]] _Any_data
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   {
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     void*       _M_access()       { return &_M_pod_data[0]; }
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     template<typename _Tp>
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Tp&
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _M_access()
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       { return *static_cast<_Tp*>(_M_access()); }
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     template<typename _Tp>
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       const _Tp&
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _M_access() const
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       { return *static_cast<const _Tp*>(_M_access()); }
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     _Nocopy_types _M_unused;
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     char _M_pod_data[sizeof(_Nocopy_types)];
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   enum _Manager_operation
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   {
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     __get_type_info,
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     __get_functor_ptr,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 27


 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     __clone_functor,
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     __destroy_functor
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Signature>
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     class function;
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   /// Base class of all polymorphic function object wrappers.
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   class _Function_base
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   {
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   public:
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     static const size_t _M_max_size = sizeof(_Nocopy_types);
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     static const size_t _M_max_align = __alignof__(_Nocopy_types);
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     template<typename _Functor>
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       class _Base_manager
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       protected:
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static const bool __stored_locally =
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	(__is_location_invariant<_Functor>::value
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	 && sizeof(_Functor) <= _M_max_size
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	 && __alignof__(_Functor) <= _M_max_align
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	 && (_M_max_align % __alignof__(_Functor) == 0));
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	typedef integral_constant<bool, __stored_locally> _Local_storage;
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// Retrieve a pointer to the function object
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static _Functor*
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_get_pointer(const _Any_data& __source)
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  if _GLIBCXX17_CONSTEXPR (__stored_locally)
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    {
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      const _Functor& __f = __source._M_access<_Functor>();
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      return const_cast<_Functor*>(std::__addressof(__f));
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    }
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  else // have stored a pointer
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    return __source._M_access<_Functor*>();
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// Clone a location-invariant function object that fits within
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// an _Any_data structure.
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_clone(_Any_data& __dest, const _Any_data& __source, true_type)
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  ::new (__dest._M_access()) _Functor(__source._M_access<_Functor>());
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// Clone a function object that is not location-invariant or
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// that cannot fit into an _Any_data structure.
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_clone(_Any_data& __dest, const _Any_data& __source, false_type)
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  __dest._M_access<_Functor*>() =
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    new _Functor(*__source._M_access<const _Functor*>());
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// Destroying a location-invariant object may still require
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 28


 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// destruction.
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_destroy(_Any_data& __victim, true_type)
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  __victim._M_access<_Functor>().~_Functor();
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// Destroying an object located on the heap.
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_destroy(_Any_data& __victim, false_type)
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  delete __victim._M_access<_Functor*>();
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       public:
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static bool
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_Any_data& __dest, const _Any_data& __source,
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 		   _Manager_operation __op)
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  switch (__op)
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    {
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cpp_rtti
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    case __get_type_info:
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      __dest._M_access<const type_info*>() = &typeid(_Functor);
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      break;
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #endif
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    case __get_functor_ptr:
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      __dest._M_access<_Functor*>() = _M_get_pointer(__source);
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      break;
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    case __clone_functor:
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      _M_clone(__dest, __source, _Local_storage());
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      break;
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    case __destroy_functor:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      _M_destroy(__dest, _Local_storage());
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      break;
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    }
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  return false;
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_init_functor(_Any_data& __functor, _Functor&& __f)
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	template<typename _Signature>
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  static bool
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_not_empty_function(const function<_Signature>& __f)
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return static_cast<bool>(__f); }
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	template<typename _Tp>
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  static bool
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_not_empty_function(_Tp* __fp)
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	template<typename _Class, typename _Tp>
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  static bool
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 29


 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_not_empty_function(_Tp _Class::* __mp)
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __mp != nullptr; }
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	template<typename _Tp>
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  static bool
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_not_empty_function(const _Tp&)
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return true; }
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       private:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_init_functor(_Any_data& __functor, _Functor&& __f, true_type)
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_init_functor(_Any_data& __functor, _Functor&& __f, false_type)
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ __functor._M_access<_Functor*>() = new _Functor(std::move(__f)); }
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       };
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     _Function_base() : _M_manager(nullptr) { }
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     ~_Function_base()
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       if (_M_manager)
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     bool _M_empty() const { return !_M_manager; }
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     typedef bool (*_Manager_type)(_Any_data&, const _Any_data&,
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 				  _Manager_operation);
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     _Any_data     _M_functor;
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     _Manager_type _M_manager;
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Signature, typename _Functor>
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     class _Function_handler;
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename _Functor, typename... _ArgTypes>
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     class _Function_handler<_Res(_ArgTypes...), _Functor>
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Function_base::_Base_manager<_Functor>
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       typedef _Function_base::_Base_manager<_Functor> _Base;
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     public:
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       static bool
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _M_manager(_Any_data& __dest, const _Any_data& __source,
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 		 _Manager_operation __op)
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	switch (__op)
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  {
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cpp_rtti
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  case __get_type_info:
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    __dest._M_access<const type_info*>() = &typeid(_Functor);
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    break;
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #endif
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  case __get_functor_ptr:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 30


 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    __dest._M_access<_Functor*>() = _Base::_M_get_pointer(__source);
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    break;
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  default:
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _Base::_M_manager(__dest, __source, __op);
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  }
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	return false;
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       static _Res
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _M_invoke(const _Any_data& __functor, _ArgTypes&&... __args)
 246              		.loc 16 289 7 is_stmt 1 view -0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250              		@ link register save eliminated.
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 251              		.loc 16 88 37 view .LVU40
 252              	.LBB4559:
 253              	.LBI4559:
 254              		.file 17 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\inv
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // Implementation of INVOKE -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // Copyright (C) 2016-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** /** @file include/bits/invoke.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****  *  Do not attempt to use it directly. @headername{functional}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #ifndef _GLIBCXX_INVOKE_H
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #define _GLIBCXX_INVOKE_H 1
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #pragma GCC system_header
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #if __cplusplus < 201103L
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** # include <bits/c++0x_warning.h>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 31


  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #else
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #include <type_traits>
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** {
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   /**
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****    *  @addtogroup utilities
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****    *  @{
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****    */
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   // Used by __invoke_impl instead of std::forward<_Tp> so that a
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   // reference_wrapper is converted to an lvalue-reference.
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Tp, typename _Up = typename __inv_unwrap<_Tp>::type>
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Up&&
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invfwd(typename remove_reference<_Tp>::type& __t) noexcept
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return static_cast<_Up&&>(__t); }
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Fn, typename... _Args>
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Res
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _MemFun, typename _Tp, typename... _Args>
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Res
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_impl(__invoke_memfun_ref, _MemFun&& __f, _Tp&& __t,
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 		  _Args&&... __args)
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return (__invfwd<_Tp>(__t).*__f)(std::forward<_Args>(__args)...); }
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _MemFun, typename _Tp, typename... _Args>
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Res
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_impl(__invoke_memfun_deref, _MemFun&& __f, _Tp&& __t,
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 		  _Args&&... __args)
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     {
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       return ((*std::forward<_Tp>(__t)).*__f)(std::forward<_Args>(__args)...);
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     }
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _MemPtr, typename _Tp>
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Res
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_impl(__invoke_memobj_ref, _MemPtr&& __f, _Tp&& __t)
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return __invfwd<_Tp>(__t).*__f; }
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _MemPtr, typename _Tp>
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Res
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_impl(__invoke_memobj_deref, _MemPtr&& __f, _Tp&& __t)
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return (*std::forward<_Tp>(__t)).*__f; }
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   /// Invoke a callable object.
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Callable, typename... _Args>
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr typename __invoke_result<_Callable, _Args...>::type
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke(_Callable&& __fn, _Args&&... __args)
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     noexcept(__is_nothrow_invocable<_Callable, _Args...>::value)
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     {
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __result = __invoke_result<_Callable, _Args...>;
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __type = typename __result::type;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 32


  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __tag = typename __result::__invoke_type;
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 					std::forward<_Args>(__args)...);
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     }
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #if __cplusplus >= 201703L
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   // INVOKE<R>: Invoke a callable object and convert the result to R.
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Callable, typename... _Args>
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr enable_if_t<is_invocable_r_v<_Res, _Callable, _Args...>, _Res>
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_r(_Callable&& __fn, _Args&&... __args)
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     noexcept(is_nothrow_invocable_r_v<_Res, _Callable, _Args...>)
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     {
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __result = __invoke_result<_Callable, _Args...>;
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __type = typename __result::type;
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __tag = typename __result::__invoke_type;
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       if constexpr (is_void_v<_Res>)
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 	std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 					std::forward<_Args>(__args)...);
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       else
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 	return std::__invoke_impl<__type>(__tag{},
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 					  std::forward<_Callable>(__fn),
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 					  std::forward<_Args>(__args)...);
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     }
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #else // C++11
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Callable, typename... _Args>
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     using __can_invoke_as_void = __enable_if_t<
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       __and_<is_void<_Res>, __is_invocable<_Callable, _Args...>>::value,
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       _Res
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     >;
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Callable, typename... _Args>
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     using __can_invoke_as_nonvoid = __enable_if_t<
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       __and_<__not_<is_void<_Res>>,
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 	     is_convertible<typename __invoke_result<_Callable, _Args...>::type,
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 			    _Res>
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       >::value,
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       _Res
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     >;
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   // INVOKE<R>: Invoke a callable object and convert the result to R.
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Callable, typename... _Args>
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr __can_invoke_as_nonvoid<_Res, _Callable, _Args...>
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_r(_Callable&& __fn, _Args&&... __args)
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     {
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __result = __invoke_result<_Callable, _Args...>;
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __type = typename __result::type;
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __tag = typename __result::__invoke_type;
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 					std::forward<_Args>(__args)...);
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     }
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   // INVOKE<R> when R is cv void
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Callable, typename... _Args>
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     _GLIBCXX14_CONSTEXPR __can_invoke_as_void<_Res, _Callable, _Args...>
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_r(_Callable&& __fn, _Args&&... __args)
 255              		.loc 17 148 5 view .LVU41
 256              	.LBB4560:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 33


 257              	.LBB4561:
 258              	.LBI4561:
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 259              		.loc 17 59 5 view .LVU42
 260              	.LBB4562:
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
 261              		.loc 17 60 36 is_stmt 0 view .LVU43
 262 0000 0368     		ldr	r3, [r0]
 263 0002 1847     		bx	r3	@ indirect register sibling call
 264              	.LVL8:
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
 265              		.loc 17 60 36 view .LVU44
 266              	.LBE4562:
 267              	.LBE4561:
 268              	.LBE4560:
 269              	.LBE4559:
 270              		.cfi_endproc
 271              	.LFE5736:
 273              		.section	.text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransport
 274              		.align	1
 275              		.p2align 2,,3
 276              		.weak	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu fpv5-d16
 282              	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6HeightEv:
 283              	.LVL9:
 284              	.LFB6188:
  26:../../libdaisy/src/hid/disp/oled_display.h ****     uint16_t Width() const override { return driver_.Width(); }
 285              		.loc 4 26 14 is_stmt 1 view -0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
  26:../../libdaisy/src/hid/disp/oled_display.h ****     uint16_t Width() const override { return driver_.Width(); }
 290              		.loc 4 26 65 is_stmt 0 view .LVU46
 291 0000 4020     		movs	r0, #64
 292              	.LVL10:
  26:../../libdaisy/src/hid/disp/oled_display.h ****     uint16_t Width() const override { return driver_.Width(); }
 293              		.loc 4 26 65 view .LVU47
 294 0002 7047     		bx	lr
 295              		.cfi_endproc
 296              	.LFE6188:
 298              		.section	.text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransport
 299              		.align	1
 300              		.p2align 2,,3
 301              		.weak	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 305              		.fpu fpv5-d16
 307              	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5WidthEv:
 308              	.LVL11:
 309              	.LFB6189:
  27:../../libdaisy/src/hid/disp/oled_display.h **** 
 310              		.loc 4 27 14 is_stmt 1 view -0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 34


 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
  27:../../libdaisy/src/hid/disp/oled_display.h **** 
 315              		.loc 4 27 63 is_stmt 0 view .LVU49
 316 0000 8020     		movs	r0, #128
 317              	.LVL12:
  27:../../libdaisy/src/hid/disp/oled_display.h **** 
 318              		.loc 4 27 63 view .LVU50
 319 0002 7047     		bx	lr
 320              		.cfi_endproc
 321              	.LFE6189:
 323              		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 324              		.align	1
 325              		.p2align 2,,3
 326              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 330              		.fpu fpv5-d16
 332              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev:
 333              	.LVL13:
 334              	.LFB5449:
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 335              		.loc 4 17 13 is_stmt 1 view -0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 339              		.loc 4 17 13 is_stmt 0 view .LVU52
 340 0000 10B5     		push	{r4, lr}
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 4, -8
 343              		.cfi_offset 14, -4
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 344              		.loc 4 17 13 view .LVU53
 345 0002 0446     		mov	r4, r0
 346              	.LVL14:
 347              	.LBB4563:
 348              	.LBI4563:
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 349              		.loc 4 17 13 is_stmt 1 view .LVU54
 350              	.LBB4564:
 351              	.LBI4564:
 352              		.loc 5 219 13 view .LVU55
 353              	.LBB4565:
 354              	.LBI4565:
  23:../../libdaisy/src/hid/disp/display.h **** 
 355              		.loc 5 23 13 view .LVU56
  23:../../libdaisy/src/hid/disp/display.h **** 
 356              		.loc 5 23 13 is_stmt 0 view .LVU57
 357              	.LBE4565:
 358              	.LBE4564:
 359              	.LBE4563:
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 360              		.loc 4 17 29 view .LVU58
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 35


 361 0004 40F21441 		movw	r1, #1044
 362 0008 FFF7FEFF 		bl	_ZdlPvj
 363              	.LVL15:
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 364              		.loc 4 17 29 view .LVU59
 365 000c 2046     		mov	r0, r4
 366 000e 10BD     		pop	{r4, pc}
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 367              		.loc 4 17 29 view .LVU60
 368              		.cfi_endproc
 369              	.LFE5449:
 371              		.section	.text._ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_opera
 372              		.align	1
 373              		.p2align 2,,3
 374              		.weak	_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu fpv5-d16
 380              	_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation:
 381              	.LVL16:
 382              	.LFB5737:
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 		 _Manager_operation __op)
 383              		.loc 16 268 7 is_stmt 1 view -0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387              		@ link register save eliminated.
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  {
 388              		.loc 16 271 2 is_stmt 0 view .LVU62
 389 0000 2AB1     		cbz	r2, .L13
 390 0002 012A     		cmp	r2, #1
 391 0004 07D0     		beq	.L14
 392              	.LVL17:
 393              	.LBB4580:
 394              	.LBI4580:
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 		   _Manager_operation __op)
 395              		.loc 16 181 2 is_stmt 1 view .LVU63
 396              	.LBB4581:
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    {
 397              		.loc 16 184 4 is_stmt 0 view .LVU64
 398 0006 022A     		cmp	r2, #2
 399 0008 08D0     		beq	.L18
 400              	.L16:
 401              	.LVL18:
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    {
 402              		.loc 16 184 4 view .LVU65
 403              	.LBE4581:
 404              	.LBE4580:
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 405              		.loc 16 286 7 view .LVU66
 406 000a 0020     		movs	r0, #0
 407              	.LVL19:
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 408              		.loc 16 286 7 view .LVU67
 409 000c 7047     		bx	lr
 410              	.LVL20:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 36


 411              	.L13:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 412              		.loc 16 87 37 is_stmt 1 view .LVU68
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    break;
 413              		.loc 16 275 43 is_stmt 0 view .LVU69
 414 000e 054B     		ldr	r3, .L19
 415 0010 0360     		str	r3, [r0]
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 416              		.loc 16 286 7 view .LVU70
 417 0012 0020     		movs	r0, #0
 418              	.LVL21:
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 419              		.loc 16 286 7 view .LVU71
 420 0014 7047     		bx	lr
 421              	.LVL22:
 422              	.L14:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 423              		.loc 16 87 37 is_stmt 1 view .LVU72
 424              	.LBB4590:
 425              	.LBI4590:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 426              		.loc 16 136 2 view .LVU73
 427              	.LBB4591:
 428              	.LBB4592:
 429              	.LBI4592:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       { return *static_cast<const _Tp*>(_M_access()); }
 430              		.loc 16 97 7 view .LVU74
 431              	.LBB4593:
 432              	.LBI4593:
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 433              		.loc 16 88 17 view .LVU75
 434              	.LBB4594:
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 435              		.loc 16 88 37 view .LVU76
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 436              		.loc 16 88 37 is_stmt 0 view .LVU77
 437              	.LBE4594:
 438              	.LBE4593:
 439              	.LBE4592:
 440              	.LBE4591:
 441              	.LBE4590:
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    break;
 442              		.loc 16 279 36 view .LVU78
 443 0016 0160     		str	r1, [r0]
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 444              		.loc 16 286 7 view .LVU79
 445 0018 0020     		movs	r0, #0
 446              	.LVL23:
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 447              		.loc 16 286 7 view .LVU80
 448 001a 7047     		bx	lr
 449              	.LVL24:
 450              	.L18:
 451              	.LBB4595:
 452              	.LBB4587:
 453              	.LBB4582:
 454              	.LBI4582:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 37


 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 455              		.loc 16 150 2 is_stmt 1 view .LVU81
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 456              		.loc 16 150 2 is_stmt 0 view .LVU82
 457              	.LBE4582:
 458              	.LBE4587:
 459              	.LBE4595:
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 460              		.loc 16 88 37 is_stmt 1 view .LVU83
 461              	.LBB4596:
 462              	.LBB4588:
 463              	.LBB4585:
 464              	.LBB4583:
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 465              		.loc 16 152 4 is_stmt 0 view .LVU84
 466 001c 0B68     		ldr	r3, [r1]
 467              	.LVL25:
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 468              		.loc 16 152 4 view .LVU85
 469              	.LBE4583:
 470              	.LBE4585:
 471              	.LBE4588:
 472              	.LBE4596:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 473              		.loc 16 87 37 is_stmt 1 view .LVU86
 474              		.file 18 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\new"
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // The -*- C++ -*- dynamic memory management header.
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // Copyright (C) 1994-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // This file is part of GCC.
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** //
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // GCC is free software; you can redistribute it and/or modify
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // it under the terms of the GNU General Public License as published by
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // the Free Software Foundation; either version 3, or (at your option)
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // any later version.
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // 
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // GCC is distributed in the hope that it will be useful,
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // GNU General Public License for more details.
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // 
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // Under Section 7 of GPL version 3, you are granted additional
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // permissions described in the GCC Runtime Library Exception, version
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // 3.1, as published by the Free Software Foundation.
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // You should have received a copy of the GNU General Public License and
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // a copy of the GCC Runtime Library Exception along with this program;
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // <http://www.gnu.org/licenses/>.
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** /** @file new
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  This is a Standard C++ Library header.
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  The header @c new defines several functions to manage dynamic memory and
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  handling memory allocation errors; see
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/dynamic_memory.html
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 38


  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  for more.
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  */
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #ifndef _NEW
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #define _NEW
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC system_header
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #include <bits/c++config.h>
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #include <exception>
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC visibility push(default)
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** extern "C++" {
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** namespace std 
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** {
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /**
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  @brief  Exception possibly thrown by @c new.
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  @ingroup exceptions
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  errors from the throwing forms of @c new.  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   class bad_alloc : public exception 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   {
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   public:
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc() throw() { }
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc(const bad_alloc&) = default;
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc& operator=(const bad_alloc&) = default;
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_alloc() throw();
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   };
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   class bad_array_new_length : public bad_alloc
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   {
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   public:
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_array_new_length() throw() { }
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_array_new_length() throw();
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   };
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 39


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   enum class align_val_t: size_t {};
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   struct nothrow_t
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   {
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     explicit nothrow_t() = default;
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   };
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   extern const nothrow_t nothrow;
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /** If you write your own error handler to be called by @c new, it must
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  be of this type.  */
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   typedef void (*new_handler)();
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /// Takes a replacement handler as the argument, returns the
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /// previous handler.
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   new_handler set_new_handler(new_handler) throw();
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /// Return the current new handler.
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   new_handler get_new_handler() noexcept;
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** } // namespace std
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** //@{
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** /** These are replaceable signatures:
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal array new and delete (same)
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *    @c NULL on error)
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow array new and delete (same)
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  Placement new and delete signatures (take a memory address argument,
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  does nothing) may not be replaced by a user's program.
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** */
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*) _GLIBCXX_USE_NOEXCEPT
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 40


 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t)
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t, const std::nothrow_t&)
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t)
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t, const std::nothrow_t&)
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t)
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t, const std::nothrow_t&)
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t)
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t, const std::nothrow_t&)
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t, std::align_val_t)
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t, std::align_val_t)
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_sized_deallocation
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_aligned_new
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // Default placement versions of operator new.
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** { return __p; }
 475              		.loc 18 175 3 view .LVU87
 476              	.LBB4597:
 477              	.LBB4589:
 478              	.LBB4586:
 479              	.LBB4584:
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 480              		.loc 16 152 4 is_stmt 0 view .LVU88
 481 001e 0360     		str	r3, [r0]
 482              	.LVL26:
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 483              		.loc 16 152 4 view .LVU89
 484              	.LBE4584:
 485              	.LBE4586:
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 486              		.loc 16 197 8 view .LVU90
 487 0020 F3E7     		b	.L16
 488              	.L20:
 489 0022 00BF     		.align	2
 490              	.L19:
 491 0024 00000000 		.word	_ZTIPFvvE
 492              	.LBE4589:
 493              	.LBE4597:
 494              		.cfi_endproc
 495              	.LFE5737:
 497              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.isra.0,"ax",%progbits
 498              		.align	1
 499              		.p2align 2,,3
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 41


 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
 503              		.fpu fpv5-d16
 505              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.isra.0:
 506              	.LVL27:
 507              	.LFB6202:
 508              		.file 19 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\bas
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** /** @file bits/basic_string.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifndef _BASIC_STRING_H
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #define _BASIC_STRING_H 1
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #pragma GCC system_header
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/atomicity.h>
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/alloc_traits.h>
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <debug/debug.h>
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <initializer_list>
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # include <string_view>
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 42


  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** {
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @class basic_string basic_string.h <string>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup strings
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup sequences
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _CharT  Type of character
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                   char_traits<_CharT>.
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     class basic_string
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Types:
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Traits					traits_type;
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Traits::char_type		value_type;
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 							const_iterator;
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Value returned by various member functions when they fail.
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     protected:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // type used for positions in insert, erase etc.
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef iterator __const_iterator;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 43


 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef const_iterator __const_iterator;
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // A helper type for avoiding boiler-plate.
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename _Res>
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	using _If_sv = enable_if_t<
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _Res>;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allows an implicit conversion to __sv_type.
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static __sv_type
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __svt; }
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // allows to add an internal constructor that does not
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // participate in overload resolution when a string_view
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // is provided.
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct __sv_wrapper
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__sv_type _M_sv;
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          wrapper.
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svw  string view wrapper.
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	pointer _M_p; // The actual data.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 44


 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _Alloc_hider	_M_dataplus;
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type		_M_string_length;
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       union
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type        _M_allocated_capacity;
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data(pointer __p)
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_length(size_type __length)
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data() const
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_local_data()
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return pointer(_M_local_buf);
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_pointer
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_local_data() const
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return const_pointer(_M_local_buf);
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_capacity(size_type __capacity)
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_set_length(size_type __n)
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_length(__n);
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 45


 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_is_local() const
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Create & Destroy
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_create(size_type&, size_type);
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_dispose()
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_is_local())
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_destroy(size_type __size) throw()
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           _M_construct(__beg, __end, _Tag());
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Integer>
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__req, __c); }
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     std::input_iterator_tag);
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // string::iterator, _CharT*, etc.
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _FwdIterator>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 46


 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     std::forward_iterator_tag);
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type&
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_get_allocator()
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const allocator_type&
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_get_allocator() const
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, bool _Requires =
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ typedef basic_string& __type; };
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__pos > this->size())
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "this->size() (which is %zu)"),
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __s, __pos, this->size());
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __pos;
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_length_error(__N(__s));
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 47


 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // True if _Rep and source do not overlap.
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // When __n = 1 way faster than the general multichar
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // traits_type::copy/move/assign.
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::move(__d, __s, __n);
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, __c);
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // to optimize for the common case of pointers as iterators.
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Iterator>
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static void
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 48


 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static int
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return int(__d);
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_assign(const basic_string&);
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __len2);
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Construct/copy/destroy:
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Default constructor creates an empty string.
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string()
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 49


 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n)
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n, const _Alloc& __a)
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source character %array.
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 50


 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  has no special meaning.
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__s, __s + __n); }
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a C string.
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source C string.
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as multiple characters.
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters.
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to use.
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__n, __c); }
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move construct string.
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str) noexcept
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _S_local_capacity + 1);
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 51


 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_length(__str.length());
 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(__str._M_local_data());
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_set_length(0);
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from an initializer %list.
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _S_local_capacity + 1);
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_set_length(0);
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || __str.get_allocator() == __a)
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_set_length(0);
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
 612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a range.
 615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __beg  Start of range.
 616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __end  End of range.
 617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 52


 620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InputIterator,
 621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InputIterator>
 624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
 627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ _M_construct(__beg, __end); }
 629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t   Source object convertible to string view.
 634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a   Allocator to use.
 637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a string_view.
 645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t  Source object convertible to string view.
 646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit
 650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
 653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Destroy the string instance.
 656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ~basic_string()
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const basic_string& __str)
 666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->assign(__str);
 668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source null-terminated string.
 673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const _CharT* __s)
 676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 53


 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string of length 1.
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Source character.
 681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Assigning to a character makes this string length 1 and
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (*this)[0] == @a c.
 684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(_CharT __c)
 687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(1, __c);
 689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a str is a valid, but unspecified string.
 699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
 700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(basic_string&& __str)
 509              		.loc 19 703 7 is_stmt 1 view -0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              	.LBB4654:
 514              	.LBI4654:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 515              		.loc 19 221 7 view .LVU92
 516              	.LBB4655:
 517              	.LBI4655:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 518              		.loc 19 186 7 view .LVU93
 519              	.LBE4655:
 520              	.LBE4654:
 521              		.loc 19 703 7 is_stmt 0 view .LVU94
 522 0000 38B5     		push	{r3, r4, r5, lr}
 523              		.cfi_def_cfa_offset 16
 524              		.cfi_offset 3, -16
 525              		.cfi_offset 4, -12
 526              		.cfi_offset 5, -8
 527              		.cfi_offset 14, -4
 528              	.LBB4661:
 529              	.LBB4662:
 530              	.LBB4663:
 531              	.LBB4664:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 532              		.loc 19 187 28 view .LVU95
 533 0002 0B46     		mov	r3, r1
 534              	.LBE4664:
 535              	.LBE4663:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 54


 536              	.LBE4662:
 537              	.LBE4661:
 538              		.loc 19 703 7 view .LVU96
 539 0004 0C46     		mov	r4, r1
 540 0006 0546     		mov	r5, r0
 541              	.LBB4718:
 542              	.LBB4657:
 543              	.LBB4656:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 544              		.loc 19 187 28 view .LVU97
 545 0008 0068     		ldr	r0, [r0]
 546              	.LVL28:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 547              		.loc 19 187 28 view .LVU98
 548              	.LBE4656:
 549              	.LBE4657:
 550              	.LBB4658:
 551              	.LBI4658:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 552              		.loc 19 200 7 is_stmt 1 view .LVU99
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 553              		.loc 19 200 7 is_stmt 0 view .LVU100
 554              	.LBE4658:
 555              	.LBE4718:
 556              	.LBB4719:
 557              	.LBB4668:
 558              	.LBI4662:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 559              		.loc 19 221 7 is_stmt 1 view .LVU101
 560              	.LBB4666:
 561              	.LBI4663:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 562              		.loc 19 186 7 view .LVU102
 563              	.LBB4665:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 564              		.loc 19 187 28 is_stmt 0 view .LVU103
 565 000a 53F8081B 		ldr	r1, [r3], #8
 566              	.LVL29:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 567              		.loc 19 187 28 view .LVU104
 568              	.LBE4665:
 569              	.LBE4666:
 570              	.LBB4667:
 571              	.LBI4667:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 572              		.loc 19 200 7 is_stmt 1 view .LVU105
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 573              		.loc 19 200 7 is_stmt 0 view .LVU106
 574              	.LBE4667:
 575              	.LBE4668:
 704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // Destroy existing storage before replacing allocator.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 55


 711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(_M_local_data());
 713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_set_length(0);
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Replace allocator if POCMA is true.
 716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 576              		.loc 19 718 2 view .LVU107
 577 000e 9942     		cmp	r1, r3
 578 0010 18D0     		beq	.L35
 579              	.LVL30:
 580              		.loc 19 718 2 view .LVU108
 581              	.LBE4719:
 582              	.LBB4720:
 583              	.LBB4660:
 584              	.LBB4659:
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 585              		.loc 19 203 57 view .LVU109
 586 0012 05F10802 		add	r2, r5, #8
 587              	.LBE4659:
 588              	.LBE4660:
 589              	.LBE4720:
 590              	.LBB4721:
 591              	.LBB4669:
 719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // We've always got room for a short string, just copy it.
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__str.size())
 722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_set_length(__str.size());
 724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (_Alloc_traits::_S_propagate_on_move_assign()
 726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || _Alloc_traits::_S_always_equal()
 727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || _M_get_allocator() == __str._M_get_allocator())
 728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // Just move the allocated pointer, our allocator can free it.
 730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    pointer __data = nullptr;
 731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    size_type __capacity;
 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (!_M_is_local())
 592              		.loc 19 732 6 view .LVU110
 593 0016 9042     		cmp	r0, r2
 594 0018 0DD0     		beq	.L36
 595              	.LVL31:
 596              	.LBB4670:
 597              	.LBB4671:
 733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
 736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    // __str can reuse our existing storage.
 737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    __data = _M_data();
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    __capacity = _M_allocated_capacity;
 739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
 740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		else // __str can't use it, so free it.
 741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
 743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 56


 745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__data)
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		__str._M_data(__data);
 750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		__str._M_capacity(__capacity);
 751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
 752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    else
 753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else // Need to do a deep copy
 756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  assign(__str);
 757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str.clear();
 758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list.
 764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(initializer_list<_CharT> __l)
 767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(__l.begin(), __l.size());
 769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
 772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svt  An object convertible to string_view.
 777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****      template<typename _Tp>
 779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        _If_sv<_Tp, basic_string&>
 780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        operator=(const _Tp& __svt)
 781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        { return this->assign(__svt); }
 782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Convert to a string_view.
 785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return A string_view.
 786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator __sv_type() const noexcept
 788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(data(), size()); }
 789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Iterators:
 792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string.
 795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data()); }
 799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 57


 802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data()); }
 807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points one past the last
 810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
 813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data() + this->size()); }
 815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
 819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  order.
 828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
 830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->end()); }
 832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
 837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
 841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element order.
 846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
 848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->begin()); }
 850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
 854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
 855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 58


 859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cbegin() const noexcept
 867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data()); }
 868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
 872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cend() const noexcept
 875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
 881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crbegin() const noexcept
 884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
 885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
 889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
 890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crend() const noexcept
 893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
 897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Capacity:
 898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
 899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
 900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
 905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
 906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 598              		.loc 19 908 16 view .LVU111
 599 001a 6268     		ldr	r2, [r4, #4]
 600              	.LBE4671:
 601              	.LBE4670:
 602              	.LBB4673:
 603              	.LBB4674:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 59


 604              		.loc 19 179 26 view .LVU112
 605 001c 2960     		str	r1, [r5]
 606              	.LBE4674:
 607              	.LBE4673:
 608              	.LBB4675:
 609              	.LBB4676:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 610              		.loc 19 183 26 view .LVU113
 611 001e 6A60     		str	r2, [r5, #4]
 612              	.LBE4676:
 613              	.LBE4675:
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__data)
 614              		.loc 19 746 17 view .LVU114
 615 0020 A168     		ldr	r1, [r4, #8]
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
 616              		.loc 19 738 18 view .LVU115
 617 0022 AA68     		ldr	r2, [r5, #8]
 618              	.LVL32:
 619              	.LBB4678:
 620              	.LBI4673:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 621              		.loc 19 178 7 is_stmt 1 view .LVU116
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 622              		.loc 19 178 7 is_stmt 0 view .LVU117
 623              	.LBE4678:
 624              	.LBB4679:
 625              	.LBI4670:
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 626              		.loc 19 907 7 is_stmt 1 view .LVU118
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 627              		.loc 19 907 7 is_stmt 0 view .LVU119
 628              	.LBE4679:
 629              	.LBB4680:
 630              	.LBI4675:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 631              		.loc 19 182 7 is_stmt 1 view .LVU120
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 632              		.loc 19 182 7 is_stmt 0 view .LVU121
 633              	.LBE4680:
 634              	.LBB4681:
 635              	.LBI4681:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 636              		.loc 19 210 7 is_stmt 1 view .LVU122
 637              	.LBB4682:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 638              		.loc 19 211 31 is_stmt 0 view .LVU123
 639 0024 A960     		str	r1, [r5, #8]
 640              	.LVL33:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 641              		.loc 19 211 31 view .LVU124
 642              	.LBE4682:
 643              	.LBE4681:
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 644              		.loc 19 747 6 view .LVU125
 645 0026 58B1     		cbz	r0, .L27
 646              	.LVL34:
 647              	.LBB4684:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 60


 648              	.LBI4684:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 649              		.loc 19 178 7 is_stmt 1 view .LVU126
 650              	.LBB4685:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 651              		.loc 19 179 26 is_stmt 0 view .LVU127
 652 0028 2060     		str	r0, [r4]
 653              	.LVL35:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 654              		.loc 19 179 26 view .LVU128
 655              	.LBE4685:
 656              	.LBE4684:
 657              	.LBB4686:
 658              	.LBI4686:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 659              		.loc 19 210 7 is_stmt 1 view .LVU129
 660              	.LBB4687:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 661              		.loc 19 211 31 is_stmt 0 view .LVU130
 662 002a A260     		str	r2, [r4, #8]
 663              	.LVL36:
 664              	.L25:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 665              		.loc 19 211 31 view .LVU131
 666              	.LBE4687:
 667              	.LBE4686:
 668              	.LBE4669:
 669              	.LBE4721:
 670              	.LBB4722:
 671              	.LBI4722:
 909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the size() of the largest possible %string.
 911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to fill any new elements.
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will %resize the %string to the specified
 921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number of characters.  If the number is smaller than the
 922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n, _CharT __c);
 927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will resize the %string to the specified length.  If
 933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 61


 936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  setting them to 0.
 937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n)
 940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { this->resize(__n, _CharT()); }
 941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       shrink_to_fit() noexcept
 946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_exceptions
 948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (capacity() > size())
 949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    try
 951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { reserve(0); }
 952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    catch(...)
 953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { }
 954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns the total number of characters that the %string can hold
 961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  before needing to allocate more memory.
 962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	                     : _M_allocated_capacity;
 968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          characters.
 973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __res_arg  Number of characters required.
 974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function attempts to reserve enough memory for the
 977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string to hold the specified number of characters.  If the
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number requested is more than max_size(), length_error is
 979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
 980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The advantage of this function is that if optimal code is a
 982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  necessity and the user can determine the string length that will be
 983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  data.
 986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reserve(size_type __res_arg = 0);
 989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Erases the string, making it empty.
 992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 62


 993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
 672              		.loc 19 994 7 is_stmt 1 view .LVU132
 673              	.LBB4723:
 674              	.LBI4723:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 675              		.loc 19 214 7 view .LVU133
 676              	.LBB4724:
 677              	.LBI4724:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 678              		.loc 19 182 7 view .LVU134
 679              	.LBB4725:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 680              		.loc 19 183 26 is_stmt 0 view .LVU135
 681 002c 0023     		movs	r3, #0
 682              	.LBE4725:
 683              	.LBE4724:
 684              	.LBB4727:
 685              	.LBB4728:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 686              		.loc 19 187 28 view .LVU136
 687 002e 2268     		ldr	r2, [r4]
 688              	.LBE4728:
 689              	.LBE4727:
 690              	.LBB4729:
 691              	.LBB4726:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 692              		.loc 19 183 26 view .LVU137
 693 0030 6360     		str	r3, [r4, #4]
 694              	.LVL37:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 695              		.loc 19 183 26 view .LVU138
 696              	.LBE4726:
 697              	.LBE4729:
 698              	.LBB4730:
 699              	.LBI4727:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 700              		.loc 19 186 7 is_stmt 1 view .LVU139
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 701              		.loc 19 186 7 is_stmt 0 view .LVU140
 702              	.LBE4730:
 703              	.LBB4731:
 704              	.LBI4731:
 705              		.file 20 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\cha
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 63


  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** /** @file bits/char_traits.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #define _CHAR_TRAITS_H 1
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #pragma GCC system_header
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus > 201703L
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** # include <compare>
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** # define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** {
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Mapping from character type to associated types.
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note This is an implementation class for the generic version
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types, but who don't need to change the definitions of any function
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct _Char_types
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef unsigned long   int_type;
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::streampos  pos_type;
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::streamoff  off_type;
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::mbstate_t  state_type;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 64


  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     };
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note For any given actual character type, this definition is
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  namespace __gnu_cxx may be.
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef _CharT                                    char_type;
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cpp_lib_three_way_comparison
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       using comparison_category = std::strong_ordering;
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 < __c2; }
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       length(const char_type* __s);
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 65


 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       to_char_type(const int_type& __c)
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<char_type>(__c); }
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       to_int_type(const char_type& __c)
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<int_type>(__c); }
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eof()
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       not_eof(const int_type& __c)
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     };
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return -1;
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 1;
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return 0;
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     length(const char_type* __p)
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::size_t __i = 0;
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (!eq(__p[__i], char_type()))
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****         ++__i;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __i;
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****         if (eq(__s[__i], __a))
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****           return __s + __i;
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return 0;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 66


 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       if (__n == 0)
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __s1;
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       if (std::is_constant_evaluated())
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	{
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  if (__s1 > __s2 && __s1 < __s2 + __n)
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    std::copy_backward(__s2, __s2 + __n, __s1);
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  else
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    std::copy(__s2, __s2 + __n, __s1);
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	}
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 						    __n * sizeof(char_type)));
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __s1;
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::fill_n(__s, __n, __a);
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __s;
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** } // namespace
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** {
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #define __cpp_lib_constexpr_char_traits 201611
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 67


 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  string are known at compile time.
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __s  The string.
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     __constant_string_p(const _CharT* __s)
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __s;
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // In constexpr contexts all strings should be constant.
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_is_constant_evaluated();
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #else
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	__s++;
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_constant_p(*__s);
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief Determine whether the characters of a character array are
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  known at compile time.
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __a  The character array.
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __n  Number of characters.
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __a;
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __n;
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // In constexpr contexts all character arrays should be constant.
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_is_constant_evaluated();
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #else
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       size_t __i = 0;
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (__i < __n && __builtin_constant_p(__a[__i]))
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	__i++;
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __i == __n;
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   // 21.1
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note  For any given actual character type, this definition is
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 68


 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   */
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<class _CharT>
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     { };
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /// 21.1.3.1  char_traits specializations
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<>
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits<char>
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef char              char_type;
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef int               int_type;
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef streampos         pos_type;
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef streamoff         off_type;
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef mbstate_t         state_type;
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cpp_lib_three_way_comparison
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       using comparison_category = strong_ordering;
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 706              		.loc 20 321 7 is_stmt 1 view .LVU141
 707              	.LBB4732:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 708              		.loc 20 322 9 view .LVU142
 709              		.loc 20 322 14 is_stmt 0 view .LVU143
 710 0032 1370     		strb	r3, [r2]
 711              	.LVL38:
 712              		.loc 20 322 14 view .LVU144
 713              	.LBE4732:
 714              	.LBE4731:
 715              	.LBE4723:
 716              	.LBE4722:
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 717              		.loc 19 759 7 view .LVU145
 718 0034 38BD     		pop	{r3, r4, r5, pc}
 719              	.LVL39:
 720              	.L36:
 721              	.LBB4733:
 722              	.LBB4694:
 723              	.LBB4688:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 724              		.loc 19 178 7 is_stmt 1 view .LVU146
 725              	.LBE4688:
 726              	.LBB4689:
 727              	.LBB4672:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 728              		.loc 19 908 16 is_stmt 0 view .LVU147
 729 0036 6268     		ldr	r2, [r4, #4]
 730              	.LBE4672:
 731              	.LBE4689:
 732              	.LBB4690:
 733              	.LBB4677:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 734              		.loc 19 183 26 view .LVU148
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 69


 735 0038 C5E90012 		strd	r1, r2, [r5]
 736              	.LBE4677:
 737              	.LBE4690:
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__data)
 738              		.loc 19 746 17 view .LVU149
 739 003c A268     		ldr	r2, [r4, #8]
 740              	.LVL40:
 741              	.LBB4691:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 742              		.loc 19 210 7 is_stmt 1 view .LVU150
 743              	.LBB4683:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 744              		.loc 19 211 31 is_stmt 0 view .LVU151
 745 003e AA60     		str	r2, [r5, #8]
 746              	.LVL41:
 747              	.L27:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 748              		.loc 19 211 31 view .LVU152
 749              	.LBE4683:
 750              	.LBE4691:
 751              	.LBB4692:
 752              	.LBI4692:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 753              		.loc 19 178 7 is_stmt 1 view .LVU153
 754              	.LBB4693:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 755              		.loc 19 179 26 is_stmt 0 view .LVU154
 756 0040 2360     		str	r3, [r4]
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 757              		.loc 19 179 33 view .LVU155
 758 0042 F3E7     		b	.L25
 759              	.LVL42:
 760              	.L35:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 761              		.loc 19 179 33 view .LVU156
 762              	.LBE4693:
 763              	.LBE4692:
 764              	.LBE4694:
 765              	.LBB4695:
 766              	.LBI4695:
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 767              		.loc 19 901 7 is_stmt 1 view .LVU157
 768              	.LBB4696:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 769              		.loc 19 902 16 is_stmt 0 view .LVU158
 770 0044 6268     		ldr	r2, [r4, #4]
 771              	.LVL43:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 772              		.loc 19 902 16 view .LVU159
 773              	.LBE4696:
 774              	.LBE4695:
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 775              		.loc 19 721 6 view .LVU160
 776 0046 2AB1     		cbz	r2, .L23
 777              	.LVL44:
 778              	.LBB4697:
 779              	.LBI4697:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 70


 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 780              		.loc 19 346 7 is_stmt 1 view .LVU161
 781              	.LBB4698:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 782              		.loc 19 348 2 is_stmt 0 view .LVU162
 783 0048 012A     		cmp	r2, #1
 784 004a 07D0     		beq	.L37
 785              	.LVL45:
 786              	.LBB4699:
 787              	.LBI4699:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 788              		.loc 19 346 7 is_stmt 1 view .LVU163
 789              	.LBB4700:
 790              	.LBB4701:
 791              	.LBI4701:
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	// LWG 467.
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 		< static_cast<unsigned char>(__c2));
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__builtin_constant_p(__n)
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       length(const char_type* __s)
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__constant_string_p(__s))
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __builtin_strlen(__s);
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR const char_type*
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       find(const char_type* __s, size_t __n, const char_type& __a)
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 71


 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__builtin_constant_p(__n)
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __builtin_constant_p(__a)
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s, __n))
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::find(__s, __n, __a);
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, size_t __n)
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (std::is_constant_evaluated())
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::move(__s1, __s2, __n);
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, size_t __n)
 792              		.loc 20 387 7 view .LVU164
 793              	.LBB4702:
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 794              		.loc 20 389 2 view .LVU165
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (std::is_constant_evaluated())
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::copy(__s1, __s2, __n);
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
 795              		.loc 20 395 2 view .LVU166
 796              		.loc 20 395 49 is_stmt 0 view .LVU167
 797 004c FFF7FEFF 		bl	memcpy
 798              	.LVL46:
 799              		.loc 20 395 49 view .LVU168
 800 0050 2868     		ldr	r0, [r5]
 801 0052 6268     		ldr	r2, [r4, #4]
 802              	.LVL47:
 803              	.L23:
 804              		.loc 20 395 49 view .LVU169
 805              	.LBE4702:
 806              	.LBE4701:
 807              	.LBE4700:
 808              	.LBE4699:
 809              	.LBE4698:
 810              	.LBE4697:
 811              	.LBB4706:
 812              	.LBI4706:
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 813              		.loc 19 901 7 is_stmt 1 view .LVU170
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 814              		.loc 19 901 7 is_stmt 0 view .LVU171
 815              	.LBE4706:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 72


 816              	.LBB4707:
 817              	.LBI4707:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 818              		.loc 19 214 7 is_stmt 1 view .LVU172
 819              	.LBB4708:
 820              	.LBB4709:
 821              	.LBI4709:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 822              		.loc 19 182 7 view .LVU173
 823              	.LBE4709:
 824              	.LBB4711:
 825              	.LBB4712:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 826              		.loc 20 322 14 is_stmt 0 view .LVU174
 827 0054 0023     		movs	r3, #0
 828              	.LBE4712:
 829              	.LBE4711:
 830              	.LBB4714:
 831              	.LBB4710:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 832              		.loc 19 183 26 view .LVU175
 833 0056 6A60     		str	r2, [r5, #4]
 834              	.LVL48:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 835              		.loc 19 183 26 view .LVU176
 836              	.LBE4710:
 837              	.LBE4714:
 838              	.LBB4715:
 839              	.LBI4715:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 840              		.loc 19 186 7 is_stmt 1 view .LVU177
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 841              		.loc 19 186 7 is_stmt 0 view .LVU178
 842              	.LBE4715:
 843              	.LBB4716:
 844              	.LBI4711:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 845              		.loc 20 321 7 is_stmt 1 view .LVU179
 846              	.LBB4713:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 847              		.loc 20 322 9 view .LVU180
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 848              		.loc 20 322 14 is_stmt 0 view .LVU181
 849 0058 8354     		strb	r3, [r0, r2]
 850              	.LVL49:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 851              		.loc 20 322 14 view .LVU182
 852              	.LBE4713:
 853              	.LBE4716:
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 854              		.loc 19 218 7 view .LVU183
 855 005a E7E7     		b	.L25
 856              	.LVL50:
 857              	.L37:
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 858              		.loc 19 218 7 view .LVU184
 859              	.LBE4708:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 73


 860              	.LBE4707:
 861              	.LBB4717:
 862              	.LBB4705:
 863              	.LBB4703:
 864              	.LBI4703:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 865              		.loc 20 321 7 is_stmt 1 view .LVU185
 866              	.LBB4704:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 867              		.loc 20 322 9 view .LVU186
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 868              		.loc 20 322 16 is_stmt 0 view .LVU187
 869 005c 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 870              	.LVL51:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 871              		.loc 20 322 14 view .LVU188
 872 005e 0370     		strb	r3, [r0]
 873 0060 2868     		ldr	r0, [r5]
 874              	.LVL52:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 875              		.loc 20 322 14 view .LVU189
 876 0062 6268     		ldr	r2, [r4, #4]
 877              	.LVL53:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 878              		.loc 20 322 22 view .LVU190
 879 0064 F6E7     		b	.L23
 880              	.LBE4704:
 881              	.LBE4703:
 882              	.LBE4705:
 883              	.LBE4717:
 884              	.LBE4733:
 885              		.cfi_endproc
 886              	.LFE6202:
 888 0066 00BF     		.section	.rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra
 889              		.align	2
 890              	.LC9:
 891 0000 62617369 		.ascii	"basic_string::_M_construct null not valid\000"
 891      635F7374 
 891      72696E67 
 891      3A3A5F4D 
 891      5F636F6E 
 892              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 893              		.align	1
 894              		.p2align 2,,3
 895              		.syntax unified
 896              		.thumb
 897              		.thumb_func
 898              		.fpu fpv5-d16
 900              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0:
 901              	.LVL54:
 902              	.LFB6222:
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 903              		.loc 19 525 7 is_stmt 1 view -0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 8
 906              		@ frame_needed = 0, uses_anonymous_args = 0
 907              	.LBB4793:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 74


 908              	.LBB4794:
 909              	.LBI4794:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 910              		.loc 19 190 7 view .LVU192
 911              	.LBE4794:
 912              	.LBE4793:
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 913              		.loc 19 525 7 is_stmt 0 view .LVU193
 914 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 915              		.cfi_def_cfa_offset 20
 916              		.cfi_offset 4, -20
 917              		.cfi_offset 5, -16
 918              		.cfi_offset 6, -12
 919              		.cfi_offset 7, -8
 920              		.cfi_offset 14, -4
 921              	.LBB4873:
 922              	.LBB4796:
 923              	.LBB4795:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 924              		.loc 19 193 51 view .LVU194
 925 0002 00F10807 		add	r7, r0, #8
 926              	.LVL55:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 927              		.loc 19 193 51 view .LVU195
 928              	.LBE4795:
 929              	.LBE4796:
 930              	.LBB4797:
 931              	.LBI4797:
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 932              		.loc 19 156 2 is_stmt 1 view .LVU196
 933              	.LBB4798:
 934              	.LBB4799:
 935              	.LBI4799:
 936              		.file 21 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\all
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Allocators -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // <http://www.gnu.org/licenses/>.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 75


  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Copyright (c) 1996-1997
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * that both that copyright notice and this permission notice appear
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * representations about the suitability of this software for any
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /** @file bits/allocator.h
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  This is an internal header file, included by other library headers.
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #ifndef _ALLOCATOR_H
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define _ALLOCATOR_H 1
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/memoryfwd.h>
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <type_traits>
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** {
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @addtogroup allocators
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @{
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /// allocator<void> specialization.
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator<void>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void        value_type;
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t      size_type;
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t   difference_type;
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void*       pointer;
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const void* const_pointer;
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #else
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() = default;
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 76


  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	constexpr
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Up>&) { }
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // ! C++20
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L && __cplusplus <= 201703L
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up, typename... _Args>
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	destroy(_Up* __p)
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_destructible<_Up>::value)
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ __p->~_Up(); }
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // C++11 to C++17
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     };
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  for further details.
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<typename _Tp>
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator : public __allocator_base<_Tp>
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp        value_type;
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t     size_type;
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t  difference_type;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp*       pointer;
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp* const_pointer;
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp&       reference;
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp& const_reference;
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 77


 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 937              		.loc 21 147 7 view .LVU197
 938              	.LBB4800:
 939              	.LBI4800:
 940              		.file 22 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\new_
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** /** @file ext/new_allocator.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  */
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/c++config.h>
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <new>
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/functexcept.h>
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/move.h>
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <type_traits>
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** {
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 78


  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   /**
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @ingroup allocators
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all allocation calls operator new
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all deallocation calls operator delete
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    */
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   template<typename _Tp>
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     class new_allocator
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     {
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     public:
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp        value_type;
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::size_t     size_type;
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp*       pointer;
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp* const_pointer;
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp&       reference;
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp& const_reference;
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	struct rebind
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 941              		.loc 22 82 7 view .LVU198
 942              		.loc 22 82 7 is_stmt 0 view .LVU199
 943              	.LBE4800:
 944              	.LBE4799:
 945              	.LBE4798:
 946              	.LBE4797:
 947              	.LBE4873:
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 948              		.loc 19 525 7 view .LVU200
 949 0006 83B0     		sub	sp, sp, #12
 950              		.cfi_def_cfa_offset 32
 951              	.LBB4874:
 952              	.LBB4802:
 953              	.LBB4801:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 954              		.loc 19 157 35 view .LVU201
 955 0008 0760     		str	r7, [r0]
 956              	.LVL56:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 79


 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 957              		.loc 19 157 35 view .LVU202
 958              	.LBE4801:
 959              	.LBE4802:
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 960              		.loc 19 527 21 view .LVU203
 961 000a 29B3     		cbz	r1, .L39
 962 000c 0446     		mov	r4, r0
 963              	.LBB4803:
 964              	.LBB4804:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 965              		.loc 20 357 25 view .LVU204
 966 000e 0846     		mov	r0, r1
 967              	.LVL57:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 968              		.loc 20 357 25 view .LVU205
 969 0010 0E46     		mov	r6, r1
 970              	.LVL58:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 971              		.loc 20 357 25 view .LVU206
 972              	.LBE4804:
 973              	.LBI4803:
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 974              		.loc 20 351 7 is_stmt 1 view .LVU207
 975              	.LBB4805:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 976              		.loc 20 357 2 view .LVU208
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 977              		.loc 20 357 25 is_stmt 0 view .LVU209
 978 0012 FFF7FEFF 		bl	strlen
 979              	.LVL59:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 980              		.loc 20 357 25 view .LVU210
 981              	.LBE4805:
 982              	.LBE4803:
 983              	.LBB4807:
 984              	.LBB4808:
 985              	.LBB4809:
 986              	.LBB4810:
 987              	.LBB4811:
 988              	.LBB4812:
 989              		.file 23 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\bas
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Components for manipulating sequences of characters -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 80


  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** /** @file bits/basic_string.tcc
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  *  Do not attempt to use it directly. @headername{string}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // ISO C++ 14882: 21  Strings library
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Written by Jason Merrill based upon the specification by Takanori Adachi
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers to ISO-14882.
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Non-reference-counted implementation written by Paolo Carlini and
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // updated by Jonathan Wakely for ISO-14882-2011.
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #ifndef _BASIC_STRING_TCC
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #define _BASIC_STRING_TCC 1
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #pragma GCC system_header
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #include <bits/cxxabi_forced.h>
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** {
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #if _GLIBCXX_USE_CXX11_ABI
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::npos;
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     void
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     swap(basic_string& __s) _GLIBCXX_NOEXCEPT
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     {
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (this == &__s)
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	return;
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _Alloc_traits::_S_on_swap(_M_get_allocator(), __s._M_get_allocator());
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (_M_is_local())
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__s._M_is_local())
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    if (length() && __s.length())
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_CharT __tmp_data[_S_local_capacity + 1];
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__tmp_data, __s._M_local_buf,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 81


  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(_M_local_buf, __tmp_data,
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    else if (__s.length())
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(_M_local_buf, __s._M_local_buf,
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_length(__s.length());
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		__s._M_set_length(0);
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		return;
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    else if (length())
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		__s._M_length(length());
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_set_length(0);
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		return;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	else
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    const size_type __tmp_capacity = __s._M_allocated_capacity;
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    traits_type::copy(__s._M_local_buf, _M_local_buf,
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 			      _S_local_capacity + 1);
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data(__s._M_data());
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __s._M_data(__s._M_local_buf);
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__tmp_capacity);
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       else
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	{
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  const size_type __tmp_capacity = _M_allocated_capacity;
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  if (__s._M_is_local())
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    {
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      traits_type::copy(_M_local_buf, __s._M_local_buf,
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				_S_local_capacity + 1);
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      __s._M_data(_M_data());
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_data(_M_local_buf);
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    }
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  else
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    {
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      pointer __tmp_ptr = _M_data();
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_data(__s._M_data());
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      __s._M_data(__tmp_ptr);
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_capacity(__s._M_allocated_capacity);
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    }
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  __s._M_capacity(__tmp_capacity);
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	}
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       const size_type __tmp_length = length();
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_length(__s.length());
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       __s._M_length(__tmp_length);
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     }
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 82


 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::pointer
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     _M_create(size_type& __capacity, size_type __old_capacity)
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     {
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // 83.  String::npos vs. string::max_size()
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (__capacity > max_size())
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	std::__throw_length_error(__N("basic_string::_M_create"));
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // The below implements an exponential growth policy, necessary to
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // meet amortized linear time requirements of the library: see
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	{
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  __capacity = 2 * __old_capacity;
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  // Never allocate a string bigger than max_size.
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  if (__capacity > max_size())
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __capacity = max_size();
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	}
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // NB: Need an array of char_type[__capacity], plus a terminating
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // null char_type() element.
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     }
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // NB: This is the special case for Input Iterators, used in
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // istreambuf_iterators, etc.
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // Input Iterators have a cost structure very different from
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // pointers, calling for a different coding style.
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     template<typename _InIterator>
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       void
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		   std::input_iterator_tag)
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       {
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __len = 0;
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __capacity = size_type(_S_local_capacity);
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	while (__beg != __end && __len < __capacity)
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data()[__len++] = *__beg;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    ++__beg;
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__try
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    while (__beg != __end)
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		if (__len == __capacity)
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		  {
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    // Allocate more space.
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    __capacity = __len + 1;
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    pointer __another = _M_create(__capacity, __len);
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    this->_S_copy(__another, _M_data(), __len);
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_dispose();
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 83


 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_data(__another);
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_capacity(__capacity);
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		  }
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_data()[__len++] = *__beg;
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		++__beg;
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__catch(...)
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_dispose();
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __throw_exception_again;
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	_M_set_length(__len);
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       }
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     template<typename _InIterator>
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       void
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		   std::forward_iterator_tag)
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       {
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	// NB: Not required, but considered best practice.
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__dnew > size_type(_S_local_capacity))
 990              		.loc 23 217 2 view .LVU211
 991 0016 0F28     		cmp	r0, #15
 992              	.LBE4812:
 993              	.LBE4811:
 994              	.LBE4810:
 995              	.LBE4809:
 996              	.LBE4808:
 997              	.LBE4807:
 998              	.LBB4870:
 999              	.LBB4806:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 1000              		.loc 20 357 25 view .LVU212
 1001 0018 0546     		mov	r5, r0
 1002              	.LVL60:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 1003              		.loc 20 357 25 view .LVU213
 1004              	.LBE4806:
 1005              	.LBE4870:
 1006              	.LBB4871:
 1007              	.LBI4807:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 1008              		.loc 19 263 9 is_stmt 1 view .LVU214
 1009              	.LBB4867:
 1010              	.LBB4864:
 1011              	.LBI4809:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 84


 1012              		.loc 19 243 9 view .LVU215
 1013              	.LBB4861:
 1014              	.LBB4858:
 1015              	.LBI4811:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 1016              		.loc 23 206 7 view .LVU216
 1017              	.LBB4855:
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 1018              		.loc 23 215 12 is_stmt 0 view .LVU217
 1019 001a 0190     		str	r0, [sp, #4]
 1020              		.loc 23 217 2 view .LVU218
 1021 001c 0DD8     		bhi	.L50
 1022              	.LVL61:
 1023              	.LBB4813:
 1024              	.LBI4813:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1025              		.loc 19 186 7 is_stmt 1 view .LVU219
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1026              		.loc 19 186 7 is_stmt 0 view .LVU220
 1027              	.LBE4813:
 1028              	.LBB4814:
 1029              	.LBI4814:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 1030              		.loc 19 396 7 is_stmt 1 view .LVU221
 1031              	.LBB4815:
 1032              	.LBI4815:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1033              		.loc 19 346 7 view .LVU222
 1034              	.LBB4816:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 1035              		.loc 19 348 2 is_stmt 0 view .LVU223
 1036 001e 0128     		cmp	r0, #1
 1037 0020 08D1     		bne	.L43
 1038              	.LVL62:
 1039              	.LBB4817:
 1040              	.LBI4817:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 1041              		.loc 20 321 7 is_stmt 1 view .LVU224
 1042              	.LBB4818:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1043              		.loc 20 322 9 view .LVU225
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1044              		.loc 20 322 14 is_stmt 0 view .LVU226
 1045 0022 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 1046 0024 2372     		strb	r3, [r4, #8]
 1047              	.LVL63:
 1048              	.L44:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1049              		.loc 20 322 14 view .LVU227
 1050              	.LBE4818:
 1051              	.LBE4817:
 1052              	.LBE4816:
 1053              	.LBE4815:
 1054              	.LBE4814:
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data(_M_create(__dnew, size_type(0)));
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 85


 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	// Check for out_of_range and length_error exceptions.
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__try
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__catch(...)
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_dispose();
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __throw_exception_again;
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	_M_set_length(__dnew);
 1055              		.loc 23 232 15 view .LVU228
 1056 0026 019B     		ldr	r3, [sp, #4]
 1057              	.LVL64:
 1058              	.LBB4834:
 1059              	.LBI4834:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1060              		.loc 19 214 7 is_stmt 1 view .LVU229
 1061              	.LBB4835:
 1062              	.LBB4836:
 1063              	.LBI4836:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 1064              		.loc 19 182 7 view .LVU230
 1065              	.LBE4836:
 1066              	.LBB4838:
 1067              	.LBB4839:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1068              		.loc 20 322 14 is_stmt 0 view .LVU231
 1069 0028 0021     		movs	r1, #0
 1070 002a 2268     		ldr	r2, [r4]
 1071              	.LBE4839:
 1072              	.LBE4838:
 1073              	.LBB4841:
 1074              	.LBB4837:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1075              		.loc 19 183 26 view .LVU232
 1076 002c 6360     		str	r3, [r4, #4]
 1077              	.LVL65:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1078              		.loc 19 183 26 view .LVU233
 1079              	.LBE4837:
 1080              	.LBE4841:
 1081              	.LBB4842:
 1082              	.LBI4842:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1083              		.loc 19 186 7 is_stmt 1 view .LVU234
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1084              		.loc 19 186 7 is_stmt 0 view .LVU235
 1085              	.LBE4842:
 1086              	.LBB4843:
 1087              	.LBI4838:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 1088              		.loc 20 321 7 is_stmt 1 view .LVU236
 1089              	.LBB4840:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1090              		.loc 20 322 9 view .LVU237
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 86


 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1091              		.loc 20 322 14 is_stmt 0 view .LVU238
 1092 002e D154     		strb	r1, [r2, r3]
 1093              	.LVL66:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1094              		.loc 20 322 14 view .LVU239
 1095              	.LBE4840:
 1096              	.LBE4843:
 1097              	.LBE4835:
 1098              	.LBE4834:
 1099              	.LBE4855:
 1100              	.LBE4858:
 1101              	.LBE4861:
 1102              	.LBE4864:
 1103              	.LBE4867:
 1104              	.LBE4871:
 1105              	.LBE4874:
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1106              		.loc 19 527 77 view .LVU240
 1107 0030 03B0     		add	sp, sp, #12
 1108              		.cfi_remember_state
 1109              		.cfi_def_cfa_offset 20
 1110              		@ sp needed
 1111 0032 F0BD     		pop	{r4, r5, r6, r7, pc}
 1112              	.LVL67:
 1113              	.L43:
 1114              		.cfi_restore_state
 1115              	.LBB4875:
 1116              	.LBB4872:
 1117              	.LBB4868:
 1118              	.LBB4865:
 1119              	.LBB4862:
 1120              	.LBB4859:
 1121              	.LBB4856:
 1122              	.LBB4844:
 1123              	.LBB4831:
 1124              	.LBB4828:
 1125              	.LBB4819:
 1126              	.LBI4819:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1127              		.loc 19 346 7 is_stmt 1 view .LVU241
 1128              	.LBB4820:
 1129              	.LBI4820:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 1130              		.loc 20 387 7 view .LVU242
 1131              	.LBB4821:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 1132              		.loc 20 389 2 view .LVU243
 1133 0034 0028     		cmp	r0, #0
 1134 0036 F6D0     		beq	.L44
 1135 0038 08E0     		b	.L42
 1136              	.LVL68:
 1137              	.L50:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 1138              		.loc 20 389 2 is_stmt 0 view .LVU244
 1139              	.LBE4821:
 1140              	.LBE4820:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 87


 1141              	.LBE4819:
 1142              	.LBE4828:
 1143              	.LBE4831:
 1144              	.LBE4844:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 1145              		.loc 23 219 13 view .LVU245
 1146 003a 0022     		movs	r2, #0
 1147 003c 01A9     		add	r1, sp, #4
 1148 003e 2046     		mov	r0, r4
 1149              	.LVL69:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 1150              		.loc 23 219 13 view .LVU246
 1151 0040 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 1152              	.LVL70:
 1153              	.LBB4845:
 1154              	.LBB4846:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1155              		.loc 19 211 31 view .LVU247
 1156 0044 019B     		ldr	r3, [sp, #4]
 1157              	.LBE4846:
 1158              	.LBE4845:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 1159              		.loc 23 219 13 view .LVU248
 1160 0046 0746     		mov	r7, r0
 1161              	.LVL71:
 1162              	.LBB4848:
 1163              	.LBI4848:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 1164              		.loc 19 178 7 is_stmt 1 view .LVU249
 1165              	.LBB4849:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1166              		.loc 19 179 26 is_stmt 0 view .LVU250
 1167 0048 2060     		str	r0, [r4]
 1168              	.LVL72:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1169              		.loc 19 179 26 view .LVU251
 1170              	.LBE4849:
 1171              	.LBE4848:
 1172              	.LBB4850:
 1173              	.LBI4845:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1174              		.loc 19 210 7 is_stmt 1 view .LVU252
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1175              		.loc 19 210 7 is_stmt 0 view .LVU253
 1176              	.LBE4850:
 1177              	.LBB4851:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1178              		.loc 19 186 7 is_stmt 1 view .LVU254
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1179              		.loc 19 186 7 is_stmt 0 view .LVU255
 1180              	.LBE4851:
 1181              	.LBB4852:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 1182              		.loc 19 396 7 is_stmt 1 view .LVU256
 1183              	.LBB4832:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1184              		.loc 19 346 7 view .LVU257
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 88


 1185              	.LBB4829:
 1186              	.LBB4826:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1187              		.loc 19 346 7 view .LVU258
 1188              	.LBB4824:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 1189              		.loc 20 387 7 view .LVU259
 1190              	.LBB4822:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 1191              		.loc 20 389 2 view .LVU260
 1192              	.LBE4822:
 1193              	.LBE4824:
 1194              	.LBE4826:
 1195              	.LBE4829:
 1196              	.LBE4832:
 1197              	.LBE4852:
 1198              	.LBB4853:
 1199              	.LBB4847:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1200              		.loc 19 211 31 is_stmt 0 view .LVU261
 1201 004a A360     		str	r3, [r4, #8]
 1202              	.LVL73:
 1203              	.L42:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1204              		.loc 19 211 31 view .LVU262
 1205              	.LBE4847:
 1206              	.LBE4853:
 1207              	.LBB4854:
 1208              	.LBB4833:
 1209              	.LBB4830:
 1210              	.LBB4827:
 1211              	.LBB4825:
 1212              	.LBB4823:
 1213              		.loc 20 395 2 is_stmt 1 view .LVU263
 1214              		.loc 20 395 49 is_stmt 0 view .LVU264
 1215 004c 2A46     		mov	r2, r5
 1216 004e 3146     		mov	r1, r6
 1217 0050 3846     		mov	r0, r7
 1218 0052 FFF7FEFF 		bl	memcpy
 1219              	.LVL74:
 1220              		.loc 20 395 66 view .LVU265
 1221 0056 E6E7     		b	.L44
 1222              	.LVL75:
 1223              	.L39:
 1224              		.loc 20 395 66 view .LVU266
 1225              	.LBE4823:
 1226              	.LBE4825:
 1227              	.LBE4827:
 1228              	.LBE4830:
 1229              	.LBE4833:
 1230              	.LBE4854:
 1231              	.LBE4856:
 1232              	.LBE4859:
 1233              	.LBE4862:
 1234              	.LBE4865:
 1235              	.LBE4868:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 89


 1236              		.loc 19 263 9 is_stmt 1 view .LVU267
 1237              	.LBB4869:
 1238              	.LBB4866:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 1239              		.loc 19 243 9 view .LVU268
 1240              	.LBB4863:
 1241              	.LBB4860:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 1242              		.loc 23 206 7 view .LVU269
 1243              	.LBB4857:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 1244              		.loc 23 212 28 is_stmt 0 view .LVU270
 1245 0058 0148     		ldr	r0, .L51
 1246              	.LVL76:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 1247              		.loc 23 212 28 view .LVU271
 1248 005a FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 1249              	.LVL77:
 1250              	.L52:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 1251              		.loc 23 212 28 view .LVU272
 1252 005e 00BF     		.align	2
 1253              	.L51:
 1254 0060 00000000 		.word	.LC9
 1255              	.LBE4857:
 1256              	.LBE4860:
 1257              	.LBE4863:
 1258              	.LBE4866:
 1259              	.LBE4869:
 1260              	.LBE4872:
 1261              	.LBE4875:
 1262              		.cfi_endproc
 1263              	.LFE6222:
 1265              		.section	.text._ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev,"axG",%p
 1266              		.align	1
 1267              		.p2align 2,,3
 1268              		.weak	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev
 1269              		.syntax unified
 1270              		.thumb
 1271              		.thumb_func
 1272              		.fpu fpv5-d16
 1274              	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev:
 1275              	.LVL78:
 1276              	.LFB6180:
 1277              		.file 24 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\array"
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // <array> -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 90


  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** /** @file include/array
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****  *  This is a Standard C++ Library header.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****  */
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #ifndef _GLIBCXX_ARRAY
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #define _GLIBCXX_ARRAY 1
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #pragma GCC system_header
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #if __cplusplus < 201103L
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** # include <bits/c++0x_warning.h>
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #else
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #include <utility>
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #include <bits/functexcept.h>
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #include <bits/stl_algobase.h>
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #include <bits/range_access.h>
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** namespace std _GLIBCXX_VISIBILITY(default)
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** {
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****   template<typename _Tp, std::size_t _Nm>
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     struct __array_traits
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef _Tp _Type[_Nm];
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef __is_swappable<_Tp> _Is_swappable;
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef __is_nothrow_swappable<_Tp> _Is_nothrow_swappable;
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       static constexpr _Tp&
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _S_ref(const _Type& __t, std::size_t __n) noexcept
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       static constexpr _Tp*
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _S_ptr(const _Type& __t) noexcept
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp*>(__t); }
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     };
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****  template<typename _Tp>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    struct __array_traits<_Tp, 0>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    {
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      struct _Type { };
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      typedef true_type _Is_swappable;
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      typedef true_type _Is_nothrow_swappable;
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 91


  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      static constexpr _Tp&
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      _S_ref(const _Type&, std::size_t) noexcept
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      { return *static_cast<_Tp*>(nullptr); }
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      static constexpr _Tp*
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      _S_ptr(const _Type&) noexcept
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      { return nullptr; }
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    };
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****   /**
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  @brief A standard container for storing a fixed size sequence of elements.
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  @ingroup sequences
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  <a href="tables.html#66">reversible container</a>, and a
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  <a href="tables.html#67">sequence</a>.
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  Sets support random access iterators.
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  @tparam  Tp  Type of element. Required to be a complete type.
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  @tparam  Nm  Number of elements.
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****   */
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****   template<typename _Tp, std::size_t _Nm>
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     struct array
 1278              		.loc 24 94 12 is_stmt 1 view -0
 1279              		.cfi_startproc
 1280              		@ args = 0, pretend = 0, frame = 0
 1281              		@ frame_needed = 0, uses_anonymous_args = 0
 1282              		.loc 24 94 12 is_stmt 0 view .LVU274
 1283 0000 70B5     		push	{r4, r5, r6, lr}
 1284              		.cfi_def_cfa_offset 16
 1285              		.cfi_offset 4, -16
 1286              		.cfi_offset 5, -12
 1287              		.cfi_offset 6, -8
 1288              		.cfi_offset 14, -4
 1289              		.loc 24 94 12 view .LVU275
 1290 0002 0646     		mov	r6, r0
 1291              	.LBB4895:
 1292 0004 00F5B465 		add	r5, r0, #1440
 1293 0008 00F5B264 		add	r4, r0, #1424
 1294              	.LVL79:
 1295              	.L55:
 1296              	.LBB4896:
 1297              	.LBB4897:
 1298              	.LBB4898:
 1299              	.LBB4899:
 1300              	.LBB4900:
 1301              	.LBB4901:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1302              		.loc 19 187 28 discriminator 5 view .LVU276
 1303 000c 54F8080C 		ldr	r0, [r4, #-8]
 1304              	.LBE4901:
 1305              	.LBE4900:
 1306              	.LBE4899:
 1307              	.LBE4898:
 1308              	.LBE4897:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 92


 1309              	.LBE4896:
 1310              		.loc 24 94 12 discriminator 5 view .LVU277
 1311 0010 183D     		subs	r5, r5, #24
 1312              	.LVL80:
 1313              	.LBB4920:
 1314              	.LBI4896:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 1315              		.loc 19 657 7 is_stmt 1 discriminator 5 view .LVU278
 1316              	.LBB4915:
 1317              	.LBI4897:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1318              		.loc 19 229 7 discriminator 5 view .LVU279
 1319              	.LBB4913:
 1320              	.LBB4903:
 1321              	.LBI4899:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 1322              		.loc 19 221 7 discriminator 5 view .LVU280
 1323              	.LBB4902:
 1324              	.LBI4900:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1325              		.loc 19 186 7 discriminator 5 view .LVU281
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1326              		.loc 19 186 7 is_stmt 0 discriminator 5 view .LVU282
 1327              	.LBE4902:
 1328              	.LBE4903:
 1329              	.LBB4904:
 1330              	.LBI4904:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1331              		.loc 19 236 7 is_stmt 1 discriminator 5 view .LVU283
 1332              	.LBB4905:
 1333              	.LBB4906:
 1334              	.LBI4906:
 1335              		.file 25 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\all
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 93


  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** /** @file bits/alloc_traits.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/stl_construct.h>
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/memoryfwd.h>
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/allocator.h>
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/ptr_traits.h>
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <ext/numeric_traits.h>
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** {
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   struct __allocator_traits_base
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   {
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up>
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind<_Tp, _Up,
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   protected:
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   };
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Up>
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using __alloc_rebind
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 94


  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @ingroup allocators
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   */
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef _Alloc allocator_type;
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's pointer type.
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = _Func<_Alloc>;
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT>
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT>
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const pointer type.
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 95


 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's void pointer type.
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's difference type
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's size type
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 96


 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr pointer
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n); }
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct __construct_helper
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename _Alloc2,
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static true_type __test(int);
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename>
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static false_type __test(...);
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using __has_construct
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp, _Args...>>
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 97


 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Tp, _Args...>::value)
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR auto
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.destroy(__p); }
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR void
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_destructible<_Tp>::value)
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ std::_Destroy(__p); }
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.max_size())
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.max_size(); }
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr size_type
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    / sizeof(value_type);
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr _Alloc2
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a; }
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 98


 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  arguments @a __args...
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR auto
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 99


 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(_Alloc& __a, _Tp* __p)
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const _Alloc& __a) noexcept
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_max_size(__a, 0); }
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR _Alloc
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_select(__rhs, 0); }
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus > 201703L
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # define __cpp_lib_constexpr_dynamic_alloc 201907L
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /// Partial specialization for std::allocator.
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using value_type = _Tp;
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's pointer type.
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = _Tp*;
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const pointer type.
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = const _Tp*;
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's void pointer type.
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = void*;
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 100


 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const void pointer type.
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = const void*;
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's difference type
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's size type
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = std::size_t;
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on move assignment
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on swap
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap = false_type;
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal = true_type;
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n, __hint);
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n);
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 101


 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 1336              		.loc 25 491 7 discriminator 5 view .LVU284
 1337              	.LBB4907:
 1338              	.LBI4907:
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       pointer
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       const_pointer
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // about what the return value is when __n == 0.
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX_NODISCARD _Tp*
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (__n > this->_M_max_size())
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // __p is not permitted to be a null pointer.
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       void
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       deallocate(_Tp* __p, size_type __t)
 1339              		.loc 22 120 7 discriminator 5 view .LVU285
 1340              	.LBE4907:
 1341              	.LBE4906:
 1342              	.LBE4905:
 1343              	.LBE4904:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 102


 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1344              		.loc 19 231 2 is_stmt 0 discriminator 5 view .LVU286
 1345 0012 A042     		cmp	r0, r4
 1346              	.LBE4913:
 1347              	.LBE4915:
 1348              	.LBE4920:
 1349              		.loc 24 94 12 discriminator 5 view .LVU287
 1350 0014 A4F11804 		sub	r4, r4, #24
 1351              	.LBB4921:
 1352              	.LBB4916:
 1353              	.LBB4914:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1354              		.loc 19 231 2 discriminator 5 view .LVU288
 1355 0018 03D0     		beq	.L54
 1356              	.LBB4912:
 1357              	.LBB4911:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1358              		.loc 19 237 34 view .LVU289
 1359 001a A968     		ldr	r1, [r5, #8]
 1360              	.LBB4910:
 1361              	.LBB4909:
 1362              	.LBB4908:
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    ::operator delete(__p,
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # if __cpp_sized_deallocation
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      __t * sizeof(_Tp),
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # endif
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      std::align_val_t(alignof(_Tp)));
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return;
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	::operator delete(__p
 1363              		.loc 22 133 19 view .LVU290
 1364 001c 0131     		adds	r1, r1, #1
 1365              	.LVL81:
 1366              		.loc 22 133 19 view .LVU291
 1367 001e FFF7FEFF 		bl	_ZdlPvj
 1368              	.LVL82:
 1369              	.L54:
 1370              		.loc 22 133 19 view .LVU292
 1371              	.LBE4908:
 1372              	.LBE4909:
 1373              	.LBE4910:
 1374              	.LBE4911:
 1375              	.LBE4912:
 1376              	.LBE4914:
 1377              	.LBE4916:
 1378              	.LBB4917:
 1379              	.LBI4917:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1380              		.loc 19 150 14 is_stmt 1 view .LVU293
 1381              	.LBB4918:
 1382              	.LBI4918:
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 103


 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // Avoid implicit deprecation.
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator& operator=(const allocator&) = default;
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	_GLIBCXX20_CONSTEXPR
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cpp_constexpr_dynamic_alloc
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       constexpr
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 1383              		.loc 21 162 7 view .LVU294
 1384              	.LBB4919:
 1385              	.LBI4919:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1386              		.loc 22 89 7 view .LVU295
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1387              		.loc 22 89 7 is_stmt 0 view .LVU296
 1388              	.LBE4919:
 1389              	.LBE4918:
 1390              	.LBE4917:
 1391              	.LBE4921:
 1392              		.loc 24 94 12 view .LVU297
 1393 0022 AE42     		cmp	r6, r5
 1394 0024 F2D1     		bne	.L55
 1395              	.LBE4895:
 1396              		.loc 24 94 12 discriminator 7 view .LVU298
 1397 0026 3046     		mov	r0, r6
 1398 0028 70BD     		pop	{r4, r5, r6, pc}
 1399              		.loc 24 94 12 discriminator 7 view .LVU299
 1400              		.cfi_endproc
 1401              	.LFE6180:
 1403              		.weak	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED1Ev
 1404              		.thumb_set _ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED1Ev,_ZNSt5arrayI
 1405 002a 00BF     		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,"axG"
 1406              		.align	1
 1407              		.p2align 2,,3
 1408              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
 1409              		.syntax unified
 1410              		.thumb
 1411              		.thumb_func
 1412              		.fpu fpv5-d16
 1414              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:
 1415              	.LVL83:
 1416              	.LFB5515:
 1417              		.file 26 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Vector implementation -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 104


   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1996
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this  software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /** @file bits/stl_vector.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifndef _STL_VECTOR_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _STL_VECTOR_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/functexcept.h>
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/concept_check.h>
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <initializer_list>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201703L
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 105


  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # include <compare>
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <debug/assertions.h>
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** extern "C" void
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** __sanitizer_annotate_contiguous_container(const void*, const void*,
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  const void*, const void*);
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** {
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc>
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     struct _Vector_base
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        	pointer;
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl_data
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_start;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_finish;
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_end_of_storage;
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage(__x._M_end_of_storage)
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_start = __x._M_start;
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // information used by TBAA.
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Vector_impl_data __tmp;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __tmp._M_copy_data(*this);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 106


 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_copy_data(__x);
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __x._M_copy_data(__tmp);
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type()
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Not defaulted, to enforce noexcept(true) even when
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// !is_nothrow_move_constructible<_Tp_alloc_type>.
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Vector_impl&& __x) noexcept
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a))
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)), _Vector_impl_data(std::move(__rv))
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename = _Tp_alloc_type>
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_shrink(_Vector_impl&, size_type) { }
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_on_dealloc(_Vector_impl&) { }
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef _Vector_impl& _Reinit;
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl&, size_type) { }
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type) { }
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Enable ASan annotations for memory obtained from std::allocator.
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename _Up>
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan<allocator<_Up> >
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 107


 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Adjust ASan annotation for [_M_start, _M_end_of_storage) to
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // mark end of valid region as __curr instead of __prev.
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __sanitizer_annotate_contiguous_container(__impl._M_start,
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  __impl._M_end_of_storage, __prev, __curr);
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_grow(_Vector_impl& __impl, size_type __n)
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish, __impl._M_finish + __n); }
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_shrink(_Vector_impl& __impl, size_type __n)
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish + __n, __impl._M_finish); }
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_on_dealloc(_Vector_impl& __impl)
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      if (__impl._M_start)
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_adjust(__impl, __impl._M_finish, __impl._M_end_of_storage);
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Used on reallocation to tell ASan unused capacity is invalid.
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Reinit
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      explicit _Reinit(_Vector_impl& __impl) : _M_impl(__impl)
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as valid again before deallocating it.
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_on_dealloc(_M_impl);
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Reinit()
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as invalid after reallocation.
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		if (_M_impl._M_start)
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _S_adjust(_M_impl, _M_impl._M_end_of_storage,
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    _M_impl._M_finish);
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit(const _Reinit&) = delete;
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit& operator=(const _Reinit&) = delete;
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Tell ASan when unused capacity is initialized to be valid.
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl& __impl, size_type __n)
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      : _M_impl(__impl), _M_n(__n)
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      { _S_grow(_M_impl, __n); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 108


 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type __n) { _M_n -= __n; }
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(const _Grow&) = delete;
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow& operator=(const _Grow&) = delete;
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    private:
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      size_type _M_n;
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT \
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Reinit const \
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __reinit_guard(this->_M_impl)
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n) \
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Grow \
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __grow_guard(this->_M_impl, (n))
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n) __grow_guard._M_grew(n)
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n) \
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_shrink(this->_M_impl, n)
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC \
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_on_dealloc(this->_M_impl)
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else // ! (_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR)
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n)
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n)
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc allocator_type;
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp_alloc_type&
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp_alloc_type&
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       allocator_type
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() = default;
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() { }
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 109


 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if !_GLIBCXX_INLINE_VERSION
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n)
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl()
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&&) = default;
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if !_GLIBCXX_INLINE_VERSION
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(std::move(__a)) { }
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__x.get_allocator() == __a)
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _M_create_storage(__n);
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a, _Vector_base&& __x)
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_deallocate(_M_impl._M_start,
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_impl _M_impl;
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pointer
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_allocate(size_t __n)
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 110


 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__p)
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_create_storage(size_t __n)
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     };
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /**
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  individual elements in any order.
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @ingroup sequences
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Tp  Type of element.
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  elements in any order and saves the user from worrying about
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  also provided as with C-style arrays.
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   */
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Concept requirements.
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus < 201103L
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have a non-const, non-volatile value_type");
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus > 201703L || defined __STRICT_ANSI__
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have the same value_type as its allocator");
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 111


 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Tp					value_type;
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::pointer			pointer;
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator;
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef size_t					size_type;
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef ptrdiff_t					difference_type;
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc					allocator_type;
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(true_type)
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return noexcept(std::__relocate_a(std::declval<pointer>(),
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<_Tp_alloc_type&>()));
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(false_type)
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return false; }
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_use_relocate()
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Instantiating std::__relocate_a might cause an error outside the
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// immediate context (in __relocate_object_a's noexcept-specifier),
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// so only do it if we know the type can be move-inserted into *this.
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer __first, pointer __last, pointer __result,
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return std::__relocate_a(__first, __last, __result, __alloc);
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer, pointer, pointer __result,
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type&, false_type) noexcept
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return __result; }
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 112


 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_relocate(pointer __first, pointer __last, pointer __result,
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	using __do_it = __bool_constant<_S_use_relocate()>;
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // C++11
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_allocate;
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_deallocate;
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_impl;
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() = default;
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() { }
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator object.
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a) { }
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructed elements.
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_default_initialize(__n); }
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 113


 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value,
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector copy constructor.
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x  will not be copied
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x)
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move constructor.
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector contains the exact contents of the
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  moved instance.
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of the moved instance are a valid, but unspecified
 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector.
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&&) noexcept = default;
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Copy constructor with alternative allocator
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(), __a)
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 114


 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m, std::move(__rv))
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, false_type)
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m)
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__rv.get_allocator() == __m)
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__rv._M_impl);
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (!__rv.empty())
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_create_storage(__rv.size());
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish =
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  this->_M_impl._M_start,
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __rv.clear();
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Move constructor with alternative allocator
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       noexcept( noexcept(
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(std::declval<vector&&>(), std::declval<const allocator_type&>(),
 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       std::declval<typename _Alloc_traits::is_always_equal>())) )
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : vector(std::move(__rv), __m, typename _Alloc_traits::is_always_equal{})
 612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a __l.
 621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This will call the element type's copy constructor N times
 623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(initializer_list<value_type> __l,
 626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a)
 628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from a range.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 115


 636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  An input iterator.
 638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [first,last).
 642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  random-access, then this will call the elements' copy
 645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor, and logN memory reallocations.
 649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
 659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  responsibility.
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 1418              		.loc 26 678 7 is_stmt 1 view -0
 1419              		.cfi_startproc
 1420              		@ args = 0, pretend = 0, frame = 0
 1421              		@ frame_needed = 0, uses_anonymous_args = 0
 1422              		.loc 26 678 7 is_stmt 0 view .LVU301
 1423 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1424              		.cfi_def_cfa_offset 24
 1425              		.cfi_offset 3, -24
 1426              		.cfi_offset 4, -20
 1427              		.cfi_offset 5, -16
 1428              		.cfi_offset 6, -12
 1429              		.cfi_offset 7, -8
 1430              		.cfi_offset 14, -4
 1431              	.LBB4972:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 116


 679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 1432              		.loc 26 680 15 view .LVU302
 1433 0002 D0E90056 		ldrd	r5, r6, [r0]
 1434              	.LBE4972:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1435              		.loc 26 678 7 view .LVU303
 1436 0006 0746     		mov	r7, r0
 1437              	.LVL84:
 1438              	.LBB5022:
 1439              	.LBB4973:
 1440              	.LBI4973:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 1441              		.loc 26 276 7 is_stmt 1 view .LVU304
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 1442              		.loc 26 276 7 is_stmt 0 view .LVU305
 1443              	.LBE4973:
 1444              	.LBB4974:
 1445              	.LBI4974:
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type `_Up`
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *	       an object of type `_Up`.
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls `__a.construct(__p, std::forward<_Args>(__args)...)`
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  in C++11, C++14 and C++17. Changed in C++20 to call
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  `std::construct_at(__p, std::forward<_Args>(__args)...)` instead.
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up, typename... _Args>
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.construct(__p, std::forward<_Args>(__args)...);
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 117


 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.destroy(__p);
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::destroy_at(__p);
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size()
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.max_size();
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return size_t(-1) / sizeof(value_type);
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR allocator_type
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __do_alloc_on_copy(_Alloc& __one, const _Alloc& __two, true_type)
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { __one = __two; }
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_copy(_Alloc& __one, const _Alloc& __two)
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_copy_assignment __pocca;
 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocca::value)
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__one = __two;
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_copy(__one, __two, __pocca());
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 118


 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     constexpr _Alloc
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_copy(const _Alloc& __a)
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       return __traits::select_on_container_copy_construction(__a);
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc& __one, _Alloc& __two, true_type)
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { __one = std::move(__two); }
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc&, _Alloc&, false_type)
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_move(_Alloc& __one, _Alloc& __two)
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_move_assignment __pocma;
 612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocma::value)
 614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__one = std::move(__two);
 615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_move(__one, __two, __pocma());
 617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc& __one, _Alloc& __two, true_type)
 623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using std::swap;
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       swap(__one, __two);
 626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc&, _Alloc&, false_type)
 630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_swap(_Alloc& __one, _Alloc& __two)
 636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_swap __pocs;
 639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocs::value)
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using std::swap;
 643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  swap(__one, __two);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 119


 644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_swap(__one, __two, __pocs());
 647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Tp,
 651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	   typename _ValueT = __remove_cvref_t<typename _Alloc::value_type>,
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	   typename = void>
 653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_alloc_insertable_impl
 654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : false_type
 655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Tp, typename _ValueT>
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_alloc_insertable_impl<_Alloc, _Tp, _ValueT,
 659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __void_t<decltype(allocator_traits<_Alloc>::construct(
 660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		   std::declval<_Alloc&>(), std::declval<_ValueT*>(),
 661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		   std::declval<_Tp>()))>>
 662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : true_type
 663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // true if _Alloc::value_type is CopyInsertable into containers using _Alloc
 666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_copy_insertable
 670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc,
 671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				 typename _Alloc::value_type const&>::type
 672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // std::allocator<_Tp> just requires CopyConstructible
 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_copy_insertable<allocator<_Tp>>
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : is_copy_constructible<_Tp>
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // true if _Alloc::value_type is MoveInsertable into containers using _Alloc
 681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_move_insertable
 685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc, typename _Alloc::value_type>::type
 686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // std::allocator<_Tp> just requires MoveConstructible
 689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_move_insertable<allocator<_Tp>>
 691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : is_move_constructible<_Tp>
 692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // Trait to detect Allocator-like types.
 695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename = void>
 696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_allocator : false_type { };
 697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_allocator<_Alloc,
 700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __void_t<typename _Alloc::value_type,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 120


 701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	       decltype(std::declval<_Alloc&>().allocate(size_t{}))>>
 702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : true_type { };
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using _RequireAllocator
 706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename enable_if<__is_allocator<_Alloc>::value, _Alloc>::type;
 707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using _RequireNotAllocator
 710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename enable_if<!__is_allocator<_Alloc>::value, _Alloc>::type;
 711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif // C++11
 712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * Destroy a range of objects using the supplied allocator.  For
 715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * non-default allocators we do not optimize away invocation of
 716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * destroy() even if _Tp has a trivial destructor.
 717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    */
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _ForwardIterator, typename _Allocator>
 720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     void
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	     _Allocator& __alloc)
 723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       for (; __first != __last; ++__first)
 725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201103L
 726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__alloc.destroy(std::__addressof(*__first));
 727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	allocator_traits<_Allocator>::destroy(__alloc,
 729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 					      std::__addressof(*__first));
 730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _ForwardIterator, typename _Tp>
 734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 1446              		.loc 25 735 5 is_stmt 1 view .LVU306
 1447              	.LBB4975:
 1448              	.LBB4976:
 1449              	.LBB4977:
 1450              	.LBB4978:
 1451              		.file 27 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 121


  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Copyright (c) 1996,1997
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** /** @file bits/stl_construct.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <new>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <bits/move.h>
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <bits/stl_iterator_base_types.h> // for iterator_traits
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <bits/stl_iterator_base_funcs.h> // for advance
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** /* This file provides the C++17 functions std::destroy_at, std::destroy, and
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * std::destroy_n, and the C++20 function std::construct_at.
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * It also provides std::_Construct, std::_Destroy,and std::_Destroy_n functions
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * which are defined in all standard modes and so can be used in C++98-14 code.
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * The _Destroy functions will dispatch to destroy_at during constant
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * evaluation, because calls to that function are intercepted by the compiler
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * to allow use in constant expressions.
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  */
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 122


  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** {
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus >= 201703L
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template <typename _Tp>
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX20_CONSTEXPR inline void
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     destroy_at(_Tp* __location)
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       if constexpr (__cplusplus > 201703L && is_array_v<_Tp>)
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	{
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	  for (auto& __x : *__location)
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	    std::destroy_at(std::__addressof(__x));
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	}
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       else
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	__location->~_Tp();
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     }
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus > 201703L
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _Tp, typename... _Args>
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     constexpr auto
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     construct_at(_Tp* __location, _Args&&... __args)
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     noexcept(noexcept(::new((void*)0) _Tp(std::declval<_Args>()...)))
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     -> decltype(::new((void*)0) _Tp(std::declval<_Args>()...))
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif // C++20
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif// C++17
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   /**
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * object's constructor with an initializer.
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    */
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus >= 201103L
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _Tp, typename... _Args>
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     inline void
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Construct(_Tp* __p, _Args&&... __args)
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #else
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _T1, typename _T2>
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     inline void
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     }
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _T1>
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     inline void
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Construct_novalue(_T1* __p)
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1; }
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _ForwardIterator>
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX20_CONSTEXPR void
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last);
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 123


 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * Destroy the object pointed to by a pointer type.
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    */
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _Tp>
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX14_CONSTEXPR inline void
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Destroy(_Tp* __pointer)
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus > 201703L
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       std::destroy_at(__pointer);
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #else
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       __pointer->~_Tp();
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     }
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<bool>
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     struct _Destroy_aux
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       template<typename _ForwardIterator>
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	static _GLIBCXX20_CONSTEXPR void
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	__destroy(_ForwardIterator __first, _ForwardIterator __last)
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	{
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	  for (; __first != __last; ++__first)
 1452              		.loc 27 151 19 view .LVU307
 1453 0008 B542     		cmp	r5, r6
 1454 000a 0FD0     		beq	.L59
 1455 000c 05F10804 		add	r4, r5, #8
 1456              	.LVL85:
 1457              	.L61:
 1458              	.LBB4979:
 1459              	.LBI4979:
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 1460              		.loc 27 135 5 view .LVU308
 1461              	.LBB4980:
 1462              	.LBI4980:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 1463              		.loc 19 657 7 view .LVU309
 1464              	.LBB4981:
 1465              	.LBI4981:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1466              		.loc 19 229 7 view .LVU310
 1467              	.LBB4982:
 1468              	.LBB4983:
 1469              	.LBI4983:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 1470              		.loc 19 221 7 view .LVU311
 1471              	.LBB4984:
 1472              	.LBI4984:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1473              		.loc 19 186 7 view .LVU312
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1474              		.loc 19 186 7 is_stmt 0 view .LVU313
 1475              	.LBE4984:
 1476              	.LBE4983:
 1477              	.LBB4987:
 1478              	.LBI4987:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1479              		.loc 19 236 7 is_stmt 1 view .LVU314
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 124


 1480              		.loc 19 236 7 is_stmt 0 view .LVU315
 1481              	.LBE4987:
 1482              	.LBB4995:
 1483              	.LBB4986:
 1484              	.LBB4985:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1485              		.loc 19 187 28 view .LVU316
 1486 0010 54F8080C 		ldr	r0, [r4, #-8]
 1487              	.LVL86:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1488              		.loc 19 187 28 view .LVU317
 1489              	.LBE4985:
 1490              	.LBE4986:
 1491              	.LBE4995:
 1492              	.LBB4996:
 1493              	.LBB4988:
 1494              	.LBB4989:
 1495              	.LBI4989:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 1496              		.loc 25 491 7 is_stmt 1 view .LVU318
 1497              	.LBB4990:
 1498              	.LBI4990:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 1499              		.loc 22 120 7 view .LVU319
 1500              	.LBE4990:
 1501              	.LBE4989:
 1502              	.LBE4988:
 1503              	.LBE4996:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1504              		.loc 19 231 2 is_stmt 0 view .LVU320
 1505 0014 8442     		cmp	r4, r0
 1506              	.LBE4982:
 1507              	.LBE4981:
 1508              	.LBE4980:
 1509              	.LBE4979:
 1510              		.loc 27 151 19 view .LVU321
 1511 0016 04F11804 		add	r4, r4, #24
 1512              	.LBB5004:
 1513              	.LBB5003:
 1514              	.LBB4999:
 1515              	.LBB4998:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1516              		.loc 19 231 2 view .LVU322
 1517 001a 03D0     		beq	.L60
 1518              	.LBB4997:
 1519              	.LBB4994:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1520              		.loc 19 237 34 view .LVU323
 1521 001c A968     		ldr	r1, [r5, #8]
 1522              	.LBB4993:
 1523              	.LBB4992:
 1524              	.LBB4991:
 1525              		.loc 22 133 19 view .LVU324
 1526 001e 0131     		adds	r1, r1, #1
 1527              	.LVL87:
 1528              		.loc 22 133 19 view .LVU325
 1529 0020 FFF7FEFF 		bl	_ZdlPvj
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 125


 1530              	.LVL88:
 1531              	.L60:
 1532              		.loc 22 133 19 view .LVU326
 1533              	.LBE4991:
 1534              	.LBE4992:
 1535              	.LBE4993:
 1536              	.LBE4994:
 1537              	.LBE4997:
 1538              	.LBE4998:
 1539              	.LBE4999:
 1540              	.LBB5000:
 1541              	.LBI5000:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1542              		.loc 19 150 14 is_stmt 1 view .LVU327
 1543              	.LBB5001:
 1544              	.LBI5001:
 1545              		.loc 21 162 7 view .LVU328
 1546              	.LBB5002:
 1547              	.LBI5002:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1548              		.loc 22 89 7 view .LVU329
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1549              		.loc 22 89 7 is_stmt 0 view .LVU330
 1550              	.LBE5002:
 1551              	.LBE5001:
 1552              	.LBE5000:
 1553              	.LBE5003:
 1554              	.LBE5004:
 1555              		.loc 27 151 4 is_stmt 1 view .LVU331
 1556 0024 1835     		adds	r5, r5, #24
 1557              	.LVL89:
 1558              		.loc 27 151 19 view .LVU332
 1559 0026 AE42     		cmp	r6, r5
 1560 0028 F2D1     		bne	.L61
 1561              	.LBE4978:
 1562              	.LBE4977:
 1563              	.LBE4976:
 1564              	.LBE4975:
 1565              	.LBE4974:
 1566              	.LBB5005:
 1567              	.LBB5006:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 1568              		.loc 26 335 15 is_stmt 0 view .LVU333
 1569 002a 3E68     		ldr	r6, [r7]
 1570              	.LVL90:
 1571              	.L59:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 1572              		.loc 26 335 15 view .LVU334
 1573              	.LBE5006:
 1574              	.LBI5005:
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1575              		.loc 26 333 7 is_stmt 1 view .LVU335
 1576              	.LBB5021:
 1577              	.LBB5007:
 1578              	.LBI5007:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1579              		.loc 26 350 7 view .LVU336
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 126


 1580              	.LBB5008:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 1581              		.loc 26 353 2 is_stmt 0 view .LVU337
 1582 002c 26B1     		cbz	r6, .L62
 1583              	.LVL91:
 1584              	.LBB5009:
 1585              	.LBI5009:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 1586              		.loc 25 491 7 is_stmt 1 view .LVU338
 1587              	.LBB5010:
 1588              	.LBB5011:
 1589              	.LBI5011:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 1590              		.loc 22 120 7 view .LVU339
 1591              	.LBE5011:
 1592              	.LBE5010:
 1593              	.LBE5009:
 1594              	.LBE5008:
 1595              	.LBE5007:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 1596              		.loc 26 336 35 is_stmt 0 view .LVU340
 1597 002e B968     		ldr	r1, [r7, #8]
 1598              	.LBB5017:
 1599              	.LBB5016:
 1600              	.LBB5015:
 1601              	.LBB5014:
 1602              	.LBB5013:
 1603              	.LBB5012:
 1604              		.loc 22 133 19 view .LVU341
 1605 0030 3046     		mov	r0, r6
 1606 0032 891B     		subs	r1, r1, r6
 1607 0034 FFF7FEFF 		bl	_ZdlPvj
 1608              	.LVL92:
 1609              	.L62:
 1610              		.loc 22 133 19 view .LVU342
 1611              	.LBE5012:
 1612              	.LBE5013:
 1613              	.LBE5014:
 1614              	.LBE5015:
 1615              	.LBE5016:
 1616              	.LBE5017:
 1617              	.LBB5018:
 1618              	.LBI5018:
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 1619              		.loc 26 128 14 is_stmt 1 view .LVU343
 1620              	.LBB5019:
 1621              	.LBI5019:
 1622              		.loc 21 162 7 view .LVU344
 1623              	.LBB5020:
 1624              	.LBI5020:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1625              		.loc 22 89 7 view .LVU345
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1626              		.loc 22 89 7 is_stmt 0 view .LVU346
 1627              	.LBE5020:
 1628              	.LBE5019:
 1629              	.LBE5018:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 127


 1630              	.LBE5021:
 1631              	.LBE5005:
 1632              	.LBE5022:
 681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 1633              		.loc 26 683 7 view .LVU347
 1634 0038 3846     		mov	r0, r7
 1635 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1636              		.loc 26 683 7 view .LVU348
 1637              		.cfi_endproc
 1638              	.LFE5515:
 1640              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 1641              		.thumb_set _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev,_ZNSt6vec
 1642              		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 1643              		.align	1
 1644              		.p2align 2,,3
 1645              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Updat
 1646              		.syntax unified
 1647              		.thumb
 1648              		.thumb_func
 1649              		.fpu fpv5-d16
 1651              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6UpdateEv:
 1652              	.LVL93:
 1653              	.LFB5541:
  34:../../libdaisy/src/hid/disp/oled_display.h **** 
  35:../../libdaisy/src/hid/disp/oled_display.h ****     /**
  36:../../libdaisy/src/hid/disp/oled_display.h ****     Sets the pixel at the specified coordinate to be on/off.
  37:../../libdaisy/src/hid/disp/oled_display.h ****     \param x   x Coordinate
  38:../../libdaisy/src/hid/disp/oled_display.h ****     \param y   y coordinate
  39:../../libdaisy/src/hid/disp/oled_display.h ****     \param on  on or off
  40:../../libdaisy/src/hid/disp/oled_display.h ****     */
  41:../../libdaisy/src/hid/disp/oled_display.h ****     void DrawPixel(uint_fast8_t x, uint_fast8_t y, bool on) override
  42:../../libdaisy/src/hid/disp/oled_display.h ****     {
  43:../../libdaisy/src/hid/disp/oled_display.h ****         driver_.DrawPixel(x, y, on);
  44:../../libdaisy/src/hid/disp/oled_display.h ****     }
  45:../../libdaisy/src/hid/disp/oled_display.h **** 
  46:../../libdaisy/src/hid/disp/oled_display.h ****     /** 
  47:../../libdaisy/src/hid/disp/oled_display.h ****     Writes the current display buffer to the OLED device using SPI or I2C depending on 
  48:../../libdaisy/src/hid/disp/oled_display.h ****     how the object was initialized.
  49:../../libdaisy/src/hid/disp/oled_display.h ****     */
  50:../../libdaisy/src/hid/disp/oled_display.h ****     void Update() override { driver_.Update(); }
 1654              		.loc 4 50 10 is_stmt 1 view -0
 1655              		.cfi_startproc
 1656              		@ args = 0, pretend = 0, frame = 8
 1657              		@ frame_needed = 0, uses_anonymous_args = 0
 1658              	.LBB5033:
 1659              	.LBI5033:
 254:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 255:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 256:../../libdaisy/src/dev/oled_ssd130x.h **** 
 257:../../libdaisy/src/dev/oled_ssd130x.h ****     /**
 258:../../libdaisy/src/dev/oled_ssd130x.h ****      * Update the display 
 259:../../libdaisy/src/dev/oled_ssd130x.h ****     */
 260:../../libdaisy/src/dev/oled_ssd130x.h ****     void Update()
 1660              		.loc 15 260 10 view .LVU350
 1661              	.LBB5034:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 128


 261:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 262:../../libdaisy/src/dev/oled_ssd130x.h ****         uint8_t i;
 263:../../libdaisy/src/dev/oled_ssd130x.h ****         uint8_t high_column_addr;
 264:../../libdaisy/src/dev/oled_ssd130x.h ****         switch(height)
 265:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 266:../../libdaisy/src/dev/oled_ssd130x.h ****             case 32: high_column_addr = 0x12; break;
 267:../../libdaisy/src/dev/oled_ssd130x.h **** 
 268:../../libdaisy/src/dev/oled_ssd130x.h ****             default: high_column_addr = 0x10; break;
 269:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 270:../../libdaisy/src/dev/oled_ssd130x.h ****         for(i = 0; i < (height / 8); i++)
 1662              		.loc 15 270 22 view .LVU351
 1663              	.LBE5034:
 1664              	.LBE5033:
 1665              		.loc 4 50 10 is_stmt 0 view .LVU352
 1666 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1667              		.cfi_def_cfa_offset 24
 1668              		.cfi_offset 4, -24
 1669              		.cfi_offset 5, -20
 1670              		.cfi_offset 6, -16
 1671              		.cfi_offset 7, -12
 1672              		.cfi_offset 8, -8
 1673              		.cfi_offset 14, -4
 1674              	.LBB5056:
 1675              	.LBB5054:
 1676              	.LBB5035:
 1677              	.LBB5036:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1678              		.loc 15 112 30 view .LVU353
 1679 0004 B024     		movs	r4, #176
 1680              	.LBE5036:
 1681              	.LBE5035:
 1682              	.LBE5054:
 1683              	.LBE5056:
 1684              		.loc 4 50 10 view .LVU354
 1685 0006 82B0     		sub	sp, sp, #8
 1686              		.cfi_def_cfa_offset 32
 1687              	.LBB5057:
 1688              	.LBB5055:
 1689              	.LBB5041:
 1690              	.LBB5037:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1691              		.loc 15 111 24 view .LVU355
 1692 0008 00F10806 		add	r6, r0, #8
 1693 000c 00F11005 		add	r5, r0, #16
 1694 0010 00F11408 		add	r8, r0, #20
 1695              	.LVL94:
 1696              	.L69:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1697              		.loc 15 111 24 view .LVU356
 1698 0014 0027     		movs	r7, #0
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1699              		.loc 15 111 23 view .LVU357
 1700 0016 2846     		mov	r0, r5
 1701 0018 8DF80740 		strb	r4, [sp, #7]
 1702              	.LVL95:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1703              		.loc 15 111 23 view .LVU358
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 129


 1704              	.LBE5037:
 1705              	.LBI5035:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 1706              		.loc 15 109 10 is_stmt 1 view .LVU359
 1707              	.LBB5038:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1708              		.loc 15 111 9 view .LVU360
 1709              	.LBE5038:
 1710              	.LBE5041:
 1711              		.loc 15 270 22 is_stmt 0 view .LVU361
 1712 001c 0134     		adds	r4, r4, #1
 1713              	.LVL96:
 1714              	.LBB5042:
 1715              	.LBB5039:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1716              		.loc 15 111 23 view .LVU362
 1717 001e 3946     		mov	r1, r7
 1718 0020 FFF7FEFF 		bl	dsy_gpio_write
 1719              	.LVL97:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1720              		.loc 15 112 9 is_stmt 1 view .LVU363
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1721              		.loc 15 112 30 is_stmt 0 view .LVU364
 1722 0024 6423     		movs	r3, #100
 1723 0026 0122     		movs	r2, #1
 1724 0028 0DF10701 		add	r1, sp, #7
 1725 002c 3046     		mov	r0, r6
 1726              	.LBE5039:
 1727              	.LBE5042:
 1728              		.loc 15 270 22 view .LVU365
 1729 002e E4B2     		uxtb	r4, r4
 1730              	.LBB5043:
 1731              	.LBB5040:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1732              		.loc 15 112 30 view .LVU366
 1733 0030 FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 1734              	.LVL98:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1735              		.loc 15 112 30 view .LVU367
 1736              	.LBE5040:
 1737              	.LBE5043:
 1738              	.LBB5044:
 1739              	.LBB5045:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1740              		.loc 15 111 23 view .LVU368
 1741 0034 3946     		mov	r1, r7
 1742 0036 2846     		mov	r0, r5
 1743 0038 8DF80770 		strb	r7, [sp, #7]
 1744              	.LVL99:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1745              		.loc 15 111 23 view .LVU369
 1746              	.LBE5045:
 1747              	.LBI5044:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 1748              		.loc 15 109 10 is_stmt 1 view .LVU370
 1749              	.LBB5046:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 130


 1750              		.loc 15 111 9 view .LVU371
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1751              		.loc 15 111 23 is_stmt 0 view .LVU372
 1752 003c FFF7FEFF 		bl	dsy_gpio_write
 1753              	.LVL100:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1754              		.loc 15 112 9 is_stmt 1 view .LVU373
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1755              		.loc 15 112 30 is_stmt 0 view .LVU374
 1756 0040 0122     		movs	r2, #1
 1757 0042 6423     		movs	r3, #100
 1758 0044 0DF10701 		add	r1, sp, #7
 1759 0048 3046     		mov	r0, r6
 1760 004a FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 1761              	.LVL101:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1762              		.loc 15 112 30 view .LVU375
 1763 004e 1023     		movs	r3, #16
 1764              	.LBE5046:
 1765              	.LBE5044:
 1766              	.LBB5047:
 1767              	.LBB5048:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1768              		.loc 15 111 23 view .LVU376
 1769 0050 3946     		mov	r1, r7
 1770 0052 2846     		mov	r0, r5
 1771 0054 8DF80730 		strb	r3, [sp, #7]
 1772              	.LVL102:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1773              		.loc 15 111 23 view .LVU377
 1774              	.LBE5048:
 1775              	.LBI5047:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 1776              		.loc 15 109 10 is_stmt 1 view .LVU378
 1777              	.LBB5049:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1778              		.loc 15 111 9 view .LVU379
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1779              		.loc 15 111 23 is_stmt 0 view .LVU380
 1780 0058 FFF7FEFF 		bl	dsy_gpio_write
 1781              	.LVL103:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1782              		.loc 15 112 9 is_stmt 1 view .LVU381
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1783              		.loc 15 112 30 is_stmt 0 view .LVU382
 1784 005c 6423     		movs	r3, #100
 1785 005e 0122     		movs	r2, #1
 1786 0060 0DF10701 		add	r1, sp, #7
 1787 0064 3046     		mov	r0, r6
 1788 0066 FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 1789              	.LVL104:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1790              		.loc 15 112 30 view .LVU383
 1791              	.LBE5049:
 1792              	.LBE5047:
 1793              	.LBB5050:
 1794              	.LBI5050:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 131


 115:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 1795              		.loc 15 115 10 is_stmt 1 view .LVU384
 1796              	.LBB5051:
 117:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 1797              		.loc 15 117 9 view .LVU385
 117:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 1798              		.loc 15 117 23 is_stmt 0 view .LVU386
 1799 006a 0121     		movs	r1, #1
 1800 006c 2846     		mov	r0, r5
 1801 006e FFF7FEFF 		bl	dsy_gpio_write
 1802              	.LVL105:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1803              		.loc 15 118 9 is_stmt 1 view .LVU387
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1804              		.loc 15 118 30 is_stmt 0 view .LVU388
 1805 0072 8022     		movs	r2, #128
 1806 0074 4146     		mov	r1, r8
 1807 0076 6423     		movs	r3, #100
 1808 0078 3046     		mov	r0, r6
 1809              	.LBE5051:
 1810              	.LBE5050:
 1811              		.loc 15 270 22 view .LVU389
 1812 007a 9044     		add	r8, r8, r2
 1813              	.LVL106:
 1814              	.LBB5053:
 1815              	.LBB5052:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1816              		.loc 15 118 30 view .LVU390
 1817 007c FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 1818              	.LVL107:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1819              		.loc 15 118 30 view .LVU391
 1820              	.LBE5052:
 1821              	.LBE5053:
 1822              		.loc 15 270 9 is_stmt 1 view .LVU392
 1823              		.loc 15 270 22 view .LVU393
 1824 0080 B82C     		cmp	r4, #184
 1825 0082 C7D1     		bne	.L69
 1826              	.LBE5055:
 1827              	.LBE5057:
 1828              		.loc 4 50 48 is_stmt 0 view .LVU394
 1829 0084 02B0     		add	sp, sp, #8
 1830              		.cfi_def_cfa_offset 24
 1831              		@ sp needed
 1832 0086 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1833              		.loc 4 50 48 view .LVU395
 1834              		.cfi_endproc
 1835              	.LFE5541:
 1837 008a 00BF     		.section	.text._ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev,"axG",%progbits,_ZNSt5arrayIN10jellyb
 1838              		.align	1
 1839              		.p2align 2,,3
 1840              		.weak	_ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev
 1841              		.syntax unified
 1842              		.thumb
 1843              		.thumb_func
 1844              		.fpu fpv5-d16
 1846              	_ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 132


 1847              	.LVL108:
 1848              	.LFB6186:
 1849              		.loc 24 94 12 is_stmt 1 view -0
 1850              		.cfi_startproc
 1851              		@ args = 0, pretend = 0, frame = 0
 1852              		@ frame_needed = 0, uses_anonymous_args = 0
 1853              		.loc 24 94 12 is_stmt 0 view .LVU397
 1854 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1855              		.cfi_def_cfa_offset 24
 1856              		.cfi_offset 4, -24
 1857              		.cfi_offset 5, -20
 1858              		.cfi_offset 6, -16
 1859              		.cfi_offset 7, -12
 1860              		.cfi_offset 8, -8
 1861              		.cfi_offset 14, -4
 1862              		.loc 24 94 12 view .LVU398
 1863 0004 8046     		mov	r8, r0
 1864 0006 00F53476 		add	r6, r0, #720
 1865              	.LVL109:
 1866              	.L80:
 1867              	.LBB5140:
 1868              	.LBB5141:
 1869              	.LBI5141:
 1870              		.file 28 "menuitem.h"
   1:menuitem.h    **** /* 
   2:menuitem.h    ****  * Copyright (C) 2021 Evan Pernu - All Rights Reserved
   3:menuitem.h    ****  * You may use, distribute and modify this code under the
   4:menuitem.h    ****  * terms of the GNU AGPLv3 license.
   5:menuitem.h    ****  * 
   6:menuitem.h    ****  * You should have received a copy of the GNU AGPLv3 license with
   7:menuitem.h    ****  * this file (LICENSE.md). If not, please write to: evanpernu@gmail.com, 
   8:menuitem.h    ****  * or visit: https://www.gnu.org/licenses/agpl-3.0.en.html
   9:menuitem.h    ****  */
  10:menuitem.h    **** 
  11:menuitem.h    **** #pragma once
  12:menuitem.h    **** 
  13:menuitem.h    **** #include <functional>
  14:menuitem.h    **** #include <vector>
  15:menuitem.h    **** #include <string>
  16:menuitem.h    **** 
  17:menuitem.h    **** namespace jellybeans {
  18:menuitem.h    **** 
  19:menuitem.h    ****     // Menu item whos value is an element of a list of predefined strings
  20:menuitem.h    ****     // They are also used to store settings
  21:menuitem.h    ****     class MenuItem {
 1871              		.loc 28 21 11 is_stmt 1 discriminator 5 view .LVU399
 1872              	.LBB5142:
 1873              	.LBI5142:
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	return std::__invoke_r<_Res>(*_Base::_M_get_pointer(__functor),
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 				     std::forward<_ArgTypes>(__args)...);
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     };
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   /**
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  @brief Primary class template for std::function.
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  @ingroup functors
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 133


 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  Polymorphic function wrapper.
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    */
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename... _ArgTypes>
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     class function<_Res(_ArgTypes...)>
 1874              		.loc 16 303 11 discriminator 5 view .LVU400
 1875              	.LBB5143:
 1876              	.LBI5143:
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 1877              		.loc 16 242 5 discriminator 5 view .LVU401
 1878              	.LBB5144:
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 1879              		.loc 16 244 7 discriminator 5 view .LVU402
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 1880              		.loc 16 244 11 is_stmt 0 discriminator 5 view .LVU403
 1881 000a B36C     		ldr	r3, [r6, #72]
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 1882              		.loc 16 244 7 discriminator 5 view .LVU404
 1883 000c 23B1     		cbz	r3, .L73
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 1884              		.loc 16 245 2 is_stmt 1 view .LVU405
 1885 000e 06F14001 		add	r1, r6, #64
 1886              	.LVL110:
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 1887              		.loc 16 245 12 is_stmt 0 view .LVU406
 1888 0012 0322     		movs	r2, #3
 1889 0014 0846     		mov	r0, r1
 1890 0016 9847     		blx	r3
 1891              	.LVL111:
 1892              	.L73:
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 1893              		.loc 16 245 12 view .LVU407
 1894              	.LBE5144:
 1895              	.LBE5143:
 1896              	.LBE5142:
 1897              	.LBB5145:
 1898              	.LBI5145:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1899              		.loc 26 678 7 is_stmt 1 view .LVU408
 1900              	.LBB5146:
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 1901              		.loc 26 680 15 is_stmt 0 view .LVU409
 1902 0018 D6E90D57 		ldrd	r5, r7, [r6, #52]
 1903              	.LVL112:
 1904              	.LBB5147:
 1905              	.LBI5147:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 1906              		.loc 26 276 7 is_stmt 1 view .LVU410
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 1907              		.loc 26 276 7 is_stmt 0 view .LVU411
 1908              	.LBE5147:
 1909              	.LBB5148:
 1910              	.LBI5148:
 1911              		.loc 25 735 5 is_stmt 1 view .LVU412
 1912              	.LBB5149:
 1913              	.LBB5150:
 1914              	.LBB5151:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 134


 1915              	.LBB5152:
 1916              		.loc 27 151 19 view .LVU413
 1917 001c BD42     		cmp	r5, r7
 1918              	.LBE5152:
 1919              	.LBE5151:
 1920              	.LBE5150:
 1921              	.LBE5149:
 1922              	.LBE5148:
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 1923              		.loc 26 680 15 is_stmt 0 view .LVU414
 1924 001e 2846     		mov	r0, r5
 1925              	.LBB5183:
 1926              	.LBB5182:
 1927              	.LBB5181:
 1928              	.LBB5180:
 1929              	.LBB5179:
 1930              		.loc 27 151 19 view .LVU415
 1931 0020 0FD0     		beq	.L74
 1932 0022 05F10804 		add	r4, r5, #8
 1933              	.LVL113:
 1934              	.L76:
 1935              	.LBB5153:
 1936              	.LBI5153:
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 1937              		.loc 27 135 5 is_stmt 1 view .LVU416
 1938              	.LBB5154:
 1939              	.LBI5154:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 1940              		.loc 19 657 7 view .LVU417
 1941              	.LBB5155:
 1942              	.LBI5155:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1943              		.loc 19 229 7 view .LVU418
 1944              	.LBB5156:
 1945              	.LBB5157:
 1946              	.LBI5157:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 1947              		.loc 19 221 7 view .LVU419
 1948              	.LBB5158:
 1949              	.LBI5158:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1950              		.loc 19 186 7 view .LVU420
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1951              		.loc 19 186 7 is_stmt 0 view .LVU421
 1952              	.LBE5158:
 1953              	.LBE5157:
 1954              	.LBB5161:
 1955              	.LBI5161:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1956              		.loc 19 236 7 is_stmt 1 view .LVU422
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1957              		.loc 19 236 7 is_stmt 0 view .LVU423
 1958              	.LBE5161:
 1959              	.LBB5169:
 1960              	.LBB5160:
 1961              	.LBB5159:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 135


 1962              		.loc 19 187 28 view .LVU424
 1963 0026 54F8080C 		ldr	r0, [r4, #-8]
 1964              	.LVL114:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1965              		.loc 19 187 28 view .LVU425
 1966              	.LBE5159:
 1967              	.LBE5160:
 1968              	.LBE5169:
 1969              	.LBB5170:
 1970              	.LBB5162:
 1971              	.LBB5163:
 1972              	.LBI5163:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 1973              		.loc 25 491 7 is_stmt 1 view .LVU426
 1974              	.LBB5164:
 1975              	.LBI5164:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 1976              		.loc 22 120 7 view .LVU427
 1977              	.LBE5164:
 1978              	.LBE5163:
 1979              	.LBE5162:
 1980              	.LBE5170:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1981              		.loc 19 231 2 is_stmt 0 view .LVU428
 1982 002a 8442     		cmp	r4, r0
 1983              	.LBE5156:
 1984              	.LBE5155:
 1985              	.LBE5154:
 1986              	.LBE5153:
 1987              		.loc 27 151 19 view .LVU429
 1988 002c 04F11804 		add	r4, r4, #24
 1989              	.LBB5178:
 1990              	.LBB5177:
 1991              	.LBB5173:
 1992              	.LBB5172:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1993              		.loc 19 231 2 view .LVU430
 1994 0030 03D0     		beq	.L75
 1995              	.LBB5171:
 1996              	.LBB5168:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1997              		.loc 19 237 34 view .LVU431
 1998 0032 A968     		ldr	r1, [r5, #8]
 1999              	.LBB5167:
 2000              	.LBB5166:
 2001              	.LBB5165:
 2002              		.loc 22 133 19 view .LVU432
 2003 0034 0131     		adds	r1, r1, #1
 2004              	.LVL115:
 2005              		.loc 22 133 19 view .LVU433
 2006 0036 FFF7FEFF 		bl	_ZdlPvj
 2007              	.LVL116:
 2008              	.L75:
 2009              		.loc 22 133 19 view .LVU434
 2010              	.LBE5165:
 2011              	.LBE5166:
 2012              	.LBE5167:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 136


 2013              	.LBE5168:
 2014              	.LBE5171:
 2015              	.LBE5172:
 2016              	.LBE5173:
 2017              	.LBB5174:
 2018              	.LBI5174:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2019              		.loc 19 150 14 is_stmt 1 view .LVU435
 2020              	.LBB5175:
 2021              	.LBI5175:
 2022              		.loc 21 162 7 view .LVU436
 2023              	.LBB5176:
 2024              	.LBI5176:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2025              		.loc 22 89 7 view .LVU437
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2026              		.loc 22 89 7 is_stmt 0 view .LVU438
 2027              	.LBE5176:
 2028              	.LBE5175:
 2029              	.LBE5174:
 2030              	.LBE5177:
 2031              	.LBE5178:
 2032              		.loc 27 151 4 is_stmt 1 view .LVU439
 2033 003a 1835     		adds	r5, r5, #24
 2034              	.LVL117:
 2035              		.loc 27 151 19 view .LVU440
 2036 003c AF42     		cmp	r7, r5
 2037 003e F2D1     		bne	.L76
 2038 0040 706B     		ldr	r0, [r6, #52]
 2039              	.L74:
 2040              	.LVL118:
 2041              		.loc 27 151 19 is_stmt 0 view .LVU441
 2042              	.LBE5179:
 2043              	.LBE5180:
 2044              	.LBE5181:
 2045              	.LBE5182:
 2046              	.LBE5183:
 2047              	.LBB5184:
 2048              	.LBI5184:
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2049              		.loc 26 333 7 is_stmt 1 view .LVU442
 2050              	.LBB5185:
 2051              	.LBB5186:
 2052              	.LBI5186:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2053              		.loc 26 350 7 view .LVU443
 2054              	.LBB5187:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2055              		.loc 26 353 2 is_stmt 0 view .LVU444
 2056 0042 18B1     		cbz	r0, .L77
 2057              	.LVL119:
 2058              	.LBB5188:
 2059              	.LBI5188:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2060              		.loc 25 491 7 is_stmt 1 view .LVU445
 2061              	.LBB5189:
 2062              	.LBB5190:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 137


 2063              	.LBI5190:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2064              		.loc 22 120 7 view .LVU446
 2065              	.LBE5190:
 2066              	.LBE5189:
 2067              	.LBE5188:
 2068              	.LBE5187:
 2069              	.LBE5186:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 2070              		.loc 26 336 35 is_stmt 0 view .LVU447
 2071 0044 F16B     		ldr	r1, [r6, #60]
 2072              	.LBB5196:
 2073              	.LBB5195:
 2074              	.LBB5194:
 2075              	.LBB5193:
 2076              	.LBB5192:
 2077              	.LBB5191:
 2078              		.loc 22 133 19 view .LVU448
 2079 0046 091A     		subs	r1, r1, r0
 2080 0048 FFF7FEFF 		bl	_ZdlPvj
 2081              	.LVL120:
 2082              	.L77:
 2083              		.loc 22 133 19 view .LVU449
 2084              	.LBE5191:
 2085              	.LBE5192:
 2086              	.LBE5193:
 2087              	.LBE5194:
 2088              	.LBE5195:
 2089              	.LBE5196:
 2090              	.LBB5197:
 2091              	.LBI5197:
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2092              		.loc 26 128 14 is_stmt 1 view .LVU450
 2093              	.LBB5198:
 2094              	.LBI5198:
 2095              		.loc 21 162 7 view .LVU451
 2096              	.LBB5199:
 2097              	.LBI5199:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2098              		.loc 22 89 7 view .LVU452
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2099              		.loc 22 89 7 is_stmt 0 view .LVU453
 2100              	.LBE5199:
 2101              	.LBE5198:
 2102              	.LBE5197:
 2103              	.LBE5185:
 2104              	.LBE5184:
 2105              	.LBE5146:
 2106              	.LBE5145:
 2107              	.LBB5200:
 2108              	.LBI5200:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 2109              		.loc 19 657 7 is_stmt 1 view .LVU454
 2110              	.LBB5201:
 2111              	.LBI5201:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2112              		.loc 19 229 7 view .LVU455
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 138


 2113              	.LBB5202:
 2114              	.LBB5203:
 2115              	.LBI5203:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2116              		.loc 19 221 7 view .LVU456
 2117              	.LBB5204:
 2118              	.LBI5204:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2119              		.loc 19 186 7 view .LVU457
 2120              	.LBB5205:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2121              		.loc 19 187 28 is_stmt 0 view .LVU458
 2122 004c F069     		ldr	r0, [r6, #28]
 2123              	.LVL121:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2124              		.loc 19 187 28 view .LVU459
 2125              	.LBE5205:
 2126              	.LBE5204:
 2127              	.LBE5203:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2128              		.loc 19 231 2 view .LVU460
 2129 004e 06F12403 		add	r3, r6, #36
 2130 0052 9842     		cmp	r0, r3
 2131 0054 03D0     		beq	.L78
 2132              	.LVL122:
 2133              	.LBB5206:
 2134              	.LBI5206:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2135              		.loc 19 236 7 is_stmt 1 view .LVU461
 2136              	.LBB5207:
 2137              	.LBB5208:
 2138              	.LBI5208:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2139              		.loc 25 491 7 view .LVU462
 2140              	.LBB5209:
 2141              	.LBI5209:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2142              		.loc 22 120 7 view .LVU463
 2143              	.LBE5209:
 2144              	.LBE5208:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2145              		.loc 19 237 34 is_stmt 0 view .LVU464
 2146 0056 716A     		ldr	r1, [r6, #36]
 2147              	.LBB5212:
 2148              	.LBB5211:
 2149              	.LBB5210:
 2150              		.loc 22 133 19 view .LVU465
 2151 0058 0131     		adds	r1, r1, #1
 2152              	.LVL123:
 2153              		.loc 22 133 19 view .LVU466
 2154 005a FFF7FEFF 		bl	_ZdlPvj
 2155              	.LVL124:
 2156              	.L78:
 2157              		.loc 22 133 19 view .LVU467
 2158              	.LBE5210:
 2159              	.LBE5211:
 2160              	.LBE5212:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 139


 2161              	.LBE5207:
 2162              	.LBE5206:
 2163              	.LBE5202:
 2164              	.LBE5201:
 2165              	.LBB5213:
 2166              	.LBI5213:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2167              		.loc 19 150 14 is_stmt 1 view .LVU468
 2168              	.LBB5214:
 2169              	.LBI5214:
 2170              		.loc 21 162 7 view .LVU469
 2171              	.LBB5215:
 2172              	.LBI5215:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2173              		.loc 22 89 7 view .LVU470
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2174              		.loc 22 89 7 is_stmt 0 view .LVU471
 2175              	.LBE5215:
 2176              	.LBE5214:
 2177              	.LBE5213:
 2178              	.LBE5200:
 2179              	.LBB5216:
 2180              	.LBI5216:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 2181              		.loc 19 657 7 is_stmt 1 view .LVU472
 2182              	.LBB5217:
 2183              	.LBI5217:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2184              		.loc 19 229 7 view .LVU473
 2185              	.LBB5218:
 2186              	.LBB5219:
 2187              	.LBI5219:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2188              		.loc 19 221 7 view .LVU474
 2189              	.LBB5220:
 2190              	.LBI5220:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2191              		.loc 19 186 7 view .LVU475
 2192              	.LBB5221:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2193              		.loc 19 187 28 is_stmt 0 view .LVU476
 2194 005e 7068     		ldr	r0, [r6, #4]
 2195              	.LVL125:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2196              		.loc 19 187 28 view .LVU477
 2197              	.LBE5221:
 2198              	.LBE5220:
 2199              	.LBE5219:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2200              		.loc 19 231 2 view .LVU478
 2201 0060 06F10C03 		add	r3, r6, #12
 2202 0064 9842     		cmp	r0, r3
 2203 0066 03D0     		beq	.L79
 2204              	.LVL126:
 2205              	.LBB5222:
 2206              	.LBI5222:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 140


 2207              		.loc 19 236 7 is_stmt 1 view .LVU479
 2208              	.LBB5223:
 2209              	.LBB5224:
 2210              	.LBI5224:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2211              		.loc 25 491 7 view .LVU480
 2212              	.LBB5225:
 2213              	.LBI5225:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2214              		.loc 22 120 7 view .LVU481
 2215              	.LBE5225:
 2216              	.LBE5224:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2217              		.loc 19 237 34 is_stmt 0 view .LVU482
 2218 0068 F168     		ldr	r1, [r6, #12]
 2219              	.LBB5228:
 2220              	.LBB5227:
 2221              	.LBB5226:
 2222              		.loc 22 133 19 view .LVU483
 2223 006a 0131     		adds	r1, r1, #1
 2224              	.LVL127:
 2225              		.loc 22 133 19 view .LVU484
 2226 006c FFF7FEFF 		bl	_ZdlPvj
 2227              	.LVL128:
 2228              	.L79:
 2229              		.loc 22 133 19 view .LVU485
 2230              	.LBE5226:
 2231              	.LBE5227:
 2232              	.LBE5228:
 2233              	.LBE5223:
 2234              	.LBE5222:
 2235              	.LBE5218:
 2236              	.LBE5217:
 2237              	.LBB5229:
 2238              	.LBI5229:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2239              		.loc 19 150 14 is_stmt 1 view .LVU486
 2240              	.LBB5230:
 2241              	.LBI5230:
 2242              		.loc 21 162 7 view .LVU487
 2243              	.LBB5231:
 2244              	.LBI5231:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2245              		.loc 22 89 7 view .LVU488
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2246              		.loc 22 89 7 is_stmt 0 view .LVU489
 2247              	.LBE5231:
 2248              	.LBE5230:
 2249              	.LBE5229:
 2250              	.LBE5216:
 2251              	.LBE5141:
 2252              		.loc 24 94 12 view .LVU490
 2253 0070 4645     		cmp	r6, r8
 2254 0072 A6F15003 		sub	r3, r6, #80
 2255 0076 01D0     		beq	.L90
 2256 0078 1E46     		mov	r6, r3
 2257 007a C6E7     		b	.L80
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 141


 2258              	.L90:
 2259              	.LBE5140:
 2260              		.loc 24 94 12 discriminator 7 view .LVU491
 2261 007c 3046     		mov	r0, r6
 2262 007e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2263              		.loc 24 94 12 discriminator 7 view .LVU492
 2264              		.cfi_endproc
 2265              	.LFE6186:
 2267              		.weak	_ZNSt5arrayIN10jellybeans8MenuItemELj10EED1Ev
 2268              		.thumb_set _ZNSt5arrayIN10jellybeans8MenuItemELj10EED1Ev,_ZNSt5arrayIN10jellybeans8MenuItemELj10EE
 2269 0082 00BF     		.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6v
 2270              		.align	1
 2271              		.p2align 2,,3
 2272              		.syntax unified
 2273              		.thumb
 2274              		.thumb_func
 2275              		.fpu fpv5-d16
 2277              	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt
 2278              	.LVL129:
 2279              	.LFB6208:
 2280              		.file 29 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // RB tree implementation -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Copyright (c) 1996,1997
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Silicon Graphics Computer Systems, Inc.
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * in supporting documentation.  Silicon Graphics makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * purpose.  It is provided "as is" without express or implied warranty.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 142


  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Copyright (c) 1994
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Hewlett-Packard Company
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  */
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** /** @file bits/stl_tree.h
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *  This is an internal header file, included by other library headers.
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *  Do not attempt to use it directly. @headername{map,set}
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  */
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #ifndef _STL_TREE_H
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #define _STL_TREE_H 1
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #pragma GCC system_header
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #include <bits/stl_algobase.h>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #include <bits/allocator.h>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #include <bits/stl_function.h>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #include <bits/cpp_type_traits.h>
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #include <ext/alloc_traits.h>
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** # include <ext/aligned_buffer.h>
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus > 201402L
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** # include <bits/node_handle.h>
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** namespace std _GLIBCXX_VISIBILITY(default)
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** {
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus > 201103L
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** # define __cpp_lib_generic_associative_lookup 201304
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // Red-black tree class, designed for use in implementing STL
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // associative containers (set, multiset, map, and multimap). The
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // insertion and deletion algorithms are based on those in Cormen,
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // Leiserson, and Rivest, Introduction to Algorithms (MIT Press,
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // 1990), except that
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   //
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // (1) the header cell is maintained with links not only to the root
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // but also to the leftmost node of the tree, to enable constant
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // time begin(), and to the rightmost node of the tree, to enable
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // linear time performance when used with the generic set algorithms
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // (set_union, etc.)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 143


  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   //
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // (2) when a node being deleted has two children its successor node
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // is relinked into its place, rather than copied, so that the only
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // iterators invalidated are those referring to the deleted node.
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   enum _Rb_tree_color { _S_red = false, _S_black = true };
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   struct _Rb_tree_node_base
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   {
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typedef _Rb_tree_node_base* _Base_ptr;
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typedef const _Rb_tree_node_base* _Const_Base_ptr;
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree_color	_M_color;
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Base_ptr		_M_parent;
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Base_ptr		_M_left;
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Base_ptr		_M_right;
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     static _Base_ptr
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x->_M_left != 0) __x = __x->_M_left;
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return __x;
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     static _Const_Base_ptr
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _S_minimum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x->_M_left != 0) __x = __x->_M_left;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return __x;
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     static _Base_ptr
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x->_M_right != 0) __x = __x->_M_right;
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return __x;
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     static _Const_Base_ptr
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _S_maximum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x->_M_right != 0) __x = __x->_M_right;
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return __x;
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   };
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // Helper type offering value initialization guarantee on the compare functor.
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key_compare>
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct _Rb_tree_key_compare
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Key_compare		_M_key_compare;
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_key_compare()
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_NOEXCEPT_IF(
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	is_nothrow_default_constructible<_Key_compare>::value)
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_key_compare()
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 144


 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_key_compare(const _Key_compare& __comp)
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_key_compare(__comp)
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Copy constructor added for consistency with C++98 mode.
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_key_compare(const _Rb_tree_key_compare&) = default;
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_key_compare(_Rb_tree_key_compare&& __x)
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	noexcept(is_nothrow_copy_constructible<_Key_compare>::value)
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_key_compare(__x._M_key_compare)
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     };
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // Helper type to manage default initialization of node count and header.
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   struct _Rb_tree_header
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   {
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree_node_base	_M_header;
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     size_t		_M_node_count; // Keeps track of size of tree.
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree_header() _GLIBCXX_NOEXCEPT
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_color = _S_red;
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reset();
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree_header(_Rb_tree_header&& __x) noexcept
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__x._M_header._M_parent != nullptr)
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_move_data(__x);
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_header._M_color = _S_red;
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_reset();
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_move_data(_Rb_tree_header& __from)
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_color = __from._M_header._M_color;
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_parent = __from._M_header._M_parent;
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_left = __from._M_header._M_left;
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_right = __from._M_header._M_right;
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_parent->_M_parent = &_M_header;
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_node_count = __from._M_node_count;
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       __from._M_reset();
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_reset()
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 145


 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_parent = 0;
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_left = &_M_header;
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_right = &_M_header;
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_node_count = 0;
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   };
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Val>
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct _Rb_tree_node : public _Rb_tree_node_base
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node<_Val>* _Link_type;
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Val _M_value_field;
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Val*
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_valptr()
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return std::__addressof(_M_value_field); }
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const _Val*
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_valptr() const
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return std::__addressof(_M_value_field); }
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       __gnu_cxx::__aligned_membuf<_Val> _M_storage;
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Val*
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_valptr()
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_storage._M_ptr(); }
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const _Val*
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_valptr() const
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_storage._M_ptr(); }
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     };
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _GLIBCXX_PURE _Rb_tree_node_base*
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_increment(_Rb_tree_node_base* __x) throw ();
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _GLIBCXX_PURE const _Rb_tree_node_base*
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_increment(const _Rb_tree_node_base* __x) throw ();
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _GLIBCXX_PURE _Rb_tree_node_base*
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_decrement(_Rb_tree_node_base* __x) throw ();
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _GLIBCXX_PURE const _Rb_tree_node_base*
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_decrement(const _Rb_tree_node_base* __x) throw ();
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Tp>
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct _Rb_tree_iterator
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Tp  value_type;
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Tp& reference;
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Tp* pointer;
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef bidirectional_iterator_tag iterator_category;
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef ptrdiff_t			 difference_type;
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 146


 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_iterator<_Tp>		_Self;
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node_base::_Base_ptr	_Base_ptr;
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node<_Tp>*		_Link_type;
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_iterator() _GLIBCXX_NOEXCEPT
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node() { }
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       explicit
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       reference
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator*() const _GLIBCXX_NOEXCEPT
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pointer
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator->() const _GLIBCXX_NOEXCEPT
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self&
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator++() _GLIBCXX_NOEXCEPT
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Self __tmp = *this;
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __tmp;
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self&
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator--() _GLIBCXX_NOEXCEPT
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Self __tmp = *this;
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __tmp;
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return __x._M_node == __y._M_node; }
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if ! __cpp_lib_three_way_comparison
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return __x._M_node != __y._M_node; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 147


 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr _M_node;
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   };
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Tp>
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct _Rb_tree_const_iterator
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Tp	 value_type;
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const _Tp& reference;
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const _Tp* pointer;
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_iterator<_Tp> iterator;
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef bidirectional_iterator_tag iterator_category;
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef ptrdiff_t			 difference_type;
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_const_iterator<_Tp>		_Self;
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node_base::_Const_Base_ptr	_Base_ptr;
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const _Rb_tree_node<_Tp>*			_Link_type;
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_const_iterator() _GLIBCXX_NOEXCEPT
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node() { }
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       explicit
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__it._M_node) { }
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_const_cast() const _GLIBCXX_NOEXCEPT
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       reference
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator*() const _GLIBCXX_NOEXCEPT
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pointer
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator->() const _GLIBCXX_NOEXCEPT
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self&
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator++() _GLIBCXX_NOEXCEPT
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Self __tmp = *this;
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __tmp;
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 148


 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self&
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator--() _GLIBCXX_NOEXCEPT
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Self __tmp = *this;
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __tmp;
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return __x._M_node == __y._M_node; }
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if ! __cpp_lib_three_way_comparison
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return __x._M_node != __y._M_node; }
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr _M_node;
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     };
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   void
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_insert_and_rebalance(const bool __insert_left,
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				_Rb_tree_node_base* __x,
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				_Rb_tree_node_base* __p,
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				_Rb_tree_node_base& __header) throw ();
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_node_base*
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_rebalance_for_erase(_Rb_tree_node_base* const __z,
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			       _Rb_tree_node_base& __header) throw ();
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201402L
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Cmp, typename _SfinaeType, typename = __void_t<>>
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct __has_is_transparent
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     { };
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Cmp, typename _SfinaeType>
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct __has_is_transparent<_Cmp, _SfinaeType,
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				__void_t<typename _Cmp::is_transparent>>
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     { typedef void type; };
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Cmp, typename _SfinaeType>
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     using __has_is_transparent_t
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       = typename __has_is_transparent<_Cmp, _SfinaeType>::type;
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus > 201402L
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Tree1, typename _Cmp2>
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct _Rb_tree_merge_helper { };
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 149


 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc = allocator<_Val> >
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     class _Rb_tree
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	rebind<_Rb_tree_node<_Val> >::other _Node_allocator;
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef __gnu_cxx::__alloc_traits<_Node_allocator> _Alloc_traits;
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     protected:
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node_base* 		_Base_ptr;
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const _Rb_tree_node_base* 	_Const_Base_ptr;
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node<_Val>* 		_Link_type;
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const _Rb_tree_node<_Val>*	_Const_Link_type;
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     private:
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Functor recycling a pool of nodes and using allocation once the pool
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // is empty.
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       struct _Reuse_or_alloc_node
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Reuse_or_alloc_node(_Rb_tree& __t)
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: _M_root(__t._M_root()), _M_nodes(__t._M_rightmost()), _M_t(__t)
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (_M_root)
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _M_root->_M_parent = 0;
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (_M_nodes->_M_left)
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_M_nodes = _M_nodes->_M_left;
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_nodes = 0;
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Reuse_or_alloc_node(const _Reuse_or_alloc_node&) = delete;
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	~_Reuse_or_alloc_node()
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{ _M_t._M_erase(static_cast<_Link_type>(_M_root)); }
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	template<typename _Arg>
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  operator()(const _Arg& __arg)
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  operator()(_Arg&& __arg)
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _Link_type __node = static_cast<_Link_type>(_M_extract());
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__node)
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_M_t._M_destroy_node(__node);
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_M_t._M_construct_node(__node, _GLIBCXX_FORWARD(_Arg, __arg));
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return __node;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 150


 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg));
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       private:
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Base_ptr
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_extract()
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (!_M_nodes)
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _M_nodes;
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Base_ptr __node = _M_nodes;
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_nodes = _M_nodes->_M_parent;
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (_M_nodes)
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (_M_nodes->_M_right == __node)
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		{
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  _M_nodes->_M_right = 0;
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  if (_M_nodes->_M_left)
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		    {
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      _M_nodes = _M_nodes->_M_left;
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      while (_M_nodes->_M_right)
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			_M_nodes = _M_nodes->_M_right;
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      if (_M_nodes->_M_left)
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			_M_nodes = _M_nodes->_M_left;
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		    }
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		}
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      else // __node is on the left.
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_M_nodes->_M_left = 0;
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_root = 0;
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __node;
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Base_ptr _M_root;
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Base_ptr _M_nodes;
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Rb_tree& _M_t;
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       };
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Functor similar to the previous one but without any pool of nodes to
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // recycle.
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       struct _Alloc_node
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Alloc_node(_Rb_tree& __t)
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: _M_t(__t) { }
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	template<typename _Arg>
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  operator()(const _Arg& __arg) const
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 151


 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  operator()(_Arg&& __arg) const
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       private:
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Rb_tree& _M_t;
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       };
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Key 				key_type;
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Val 				value_type;
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef value_type* 			pointer;
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const value_type* 		const_pointer;
 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef value_type& 			reference;
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const value_type& 		const_reference;
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef size_t 				size_type;
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef ptrdiff_t 			difference_type;
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Alloc 				allocator_type;
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Node_allocator&
 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl; }
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const _Node_allocator&
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_Node_allocator() const _GLIBCXX_NOEXCEPT
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl; }
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       allocator_type
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return allocator_type(_M_get_Node_allocator()); }
 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     protected:
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_node()
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_construct_node(_Link_type __node, const value_type& __x)
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__try
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { get_allocator().construct(__node->_M_valptr(), __x); }
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__catch(...)
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_put_node(__node);
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __throw_exception_again;
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_create_node(const value_type& __x)
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type __tmp = _M_get_node();
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 152


 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_construct_node(__tmp, __x);
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __tmp;
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
 612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_construct_node(_Link_type __node, _Args&&... __args)
 614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __try
 616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      ::new(__node) _Rb_tree_node<_Val>;
 618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _Alloc_traits::construct(_M_get_Node_allocator(),
 619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				       __node->_M_valptr(),
 620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				       std::forward<_Args>(__args)...);
 621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
 622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __catch(...)
 623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __node->~_Rb_tree_node<_Val>();
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _M_put_node(__node);
 626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __throw_exception_again;
 627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
 628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_create_node(_Args&&... __args)
 633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type __tmp = _M_get_node();
 635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __tmp;
 637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	get_allocator().destroy(__p->_M_valptr());
 645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__p->~_Rb_tree_node<_Val>();
 648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_destroy_node(__p);
 655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_put_node(__p);
 656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
 659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type
 660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_clone_node(_Const_Link_type __x, _NodeGen& __node_gen)
 661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type __tmp = __node_gen(*__x->_M_valptr());
 663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __tmp->_M_color = __x->_M_color;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 153


 664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __tmp->_M_left = 0;
 665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __tmp->_M_right = 0;
 666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __tmp;
 667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     protected:
 670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if _GLIBCXX_INLINE_VERSION
 671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Key_compare>
 672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Unused _Is_pod_comparator is kept as it is part of mangled name.
 674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Key_compare,
 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
 676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	struct _Rb_tree_impl
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: public _Node_allocator
 679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	, public _Rb_tree_key_compare<_Key_compare>
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	, public _Rb_tree_header
 681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  typedef _Rb_tree_key_compare<_Key_compare> _Base_key_compare;
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl()
 685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _GLIBCXX_NOEXCEPT_IF(
 686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		is_nothrow_default_constructible<_Node_allocator>::value
 687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		&& is_nothrow_default_constructible<_Base_key_compare>::value )
 688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator()
 689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(const _Rb_tree_impl& __x)
 692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(_Alloc_traits::_S_select_on_copy(__x))
 693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  , _Base_key_compare(__x._M_key_compare)
 694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(const _Key_compare& __comp, const _Node_allocator& __a)
 698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(__a), _Base_key_compare(__comp)
 699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(_Rb_tree_impl&&) = default;
 702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  explicit
 704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(_Node_allocator&& __a)
 705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(std::move(__a))
 706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(_Rb_tree_impl&& __x, _Node_allocator&& __a)
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(std::move(__a)),
 710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _Base_key_compare(std::move(__x)),
 711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _Rb_tree_header(std::move(__x))
 712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	};
 719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_impl<_Compare> _M_impl;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 154


 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     protected:
 723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr&
 724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_root() _GLIBCXX_NOEXCEPT
 725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_parent; }
 726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Base_ptr
 728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_root() const _GLIBCXX_NOEXCEPT
 729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_parent; }
 730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr&
 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_leftmost() _GLIBCXX_NOEXCEPT
 733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_left; }
 734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Base_ptr
 736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_leftmost() const _GLIBCXX_NOEXCEPT
 737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_left; }
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr&
 740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_rightmost() _GLIBCXX_NOEXCEPT
 741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_right; }
 742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Base_ptr
 744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_rightmost() const _GLIBCXX_NOEXCEPT
 745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_right; }
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_begin() _GLIBCXX_NOEXCEPT
 749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Link_type
 752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_begin() const _GLIBCXX_NOEXCEPT
 753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return static_cast<_Const_Link_type>
 755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  (this->_M_impl._M_header._M_parent);
 756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_end() _GLIBCXX_NOEXCEPT
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Base_ptr
 763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_end() const _GLIBCXX_NOEXCEPT
 764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static const _Key&
 767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_key(_Const_Link_type __x)
 768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// If we're asking for the key we're presumably using the comparison
 771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// object, and so this is a good place to sanity check it.
 772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	static_assert(__is_invocable<_Compare&, const _Key&, const _Key&>{},
 773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      "comparison object must be invocable "
 774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      "with two arguments of key type");
 775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** # if __cplusplus >= 201703L
 776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// 2542. Missing const requirements for associative containers
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 155


 778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if constexpr (__is_invocable<_Compare&, const _Key&, const _Key&>{})
 779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  static_assert(
 780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      is_invocable_v<const _Compare&, const _Key&, const _Key&>,
 781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      "comparison object must be invocable as const");
 782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** # endif // C++17
 783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif // C++11
 784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _KeyOfValue()(*__x->_M_valptr());
 786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Link_type
 789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_left); }
 791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Const_Link_type
 793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Const_Link_type>(__x->_M_left); }
 795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Link_type
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Const_Link_type
 801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Const_Link_type>(__x->_M_right); }
 803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static const _Key&
 805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_key(_Const_Base_ptr __x)
 806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _S_key(static_cast<_Const_Link_type>(__x)); }
 807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Base_ptr
 809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Rb_tree_node_base::_S_minimum(__x); }
 811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Const_Base_ptr
 813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_minimum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Rb_tree_node_base::_S_minimum(__x); }
 815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Base_ptr
 817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Rb_tree_node_base::_S_maximum(__x); }
 819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Const_Base_ptr
 821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_maximum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Rb_tree_node_base::_S_maximum(__x); }
 823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
 825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_iterator<value_type>       iterator;
 826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_const_iterator<value_type> const_iterator;
 827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef std::reverse_iterator<iterator>       reverse_iterator;
 829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
 830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus > 201402L
 832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       using node_type = _Node_handle<_Key, _Val, _Node_allocator>;
 833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       using insert_return_type = _Node_insert_return<
 834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	conditional_t<is_same_v<_Key, _Val>, const_iterator, iterator>,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 156


 835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	node_type>;
 836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_insert_unique_pos(const key_type& __k);
 840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_insert_equal_pos(const key_type& __k);
 843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_insert_hint_unique_pos(const_iterator __pos,
 846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				    const key_type& __k);
 847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_insert_hint_equal_pos(const_iterator __pos,
 850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				   const key_type& __k);
 851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     private:
 853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg, typename _NodeGen>
 855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
 856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_(_Base_ptr __x, _Base_ptr __y, _Arg&& __v, _NodeGen&);
 857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_node(_Base_ptr __x, _Base_ptr __y, _Link_type __z);
 860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
 862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
 863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_lower(_Base_ptr __y, _Arg&& __v);
 864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
 866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
 867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_equal_lower(_Arg&& __x);
 868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_lower_node(_Base_ptr __p, _Link_type __z);
 871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_equal_lower_node(_Link_type __z);
 874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
 876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
 877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_(_Base_ptr __x, _Base_ptr __y,
 878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		   const value_type& __v, _NodeGen&);
 879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // 233. Insertion hints in associative containers.
 882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_lower(_Base_ptr __y, const value_type& __v);
 884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_equal_lower(const value_type& __x);
 887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
 890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type
 891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_copy(_Const_Link_type __x, _Base_ptr __p, _NodeGen&);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 157


 892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
 894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type
 895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_copy(const _Rb_tree& __x, _NodeGen& __gen)
 896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type __root = _M_copy(__x._M_begin(), _M_end(), __gen);
 898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_leftmost() = _S_minimum(__root);
 899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_rightmost() = _S_maximum(__root);
 900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_impl._M_node_count = __x._M_impl._M_node_count;
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __root;
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type
 905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_copy(const _Rb_tree& __x)
 906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Alloc_node __an(*this);
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _M_copy(__x, __an);
 909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
 912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_erase(_Link_type __x);
 913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_lower_bound(_Link_type __x, _Base_ptr __y,
 916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		     const _Key& __k);
 917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
 920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		     const _Key& __k) const;
 921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_upper_bound(_Link_type __x, _Base_ptr __y,
 924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		     const _Key& __k);
 925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
 927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_upper_bound(_Const_Link_type __x, _Const_Base_ptr __y,
 928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		     const _Key& __k) const;
 929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
 931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // allocation/deallocation
 932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree() { }
 934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree() = default;
 936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(const _Compare& __comp,
 939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       const allocator_type& __a = allocator_type())
 940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(__comp, _Node_allocator(__a)) { }
 941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(const _Rb_tree& __x)
 943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(__x._M_impl)
 944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__x._M_root() != 0)
 946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_root() = _M_copy(__x);
 947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 158


 949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(const allocator_type& __a)
 951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(_Node_allocator(__a))
 952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(const _Rb_tree& __x, const allocator_type& __a)
 955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(__x._M_impl._M_key_compare, _Node_allocator(__a))
 956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__x._M_root() != nullptr)
 958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_root() = _M_copy(__x);
 959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(_Rb_tree&&) = default;
 962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, const allocator_type& __a)
 964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _Rb_tree(std::move(__x), _Node_allocator(__a))
 965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     private:
 968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a, true_type)
 969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       noexcept(is_nothrow_default_constructible<_Compare>::value)
 970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(std::move(__x._M_impl), std::move(__a))
 971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a, false_type)
 974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(__x._M_impl._M_key_compare, std::move(__a))
 975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__x._M_root() != nullptr)
 977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_move_data(__x, false_type{});
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
 981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a)
 982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       noexcept( noexcept(
 983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Rb_tree(std::declval<_Rb_tree&&>(), std::declval<_Node_allocator&&>(),
 984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		 std::declval<typename _Alloc_traits::is_always_equal>())) )
 985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _Rb_tree(std::move(__x), std::move(__a),
 986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		 typename _Alloc_traits::is_always_equal{})
 987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       ~_Rb_tree() _GLIBCXX_NOEXCEPT
 991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _M_erase(_M_begin()); }
 992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree&
 994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator=(const _Rb_tree& __x);
 995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Accessors.
 997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Compare
 998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       key_comp() const
 999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_impl._M_key_compare; }
1000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       begin() _GLIBCXX_NOEXCEPT
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(this->_M_impl._M_header._M_left); }
1004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 159


1006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       begin() const _GLIBCXX_NOEXCEPT
1007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return const_iterator(this->_M_impl._M_header._M_left); }
1008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       end() _GLIBCXX_NOEXCEPT
1011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(&this->_M_impl._M_header); }
1012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
1014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       end() const _GLIBCXX_NOEXCEPT
1015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return const_iterator(&this->_M_impl._M_header); }
1016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       reverse_iterator
1018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       rbegin() _GLIBCXX_NOEXCEPT
1019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return reverse_iterator(end()); }
1020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_reverse_iterator
1022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       rbegin() const _GLIBCXX_NOEXCEPT
1023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return const_reverse_iterator(end()); }
1024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       reverse_iterator
1026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       rend() _GLIBCXX_NOEXCEPT
1027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return reverse_iterator(begin()); }
1028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_reverse_iterator
1030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       rend() const _GLIBCXX_NOEXCEPT
1031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return const_reverse_iterator(begin()); }
1032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_NODISCARD bool
1034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       empty() const _GLIBCXX_NOEXCEPT
1035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_impl._M_node_count == 0; }
1036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       size_type
1038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       size() const _GLIBCXX_NOEXCEPT
1039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_impl._M_node_count; }
1040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       size_type
1042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       max_size() const _GLIBCXX_NOEXCEPT
1043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Alloc_traits::max_size(_M_get_Node_allocator()); }
1044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       swap(_Rb_tree& __t)
1047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Compare>::value);
1048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Insert/erase.
1050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
1052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	pair<iterator, bool>
1053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_unique(_Arg&& __x);
1054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
1056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_equal(_Arg&& __x);
1058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg, typename _NodeGen>
1060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_unique_(const_iterator __pos, _Arg&& __x, _NodeGen&);
1062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 160


1063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
1064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_unique_(const_iterator __pos, _Arg&& __x)
1066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return _M_insert_unique_(__pos, std::forward<_Arg>(__x), __an);
1069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg, typename _NodeGen>
1072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_equal_(const_iterator __pos, _Arg&& __x, _NodeGen&);
1074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
1076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_equal_(const_iterator __pos, _Arg&& __x)
1078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return _M_insert_equal_(__pos, std::forward<_Arg>(__x), __an);
1081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
1084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	pair<iterator, bool>
1085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_emplace_unique(_Args&&... __args);
1086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
1088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_emplace_equal(_Args&&... __args);
1090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
1092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_emplace_hint_unique(const_iterator __pos, _Args&&... __args);
1094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
1096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_emplace_hint_equal(const_iterator __pos, _Args&&... __args);
1098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Iter>
1100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	using __same_value_type
1101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  = is_same<value_type, typename iterator_traits<_Iter>::value_type>;
1102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__enable_if_t<__same_value_type<_InputIterator>::value>
1105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
1106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
1110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__enable_if_t<!__same_value_type<_InputIterator>::value>
1114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
1115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_emplace_unique(*__first);
1118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 161


1120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__enable_if_t<__same_value_type<_InputIterator>::value>
1122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_equal(_InputIterator __first, _InputIterator __last)
1123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_equal_(end(), *__first, __an);
1127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__enable_if_t<!__same_value_type<_InputIterator>::value>
1131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_equal(_InputIterator __first, _InputIterator __last)
1132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_emplace_equal(*__first);
1136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<iterator, bool>
1139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_unique(const value_type& __x);
1140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_equal(const value_type& __x);
1143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
1145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_unique_(const_iterator __pos, const value_type& __x,
1147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			  _NodeGen&);
1148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_unique_(const_iterator __pos, const value_type& __x)
1151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Alloc_node __an(*this);
1153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _M_insert_unique_(__pos, __x, __an);
1154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
1157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_equal_(const_iterator __pos, const value_type& __x,
1159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			 _NodeGen&);
1160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_equal_(const_iterator __pos, const value_type& __x)
1162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Alloc_node __an(*this);
1164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _M_insert_equal_(__pos, __x, __an);
1165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
1170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
1174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 162


1177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_equal(_InputIterator __first, _InputIterator __last)
1179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_equal_(end(), *__first, __an);
1183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     private:
1187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_erase_aux(const_iterator __position);
1189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_erase_aux(const_iterator __first, const_iterator __last);
1192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
1194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // DR 130. Associative erase should return an iterator.
1197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_ABI_TAG_CXX11
1198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(const_iterator __position)
1200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__glibcxx_assert(__position != end());
1202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	const_iterator __result = __position;
1203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	++__result;
1204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase_aux(__position);
1205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __result._M_const_cast();
1206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // LWG 2059.
1209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_ABI_TAG_CXX11
1210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(iterator __position)
1212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__glibcxx_assert(__position != end());
1214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator __result = __position;
1215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	++__result;
1216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase_aux(__position);
1217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __result;
1218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(iterator __position)
1222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__glibcxx_assert(__position != end());
1224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase_aux(__position);
1225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(const_iterator __position)
1229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__glibcxx_assert(__position != end());
1231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase_aux(__position);
1232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 163


1234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       size_type
1236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(const key_type& __x);
1237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // DR 130. Associative erase should return an iterator.
1241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_ABI_TAG_CXX11
1242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(const_iterator __first, const_iterator __last)
1244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase_aux(__first, __last);
1246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __last._M_const_cast();
1247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(iterator __first, iterator __last)
1251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _M_erase_aux(__first, __last); }
1252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(const_iterator __first, const_iterator __last)
1255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _M_erase_aux(__first, __last); }
1256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       clear() _GLIBCXX_NOEXCEPT
1260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase(_M_begin());
1262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_impl._M_reset();
1263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Set operations.
1266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       find(const key_type& __k);
1268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
1270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       find(const key_type& __k) const;
1271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       size_type
1273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       count(const key_type& __k) const;
1274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       lower_bound(const key_type& __k)
1277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_lower_bound(_M_begin(), _M_end(), __k); }
1278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
1280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       lower_bound(const key_type& __k) const
1281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_lower_bound(_M_begin(), _M_end(), __k); }
1282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       upper_bound(const key_type& __k)
1285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_upper_bound(_M_begin(), _M_end(), __k); }
1286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
1288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       upper_bound(const key_type& __k) const
1289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_upper_bound(_M_begin(), _M_end(), __k); }
1290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 164


1291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<iterator, iterator>
1292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       equal_range(const key_type& __k);
1293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<const_iterator, const_iterator>
1295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       equal_range(const key_type& __k) const;
1296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201402L
1298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_find_tr(const _Kt& __k)
1302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __const_this->_M_find_tr(__k)._M_const_cast();
1305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	const_iterator
1310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_find_tr(const _Kt& __k) const
1311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __j = _M_lower_bound_tr(__k);
1313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__j != end() && _M_impl._M_key_compare(__k, _S_key(__j._M_node)))
1314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __j = end();
1315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __j;
1316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	size_type
1321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_count_tr(const _Kt& __k) const
1322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __p = _M_equal_range_tr(__k);
1324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return std::distance(__p.first, __p.second);
1325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_lower_bound_tr(const _Kt& __k)
1331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __const_this->_M_lower_bound_tr(__k)._M_const_cast();
1334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	const_iterator
1339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_lower_bound_tr(const _Kt& __k) const
1340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __x = _M_begin();
1342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __y = _M_end();
1343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  while (__x != 0)
1344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (!_M_impl._M_key_compare(_S_key(__x), __k))
1345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__y = __x;
1347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__x = _S_left(__x);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 165


1348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __x = _S_right(__x);
1351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return const_iterator(__y);
1352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_upper_bound_tr(const _Kt& __k)
1358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __const_this->_M_upper_bound_tr(__k)._M_const_cast();
1361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	const_iterator
1366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_upper_bound_tr(const _Kt& __k) const
1367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __x = _M_begin();
1369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __y = _M_end();
1370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  while (__x != 0)
1371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (_M_impl._M_key_compare(__k, _S_key(__x)))
1372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__y = __x;
1374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__x = _S_left(__x);
1375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __x = _S_right(__x);
1378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return const_iterator(__y);
1379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	pair<iterator, iterator>
1384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_equal_range_tr(const _Kt& __k)
1385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __ret = __const_this->_M_equal_range_tr(__k);
1388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return { __ret.first._M_const_cast(), __ret.second._M_const_cast() };
1389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	pair<const_iterator, const_iterator>
1394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_equal_range_tr(const _Kt& __k) const
1395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __low = _M_lower_bound_tr(__k);
1397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __high = __low;
1398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto& __cmp = _M_impl._M_key_compare;
1399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  while (__high != end() && !__cmp(__k, _S_key(__high._M_node)))
1400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    ++__high;
1401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return { __low, __high };
1402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 166


1405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Debugging.
1406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       bool
1407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       __rb_verify() const;
1408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree&
1411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator=(_Rb_tree&&)
1412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       noexcept(_Alloc_traits::_S_nothrow_move()
1413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       && is_nothrow_move_assignable<_Compare>::value);
1414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Iterator>
1416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_assign_unique(_Iterator, _Iterator);
1418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Iterator>
1420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_assign_equal(_Iterator, _Iterator);
1422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     private:
1424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Move elements from container with equal allocator.
1425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_move_data(_Rb_tree& __x, true_type)
1427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _M_impl._M_move_data(__x._M_impl); }
1428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Move elements from container with possibly non-equal allocator,
1430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // which might result in a copy not a move.
1431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_move_data(_Rb_tree&, false_type);
1433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Move assignment from container with equal allocator.
1435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_move_assign(_Rb_tree&, true_type);
1437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Move assignment from container with possibly non-equal allocator,
1439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // which might result in a copy not a move.
1440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_move_assign(_Rb_tree&, false_type);
1442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus > 201402L
1445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
1446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Re-insert an extracted node.
1447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       insert_return_type
1448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reinsert_node_unique(node_type&& __nh)
1449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	insert_return_type __ret;
1451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__nh.empty())
1452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __ret.position = end();
1453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
1456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    auto __res = _M_get_insert_unique_pos(__nh._M_key());
1458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__res.second)
1459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret.position
1461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 167


1462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__nh._M_ptr = nullptr;
1463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret.inserted = true;
1464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret.node = std::move(__nh);
1468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret.position = iterator(__res.first);
1469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret.inserted = false;
1470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __ret;
1473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Re-insert an extracted node.
1476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reinsert_node_equal(node_type&& __nh)
1478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator __ret;
1480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__nh.empty())
1481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __ret = end();
1482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
1485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    auto __res = _M_get_insert_equal_pos(__nh._M_key());
1486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__res.second)
1487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __ret = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
1488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __ret = _M_insert_equal_lower_node(__nh._M_ptr);
1490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __nh._M_ptr = nullptr;
1491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __ret;
1493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Re-insert an extracted node.
1496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reinsert_node_hint_unique(const_iterator __hint, node_type&& __nh)
1498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator __ret;
1500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__nh.empty())
1501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __ret = end();
1502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
1505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    auto __res = _M_get_insert_hint_unique_pos(__hint, __nh._M_key());
1506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__res.second)
1507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
1509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__nh._M_ptr = nullptr;
1510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __ret = iterator(__res.first);
1513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __ret;
1515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Re-insert an extracted node.
1518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 168


1519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reinsert_node_hint_equal(const_iterator __hint, node_type&& __nh)
1520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator __ret;
1522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__nh.empty())
1523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __ret = end();
1524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
1527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    auto __res = _M_get_insert_hint_equal_pos(__hint, __nh._M_key());
1528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__res.second)
1529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __ret = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
1530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __ret = _M_insert_equal_lower_node(__nh._M_ptr);
1532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __nh._M_ptr = nullptr;
1533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __ret;
1535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Extract a node.
1538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       node_type
1539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       extract(const_iterator __pos)
1540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	auto __ptr = _Rb_tree_rebalance_for_erase(
1542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __pos._M_const_cast()._M_node, _M_impl._M_header);
1543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	--_M_impl._M_node_count;
1544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return { static_cast<_Link_type>(__ptr), _M_get_Node_allocator() };
1545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Extract a node.
1548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       node_type
1549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       extract(const key_type& __k)
1550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	node_type __nh;
1552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	auto __pos = find(__k);
1553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__pos != end())
1554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __nh = extract(const_iterator(__pos));
1555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __nh;
1556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Compare2>
1559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	using _Compatible_tree
1560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  = _Rb_tree<_Key, _Val, _KeyOfValue, _Compare2, _Alloc>;
1561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename, typename>
1563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	friend class _Rb_tree_merge_helper;
1564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Merge from a compatible container into one with unique keys.
1566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Compare2>
1567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_merge_unique(_Compatible_tree<_Compare2>& __src) noexcept
1569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  using _Merge_helper = _Rb_tree_merge_helper<_Rb_tree, _Compare2>;
1571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (auto __i = __src.begin(), __end = __src.end(); __i != __end;)
1572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
1573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto __pos = __i++;
1574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto __res = _M_get_insert_unique_pos(_KeyOfValue()(*__pos));
1575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (__res.second)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 169


1576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		{
1577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  auto& __src_impl = _Merge_helper::_S_get_impl(__src);
1578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  auto __ptr = _Rb_tree_rebalance_for_erase(
1579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      __pos._M_node, __src_impl._M_header);
1580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  --__src_impl._M_node_count;
1581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  _M_insert_node(__res.first, __res.second,
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				 static_cast<_Link_type>(__ptr));
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		}
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
1585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Merge from a compatible container into one with equivalent keys.
1588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Compare2>
1589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_merge_equal(_Compatible_tree<_Compare2>& __src) noexcept
1591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  using _Merge_helper = _Rb_tree_merge_helper<_Rb_tree, _Compare2>;
1593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (auto __i = __src.begin(), __end = __src.end(); __i != __end;)
1594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
1595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto __pos = __i++;
1596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto __res = _M_get_insert_equal_pos(_KeyOfValue()(*__pos));
1597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (__res.second)
1598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		{
1599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  auto& __src_impl = _Merge_helper::_S_get_impl(__src);
1600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  auto __ptr = _Rb_tree_rebalance_for_erase(
1601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      __pos._M_node, __src_impl._M_header);
1602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  --__src_impl._M_node_count;
1603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  _M_insert_node(__res.first, __res.second,
1604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				 static_cast<_Link_type>(__ptr));
1605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		}
1606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
1607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif // C++17
1609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
1611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator==(const _Rb_tree& __x, const _Rb_tree& __y)
1612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __x.size() == __y.size()
1614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  && std::equal(__x.begin(), __x.end(), __y.begin());
1615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cpp_lib_three_way_comparison
1618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend auto
1619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator<=>(const _Rb_tree& __x, const _Rb_tree& __y)
1620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if constexpr (requires { typename __detail::__synth3way_t<_Val>; })
1622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return std::lexicographical_compare_three_way(__x.begin(), __x.end(),
1623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 							__y.begin(), __y.end(),
1624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 							__detail::__synth3way);
1625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
1628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator<(const _Rb_tree& __x, const _Rb_tree& __y)
1629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return std::lexicographical_compare(__x.begin(), __x.end(),
1631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 					    __y.begin(), __y.end());
1632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 170


1633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool _GLIBCXX_DEPRECATED
1635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator!=(const _Rb_tree& __x, const _Rb_tree& __y)
1636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return !(__x == __y); }
1637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool _GLIBCXX_DEPRECATED
1639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator>(const _Rb_tree& __x, const _Rb_tree& __y)
1640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return __y < __x; }
1641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool _GLIBCXX_DEPRECATED
1643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator<=(const _Rb_tree& __x, const _Rb_tree& __y)
1644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return !(__y < __x); }
1645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool _GLIBCXX_DEPRECATED
1647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator>=(const _Rb_tree& __x, const _Rb_tree& __y)
1648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return !(__x < __y); }
1649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     };
1651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     inline void
1655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     swap(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
1656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
1657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     { __x.swap(__y); }
1658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
1663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_move_data(_Rb_tree& __x, false_type)
1665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (_M_get_Node_allocator() == __x._M_get_Node_allocator())
1667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_move_data(__x, true_type());
1668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else
1669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __lbd =
1672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    [&__an](const value_type& __cval)
1673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
1674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto& __val = const_cast<value_type&>(__cval);
1675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      return __an(std::move_if_noexcept(__val));
1676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    };
1677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_root() = _M_copy(__x, __lbd);
1678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     inline void
1684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_move_assign(_Rb_tree& __x, true_type)
1686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       clear();
1688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__x._M_root() != nullptr)
1689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_move_data(__x, true_type());
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 171


1690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       std::__alloc_on_move(_M_get_Node_allocator(),
1691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   __x._M_get_Node_allocator());
1692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
1697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_move_assign(_Rb_tree& __x, false_type)
1699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (_M_get_Node_allocator() == __x._M_get_Node_allocator())
1701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _M_move_assign(__x, true_type{});
1702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Try to move each node reusing existing nodes and copying __x nodes
1704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // structure.
1705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Reuse_or_alloc_node __roan(*this);
1706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_impl._M_reset();
1707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__x._M_root() != nullptr)
1708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __lbd =
1710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    [&__roan](const value_type& __cval)
1711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
1712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto& __val = const_cast<value_type&>(__cval);
1713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      return __roan(std::move(__val));
1714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    };
1715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_root() = _M_copy(__x, __lbd);
1716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x.clear();
1717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     inline _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&
1723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     operator=(_Rb_tree&& __x)
1725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     noexcept(_Alloc_traits::_S_nothrow_move()
1726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	     && is_nothrow_move_assignable<_Compare>::value)
1727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_impl._M_key_compare = std::move(__x._M_impl._M_key_compare);
1729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_move_assign(__x, __bool_constant<_Alloc_traits::_S_nothrow_move()>());
1730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return *this;
1731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Iterator>
1736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_assign_unique(_Iterator __first, _Iterator __last)
1739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Reuse_or_alloc_node __roan(*this);
1741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_impl._M_reset();
1742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	for (; __first != __last; ++__first)
1743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_insert_unique_(end(), *__first, __roan);
1744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 172


1747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Iterator>
1749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_assign_equal(_Iterator __first, _Iterator __last)
1752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Reuse_or_alloc_node __roan(*this);
1754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_impl._M_reset();
1755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	for (; __first != __last; ++__first)
1756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_insert_equal_(end(), *__first, __roan);
1757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&
1763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     operator=(const _Rb_tree& __x)
1765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (this != &__x)
1767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  // Note that _Key may be a constant type.
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
1771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
1772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto& __this_alloc = this->_M_get_Node_allocator();
1773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto& __that_alloc = __x._M_get_Node_allocator();
1774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (!_Alloc_traits::_S_always_equal()
1775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  && __this_alloc != __that_alloc)
1776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		{
1777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  // Replacement allocator cannot free existing storage, we need
1778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  // to erase nodes first.
1779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  clear();
1780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  std::__alloc_on_copy(__this_alloc, __that_alloc);
1781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		}
1782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
1783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Reuse_or_alloc_node __roan(*this);
1786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_impl._M_reset();
1787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_impl._M_key_compare = __x._M_impl._M_key_compare;
1788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__x._M_root() != 0)
1789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_root() = _M_copy(__x, __roan);
1790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return *this;
1793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg, typename _NodeGen>
1799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _NodeGen>
1801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 173


1804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_(_Base_ptr __x, _Base_ptr __p,
1805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		 _Arg&& __v,
1807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		 const _Val& __v,
1809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		 _NodeGen& __node_gen)
1811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	bool __insert_left = (__x != 0 || __p == _M_end()
1813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
1814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 							_S_key(__p)));
1815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
1817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
1819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				      this->_M_impl._M_header);
1820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	++_M_impl._M_node_count;
1821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return iterator(__z);
1822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg>
1828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_lower(_Base_ptr __p, _Arg&& __v)
1833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_lower(_Base_ptr __p, const _Val& __v)
1835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       bool __insert_left = (__p == _M_end()
1838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			    || !_M_impl._M_key_compare(_S_key(__p),
1839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 						       _KeyOfValue()(__v)));
1840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type __z = _M_create_node(_GLIBCXX_FORWARD(_Arg, __v));
1842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
1844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				    this->_M_impl._M_header);
1845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       ++_M_impl._M_node_count;
1846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return iterator(__z);
1847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg>
1853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_equal_lower(_Arg&& __v)
1858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_equal_lower(const _Val& __v)
1860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 174


1861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type __x = _M_begin();
1863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr __y = _M_end();
1864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
1865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x;
1867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = !_M_impl._M_key_compare(_S_key(__x), _KeyOfValue()(__v)) ?
1868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_S_left(__x) : _S_right(__x);
1869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return _M_insert_lower(__y, _GLIBCXX_FORWARD(_Arg, __v));
1871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KoV,
1874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _NodeGen>
1876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::_Link_type
1877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::
1878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_copy(_Const_Link_type __x, _Base_ptr __p, _NodeGen& __node_gen)
1879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// Structural copy. __x and __p must be non-null.
1881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type __top = _M_clone_node(__x, __node_gen);
1882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__top->_M_parent = __p;
1883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__try
1885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__x->_M_right)
1887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __top->_M_right = _M_copy(_S_right(__x), __top, __node_gen);
1888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __p = __top;
1889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __x = _S_left(__x);
1890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    while (__x != 0)
1892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_Link_type __y = _M_clone_node(__x, __node_gen);
1894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__p->_M_left = __y;
1895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__y->_M_parent = __p;
1896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		if (__x->_M_right)
1897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  __y->_M_right = _M_copy(_S_right(__x), __y, __node_gen);
1898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__p = __y;
1899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__x = _S_left(__x);
1900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__catch(...)
1903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_erase(__top);
1905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __throw_exception_again;
1906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __top;
1908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
1913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 2281              		.loc 29 1913 5 is_stmt 1 view -0
 2282              		.cfi_startproc
 2283              		@ args = 0, pretend = 0, frame = 0
 2284              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 175


1914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_erase(_Link_type __x)
1915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Erase without rebalancing.
1917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
 2285              		.loc 29 1917 18 view .LVU494
 2286 0000 E8B1     		cbz	r0, .L104
1913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_erase(_Link_type __x)
 2287              		.loc 29 1913 5 is_stmt 0 view .LVU495
 2288 0002 38B5     		push	{r3, r4, r5, lr}
 2289              		.cfi_def_cfa_offset 16
 2290              		.cfi_offset 3, -16
 2291              		.cfi_offset 4, -12
 2292              		.cfi_offset 5, -8
 2293              		.cfi_offset 14, -4
 2294 0004 0446     		mov	r4, r0
 2295              	.LVL130:
 2296              	.L95:
 2297              	.LBB5282:
 2298              	.LBB5283:
 2299              	.LBI5283:
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 2300              		.loc 29 797 7 is_stmt 1 view .LVU496
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 2301              		.loc 29 797 7 is_stmt 0 view .LVU497
 2302 0006 2546     		mov	r5, r4
 2303              	.LBE5283:
1918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_erase(_S_right(__x));
 2304              		.loc 29 1919 12 view .LVU498
 2305 0008 E068     		ldr	r0, [r4, #12]
 2306 000a FFF7F9FF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiE
 2307              	.LVL131:
 2308              	.LBB5284:
 2309              	.LBI5284:
 789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_left); }
 2310              		.loc 29 789 7 is_stmt 1 view .LVU499
 2311              	.LBB5285:
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 2312              		.loc 29 790 52 is_stmt 0 view .LVU500
 2313 000e A468     		ldr	r4, [r4, #8]
 2314              	.LVL132:
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 2315              		.loc 29 790 52 view .LVU501
 2316              	.LBE5285:
 2317              	.LBE5284:
 2318              	.LBB5286:
 2319              	.LBI5286:
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 2320              		.loc 29 652 7 is_stmt 1 view .LVU502
 2321              	.LBB5287:
 2322              	.LBI5287:
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 2323              		.loc 29 641 7 view .LVU503
 2324              	.LBB5288:
 2325              	.LBI5288:
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 2326              		.loc 25 527 2 view .LVU504
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 176


 2327              	.LBB5289:
 2328              	.LBI5289:
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			  , __t * sizeof(_Tp)
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			 );
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       size_type
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return _M_max_size(); }
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up, typename... _Args>
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	construct(_Up* __p, _Args&&... __args)
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up>
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	destroy(_Up* __p)
 2329              		.loc 22 154 2 view .LVU505
 2330              	.LBB5290:
 2331              	.LBI5290:
 2332              		.file 30 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Pair implementation -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 177


  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Copyright (c) 1996,1997
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** /** @file bits/stl_pair.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #ifndef _STL_PAIR_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #define _STL_PAIR_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # include <type_traits> // for std::__decay_and_strip, std::is_reference_v
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus > 201703L
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # include <compare>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # define __cpp_lib_constexpr_utility 201811L
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** {
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /**
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @addtogroup utilities
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @{
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    */
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Tag type for piecewise construction of std::pair objects.
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   struct piecewise_construct_t { explicit piecewise_construct_t() = default; };
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Tag for piecewise construction of std::pair objects.
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   _GLIBCXX17_INLINE constexpr piecewise_construct_t piecewise_construct =
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     piecewise_construct_t();
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// @cond undocumented
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 178


  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // Forward declarations.
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename...>
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     class tuple;
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<std::size_t...>
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _Index_tuple;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // Concept utility functions, reused in conditionally-explicit
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // constructors.
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // See PR 70437, don't look at is_constructible or
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // is_convertible if the types are the same to
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // avoid querying those properties for incomplete types.
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template <bool, typename _T1, typename _T2>
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _PCC
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ConstructiblePair()
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, const _U2&>>::value;
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_convertible<const _U1&, _T1>,
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_convertible<const _U2&, _T2>>::value;
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, _U2&&>>::value;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_convertible<_U1&&, _T1>,
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_convertible<_U2&&, _T2>>::value;
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _CopyMovePair()
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __do_converts = __and_<is_convertible<const _U1&, _T1>,
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				  is_convertible<_U2&&, _T2>>;
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __converts = typename conditional<__implicit,
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __do_converts,
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __not_<__do_converts>>::type;
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, _U2&&>,
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      __converts
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      >::value;
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 179


 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveCopyPair()
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __do_converts = __and_<is_convertible<_U1&&, _T1>,
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				  is_convertible<const _U2&, _T2>>;
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __converts = typename conditional<__implicit,
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __do_converts,
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __not_<__do_converts>>::type;
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, const _U2&&>,
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      __converts
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      >::value;
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template <typename _T1, typename _T2>
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _PCC<false, _T1, _T2>
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ConstructiblePair()
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif // C++11
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _U1, typename _U2> class __pair_base
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   {
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     template<typename _T1, typename _T2> friend struct pair;
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base() = default;
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     ~__pair_base() = default;
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base(const __pair_base&) = default;
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base& operator=(const __pair_base&) = delete;
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif // C++11
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// @endcond
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 180


 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  /**
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @tparam _T1  Type of first object.
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @tparam _T2  Type of second object.
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  <https://gcc.gnu.org/onlinedocs/libstdc++/manual/utilities.html>
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    */
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct pair
 2333              		.loc 30 211 12 view .LVU506
 2334              	.LBB5291:
 2335              	.LBI5291:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2336              		.loc 26 678 7 view .LVU507
 2337              	.LBB5292:
 2338              	.LBI5292:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2339              		.loc 26 276 7 view .LVU508
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2340              		.loc 26 276 7 is_stmt 0 view .LVU509
 2341              	.LBE5292:
 2342              	.LBB5293:
 2343              	.LBI5293:
 2344              		.loc 25 735 5 is_stmt 1 view .LVU510
 2345              		.loc 25 735 5 is_stmt 0 view .LVU511
 2346              	.LBE5293:
 2347              	.LBB5294:
 2348              	.LBI5294:
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2349              		.loc 26 333 7 is_stmt 1 view .LVU512
 2350              	.LBB5295:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 2351              		.loc 26 335 15 is_stmt 0 view .LVU513
 2352 0010 AB6A     		ldr	r3, [r5, #40]
 2353              	.LVL133:
 2354              	.LBB5296:
 2355              	.LBI5296:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2356              		.loc 26 350 7 is_stmt 1 view .LVU514
 2357              	.LBB5297:
 2358              	.LBB5298:
 2359              	.LBI5298:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2360              		.loc 25 491 7 view .LVU515
 2361              	.LBB5299:
 2362              	.LBB5300:
 2363              	.LBI5300:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2364              		.loc 22 120 7 view .LVU516
 2365              	.LBB5301:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2366              		.loc 22 133 19 is_stmt 0 view .LVU517
 2367 0012 1846     		mov	r0, r3
 2368              	.LBE5301:
 2369              	.LBE5300:
 2370              	.LBE5299:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 181


 2371              	.LBE5298:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2372              		.loc 26 353 2 view .LVU518
 2373 0014 1BB1     		cbz	r3, .L93
 2374              	.LBE5297:
 2375              	.LBE5296:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 2376              		.loc 26 336 35 view .LVU519
 2377 0016 296B     		ldr	r1, [r5, #48]
 2378              	.LBB5307:
 2379              	.LBB5306:
 2380              	.LBB5305:
 2381              	.LBB5304:
 2382              	.LBB5303:
 2383              	.LBB5302:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2384              		.loc 22 133 19 view .LVU520
 2385 0018 C91A     		subs	r1, r1, r3
 2386 001a FFF7FEFF 		bl	_ZdlPvj
 2387              	.LVL134:
 2388              	.L93:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2389              		.loc 22 133 19 view .LVU521
 2390              	.LBE5302:
 2391              	.LBE5303:
 2392              	.LBE5304:
 2393              	.LBE5305:
 2394              	.LBE5306:
 2395              	.LBE5307:
 2396              	.LBB5308:
 2397              	.LBI5308:
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2398              		.loc 26 128 14 is_stmt 1 view .LVU522
 2399              	.LBB5309:
 2400              	.LBI5309:
 2401              		.loc 21 162 7 view .LVU523
 2402              	.LBB5310:
 2403              	.LBI5310:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2404              		.loc 22 89 7 view .LVU524
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2405              		.loc 22 89 7 is_stmt 0 view .LVU525
 2406              	.LBE5310:
 2407              	.LBE5309:
 2408              	.LBE5308:
 2409              	.LBE5295:
 2410              	.LBE5294:
 2411              	.LBE5291:
 2412              	.LBB5311:
 2413              	.LBI5311:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 2414              		.loc 19 657 7 is_stmt 1 view .LVU526
 2415              	.LBB5312:
 2416              	.LBI5312:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2417              		.loc 19 229 7 view .LVU527
 2418              	.LBB5313:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 182


 2419              	.LBB5314:
 2420              	.LBI5314:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2421              		.loc 19 221 7 view .LVU528
 2422              	.LBB5315:
 2423              	.LBI5315:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2424              		.loc 19 186 7 view .LVU529
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2425              		.loc 19 186 7 is_stmt 0 view .LVU530
 2426              	.LBE5315:
 2427              	.LBE5314:
 2428              	.LBB5321:
 2429              	.LBI5321:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2430              		.loc 19 236 7 is_stmt 1 view .LVU531
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2431              		.loc 19 236 7 is_stmt 0 view .LVU532
 2432              	.LBE5321:
 2433              	.LBB5329:
 2434              	.LBB5317:
 2435              	.LBB5316:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2436              		.loc 19 187 28 view .LVU533
 2437 001e 2869     		ldr	r0, [r5, #16]
 2438              	.LVL135:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2439              		.loc 19 187 28 view .LVU534
 2440              	.LBE5316:
 2441              	.LBE5317:
 2442              	.LBB5318:
 2443              	.LBI5318:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2444              		.loc 19 200 7 is_stmt 1 view .LVU535
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2445              		.loc 19 200 7 is_stmt 0 view .LVU536
 2446              	.LBE5318:
 2447              	.LBE5329:
 2448              	.LBB5330:
 2449              	.LBB5322:
 2450              	.LBB5323:
 2451              	.LBI5323:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2452              		.loc 25 491 7 is_stmt 1 view .LVU537
 2453              	.LBB5324:
 2454              	.LBI5324:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2455              		.loc 22 120 7 view .LVU538
 2456              	.LBE5324:
 2457              	.LBE5323:
 2458              	.LBE5322:
 2459              	.LBE5330:
 2460              	.LBB5331:
 2461              	.LBB5320:
 2462              	.LBB5319:
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2463              		.loc 19 203 57 is_stmt 0 view .LVU539
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 183


 2464 0020 05F11803 		add	r3, r5, #24
 2465              	.LVL136:
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2466              		.loc 19 203 57 view .LVU540
 2467              	.LBE5319:
 2468              	.LBE5320:
 2469              	.LBE5331:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2470              		.loc 19 231 2 view .LVU541
 2471 0024 9842     		cmp	r0, r3
 2472 0026 03D0     		beq	.L94
 2473              	.LBB5332:
 2474              	.LBB5328:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2475              		.loc 19 237 34 view .LVU542
 2476 0028 A969     		ldr	r1, [r5, #24]
 2477              	.LBB5327:
 2478              	.LBB5326:
 2479              	.LBB5325:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2480              		.loc 22 133 19 view .LVU543
 2481 002a 0131     		adds	r1, r1, #1
 2482              	.LVL137:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2483              		.loc 22 133 19 view .LVU544
 2484 002c FFF7FEFF 		bl	_ZdlPvj
 2485              	.LVL138:
 2486              	.L94:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2487              		.loc 22 133 19 view .LVU545
 2488              	.LBE5325:
 2489              	.LBE5326:
 2490              	.LBE5327:
 2491              	.LBE5328:
 2492              	.LBE5332:
 2493              	.LBE5313:
 2494              	.LBE5312:
 2495              	.LBB5333:
 2496              	.LBI5333:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2497              		.loc 19 150 14 is_stmt 1 view .LVU546
 2498              	.LBB5334:
 2499              	.LBI5334:
 2500              		.loc 21 162 7 view .LVU547
 2501              	.LBB5335:
 2502              	.LBI5335:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2503              		.loc 22 89 7 view .LVU548
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2504              		.loc 22 89 7 is_stmt 0 view .LVU549
 2505              	.LBE5335:
 2506              	.LBE5334:
 2507              	.LBE5333:
 2508              	.LBE5311:
 2509              	.LBE5290:
 2510              	.LBE5289:
 2511              	.LBE5288:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 184


 2512              	.LBE5287:
 2513              	.LBB5336:
 2514              	.LBI5336:
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 2515              		.loc 29 587 7 is_stmt 1 view .LVU550
 2516              	.LBB5337:
 2517              	.LBI5337:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2518              		.loc 25 491 7 view .LVU551
 2519              	.LBB5338:
 2520              	.LBI5338:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2521              		.loc 22 120 7 view .LVU552
 2522              	.LBB5339:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2523              		.loc 22 133 19 is_stmt 0 view .LVU553
 2524 0030 3421     		movs	r1, #52
 2525 0032 2846     		mov	r0, r5
 2526 0034 FFF7FEFF 		bl	_ZdlPvj
 2527              	.LVL139:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2528              		.loc 22 133 19 view .LVU554
 2529              	.LBE5339:
 2530              	.LBE5338:
 2531              	.LBE5337:
 2532              	.LBE5336:
 2533              	.LBE5286:
 2534              	.LBE5282:
1917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 2535              		.loc 29 1917 18 is_stmt 1 view .LVU555
 2536 0038 002C     		cmp	r4, #0
 2537 003a E4D1     		bne	.L95
1920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type __y = _S_left(__x);
1921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_drop_node(__x);
1922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = __y;
1923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 2538              		.loc 29 1924 5 is_stmt 0 view .LVU556
 2539 003c 38BD     		pop	{r3, r4, r5, pc}
 2540              	.LVL140:
 2541              	.L104:
 2542              		.cfi_def_cfa_offset 0
 2543              		.cfi_restore 3
 2544              		.cfi_restore 4
 2545              		.cfi_restore 5
 2546              		.cfi_restore 14
 2547              		.loc 29 1924 5 view .LVU557
 2548 003e 7047     		bx	lr
 2549              		.cfi_endproc
 2550              	.LFE6208:
 2552              		.section	.text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4l
 2553              		.align	1
 2554              		.p2align 2,,3
 2555              		.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ES
 2556              		.syntax unified
 2557              		.thumb
 2558              		.thumb_func
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 185


 2559              		.fpu fpv5-d16
 2561              	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pa
 2562              	.LVL141:
 2563              	.LFB6183:
 2564              		.file 31 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // Map implementation -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Copyright (c) 1996,1997
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** /** @file bits/stl_map.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *  This is an internal header file, included by other library headers.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 186


  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *  Do not attempt to use it directly. @headername{map}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #ifndef _STL_MAP_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #define _STL_MAP_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #include <bits/functexcept.h>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #include <bits/concept_check.h>
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus >= 201103L
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #include <initializer_list>
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #include <tuple>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** namespace std _GLIBCXX_VISIBILITY(default)
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** {
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****   template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     class multimap;
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****   /**
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @brief A standard container made up of (key,value) pairs, which can be
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  retrieved based on a key, in logarithmic time.
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @ingroup associative_containers
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @tparam _Key  Type of key objects.
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @tparam  _Tp  Type of mapped objects.
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @tparam _Compare  Comparison function object type, defaults to less<_Key>.
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @tparam _Alloc  Allocator type, defaults to
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *                  allocator<pair<const _Key, _Tp>.
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  <a href="tables.html#66">reversible container</a>, and an
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  <a href="tables.html#69">associative container</a> (using unique keys).
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  For a @c map<Key,T> the key_type is Key, the mapped_type is T, and the
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  value_type is std::pair<const Key,T>.
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  Maps support bidirectional iterators.
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  The private tree data is declared exactly the same way for map and
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  multimap; the distinction is made entirely in how the tree functions are
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  called (*_unique versus *_equal, same as the standard).
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****   */
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****   template <typename _Key, typename _Tp, typename _Compare = std::less<_Key>,
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	    typename _Alloc = std::allocator<std::pair<const _Key, _Tp> > >
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     class map
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     {
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     public:
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef _Key					key_type;
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef _Tp					mapped_type;
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef std::pair<const _Key, _Tp>		value_type;
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef _Compare					key_compare;
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef _Alloc					allocator_type;
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     private:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 187


 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       // concept requirements
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** # if __cplusplus < 201103L
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** # endif
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       __glibcxx_class_requires4(_Compare, bool, _Key, _Key,
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 				_BinaryFunctionConcept)
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       __glibcxx_class_requires2(value_type, _Alloc_value_type, _SameTypeConcept)
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus >= 201103L
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus > 201703L || defined __STRICT_ANSI__
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       static_assert(is_same<typename _Alloc::value_type, value_type>::value,
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	  "std::map must have the same value_type as its allocator");
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     public:
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       class value_compare
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : public std::binary_function<value_type, value_type, bool>
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       {
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	friend class map<_Key, _Tp, _Compare, _Alloc>;
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       protected:
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	_Compare comp;
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	value_compare(_Compare __c)
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	: comp(__c) { }
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       public:
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	bool operator()(const value_type& __x, const value_type& __y) const
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	{ return comp(__x.first, __y.first); }
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       };
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     private:
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// This turns a red-black tree into a [multi]map.
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	rebind<value_type>::other _Pair_alloc_type;
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef _Rb_tree<key_type, value_type, _Select1st<value_type>,
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 		       key_compare, _Pair_alloc_type> _Rep_type;
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// The actual tree structure.
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       _Rep_type _M_t;
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef __gnu_cxx::__alloc_traits<_Pair_alloc_type> _Alloc_traits;
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     public:
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       // many of these are specified differently in ISO, but the following are
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       // "functionally equivalent"
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Alloc_traits::pointer		 pointer;
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Alloc_traits::const_pointer	 const_pointer;
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Alloc_traits::reference		 reference;
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Alloc_traits::const_reference	 const_reference;
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::iterator		 iterator;
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::const_iterator	 const_iterator;
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::size_type		 size_type;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 188


 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::difference_type	 difference_type;
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::reverse_iterator	 reverse_iterator;
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::const_reverse_iterator const_reverse_iterator;
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus > 201402L
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       using node_type = typename _Rep_type::node_type;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       using insert_return_type = typename _Rep_type::insert_return_type;
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       // [23.3.1.1] construct/copy/destroy
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       // (get_allocator() is also listed in this section)
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  Default constructor creates no elements.
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus < 201103L
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map() : _M_t() { }
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #else
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map() = default;
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  Creates a %map with no elements.
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __comp  A comparison object.
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __a  An allocator object.
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       explicit
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(const _Compare& __comp,
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	  const allocator_type& __a = allocator_type())
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(__comp, _Pair_alloc_type(__a)) { }
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  %Map copy constructor.
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  Whether the allocator is copied depends on the allocator traits.
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus < 201103L
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(const map& __x)
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(__x._M_t) { }
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #else
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(const map&) = default;
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  %Map move constructor.
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  The newly-created %map contains the exact contents of the moved
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  instance. The moved instance is a valid, but unspecified, %map.
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(map&&) = default;
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  Builds a %map from an initializer_list.
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __l  An initializer_list.
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __comp  A comparison object.
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __a  An allocator object.
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  Create a %map consisting of copies of the elements in the
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 189


 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  initializer_list @a __l.
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  This is linear in N if the range is already sorted, and NlogN
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  otherwise (where N is @a __l.size()).
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(initializer_list<value_type> __l,
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	  const _Compare& __comp = _Compare(),
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	  const allocator_type& __a = allocator_type())
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(__comp, _Pair_alloc_type(__a))
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// Allocator-extended default constructor.
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       explicit
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(const allocator_type& __a)
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(_Pair_alloc_type(__a)) { }
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// Allocator-extended copy constructor.
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(const map& __m, const allocator_type& __a)
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(__m._M_t, _Pair_alloc_type(__a)) { }
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// Allocator-extended move constructor.
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(map&& __m, const allocator_type& __a)
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       noexcept(is_nothrow_copy_constructible<_Compare>::value
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	       && _Alloc_traits::_S_always_equal())
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(std::move(__m._M_t), _Pair_alloc_type(__a)) { }
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// Allocator-extended initialier-list constructor.
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(initializer_list<value_type> __l, const allocator_type& __a)
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(_Pair_alloc_type(__a))
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// Allocator-extended range constructor.
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       template<typename _InputIterator>
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	map(_InputIterator __first, _InputIterator __last,
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	    const allocator_type& __a)
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	: _M_t(_Pair_alloc_type(__a))
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	{ _M_t._M_insert_range_unique(__first, __last); }
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  Builds a %map from a range.
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __first  An input iterator.
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __last  An input iterator.
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  Create a %map consisting of copies of the elements from
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  [__first,__last).  This is linear in N if the range is
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  already sorted, and NlogN otherwise (where N is
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  distance(__first,__last)).
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       template<typename _InputIterator>
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	map(_InputIterator __first, _InputIterator __last)
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	: _M_t()
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	{ _M_t._M_insert_range_unique(__first, __last); }
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  Builds a %map from a range.
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __first  An input iterator.
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __last  An input iterator.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 190


 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __comp  A comparison functor.
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __a  An allocator object.
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  Create a %map consisting of copies of the elements from
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  [__first,__last).  This is linear in N if the range is
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  already sorted, and NlogN otherwise (where N is
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  distance(__first,__last)).
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       template<typename _InputIterator>
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	map(_InputIterator __first, _InputIterator __last,
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	    const _Compare& __comp,
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	    const allocator_type& __a = allocator_type())
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	: _M_t(__comp, _Pair_alloc_type(__a))
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	{ _M_t._M_insert_range_unique(__first, __last); }
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus >= 201103L
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  The dtor only erases the elements, and note that if the elements
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  themselves are pointers, the pointed-to memory is not touched in any
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  way.  Managing the pointer is the user's responsibility.
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       ~map() = default;
 2565              		.loc 31 302 7 is_stmt 1 view -0
 2566              		.cfi_startproc
 2567              		@ args = 0, pretend = 0, frame = 0
 2568              		@ frame_needed = 0, uses_anonymous_args = 0
 2569              		.loc 31 302 7 is_stmt 0 view .LVU559
 2570 0000 10B5     		push	{r4, lr}
 2571              		.cfi_def_cfa_offset 8
 2572              		.cfi_offset 4, -8
 2573              		.cfi_offset 14, -4
 2574              		.loc 31 302 7 view .LVU560
 2575 0002 0446     		mov	r4, r0
 2576              	.LVL142:
 2577              	.LBB5340:
 2578              	.LBI5340:
 990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _M_erase(_M_begin()); }
 2579              		.loc 29 990 7 is_stmt 1 view .LVU561
 2580              	.LBB5341:
 2581              	.LBB5342:
 2582              	.LBI5342:
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 2583              		.loc 29 748 7 view .LVU562
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 2584              		.loc 29 748 7 is_stmt 0 view .LVU563
 2585              	.LBE5342:
 991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 2586              		.loc 29 991 17 view .LVU564
 2587 0004 8068     		ldr	r0, [r0, #8]
 2588              	.LVL143:
 991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 2589              		.loc 29 991 17 view .LVU565
 2590 0006 FFF7FEFF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiE
 2591              	.LVL144:
 2592              	.LBB5343:
 2593              	.LBI5343:
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: public _Node_allocator
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 191


 2594              		.loc 29 677 9 is_stmt 1 view .LVU566
 2595              	.LBB5344:
 2596              	.LBI5344:
 2597              		.loc 21 162 7 view .LVU567
 2598              	.LBB5345:
 2599              	.LBI5345:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2600              		.loc 22 89 7 view .LVU568
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2601              		.loc 22 89 7 is_stmt 0 view .LVU569
 2602              	.LBE5345:
 2603              	.LBE5344:
 2604              	.LBE5343:
 2605              	.LBE5341:
 2606              	.LBE5340:
 2607              		.loc 31 302 7 view .LVU570
 2608 000a 2046     		mov	r0, r4
 2609 000c 10BD     		pop	{r4, pc}
 2610              		.loc 31 302 7 view .LVU571
 2611              		.cfi_endproc
 2612              	.LFE6183:
 2614              		.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ES
 2615              		.thumb_set _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessI
 2616 000e 00BF     		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 2617              		.align	1
 2618              		.p2align 2,,3
 2619              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 2620              		.syntax unified
 2621              		.thumb
 2622              		.thumb_func
 2623              		.fpu fpv5-d16
 2625              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 2626              	.LVL145:
 2627              	.LFB5755:
 220:../../libdaisy/src/hid/disp/display.h **** 
 221:../../libdaisy/src/hid/disp/display.h ****     void DrawLine(uint_fast8_t x1,
 222:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 223:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t x2,
 224:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y2,
 225:../../libdaisy/src/hid/disp/display.h ****                   bool         on) override
 226:../../libdaisy/src/hid/disp/display.h ****     {
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaX = abs((int_fast16_t)x2 - (int_fast16_t)x1);
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 231:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 232:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error2;
 233:../../libdaisy/src/hid/disp/display.h **** 
 234:../../libdaisy/src/hid/disp/display.h ****         // If we write "ChildType::DrawPixel(x2, y2, on);", we end up with
 235:../../libdaisy/src/hid/disp/display.h ****         // all sorts of weird compiler errors when the Child class is a template
 236:../../libdaisy/src/hid/disp/display.h ****         // class. The only way around this is to use this very verbose syntax:
 237:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::DrawPixel(x2, y2, on);
 238:../../libdaisy/src/hid/disp/display.h **** 
 239:../../libdaisy/src/hid/disp/display.h ****         while((x1 != x2) || (y1 != y2))
 240:../../libdaisy/src/hid/disp/display.h ****         {
 241:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawPixel(x1, y1, on);
 242:../../libdaisy/src/hid/disp/display.h ****             error2 = error * 2;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 192


 243:../../libdaisy/src/hid/disp/display.h ****             if(error2 > -deltaY)
 244:../../libdaisy/src/hid/disp/display.h ****             {
 245:../../libdaisy/src/hid/disp/display.h ****                 error -= deltaY;
 246:../../libdaisy/src/hid/disp/display.h ****                 x1 += signX;
 247:../../libdaisy/src/hid/disp/display.h ****             }
 248:../../libdaisy/src/hid/disp/display.h **** 
 249:../../libdaisy/src/hid/disp/display.h ****             if(error2 < deltaX)
 250:../../libdaisy/src/hid/disp/display.h ****             {
 251:../../libdaisy/src/hid/disp/display.h ****                 error += deltaX;
 252:../../libdaisy/src/hid/disp/display.h ****                 y1 += signY;
 253:../../libdaisy/src/hid/disp/display.h ****             }
 254:../../libdaisy/src/hid/disp/display.h ****         }
 255:../../libdaisy/src/hid/disp/display.h ****     }
 256:../../libdaisy/src/hid/disp/display.h **** 
 257:../../libdaisy/src/hid/disp/display.h ****     void DrawRect(uint_fast8_t x1,
 258:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 259:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t x2,
 260:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y2,
 261:../../libdaisy/src/hid/disp/display.h ****                   bool         on,
 262:../../libdaisy/src/hid/disp/display.h ****                   bool         fill = false) override
 263:../../libdaisy/src/hid/disp/display.h ****     {
 264:../../libdaisy/src/hid/disp/display.h ****         if(fill)
 265:../../libdaisy/src/hid/disp/display.h ****         {
 266:../../libdaisy/src/hid/disp/display.h ****             for(uint_fast8_t x = x1; x <= x2; x++)
 267:../../libdaisy/src/hid/disp/display.h ****             {
 268:../../libdaisy/src/hid/disp/display.h ****                 for(uint_fast8_t y = y1; y <= y2; y++)
 269:../../libdaisy/src/hid/disp/display.h ****                 {
 270:../../libdaisy/src/hid/disp/display.h ****                     ((ChildType*)(this))->ChildType::DrawPixel(x, y, on);
 271:../../libdaisy/src/hid/disp/display.h ****                 }
 272:../../libdaisy/src/hid/disp/display.h ****             }
 273:../../libdaisy/src/hid/disp/display.h ****         }
 274:../../libdaisy/src/hid/disp/display.h ****         else
 275:../../libdaisy/src/hid/disp/display.h ****         {
 276:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x1, y1, x2, y1, on);
 277:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x2, y1, x2, y2, on);
 278:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x2, y2, x1, y2, on);
 279:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x1, y2, x1, y1, on);
 280:../../libdaisy/src/hid/disp/display.h ****         }
 281:../../libdaisy/src/hid/disp/display.h ****     }
 282:../../libdaisy/src/hid/disp/display.h **** 
 283:../../libdaisy/src/hid/disp/display.h ****     void DrawArc(uint_fast8_t x,
 284:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 285:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t radius,
 286:../../libdaisy/src/hid/disp/display.h ****                  int_fast16_t start_angle,
 287:../../libdaisy/src/hid/disp/display.h ****                  int_fast16_t sweep,
 288:../../libdaisy/src/hid/disp/display.h ****                  bool         on) override
 289:../../libdaisy/src/hid/disp/display.h ****     {
 290:../../libdaisy/src/hid/disp/display.h ****         // Values to calculate the circle
 291:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t t_x, t_y, err, e2;
 292:../../libdaisy/src/hid/disp/display.h **** 
 293:../../libdaisy/src/hid/disp/display.h ****         // Temporary values to speed up comparisons
 294:../../libdaisy/src/hid/disp/display.h ****         float t_sxy, t_syx, t_sxny, t_synx;
 295:../../libdaisy/src/hid/disp/display.h ****         float t_exy, t_eyx, t_exny, t_eynx;
 296:../../libdaisy/src/hid/disp/display.h **** 
 297:../../libdaisy/src/hid/disp/display.h ****         float start_angle_rad, end_angle_rad;
 298:../../libdaisy/src/hid/disp/display.h ****         float start_x, start_y, end_x, end_y;
 299:../../libdaisy/src/hid/disp/display.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 193


 300:../../libdaisy/src/hid/disp/display.h ****         bool d1, d2, d3, d4;
 301:../../libdaisy/src/hid/disp/display.h **** 
 302:../../libdaisy/src/hid/disp/display.h ****         d1 = d2 = d3 = d4 = true;
 303:../../libdaisy/src/hid/disp/display.h **** 
 304:../../libdaisy/src/hid/disp/display.h ****         bool circle = false;
 305:../../libdaisy/src/hid/disp/display.h **** 
 306:../../libdaisy/src/hid/disp/display.h ****         if(sweep < 0)
 307:../../libdaisy/src/hid/disp/display.h ****         {
 308:../../libdaisy/src/hid/disp/display.h ****             start_angle += sweep;
 309:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 310:../../libdaisy/src/hid/disp/display.h ****         }
 311:../../libdaisy/src/hid/disp/display.h **** 
 312:../../libdaisy/src/hid/disp/display.h ****         start_angle_rad = deg2rad(start_angle);
 313:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 314:../../libdaisy/src/hid/disp/display.h **** 
 315:../../libdaisy/src/hid/disp/display.h ****         start_x = cos(start_angle_rad) * radius;
 316:../../libdaisy/src/hid/disp/display.h ****         start_y = -sin(start_angle_rad) * radius;
 317:../../libdaisy/src/hid/disp/display.h ****         end_x   = cos(end_angle_rad) * radius;
 318:../../libdaisy/src/hid/disp/display.h ****         end_y   = -sin(end_angle_rad) * radius;
 319:../../libdaisy/src/hid/disp/display.h **** 
 320:../../libdaisy/src/hid/disp/display.h ****         // Check if start and endpoint are very near
 321:../../libdaisy/src/hid/disp/display.h ****         if((end_x - start_x) * (end_x - start_x)
 322:../../libdaisy/src/hid/disp/display.h ****                + (end_y - start_y) * (end_y - start_y)
 323:../../libdaisy/src/hid/disp/display.h ****            < 2.0f)
 324:../../libdaisy/src/hid/disp/display.h ****         {
 325:../../libdaisy/src/hid/disp/display.h ****             if(sweep > 180)
 326:../../libdaisy/src/hid/disp/display.h ****                 circle = true;
 327:../../libdaisy/src/hid/disp/display.h ****             else
 328:../../libdaisy/src/hid/disp/display.h ****                 // Nothing to draw
 329:../../libdaisy/src/hid/disp/display.h ****                 return;
 330:../../libdaisy/src/hid/disp/display.h ****         }
 331:../../libdaisy/src/hid/disp/display.h **** 
 332:../../libdaisy/src/hid/disp/display.h ****         t_x = -radius;
 333:../../libdaisy/src/hid/disp/display.h ****         t_y = 0;
 334:../../libdaisy/src/hid/disp/display.h ****         err = 2 - 2 * radius;
 335:../../libdaisy/src/hid/disp/display.h **** 
 336:../../libdaisy/src/hid/disp/display.h ****         do
 337:../../libdaisy/src/hid/disp/display.h ****         {
 338:../../libdaisy/src/hid/disp/display.h ****             if(!circle)
 339:../../libdaisy/src/hid/disp/display.h ****             {
 340:../../libdaisy/src/hid/disp/display.h ****                 t_sxy  = start_x * t_y;
 341:../../libdaisy/src/hid/disp/display.h ****                 t_syx  = start_y * t_x;
 342:../../libdaisy/src/hid/disp/display.h ****                 t_sxny = start_x * -t_y;
 343:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 344:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 345:../../libdaisy/src/hid/disp/display.h ****                 t_eyx  = end_y * t_x;
 346:../../libdaisy/src/hid/disp/display.h ****                 t_exny = end_x * -t_y;
 347:../../libdaisy/src/hid/disp/display.h ****                 t_eynx = end_y * -t_x;
 348:../../libdaisy/src/hid/disp/display.h **** 
 349:../../libdaisy/src/hid/disp/display.h ****                 if(sweep > 180)
 350:../../libdaisy/src/hid/disp/display.h ****                 {
 351:../../libdaisy/src/hid/disp/display.h ****                     d1 = (t_sxy - t_synx < 0 || t_exy - t_eynx > 0);
 352:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 353:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 354:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 355:../../libdaisy/src/hid/disp/display.h ****                 }
 356:../../libdaisy/src/hid/disp/display.h ****                 else
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 194


 357:../../libdaisy/src/hid/disp/display.h ****                 {
 358:../../libdaisy/src/hid/disp/display.h ****                     d1 = (t_sxy - t_synx < 0 && t_exy - t_eynx > 0);
 359:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
 360:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 361:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 362:../../libdaisy/src/hid/disp/display.h ****                 }
 363:../../libdaisy/src/hid/disp/display.h ****             }
 364:../../libdaisy/src/hid/disp/display.h **** 
 365:../../libdaisy/src/hid/disp/display.h ****             if(d1)
 366:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 367:../../libdaisy/src/hid/disp/display.h ****                     ->ChildType::DrawPixel(x - t_x, y + t_y, on);
 368:../../libdaisy/src/hid/disp/display.h ****             if(d2)
 369:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 370:../../libdaisy/src/hid/disp/display.h ****                     ->ChildType::DrawPixel(x + t_x, y + t_y, on);
 371:../../libdaisy/src/hid/disp/display.h ****             if(d3)
 372:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 373:../../libdaisy/src/hid/disp/display.h ****                     ->ChildType::DrawPixel(x + t_x, y - t_y, on);
 374:../../libdaisy/src/hid/disp/display.h ****             if(d4)
 375:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 376:../../libdaisy/src/hid/disp/display.h ****                     ->ChildType::DrawPixel(x - t_x, y - t_y, on);
 377:../../libdaisy/src/hid/disp/display.h **** 
 378:../../libdaisy/src/hid/disp/display.h ****             e2 = err;
 379:../../libdaisy/src/hid/disp/display.h ****             if(e2 <= t_y)
 380:../../libdaisy/src/hid/disp/display.h ****             {
 381:../../libdaisy/src/hid/disp/display.h ****                 t_y++;
 382:../../libdaisy/src/hid/disp/display.h ****                 err = err + (t_y * 2 + 1);
 383:../../libdaisy/src/hid/disp/display.h ****                 if(-t_x == t_y && e2 <= t_x)
 384:../../libdaisy/src/hid/disp/display.h ****                 {
 385:../../libdaisy/src/hid/disp/display.h ****                     e2 = 0;
 386:../../libdaisy/src/hid/disp/display.h ****                 }
 387:../../libdaisy/src/hid/disp/display.h ****             }
 388:../../libdaisy/src/hid/disp/display.h ****             if(e2 > t_x)
 389:../../libdaisy/src/hid/disp/display.h ****             {
 390:../../libdaisy/src/hid/disp/display.h ****                 t_x++;
 391:../../libdaisy/src/hid/disp/display.h ****                 err = err + (t_x * 2 + 1);
 392:../../libdaisy/src/hid/disp/display.h ****             }
 393:../../libdaisy/src/hid/disp/display.h ****         } while(t_x <= 0);
 394:../../libdaisy/src/hid/disp/display.h ****     }
 395:../../libdaisy/src/hid/disp/display.h **** 
 396:../../libdaisy/src/hid/disp/display.h ****     char WriteChar(char ch, FontDef font, bool on) override
 2628              		.loc 5 396 10 is_stmt 1 view -0
 2629              		.cfi_startproc
 2630              		@ args = 4, pretend = 0, frame = 16
 2631              		@ frame_needed = 0, uses_anonymous_args = 0
 2632              		.loc 5 396 10 is_stmt 0 view .LVU573
 2633 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2634              		.cfi_def_cfa_offset 36
 2635              		.cfi_offset 4, -36
 2636              		.cfi_offset 5, -32
 2637              		.cfi_offset 6, -28
 2638              		.cfi_offset 7, -24
 2639              		.cfi_offset 8, -20
 2640              		.cfi_offset 9, -16
 2641              		.cfi_offset 10, -12
 2642              		.cfi_offset 11, -8
 2643              		.cfi_offset 14, -4
 2644 0004 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 195


 2645              		.cfi_def_cfa_offset 56
 2646              	.LVL146:
 397:../../libdaisy/src/hid/disp/display.h ****     {
 398:../../libdaisy/src/hid/disp/display.h ****         uint32_t i, b, j;
 399:../../libdaisy/src/hid/disp/display.h **** 
 400:../../libdaisy/src/hid/disp/display.h ****         // Check if character is valid
 401:../../libdaisy/src/hid/disp/display.h ****         if(ch < 32 || ch > 126)
 2647              		.loc 5 401 20 view .LVU574
 2648 0006 A1F12005 		sub	r5, r1, #32
 396:../../libdaisy/src/hid/disp/display.h ****     {
 2649              		.loc 5 396 10 view .LVU575
 2650 000a 04AC     		add	r4, sp, #16
 2651 000c 9DF83870 		ldrb	r7, [sp, #56]	@ zero_extendqisi2
 2652 0010 0091     		str	r1, [sp]
 2653 0012 04E90C00 		stmdb	r4, {r2, r3}
 2654              	.LVL147:
 2655              		.loc 5 401 9 view .LVU576
 2656 0016 EBB2     		uxtb	r3, r5
 2657 0018 5E2B     		cmp	r3, #94
 2658 001a 00F29580 		bhi	.L113
 402:../../libdaisy/src/hid/disp/display.h ****             return 0;
 403:../../libdaisy/src/hid/disp/display.h **** 
 404:../../libdaisy/src/hid/disp/display.h ****         // Check remaining space on current line
 405:../../libdaisy/src/hid/disp/display.h ****         if(Width() < (currentX_ + font.FontWidth)
 2659              		.loc 5 405 17 view .LVU577
 2660 001e 0368     		ldr	r3, [r0]
 2661 0020 8046     		mov	r8, r0
 2662 0022 5D4A     		ldr	r2, .L148
 2663 0024 DB68     		ldr	r3, [r3, #12]
 2664 0026 9DF80840 		ldrb	r4, [sp, #8]	@ zero_extendqisi2
 2665 002a 9342     		cmp	r3, r2
 2666 002c 9DF80960 		ldrb	r6, [sp, #9]	@ zero_extendqisi2
 2667 0030 40F09480 		bne	.L140
 2668 0034 8020     		movs	r0, #128
 2669              	.LVL148:
 2670              	.L112:
 2671              		.loc 5 405 23 view .LVU578
 2672 0036 B8F80430 		ldrh	r3, [r8, #4]
 2673              		.loc 5 405 33 view .LVU579
 2674 003a 2344     		add	r3, r3, r4
 406:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 2675              		.loc 5 406 12 view .LVU580
 2676 003c 8342     		cmp	r3, r0
 2677 003e 00F38380 		bgt	.L113
 2678              		.loc 5 406 21 discriminator 2 view .LVU581
 2679 0042 D8F80030 		ldr	r3, [r8]
 2680 0046 554A     		ldr	r2, .L148+4
 2681 0048 9B68     		ldr	r3, [r3, #8]
 2682 004a 9342     		cmp	r3, r2
 2683 004c 40F08880 		bne	.L141
 2684              		.loc 5 406 21 view .LVU582
 2685 0050 4020     		movs	r0, #64
 2686              	.L114:
 2687              		.loc 5 406 27 discriminator 2 view .LVU583
 2688 0052 B8F80620 		ldrh	r2, [r8, #6]
 2689              		.loc 5 406 37 discriminator 2 view .LVU584
 2690 0056 9319     		adds	r3, r2, r6
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 196


 2691              		.loc 5 406 27 discriminator 2 view .LVU585
 2692 0058 0192     		str	r2, [sp, #4]
 2693              		.loc 5 406 12 discriminator 2 view .LVU586
 2694 005a 8342     		cmp	r3, r0
 2695 005c 74DC     		bgt	.L113
 2696              	.LVL149:
 407:../../libdaisy/src/hid/disp/display.h ****         {
 408:../../libdaisy/src/hid/disp/display.h ****             // Not enough space on current line
 409:../../libdaisy/src/hid/disp/display.h ****             return 0;
 410:../../libdaisy/src/hid/disp/display.h ****         }
 411:../../libdaisy/src/hid/disp/display.h **** 
 412:../../libdaisy/src/hid/disp/display.h ****         // Use the font to write
 413:../../libdaisy/src/hid/disp/display.h ****         for(i = 0; i < font.FontHeight; i++)
 2697              		.loc 5 413 22 is_stmt 1 view .LVU587
 2698 005e 002E     		cmp	r6, #0
 2699 0060 00F08980 		beq	.L115
 414:../../libdaisy/src/hid/disp/display.h ****         {
 415:../../libdaisy/src/hid/disp/display.h ****             b = font.data[(ch - 32) * font.FontHeight + i];
 2700              		.loc 5 415 37 is_stmt 0 view .LVU588
 2701 0064 06FB05F5 		mul	r5, r6, r5
 2702 0068 6FF00040 		mvn	r0, #-2147483648
 2703              		.loc 5 415 22 view .LVU589
 2704 006c 039B     		ldr	r3, [sp, #12]
 2705 006e 9646     		mov	lr, r2
 2706 0070 2844     		add	r0, r0, r5
 2707 0072 2E44     		add	r6, r6, r5
 416:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 417:../../libdaisy/src/hid/disp/display.h ****             {
 418:../../libdaisy/src/hid/disp/display.h ****                 if((b << j) & 0x8000)
 419:../../libdaisy/src/hid/disp/display.h ****                 {
 420:../../libdaisy/src/hid/disp/display.h ****                     ((ChildType*)(this))
 421:../../libdaisy/src/hid/disp/display.h ****                         ->ChildType::DrawPixel(
 422:../../libdaisy/src/hid/disp/display.h ****                             currentX_ + j, (currentY_ + i), on);
 423:../../libdaisy/src/hid/disp/display.h ****                 }
 424:../../libdaisy/src/hid/disp/display.h ****                 else
 425:../../libdaisy/src/hid/disp/display.h ****                 {
 426:../../libdaisy/src/hid/disp/display.h ****                     ((ChildType*)(this))
 427:../../libdaisy/src/hid/disp/display.h ****                         ->ChildType::DrawPixel(
 428:../../libdaisy/src/hid/disp/display.h ****                             currentX_ + j, (currentY_ + i), !on);
 429:../../libdaisy/src/hid/disp/display.h ****                 }
 430:../../libdaisy/src/hid/disp/display.h ****             }
 431:../../libdaisy/src/hid/disp/display.h ****         }
 432:../../libdaisy/src/hid/disp/display.h **** 
 433:../../libdaisy/src/hid/disp/display.h ****         // The current space is now taken
 434:../../libdaisy/src/hid/disp/display.h ****         SetCursor(currentX_ + font.FontWidth, currentY_);
 2708              		.loc 5 434 19 view .LVU590
 2709 0074 B8F804A0 		ldrh	r10, [r8, #4]
 2710 0078 03EB4000 		add	r0, r3, r0, lsl #1
 2711 007c 023B     		subs	r3, r3, #2
 2712 007e 03EB460B 		add	fp, r3, r6, lsl #1
 2713              	.LVL150:
 2714              	.L118:
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 2715              		.loc 5 415 15 view .LVU591
 2716 0082 30F8026F 		ldrh	r6, [r0, #2]!
 2717              	.LVL151:
 416:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 197


 2718              		.loc 5 416 26 is_stmt 1 view .LVU592
 2719 0086 BCB3     		cbz	r4, .L123
 2720              	.LBB5376:
 2721              	.LBB5377:
 2722              	.LBB5378:
 2723              	.LBB5379:
 2724              	.LBB5380:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 2725              		.loc 15 246 55 is_stmt 0 view .LVU593
 2726 0088 0EF00703 		and	r3, lr, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 2727              		.loc 15 246 49 view .LVU594
 2728 008c 4FF0010C 		mov	ip, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 2729              		.loc 15 246 28 view .LVU595
 2730 0090 4FEADE02 		lsr	r2, lr, #3
 2731 0094 5146     		mov	r1, r10
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 2732              		.loc 15 246 49 view .LVU596
 2733 0096 0CFA03FC 		lsl	ip, ip, r3
 2734 009a 0AF11403 		add	r3, r10, #20
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 2735              		.loc 15 246 42 view .LVU597
 2736 009e 4FFA8CFC 		sxtb	ip, ip
 2737 00a2 03EBC212 		add	r2, r3, r2, lsl #7
 2738              	.LBE5380:
 2739              	.LBE5379:
 2740              	.LBE5378:
 2741              	.LBE5377:
 2742              	.LBE5376:
 416:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 2743              		.loc 5 416 19 view .LVU598
 2744 00a6 0023     		movs	r3, #0
 2745              	.LBB5398:
 2746              	.LBB5393:
 2747              	.LBB5388:
 2748              	.LBB5384:
 2749              	.LBB5381:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 2750              		.loc 15 246 42 view .LVU599
 2751 00a8 6FEA0C09 		mvn	r9, ip
 2752 00ac 4244     		add	r2, r2, r8
 2753 00ae 0EE0     		b	.L124
 2754              	.LVL152:
 2755              	.L142:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 2756              		.loc 15 246 42 view .LVU600
 2757              	.LBE5381:
 2758              	.LBE5384:
 2759              	.LBE5388:
 2760              	.LBE5393:
 2761              	.LBE5398:
 2762              	.LBB5399:
 2763              	.LBI5399:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 2764              		.loc 4 41 10 is_stmt 1 view .LVU601
 2765              	.LBB5400:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 198


 2766              	.LBI5400:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 2767              		.loc 15 239 10 view .LVU602
 2768              	.LBB5401:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 2769              		.loc 15 241 9 is_stmt 0 view .LVU603
 2770 00b0 7F29     		cmp	r1, #127
 2771 00b2 07D8     		bhi	.L120
 2772 00b4 BEF13F0F 		cmp	lr, #63
 2773 00b8 04D8     		bhi	.L120
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 2774              		.loc 15 244 42 view .LVU604
 2775 00ba 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 2776              		.loc 15 243 9 view .LVU605
 2777 00bc 9FB1     		cbz	r7, .L122
 2778              	.L139:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 2779              		.loc 15 243 9 view .LVU606
 2780              	.LBE5401:
 2781              	.LBE5400:
 2782              	.LBE5399:
 2783              	.LBB5402:
 2784              	.LBB5394:
 2785              	.LBB5389:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 2786              		.loc 15 244 42 view .LVU607
 2787 00be 4CEA0505 		orr	r5, ip, r5
 2788 00c2 1570     		strb	r5, [r2]
 2789              	.L120:
 2790              	.LBE5389:
 2791              	.LBE5394:
 2792              	.LBE5402:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 2793              		.loc 5 416 13 is_stmt 1 discriminator 2 view .LVU608
 2794 00c4 0133     		adds	r3, r3, #1
 2795              	.LVL153:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 2796              		.loc 5 416 26 discriminator 2 view .LVU609
 2797 00c6 0132     		adds	r2, r2, #1
 2798 00c8 0131     		adds	r1, r1, #1
 2799 00ca 9C42     		cmp	r4, r3
 2800 00cc 14D0     		beq	.L123
 2801              	.LVL154:
 2802              	.L124:
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 2803              		.loc 5 418 23 is_stmt 0 view .LVU610
 2804 00ce 06FA03F5 		lsl	r5, r6, r3
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 2805              		.loc 5 418 17 view .LVU611
 2806 00d2 2D04     		lsls	r5, r5, #16
 2807 00d4 ECD4     		bmi	.L142
 2808              	.LVL155:
 2809              	.LBB5403:
 2810              	.LBI5376:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 2811              		.loc 4 41 10 is_stmt 1 view .LVU612
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 199


 2812              	.LBB5395:
 2813              	.LBI5377:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 2814              		.loc 15 239 10 view .LVU613
 2815              	.LBB5390:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 2816              		.loc 15 241 9 is_stmt 0 view .LVU614
 2817 00d6 7F29     		cmp	r1, #127
 2818 00d8 F4D8     		bhi	.L120
 2819 00da BEF13F0F 		cmp	lr, #63
 2820 00de F1D8     		bhi	.L120
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 2821              		.loc 15 244 42 view .LVU615
 2822 00e0 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 2823              		.loc 15 243 9 view .LVU616
 2824 00e2 002F     		cmp	r7, #0
 2825 00e4 EBD0     		beq	.L139
 2826              	.L122:
 2827              	.LVL156:
 2828              	.LBB5385:
 2829              	.LBI5379:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 2830              		.loc 15 239 10 is_stmt 1 view .LVU617
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 2831              		.loc 15 239 10 is_stmt 0 view .LVU618
 2832              	.LBE5385:
 2833              	.LBE5390:
 2834              	.LBE5395:
 2835              	.LBE5403:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 2836              		.loc 5 416 13 view .LVU619
 2837 00e6 0133     		adds	r3, r3, #1
 2838              	.LVL157:
 2839              	.LBB5404:
 2840              	.LBB5396:
 2841              	.LBB5391:
 2842              	.LBB5386:
 2843              	.LBB5382:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 2844              		.loc 15 246 42 view .LVU620
 2845 00e8 09EA0505 		and	r5, r9, r5
 2846              	.LBE5382:
 2847              	.LBE5386:
 2848              	.LBE5391:
 2849              	.LBE5396:
 2850              	.LBE5404:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 2851              		.loc 5 416 26 view .LVU621
 2852 00ec 0132     		adds	r2, r2, #1
 2853 00ee 0131     		adds	r1, r1, #1
 2854 00f0 9C42     		cmp	r4, r3
 2855              	.LBB5405:
 2856              	.LBB5397:
 2857              	.LBB5392:
 2858              	.LBB5387:
 2859              	.LBB5383:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 200


 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 2860              		.loc 15 246 42 view .LVU622
 2861 00f2 02F8015C 		strb	r5, [r2, #-1]
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 2862              		.loc 15 246 42 view .LVU623
 2863              	.LBE5383:
 2864              	.LBE5387:
 2865              	.LBE5392:
 2866              	.LBE5397:
 2867              	.LBE5405:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 2868              		.loc 5 416 13 is_stmt 1 view .LVU624
 2869              	.LVL158:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 2870              		.loc 5 416 26 view .LVU625
 2871 00f6 EAD1     		bne	.L124
 2872              	.LVL159:
 2873              	.L123:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 2874              		.loc 5 413 9 view .LVU626
 413:../../libdaisy/src/hid/disp/display.h ****         {
 2875              		.loc 5 413 22 view .LVU627
 2876 00f8 5845     		cmp	r0, fp
 2877 00fa 0EF1010E 		add	lr, lr, #1
 2878 00fe C0D1     		bne	.L118
 2879              	.LVL160:
 2880              	.L117:
 2881              	.LBB5406:
 2882              	.LBB5407:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 2883              		.loc 5 173 33 is_stmt 0 view .LVU628
 2884 0100 D8F80030 		ldr	r3, [r8]
 2885              	.LBE5407:
 2886              	.LBE5406:
 2887              		.loc 5 434 18 view .LVU629
 2888 0104 5444     		add	r4, r4, r10
 2889 0106 2449     		ldr	r1, .L148
 2890              	.LBB5413:
 2891              	.LBB5408:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 2892              		.loc 5 173 33 view .LVU630
 2893 0108 DA68     		ldr	r2, [r3, #12]
 2894              	.LBE5408:
 2895              	.LBE5413:
 2896              		.loc 5 434 18 view .LVU631
 2897 010a A4B2     		uxth	r4, r4
 2898              	.LVL161:
 2899              	.LBB5414:
 2900              	.LBI5406:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 2901              		.loc 5 171 10 is_stmt 1 view .LVU632
 2902              	.LBB5409:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 2903              		.loc 5 173 9 view .LVU633
 2904 010c 8A42     		cmp	r2, r1
 2905 010e 2DD1     		bne	.L143
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 201


 2906              		.loc 5 173 33 is_stmt 0 view .LVU634
 2907 0110 8020     		movs	r0, #128
 2908              	.L125:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 2909              		.loc 5 173 19 view .LVU635
 2910 0112 8442     		cmp	r4, r0
 2911 0114 1CD2     		bcs	.L144
 2912              	.LVL162:
 2913              	.L126:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 2914              		.loc 5 174 34 view .LVU636
 2915 0116 9B68     		ldr	r3, [r3, #8]
 2916 0118 204A     		ldr	r2, .L148+4
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 2917              		.loc 5 173 19 view .LVU637
 2918 011a A8F80440 		strh	r4, [r8, #4]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 2919              		.loc 5 174 9 is_stmt 1 view .LVU638
 2920 011e 9342     		cmp	r3, r2
 2921 0120 21D1     		bne	.L145
 174:../../libdaisy/src/hid/disp/display.h ****     }
 2922              		.loc 5 174 34 is_stmt 0 view .LVU639
 2923 0122 4020     		movs	r0, #64
 2924              	.L128:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 2925              		.loc 5 174 19 view .LVU640
 2926 0124 019B     		ldr	r3, [sp, #4]
 2927 0126 8342     		cmp	r3, r0
 2928 0128 07D3     		bcc	.L129
 174:../../libdaisy/src/hid/disp/display.h ****     }
 2929              		.loc 5 174 46 view .LVU641
 2930 012a D8F80030 		ldr	r3, [r8]
 2931 012e 1B4A     		ldr	r2, .L148+4
 2932 0130 9B68     		ldr	r3, [r3, #8]
 2933 0132 9342     		cmp	r3, r2
 2934 0134 29D1     		bne	.L146
 2935 0136 3F23     		movs	r3, #63
 2936 0138 0193     		str	r3, [sp, #4]
 2937              	.LVL163:
 2938              	.L129:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 2939              		.loc 5 174 19 view .LVU642
 2940 013a DDE90003 		ldrd	r0, r3, [sp]
 2941 013e A8F80630 		strh	r3, [r8, #6]	@ movhi
 2942              	.LVL164:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 2943              		.loc 5 174 19 view .LVU643
 2944              	.LBE5409:
 2945              	.LBE5414:
 435:../../libdaisy/src/hid/disp/display.h **** 
 436:../../libdaisy/src/hid/disp/display.h ****         // Return written char for validation
 437:../../libdaisy/src/hid/disp/display.h ****         return ch;
 438:../../libdaisy/src/hid/disp/display.h ****     }
 2946              		.loc 5 438 5 view .LVU644
 2947 0142 05B0     		add	sp, sp, #20
 2948              		.cfi_remember_state
 2949              		.cfi_def_cfa_offset 36
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 202


 2950              		@ sp needed
 2951 0144 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2952              	.LVL165:
 2953              	.L113:
 2954              		.cfi_restore_state
 402:../../libdaisy/src/hid/disp/display.h **** 
 2955              		.loc 5 402 20 view .LVU645
 2956 0148 0020     		movs	r0, #0
 2957              		.loc 5 438 5 view .LVU646
 2958 014a 05B0     		add	sp, sp, #20
 2959              		.cfi_remember_state
 2960              		.cfi_def_cfa_offset 36
 2961              		@ sp needed
 2962 014c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2963              	.LVL166:
 2964              	.L144:
 2965              		.cfi_restore_state
 2966              	.LBB5415:
 2967              	.LBB5410:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 2968              		.loc 5 173 44 view .LVU647
 2969 0150 DA68     		ldr	r2, [r3, #12]
 2970 0152 1149     		ldr	r1, .L148
 2971 0154 8A42     		cmp	r2, r1
 2972 0156 11D1     		bne	.L147
 2973 0158 7F24     		movs	r4, #127
 2974              	.LVL167:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 2975              		.loc 5 173 44 view .LVU648
 2976 015a DCE7     		b	.L126
 2977              	.LVL168:
 2978              	.L140:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 2979              		.loc 5 173 44 view .LVU649
 2980              	.LBE5410:
 2981              	.LBE5415:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 2982              		.loc 5 405 17 view .LVU650
 2983 015c 9847     		blx	r3
 2984              	.LVL169:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 2985              		.loc 5 405 17 view .LVU651
 2986 015e 6AE7     		b	.L112
 2987              	.L141:
 406:../../libdaisy/src/hid/disp/display.h ****         {
 2988              		.loc 5 406 21 discriminator 2 view .LVU652
 2989 0160 4046     		mov	r0, r8
 2990 0162 9847     		blx	r3
 2991              	.LVL170:
 2992 0164 75E7     		b	.L114
 2993              	.LVL171:
 2994              	.L145:
 2995              	.LBB5416:
 2996              	.LBB5411:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 2997              		.loc 5 174 33 view .LVU653
 2998 0166 4046     		mov	r0, r8
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 203


 2999 0168 9847     		blx	r3
 3000              	.LVL172:
 3001 016a DBE7     		b	.L128
 3002              	.LVL173:
 3003              	.L143:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3004              		.loc 5 173 32 view .LVU654
 3005 016c 4046     		mov	r0, r8
 3006 016e 9047     		blx	r2
 3007              	.LVL174:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3008              		.loc 5 173 44 view .LVU655
 3009 0170 D8F80030 		ldr	r3, [r8]
 3010 0174 CDE7     		b	.L125
 3011              	.LVL175:
 3012              	.L115:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3013              		.loc 5 173 44 view .LVU656
 3014              	.LBE5411:
 3015              	.LBE5416:
 434:../../libdaisy/src/hid/disp/display.h **** 
 3016              		.loc 5 434 19 view .LVU657
 3017 0176 B8F804A0 		ldrh	r10, [r8, #4]
 3018 017a C1E7     		b	.L117
 3019              	.LVL176:
 3020              	.L147:
 3021              	.LBB5417:
 3022              	.LBB5412:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3023              		.loc 5 173 43 view .LVU658
 3024 017c 4046     		mov	r0, r8
 3025 017e 9047     		blx	r2
 3026              	.LVL177:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3027              		.loc 5 173 19 view .LVU659
 3028 0180 0138     		subs	r0, r0, #1
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3029              		.loc 5 174 34 view .LVU660
 3030 0182 D8F80030 		ldr	r3, [r8]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3031              		.loc 5 173 19 view .LVU661
 3032 0186 84B2     		uxth	r4, r0
 3033              	.LVL178:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3034              		.loc 5 173 19 view .LVU662
 3035 0188 C5E7     		b	.L126
 3036              	.L146:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3037              		.loc 5 174 45 view .LVU663
 3038 018a 4046     		mov	r0, r8
 3039 018c 9847     		blx	r3
 3040              	.LVL179:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3041              		.loc 5 174 19 view .LVU664
 3042 018e 0138     		subs	r0, r0, #1
 3043 0190 83B2     		uxth	r3, r0
 3044 0192 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 204


 3045              	.LVL180:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3046              		.loc 5 174 19 view .LVU665
 3047 0194 D1E7     		b	.L129
 3048              	.L149:
 3049 0196 00BF     		.align	2
 3050              	.L148:
 3051 0198 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 3052 019c 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 3053              	.LBE5412:
 3054              	.LBE5417:
 3055              		.cfi_endproc
 3056              	.LFE5755:
 3058              		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 3059              		.align	1
 3060              		.p2align 2,,3
 3061              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 3062              		.syntax unified
 3063              		.thumb
 3064              		.thumb_func
 3065              		.fpu fpv5-d16
 3067              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 3068              	.LVL181:
 3069              	.LFB5542:
 439:../../libdaisy/src/hid/disp/display.h **** 
 440:../../libdaisy/src/hid/disp/display.h ****     char WriteString(const char* str, FontDef font, bool on) override
 3070              		.loc 5 440 10 is_stmt 1 view -0
 3071              		.cfi_startproc
 3072              		@ args = 4, pretend = 0, frame = 32
 3073              		@ frame_needed = 0, uses_anonymous_args = 0
 3074              		.loc 5 440 10 is_stmt 0 view .LVU667
 3075 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3076              		.cfi_def_cfa_offset 36
 3077              		.cfi_offset 4, -36
 3078              		.cfi_offset 5, -32
 3079              		.cfi_offset 6, -28
 3080              		.cfi_offset 7, -24
 3081              		.cfi_offset 8, -20
 3082              		.cfi_offset 9, -16
 3083              		.cfi_offset 10, -12
 3084              		.cfi_offset 11, -8
 3085              		.cfi_offset 14, -4
 3086 0004 89B0     		sub	sp, sp, #36
 3087              		.cfi_def_cfa_offset 72
 3088              		.loc 5 440 10 view .LVU668
 3089 0006 08AC     		add	r4, sp, #32
 3090 0008 9DF84870 		ldrb	r7, [sp, #72]	@ zero_extendqisi2
 3091 000c 0191     		str	r1, [sp, #4]
 3092 000e 04E90C00 		stmdb	r4, {r2, r3}
 441:../../libdaisy/src/hid/disp/display.h ****     {
 442:../../libdaisy/src/hid/disp/display.h ****         // Write until null-byte
 443:../../libdaisy/src/hid/disp/display.h ****         while(*str)
 3093              		.loc 5 443 9 is_stmt 1 view .LVU669
 3094 0012 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 3095 0014 002B     		cmp	r3, #0
 3096 0016 00F0AB80 		beq	.L174
 3097 001a 1A46     		mov	r2, r3
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 205


 3098 001c 9DF81880 		ldrb	r8, [sp, #24]	@ zero_extendqisi2
 3099 0020 9DF81930 		ldrb	r3, [sp, #25]	@ zero_extendqisi2
 3100 0024 0646     		mov	r6, r0
 3101 0026 4546     		mov	r5, r8
 3102 0028 9046     		mov	r8, r2
 3103 002a 0393     		str	r3, [sp, #12]
 3104 002c 079B     		ldr	r3, [sp, #28]
 3105 002e 0593     		str	r3, [sp, #20]
 3106              	.LVL182:
 3107              	.L175:
 3108              	.LBB5446:
 3109              	.LBI5446:
 396:../../libdaisy/src/hid/disp/display.h ****     {
 3110              		.loc 5 396 10 view .LVU670
 3111              	.LBB5447:
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 3112              		.loc 5 401 20 is_stmt 0 view .LVU671
 3113 0030 A8F12004 		sub	r4, r8, #32
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 3114              		.loc 5 401 9 view .LVU672
 3115 0034 E3B2     		uxtb	r3, r4
 3116 0036 5E2B     		cmp	r3, #94
 3117 0038 00F29E80 		bhi	.L156
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 3118              		.loc 5 405 17 view .LVU673
 3119 003c 3368     		ldr	r3, [r6]
 3120 003e 5E4A     		ldr	r2, .L196
 3121 0040 DB68     		ldr	r3, [r3, #12]
 3122 0042 9342     		cmp	r3, r2
 3123 0044 40F09B80 		bne	.L189
 3124 0048 8020     		movs	r0, #128
 3125              	.L155:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 3126              		.loc 5 405 23 view .LVU674
 3127 004a B388     		ldrh	r3, [r6, #4]
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 3128              		.loc 5 405 33 view .LVU675
 3129 004c 2B44     		add	r3, r3, r5
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3130              		.loc 5 406 12 view .LVU676
 3131 004e 8342     		cmp	r3, r0
 3132 0050 00F39280 		bgt	.L156
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3133              		.loc 5 406 21 view .LVU677
 3134 0054 3368     		ldr	r3, [r6]
 3135 0056 594A     		ldr	r2, .L196+4
 3136 0058 9B68     		ldr	r3, [r3, #8]
 3137 005a 9342     		cmp	r3, r2
 3138 005c 40F09280 		bne	.L190
 3139 0060 4020     		movs	r0, #64
 3140              	.L157:
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3141              		.loc 5 406 27 view .LVU678
 3142 0062 F188     		ldrh	r1, [r6, #6]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3143              		.loc 5 406 37 view .LVU679
 3144 0064 039A     		ldr	r2, [sp, #12]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 206


 406:../../libdaisy/src/hid/disp/display.h ****         {
 3145              		.loc 5 406 27 view .LVU680
 3146 0066 0291     		str	r1, [sp, #8]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3147              		.loc 5 406 37 view .LVU681
 3148 0068 8B18     		adds	r3, r1, r2
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3149              		.loc 5 406 12 view .LVU682
 3150 006a 8342     		cmp	r3, r0
 3151 006c 00F38480 		bgt	.L156
 3152              	.LVL183:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 3153              		.loc 5 413 22 is_stmt 1 view .LVU683
 3154 0070 002A     		cmp	r2, #0
 3155 0072 00F09180 		beq	.L158
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 3156              		.loc 5 415 37 is_stmt 0 view .LVU684
 3157 0076 02FB04F4 		mul	r4, r2, r4
 3158 007a 6FF00049 		mvn	r9, #-2147483648
 3159 007e 059B     		ldr	r3, [sp, #20]
 3160 0080 A144     		add	r9, r9, r4
 3161 0082 1444     		add	r4, r4, r2
 434:../../libdaisy/src/hid/disp/display.h **** 
 3162              		.loc 5 434 19 view .LVU685
 3163 0084 B6F804B0 		ldrh	fp, [r6, #4]
 3164 0088 03EB4909 		add	r9, r3, r9, lsl #1
 3165 008c 023B     		subs	r3, r3, #2
 3166 008e CDF81080 		str	r8, [sp, #16]
 3167 0092 03EB4403 		add	r3, r3, r4, lsl #1
 3168 0096 0C46     		mov	r4, r1
 3169 0098 9A46     		mov	r10, r3
 3170              	.LVL184:
 3171              	.L161:
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 3172              		.loc 5 415 15 view .LVU686
 3173 009a 39F802CF 		ldrh	ip, [r9, #2]!
 3174              	.LVL185:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3175              		.loc 5 416 26 is_stmt 1 view .LVU687
 3176 009e A5B3     		cbz	r5, .L166
 3177              	.LBB5448:
 3178              	.LBB5449:
 3179              	.LBB5450:
 3180              	.LBB5451:
 3181              	.LBB5452:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3182              		.loc 15 246 55 is_stmt 0 view .LVU688
 3183 00a0 04F00703 		and	r3, r4, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3184              		.loc 15 246 49 view .LVU689
 3185 00a4 4FF0010E 		mov	lr, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3186              		.loc 15 246 28 view .LVU690
 3187 00a8 E208     		lsrs	r2, r4, #3
 3188 00aa 5946     		mov	r1, fp
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3189              		.loc 15 246 49 view .LVU691
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 207


 3190 00ac 0EFA03FE 		lsl	lr, lr, r3
 3191 00b0 0BF11403 		add	r3, fp, #20
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3192              		.loc 15 246 42 view .LVU692
 3193 00b4 4FFA8EFE 		sxtb	lr, lr
 3194 00b8 03EBC212 		add	r2, r3, r2, lsl #7
 3195              	.LBE5452:
 3196              	.LBE5451:
 3197              	.LBE5450:
 3198              	.LBE5449:
 3199              	.LBE5448:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3200              		.loc 5 416 19 view .LVU693
 3201 00bc 0023     		movs	r3, #0
 3202              	.LBB5470:
 3203              	.LBB5465:
 3204              	.LBB5460:
 3205              	.LBB5456:
 3206              	.LBB5453:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3207              		.loc 15 246 42 view .LVU694
 3208 00be 6FEA0E08 		mvn	r8, lr
 3209 00c2 3244     		add	r2, r2, r6
 3210 00c4 0DE0     		b	.L167
 3211              	.LVL186:
 3212              	.L191:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3213              		.loc 15 246 42 view .LVU695
 3214              	.LBE5453:
 3215              	.LBE5456:
 3216              	.LBE5460:
 3217              	.LBE5465:
 3218              	.LBE5470:
 3219              	.LBB5471:
 3220              	.LBI5471:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 3221              		.loc 4 41 10 is_stmt 1 view .LVU696
 3222              	.LBB5472:
 3223              	.LBI5472:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3224              		.loc 15 239 10 view .LVU697
 3225              	.LBB5473:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3226              		.loc 15 241 9 is_stmt 0 view .LVU698
 3227 00c6 7F29     		cmp	r1, #127
 3228 00c8 06D8     		bhi	.L163
 3229 00ca 3F2C     		cmp	r4, #63
 3230 00cc 04D8     		bhi	.L163
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3231              		.loc 15 244 42 view .LVU699
 3232 00ce 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3233              		.loc 15 243 9 view .LVU700
 3234 00d0 97B1     		cbz	r7, .L165
 3235              	.L188:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3236              		.loc 15 243 9 view .LVU701
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 208


 3237              	.LBE5473:
 3238              	.LBE5472:
 3239              	.LBE5471:
 3240              	.LBB5474:
 3241              	.LBB5466:
 3242              	.LBB5461:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3243              		.loc 15 244 42 view .LVU702
 3244 00d2 4EEA0000 		orr	r0, lr, r0
 3245 00d6 1070     		strb	r0, [r2]
 3246              	.L163:
 3247              	.LBE5461:
 3248              	.LBE5466:
 3249              	.LBE5474:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3250              		.loc 5 416 13 is_stmt 1 view .LVU703
 3251 00d8 0133     		adds	r3, r3, #1
 3252              	.LVL187:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3253              		.loc 5 416 26 view .LVU704
 3254 00da 0132     		adds	r2, r2, #1
 3255 00dc 0131     		adds	r1, r1, #1
 3256 00de AB42     		cmp	r3, r5
 3257 00e0 13D0     		beq	.L166
 3258              	.LVL188:
 3259              	.L167:
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 3260              		.loc 5 418 23 is_stmt 0 view .LVU705
 3261 00e2 0CFA03F0 		lsl	r0, ip, r3
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 3262              		.loc 5 418 17 view .LVU706
 3263 00e6 0004     		lsls	r0, r0, #16
 3264 00e8 EDD4     		bmi	.L191
 3265              	.LVL189:
 3266              	.LBB5475:
 3267              	.LBI5448:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 3268              		.loc 4 41 10 is_stmt 1 view .LVU707
 3269              	.LBB5467:
 3270              	.LBI5449:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3271              		.loc 15 239 10 view .LVU708
 3272              	.LBB5462:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3273              		.loc 15 241 9 is_stmt 0 view .LVU709
 3274 00ea 7F29     		cmp	r1, #127
 3275 00ec F4D8     		bhi	.L163
 3276 00ee 3F2C     		cmp	r4, #63
 3277 00f0 F2D8     		bhi	.L163
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3278              		.loc 15 244 42 view .LVU710
 3279 00f2 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3280              		.loc 15 243 9 view .LVU711
 3281 00f4 002F     		cmp	r7, #0
 3282 00f6 ECD0     		beq	.L188
 3283              	.L165:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 209


 3284              	.LVL190:
 3285              	.LBB5457:
 3286              	.LBI5451:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3287              		.loc 15 239 10 is_stmt 1 view .LVU712
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3288              		.loc 15 239 10 is_stmt 0 view .LVU713
 3289              	.LBE5457:
 3290              	.LBE5462:
 3291              	.LBE5467:
 3292              	.LBE5475:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3293              		.loc 5 416 13 view .LVU714
 3294 00f8 0133     		adds	r3, r3, #1
 3295              	.LVL191:
 3296              	.LBB5476:
 3297              	.LBB5468:
 3298              	.LBB5463:
 3299              	.LBB5458:
 3300              	.LBB5454:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3301              		.loc 15 246 42 view .LVU715
 3302 00fa 08EA0000 		and	r0, r8, r0
 3303              	.LBE5454:
 3304              	.LBE5458:
 3305              	.LBE5463:
 3306              	.LBE5468:
 3307              	.LBE5476:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3308              		.loc 5 416 26 view .LVU716
 3309 00fe 0132     		adds	r2, r2, #1
 3310 0100 0131     		adds	r1, r1, #1
 3311 0102 AB42     		cmp	r3, r5
 3312              	.LBB5477:
 3313              	.LBB5469:
 3314              	.LBB5464:
 3315              	.LBB5459:
 3316              	.LBB5455:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3317              		.loc 15 246 42 view .LVU717
 3318 0104 02F8010C 		strb	r0, [r2, #-1]
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3319              		.loc 15 246 42 view .LVU718
 3320              	.LBE5455:
 3321              	.LBE5459:
 3322              	.LBE5464:
 3323              	.LBE5469:
 3324              	.LBE5477:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3325              		.loc 5 416 13 is_stmt 1 view .LVU719
 3326              	.LVL192:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3327              		.loc 5 416 26 view .LVU720
 3328 0108 EBD1     		bne	.L167
 3329              	.LVL193:
 3330              	.L166:
 413:../../libdaisy/src/hid/disp/display.h ****         {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 210


 3331              		.loc 5 413 9 view .LVU721
 413:../../libdaisy/src/hid/disp/display.h ****         {
 3332              		.loc 5 413 22 view .LVU722
 3333 010a D145     		cmp	r9, r10
 3334 010c 04F10104 		add	r4, r4, #1
 3335 0110 C3D1     		bne	.L161
 3336 0112 DDF81080 		ldr	r8, [sp, #16]
 3337              	.LVL194:
 3338              	.L160:
 3339              	.LBB5478:
 3340              	.LBB5479:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3341              		.loc 5 173 33 is_stmt 0 view .LVU723
 3342 0116 3268     		ldr	r2, [r6]
 3343              	.LBE5479:
 3344              	.LBE5478:
 434:../../libdaisy/src/hid/disp/display.h **** 
 3345              		.loc 5 434 18 view .LVU724
 3346 0118 0BEB0504 		add	r4, fp, r5
 3347 011c 2649     		ldr	r1, .L196
 3348              	.LBB5484:
 3349              	.LBB5480:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3350              		.loc 5 173 33 view .LVU725
 3351 011e D368     		ldr	r3, [r2, #12]
 3352              	.LBE5480:
 3353              	.LBE5484:
 434:../../libdaisy/src/hid/disp/display.h **** 
 3354              		.loc 5 434 18 view .LVU726
 3355 0120 A4B2     		uxth	r4, r4
 3356              	.LVL195:
 3357              	.LBB5485:
 3358              	.LBI5478:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 3359              		.loc 5 171 10 is_stmt 1 view .LVU727
 3360              	.LBB5481:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3361              		.loc 5 173 9 view .LVU728
 3362 0122 8B42     		cmp	r3, r1
 3363 0124 34D1     		bne	.L192
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3364              		.loc 5 173 33 is_stmt 0 view .LVU729
 3365 0126 8020     		movs	r0, #128
 3366              	.L168:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3367              		.loc 5 173 19 view .LVU730
 3368 0128 8442     		cmp	r4, r0
 3369 012a 04D3     		bcc	.L169
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3370              		.loc 5 173 44 view .LVU731
 3371 012c D368     		ldr	r3, [r2, #12]
 3372 012e 2249     		ldr	r1, .L196
 3373 0130 8B42     		cmp	r3, r1
 3374 0132 3AD1     		bne	.L193
 3375 0134 7F24     		movs	r4, #127
 3376              	.LVL196:
 3377              	.L169:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 211


 174:../../libdaisy/src/hid/disp/display.h ****     }
 3378              		.loc 5 174 34 view .LVU732
 3379 0136 9368     		ldr	r3, [r2, #8]
 3380 0138 204A     		ldr	r2, .L196+4
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3381              		.loc 5 173 19 view .LVU733
 3382 013a B480     		strh	r4, [r6, #4]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3383              		.loc 5 174 9 is_stmt 1 view .LVU734
 3384 013c 9342     		cmp	r3, r2
 3385 013e 24D1     		bne	.L194
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3386              		.loc 5 174 34 is_stmt 0 view .LVU735
 3387 0140 4020     		movs	r0, #64
 3388              	.L171:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3389              		.loc 5 174 19 view .LVU736
 3390 0142 029B     		ldr	r3, [sp, #8]
 3391 0144 8342     		cmp	r3, r0
 3392 0146 06D3     		bcc	.L172
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3393              		.loc 5 174 46 view .LVU737
 3394 0148 3368     		ldr	r3, [r6]
 3395 014a 1C4A     		ldr	r2, .L196+4
 3396 014c 9B68     		ldr	r3, [r3, #8]
 3397 014e 9342     		cmp	r3, r2
 3398 0150 25D1     		bne	.L195
 3399 0152 3F23     		movs	r3, #63
 3400 0154 0293     		str	r3, [sp, #8]
 3401              	.LVL197:
 3402              	.L172:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3403              		.loc 5 174 19 view .LVU738
 3404 0156 029B     		ldr	r3, [sp, #8]
 3405 0158 F380     		strh	r3, [r6, #6]	@ movhi
 3406              	.LVL198:
 3407              	.L154:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3408              		.loc 5 174 19 view .LVU739
 3409              	.LBE5481:
 3410              	.LBE5485:
 3411              	.LBE5447:
 3412              	.LBE5446:
 444:../../libdaisy/src/hid/disp/display.h ****         {
 445:../../libdaisy/src/hid/disp/display.h ****             if(((ChildType*)(this))->ChildType::WriteChar(*str, font, on)
 446:../../libdaisy/src/hid/disp/display.h ****                != *str)
 3413              		.loc 5 446 16 view .LVU740
 3414 015a 019B     		ldr	r3, [sp, #4]
 3415 015c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 445:../../libdaisy/src/hid/disp/display.h ****                != *str)
 3416              		.loc 5 445 13 view .LVU741
 3417 015e 4045     		cmp	r0, r8
 3418 0160 07D1     		bne	.L152
 3419              	.LVL199:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 3420              		.loc 5 443 9 is_stmt 1 view .LVU742
 3421 0162 13F8018F 		ldrb	r8, [r3, #1]!	@ zero_extendqisi2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 212


 3422              	.LVL200:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 3423              		.loc 5 443 9 is_stmt 0 view .LVU743
 3424 0166 0193     		str	r3, [sp, #4]
 3425 0168 B8F1000F 		cmp	r8, #0
 3426 016c 7FF460AF 		bne	.L175
 3427              	.LVL201:
 3428              	.L174:
 3429              	.LBB5490:
 3430              	.LBB5488:
 402:../../libdaisy/src/hid/disp/display.h **** 
 3431              		.loc 5 402 20 view .LVU744
 3432 0170 0020     		movs	r0, #0
 3433              	.L152:
 3434              	.LBE5488:
 3435              	.LBE5490:
 447:../../libdaisy/src/hid/disp/display.h ****             {
 448:../../libdaisy/src/hid/disp/display.h ****                 // Char could not be written
 449:../../libdaisy/src/hid/disp/display.h ****                 return *str;
 450:../../libdaisy/src/hid/disp/display.h ****             }
 451:../../libdaisy/src/hid/disp/display.h **** 
 452:../../libdaisy/src/hid/disp/display.h ****             // Next char
 453:../../libdaisy/src/hid/disp/display.h ****             str++;
 454:../../libdaisy/src/hid/disp/display.h ****         }
 455:../../libdaisy/src/hid/disp/display.h **** 
 456:../../libdaisy/src/hid/disp/display.h ****         // Everything ok
 457:../../libdaisy/src/hid/disp/display.h ****         return *str;
 458:../../libdaisy/src/hid/disp/display.h ****     }
 3436              		.loc 5 458 5 view .LVU745
 3437 0172 09B0     		add	sp, sp, #36
 3438              		.cfi_remember_state
 3439              		.cfi_def_cfa_offset 36
 3440              		@ sp needed
 3441 0174 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3442              	.LVL202:
 3443              	.L156:
 3444              		.cfi_restore_state
 3445              	.LBB5491:
 3446              	.LBB5489:
 402:../../libdaisy/src/hid/disp/display.h **** 
 3447              		.loc 5 402 20 view .LVU746
 3448 0178 4FF00008 		mov	r8, #0
 3449              	.LVL203:
 402:../../libdaisy/src/hid/disp/display.h **** 
 3450              		.loc 5 402 20 view .LVU747
 3451 017c EDE7     		b	.L154
 3452              	.LVL204:
 3453              	.L189:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 3454              		.loc 5 405 17 view .LVU748
 3455 017e 3046     		mov	r0, r6
 3456 0180 9847     		blx	r3
 3457              	.LVL205:
 3458 0182 62E7     		b	.L155
 3459              	.L190:
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3460              		.loc 5 406 21 view .LVU749
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 213


 3461 0184 3046     		mov	r0, r6
 3462 0186 9847     		blx	r3
 3463              	.LVL206:
 3464 0188 6BE7     		b	.L157
 3465              	.LVL207:
 3466              	.L194:
 3467              	.LBB5486:
 3468              	.LBB5482:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3469              		.loc 5 174 33 view .LVU750
 3470 018a 3046     		mov	r0, r6
 3471 018c 9847     		blx	r3
 3472              	.LVL208:
 3473 018e D8E7     		b	.L171
 3474              	.LVL209:
 3475              	.L192:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3476              		.loc 5 173 32 view .LVU751
 3477 0190 3046     		mov	r0, r6
 3478 0192 9847     		blx	r3
 3479              	.LVL210:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3480              		.loc 5 173 44 view .LVU752
 3481 0194 3268     		ldr	r2, [r6]
 3482 0196 C7E7     		b	.L168
 3483              	.LVL211:
 3484              	.L158:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3485              		.loc 5 173 44 view .LVU753
 3486              	.LBE5482:
 3487              	.LBE5486:
 434:../../libdaisy/src/hid/disp/display.h **** 
 3488              		.loc 5 434 19 view .LVU754
 3489 0198 B6F804B0 		ldrh	fp, [r6, #4]
 3490 019c BBE7     		b	.L160
 3491              	.LVL212:
 3492              	.L195:
 3493              	.LBB5487:
 3494              	.LBB5483:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3495              		.loc 5 174 45 view .LVU755
 3496 019e 3046     		mov	r0, r6
 3497 01a0 9847     		blx	r3
 3498              	.LVL213:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3499              		.loc 5 174 19 view .LVU756
 3500 01a2 431E     		subs	r3, r0, #1
 3501 01a4 9BB2     		uxth	r3, r3
 3502 01a6 0293     		str	r3, [sp, #8]
 3503              	.LVL214:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3504              		.loc 5 174 19 view .LVU757
 3505 01a8 D5E7     		b	.L172
 3506              	.LVL215:
 3507              	.L193:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3508              		.loc 5 173 43 view .LVU758
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 214


 3509 01aa 3046     		mov	r0, r6
 3510 01ac 9847     		blx	r3
 3511              	.LVL216:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3512              		.loc 5 173 19 view .LVU759
 3513 01ae 0138     		subs	r0, r0, #1
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3514              		.loc 5 174 34 view .LVU760
 3515 01b0 3268     		ldr	r2, [r6]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3516              		.loc 5 173 19 view .LVU761
 3517 01b2 84B2     		uxth	r4, r0
 3518              	.LVL217:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3519              		.loc 5 173 19 view .LVU762
 3520 01b4 BFE7     		b	.L169
 3521              	.L197:
 3522 01b6 00BF     		.align	2
 3523              	.L196:
 3524 01b8 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 3525 01bc 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 3526              	.LBE5483:
 3527              	.LBE5487:
 3528              	.LBE5489:
 3529              	.LBE5491:
 3530              		.cfi_endproc
 3531              	.LFE5542:
 3533              		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 3534              		.align	1
 3535              		.p2align 2,,3
 3536              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawP
 3537              		.syntax unified
 3538              		.thumb
 3539              		.thumb_func
 3540              		.fpu fpv5-d16
 3542              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawPixelEjj
 3543              	.LVL218:
 3544              	.LFB5750:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 3545              		.loc 4 41 10 is_stmt 1 view -0
 3546              		.cfi_startproc
 3547              		@ args = 0, pretend = 0, frame = 0
 3548              		@ frame_needed = 0, uses_anonymous_args = 0
 3549              		@ link register save eliminated.
 3550              	.LBB5496:
 3551              	.LBI5496:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3552              		.loc 15 239 10 view .LVU764
 3553              	.LBB5497:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3554              		.loc 15 241 9 is_stmt 0 view .LVU765
 3555 0000 7F29     		cmp	r1, #127
 3556 0002 1ED8     		bhi	.L198
 3557 0004 3F2A     		cmp	r2, #63
 3558 0006 1CD8     		bhi	.L198
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3559              		.loc 15 243 9 view .LVU766
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 215


 3560 0008 6BB1     		cbz	r3, .L200
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3561              		.loc 15 244 28 view .LVU767
 3562 000a D308     		lsrs	r3, r2, #3
 3563              	.LVL219:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3564              		.loc 15 244 48 view .LVU768
 3565 000c 4FF0010C 		mov	ip, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3566              		.loc 15 244 54 view .LVU769
 3567 0010 02F00702 		and	r2, r2, #7
 3568              	.LVL220:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3569              		.loc 15 244 42 view .LVU770
 3570 0014 01EBC313 		add	r3, r1, r3, lsl #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3571              		.loc 15 244 48 view .LVU771
 3572 0018 0CFA02F2 		lsl	r2, ip, r2
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3573              		.loc 15 244 42 view .LVU772
 3574 001c C118     		adds	r1, r0, r3
 3575              	.LVL221:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3576              		.loc 15 244 42 view .LVU773
 3577 001e 0B7D     		ldrb	r3, [r1, #20]	@ zero_extendqisi2
 3578 0020 1A43     		orrs	r2, r2, r3
 3579 0022 0A75     		strb	r2, [r1, #20]
 3580 0024 7047     		bx	lr
 3581              	.LVL222:
 3582              	.L200:
 3583              	.LBB5498:
 3584              	.LBI5498:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3585              		.loc 15 239 10 is_stmt 1 view .LVU774
 3586              	.LBB5499:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3587              		.loc 15 246 28 is_stmt 0 view .LVU775
 3588 0026 D308     		lsrs	r3, r2, #3
 3589              	.LVL223:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3590              		.loc 15 246 49 view .LVU776
 3591 0028 4FF0010C 		mov	ip, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3592              		.loc 15 246 55 view .LVU777
 3593 002c 02F00702 		and	r2, r2, #7
 3594              	.LVL224:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3595              		.loc 15 246 42 view .LVU778
 3596 0030 01EBC313 		add	r3, r1, r3, lsl #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3597              		.loc 15 246 49 view .LVU779
 3598 0034 0CFA02FC 		lsl	ip, ip, r2
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3599              		.loc 15 246 42 view .LVU780
 3600 0038 C118     		adds	r1, r0, r3
 3601              	.LVL225:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 216


 3602              		.loc 15 246 42 view .LVU781
 3603 003a 0A7D     		ldrb	r2, [r1, #20]	@ zero_extendqisi2
 3604 003c 22EA0C02 		bic	r2, r2, ip
 3605 0040 0A75     		strb	r2, [r1, #20]
 3606              	.LVL226:
 3607              	.L198:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3608              		.loc 15 246 42 view .LVU782
 3609              	.LBE5499:
 3610              	.LBE5498:
 3611              	.LBE5497:
 3612              	.LBE5496:
  44:../../libdaisy/src/hid/disp/oled_display.h **** 
 3613              		.loc 4 44 5 view .LVU783
 3614 0042 7047     		bx	lr
 3615              		.cfi_endproc
 3616              	.LFE5750:
 3618              		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 3619              		.align	1
 3620              		.p2align 2,,3
 3621              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 3622              		.syntax unified
 3623              		.thumb
 3624              		.thumb_func
 3625              		.fpu fpv5-d16
 3627              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 3628              	.LVL227:
 3629              	.LFB5537:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 3630              		.loc 5 221 10 is_stmt 1 view -0
 3631              		.cfi_startproc
 3632              		@ args = 8, pretend = 0, frame = 8
 3633              		@ frame_needed = 0, uses_anonymous_args = 0
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 3634              		.loc 5 221 10 is_stmt 0 view .LVU785
 3635 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3636              		.cfi_def_cfa_offset 36
 3637              		.cfi_offset 4, -36
 3638              		.cfi_offset 5, -32
 3639              		.cfi_offset 6, -28
 3640              		.cfi_offset 7, -24
 3641              		.cfi_offset 8, -20
 3642              		.cfi_offset 9, -16
 3643              		.cfi_offset 10, -12
 3644              		.cfi_offset 11, -8
 3645              		.cfi_offset 14, -4
 3646 0004 83B0     		sub	sp, sp, #12
 3647              		.cfi_def_cfa_offset 48
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 3648              		.loc 5 227 52 view .LVU786
 3649 0006 5C1A     		subs	r4, r3, r1
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 3650              		.loc 5 221 10 view .LVU787
 3651 0008 0C9E     		ldr	r6, [sp, #48]
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 3652              		.loc 5 227 22 view .LVU788
 3653 000a 002C     		cmp	r4, #0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 217


 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 3654              		.loc 5 221 10 view .LVU789
 3655 000c 9DF83490 		ldrb	r9, [sp, #52]	@ zero_extendqisi2
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 3656              		.loc 5 228 52 view .LVU790
 3657 0010 A6EB0208 		sub	r8, r6, r2
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 3658              		.loc 5 227 22 view .LVU791
 3659 0014 B8BF     		it	lt
 3660 0016 6442     		rsblt	r4, r4, #0
 3661              	.LVL228:
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 3662              		.loc 5 228 22 view .LVU792
 3663 0018 B8F1000F 		cmp	r8, #0
 3664 001c B8BF     		it	lt
 3665 001e C8F10008 		rsblt	r8, r8, #0
 3666              	.LVL229:
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 3667              		.loc 5 229 42 view .LVU793
 3668 0022 8B42     		cmp	r3, r1
 3669 0024 8CBF     		ite	hi
 3670 0026 4FF0010A 		movhi	r10, #1
 3671 002a 4FF0FF3A 		movls	r10, #-1
 3672              	.LVL230:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 3673              		.loc 5 230 42 view .LVU794
 3674 002e 9642     		cmp	r6, r2
 231:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error2;
 3675              		.loc 5 231 22 view .LVU795
 3676 0030 A4EB080C 		sub	ip, r4, r8
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 3677              		.loc 5 230 42 view .LVU796
 3678 0034 51D8     		bhi	.L203
 3679              	.LVL231:
 3680              	.LBB5516:
 3681              	.LBI5516:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 3682              		.loc 4 41 10 is_stmt 1 discriminator 4 view .LVU797
 3683              	.LBB5517:
 3684              	.LBI5517:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3685              		.loc 15 239 10 discriminator 4 view .LVU798
 3686              	.LBE5517:
 3687              	.LBE5516:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 3688              		.loc 5 230 42 is_stmt 0 discriminator 4 view .LVU799
 3689 0036 4FF0FF35 		mov	r5, #-1
 3690              	.LBB5533:
 3691              	.LBB5527:
 3692              	.LBB5518:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3693              		.loc 15 241 9 discriminator 4 view .LVU800
 3694 003a 7F2B     		cmp	r3, #127
 3695              	.LBE5518:
 3696              	.LBE5527:
 3697              	.LBE5533:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 218


 3698              		.loc 5 230 42 discriminator 4 view .LVU801
 3699 003c 0195     		str	r5, [sp, #4]
 3700              	.LBB5534:
 3701              	.LBB5528:
 3702              	.LBB5523:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3703              		.loc 15 241 9 discriminator 4 view .LVU802
 3704 003e 12D8     		bhi	.L204
 3705 0040 3F2E     		cmp	r6, #63
 3706 0042 10D8     		bhi	.L204
 3707              	.LVL232:
 3708              	.L215:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3709              		.loc 15 244 28 view .LVU803
 3710 0044 F508     		lsrs	r5, r6, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3711              		.loc 15 244 54 view .LVU804
 3712 0046 06F0070E 		and	lr, r6, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3713              		.loc 15 244 48 view .LVU805
 3714 004a 0127     		movs	r7, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3715              		.loc 15 244 42 view .LVU806
 3716 004c 03EBC515 		add	r5, r3, r5, lsl #7
 3717 0050 0544     		add	r5, r5, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3718              		.loc 15 243 9 view .LVU807
 3719 0052 B9F1000F 		cmp	r9, #0
 3720 0056 47D0     		beq	.L205
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3721              		.loc 15 244 48 view .LVU808
 3722 0058 07FA0EF7 		lsl	r7, r7, lr
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3723              		.loc 15 244 42 view .LVU809
 3724 005c 95F814E0 		ldrb	lr, [r5, #20]	@ zero_extendqisi2
 3725 0060 47EA0E07 		orr	r7, r7, lr
 3726 0064 2F75     		strb	r7, [r5, #20]
 3727              	.LVL233:
 3728              	.L204:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3729              		.loc 15 244 42 view .LVU810
 3730              	.LBE5523:
 3731              	.LBE5528:
 3732              	.LBE5534:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 3733              		.loc 5 239 26 is_stmt 1 view .LVU811
 3734 0066 9642     		cmp	r6, r2
 3735 0068 01D1     		bne	.L208
 3736              	.L227:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 3737              		.loc 5 239 26 is_stmt 0 view .LVU812
 3738 006a 8B42     		cmp	r3, r1
 3739 006c 29D0     		beq	.L201
 3740              	.L208:
 3741              	.LVL234:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 3742              		.loc 5 243 23 view .LVU813
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 219


 3743 006e C8F10007 		rsb	r7, r8, #0
 3744              	.L210:
 3745              	.LVL235:
 3746              	.LBB5535:
 3747              	.LBI5535:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 3748              		.loc 4 41 10 is_stmt 1 view .LVU814
 3749              	.LBB5536:
 3750              	.LBI5536:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3751              		.loc 15 239 10 view .LVU815
 3752              	.LBB5537:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3753              		.loc 15 241 9 is_stmt 0 view .LVU816
 3754 0072 7F29     		cmp	r1, #127
 3755 0074 14D8     		bhi	.L211
 3756 0076 3F2A     		cmp	r2, #63
 3757 0078 12D8     		bhi	.L211
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3758              		.loc 15 244 28 view .LVU817
 3759 007a D508     		lsrs	r5, r2, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3760              		.loc 15 244 54 view .LVU818
 3761 007c 02F0070B 		and	fp, r2, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3762              		.loc 15 244 48 view .LVU819
 3763 0080 4FF0010E 		mov	lr, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3764              		.loc 15 244 42 view .LVU820
 3765 0084 01EBC515 		add	r5, r1, r5, lsl #7
 3766 0088 0544     		add	r5, r5, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3767              		.loc 15 243 9 view .LVU821
 3768 008a B9F1000F 		cmp	r9, #0
 3769 008e 1BD0     		beq	.L212
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3770              		.loc 15 244 48 view .LVU822
 3771 0090 0EFA0BFE 		lsl	lr, lr, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3772              		.loc 15 244 42 view .LVU823
 3773 0094 95F814B0 		ldrb	fp, [r5, #20]	@ zero_extendqisi2
 3774 0098 4EEA0B0E 		orr	lr, lr, fp
 3775 009c 85F814E0 		strb	lr, [r5, #20]
 3776              	.L211:
 3777              	.LVL236:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3778              		.loc 15 244 42 view .LVU824
 3779              	.LBE5537:
 3780              	.LBE5536:
 3781              	.LBE5535:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 3782              		.loc 5 243 13 view .LVU825
 3783 00a0 B7EB4C0F 		cmp	r7, ip, lsl #1
 242:../../libdaisy/src/hid/disp/display.h ****             if(error2 > -deltaY)
 3784              		.loc 5 242 20 view .LVU826
 3785 00a4 4FEA4C05 		lsl	r5, ip, #1
 3786              	.LVL237:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 220


 243:../../libdaisy/src/hid/disp/display.h ****             {
 3787              		.loc 5 243 13 view .LVU827
 3788 00a8 02DA     		bge	.L213
 245:../../libdaisy/src/hid/disp/display.h ****                 x1 += signX;
 3789              		.loc 5 245 23 view .LVU828
 3790 00aa ACEB080C 		sub	ip, ip, r8
 3791              	.LVL238:
 246:../../libdaisy/src/hid/disp/display.h ****             }
 3792              		.loc 5 246 20 view .LVU829
 3793 00ae 5144     		add	r1, r1, r10
 3794              	.LVL239:
 3795              	.L213:
 249:../../libdaisy/src/hid/disp/display.h ****             {
 3796              		.loc 5 249 13 view .LVU830
 3797 00b0 AC42     		cmp	r4, r5
 3798 00b2 02DD     		ble	.L214
 252:../../libdaisy/src/hid/disp/display.h ****             }
 3799              		.loc 5 252 20 view .LVU831
 3800 00b4 019D     		ldr	r5, [sp, #4]
 3801              	.LVL240:
 251:../../libdaisy/src/hid/disp/display.h ****                 y1 += signY;
 3802              		.loc 5 251 23 view .LVU832
 3803 00b6 A444     		add	ip, ip, r4
 3804              	.LVL241:
 252:../../libdaisy/src/hid/disp/display.h ****             }
 3805              		.loc 5 252 20 view .LVU833
 3806 00b8 2A44     		add	r2, r2, r5
 3807              	.LVL242:
 3808              	.L214:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 3809              		.loc 5 239 26 is_stmt 1 view .LVU834
 3810 00ba 9942     		cmp	r1, r3
 3811 00bc D9D1     		bne	.L210
 239:../../libdaisy/src/hid/disp/display.h ****         {
 3812              		.loc 5 239 26 is_stmt 0 view .LVU835
 3813 00be 9642     		cmp	r6, r2
 3814 00c0 D7D1     		bne	.L210
 3815              	.L201:
 255:../../libdaisy/src/hid/disp/display.h **** 
 3816              		.loc 5 255 5 view .LVU836
 3817 00c2 03B0     		add	sp, sp, #12
 3818              		.cfi_remember_state
 3819              		.cfi_def_cfa_offset 36
 3820              		@ sp needed
 3821 00c4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3822              	.LVL243:
 3823              	.L212:
 3824              		.cfi_restore_state
 3825              	.LBB5542:
 3826              	.LBB5541:
 3827              	.LBB5540:
 3828              	.LBB5538:
 3829              	.LBI5538:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3830              		.loc 15 239 10 is_stmt 1 view .LVU837
 3831              	.LBB5539:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 221


 3832              		.loc 15 246 49 is_stmt 0 view .LVU838
 3833 00c8 0EFA0BFB 		lsl	fp, lr, fp
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3834              		.loc 15 246 42 view .LVU839
 3835 00cc 95F814E0 		ldrb	lr, [r5, #20]	@ zero_extendqisi2
 3836 00d0 2EEA0B0E 		bic	lr, lr, fp
 3837 00d4 85F814E0 		strb	lr, [r5, #20]
 3838 00d8 E2E7     		b	.L211
 3839              	.LVL244:
 3840              	.L203:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3841              		.loc 15 246 42 view .LVU840
 3842              	.LBE5539:
 3843              	.LBE5538:
 3844              	.LBE5540:
 3845              	.LBE5541:
 3846              	.LBE5542:
 3847              	.LBB5543:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 3848              		.loc 4 41 10 is_stmt 1 view .LVU841
 3849              	.LBB5529:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3850              		.loc 15 239 10 view .LVU842
 3851              	.LBE5529:
 3852              	.LBE5543:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 3853              		.loc 5 230 42 is_stmt 0 view .LVU843
 3854 00da 0125     		movs	r5, #1
 3855              	.LBB5544:
 3856              	.LBB5530:
 3857              	.LBB5524:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3858              		.loc 15 241 9 view .LVU844
 3859 00dc 7F2B     		cmp	r3, #127
 3860              	.LBE5524:
 3861              	.LBE5530:
 3862              	.LBE5544:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 3863              		.loc 5 230 42 view .LVU845
 3864 00de 0195     		str	r5, [sp, #4]
 3865              	.LBB5545:
 3866              	.LBB5531:
 3867              	.LBB5525:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3868              		.loc 15 241 9 view .LVU846
 3869 00e0 C5D8     		bhi	.L208
 3870 00e2 3F2E     		cmp	r6, #63
 3871 00e4 AED9     		bls	.L215
 3872 00e6 C2E7     		b	.L208
 3873              	.LVL245:
 3874              	.L205:
 3875              	.LBB5519:
 3876              	.LBI5519:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3877              		.loc 15 239 10 is_stmt 1 view .LVU847
 3878              	.LBB5520:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 222


 3879              		.loc 15 246 49 is_stmt 0 view .LVU848
 3880 00e8 07FA0EFE 		lsl	lr, r7, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3881              		.loc 15 246 42 view .LVU849
 3882 00ec 2F7D     		ldrb	r7, [r5, #20]	@ zero_extendqisi2
 3883              	.LBE5520:
 3884              	.LBE5519:
 3885              	.LBE5525:
 3886              	.LBE5531:
 3887              	.LBE5545:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 3888              		.loc 5 239 26 view .LVU850
 3889 00ee 9642     		cmp	r6, r2
 3890              	.LBB5546:
 3891              	.LBB5532:
 3892              	.LBB5526:
 3893              	.LBB5522:
 3894              	.LBB5521:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3895              		.loc 15 246 42 view .LVU851
 3896 00f0 27EA0E07 		bic	r7, r7, lr
 3897 00f4 2F75     		strb	r7, [r5, #20]
 3898              	.LVL246:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3899              		.loc 15 246 42 view .LVU852
 3900              	.LBE5521:
 3901              	.LBE5522:
 3902              	.LBE5526:
 3903              	.LBE5532:
 3904              	.LBE5546:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 3905              		.loc 5 239 26 is_stmt 1 view .LVU853
 3906 00f6 B8D0     		beq	.L227
 3907 00f8 B9E7     		b	.L208
 3908              		.cfi_endproc
 3909              	.LFE5537:
 3911 00fa 00BF     		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 3912              		.align	1
 3913              		.p2align 2,,3
 3914              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 3915              		.syntax unified
 3916              		.thumb
 3917              		.thumb_func
 3918              		.fpu fpv5-d16
 3920              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 3921              	.LVL247:
 3922              	.LFB6191:
 283:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 3923              		.loc 5 283 10 view -0
 3924              		.cfi_startproc
 3925              		@ args = 12, pretend = 0, frame = 8
 3926              		@ frame_needed = 0, uses_anonymous_args = 0
 283:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 3927              		.loc 5 283 10 is_stmt 0 view .LVU855
 3928 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3929              		.cfi_def_cfa_offset 36
 3930              		.cfi_offset 4, -36
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 223


 3931              		.cfi_offset 5, -32
 3932              		.cfi_offset 6, -28
 3933              		.cfi_offset 7, -24
 3934              		.cfi_offset 8, -20
 3935              		.cfi_offset 9, -16
 3936              		.cfi_offset 10, -12
 3937              		.cfi_offset 11, -8
 3938              		.cfi_offset 14, -4
 3939 0004 2DED068B 		vpush.64	{d8, d9, d10}
 3940              		.cfi_def_cfa_offset 60
 3941              		.cfi_offset 80, -60
 3942              		.cfi_offset 81, -56
 3943              		.cfi_offset 82, -52
 3944              		.cfi_offset 83, -48
 3945              		.cfi_offset 84, -44
 3946              		.cfi_offset 85, -40
 3947 0008 83B0     		sub	sp, sp, #12
 3948              		.cfi_def_cfa_offset 72
 283:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 3949              		.loc 5 283 10 view .LVU856
 3950 000a 1F46     		mov	r7, r3
 3951 000c 8046     		mov	r8, r0
 3952 000e 0D46     		mov	r5, r1
 3953 0010 9DF85030 		ldrb	r3, [sp, #80]	@ zero_extendqisi2
 3954              	.LVL248:
 283:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 3955              		.loc 5 283 10 view .LVU857
 3956 0014 1646     		mov	r6, r2
 3957 0016 0193     		str	r3, [sp, #4]
 306:../../libdaisy/src/hid/disp/display.h ****         {
 3958              		.loc 5 306 9 view .LVU858
 3959 0018 139B     		ldr	r3, [sp, #76]
 3960 001a 002B     		cmp	r3, #0
 3961 001c C0F22182 		blt	.L229
 313:../../libdaisy/src/hid/disp/display.h **** 
 3962              		.loc 5 313 27 view .LVU859
 3963 0020 129A     		ldr	r2, [sp, #72]
 3964              	.LVL249:
 313:../../libdaisy/src/hid/disp/display.h **** 
 3965              		.loc 5 313 27 view .LVU860
 3966 0022 1344     		add	r3, r3, r2
 3967 0024 06EE103A 		vmov	s12, r3	@ int
 3968              	.LVL250:
 3969              	.L230:
 312:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 3970              		.loc 5 312 27 view .LVU861
 3971 0028 DDED127A 		vldr.32	s15, [sp, #72]	@ int
 313:../../libdaisy/src/hid/disp/display.h **** 
 3972              		.loc 5 313 27 view .LVU862
 3973 002c B8EEC66B 		vcvt.f64.s32	d6, s12
 312:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 3974              		.loc 5 312 27 view .LVU863
 3975 0030 9FEDCD4B 		vldr.64	d4, .L305
 3976 0034 B8EEE77B 		vcvt.f64.s32	d7, s15
 3977 0038 9FEDCD5B 		vldr.64	d5, .L305+8
 3978 003c 27EE047B 		vmul.f64	d7, d7, d4
 313:../../libdaisy/src/hid/disp/display.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 224


 3979              		.loc 5 313 27 view .LVU864
 3980 0040 26EE046B 		vmul.f64	d6, d6, d4
 312:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 3981              		.loc 5 312 27 view .LVU865
 3982 0044 87EE050B 		vdiv.f64	d0, d7, d5
 313:../../libdaisy/src/hid/disp/display.h **** 
 3983              		.loc 5 313 27 view .LVU866
 3984 0048 86EE05AB 		vdiv.f64	d10, d6, d5
 312:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 3985              		.loc 5 312 25 view .LVU867
 3986 004c F7EEC08B 		vcvt.f32.f64	s17, d0
 3987              	.LVL251:
 3988              	.LBB5579:
 3989              	.LBB5580:
 3990              		.file 32 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** /** @file include/cmath
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  as macros in C).
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  */
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** //
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** //
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #pragma GCC system_header
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/c++config.h>
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/cpp_type_traits.h>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 225


  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #include <ext/type_traits.h>
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #include_next <math.h>
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/std_abs.h>
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef div
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acos
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asin
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan2
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ceil
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cos
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cosh
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fabs
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef floor
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmod
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef frexp
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ldexp
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log10
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef modf
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef pow
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sin
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sinh
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sqrt
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tan
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tanh
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** extern "C++"
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** {
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** {
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acos;
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(float __x)
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(long double __x)
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     acos(_Tp __x)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 226


 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_acos(__x); }
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asin;
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(float __x)
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(long double __x)
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     asin(_Tp __x)
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_asin(__x); }
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(float __x)
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(long double __x)
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     atan(_Tp __x)
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_atan(__x); }
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan2;
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(float __y, float __x)
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(long double __y, long double __x)
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 227


 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ceil;
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(float __x)
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(long double __x)
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     ceil(_Tp __x)
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cos;
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(float __x)
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 3991              		.loc 32 185 26 view .LVU868
 3992 0050 B0EE680A 		vmov.f32	s0, s17
 3993 0054 FFF7FEFF 		bl	cosf
 3994              	.LVL252:
 3995              		.loc 32 185 26 view .LVU869
 3996              	.LBE5580:
 3997              	.LBE5579:
 315:../../libdaisy/src/hid/disp/display.h ****         start_y = -sin(start_angle_rad) * radius;
 3998              		.loc 5 315 17 view .LVU870
 3999 0058 07EE907A 		vmov	s15, r7	@ int
 313:../../libdaisy/src/hid/disp/display.h **** 
 4000              		.loc 5 313 25 view .LVU871
 4001 005c B7EECAAB 		vcvt.f32.f64	s20, d10
 4002              	.LVL253:
 4003              	.LBB5583:
 4004              	.LBI5579:
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 4005              		.loc 32 184 3 is_stmt 1 view .LVU872
 4006              	.LBB5581:
 4007              		.loc 32 185 5 view .LVU873
 4008              		.loc 32 185 5 is_stmt 0 view .LVU874
 4009              	.LBE5581:
 4010              	.LBE5583:
 315:../../libdaisy/src/hid/disp/display.h ****         start_y = -sin(start_angle_rad) * radius;
 4011              		.loc 5 315 17 view .LVU875
 4012 0060 F8EE679A 		vcvt.f32.u32	s19, s15
 4013              	.LBB5584:
 4014              	.LBB5582:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 228


 4015              		.loc 32 185 26 view .LVU876
 4016 0064 B0EE408A 		vmov.f32	s16, s0
 4017              	.LBE5582:
 4018              	.LBE5584:
 4019              	.LBB5585:
 4020              	.LBB5586:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(long double __x)
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosl(__x); }
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     cos(_Tp __x)
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cos(__x); }
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cosh;
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(float __x)
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(long double __x)
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshl(__x); }
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     cosh(_Tp __x)
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cosh(__x); }
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp;
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(float __x)
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expf(__x); }
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(long double __x)
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expl(__x); }
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     exp(_Tp __x)
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_exp(__x); }
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 229


 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fabs;
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(float __x)
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsf(__x); }
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(long double __x)
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsl(__x); }
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     fabs(_Tp __x)
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_fabs(__x); }
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::floor;
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(float __x)
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorf(__x); }
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(long double __x)
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorl(__x); }
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     floor(_Tp __x)
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_floor(__x); }
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmod;
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(float __x, float __y)
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodf(__x, __y); }
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(long double __x, long double __y)
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodl(__x, __y); }
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     fmod(_Tp __x, _Up __y)
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       return fmod(__type(__x), __type(__y));
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 230


 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::frexp;
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(float __x, int* __exp)
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(long double __x, int* __exp)
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     frexp(_Tp __x, int* __exp)
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_frexp(__x, __exp); }
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ldexp;
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(float __x, int __exp)
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(long double __x, int __exp)
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     ldexp(_Tp __x, int __exp)
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log;
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   log(float __x)
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logf(__x); }
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   log(long double __x)
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logl(__x); }
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     log(_Tp __x)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 231


 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log(__x); }
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log10;
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(float __x)
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10f(__x); }
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(long double __x)
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10l(__x); }
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     log10(_Tp __x)
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log10(__x); }
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::modf;
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(float __x, float* __iptr)
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modff(__x, __iptr); }
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(long double __x, long double* __iptr)
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::pow;
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, float __y)
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powf(__x, __y); }
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, long double __y)
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powl(__x, __y); }
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #if __cplusplus < 201103L
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline double
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(double __x, int __i)
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powi(__x, __i); }
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, int __n)
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powif(__x, __n); }
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, int __n)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 232


 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powil(__x, __n); }
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     pow(_Tp __x, _Up __y)
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       return pow(__type(__x), __type(__y));
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sin;
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   sin(float __x)
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
 4021              		.loc 32 426 26 view .LVU877
 4022 0068 B0EE680A 		vmov.f32	s0, s17
 4023 006c FFF7FEFF 		bl	sinf
 4024              	.LVL254:
 4025              	.LBE5586:
 4026              	.LBE5585:
 316:../../libdaisy/src/hid/disp/display.h ****         end_x   = cos(end_angle_rad) * radius;
 4027              		.loc 5 316 17 view .LVU878
 4028 0070 60EE698A 		vnmul.f32	s17, s0, s19
 4029              	.LVL255:
 4030              	.LBB5588:
 4031              	.LBB5589:
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 4032              		.loc 32 185 26 view .LVU879
 4033 0074 B0EE4A0A 		vmov.f32	s0, s20
 4034 0078 FFF7FEFF 		bl	cosf
 4035              	.LVL256:
 4036 007c B0EE409A 		vmov.f32	s18, s0
 4037              	.LBE5589:
 4038              	.LBE5588:
 4039              	.LBB5591:
 4040              	.LBB5592:
 4041              		.loc 32 426 26 view .LVU880
 4042 0080 B0EE4A0A 		vmov.f32	s0, s20
 4043 0084 FFF7FEFF 		bl	sinf
 4044              	.LVL257:
 4045              	.LBE5592:
 4046              	.LBE5591:
 318:../../libdaisy/src/hid/disp/display.h **** 
 4047              		.loc 5 318 17 view .LVU881
 4048 0088 20EE690A 		vnmul.f32	s0, s0, s19
 315:../../libdaisy/src/hid/disp/display.h ****         start_y = -sin(start_angle_rad) * radius;
 4049              		.loc 5 315 17 view .LVU882
 4050 008c 29EE888A 		vmul.f32	s16, s19, s16
 4051              	.LVL258:
 4052              	.LBB5594:
 4053              	.LBI5585:
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 233


 4054              		.loc 32 425 3 is_stmt 1 view .LVU883
 4055              	.LBB5587:
 4056              		.loc 32 426 5 view .LVU884
 4057              		.loc 32 426 5 is_stmt 0 view .LVU885
 4058              	.LBE5587:
 4059              	.LBE5594:
 4060              	.LBB5595:
 4061              	.LBI5588:
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 4062              		.loc 32 184 3 is_stmt 1 view .LVU886
 4063              	.LBB5590:
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 4064              		.loc 32 185 5 view .LVU887
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 4065              		.loc 32 185 5 is_stmt 0 view .LVU888
 4066              	.LBE5590:
 4067              	.LBE5595:
 317:../../libdaisy/src/hid/disp/display.h ****         end_y   = -sin(end_angle_rad) * radius;
 4068              		.loc 5 317 17 view .LVU889
 4069 0090 29EE899A 		vmul.f32	s18, s19, s18
 4070              	.LVL259:
 4071              	.LBB5596:
 4072              	.LBI5591:
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
 4073              		.loc 32 425 3 is_stmt 1 view .LVU890
 4074              	.LBB5593:
 4075              		.loc 32 426 5 view .LVU891
 4076              		.loc 32 426 5 is_stmt 0 view .LVU892
 4077              	.LBE5593:
 4078              	.LBE5596:
 322:../../libdaisy/src/hid/disp/display.h ****            < 2.0f)
 4079              		.loc 5 322 25 view .LVU893
 4080 0094 70EE687A 		vsub.f32	s15, s0, s17
 321:../../libdaisy/src/hid/disp/display.h ****                + (end_y - start_y) * (end_y - start_y)
 4081              		.loc 5 321 9 view .LVU894
 4082 0098 F0EE006A 		vmov.f32	s13, #2.0e+0
 321:../../libdaisy/src/hid/disp/display.h ****                + (end_y - start_y) * (end_y - start_y)
 4083              		.loc 5 321 19 view .LVU895
 4084 009c 39EE487A 		vsub.f32	s14, s18, s16
 322:../../libdaisy/src/hid/disp/display.h ****            < 2.0f)
 4085              		.loc 5 322 36 view .LVU896
 4086 00a0 67EEA77A 		vmul.f32	s15, s15, s15
 322:../../libdaisy/src/hid/disp/display.h ****            < 2.0f)
 4087              		.loc 5 322 16 view .LVU897
 4088 00a4 E7EE077A 		vfma.f32	s15, s14, s14
 321:../../libdaisy/src/hid/disp/display.h ****                + (end_y - start_y) * (end_y - start_y)
 4089              		.loc 5 321 9 view .LVU898
 4090 00a8 F4EEE67A 		vcmpe.f32	s15, s13
 4091 00ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4092 00b0 06D5     		bpl	.L287
 325:../../libdaisy/src/hid/disp/display.h ****                 circle = true;
 4093              		.loc 5 325 13 view .LVU899
 4094 00b2 139B     		ldr	r3, [sp, #76]
 4095 00b4 B42B     		cmp	r3, #180
 4096 00b6 40F39680 		ble	.L228
 326:../../libdaisy/src/hid/disp/display.h ****             else
 4097              		.loc 5 326 24 view .LVU900
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 234


 4098 00ba 4FF00109 		mov	r9, #1
 4099 00be 01E0     		b	.L231
 4100              	.L287:
 304:../../libdaisy/src/hid/disp/display.h **** 
 4101              		.loc 5 304 14 view .LVU901
 4102 00c0 4FF00009 		mov	r9, #0
 4103              	.L231:
 4104              	.LVL260:
 302:../../libdaisy/src/hid/disp/display.h **** 
 4105              		.loc 5 302 27 view .LVU902
 4106 00c4 0124     		movs	r4, #1
 332:../../libdaisy/src/hid/disp/display.h ****         t_y = 0;
 4107              		.loc 5 332 13 view .LVU903
 4108 00c6 7842     		rsbs	r0, r7, #0
 4109              	.LVL261:
 333:../../libdaisy/src/hid/disp/display.h ****         err = 2 - 2 * radius;
 4110              		.loc 5 333 13 view .LVU904
 4111 00c8 4FF0000C 		mov	ip, #0
 4112 00cc 0095     		str	r5, [sp]
 334:../../libdaisy/src/hid/disp/display.h **** 
 4113              		.loc 5 334 17 view .LVU905
 4114 00ce E31B     		subs	r3, r4, r7
 302:../../libdaisy/src/hid/disp/display.h **** 
 4115              		.loc 5 302 17 view .LVU906
 4116 00d0 2146     		mov	r1, r4
 302:../../libdaisy/src/hid/disp/display.h **** 
 4117              		.loc 5 302 22 view .LVU907
 4118 00d2 2746     		mov	r7, r4
 4119              	.LVL262:
 302:../../libdaisy/src/hid/disp/display.h **** 
 4120              		.loc 5 302 12 view .LVU908
 4121 00d4 2246     		mov	r2, r4
 334:../../libdaisy/src/hid/disp/display.h **** 
 4122              		.loc 5 334 17 view .LVU909
 4123 00d6 A340     		lsls	r3, r3, r4
 4124              	.LVL263:
 4125              	.L257:
 338:../../libdaisy/src/hid/disp/display.h ****             {
 4126              		.loc 5 338 13 view .LVU910
 4127 00d8 B9F1000F 		cmp	r9, #0
 4128 00dc 6AD1     		bne	.L233
 343:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 4129              		.loc 5 343 34 view .LVU911
 4130 00de 4242     		rsbs	r2, r0, #0
 4131              	.LVL264:
 340:../../libdaisy/src/hid/disp/display.h ****                 t_syx  = start_y * t_x;
 4132              		.loc 5 340 24 view .LVU912
 4133 00e0 06EE90CA 		vmov	s13, ip	@ int
 342:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 4134              		.loc 5 342 34 view .LVU913
 4135 00e4 CCF10001 		rsb	r1, ip, #0
 4136              	.LVL265:
 343:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 4137              		.loc 5 343 34 view .LVU914
 4138 00e8 07EE102A 		vmov	s14, r2	@ int
 340:../../libdaisy/src/hid/disp/display.h ****                 t_syx  = start_y * t_x;
 4139              		.loc 5 340 24 view .LVU915
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 235


 4140 00ec B8EEE66A 		vcvt.f32.s32	s12, s13
 342:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 4141              		.loc 5 342 34 view .LVU916
 4142 00f0 07EE901A 		vmov	s15, r1	@ int
 341:../../libdaisy/src/hid/disp/display.h ****                 t_sxny = start_x * -t_y;
 4143              		.loc 5 341 24 view .LVU917
 4144 00f4 06EE900A 		vmov	s13, r0	@ int
 343:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 4145              		.loc 5 343 34 view .LVU918
 4146 00f8 B8EEC77A 		vcvt.f32.s32	s14, s14
 349:../../libdaisy/src/hid/disp/display.h ****                 {
 4147              		.loc 5 349 17 view .LVU919
 4148 00fc 139A     		ldr	r2, [sp, #76]
 340:../../libdaisy/src/hid/disp/display.h ****                 t_syx  = start_y * t_x;
 4149              		.loc 5 340 24 view .LVU920
 4150 00fe 66EE084A 		vmul.f32	s9, s12, s16
 4151              	.LVL266:
 342:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 4152              		.loc 5 342 34 view .LVU921
 4153 0102 F8EEE77A 		vcvt.f32.s32	s15, s15
 349:../../libdaisy/src/hid/disp/display.h ****                 {
 4154              		.loc 5 349 17 view .LVU922
 4155 0106 B42A     		cmp	r2, #180
 343:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 4156              		.loc 5 343 24 view .LVU923
 4157 0108 27EE284A 		vmul.f32	s8, s14, s17
 341:../../libdaisy/src/hid/disp/display.h ****                 t_sxny = start_x * -t_y;
 4158              		.loc 5 341 24 view .LVU924
 4159 010c F8EEE66A 		vcvt.f32.s32	s13, s13
 342:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 4160              		.loc 5 342 24 view .LVU925
 4161 0110 67EE885A 		vmul.f32	s11, s15, s16
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4162              		.loc 5 351 33 view .LVU926
 4163 0114 74EEC43A 		vsub.f32	s7, s9, s8
 341:../../libdaisy/src/hid/disp/display.h ****                 t_sxny = start_x * -t_y;
 4164              		.loc 5 341 24 view .LVU927
 4165 0118 26EEA85A 		vmul.f32	s10, s13, s17
 4166              	.LVL267:
 344:../../libdaisy/src/hid/disp/display.h ****                 t_eyx  = end_y * t_x;
 4167              		.loc 5 344 24 view .LVU928
 4168 011c 26EE096A 		vmul.f32	s12, s12, s18
 4169              	.LVL268:
 345:../../libdaisy/src/hid/disp/display.h ****                 t_exny = end_x * -t_y;
 4170              		.loc 5 345 24 view .LVU929
 4171 0120 66EE806A 		vmul.f32	s13, s13, s0
 4172              	.LVL269:
 346:../../libdaisy/src/hid/disp/display.h ****                 t_eynx = end_y * -t_x;
 4173              		.loc 5 346 24 view .LVU930
 4174 0124 67EE897A 		vmul.f32	s15, s15, s18
 4175              	.LVL270:
 347:../../libdaisy/src/hid/disp/display.h **** 
 4176              		.loc 5 347 24 view .LVU931
 4177 0128 27EE007A 		vmul.f32	s14, s14, s0
 4178              	.LVL271:
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4179              		.loc 5 351 46 view .LVU932
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 236


 4180 012c F5EEC03A 		vcmpe.f32	s7, #0
 349:../../libdaisy/src/hid/disp/display.h ****                 {
 4181              		.loc 5 349 17 view .LVU933
 4182 0130 40F3F280 		ble	.L234
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4183              		.loc 5 351 46 view .LVU934
 4184 0134 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4185 0138 00F17F81 		bmi	.L260
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4186              		.loc 5 351 55 discriminator 2 view .LVU935
 4187 013c 76EE473A 		vsub.f32	s7, s12, s14
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4188              		.loc 5 352 33 discriminator 2 view .LVU936
 4189 0140 74EEC54A 		vsub.f32	s9, s9, s10
 4190              	.LVL272:
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4191              		.loc 5 351 46 discriminator 2 view .LVU937
 4192 0144 F5EEC03A 		vcmpe.f32	s7, #0
 4193 0148 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4194              		.loc 5 352 45 discriminator 2 view .LVU938
 4195 014c F5EEC04A 		vcmpe.f32	s9, #0
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4196              		.loc 5 351 46 discriminator 2 view .LVU939
 4197 0150 CCBF     		ite	gt
 4198 0152 0122     		movgt	r2, #1
 4199 0154 0022     		movle	r2, #0
 4200              	.LVL273:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4201              		.loc 5 352 45 discriminator 2 view .LVU940
 4202 0156 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4203 015a 00F17781 		bmi	.L261
 4204              	.L303:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4205              		.loc 5 352 54 discriminator 2 view .LVU941
 4206 015e 36EE666A 		vsub.f32	s12, s12, s13
 4207              	.LVL274:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4208              		.loc 5 353 34 discriminator 2 view .LVU942
 4209 0162 35EEC55A 		vsub.f32	s10, s11, s10
 4210              	.LVL275:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4211              		.loc 5 352 45 discriminator 2 view .LVU943
 4212 0166 B5EEC06A 		vcmpe.f32	s12, #0
 4213 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4214              		.loc 5 353 46 discriminator 2 view .LVU944
 4215 016e B5EEC05A 		vcmpe.f32	s10, #0
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4216              		.loc 5 352 45 discriminator 2 view .LVU945
 4217 0172 CCBF     		ite	gt
 4218 0174 0121     		movgt	r1, #1
 4219 0176 0021     		movle	r1, #0
 4220              	.LVL276:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4221              		.loc 5 353 46 discriminator 2 view .LVU946
 4222 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 237


 4223 017c 00F16F81 		bmi	.L262
 4224              	.L304:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4225              		.loc 5 353 56 discriminator 2 view .LVU947
 4226 0180 77EEE66A 		vsub.f32	s13, s15, s13
 4227              	.LVL277:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4228              		.loc 5 353 46 discriminator 2 view .LVU948
 4229 0184 F5EEC06A 		vcmpe.f32	s13, #0
 4230 0188 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4231 018c CCBF     		ite	gt
 4232 018e 0127     		movgt	r7, #1
 4233              	.LVL278:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4234              		.loc 5 353 46 discriminator 2 view .LVU949
 4235 0190 0027     		movle	r7, #0
 4236              	.L237:
 4237              	.LVL279:
 354:../../libdaisy/src/hid/disp/display.h ****                 }
 4238              		.loc 5 354 34 discriminator 6 view .LVU950
 4239 0192 75EEC45A 		vsub.f32	s11, s11, s8
 4240              	.LVL280:
 354:../../libdaisy/src/hid/disp/display.h ****                 }
 4241              		.loc 5 354 47 discriminator 6 view .LVU951
 4242 0196 F5EEC05A 		vcmpe.f32	s11, #0
 4243 019a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4244 019e 00F14781 		bmi	.L263
 4245              	.L293:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 4246              		.loc 5 361 57 discriminator 1 view .LVU952
 4247 01a2 77EEC77A 		vsub.f32	s15, s15, s14
 4248              	.LVL281:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 4249              		.loc 5 361 47 discriminator 1 view .LVU953
 4250 01a6 F5EEC07A 		vcmpe.f32	s15, #0
 4251 01aa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4252 01ae CCBF     		ite	gt
 4253 01b0 0124     		movgt	r4, #1
 4254              	.LVL282:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 4255              		.loc 5 361 47 discriminator 1 view .LVU954
 4256 01b2 0024     		movle	r4, #0
 4257              	.LVL283:
 4258              	.L233:
 365:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4259              		.loc 5 365 13 view .LVU955
 4260 01b4 002A     		cmp	r2, #0
 4261 01b6 40F08A80 		bne	.L294
 4262              	.L245:
 368:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4263              		.loc 5 368 13 view .LVU956
 4264 01ba 0029     		cmp	r1, #0
 4265 01bc 64D1     		bne	.L295
 4266              	.L247:
 371:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4267              		.loc 5 371 13 view .LVU957
 4268 01be BFB9     		cbnz	r7, .L296
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 238


 4269              	.L249:
 374:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4270              		.loc 5 374 13 view .LVU958
 4271 01c0 C4BB     		cbnz	r4, .L297
 4272              	.L251:
 4273              	.LVL284:
 379:../../libdaisy/src/hid/disp/display.h ****             {
 4274              		.loc 5 379 13 view .LVU959
 4275 01c2 9C45     		cmp	ip, r3
 4276 01c4 58DB     		blt	.L268
 4277              	.L299:
 381:../../libdaisy/src/hid/disp/display.h ****                 err = err + (t_y * 2 + 1);
 4278              		.loc 5 381 17 view .LVU960
 4279 01c6 0CF1010C 		add	ip, ip, #1
 4280              	.LVL285:
 382:../../libdaisy/src/hid/disp/display.h ****                 if(-t_x == t_y && e2 <= t_x)
 4281              		.loc 5 382 38 view .LVU961
 4282 01ca 03EB4C0E 		add	lr, r3, ip, lsl #1
 383:../../libdaisy/src/hid/disp/display.h ****                 {
 4283              		.loc 5 383 17 view .LVU962
 4284 01ce 1CEB000F 		cmn	ip, r0
 382:../../libdaisy/src/hid/disp/display.h ****                 if(-t_x == t_y && e2 <= t_x)
 4285              		.loc 5 382 21 view .LVU963
 4286 01d2 0EF1010E 		add	lr, lr, #1
 4287              	.LVL286:
 383:../../libdaisy/src/hid/disp/display.h ****                 {
 4288              		.loc 5 383 17 view .LVU964
 4289 01d6 00F0C080 		beq	.L298
 4290              	.LVL287:
 4291              	.L253:
 388:../../libdaisy/src/hid/disp/display.h ****             {
 4292              		.loc 5 388 13 view .LVU965
 4293 01da 9842     		cmp	r0, r3
 4294 01dc 4FDB     		blt	.L254
 4295              	.L269:
 388:../../libdaisy/src/hid/disp/display.h ****             {
 4296              		.loc 5 388 13 view .LVU966
 4297 01de 7346     		mov	r3, lr
 4298              	.LVL288:
 4299              	.L255:
 393:../../libdaisy/src/hid/disp/display.h ****     }
 4300              		.loc 5 393 21 is_stmt 1 view .LVU967
 4301 01e0 0028     		cmp	r0, #0
 4302 01e2 7FF779AF 		ble	.L257
 4303              	.LVL289:
 4304              	.L228:
 394:../../libdaisy/src/hid/disp/display.h **** 
 4305              		.loc 5 394 5 is_stmt 0 view .LVU968
 4306 01e6 03B0     		add	sp, sp, #12
 4307              		.cfi_remember_state
 4308              		.cfi_def_cfa_offset 60
 4309              		@ sp needed
 4310 01e8 BDEC068B 		vldm	sp!, {d8-d10}
 4311              		.cfi_restore 84
 4312              		.cfi_restore 85
 4313              		.cfi_restore 82
 4314              		.cfi_restore 83
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 239


 4315              		.cfi_restore 80
 4316              		.cfi_restore 81
 4317              		.cfi_def_cfa_offset 36
 4318              	.LVL290:
 394:../../libdaisy/src/hid/disp/display.h **** 
 4319              		.loc 5 394 5 view .LVU969
 4320 01ec BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4321              	.LVL291:
 4322              	.L296:
 4323              		.cfi_restore_state
 373:../../libdaisy/src/hid/disp/display.h ****             if(d4)
 4324              		.loc 5 373 43 view .LVU970
 4325 01f0 009D     		ldr	r5, [sp]
 4326 01f2 A6EB0C0E 		sub	lr, r6, ip
 4327 01f6 00EB050A 		add	r10, r0, r5
 4328              	.LVL292:
 4329              	.LBB5597:
 4330              	.LBI5597:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 4331              		.loc 4 41 10 is_stmt 1 view .LVU971
 4332              	.LBB5598:
 4333              	.LBI5598:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4334              		.loc 15 239 10 view .LVU972
 4335              	.LBB5599:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4336              		.loc 15 241 9 is_stmt 0 view .LVU973
 4337 01fa BAF17F0F 		cmp	r10, #127
 4338 01fe DFD8     		bhi	.L249
 4339 0200 BEF13F0F 		cmp	lr, #63
 4340 0204 DCD8     		bhi	.L249
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4341              		.loc 15 244 28 view .LVU974
 4342 0206 4FEADE0B 		lsr	fp, lr, #3
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4343              		.loc 15 243 9 view .LVU975
 4344 020a 019D     		ldr	r5, [sp, #4]
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4345              		.loc 15 244 42 view .LVU976
 4346 020c 0AEBCB1A 		add	r10, r10, fp, lsl #7
 4347              	.LVL293:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4348              		.loc 15 243 9 view .LVU977
 4349 0210 002D     		cmp	r5, #0
 4350 0212 00F0B180 		beq	.L250
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4351              		.loc 15 244 54 view .LVU978
 4352 0216 0EF0070B 		and	fp, lr, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4353              		.loc 15 244 42 view .LVU979
 4354 021a C244     		add	r10, r10, r8
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4355              		.loc 15 244 48 view .LVU980
 4356 021c 4FF0010E 		mov	lr, #1
 4357              	.LVL294:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4358              		.loc 15 244 48 view .LVU981
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 240


 4359 0220 0EFA0BFE 		lsl	lr, lr, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4360              		.loc 15 244 42 view .LVU982
 4361 0224 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4362 0228 4EEA0B0E 		orr	lr, lr, fp
 4363 022c 8AF814E0 		strb	lr, [r10, #20]
 4364              	.LVL295:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4365              		.loc 15 244 42 view .LVU983
 4366              	.LBE5599:
 4367              	.LBE5598:
 4368              	.LBE5597:
 374:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4369              		.loc 5 374 13 view .LVU984
 4370 0230 002C     		cmp	r4, #0
 4371 0232 C6D0     		beq	.L251
 4372              	.L297:
 376:../../libdaisy/src/hid/disp/display.h **** 
 4373              		.loc 5 376 43 view .LVU985
 4374 0234 009D     		ldr	r5, [sp]
 4375 0236 A6EB0C0E 		sub	lr, r6, ip
 4376 023a A5EB000A 		sub	r10, r5, r0
 4377              	.LVL296:
 4378              	.LBB5604:
 4379              	.LBI5604:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 4380              		.loc 4 41 10 is_stmt 1 view .LVU986
 4381              	.LBB5605:
 4382              	.LBI5605:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4383              		.loc 15 239 10 view .LVU987
 4384              	.LBB5606:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4385              		.loc 15 241 9 is_stmt 0 view .LVU988
 4386 023e BAF17F0F 		cmp	r10, #127
 4387 0242 BED8     		bhi	.L251
 4388 0244 BEF13F0F 		cmp	lr, #63
 4389 0248 BBD8     		bhi	.L251
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4390              		.loc 15 244 28 view .LVU989
 4391 024a 4FEADE0B 		lsr	fp, lr, #3
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4392              		.loc 15 243 9 view .LVU990
 4393 024e 019D     		ldr	r5, [sp, #4]
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4394              		.loc 15 244 42 view .LVU991
 4395 0250 0AEBCB1A 		add	r10, r10, fp, lsl #7
 4396              	.LVL297:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4397              		.loc 15 243 9 view .LVU992
 4398 0254 002D     		cmp	r5, #0
 4399 0256 00F0AE80 		beq	.L252
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4400              		.loc 15 244 54 view .LVU993
 4401 025a 0EF0070B 		and	fp, lr, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4402              		.loc 15 244 42 view .LVU994
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 241


 4403 025e C244     		add	r10, r10, r8
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4404              		.loc 15 244 48 view .LVU995
 4405 0260 4FF0010E 		mov	lr, #1
 4406              	.LVL298:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4407              		.loc 15 244 48 view .LVU996
 4408              	.LBE5606:
 4409              	.LBE5605:
 4410              	.LBE5604:
 379:../../libdaisy/src/hid/disp/display.h ****             {
 4411              		.loc 5 379 13 view .LVU997
 4412 0264 9C45     		cmp	ip, r3
 4413              	.LBB5613:
 4414              	.LBB5611:
 4415              	.LBB5609:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4416              		.loc 15 244 48 view .LVU998
 4417 0266 0EFA0BFE 		lsl	lr, lr, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4418              		.loc 15 244 42 view .LVU999
 4419 026a 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4420 026e 4EEA0B0E 		orr	lr, lr, fp
 4421 0272 8AF814E0 		strb	lr, [r10, #20]
 4422              	.LVL299:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4423              		.loc 15 244 42 view .LVU1000
 4424              	.LBE5609:
 4425              	.LBE5611:
 4426              	.LBE5613:
 379:../../libdaisy/src/hid/disp/display.h ****             {
 4427              		.loc 5 379 13 view .LVU1001
 4428 0276 A6DA     		bge	.L299
 4429              	.L268:
 388:../../libdaisy/src/hid/disp/display.h ****             {
 4430              		.loc 5 388 13 view .LVU1002
 4431 0278 9842     		cmp	r0, r3
 4432 027a 9E46     		mov	lr, r3
 4433              	.LVL300:
 388:../../libdaisy/src/hid/disp/display.h ****             {
 4434              		.loc 5 388 13 view .LVU1003
 4435 027c AFDA     		bge	.L269
 4436              	.LVL301:
 4437              	.L254:
 390:../../libdaisy/src/hid/disp/display.h ****                 err = err + (t_x * 2 + 1);
 4438              		.loc 5 390 17 view .LVU1004
 4439 027e 0130     		adds	r0, r0, #1
 4440              	.LVL302:
 391:../../libdaisy/src/hid/disp/display.h ****             }
 4441              		.loc 5 391 38 view .LVU1005
 4442 0280 0EEB4003 		add	r3, lr, r0, lsl #1
 391:../../libdaisy/src/hid/disp/display.h ****             }
 4443              		.loc 5 391 21 view .LVU1006
 4444 0284 0133     		adds	r3, r3, #1
 4445              	.LVL303:
 391:../../libdaisy/src/hid/disp/display.h ****             }
 4446              		.loc 5 391 21 view .LVU1007
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 242


 4447 0286 ABE7     		b	.L255
 4448              	.L295:
 370:../../libdaisy/src/hid/disp/display.h ****             if(d3)
 4449              		.loc 5 370 43 view .LVU1008
 4450 0288 009D     		ldr	r5, [sp]
 4451 028a 0CEB060E 		add	lr, ip, r6
 4452 028e 00EB050A 		add	r10, r0, r5
 4453              	.LVL304:
 4454              	.LBB5614:
 4455              	.LBI5614:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 4456              		.loc 4 41 10 is_stmt 1 view .LVU1009
 4457              	.LBB5615:
 4458              	.LBI5615:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4459              		.loc 15 239 10 view .LVU1010
 4460              	.LBB5616:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4461              		.loc 15 241 9 is_stmt 0 view .LVU1011
 4462 0292 BAF17F0F 		cmp	r10, #127
 4463 0296 92D8     		bhi	.L247
 4464 0298 BEF13F0F 		cmp	lr, #63
 4465 029c 8FD8     		bhi	.L247
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4466              		.loc 15 244 28 view .LVU1012
 4467 029e 4FEADE0B 		lsr	fp, lr, #3
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4468              		.loc 15 243 9 view .LVU1013
 4469 02a2 019D     		ldr	r5, [sp, #4]
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4470              		.loc 15 244 42 view .LVU1014
 4471 02a4 0AEBCB1A 		add	r10, r10, fp, lsl #7
 4472              	.LVL305:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4473              		.loc 15 243 9 view .LVU1015
 4474 02a8 002D     		cmp	r5, #0
 4475 02aa 73D0     		beq	.L248
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4476              		.loc 15 244 54 view .LVU1016
 4477 02ac 0EF0070B 		and	fp, lr, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4478              		.loc 15 244 42 view .LVU1017
 4479 02b0 C244     		add	r10, r10, r8
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4480              		.loc 15 244 48 view .LVU1018
 4481 02b2 4FF0010E 		mov	lr, #1
 4482              	.LVL306:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4483              		.loc 15 244 48 view .LVU1019
 4484 02b6 0EFA0BFE 		lsl	lr, lr, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4485              		.loc 15 244 42 view .LVU1020
 4486 02ba 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4487 02be 4EEA0B0E 		orr	lr, lr, fp
 4488 02c2 8AF814E0 		strb	lr, [r10, #20]
 4489              	.LVL307:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 243


 4490              		.loc 15 244 42 view .LVU1021
 4491              	.LBE5616:
 4492              	.LBE5615:
 4493              	.LBE5614:
 371:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4494              		.loc 5 371 13 view .LVU1022
 4495 02c6 002F     		cmp	r7, #0
 4496 02c8 3FF47AAF 		beq	.L249
 4497 02cc 90E7     		b	.L296
 4498              	.L294:
 367:../../libdaisy/src/hid/disp/display.h ****             if(d2)
 4499              		.loc 5 367 43 view .LVU1023
 4500 02ce 009D     		ldr	r5, [sp]
 4501 02d0 0CEB060E 		add	lr, ip, r6
 4502 02d4 A5EB000A 		sub	r10, r5, r0
 4503              	.LVL308:
 4504              	.LBB5621:
 4505              	.LBI5621:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 4506              		.loc 4 41 10 is_stmt 1 view .LVU1024
 4507              	.LBB5622:
 4508              	.LBI5622:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4509              		.loc 15 239 10 view .LVU1025
 4510              	.LBB5623:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4511              		.loc 15 241 9 is_stmt 0 view .LVU1026
 4512 02d8 BAF17F0F 		cmp	r10, #127
 4513 02dc 3FF66DAF 		bhi	.L245
 4514 02e0 BEF13F0F 		cmp	lr, #63
 4515 02e4 3FF669AF 		bhi	.L245
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4516              		.loc 15 244 28 view .LVU1027
 4517 02e8 4FEADE0B 		lsr	fp, lr, #3
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4518              		.loc 15 243 9 view .LVU1028
 4519 02ec 019D     		ldr	r5, [sp, #4]
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4520              		.loc 15 244 42 view .LVU1029
 4521 02ee 0AEBCB1A 		add	r10, r10, fp, lsl #7
 4522              	.LVL309:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4523              		.loc 15 243 9 view .LVU1030
 4524 02f2 002D     		cmp	r5, #0
 4525 02f4 6DD0     		beq	.L246
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4526              		.loc 15 244 54 view .LVU1031
 4527 02f6 0EF0070B 		and	fp, lr, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4528              		.loc 15 244 42 view .LVU1032
 4529 02fa C244     		add	r10, r10, r8
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4530              		.loc 15 244 48 view .LVU1033
 4531 02fc 4FF0010E 		mov	lr, #1
 4532              	.LVL310:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4533              		.loc 15 244 48 view .LVU1034
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 244


 4534 0300 0EFA0BFE 		lsl	lr, lr, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4535              		.loc 15 244 42 view .LVU1035
 4536 0304 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4537 0308 4EEA0B0E 		orr	lr, lr, fp
 4538 030c 8AF814E0 		strb	lr, [r10, #20]
 4539              	.LVL311:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4540              		.loc 15 244 42 view .LVU1036
 4541              	.LBE5623:
 4542              	.LBE5622:
 4543              	.LBE5621:
 368:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4544              		.loc 5 368 13 view .LVU1037
 4545 0310 0029     		cmp	r1, #0
 4546 0312 3FF454AF 		beq	.L247
 4547 0316 B7E7     		b	.L295
 4548              	.LVL312:
 4549              	.L234:
 358:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
 4550              		.loc 5 358 46 view .LVU1038
 4551 0318 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4552 031c 7ED4     		bmi	.L300
 4553 031e 4A46     		mov	r2, r9
 4554              	.L238:
 4555              	.LVL313:
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 4556              		.loc 5 359 33 discriminator 6 view .LVU1039
 4557 0320 74EEC54A 		vsub.f32	s9, s9, s10
 4558              	.LVL314:
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 4559              		.loc 5 359 45 discriminator 6 view .LVU1040
 4560 0324 F5EEC04A 		vcmpe.f32	s9, #0
 4561 0328 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4562 032c 6CD4     		bmi	.L301
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 4563              		.loc 5 359 45 view .LVU1041
 4564 032e 0021     		movs	r1, #0
 4565              	.LVL315:
 4566              	.L240:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 4567              		.loc 5 360 34 discriminator 6 view .LVU1042
 4568 0330 35EEC55A 		vsub.f32	s10, s11, s10
 4569              	.LVL316:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 4570              		.loc 5 360 46 discriminator 6 view .LVU1043
 4571 0334 B5EEC05A 		vcmpe.f32	s10, #0
 4572 0338 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4573 033c 5AD4     		bmi	.L302
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 4574              		.loc 5 360 46 view .LVU1044
 4575 033e 0027     		movs	r7, #0
 4576              	.LVL317:
 4577              	.L242:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 4578              		.loc 5 361 34 discriminator 6 view .LVU1045
 4579 0340 75EEC45A 		vsub.f32	s11, s11, s8
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 245


 4580              	.LVL318:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 4581              		.loc 5 361 47 discriminator 6 view .LVU1046
 4582 0344 F5EEC05A 		vcmpe.f32	s11, #0
 4583 0348 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4584 034c 3FF529AF 		bmi	.L293
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 4585              		.loc 5 361 47 view .LVU1047
 4586 0350 0024     		movs	r4, #0
 4587              	.LVL319:
 365:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4588              		.loc 5 365 13 view .LVU1048
 4589 0352 002A     		cmp	r2, #0
 4590 0354 3FF431AF 		beq	.L245
 4591 0358 B9E7     		b	.L294
 4592              	.LVL320:
 4593              	.L298:
 383:../../libdaisy/src/hid/disp/display.h ****                 {
 4594              		.loc 5 383 32 discriminator 1 view .LVU1049
 4595 035a 9842     		cmp	r0, r3
 4596 035c 8FDB     		blt	.L254
 385:../../libdaisy/src/hid/disp/display.h ****                 }
 4597              		.loc 5 385 24 view .LVU1050
 4598 035e 0023     		movs	r3, #0
 4599              	.LVL321:
 385:../../libdaisy/src/hid/disp/display.h ****                 }
 4600              		.loc 5 385 24 view .LVU1051
 4601 0360 3BE7     		b	.L253
 4602              	.L306:
 4603 0362 00BFAFF3 		.align	3
 4603      0080
 4604              	.L305:
 4605 0368 7A008BFC 		.word	-57999238
 4606 036c FA210940 		.word	1074340346
 4607 0370 00000000 		.word	0
 4608 0374 00806640 		.word	1080459264
 4609              	.LVL322:
 4610              	.L250:
 4611              	.LBB5628:
 4612              	.LBB5603:
 4613              	.LBB5602:
 4614              	.LBB5600:
 4615              	.LBI5600:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4616              		.loc 15 239 10 is_stmt 1 view .LVU1052
 4617              	.LBB5601:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4618              		.loc 15 246 42 is_stmt 0 view .LVU1053
 4619 0378 C244     		add	r10, r10, r8
 4620              	.LVL323:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4621              		.loc 15 246 49 view .LVU1054
 4622 037a 4FF0010B 		mov	fp, #1
 4623              	.LVL324:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4624              		.loc 15 246 55 view .LVU1055
 4625 037e 0EF0070E 		and	lr, lr, #7
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 246


 4626              	.LVL325:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4627              		.loc 15 246 49 view .LVU1056
 4628 0382 0BFA0EFE 		lsl	lr, fp, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4629              		.loc 15 246 42 view .LVU1057
 4630 0386 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4631 038a 2BEA0E0E 		bic	lr, fp, lr
 4632 038e 8AF814E0 		strb	lr, [r10, #20]
 4633              	.LVL326:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4634              		.loc 15 246 42 view .LVU1058
 4635 0392 15E7     		b	.L249
 4636              	.LVL327:
 4637              	.L248:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4638              		.loc 15 246 42 view .LVU1059
 4639              	.LBE5601:
 4640              	.LBE5600:
 4641              	.LBE5602:
 4642              	.LBE5603:
 4643              	.LBE5628:
 4644              	.LBB5629:
 4645              	.LBB5620:
 4646              	.LBB5619:
 4647              	.LBB5617:
 4648              	.LBI5617:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4649              		.loc 15 239 10 is_stmt 1 view .LVU1060
 4650              	.LBB5618:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4651              		.loc 15 246 42 is_stmt 0 view .LVU1061
 4652 0394 C244     		add	r10, r10, r8
 4653              	.LVL328:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4654              		.loc 15 246 49 view .LVU1062
 4655 0396 4FF0010B 		mov	fp, #1
 4656              	.LVL329:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4657              		.loc 15 246 55 view .LVU1063
 4658 039a 0EF0070E 		and	lr, lr, #7
 4659              	.LVL330:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4660              		.loc 15 246 49 view .LVU1064
 4661 039e 0BFA0EFE 		lsl	lr, fp, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4662              		.loc 15 246 42 view .LVU1065
 4663 03a2 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4664 03a6 2BEA0E0E 		bic	lr, fp, lr
 4665 03aa 8AF814E0 		strb	lr, [r10, #20]
 4666              	.LVL331:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4667              		.loc 15 246 42 view .LVU1066
 4668              	.LBE5618:
 4669              	.LBE5617:
 4670              	.LBE5619:
 4671              	.LBE5620:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 247


 4672              	.LBE5629:
 371:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4673              		.loc 5 371 13 view .LVU1067
 4674 03ae 002F     		cmp	r7, #0
 4675 03b0 3FF406AF 		beq	.L249
 4676 03b4 1CE7     		b	.L296
 4677              	.LVL332:
 4678              	.L252:
 4679              	.LBB5630:
 4680              	.LBB5612:
 4681              	.LBB5610:
 4682              	.LBB5607:
 4683              	.LBI5607:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4684              		.loc 15 239 10 is_stmt 1 view .LVU1068
 4685              	.LBB5608:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4686              		.loc 15 246 42 is_stmt 0 view .LVU1069
 4687 03b6 C244     		add	r10, r10, r8
 4688              	.LVL333:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4689              		.loc 15 246 49 view .LVU1070
 4690 03b8 4FF0010B 		mov	fp, #1
 4691              	.LVL334:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4692              		.loc 15 246 55 view .LVU1071
 4693 03bc 0EF0070E 		and	lr, lr, #7
 4694              	.LVL335:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4695              		.loc 15 246 49 view .LVU1072
 4696 03c0 0BFA0EFE 		lsl	lr, fp, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4697              		.loc 15 246 42 view .LVU1073
 4698 03c4 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4699 03c8 2BEA0E0E 		bic	lr, fp, lr
 4700 03cc 8AF814E0 		strb	lr, [r10, #20]
 4701              	.LVL336:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4702              		.loc 15 246 42 view .LVU1074
 4703 03d0 F7E6     		b	.L251
 4704              	.LVL337:
 4705              	.L246:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4706              		.loc 15 246 42 view .LVU1075
 4707              	.LBE5608:
 4708              	.LBE5607:
 4709              	.LBE5610:
 4710              	.LBE5612:
 4711              	.LBE5630:
 4712              	.LBB5631:
 4713              	.LBB5627:
 4714              	.LBB5626:
 4715              	.LBB5624:
 4716              	.LBI5624:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4717              		.loc 15 239 10 is_stmt 1 view .LVU1076
 4718              	.LBB5625:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 248


 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4719              		.loc 15 246 42 is_stmt 0 view .LVU1077
 4720 03d2 C244     		add	r10, r10, r8
 4721              	.LVL338:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4722              		.loc 15 246 49 view .LVU1078
 4723 03d4 4FF0010B 		mov	fp, #1
 4724              	.LVL339:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4725              		.loc 15 246 55 view .LVU1079
 4726 03d8 0EF0070E 		and	lr, lr, #7
 4727              	.LVL340:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4728              		.loc 15 246 49 view .LVU1080
 4729 03dc 0BFA0EFE 		lsl	lr, fp, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4730              		.loc 15 246 42 view .LVU1081
 4731 03e0 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 4732 03e4 2BEA0E0E 		bic	lr, fp, lr
 4733 03e8 8AF814E0 		strb	lr, [r10, #20]
 4734              	.LVL341:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4735              		.loc 15 246 42 view .LVU1082
 4736              	.LBE5625:
 4737              	.LBE5624:
 4738              	.LBE5626:
 4739              	.LBE5627:
 4740              	.LBE5631:
 368:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4741              		.loc 5 368 13 view .LVU1083
 4742 03ec 0029     		cmp	r1, #0
 4743 03ee 3FF4E6AE 		beq	.L247
 4744 03f2 49E7     		b	.L295
 4745              	.LVL342:
 4746              	.L302:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 4747              		.loc 5 360 56 discriminator 1 view .LVU1084
 4748 03f4 77EEE66A 		vsub.f32	s13, s15, s13
 4749              	.LVL343:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 4750              		.loc 5 360 46 discriminator 1 view .LVU1085
 4751 03f8 F5EEC06A 		vcmpe.f32	s13, #0
 4752 03fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4753 0400 CCBF     		ite	gt
 4754 0402 0127     		movgt	r7, #1
 4755              	.LVL344:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 4756              		.loc 5 360 46 discriminator 1 view .LVU1086
 4757 0404 0027     		movle	r7, #0
 4758 0406 9BE7     		b	.L242
 4759              	.LVL345:
 4760              	.L301:
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 4761              		.loc 5 359 54 discriminator 1 view .LVU1087
 4762 0408 36EE666A 		vsub.f32	s12, s12, s13
 4763              	.LVL346:
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 249


 4764              		.loc 5 359 45 discriminator 1 view .LVU1088
 4765 040c B5EEC06A 		vcmpe.f32	s12, #0
 4766 0410 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4767 0414 CCBF     		ite	gt
 4768 0416 0121     		movgt	r1, #1
 4769 0418 0021     		movle	r1, #0
 4770 041a 89E7     		b	.L240
 4771              	.LVL347:
 4772              	.L300:
 358:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
 4773              		.loc 5 358 55 discriminator 1 view .LVU1089
 4774 041c 76EE473A 		vsub.f32	s7, s12, s14
 358:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
 4775              		.loc 5 358 46 discriminator 1 view .LVU1090
 4776 0420 F5EEC03A 		vcmpe.f32	s7, #0
 4777 0424 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4778 0428 CCBF     		ite	gt
 4779 042a 0122     		movgt	r2, #1
 4780 042c 0022     		movle	r2, #0
 4781 042e 77E7     		b	.L238
 4782              	.LVL348:
 4783              	.L263:
 354:../../libdaisy/src/hid/disp/display.h ****                 }
 4784              		.loc 5 354 47 view .LVU1091
 4785 0430 0124     		movs	r4, #1
 4786              	.LVL349:
 365:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4787              		.loc 5 365 13 view .LVU1092
 4788 0432 002A     		cmp	r2, #0
 4789 0434 3FF4C1AE 		beq	.L245
 365:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4790              		.loc 5 365 13 view .LVU1093
 4791 0438 49E7     		b	.L294
 4792              	.LVL350:
 4793              	.L260:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4794              		.loc 5 352 33 view .LVU1094
 4795 043a 74EEC54A 		vsub.f32	s9, s9, s10
 4796              	.LVL351:
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4797              		.loc 5 351 46 view .LVU1095
 4798 043e 0122     		movs	r2, #1
 4799              	.LVL352:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4800              		.loc 5 352 45 view .LVU1096
 4801 0440 F5EEC04A 		vcmpe.f32	s9, #0
 4802 0444 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4803 0448 7FF589AE 		bpl	.L303
 4804              	.L261:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4805              		.loc 5 353 34 view .LVU1097
 4806 044c 35EEC55A 		vsub.f32	s10, s11, s10
 4807              	.LVL353:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4808              		.loc 5 352 45 view .LVU1098
 4809 0450 0121     		movs	r1, #1
 4810              	.LVL354:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 250


 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4811              		.loc 5 353 46 view .LVU1099
 4812 0452 B5EEC05A 		vcmpe.f32	s10, #0
 4813 0456 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4814 045a 7FF591AE 		bpl	.L304
 4815              	.LVL355:
 4816              	.L262:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4817              		.loc 5 353 46 view .LVU1100
 4818 045e 0127     		movs	r7, #1
 4819              	.LVL356:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4820              		.loc 5 353 46 view .LVU1101
 4821 0460 97E6     		b	.L237
 4822              	.LVL357:
 4823              	.L229:
 308:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 4824              		.loc 5 308 25 view .LVU1102
 4825 0462 DDE91223 		ldrd	r2, r3, [sp, #72]
 4826              	.LVL358:
 308:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 4827              		.loc 5 308 25 view .LVU1103
 4828 0466 1344     		add	r3, r3, r2
 4829              	.LVL359:
 308:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 4830              		.loc 5 308 25 view .LVU1104
 4831 0468 06EE102A 		vmov	s12, r2	@ int
 4832 046c 1293     		str	r3, [sp, #72]
 4833 046e 139B     		ldr	r3, [sp, #76]
 4834              	.LVL360:
 308:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 4835              		.loc 5 308 25 view .LVU1105
 4836 0470 5B42     		rsbs	r3, r3, #0
 4837 0472 1393     		str	r3, [sp, #76]
 4838              	.LVL361:
 308:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 4839              		.loc 5 308 25 view .LVU1106
 4840 0474 D8E5     		b	.L230
 4841              		.cfi_endproc
 4842              	.LFE6191:
 4844 0476 00BF     		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 4845              		.align	1
 4846              		.p2align 2,,3
 4847              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 4848              		.syntax unified
 4849              		.thumb
 4850              		.thumb_func
 4851              		.fpu fpv5-d16
 4853              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 4854              	.LVL362:
 4855              	.LFB6192:
 459:../../libdaisy/src/hid/disp/display.h **** 
 460:../../libdaisy/src/hid/disp/display.h ****     Rectangle WriteStringAligned(const char*    str,
 4856              		.loc 5 460 15 is_stmt 1 view -0
 4857              		.cfi_startproc
 4858              		@ args = 12, pretend = 0, frame = 32
 4859              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 251


 4860              		.loc 5 460 15 is_stmt 0 view .LVU1108
 4861 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4862              		.cfi_def_cfa_offset 36
 4863              		.cfi_offset 4, -36
 4864              		.cfi_offset 5, -32
 4865              		.cfi_offset 6, -28
 4866              		.cfi_offset 7, -24
 4867              		.cfi_offset 8, -20
 4868              		.cfi_offset 9, -16
 4869              		.cfi_offset 10, -12
 4870              		.cfi_offset 11, -8
 4871              		.cfi_offset 14, -4
 4872 0004 89B0     		sub	sp, sp, #36
 4873              		.cfi_def_cfa_offset 72
 4874              		.loc 5 460 15 view .LVU1109
 4875 0006 1D46     		mov	r5, r3
 4876 0008 8846     		mov	r8, r1
 4877              	.LVL363:
 4878              	.LBB5770:
 4879              	.LBI5770:
 461:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 462:../../libdaisy/src/hid/disp/display.h ****                                  Rectangle      boundingBox,
 463:../../libdaisy/src/hid/disp/display.h ****                                  Alignment      alignment,
 464:../../libdaisy/src/hid/disp/display.h ****                                  bool           on) override
 465:../../libdaisy/src/hid/disp/display.h ****     {
 466:../../libdaisy/src/hid/disp/display.h ****         const auto alignedRect
 467:../../libdaisy/src/hid/disp/display.h ****             = GetTextRect(str, font).AlignedWithin(boundingBox, alignment);
 468:../../libdaisy/src/hid/disp/display.h ****         SetCursor(alignedRect.GetX(), alignedRect.GetY());
 469:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 470:../../libdaisy/src/hid/disp/display.h ****         return alignedRect;
 471:../../libdaisy/src/hid/disp/display.h ****     }
 472:../../libdaisy/src/hid/disp/display.h **** 
 473:../../libdaisy/src/hid/disp/display.h ****   private:
 474:../../libdaisy/src/hid/disp/display.h ****     uint32_t strlen(const char* string)
 475:../../libdaisy/src/hid/disp/display.h ****     {
 476:../../libdaisy/src/hid/disp/display.h ****         uint32_t result = 0;
 477:../../libdaisy/src/hid/disp/display.h ****         while(*string++ != '\0')
 478:../../libdaisy/src/hid/disp/display.h ****             result++;
 479:../../libdaisy/src/hid/disp/display.h ****         return result;
 480:../../libdaisy/src/hid/disp/display.h ****     }
 481:../../libdaisy/src/hid/disp/display.h **** 
 482:../../libdaisy/src/hid/disp/display.h ****     Rectangle GetTextRect(const char* text, const FontDef& font)
 4880              		.loc 5 482 15 is_stmt 1 view .LVU1110
 4881              	.LBB5771:
 4882              	.LBB5772:
 4883              	.LBI5772:
 474:../../libdaisy/src/hid/disp/display.h ****     {
 4884              		.loc 5 474 14 view .LVU1111
 4885              	.LBB5773:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 4886              		.loc 5 477 25 view .LVU1112
 4887              	.LBE5773:
 4888              	.LBE5772:
 4889              	.LBE5771:
 4890              	.LBE5770:
 460:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 4891              		.loc 5 460 15 is_stmt 0 view .LVU1113
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 252


 4892 000a 0690     		str	r0, [sp, #24]
 4893              	.LBB5788:
 4894              	.LBB5784:
 4895              	.LBB5777:
 4896              	.LBB5774:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 4897              		.loc 5 477 25 view .LVU1114
 4898 000c 1046     		mov	r0, r2
 4899              	.LVL364:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 4900              		.loc 5 477 25 view .LVU1115
 4901              	.LBE5774:
 4902              	.LBE5777:
 4903              	.LBE5784:
 4904              	.LBE5788:
 460:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 4905              		.loc 5 460 15 view .LVU1116
 4906 000e 129C     		ldr	r4, [sp, #72]
 4907              	.LBB5789:
 4908              	.LBB5785:
 4909              	.LBB5778:
 4910              	.LBB5775:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 4911              		.loc 5 477 25 view .LVU1117
 4912 0010 10F8013B 		ldrb	r3, [r0], #1	@ zero_extendqisi2
 4913              	.LVL365:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 4914              		.loc 5 477 25 view .LVU1118
 4915              	.LBE5775:
 4916              	.LBE5778:
 4917              	.LBE5785:
 4918              	.LBE5789:
 460:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 4919              		.loc 5 460 15 view .LVU1119
 4920 0014 1399     		ldr	r1, [sp, #76]
 4921              	.LVL366:
 460:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 4922              		.loc 5 460 15 view .LVU1120
 4923 0016 9DF85060 		ldrb	r6, [sp, #80]	@ zero_extendqisi2
 4924 001a 0092     		str	r2, [sp]
 4925              	.LBB5790:
 4926              	.LBB5786:
 4927              	.LBB5779:
 4928              	.LBB5776:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 4929              		.loc 5 477 25 view .LVU1121
 4930 001c 33B1     		cbz	r3, .L308
 476:../../libdaisy/src/hid/disp/display.h ****         while(*string++ != '\0')
 4931              		.loc 5 476 18 view .LVU1122
 4932 001e 0022     		movs	r2, #0
 4933              	.LVL367:
 4934              	.L309:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 4935              		.loc 5 477 25 view .LVU1123
 4936 0020 10F8013B 		ldrb	r3, [r0], #1	@ zero_extendqisi2
 4937              	.LVL368:
 478:../../libdaisy/src/hid/disp/display.h ****         return result;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 253


 4938              		.loc 5 478 13 view .LVU1124
 4939 0024 0132     		adds	r2, r2, #1
 4940              	.LVL369:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 4941              		.loc 5 477 25 is_stmt 1 view .LVU1125
 4942 0026 002B     		cmp	r3, #0
 4943 0028 FAD1     		bne	.L309
 4944              	.LBE5776:
 4945              	.LBE5779:
 483:../../libdaisy/src/hid/disp/display.h ****     {
 484:../../libdaisy/src/hid/disp/display.h ****         const auto numChars = strlen(text);
 485:../../libdaisy/src/hid/disp/display.h ****         return {int16_t(numChars * font.FontWidth), font.FontHeight};
 4946              		.loc 5 485 68 is_stmt 0 view .LVU1126
 4947 002a 93B2     		uxth	r3, r2
 4948              	.LVL370:
 4949              	.L308:
 4950              		.loc 5 485 68 view .LVU1127
 4951 002c 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 4952              		.loc 5 485 58 view .LVU1128
 4953 002e 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 4954              		.loc 5 485 68 view .LVU1129
 4955 0030 12FB03F3 		smulbb	r3, r2, r3
 4956 0034 02B2     		sxth	r2, r0
 4957              	.LVL371:
 4958              	.LBB5780:
 4959              	.LBI5780:
 4960              		.file 33 "../../libdaisy/src/hid/disp/graphics_common.h"
   1:../../libdaisy/src/hid/disp/graphics_common.h **** #pragma once
   2:../../libdaisy/src/hid/disp/graphics_common.h **** 
   3:../../libdaisy/src/hid/disp/graphics_common.h **** #include <cstdint>
   4:../../libdaisy/src/hid/disp/graphics_common.h **** 
   5:../../libdaisy/src/hid/disp/graphics_common.h **** namespace daisy
   6:../../libdaisy/src/hid/disp/graphics_common.h **** {
   7:../../libdaisy/src/hid/disp/graphics_common.h **** /** Justifications */
   8:../../libdaisy/src/hid/disp/graphics_common.h **** enum class Alignment
   9:../../libdaisy/src/hid/disp/graphics_common.h **** {
  10:../../libdaisy/src/hid/disp/graphics_common.h ****     centered,
  11:../../libdaisy/src/hid/disp/graphics_common.h ****     topLeft,
  12:../../libdaisy/src/hid/disp/graphics_common.h ****     topCentered,
  13:../../libdaisy/src/hid/disp/graphics_common.h ****     topRight,
  14:../../libdaisy/src/hid/disp/graphics_common.h ****     bottomLeft,
  15:../../libdaisy/src/hid/disp/graphics_common.h ****     bottomCentered,
  16:../../libdaisy/src/hid/disp/graphics_common.h ****     bottomRight,
  17:../../libdaisy/src/hid/disp/graphics_common.h ****     centeredLeft,
  18:../../libdaisy/src/hid/disp/graphics_common.h ****     centeredRight
  19:../../libdaisy/src/hid/disp/graphics_common.h **** };
  20:../../libdaisy/src/hid/disp/graphics_common.h **** 
  21:../../libdaisy/src/hid/disp/graphics_common.h **** class Rectangle
  22:../../libdaisy/src/hid/disp/graphics_common.h **** {
  23:../../libdaisy/src/hid/disp/graphics_common.h ****   public:
  24:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle() : x_(0), y_(0), width_(0), height_(0) {}
  25:../../libdaisy/src/hid/disp/graphics_common.h **** 
  26:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle(int16_t width, int16_t height)
 4961              		.loc 33 26 5 is_stmt 1 view .LVU1130
 4962              	.LBB5781:
 4963              	.LBI5781:
  27:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(0), y_(0), width_(max(0, width)), height_(max(0, height))
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 254


  28:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  29:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  30:../../libdaisy/src/hid/disp/graphics_common.h **** 
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle(int16_t x, int16_t y, int16_t width, int16_t height)
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
  33:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  34:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  35:../../libdaisy/src/hid/disp/graphics_common.h **** 
  36:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle(const Rectangle& other) { *this = other; }
  37:../../libdaisy/src/hid/disp/graphics_common.h **** 
  38:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle& operator=(const Rectangle& other)
  39:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  40:../../libdaisy/src/hid/disp/graphics_common.h ****         x_      = other.x_;
  41:../../libdaisy/src/hid/disp/graphics_common.h ****         y_      = other.y_;
  42:../../libdaisy/src/hid/disp/graphics_common.h ****         width_  = other.width_;
  43:../../libdaisy/src/hid/disp/graphics_common.h ****         height_ = other.height_;
  44:../../libdaisy/src/hid/disp/graphics_common.h ****         return *this;
  45:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  46:../../libdaisy/src/hid/disp/graphics_common.h **** 
  47:../../libdaisy/src/hid/disp/graphics_common.h ****     bool operator==(const Rectangle& other) const
  48:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  49:../../libdaisy/src/hid/disp/graphics_common.h ****         return (x_ == other.x_) && (y_ == other.y_) && (width_ == other.width_)
  50:../../libdaisy/src/hid/disp/graphics_common.h ****                && (height_ == other.height_);
  51:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  52:../../libdaisy/src/hid/disp/graphics_common.h ****     bool operator!=(const Rectangle& other) const { return !(*this == other); }
  53:../../libdaisy/src/hid/disp/graphics_common.h **** 
  54:../../libdaisy/src/hid/disp/graphics_common.h ****     bool IsEmpty() const { return (width_ <= 0) || (height_ <= 0); }
  55:../../libdaisy/src/hid/disp/graphics_common.h **** 
  56:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetX() const { return x_; }
  57:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetY() const { return y_; }
  58:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetWidth() const { return width_; }
  59:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetHeight() const { return height_; }
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetRight() const { return x_ + width_; }
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
  63:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
  64:../../libdaisy/src/hid/disp/graphics_common.h **** 
  65:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithX(int16_t x) const { return {x, y_, width_, height_}; }
  66:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithY(int16_t y) const { return {x_, y, width_, height_}; }
  67:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithWidth(int16_t width) const
  68:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  69:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width, height_};
  70:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  71:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithHeight(int16_t height) const
  72:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  73:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width_, height};
  74:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  75:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithSize(int16_t width, int16_t height) const
  76:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  77:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width, height};
  78:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  79:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithWidthKeepingCenter(int16_t width) const
  80:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  81:../../libdaisy/src/hid/disp/graphics_common.h ****         return Rectangle(x_, y_, width, height_)
  82:../../libdaisy/src/hid/disp/graphics_common.h ****             .WithCenter(GetCenterX(), GetCenterY());
  83:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  84:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithHeightKeepingCenter(int16_t height) const
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 255


  85:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  86:../../libdaisy/src/hid/disp/graphics_common.h ****         return Rectangle(x_, y_, width_, height)
  87:../../libdaisy/src/hid/disp/graphics_common.h ****             .WithCenter(GetCenterX(), GetCenterY());
  88:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  89:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithSizeKeepingCenter(int16_t width, int16_t height) const
  90:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  91:../../libdaisy/src/hid/disp/graphics_common.h ****         return Rectangle(x_, y_, width, height)
  92:../../libdaisy/src/hid/disp/graphics_common.h ****             .WithCenter(GetCenterX(), GetCenterY());
  93:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  94:../../libdaisy/src/hid/disp/graphics_common.h **** 
  95:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle Reduced(int16_t sizeToReduce) const
  96:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  97:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + sizeToReduce),
  98:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(y_ + sizeToReduce),
  99:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(width_ - 2 * sizeToReduce),
 100:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(height_ - 2 * sizeToReduce)};
 101:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 102:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle Reduced(int16_t xToReduce, int16_t yToReduce) const
 103:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 104:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + xToReduce),
 105:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(y_ + yToReduce),
 106:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(width_ - 2 * xToReduce),
 107:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(height_ - 2 * yToReduce)};
 108:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 109:../../libdaisy/src/hid/disp/graphics_common.h **** 
 110:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle Translated(int16_t x, int16_t y) const
 111:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 112:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + x), int16_t(y_ + y), width_, height_};
 113:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 114:../../libdaisy/src/hid/disp/graphics_common.h **** 
 115:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithLeft(int16_t left) const
 116:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 117:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto newWidth = int16_t((x_ - left) + width_);
 118:../../libdaisy/src/hid/disp/graphics_common.h ****         return {left, y_, newWidth, height_};
 119:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 120:../../libdaisy/src/hid/disp/graphics_common.h **** 
 121:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithRight(int16_t right) const
 122:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 123:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto newWidth = int16_t(right - x_);
 124:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, newWidth, height_};
 125:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 126:../../libdaisy/src/hid/disp/graphics_common.h **** 
 127:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTop(int16_t top) const
 128:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 129:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto newHeight = int16_t((y_ - top) + height_);
 130:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, top, width_, newHeight};
 131:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 132:../../libdaisy/src/hid/disp/graphics_common.h **** 
 133:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithBottom(int16_t bottom) const
 134:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 135:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto newHeight = int16_t(bottom - y_);
 136:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width_, newHeight};
 137:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 138:../../libdaisy/src/hid/disp/graphics_common.h **** 
 139:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTrimmedLeft(int16_t pxToTrim) const
 140:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 141:../../libdaisy/src/hid/disp/graphics_common.h ****         return {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 256


 142:../../libdaisy/src/hid/disp/graphics_common.h ****             int16_t(x_ + pxToTrim), y_, int16_t(width_ - pxToTrim), height_};
 143:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 144:../../libdaisy/src/hid/disp/graphics_common.h **** 
 145:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTrimmedRight(int16_t pxToTrim) const
 146:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 147:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, int16_t(width_ - pxToTrim), height_};
 148:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 149:../../libdaisy/src/hid/disp/graphics_common.h **** 
 150:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTrimmedTop(int16_t pxToTrim) const
 151:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 152:../../libdaisy/src/hid/disp/graphics_common.h ****         return {
 153:../../libdaisy/src/hid/disp/graphics_common.h ****             x_, int16_t(y_ + pxToTrim), width_, int16_t(height_ - pxToTrim)};
 154:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 155:../../libdaisy/src/hid/disp/graphics_common.h **** 
 156:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTrimmedBottom(int16_t pxToTrim) const
 157:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 158:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width_, int16_t(height_ - pxToTrim)};
 159:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 160:../../libdaisy/src/hid/disp/graphics_common.h **** 
 161:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithCenterX(int16_t centerX) const
 162:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 163:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + centerX - GetCenterX()), y_, width_, height_};
 164:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 165:../../libdaisy/src/hid/disp/graphics_common.h **** 
 166:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithCenterY(int16_t centerY) const
 167:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 168:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, int16_t(y_ + centerY - GetCenterY()), width_, height_};
 169:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 170:../../libdaisy/src/hid/disp/graphics_common.h **** 
 171:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithCenter(int16_t centerX, int16_t centerY) const
 172:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 173:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + centerX - GetCenterX()),
 174:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(y_ + centerY - GetCenterY()),
 175:../../libdaisy/src/hid/disp/graphics_common.h ****                 width_,
 176:../../libdaisy/src/hid/disp/graphics_common.h ****                 height_};
 177:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 178:../../libdaisy/src/hid/disp/graphics_common.h **** 
 179:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle RemoveFromLeft(int16_t pxToRemove)
 180:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 181:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto result = this->WithWidth(min(pxToRemove, width_));
 182:../../libdaisy/src/hid/disp/graphics_common.h ****         x_ += min(pxToRemove, width_);
 183:../../libdaisy/src/hid/disp/graphics_common.h ****         width_ = max(int16_t(width_ - pxToRemove), 0);
 184:../../libdaisy/src/hid/disp/graphics_common.h ****         return result;
 185:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 186:../../libdaisy/src/hid/disp/graphics_common.h **** 
 187:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle RemoveFromRight(int16_t pxToRemove)
 188:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 189:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto canRemove = min(pxToRemove, width_);
 190:../../libdaisy/src/hid/disp/graphics_common.h ****         width_ -= canRemove;
 191:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + width_), y_, canRemove, height_};
 192:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 193:../../libdaisy/src/hid/disp/graphics_common.h **** 
 194:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle RemoveFromTop(int16_t pxToRemove)
 195:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 196:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto result = this->WithHeight(min(pxToRemove, height_));
 197:../../libdaisy/src/hid/disp/graphics_common.h ****         y_ += min(pxToRemove, height_);
 198:../../libdaisy/src/hid/disp/graphics_common.h ****         height_ = max(height_ - pxToRemove, 0);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 257


 199:../../libdaisy/src/hid/disp/graphics_common.h ****         return result;
 200:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 201:../../libdaisy/src/hid/disp/graphics_common.h **** 
 202:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle RemoveFromBottom(int16_t pxToRemove)
 203:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 204:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto canRemove = min(pxToRemove, height_);
 205:../../libdaisy/src/hid/disp/graphics_common.h ****         height_ -= canRemove;
 206:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, int16_t(y_ + height_), width_, canRemove};
 207:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 208:../../libdaisy/src/hid/disp/graphics_common.h **** 
 209:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle AlignedWithin(const Rectangle& other, Alignment alignment) const
 210:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 211:../../libdaisy/src/hid/disp/graphics_common.h ****         switch(alignment)
 212:../../libdaisy/src/hid/disp/graphics_common.h ****         {
 213:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topLeft:
 214:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_, other.y_, width_, height_};
 215:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topRight:
 216:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 217:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 218:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 219:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 220:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topCentered:
 221:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 222:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 223:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 224:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 225:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::bottomLeft:
 226:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_,
 227:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 228:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 229:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 230:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::bottomRight:
 231:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 232:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 233:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 234:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 235:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::bottomCentered:
 236:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 237:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 238:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 239:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 240:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::centeredLeft:
 241:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_,
 242:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 243:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 244:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 245:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::centeredRight:
 246:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 247:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 248:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 249:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 250:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::centered:
 251:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 252:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 253:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 254:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 255:../../libdaisy/src/hid/disp/graphics_common.h ****             default: return {};
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 258


 256:../../libdaisy/src/hid/disp/graphics_common.h ****         }
 257:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 258:../../libdaisy/src/hid/disp/graphics_common.h **** 
 259:../../libdaisy/src/hid/disp/graphics_common.h ****   private:
 260:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t x_, y_, width_, height_;
 261:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t max(int16_t a, int16_t b) { return (a > b) ? a : b; }
 4964              		.loc 33 261 13 view .LVU1131
 4965              	.LBE5781:
 4966              	.LBE5780:
 4967              	.LBE5786:
 4968              	.LBE5790:
 4969              		.loc 33 261 41 view .LVU1132
 4970              	.LBB5791:
 4971              	.LBB5787:
 4972              	.LBB5783:
 4973              	.LBB5782:
 4974              	.LBI5782:
 4975              		.loc 33 261 13 view .LVU1133
 4976              	.LBE5782:
 4977              	.LBE5783:
 4978              	.LBE5787:
 4979              	.LBE5791:
 4980              		.loc 33 261 41 view .LVU1134
 4981              	.LBB5792:
 4982              	.LBI5792:
 209:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 4983              		.loc 33 209 15 view .LVU1135
 4984              	.LBB5793:
 211:../../libdaisy/src/hid/disp/graphics_common.h ****         {
 4985              		.loc 33 211 9 view .LVU1136
 4986 0036 1BB2     		sxth	r3, r3
 4987 0038 23EAE373 		bic	r3, r3, r3, asr #31
 4988 003c 0829     		cmp	r1, #8
 4989 003e 00F2A981 		bhi	.L310
 4990 0042 DFE811F0 		tbh	[pc, r1, lsl #1]
 4991              	.L312:
 4992 0046 0201     		.2byte	(.L320-.L312)/2
 4993 0048 1401     		.2byte	(.L319-.L312)/2
 4994 004a 2001     		.2byte	(.L318-.L312)/2
 4995 004c 3401     		.2byte	(.L317-.L312)/2
 4996 004e 4201     		.2byte	(.L316-.L312)/2
 4997 0050 5001     		.2byte	(.L315-.L312)/2
 4998 0052 6701     		.2byte	(.L314-.L312)/2
 4999 0054 7101     		.2byte	(.L313-.L312)/2
 5000 0056 0900     		.2byte	(.L311-.L312)/2
 5001              		.p2align 1
 5002              	.L311:
 245:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 5003              		.loc 33 245 13 view .LVU1137
 246:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5004              		.loc 33 246 17 view .LVU1138
 5005              	.LVL372:
 5006              	.LBB5794:
 5007              	.LBI5794:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5008              		.loc 33 60 13 view .LVU1139
 5009              	.LBB5795:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 259


  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5010              		.loc 33 60 32 view .LVU1140
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5011              		.loc 33 60 42 is_stmt 0 view .LVU1141
 5012 0058 A188     		ldrh	r1, [r4, #4]
 5013              	.LVL373:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5014              		.loc 33 60 42 view .LVU1142
 5015 005a 2788     		ldrh	r7, [r4]
 5016 005c 0F44     		add	r7, r7, r1
 5017              	.LBE5795:
 5018              	.LBE5794:
 5019              	.LBB5796:
 5020              	.LBB5797:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5021              		.loc 33 63 54 view .LVU1143
 5022 005e B4F90610 		ldrsh	r1, [r4, #6]
 5023              	.LBE5797:
 5024              	.LBE5796:
 246:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5025              		.loc 33 246 50 view .LVU1144
 5026 0062 FF1A     		subs	r7, r7, r3
 5027              	.LBB5801:
 5028              	.LBB5798:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5029              		.loc 33 63 54 view .LVU1145
 5030 0064 0029     		cmp	r1, #0
 5031              	.LBE5798:
 5032              	.LBE5801:
 246:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5033              		.loc 33 246 50 view .LVU1146
 5034 0066 BFB2     		uxth	r7, r7
 5035              	.LVL374:
 5036              	.LBB5802:
 5037              	.LBI5796:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5038              		.loc 33 63 13 is_stmt 1 view .LVU1147
 5039              	.LBB5799:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5040              		.loc 33 63 34 view .LVU1148
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5041              		.loc 33 63 34 is_stmt 0 view .LVU1149
 5042              	.LBE5799:
 5043              	.LBE5802:
 5044              	.LBB5803:
 5045              	.LBI5803:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5046              		.loc 33 63 13 is_stmt 1 view .LVU1150
 5047              	.LBB5804:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5048              		.loc 33 63 34 view .LVU1151
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5049              		.loc 33 63 34 is_stmt 0 view .LVU1152
 5050              	.LBE5804:
 5051              	.LBE5803:
 5052              	.LBB5805:
 5053              	.LBB5800:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 260


  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5054              		.loc 33 63 54 view .LVU1153
 5055 0068 C0F2FF80 		blt	.L383
 5056              	.L327:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5057              		.loc 33 63 54 view .LVU1154
 5058              	.LBE5800:
 5059              	.LBE5805:
 5060              	.LBB5806:
 5061              	.LBB5807:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5062              		.loc 33 63 44 view .LVU1155
 5063 006c B4F802C0 		ldrh	ip, [r4, #2]
 5064              	.LBE5807:
 5065              	.LBE5806:
 5066              	.LBB5813:
 5067              	.LBB5814:
 5068              	.LBB5815:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5069              		.loc 33 32 66 view .LVU1156
 5070 0070 0698     		ldr	r0, [sp, #24]
 5071              	.LBE5815:
 5072              	.LBE5814:
 5073              	.LBE5813:
 5074              	.LBB5826:
 5075              	.LBB5808:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5076              		.loc 33 63 44 view .LVU1157
 5077 0072 0CEB6104 		add	r4, ip, r1, asr #1
 5078              	.LVL375:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5079              		.loc 33 63 44 view .LVU1158
 5080              	.LBE5808:
 5081              	.LBE5826:
 5082              	.LBB5827:
 5083              	.LBB5822:
 5084              	.LBB5818:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5085              		.loc 33 32 66 view .LVU1159
 5086 0076 C280     		strh	r2, [r0, #6]	@ movhi
 5087              	.LBE5818:
 5088              	.LBE5822:
 5089              	.LBE5827:
 252:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 5090              		.loc 33 252 58 view .LVU1160
 5091 0078 A4EB5202 		sub	r2, r4, r2, lsr #1
 5092              	.LBB5828:
 5093              	.LBB5823:
 5094              	.LBB5819:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5095              		.loc 33 32 66 view .LVU1161
 5096 007c 8380     		strh	r3, [r0, #4]	@ movhi
 5097 007e 0780     		strh	r7, [r0]	@ movhi
 5098              	.LBE5819:
 5099              	.LBE5823:
 5100              	.LBE5828:
 252:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 261


 5101              		.loc 33 252 58 view .LVU1162
 5102 0080 94B2     		uxth	r4, r2
 5103              	.LVL376:
 5104              	.LBB5829:
 5105              	.LBI5813:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 5106              		.loc 33 31 5 is_stmt 1 view .LVU1163
 5107              	.LBB5824:
 5108              	.LBB5820:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5109              		.loc 33 32 66 is_stmt 0 view .LVU1164
 5110 0082 4480     		strh	r4, [r0, #2]	@ movhi
 5111              	.LVL377:
 5112              	.LBB5816:
 5113              	.LBI5816:
 5114              		.loc 33 261 13 is_stmt 1 view .LVU1165
 5115              	.LBE5816:
 5116              	.LBE5820:
 5117              	.LBE5824:
 5118              	.LBE5829:
 5119              	.LBE5793:
 5120              	.LBE5792:
 5121              		.loc 33 261 41 view .LVU1166
 5122              	.LBB6016:
 5123              	.LBB5994:
 5124              	.LBB5830:
 5125              	.LBB5825:
 5126              	.LBB5821:
 5127              	.LBB5817:
 5128              	.LBI5817:
 5129              		.loc 33 261 13 view .LVU1167
 5130              	.LBE5817:
 5131              	.LBE5821:
 5132              	.LBE5825:
 5133              	.LBE5830:
 5134              	.LBE5994:
 5135              	.LBE6016:
 5136              		.loc 33 261 41 view .LVU1168
 5137              	.L321:
  56:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetY() const { return y_; }
 5138              		.loc 33 56 28 view .LVU1169
  57:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetWidth() const { return width_; }
 5139              		.loc 33 57 28 view .LVU1170
 5140              	.LBB6017:
 5141              	.LBI6017:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 5142              		.loc 5 171 10 view .LVU1171
 5143              	.LBB6018:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5144              		.loc 5 173 9 view .LVU1172
 5145 0084 A64A     		ldr	r2, .L393
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5146              		.loc 5 173 33 is_stmt 0 view .LVU1173
 5147 0086 D8F80030 		ldr	r3, [r8]
 5148 008a 1146     		mov	r1, r2
 5149 008c 0192     		str	r2, [sp, #4]
 5150 008e DA68     		ldr	r2, [r3, #12]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 262


 5151 0090 8A42     		cmp	r2, r1
 5152 0092 40F08D81 		bne	.L329
 5153 0096 8020     		movs	r0, #128
 5154              	.LVL378:
 5155              	.L330:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5156              		.loc 5 173 19 view .LVU1174
 5157 0098 B842     		cmp	r0, r7
 5158 009a 05D8     		bhi	.L331
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5159              		.loc 5 173 44 view .LVU1175
 5160 009c DA68     		ldr	r2, [r3, #12]
 5161 009e 0199     		ldr	r1, [sp, #4]
 5162 00a0 8A42     		cmp	r2, r1
 5163 00a2 40F09A81 		bne	.L384
 5164 00a6 7F27     		movs	r7, #127
 5165              	.L331:
 5166 00a8 9E4A     		ldr	r2, .L393+4
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5167              		.loc 5 174 34 view .LVU1176
 5168 00aa 9B68     		ldr	r3, [r3, #8]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5169              		.loc 5 173 19 view .LVU1177
 5170 00ac A8F80470 		strh	r7, [r8, #4]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5171              		.loc 5 174 9 is_stmt 1 view .LVU1178
 5172 00b0 9342     		cmp	r3, r2
 5173 00b2 0392     		str	r2, [sp, #12]
 5174 00b4 40F08981 		bne	.L361
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5175              		.loc 5 174 34 is_stmt 0 view .LVU1179
 5176 00b8 4020     		movs	r0, #64
 5177              	.L333:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5178              		.loc 5 174 19 view .LVU1180
 5179 00ba A042     		cmp	r0, r4
 5180 00bc 07D8     		bhi	.L335
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5181              		.loc 5 174 46 view .LVU1181
 5182 00be D8F80030 		ldr	r3, [r8]
 5183 00c2 039A     		ldr	r2, [sp, #12]
 5184 00c4 9B68     		ldr	r3, [r3, #8]
 5185 00c6 9342     		cmp	r3, r2
 5186 00c8 40F08281 		bne	.L385
 5187 00cc 3F24     		movs	r4, #63
 5188              	.L335:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5189              		.loc 5 174 46 view .LVU1182
 5190              	.LBE6018:
 5191              	.LBE6017:
 5192              	.LBB6022:
 5193              	.LBB6023:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5194              		.loc 5 443 9 view .LVU1183
 5195 00ce 009B     		ldr	r3, [sp]
 5196              	.LBE6023:
 5197              	.LBE6022:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 263


 5198              	.LBB6071:
 5199              	.LBB6019:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5200              		.loc 5 174 19 view .LVU1184
 5201 00d0 A8F80640 		strh	r4, [r8, #6]	@ movhi
 5202              	.LVL379:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5203              		.loc 5 174 19 view .LVU1185
 5204              	.LBE6019:
 5205              	.LBE6071:
 5206              	.LBB6072:
 5207              	.LBB6068:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5208              		.loc 5 443 9 view .LVU1186
 5209 00d4 93F800B0 		ldrb	fp, [r3]	@ zero_extendqisi2
 5210 00d8 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 5211              	.LVL380:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5212              		.loc 5 443 9 view .LVU1187
 5213 00da 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 5214              	.LVL381:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5215              		.loc 5 443 9 view .LVU1188
 5216 00dc 0493     		str	r3, [sp, #16]
 5217              	.LVL382:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5218              		.loc 5 443 9 view .LVU1189
 5219 00de 6B68     		ldr	r3, [r5, #4]
 5220 00e0 0793     		str	r3, [sp, #28]
 5221              	.LVL383:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5222              		.loc 5 443 9 view .LVU1190
 5223              	.LBE6068:
 5224              	.LBI6022:
 440:../../libdaisy/src/hid/disp/display.h ****     {
 5225              		.loc 5 440 10 is_stmt 1 view .LVU1191
 5226              	.LBB6069:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5227              		.loc 5 443 9 view .LVU1192
 5228 00e2 BBF1000F 		cmp	fp, #0
 5229 00e6 00F0AC80 		beq	.L307
 5230              	.LVL384:
 5231              	.L337:
 5232              	.LBB6024:
 5233              	.LBI6024:
 396:../../libdaisy/src/hid/disp/display.h ****     {
 5234              		.loc 5 396 10 view .LVU1193
 5235              	.LBB6025:
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 5236              		.loc 5 401 20 is_stmt 0 view .LVU1194
 5237 00ea ABF12005 		sub	r5, fp, #32
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 5238              		.loc 5 401 9 view .LVU1195
 5239 00ee EBB2     		uxtb	r3, r5
 5240 00f0 5E2B     		cmp	r3, #94
 5241 00f2 00F22E81 		bhi	.L341
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 264


 5242              		.loc 5 405 17 view .LVU1196
 5243 00f6 D8F80030 		ldr	r3, [r8]
 5244 00fa 019A     		ldr	r2, [sp, #4]
 5245 00fc DB68     		ldr	r3, [r3, #12]
 5246 00fe 9342     		cmp	r3, r2
 5247 0100 40F02A81 		bne	.L386
 5248 0104 8020     		movs	r0, #128
 5249              	.L340:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 5250              		.loc 5 405 23 view .LVU1197
 5251 0106 B8F80430 		ldrh	r3, [r8, #4]
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 5252              		.loc 5 405 33 view .LVU1198
 5253 010a 2344     		add	r3, r3, r4
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5254              		.loc 5 406 12 view .LVU1199
 5255 010c 9842     		cmp	r0, r3
 5256 010e C0F22081 		blt	.L341
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5257              		.loc 5 406 21 view .LVU1200
 5258 0112 D8F80030 		ldr	r3, [r8]
 5259 0116 039A     		ldr	r2, [sp, #12]
 5260 0118 9B68     		ldr	r3, [r3, #8]
 5261 011a 9342     		cmp	r3, r2
 5262 011c 40F01F81 		bne	.L387
 5263 0120 4020     		movs	r0, #64
 5264              	.L342:
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5265              		.loc 5 406 27 view .LVU1201
 5266 0122 B8F80610 		ldrh	r1, [r8, #6]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5267              		.loc 5 406 37 view .LVU1202
 5268 0126 049A     		ldr	r2, [sp, #16]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5269              		.loc 5 406 27 view .LVU1203
 5270 0128 0291     		str	r1, [sp, #8]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5271              		.loc 5 406 37 view .LVU1204
 5272 012a 8B18     		adds	r3, r1, r2
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5273              		.loc 5 406 12 view .LVU1205
 5274 012c 9842     		cmp	r0, r3
 5275 012e C0F21081 		blt	.L341
 5276              	.LVL385:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 5277              		.loc 5 413 22 is_stmt 1 view .LVU1206
 5278 0132 002A     		cmp	r2, #0
 5279 0134 00F01E81 		beq	.L343
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 5280              		.loc 5 415 37 is_stmt 0 view .LVU1207
 5281 0138 02FB05F5 		mul	r5, r2, r5
 5282 013c 6FF0004E 		mvn	lr, #-2147483648
 5283 0140 079B     		ldr	r3, [sp, #28]
 5284 0142 AE44     		add	lr, lr, r5
 5285 0144 1544     		add	r5, r5, r2
 5286 0146 CDF814B0 		str	fp, [sp, #20]
 5287 014a 03EB4E0E 		add	lr, r3, lr, lsl #1
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 265


 5288 014e 023B     		subs	r3, r3, #2
 434:../../libdaisy/src/hid/disp/display.h **** 
 5289              		.loc 5 434 19 view .LVU1208
 5290 0150 B8F804A0 		ldrh	r10, [r8, #4]
 5291 0154 03EB4503 		add	r3, r3, r5, lsl #1
 5292 0158 0D46     		mov	r5, r1
 5293 015a 9B46     		mov	fp, r3
 5294              	.LVL386:
 5295              	.L346:
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 5296              		.loc 5 415 15 view .LVU1209
 5297 015c 3EF8027F 		ldrh	r7, [lr, #2]!
 5298              	.LVL387:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5299              		.loc 5 416 26 is_stmt 1 view .LVU1210
 5300 0160 A4B3     		cbz	r4, .L351
 5301              	.LBB6026:
 5302              	.LBB6027:
 5303              	.LBB6028:
 5304              	.LBB6029:
 5305              	.LBB6030:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5306              		.loc 15 246 55 is_stmt 0 view .LVU1211
 5307 0162 05F00703 		and	r3, r5, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5308              		.loc 15 246 49 view .LVU1212
 5309 0166 4FF0010C 		mov	ip, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5310              		.loc 15 246 28 view .LVU1213
 5311 016a EA08     		lsrs	r2, r5, #3
 5312 016c 5146     		mov	r1, r10
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5313              		.loc 15 246 49 view .LVU1214
 5314 016e 0CFA03FC 		lsl	ip, ip, r3
 5315 0172 0AF11403 		add	r3, r10, #20
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5316              		.loc 15 246 42 view .LVU1215
 5317 0176 4FFA8CFC 		sxtb	ip, ip
 5318 017a 03EBC212 		add	r2, r3, r2, lsl #7
 5319              	.LBE6030:
 5320              	.LBE6029:
 5321              	.LBE6028:
 5322              	.LBE6027:
 5323              	.LBE6026:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5324              		.loc 5 416 19 view .LVU1216
 5325 017e 0023     		movs	r3, #0
 5326              	.LBB6048:
 5327              	.LBB6043:
 5328              	.LBB6038:
 5329              	.LBB6034:
 5330              	.LBB6031:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5331              		.loc 15 246 42 view .LVU1217
 5332 0180 6FEA0C09 		mvn	r9, ip
 5333 0184 4244     		add	r2, r2, r8
 5334 0186 0DE0     		b	.L352
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 266


 5335              	.LVL388:
 5336              	.L388:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5337              		.loc 15 246 42 view .LVU1218
 5338              	.LBE6031:
 5339              	.LBE6034:
 5340              	.LBE6038:
 5341              	.LBE6043:
 5342              	.LBE6048:
 5343              	.LBB6049:
 5344              	.LBI6049:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 5345              		.loc 4 41 10 is_stmt 1 view .LVU1219
 5346              	.LBB6050:
 5347              	.LBI6050:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 5348              		.loc 15 239 10 view .LVU1220
 5349              	.LBB6051:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 5350              		.loc 15 241 9 is_stmt 0 view .LVU1221
 5351 0188 7F29     		cmp	r1, #127
 5352 018a 06D8     		bhi	.L348
 5353 018c 3F2D     		cmp	r5, #63
 5354 018e 04D8     		bhi	.L348
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5355              		.loc 15 244 42 view .LVU1222
 5356 0190 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 5357              		.loc 15 243 9 view .LVU1223
 5358 0192 96B1     		cbz	r6, .L350
 5359              	.L382:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 5360              		.loc 15 243 9 view .LVU1224
 5361              	.LBE6051:
 5362              	.LBE6050:
 5363              	.LBE6049:
 5364              	.LBB6052:
 5365              	.LBB6044:
 5366              	.LBB6039:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5367              		.loc 15 244 42 view .LVU1225
 5368 0194 4CEA0000 		orr	r0, ip, r0
 5369 0198 1070     		strb	r0, [r2]
 5370              	.L348:
 5371              	.LBE6039:
 5372              	.LBE6044:
 5373              	.LBE6052:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5374              		.loc 5 416 13 is_stmt 1 view .LVU1226
 5375 019a 0133     		adds	r3, r3, #1
 5376              	.LVL389:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5377              		.loc 5 416 26 view .LVU1227
 5378 019c 0132     		adds	r2, r2, #1
 5379 019e 0131     		adds	r1, r1, #1
 5380 01a0 9C42     		cmp	r4, r3
 5381 01a2 13D0     		beq	.L351
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 267


 5382              	.LVL390:
 5383              	.L352:
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 5384              		.loc 5 418 23 is_stmt 0 view .LVU1228
 5385 01a4 07FA03F0 		lsl	r0, r7, r3
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 5386              		.loc 5 418 17 view .LVU1229
 5387 01a8 0004     		lsls	r0, r0, #16
 5388 01aa EDD4     		bmi	.L388
 5389              	.LVL391:
 5390              	.LBB6053:
 5391              	.LBI6026:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 5392              		.loc 4 41 10 is_stmt 1 view .LVU1230
 5393              	.LBB6045:
 5394              	.LBI6027:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 5395              		.loc 15 239 10 view .LVU1231
 5396              	.LBB6040:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 5397              		.loc 15 241 9 is_stmt 0 view .LVU1232
 5398 01ac 7F29     		cmp	r1, #127
 5399 01ae F4D8     		bhi	.L348
 5400 01b0 3F2D     		cmp	r5, #63
 5401 01b2 F2D8     		bhi	.L348
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5402              		.loc 15 244 42 view .LVU1233
 5403 01b4 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 5404              		.loc 15 243 9 view .LVU1234
 5405 01b6 002E     		cmp	r6, #0
 5406 01b8 ECD0     		beq	.L382
 5407              	.L350:
 5408              	.LVL392:
 5409              	.LBB6035:
 5410              	.LBI6029:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 5411              		.loc 15 239 10 is_stmt 1 view .LVU1235
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 5412              		.loc 15 239 10 is_stmt 0 view .LVU1236
 5413              	.LBE6035:
 5414              	.LBE6040:
 5415              	.LBE6045:
 5416              	.LBE6053:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5417              		.loc 5 416 13 view .LVU1237
 5418 01ba 0133     		adds	r3, r3, #1
 5419              	.LVL393:
 5420              	.LBB6054:
 5421              	.LBB6046:
 5422              	.LBB6041:
 5423              	.LBB6036:
 5424              	.LBB6032:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5425              		.loc 15 246 42 view .LVU1238
 5426 01bc 09EA0000 		and	r0, r9, r0
 5427              	.LBE6032:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 268


 5428              	.LBE6036:
 5429              	.LBE6041:
 5430              	.LBE6046:
 5431              	.LBE6054:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5432              		.loc 5 416 26 view .LVU1239
 5433 01c0 0132     		adds	r2, r2, #1
 5434 01c2 0131     		adds	r1, r1, #1
 5435 01c4 9C42     		cmp	r4, r3
 5436              	.LBB6055:
 5437              	.LBB6047:
 5438              	.LBB6042:
 5439              	.LBB6037:
 5440              	.LBB6033:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5441              		.loc 15 246 42 view .LVU1240
 5442 01c6 02F8010C 		strb	r0, [r2, #-1]
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5443              		.loc 15 246 42 view .LVU1241
 5444              	.LBE6033:
 5445              	.LBE6037:
 5446              	.LBE6042:
 5447              	.LBE6047:
 5448              	.LBE6055:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5449              		.loc 5 416 13 is_stmt 1 view .LVU1242
 5450              	.LVL394:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5451              		.loc 5 416 26 view .LVU1243
 5452 01ca EBD1     		bne	.L352
 5453              	.LVL395:
 5454              	.L351:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 5455              		.loc 5 413 9 view .LVU1244
 413:../../libdaisy/src/hid/disp/display.h ****         {
 5456              		.loc 5 413 22 view .LVU1245
 5457 01cc F345     		cmp	fp, lr
 5458 01ce 05F10105 		add	r5, r5, #1
 5459 01d2 C3D1     		bne	.L346
 5460 01d4 DDF814B0 		ldr	fp, [sp, #20]
 5461              	.LVL396:
 5462              	.L345:
 5463              	.LBB6056:
 5464              	.LBB6057:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5465              		.loc 5 173 33 is_stmt 0 view .LVU1246
 5466 01d8 D8F80020 		ldr	r2, [r8]
 5467              	.LBE6057:
 5468              	.LBE6056:
 434:../../libdaisy/src/hid/disp/display.h **** 
 5469              		.loc 5 434 18 view .LVU1247
 5470 01dc 0AEB0405 		add	r5, r10, r4
 5471 01e0 0199     		ldr	r1, [sp, #4]
 5472              	.LBB6062:
 5473              	.LBB6058:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5474              		.loc 5 173 33 view .LVU1248
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 269


 5475 01e2 D368     		ldr	r3, [r2, #12]
 5476              	.LBE6058:
 5477              	.LBE6062:
 434:../../libdaisy/src/hid/disp/display.h **** 
 5478              		.loc 5 434 18 view .LVU1249
 5479 01e4 ADB2     		uxth	r5, r5
 5480              	.LVL397:
 5481              	.LBB6063:
 5482              	.LBI6056:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 5483              		.loc 5 171 10 is_stmt 1 view .LVU1250
 5484              	.LBB6059:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5485              		.loc 5 173 9 view .LVU1251
 5486 01e6 8B42     		cmp	r3, r1
 5487 01e8 40F0BF80 		bne	.L389
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5488              		.loc 5 173 33 is_stmt 0 view .LVU1252
 5489 01ec 8020     		movs	r0, #128
 5490              	.L353:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5491              		.loc 5 173 19 view .LVU1253
 5492 01ee 8542     		cmp	r5, r0
 5493 01f0 05D3     		bcc	.L354
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5494              		.loc 5 173 44 view .LVU1254
 5495 01f2 D368     		ldr	r3, [r2, #12]
 5496 01f4 0199     		ldr	r1, [sp, #4]
 5497 01f6 8B42     		cmp	r3, r1
 5498 01f8 40F0C580 		bne	.L390
 5499 01fc 7F25     		movs	r5, #127
 5500              	.LVL398:
 5501              	.L354:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5502              		.loc 5 174 34 view .LVU1255
 5503 01fe 9368     		ldr	r3, [r2, #8]
 5504 0200 039A     		ldr	r2, [sp, #12]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5505              		.loc 5 173 19 view .LVU1256
 5506 0202 A8F80450 		strh	r5, [r8, #4]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5507              		.loc 5 174 9 is_stmt 1 view .LVU1257
 5508 0206 9342     		cmp	r3, r2
 5509 0208 40F0AC80 		bne	.L391
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5510              		.loc 5 174 34 is_stmt 0 view .LVU1258
 5511 020c 4020     		movs	r0, #64
 5512              	.L356:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5513              		.loc 5 174 19 view .LVU1259
 5514 020e 029B     		ldr	r3, [sp, #8]
 5515 0210 8342     		cmp	r3, r0
 5516 0212 08D3     		bcc	.L357
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5517              		.loc 5 174 46 view .LVU1260
 5518 0214 D8F80030 		ldr	r3, [r8]
 5519 0218 039A     		ldr	r2, [sp, #12]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 270


 5520 021a 9B68     		ldr	r3, [r3, #8]
 5521 021c 9342     		cmp	r3, r2
 5522 021e 40F0AC80 		bne	.L392
 5523 0222 3F23     		movs	r3, #63
 5524 0224 0293     		str	r3, [sp, #8]
 5525              	.LVL399:
 5526              	.L357:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5527              		.loc 5 174 19 view .LVU1261
 5528 0226 029B     		ldr	r3, [sp, #8]
 5529 0228 A8F80630 		strh	r3, [r8, #6]	@ movhi
 5530              	.LVL400:
 5531              	.L339:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5532              		.loc 5 174 19 view .LVU1262
 5533              	.LBE6059:
 5534              	.LBE6063:
 5535              	.LBE6025:
 5536              	.LBE6024:
 445:../../libdaisy/src/hid/disp/display.h ****                != *str)
 5537              		.loc 5 445 13 view .LVU1263
 5538 022c 009A     		ldr	r2, [sp]
 5539 022e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 5540 0230 5B45     		cmp	r3, fp
 5541 0232 06D1     		bne	.L307
 5542              	.LVL401:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5543              		.loc 5 443 9 is_stmt 1 view .LVU1264
 5544 0234 12F801BF 		ldrb	fp, [r2, #1]!	@ zero_extendqisi2
 5545              	.LVL402:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5546              		.loc 5 443 9 is_stmt 0 view .LVU1265
 5547 0238 0092     		str	r2, [sp]
 5548 023a BBF1000F 		cmp	fp, #0
 5549 023e 7FF454AF 		bne	.L337
 5550              	.LVL403:
 5551              	.L307:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5552              		.loc 5 443 9 view .LVU1266
 5553              	.LBE6069:
 5554              	.LBE6072:
 471:../../libdaisy/src/hid/disp/display.h **** 
 5555              		.loc 5 471 5 view .LVU1267
 5556 0242 0698     		ldr	r0, [sp, #24]
 5557 0244 09B0     		add	sp, sp, #36
 5558              		.cfi_remember_state
 5559              		.cfi_def_cfa_offset 36
 5560              		@ sp needed
 5561 0246 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5562              	.LVL404:
 5563              	.L320:
 5564              		.cfi_restore_state
 5565              	.LBB6073:
 5566              	.LBB5995:
 250:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 5567              		.loc 33 250 13 is_stmt 1 view .LVU1268
 251:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 271


 5568              		.loc 33 251 17 view .LVU1269
 5569              	.LBB5831:
 5570              	.LBI5831:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5571              		.loc 33 62 13 view .LVU1270
 5572              	.LBB5832:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5573              		.loc 33 62 34 view .LVU1271
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5574              		.loc 33 62 34 is_stmt 0 view .LVU1272
 5575              	.LBE5832:
 5576              	.LBE5831:
 5577              	.LBB5834:
 5578              	.LBI5834:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5579              		.loc 33 62 13 is_stmt 1 view .LVU1273
 5580              	.LBB5835:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5581              		.loc 33 62 34 view .LVU1274
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5582              		.loc 33 62 34 is_stmt 0 view .LVU1275
 5583              	.LBE5835:
 5584              	.LBE5834:
 5585              	.LBB5836:
 5586              	.LBB5833:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5587              		.loc 33 62 53 view .LVU1276
 5588 024a B4F90410 		ldrsh	r1, [r4, #4]
 5589              	.LVL405:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5590              		.loc 33 62 44 view .LVU1277
 5591 024e 2788     		ldrh	r7, [r4]
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5592              		.loc 33 62 53 view .LVU1278
 5593 0250 0029     		cmp	r1, #0
 5594 0252 B8BF     		it	lt
 5595 0254 0131     		addlt	r1, r1, #1
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5596              		.loc 33 62 44 view .LVU1279
 5597 0256 07EB6107 		add	r7, r7, r1, asr #1
 5598              	.LBE5833:
 5599              	.LBE5836:
 5600              	.LBB5837:
 5601              	.LBB5809:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5602              		.loc 33 63 54 view .LVU1280
 5603 025a B4F90610 		ldrsh	r1, [r4, #6]
 5604              	.LBE5809:
 5605              	.LBE5837:
 251:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5606              		.loc 33 251 58 view .LVU1281
 5607 025e A7EB6307 		sub	r7, r7, r3, asr #1
 5608              	.LBB5838:
 5609              	.LBB5810:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5610              		.loc 33 63 54 view .LVU1282
 5611 0262 0029     		cmp	r1, #0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 272


 5612              	.LBE5810:
 5613              	.LBE5838:
 251:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5614              		.loc 33 251 58 view .LVU1283
 5615 0264 BFB2     		uxth	r7, r7
 5616              	.LVL406:
 5617              	.LBB5839:
 5618              	.LBI5806:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5619              		.loc 33 63 13 is_stmt 1 view .LVU1284
 5620              	.LBB5811:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5621              		.loc 33 63 34 view .LVU1285
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5622              		.loc 33 63 34 is_stmt 0 view .LVU1286
 5623              	.LBE5811:
 5624              	.LBE5839:
 5625              	.LBB5840:
 5626              	.LBI5840:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5627              		.loc 33 63 13 is_stmt 1 view .LVU1287
 5628              	.LBB5841:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5629              		.loc 33 63 34 view .LVU1288
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5630              		.loc 33 63 34 is_stmt 0 view .LVU1289
 5631              	.LBE5841:
 5632              	.LBE5840:
 5633              	.LBB5842:
 5634              	.LBB5812:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5635              		.loc 33 63 54 view .LVU1290
 5636 0266 BFF601AF 		bge	.L327
 5637              	.L383:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5638              		.loc 33 63 54 view .LVU1291
 5639 026a 0131     		adds	r1, r1, #1
 5640 026c FEE6     		b	.L327
 5641              	.LVL407:
 5642              	.L319:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5643              		.loc 33 63 54 view .LVU1292
 5644              	.LBE5812:
 5645              	.LBE5842:
 213:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_, other.y_, width_, height_};
 5646              		.loc 33 213 13 is_stmt 1 view .LVU1293
 214:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topRight:
 5647              		.loc 33 214 17 view .LVU1294
 214:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topRight:
 5648              		.loc 33 214 31 is_stmt 0 view .LVU1295
 5649 026e B4F90070 		ldrsh	r7, [r4]
 5650              	.LBB5843:
 5651              	.LBB5844:
 5652              	.LBB5845:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5653              		.loc 33 32 66 view .LVU1296
 5654 0272 0699     		ldr	r1, [sp, #24]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 273


 5655              	.LVL408:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5656              		.loc 33 32 66 view .LVU1297
 5657              	.LBE5845:
 5658              	.LBE5844:
 5659              	.LBE5843:
 214:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topRight:
 5660              		.loc 33 214 41 view .LVU1298
 5661 0274 B4F90240 		ldrsh	r4, [r4, #2]
 5662              	.LVL409:
 5663              	.LBB5858:
 5664              	.LBI5843:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 5665              		.loc 33 31 5 is_stmt 1 view .LVU1299
 5666              	.LBB5853:
 5667              	.LBB5848:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5668              		.loc 33 32 66 is_stmt 0 view .LVU1300
 5669 0278 0F80     		strh	r7, [r1]	@ movhi
 5670              	.LBE5848:
 5671              	.LBE5853:
 5672              	.LBE5858:
 5673              	.LBE5995:
 5674              	.LBE6073:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 5675              		.loc 5 468 18 view .LVU1301
 5676 027a BFB2     		uxth	r7, r7
 5677              	.LVL410:
 5678              	.LBB6074:
 5679              	.LBB5996:
 5680              	.LBB5859:
 5681              	.LBB5854:
 5682              	.LBB5849:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5683              		.loc 33 32 66 view .LVU1302
 5684 027c 4C80     		strh	r4, [r1, #2]	@ movhi
 5685              	.LBE5849:
 5686              	.LBE5854:
 5687              	.LBE5859:
 5688              	.LBE5996:
 5689              	.LBE6074:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 5690              		.loc 5 468 18 view .LVU1303
 5691 027e A4B2     		uxth	r4, r4
 5692              	.LVL411:
 5693              	.LBB6075:
 5694              	.LBB5997:
 5695              	.LBB5860:
 5696              	.LBB5855:
 5697              	.LBB5850:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5698              		.loc 33 32 66 view .LVU1304
 5699 0280 8B80     		strh	r3, [r1, #4]	@ movhi
 5700              	.LVL412:
 5701              	.LBB5846:
 5702              	.LBI5846:
 5703              		.loc 33 261 13 is_stmt 1 view .LVU1305
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 274


 5704              	.LBE5846:
 5705              	.LBE5850:
 5706              	.LBE5855:
 5707              	.LBE5860:
 5708              	.LBE5997:
 5709              	.LBE6075:
 5710              		.loc 33 261 41 view .LVU1306
 5711              	.LBB6076:
 5712              	.LBB5998:
 5713              	.LBB5861:
 5714              	.LBB5856:
 5715              	.LBB5851:
 5716              	.LBB5847:
 5717              	.LBI5847:
 5718              		.loc 33 261 13 view .LVU1307
 5719              	.LBE5847:
 5720              	.LBE5851:
 5721              	.LBE5856:
 5722              	.LBE5861:
 5723              	.LBE5998:
 5724              	.LBE6076:
 5725              		.loc 33 261 41 view .LVU1308
 5726              	.LBB6077:
 5727              	.LBB5999:
 5728              	.LBB5862:
 5729              	.LBB5857:
 5730              	.LBB5852:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5731              		.loc 33 32 66 is_stmt 0 view .LVU1309
 5732 0282 CA80     		strh	r2, [r1, #6]	@ movhi
 5733              	.LBE5852:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5734              		.loc 33 34 5 view .LVU1310
 5735 0284 FEE6     		b	.L321
 5736              	.LVL413:
 5737              	.L318:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5738              		.loc 33 34 5 view .LVU1311
 5739              	.LBE5857:
 5740              	.LBE5862:
 220:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 5741              		.loc 33 220 13 is_stmt 1 view .LVU1312
 221:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 5742              		.loc 33 221 17 view .LVU1313
 5743              	.LBB5863:
 5744              	.LBI5863:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5745              		.loc 33 62 13 view .LVU1314
 5746              	.LBB5864:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5747              		.loc 33 62 34 view .LVU1315
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5748              		.loc 33 62 34 is_stmt 0 view .LVU1316
 5749              	.LBE5864:
 5750              	.LBE5863:
 5751              	.LBB5867:
 5752              	.LBI5867:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 275


  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5753              		.loc 33 62 13 is_stmt 1 view .LVU1317
 5754              	.LBB5868:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5755              		.loc 33 62 34 view .LVU1318
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5756              		.loc 33 62 34 is_stmt 0 view .LVU1319
 5757              	.LBE5868:
 5758              	.LBE5867:
 5759              	.LBB5869:
 5760              	.LBB5865:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5761              		.loc 33 62 53 view .LVU1320
 5762 0286 B4F90410 		ldrsh	r1, [r4, #4]
 5763              	.LVL414:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5764              		.loc 33 62 44 view .LVU1321
 5765 028a 2788     		ldrh	r7, [r4]
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5766              		.loc 33 62 53 view .LVU1322
 5767 028c 0029     		cmp	r1, #0
 5768              	.LBE5865:
 5769              	.LBE5869:
 222:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 5770              		.loc 33 222 31 view .LVU1323
 5771 028e B4F90240 		ldrsh	r4, [r4, #2]
 5772              	.LVL415:
 5773              	.LBB5870:
 5774              	.LBB5866:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5775              		.loc 33 62 53 view .LVU1324
 5776 0292 B8BF     		it	lt
 5777 0294 0131     		addlt	r1, r1, #1
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5778              		.loc 33 62 44 view .LVU1325
 5779 0296 07EB6107 		add	r7, r7, r1, asr #1
 5780              	.LBE5866:
 5781              	.LBE5870:
 5782              	.LBB5871:
 5783              	.LBB5872:
 5784              	.LBB5873:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5785              		.loc 33 32 66 view .LVU1326
 5786 029a 0699     		ldr	r1, [sp, #24]
 5787 029c 8B80     		strh	r3, [r1, #4]	@ movhi
 5788              	.LBE5873:
 5789              	.LBE5872:
 5790              	.LBE5871:
 221:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 5791              		.loc 33 221 58 view .LVU1327
 5792 029e A7EB6303 		sub	r3, r7, r3, asr #1
 5793              	.LBB5884:
 5794              	.LBB5880:
 5795              	.LBB5876:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5796              		.loc 33 32 66 view .LVU1328
 5797 02a2 4C80     		strh	r4, [r1, #2]	@ movhi
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 276


 5798              	.LBE5876:
 5799              	.LBE5880:
 5800              	.LBE5884:
 5801              	.LBE5999:
 5802              	.LBE6077:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 5803              		.loc 5 468 18 view .LVU1329
 5804 02a4 A4B2     		uxth	r4, r4
 5805              	.LBB6078:
 5806              	.LBB6000:
 221:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 5807              		.loc 33 221 58 view .LVU1330
 5808 02a6 9FB2     		uxth	r7, r3
 5809              	.LVL416:
 5810              	.LBB5885:
 5811              	.LBI5871:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 5812              		.loc 33 31 5 is_stmt 1 view .LVU1331
 5813              	.LBB5881:
 5814              	.LBB5877:
 5815              	.LBB5874:
 5816              	.LBI5874:
 5817              		.loc 33 261 13 view .LVU1332
 5818              	.LBE5874:
 5819              	.LBE5877:
 5820              	.LBE5881:
 5821              	.LBE5885:
 5822              	.LBE6000:
 5823              	.LBE6078:
 5824              		.loc 33 261 41 view .LVU1333
 5825              	.LBB6079:
 5826              	.LBB6001:
 5827              	.LBB5886:
 5828              	.LBB5882:
 5829              	.LBB5878:
 5830              	.LBB5875:
 5831              	.LBI5875:
 5832              		.loc 33 261 13 view .LVU1334
 5833              	.LBE5875:
 5834              	.LBE5878:
 5835              	.LBE5882:
 5836              	.LBE5886:
 5837              	.LBE6001:
 5838              	.LBE6079:
 5839              		.loc 33 261 41 view .LVU1335
 5840              	.LBB6080:
 5841              	.LBB6002:
 5842              	.LBB5887:
 5843              	.LBB5883:
 5844              	.LBB5879:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5845              		.loc 33 32 66 is_stmt 0 view .LVU1336
 5846 02a8 CA80     		strh	r2, [r1, #6]	@ movhi
 5847 02aa 0F80     		strh	r7, [r1]	@ movhi
 5848              	.LBE5879:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5849              		.loc 33 34 5 view .LVU1337
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 277


 5850 02ac EAE6     		b	.L321
 5851              	.LVL417:
 5852              	.L317:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5853              		.loc 33 34 5 view .LVU1338
 5854              	.LBE5883:
 5855              	.LBE5887:
 215:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 5856              		.loc 33 215 13 is_stmt 1 view .LVU1339
 216:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 5857              		.loc 33 216 17 view .LVU1340
 5858              	.LBB5888:
 5859              	.LBI5888:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5860              		.loc 33 60 13 view .LVU1341
 5861              	.LBB5889:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5862              		.loc 33 60 32 view .LVU1342
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5863              		.loc 33 60 42 is_stmt 0 view .LVU1343
 5864 02ae A188     		ldrh	r1, [r4, #4]
 5865              	.LVL418:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5866              		.loc 33 60 42 view .LVU1344
 5867 02b0 2788     		ldrh	r7, [r4]
 5868              	.LBE5889:
 5869              	.LBE5888:
 217:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 5870              		.loc 33 217 31 view .LVU1345
 5871 02b2 B4F90240 		ldrsh	r4, [r4, #2]
 5872              	.LVL419:
 5873              	.LBB5891:
 5874              	.LBB5890:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5875              		.loc 33 60 42 view .LVU1346
 5876 02b6 0F44     		add	r7, r7, r1
 5877              	.LBE5890:
 5878              	.LBE5891:
 5879              	.LBB5892:
 5880              	.LBB5893:
 5881              	.LBB5894:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5882              		.loc 33 32 66 view .LVU1347
 5883 02b8 0699     		ldr	r1, [sp, #24]
 5884 02ba 8B80     		strh	r3, [r1, #4]	@ movhi
 5885              	.LBE5894:
 5886              	.LBE5893:
 5887              	.LBE5892:
 216:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 5888              		.loc 33 216 50 view .LVU1348
 5889 02bc FB1A     		subs	r3, r7, r3
 5890              	.LBB5905:
 5891              	.LBB5901:
 5892              	.LBB5897:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5893              		.loc 33 32 66 view .LVU1349
 5894 02be 4C80     		strh	r4, [r1, #2]	@ movhi
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 278


 5895              	.LBE5897:
 5896              	.LBE5901:
 5897              	.LBE5905:
 5898              	.LBE6002:
 5899              	.LBE6080:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 5900              		.loc 5 468 18 view .LVU1350
 5901 02c0 A4B2     		uxth	r4, r4
 5902              	.LBB6081:
 5903              	.LBB6003:
 216:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 5904              		.loc 33 216 50 view .LVU1351
 5905 02c2 9FB2     		uxth	r7, r3
 5906              	.LVL420:
 5907              	.LBB5906:
 5908              	.LBI5892:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 5909              		.loc 33 31 5 is_stmt 1 view .LVU1352
 5910              	.LBB5902:
 5911              	.LBB5898:
 5912              	.LBB5895:
 5913              	.LBI5895:
 5914              		.loc 33 261 13 view .LVU1353
 5915              	.LBE5895:
 5916              	.LBE5898:
 5917              	.LBE5902:
 5918              	.LBE5906:
 5919              	.LBE6003:
 5920              	.LBE6081:
 5921              		.loc 33 261 41 view .LVU1354
 5922              	.LBB6082:
 5923              	.LBB6004:
 5924              	.LBB5907:
 5925              	.LBB5903:
 5926              	.LBB5899:
 5927              	.LBB5896:
 5928              	.LBI5896:
 5929              		.loc 33 261 13 view .LVU1355
 5930              	.LBE5896:
 5931              	.LBE5899:
 5932              	.LBE5903:
 5933              	.LBE5907:
 5934              	.LBE6004:
 5935              	.LBE6082:
 5936              		.loc 33 261 41 view .LVU1356
 5937              	.LBB6083:
 5938              	.LBB6005:
 5939              	.LBB5908:
 5940              	.LBB5904:
 5941              	.LBB5900:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5942              		.loc 33 32 66 is_stmt 0 view .LVU1357
 5943 02c4 CA80     		strh	r2, [r1, #6]	@ movhi
 5944 02c6 0F80     		strh	r7, [r1]	@ movhi
 5945              	.LBE5900:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5946              		.loc 33 34 5 view .LVU1358
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 279


 5947 02c8 DCE6     		b	.L321
 5948              	.LVL421:
 5949              	.L316:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5950              		.loc 33 34 5 view .LVU1359
 5951              	.LBE5904:
 5952              	.LBE5908:
 225:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_,
 5953              		.loc 33 225 13 is_stmt 1 view .LVU1360
 226:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 5954              		.loc 33 226 17 view .LVU1361
 5955              	.LBB5909:
 5956              	.LBB5910:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 5957              		.loc 33 61 43 is_stmt 0 view .LVU1362
 5958 02ca E788     		ldrh	r7, [r4, #6]
 5959 02cc 6188     		ldrh	r1, [r4, #2]
 5960              	.LVL422:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 5961              		.loc 33 61 43 view .LVU1363
 5962 02ce 3944     		add	r1, r1, r7
 5963              	.LBE5910:
 5964              	.LBE5909:
 226:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 5965              		.loc 33 226 31 view .LVU1364
 5966 02d0 B4F90070 		ldrsh	r7, [r4]
 227:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 5967              		.loc 33 227 51 view .LVU1365
 5968 02d4 081A     		subs	r0, r1, r0
 5969              	.LVL423:
 5970              	.LBB5912:
 5971              	.LBI5909:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 5972              		.loc 33 61 13 is_stmt 1 view .LVU1366
 5973              	.LBB5911:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 5974              		.loc 33 61 33 view .LVU1367
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 5975              		.loc 33 61 33 is_stmt 0 view .LVU1368
 5976              	.LBE5911:
 5977              	.LBE5912:
 5978              	.LBB5913:
 5979              	.LBB5914:
 5980              	.LBB5915:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5981              		.loc 33 32 66 view .LVU1369
 5982 02d6 0699     		ldr	r1, [sp, #24]
 5983              	.LBE5915:
 5984              	.LBE5914:
 5985              	.LBE5913:
 227:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 5986              		.loc 33 227 51 view .LVU1370
 5987 02d8 84B2     		uxth	r4, r0
 5988              	.LVL424:
 5989              	.LBB5925:
 5990              	.LBB5921:
 5991              	.LBB5918:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 280


  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5992              		.loc 33 32 66 view .LVU1371
 5993 02da 0F80     		strh	r7, [r1]	@ movhi
 5994 02dc 8B80     		strh	r3, [r1, #4]	@ movhi
 5995              	.LVL425:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5996              		.loc 33 32 66 view .LVU1372
 5997              	.LBE5918:
 5998              	.LBE5921:
 5999              	.LBI5913:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 6000              		.loc 33 31 5 is_stmt 1 view .LVU1373
 6001              	.LBE5925:
 6002              	.LBE6005:
 6003              	.LBE6083:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 6004              		.loc 5 468 18 is_stmt 0 view .LVU1374
 6005 02de BFB2     		uxth	r7, r7
 6006              	.LVL426:
 6007              	.LBB6084:
 6008              	.LBB6006:
 6009              	.LBB5926:
 6010              	.LBB5922:
 6011              	.LBB5919:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6012              		.loc 33 32 66 view .LVU1375
 6013 02e0 CA80     		strh	r2, [r1, #6]	@ movhi
 6014 02e2 4C80     		strh	r4, [r1, #2]	@ movhi
 6015              	.LVL427:
 6016              	.LBB5916:
 6017              	.LBI5916:
 6018              		.loc 33 261 13 is_stmt 1 view .LVU1376
 6019              	.LBE5916:
 6020              	.LBE5919:
 6021              	.LBE5922:
 6022              	.LBE5926:
 6023              	.LBE6006:
 6024              	.LBE6084:
 6025              		.loc 33 261 41 view .LVU1377
 6026              	.LBB6085:
 6027              	.LBB6007:
 6028              	.LBB5927:
 6029              	.LBB5923:
 6030              	.LBB5920:
 6031              	.LBB5917:
 6032              	.LBI5917:
 6033              		.loc 33 261 13 view .LVU1378
 6034              	.LBE5917:
 6035              	.LBE5920:
 6036              	.LBE5923:
 6037              	.LBE5927:
 6038              	.LBE6007:
 6039              	.LBE6085:
 6040              		.loc 33 261 41 view .LVU1379
 6041              	.LBB6086:
 6042              	.LBB6008:
 6043              	.LBB5928:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 281


 6044              	.LBB5924:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6045              		.loc 33 34 5 is_stmt 0 view .LVU1380
 6046 02e4 CEE6     		b	.L321
 6047              	.LVL428:
 6048              	.L315:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6049              		.loc 33 34 5 view .LVU1381
 6050              	.LBE5924:
 6051              	.LBE5928:
 235:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 6052              		.loc 33 235 13 is_stmt 1 view .LVU1382
 236:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6053              		.loc 33 236 17 view .LVU1383
 6054              	.LBB5929:
 6055              	.LBI5929:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6056              		.loc 33 62 13 view .LVU1384
 6057              	.LBB5930:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6058              		.loc 33 62 34 view .LVU1385
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6059              		.loc 33 62 34 is_stmt 0 view .LVU1386
 6060              	.LBE5930:
 6061              	.LBE5929:
 6062              	.LBB5932:
 6063              	.LBI5932:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6064              		.loc 33 62 13 is_stmt 1 view .LVU1387
 6065              	.LBB5933:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6066              		.loc 33 62 34 view .LVU1388
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6067              		.loc 33 62 34 is_stmt 0 view .LVU1389
 6068              	.LBE5933:
 6069              	.LBE5932:
 6070              	.LBB5934:
 6071              	.LBB5931:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6072              		.loc 33 62 53 view .LVU1390
 6073 02e6 B4F90410 		ldrsh	r1, [r4, #4]
 6074              	.LVL429:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6075              		.loc 33 62 44 view .LVU1391
 6076 02ea 2788     		ldrh	r7, [r4]
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6077              		.loc 33 62 53 view .LVU1392
 6078 02ec 0029     		cmp	r1, #0
 6079 02ee B8BF     		it	lt
 6080 02f0 0131     		addlt	r1, r1, #1
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6081              		.loc 33 62 44 view .LVU1393
 6082 02f2 07EB6107 		add	r7, r7, r1, asr #1
 6083              	.LBE5931:
 6084              	.LBE5934:
 236:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6085              		.loc 33 236 58 view .LVU1394
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 282


 6086 02f6 A7EB6307 		sub	r7, r7, r3, asr #1
 6087              	.L381:
 6088              	.LBB5935:
 6089              	.LBB5936:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6090              		.loc 33 61 43 view .LVU1395
 6091 02fa B4F802C0 		ldrh	ip, [r4, #2]
 6092              	.LBE5936:
 6093              	.LBE5935:
 236:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6094              		.loc 33 236 58 view .LVU1396
 6095 02fe BFB2     		uxth	r7, r7
 6096              	.LVL430:
 6097              	.LBB5939:
 6098              	.LBI5935:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6099              		.loc 33 61 13 is_stmt 1 view .LVU1397
 6100              	.LBB5937:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6101              		.loc 33 61 33 view .LVU1398
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6102              		.loc 33 61 43 is_stmt 0 view .LVU1399
 6103 0300 E488     		ldrh	r4, [r4, #6]
 6104              	.LVL431:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6105              		.loc 33 61 43 view .LVU1400
 6106              	.LBE5937:
 6107              	.LBE5939:
 6108              	.LBB5940:
 6109              	.LBB5941:
 6110              	.LBB5942:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6111              		.loc 33 32 66 view .LVU1401
 6112 0302 0699     		ldr	r1, [sp, #24]
 6113              	.LBE5942:
 6114              	.LBE5941:
 6115              	.LBE5940:
 6116              	.LBB5954:
 6117              	.LBB5938:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6118              		.loc 33 61 43 view .LVU1402
 6119 0304 6444     		add	r4, r4, ip
 6120              	.LBE5938:
 6121              	.LBE5954:
 6122              	.LBB5955:
 6123              	.LBB5949:
 6124              	.LBB5945:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6125              		.loc 33 32 66 view .LVU1403
 6126 0306 8B80     		strh	r3, [r1, #4]	@ movhi
 6127              	.LBE5945:
 6128              	.LBE5949:
 6129              	.LBE5955:
 237:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 6130              		.loc 33 237 51 view .LVU1404
 6131 0308 201A     		subs	r0, r4, r0
 6132              	.LBB5956:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 283


 6133              	.LBB5950:
 6134              	.LBB5946:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6135              		.loc 33 32 66 view .LVU1405
 6136 030a CA80     		strh	r2, [r1, #6]	@ movhi
 6137 030c 0F80     		strh	r7, [r1]	@ movhi
 6138              	.LBE5946:
 6139              	.LBE5950:
 6140              	.LBE5956:
 237:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 6141              		.loc 33 237 51 view .LVU1406
 6142 030e 84B2     		uxth	r4, r0
 6143              	.LVL432:
 6144              	.LBB5957:
 6145              	.LBI5940:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 6146              		.loc 33 31 5 is_stmt 1 view .LVU1407
 6147              	.LBB5951:
 6148              	.LBB5947:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6149              		.loc 33 32 66 is_stmt 0 view .LVU1408
 6150 0310 4C80     		strh	r4, [r1, #2]	@ movhi
 6151              	.LVL433:
 6152              	.LBB5943:
 6153              	.LBI5943:
 6154              		.loc 33 261 13 is_stmt 1 view .LVU1409
 6155              	.LBE5943:
 6156              	.LBE5947:
 6157              	.LBE5951:
 6158              	.LBE5957:
 6159              	.LBE6008:
 6160              	.LBE6086:
 6161              		.loc 33 261 41 view .LVU1410
 6162              	.LBB6087:
 6163              	.LBB6009:
 6164              	.LBB5958:
 6165              	.LBB5952:
 6166              	.LBB5948:
 6167              	.LBB5944:
 6168              	.LBI5944:
 6169              		.loc 33 261 13 view .LVU1411
 6170              	.LBE5944:
 6171              	.LBE5948:
 6172              	.LBE5952:
 6173              	.LBE5958:
 6174              	.LBE6009:
 6175              	.LBE6087:
 6176              		.loc 33 261 41 view .LVU1412
 6177              	.LBB6088:
 6178              	.LBB6010:
 6179              	.LBB5959:
 6180              	.LBB5953:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6181              		.loc 33 34 5 is_stmt 0 view .LVU1413
 6182 0312 B7E6     		b	.L321
 6183              	.LVL434:
 6184              	.L314:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 284


  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6185              		.loc 33 34 5 view .LVU1414
 6186              	.LBE5953:
 6187              	.LBE5959:
 230:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 6188              		.loc 33 230 13 is_stmt 1 view .LVU1415
 231:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6189              		.loc 33 231 17 view .LVU1416
 6190              	.LBB5960:
 6191              	.LBI5960:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6192              		.loc 33 60 13 view .LVU1417
 6193              	.LBB5961:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6194              		.loc 33 60 32 view .LVU1418
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6195              		.loc 33 60 42 is_stmt 0 view .LVU1419
 6196 0314 2788     		ldrh	r7, [r4]
 6197 0316 A188     		ldrh	r1, [r4, #4]
 6198              	.LVL435:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6199              		.loc 33 60 42 view .LVU1420
 6200 0318 0F44     		add	r7, r7, r1
 6201              	.LBE5961:
 6202              	.LBE5960:
 231:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6203              		.loc 33 231 50 view .LVU1421
 6204 031a FF1A     		subs	r7, r7, r3
 6205 031c EDE7     		b	.L381
 6206              	.L394:
 6207 031e 00BF     		.align	2
 6208              	.L393:
 6209 0320 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 6210 0324 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 6211              	.LVL436:
 6212              	.L313:
 240:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_,
 6213              		.loc 33 240 13 is_stmt 1 view .LVU1422
 241:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 6214              		.loc 33 241 17 view .LVU1423
 6215              	.LBB5962:
 6216              	.LBB5963:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6217              		.loc 33 63 54 is_stmt 0 view .LVU1424
 6218 0328 B4F90610 		ldrsh	r1, [r4, #6]
 6219              	.LVL437:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6220              		.loc 33 63 44 view .LVU1425
 6221 032c B4F802C0 		ldrh	ip, [r4, #2]
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6222              		.loc 33 63 54 view .LVU1426
 6223 0330 0029     		cmp	r1, #0
 6224              	.LBE5963:
 6225              	.LBE5962:
 241:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 6226              		.loc 33 241 31 view .LVU1427
 6227 0332 B4F90070 		ldrsh	r7, [r4]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 285


 6228              	.LVL438:
 6229              	.LBB5967:
 6230              	.LBI5962:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6231              		.loc 33 63 13 is_stmt 1 view .LVU1428
 6232              	.LBB5964:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6233              		.loc 33 63 34 view .LVU1429
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6234              		.loc 33 63 34 is_stmt 0 view .LVU1430
 6235              	.LBE5964:
 6236              	.LBE5967:
 6237              	.LBB5968:
 6238              	.LBI5968:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6239              		.loc 33 63 13 is_stmt 1 view .LVU1431
 6240              	.LBB5969:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6241              		.loc 33 63 34 view .LVU1432
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6242              		.loc 33 63 34 is_stmt 0 view .LVU1433
 6243              	.LBE5969:
 6244              	.LBE5968:
 6245              	.LBB5970:
 6246              	.LBB5971:
 6247              	.LBB5972:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6248              		.loc 33 32 66 view .LVU1434
 6249 0336 0698     		ldr	r0, [sp, #24]
 6250              	.LBE5972:
 6251              	.LBE5971:
 6252              	.LBE5970:
 6253              	.LBB5984:
 6254              	.LBB5965:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6255              		.loc 33 63 54 view .LVU1435
 6256 0338 B8BF     		it	lt
 6257 033a 0131     		addlt	r1, r1, #1
 6258              	.LBE5965:
 6259              	.LBE5984:
 6260              	.LBB5985:
 6261              	.LBB5979:
 6262              	.LBB5975:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6263              		.loc 33 32 66 view .LVU1436
 6264 033c C280     		strh	r2, [r0, #6]	@ movhi
 6265              	.LBE5975:
 6266              	.LBE5979:
 6267              	.LBE5985:
 6268              	.LBB5986:
 6269              	.LBB5966:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6270              		.loc 33 63 44 view .LVU1437
 6271 033e 0CEB6104 		add	r4, ip, r1, asr #1
 6272              	.LVL439:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6273              		.loc 33 63 44 view .LVU1438
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 286


 6274              	.LBE5966:
 6275              	.LBE5986:
 6276              	.LBB5987:
 6277              	.LBB5980:
 6278              	.LBB5976:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6279              		.loc 33 32 66 view .LVU1439
 6280 0342 0780     		strh	r7, [r0]	@ movhi
 6281 0344 8380     		strh	r3, [r0, #4]	@ movhi
 6282              	.LBE5976:
 6283              	.LBE5980:
 6284              	.LBE5987:
 6285              	.LBE6010:
 6286              	.LBE6088:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 6287              		.loc 5 468 18 view .LVU1440
 6288 0346 BFB2     		uxth	r7, r7
 6289              	.LBB6089:
 6290              	.LBB6011:
 242:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 6291              		.loc 33 242 58 view .LVU1441
 6292 0348 A4EB5202 		sub	r2, r4, r2, lsr #1
 6293 034c 94B2     		uxth	r4, r2
 6294              	.LVL440:
 6295              	.LBB5988:
 6296              	.LBI5970:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 6297              		.loc 33 31 5 is_stmt 1 view .LVU1442
 6298              	.LBB5981:
 6299              	.LBB5977:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6300              		.loc 33 32 66 is_stmt 0 view .LVU1443
 6301 034e 4480     		strh	r4, [r0, #2]	@ movhi
 6302              	.LVL441:
 6303              	.LBB5973:
 6304              	.LBI5973:
 6305              		.loc 33 261 13 is_stmt 1 view .LVU1444
 6306              	.LBE5973:
 6307              	.LBE5977:
 6308              	.LBE5981:
 6309              	.LBE5988:
 6310              	.LBE6011:
 6311              	.LBE6089:
 6312              		.loc 33 261 41 view .LVU1445
 6313              	.LBB6090:
 6314              	.LBB6012:
 6315              	.LBB5989:
 6316              	.LBB5982:
 6317              	.LBB5978:
 6318              	.LBB5974:
 6319              	.LBI5974:
 6320              		.loc 33 261 13 view .LVU1446
 6321              	.LBE5974:
 6322              	.LBE5978:
 6323              	.LBE5982:
 6324              	.LBE5989:
 6325              	.LBE6012:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 287


 6326              	.LBE6090:
 6327              		.loc 33 261 41 view .LVU1447
 6328              	.LBB6091:
 6329              	.LBB6013:
 6330              	.LBB5990:
 6331              	.LBB5983:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6332              		.loc 33 34 5 is_stmt 0 view .LVU1448
 6333 0350 98E6     		b	.L321
 6334              	.LVL442:
 6335              	.L341:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6336              		.loc 33 34 5 view .LVU1449
 6337              	.LBE5983:
 6338              	.LBE5990:
 6339              	.LBE6013:
 6340              	.LBE6091:
 6341              	.LBB6092:
 6342              	.LBB6070:
 6343              	.LBB6067:
 6344              	.LBB6066:
 402:../../libdaisy/src/hid/disp/display.h **** 
 6345              		.loc 5 402 20 view .LVU1450
 6346 0352 4FF0000B 		mov	fp, #0
 6347              	.LVL443:
 402:../../libdaisy/src/hid/disp/display.h **** 
 6348              		.loc 5 402 20 view .LVU1451
 6349 0356 69E7     		b	.L339
 6350              	.LVL444:
 6351              	.L386:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 6352              		.loc 5 405 17 view .LVU1452
 6353 0358 4046     		mov	r0, r8
 6354 035a 9847     		blx	r3
 6355              	.LVL445:
 6356 035c D3E6     		b	.L340
 6357              	.L387:
 406:../../libdaisy/src/hid/disp/display.h ****         {
 6358              		.loc 5 406 21 view .LVU1453
 6359 035e 4046     		mov	r0, r8
 6360 0360 9847     		blx	r3
 6361              	.LVL446:
 6362 0362 DEE6     		b	.L342
 6363              	.LVL447:
 6364              	.L391:
 6365              	.LBB6064:
 6366              	.LBB6060:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6367              		.loc 5 174 33 view .LVU1454
 6368 0364 4046     		mov	r0, r8
 6369 0366 9847     		blx	r3
 6370              	.LVL448:
 6371 0368 51E7     		b	.L356
 6372              	.LVL449:
 6373              	.L389:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6374              		.loc 5 173 32 view .LVU1455
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 288


 6375 036a 4046     		mov	r0, r8
 6376 036c 9847     		blx	r3
 6377              	.LVL450:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6378              		.loc 5 173 44 view .LVU1456
 6379 036e D8F80020 		ldr	r2, [r8]
 6380 0372 3CE7     		b	.L353
 6381              	.LVL451:
 6382              	.L343:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6383              		.loc 5 173 44 view .LVU1457
 6384              	.LBE6060:
 6385              	.LBE6064:
 434:../../libdaisy/src/hid/disp/display.h **** 
 6386              		.loc 5 434 19 view .LVU1458
 6387 0374 B8F804A0 		ldrh	r10, [r8, #4]
 6388 0378 2EE7     		b	.L345
 6389              	.LVL452:
 6390              	.L392:
 6391              	.LBB6065:
 6392              	.LBB6061:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6393              		.loc 5 174 45 view .LVU1459
 6394 037a 4046     		mov	r0, r8
 6395 037c 9847     		blx	r3
 6396              	.LVL453:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6397              		.loc 5 174 19 view .LVU1460
 6398 037e 0138     		subs	r0, r0, #1
 6399 0380 83B2     		uxth	r3, r0
 6400 0382 0293     		str	r3, [sp, #8]
 6401              	.LVL454:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6402              		.loc 5 174 19 view .LVU1461
 6403 0384 4FE7     		b	.L357
 6404              	.LVL455:
 6405              	.L390:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6406              		.loc 5 173 43 view .LVU1462
 6407 0386 4046     		mov	r0, r8
 6408 0388 9847     		blx	r3
 6409              	.LVL456:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6410              		.loc 5 173 19 view .LVU1463
 6411 038a 0138     		subs	r0, r0, #1
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6412              		.loc 5 174 34 view .LVU1464
 6413 038c D8F80020 		ldr	r2, [r8]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6414              		.loc 5 173 19 view .LVU1465
 6415 0390 85B2     		uxth	r5, r0
 6416              	.LVL457:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6417              		.loc 5 173 19 view .LVU1466
 6418 0392 34E7     		b	.L354
 6419              	.LVL458:
 6420              	.L310:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 289


 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6421              		.loc 5 173 19 view .LVU1467
 6422              	.LBE6061:
 6423              	.LBE6065:
 6424              	.LBE6066:
 6425              	.LBE6067:
 6426              	.LBE6070:
 6427              	.LBE6092:
 6428              	.LBB6093:
 6429              	.LBB6014:
 255:../../libdaisy/src/hid/disp/graphics_common.h ****         }
 6430              		.loc 33 255 13 is_stmt 1 view .LVU1468
 255:../../libdaisy/src/hid/disp/graphics_common.h ****         }
 6431              		.loc 33 255 22 view .LVU1469
 6432              	.LBB5991:
 6433              	.LBI5991:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6434              		.loc 33 24 5 view .LVU1470
 6435              	.LBE5991:
 6436              	.LBE6014:
 6437              	.LBE6093:
 6438              	.LBB6094:
 6439              	.LBB6020:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6440              		.loc 5 173 33 is_stmt 0 view .LVU1471
 6441 0394 D8F80030 		ldr	r3, [r8]
 6442              	.LBE6020:
 6443              	.LBE6094:
 6444              	.LBB6095:
 6445              	.LBB6015:
 6446              	.LBB5993:
 6447              	.LBB5992:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6448              		.loc 33 24 53 view .LVU1472
 6449 0398 0024     		movs	r4, #0
 6450              	.LVL459:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6451              		.loc 33 24 53 view .LVU1473
 6452 039a 069A     		ldr	r2, [sp, #24]
 6453 039c 1249     		ldr	r1, .L395
 6454              	.LVL460:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6455              		.loc 33 24 53 view .LVU1474
 6456 039e 1480     		strh	r4, [r2]	@ movhi
 6457 03a0 5480     		strh	r4, [r2, #2]	@ movhi
 6458 03a2 9480     		strh	r4, [r2, #4]	@ movhi
 6459 03a4 D480     		strh	r4, [r2, #6]	@ movhi
 6460              	.LVL461:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6461              		.loc 33 24 53 view .LVU1475
 6462              	.LBE5992:
 6463              	.LBE5993:
 6464              	.LBE6015:
 6465              	.LBE6095:
  56:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetY() const { return y_; }
 6466              		.loc 33 56 28 is_stmt 1 view .LVU1476
  57:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetWidth() const { return width_; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 290


 6467              		.loc 33 57 28 view .LVU1477
 6468              	.LBB6096:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 6469              		.loc 5 171 10 view .LVU1478
 6470              	.LBB6021:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6471              		.loc 5 173 9 view .LVU1479
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6472              		.loc 5 173 33 is_stmt 0 view .LVU1480
 6473 03a6 DA68     		ldr	r2, [r3, #12]
 6474 03a8 0191     		str	r1, [sp, #4]
 6475 03aa 8A42     		cmp	r2, r1
 6476 03ac 05D0     		beq	.L328
 6477 03ae 2746     		mov	r7, r4
 6478              	.LVL462:
 6479              	.L329:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6480              		.loc 5 173 32 view .LVU1481
 6481 03b0 4046     		mov	r0, r8
 6482 03b2 9047     		blx	r2
 6483              	.LVL463:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6484              		.loc 5 173 44 view .LVU1482
 6485 03b4 D8F80030 		ldr	r3, [r8]
 6486 03b8 6EE6     		b	.L330
 6487              	.LVL464:
 6488              	.L328:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6489              		.loc 5 174 34 view .LVU1483
 6490 03ba 9B68     		ldr	r3, [r3, #8]
 6491 03bc 0B4A     		ldr	r2, .L395+4
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6492              		.loc 5 173 19 view .LVU1484
 6493 03be A8F80440 		strh	r4, [r8, #4]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6494              		.loc 5 174 9 is_stmt 1 view .LVU1485
 6495 03c2 9342     		cmp	r3, r2
 6496 03c4 0392     		str	r2, [sp, #12]
 6497 03c6 3FF482AE 		beq	.L335
 6498              	.LVL465:
 6499              	.L361:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6500              		.loc 5 174 33 is_stmt 0 view .LVU1486
 6501 03ca 4046     		mov	r0, r8
 6502 03cc 9847     		blx	r3
 6503              	.LVL466:
 6504 03ce 74E6     		b	.L333
 6505              	.L385:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6506              		.loc 5 174 45 view .LVU1487
 6507 03d0 4046     		mov	r0, r8
 6508 03d2 9847     		blx	r3
 6509              	.LVL467:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6510              		.loc 5 174 19 view .LVU1488
 6511 03d4 0138     		subs	r0, r0, #1
 6512 03d6 84B2     		uxth	r4, r0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 291


 6513 03d8 79E6     		b	.L335
 6514              	.L384:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6515              		.loc 5 173 43 view .LVU1489
 6516 03da 4046     		mov	r0, r8
 6517 03dc 9047     		blx	r2
 6518              	.LVL468:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6519              		.loc 5 173 19 view .LVU1490
 6520 03de 0138     		subs	r0, r0, #1
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6521              		.loc 5 174 34 view .LVU1491
 6522 03e0 D8F80030 		ldr	r3, [r8]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6523              		.loc 5 173 19 view .LVU1492
 6524 03e4 87B2     		uxth	r7, r0
 6525 03e6 5FE6     		b	.L331
 6526              	.L396:
 6527              		.align	2
 6528              	.L395:
 6529 03e8 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 6530 03ec 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 6531              	.LBE6021:
 6532              	.LBE6096:
 6533              		.cfi_endproc
 6534              	.LFE6192:
 6536              		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 6537              		.align	1
 6538              		.p2align 2,,3
 6539              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 6540              		.syntax unified
 6541              		.thumb
 6542              		.thumb_func
 6543              		.fpu fpv5-d16
 6545              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 6546              	.LVL469:
 6547              	.LFB6190:
 257:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 6548              		.loc 5 257 10 is_stmt 1 view -0
 6549              		.cfi_startproc
 6550              		@ args = 12, pretend = 0, frame = 24
 6551              		@ frame_needed = 0, uses_anonymous_args = 0
 257:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 6552              		.loc 5 257 10 is_stmt 0 view .LVU1494
 6553 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6554              		.cfi_def_cfa_offset 36
 6555              		.cfi_offset 4, -36
 6556              		.cfi_offset 5, -32
 6557              		.cfi_offset 6, -28
 6558              		.cfi_offset 7, -24
 6559              		.cfi_offset 8, -20
 6560              		.cfi_offset 9, -16
 6561              		.cfi_offset 10, -12
 6562              		.cfi_offset 11, -8
 6563              		.cfi_offset 14, -4
 6564 0004 87B0     		sub	sp, sp, #28
 6565              		.cfi_def_cfa_offset 64
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 292


 257:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 6566              		.loc 5 257 10 view .LVU1495
 6567 0006 9DF84850 		ldrb	r5, [sp, #72]	@ zero_extendqisi2
 6568 000a 109C     		ldr	r4, [sp, #64]
 6569 000c 2E46     		mov	r6, r5
 6570 000e 0195     		str	r5, [sp, #4]
 6571 0010 9DF84450 		ldrb	r5, [sp, #68]	@ zero_extendqisi2
 6572              	.LBB6166:
 264:../../libdaisy/src/hid/disp/display.h ****         {
 6573              		.loc 5 264 9 view .LVU1496
 6574 0014 9EB3     		cbz	r6, .L398
 6575              	.LVL470:
 264:../../libdaisy/src/hid/disp/display.h ****         {
 6576              		.loc 5 264 9 view .LVU1497
 6577              	.LBE6166:
 6578              	.LBB6288:
 6579              	.LBB6289:
 266:../../libdaisy/src/hid/disp/display.h ****             {
 6580              		.loc 5 266 40 is_stmt 1 view .LVU1498
 6581 0016 9942     		cmp	r1, r3
 6582 0018 2ED8     		bhi	.L397
 6583 001a 9946     		mov	r9, r3
 6584              	.LVL471:
 6585              	.L401:
 6586              	.LBB6290:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6587              		.loc 5 268 44 view .LVU1499
 6588 001c A242     		cmp	r2, r4
 6589 001e 28D8     		bhi	.L404
 6590              	.LBB6291:
 6591              	.LBB6292:
 6592              	.LBB6293:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6593              		.loc 15 241 14 is_stmt 0 view .LVU1500
 6594 0020 7F29     		cmp	r1, #127
 6595 0022 1646     		mov	r6, r2
 6596 0024 94BF     		ite	ls
 6597 0026 0023     		movls	r3, #0
 6598 0028 0123     		movhi	r3, #1
 6599 002a 08E0     		b	.L405
 6600              	.LVL472:
 6601              	.L488:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6602              		.loc 15 244 42 view .LVU1501
 6603 002c 9CF81480 		ldrb	r8, [ip, #20]	@ zero_extendqisi2
 6604 0030 4EEA080E 		orr	lr, lr, r8
 6605 0034 8CF814E0 		strb	lr, [ip, #20]
 6606              	.LVL473:
 6607              	.L402:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6608              		.loc 15 244 42 view .LVU1502
 6609              	.LBE6293:
 6610              	.LBE6292:
 6611              	.LBE6291:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6612              		.loc 5 268 17 is_stmt 1 view .LVU1503
 6613 0038 0136     		adds	r6, r6, #1
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 293


 6614              	.LVL474:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6615              		.loc 5 268 44 view .LVU1504
 6616 003a B442     		cmp	r4, r6
 6617 003c 19D3     		bcc	.L404
 6618              	.L405:
 6619              	.LVL475:
 6620              	.LBB6307:
 6621              	.LBI6291:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 6622              		.loc 4 41 10 view .LVU1505
 6623              	.LBB6304:
 6624              	.LBI6292:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 6625              		.loc 15 239 10 view .LVU1506
 6626              	.LBB6301:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6627              		.loc 15 241 9 is_stmt 0 view .LVU1507
 6628 003e 3F2E     		cmp	r6, #63
 6629 0040 FAD8     		bhi	.L402
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6630              		.loc 15 241 9 view .LVU1508
 6631 0042 002B     		cmp	r3, #0
 6632 0044 F8D1     		bne	.L402
 6633              	.LVL476:
 6634              	.LBB6294:
 6635              	.LBI6294:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 6636              		.loc 15 239 10 is_stmt 1 view .LVU1509
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 6637              		.loc 15 239 10 is_stmt 0 view .LVU1510
 6638              	.LBE6294:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6639              		.loc 15 244 28 view .LVU1511
 6640 0046 4FEAD60C 		lsr	ip, r6, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6641              		.loc 15 244 54 view .LVU1512
 6642 004a 06F0070E 		and	lr, r6, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6643              		.loc 15 244 48 view .LVU1513
 6644 004e 4FF00108 		mov	r8, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6645              		.loc 15 244 42 view .LVU1514
 6646 0052 01EBCC1C 		add	ip, r1, ip, lsl #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6647              		.loc 15 244 48 view .LVU1515
 6648 0056 08FA0EFE 		lsl	lr, r8, lr
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6649              		.loc 15 244 42 view .LVU1516
 6650 005a 8444     		add	ip, ip, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 6651              		.loc 15 243 9 view .LVU1517
 6652 005c 002D     		cmp	r5, #0
 6653 005e E5D1     		bne	.L488
 6654              	.LBB6298:
 6655              	.LBB6295:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 294


 6656              		.loc 15 246 42 view .LVU1518
 6657 0060 9CF814B0 		ldrb	fp, [ip, #20]	@ zero_extendqisi2
 6658              	.LBE6295:
 6659              	.LBE6298:
 6660              	.LBE6301:
 6661              	.LBE6304:
 6662              	.LBE6307:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6663              		.loc 5 268 17 view .LVU1519
 6664 0064 0136     		adds	r6, r6, #1
 6665              	.LVL477:
 6666              	.LBB6308:
 6667              	.LBB6305:
 6668              	.LBB6302:
 6669              	.LBB6299:
 6670              	.LBB6296:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 6671              		.loc 15 246 42 view .LVU1520
 6672 0066 2BEA0E0A 		bic	r10, fp, lr
 6673              	.LBE6296:
 6674              	.LBE6299:
 6675              	.LBE6302:
 6676              	.LBE6305:
 6677              	.LBE6308:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6678              		.loc 5 268 44 view .LVU1521
 6679 006a B442     		cmp	r4, r6
 6680              	.LBB6309:
 6681              	.LBB6306:
 6682              	.LBB6303:
 6683              	.LBB6300:
 6684              	.LBB6297:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 6685              		.loc 15 246 42 view .LVU1522
 6686 006c 8CF814A0 		strb	r10, [ip, #20]
 6687              	.LVL478:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 6688              		.loc 15 246 42 view .LVU1523
 6689              	.LBE6297:
 6690              	.LBE6300:
 6691              	.LBE6303:
 6692              	.LBE6306:
 6693              	.LBE6309:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6694              		.loc 5 268 17 is_stmt 1 view .LVU1524
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6695              		.loc 5 268 44 view .LVU1525
 6696 0070 E5D2     		bcs	.L405
 6697              	.LVL479:
 6698              	.L404:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6699              		.loc 5 268 44 is_stmt 0 view .LVU1526
 6700              	.LBE6290:
 266:../../libdaisy/src/hid/disp/display.h ****             {
 6701              		.loc 5 266 13 is_stmt 1 view .LVU1527
 6702 0072 0131     		adds	r1, r1, #1
 6703              	.LVL480:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 295


 266:../../libdaisy/src/hid/disp/display.h ****             {
 6704              		.loc 5 266 40 view .LVU1528
 6705 0074 8945     		cmp	r9, r1
 6706 0076 D1D2     		bcs	.L401
 6707              	.LVL481:
 6708              	.L397:
 266:../../libdaisy/src/hid/disp/display.h ****             {
 6709              		.loc 5 266 40 is_stmt 0 view .LVU1529
 6710              	.LBE6289:
 6711              	.LBE6288:
 281:../../libdaisy/src/hid/disp/display.h **** 
 6712              		.loc 5 281 5 view .LVU1530
 6713 0078 07B0     		add	sp, sp, #28
 6714              		.cfi_remember_state
 6715              		.cfi_def_cfa_offset 36
 6716              		@ sp needed
 6717 007a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6718              	.LVL482:
 6719              	.L398:
 6720              		.cfi_restore_state
 6721              	.LBB6310:
 6722              	.LBB6167:
 6723              	.LBI6167:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 6724              		.loc 5 221 10 is_stmt 1 view .LVU1531
 6725              	.LBB6168:
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 6726              		.loc 5 227 52 is_stmt 0 view .LVU1532
 6727 007e A3EB0108 		sub	r8, r3, r1
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 6728              		.loc 5 227 22 view .LVU1533
 6729 0082 B8F1000F 		cmp	r8, #0
 6730 0086 B8BF     		it	lt
 6731 0088 C8F10008 		rsblt	r8, r8, #0
 6732              	.LVL483:
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 6733              		.loc 5 229 42 view .LVU1534
 6734 008c 9942     		cmp	r1, r3
 6735 008e C0F04E81 		bcc	.L406
 6736              	.LVL484:
 6737              	.LBB6169:
 6738              	.LBI6169:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 6739              		.loc 4 41 10 is_stmt 1 view .LVU1535
 6740              	.LBB6170:
 6741              	.LBI6170:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 6742              		.loc 15 239 10 view .LVU1536
 6743              	.LBB6171:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6744              		.loc 15 241 14 is_stmt 0 view .LVU1537
 6745 0092 7F2B     		cmp	r3, #127
 6746              	.LBE6171:
 6747              	.LBE6170:
 6748              	.LBE6169:
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 6749              		.loc 5 229 42 view .LVU1538
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 296


 6750 0094 4FF0FF3A 		mov	r10, #-1
 6751              	.LBB6182:
 6752              	.LBB6178:
 6753              	.LBB6174:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6754              		.loc 15 241 14 view .LVU1539
 6755 0098 94BF     		ite	ls
 6756 009a 0026     		movls	r6, #0
 6757 009c 0126     		movhi	r6, #1
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6758              		.loc 15 241 28 view .LVU1540
 6759 009e 3F2A     		cmp	r2, #63
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6760              		.loc 15 241 14 view .LVU1541
 6761 00a0 0096     		str	r6, [sp]
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6762              		.loc 15 241 28 view .LVU1542
 6763 00a2 94BF     		ite	ls
 6764 00a4 0027     		movls	r7, #0
 6765 00a6 0127     		movhi	r7, #1
 6766 00a8 0297     		str	r7, [sp, #8]
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6767              		.loc 15 241 9 view .LVU1543
 6768 00aa A6B9     		cbnz	r6, .L407
 6769 00ac 9FB9     		cbnz	r7, .L407
 6770              	.LVL485:
 6771              	.L448:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6772              		.loc 15 244 28 view .LVU1544
 6773 00ae D608     		lsrs	r6, r2, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6774              		.loc 15 244 54 view .LVU1545
 6775 00b0 02F0070C 		and	ip, r2, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6776              		.loc 15 244 48 view .LVU1546
 6777 00b4 0127     		movs	r7, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6778              		.loc 15 244 42 view .LVU1547
 6779 00b6 03EBC616 		add	r6, r3, r6, lsl #7
 6780 00ba 0644     		add	r6, r6, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 6781              		.loc 15 243 9 view .LVU1548
 6782 00bc 002D     		cmp	r5, #0
 6783 00be 00F09481 		beq	.L408
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6784              		.loc 15 244 48 view .LVU1549
 6785 00c2 07FA0CF7 		lsl	r7, r7, ip
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6786              		.loc 15 244 42 view .LVU1550
 6787 00c6 96F814C0 		ldrb	ip, [r6, #20]	@ zero_extendqisi2
 6788 00ca 47EA0C07 		orr	r7, r7, ip
 6789 00ce 3775     		strb	r7, [r6, #20]
 6790 00d0 0026     		movs	r6, #0
 6791 00d2 0296     		str	r6, [sp, #8]
 6792 00d4 0096     		str	r6, [sp]
 6793              	.L407:
 6794              	.LVL486:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 297


 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6795              		.loc 15 244 42 view .LVU1551
 6796              	.LBE6174:
 6797              	.LBE6178:
 6798              	.LBE6182:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 6799              		.loc 5 239 26 is_stmt 1 view .LVU1552
 6800 00d6 9942     		cmp	r1, r3
 6801 00d8 00F09781 		beq	.L489
 6802              	.L410:
 6803              	.LVL487:
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 6804              		.loc 5 227 22 is_stmt 0 view .LVU1553
 6805 00dc 4646     		mov	r6, r8
 6806 00de 9446     		mov	ip, r2
 6807 00e0 8E46     		mov	lr, r1
 6808              	.LVL488:
 6809              	.L412:
 6810              	.LBB6183:
 6811              	.LBI6183:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 6812              		.loc 4 41 10 is_stmt 1 view .LVU1554
 6813              	.LBB6184:
 6814              	.LBI6184:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 6815              		.loc 15 239 10 view .LVU1555
 6816              	.LBB6185:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6817              		.loc 15 241 9 is_stmt 0 view .LVU1556
 6818 00e2 BEF17F0F 		cmp	lr, #127
 6819 00e6 16D8     		bhi	.L413
 6820 00e8 BCF13F0F 		cmp	ip, #63
 6821 00ec 13D8     		bhi	.L413
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6822              		.loc 15 244 28 view .LVU1557
 6823 00ee 4FEADC07 		lsr	r7, ip, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6824              		.loc 15 244 54 view .LVU1558
 6825 00f2 0CF0070B 		and	fp, ip, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6826              		.loc 15 244 48 view .LVU1559
 6827 00f6 4FF00109 		mov	r9, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6828              		.loc 15 244 42 view .LVU1560
 6829 00fa 0EEBC717 		add	r7, lr, r7, lsl #7
 6830 00fe 0744     		add	r7, r7, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 6831              		.loc 15 243 9 view .LVU1561
 6832 0100 002D     		cmp	r5, #0
 6833 0102 00F03981 		beq	.L414
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6834              		.loc 15 244 48 view .LVU1562
 6835 0106 09FA0BF9 		lsl	r9, r9, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6836              		.loc 15 244 42 view .LVU1563
 6837 010a 97F814B0 		ldrb	fp, [r7, #20]	@ zero_extendqisi2
 6838 010e 49EA0B09 		orr	r9, r9, fp
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 298


 6839 0112 87F81490 		strb	r9, [r7, #20]
 6840              	.L413:
 6841              	.LVL489:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6842              		.loc 15 244 42 view .LVU1564
 6843              	.LBE6185:
 6844              	.LBE6184:
 6845              	.LBE6183:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 6846              		.loc 5 243 13 view .LVU1565
 6847 0116 7700     		lsls	r7, r6, #1
 6848              	.LVL490:
 246:../../libdaisy/src/hid/disp/display.h ****             }
 6849              		.loc 5 246 20 view .LVU1566
 6850 0118 18BF     		it	ne
 6851 011a D644     		addne	lr, lr, r10
 6852              	.LVL491:
 249:../../libdaisy/src/hid/disp/display.h ****             {
 6853              		.loc 5 249 13 view .LVU1567
 6854 011c B845     		cmp	r8, r7
 6855 011e 02DD     		ble	.L416
 251:../../libdaisy/src/hid/disp/display.h ****                 y1 += signY;
 6856              		.loc 5 251 23 view .LVU1568
 6857 0120 4644     		add	r6, r6, r8
 6858              	.LVL492:
 252:../../libdaisy/src/hid/disp/display.h ****             }
 6859              		.loc 5 252 20 view .LVU1569
 6860 0122 0CF1FF3C 		add	ip, ip, #-1
 6861              	.LVL493:
 6862              	.L416:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 6863              		.loc 5 239 26 is_stmt 1 view .LVU1570
 6864 0126 7345     		cmp	r3, lr
 6865 0128 DBD1     		bne	.L412
 239:../../libdaisy/src/hid/disp/display.h ****         {
 6866              		.loc 5 239 26 is_stmt 0 view .LVU1571
 6867 012a 6245     		cmp	r2, ip
 6868 012c D9D1     		bne	.L412
 6869 012e 0026     		movs	r6, #0
 6870              	.LVL494:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 6871              		.loc 5 239 26 view .LVU1572
 6872 0130 0496     		str	r6, [sp, #16]
 6873              	.LVL495:
 6874              	.L409:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 6875              		.loc 5 239 26 view .LVU1573
 6876              	.LBE6168:
 6877              	.LBE6167:
 6878              	.LBB6198:
 6879              	.LBI6198:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 6880              		.loc 5 221 10 is_stmt 1 view .LVU1574
 6881              	.LBB6199:
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 6882              		.loc 5 228 52 is_stmt 0 view .LVU1575
 6883 0132 A4EB0209 		sub	r9, r4, r2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 299


 6884              	.LBB6200:
 6885              	.LBB6201:
 6886              	.LBB6202:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6887              		.loc 15 241 9 view .LVU1576
 6888 0136 009F     		ldr	r7, [sp]
 6889              	.LBE6202:
 6890              	.LBE6201:
 6891              	.LBE6200:
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 6892              		.loc 5 228 22 view .LVU1577
 6893 0138 B9F1000F 		cmp	r9, #0
 6894 013c B8BF     		it	lt
 6895 013e C9F10009 		rsblt	r9, r9, #0
 6896              	.LVL496:
 6897              	.LBB6217:
 6898              	.LBB6211:
 6899              	.LBB6205:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6900              		.loc 15 241 28 view .LVU1578
 6901 0142 3F2C     		cmp	r4, #63
 6902 0144 94BF     		ite	ls
 6903 0146 0026     		movls	r6, #0
 6904 0148 0126     		movhi	r6, #1
 6905              	.LBE6205:
 6906              	.LBE6211:
 6907              	.LBE6217:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 6908              		.loc 5 230 42 view .LVU1579
 6909 014a A242     		cmp	r2, r4
 231:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error2;
 6910              		.loc 5 231 22 view .LVU1580
 6911 014c C9F10008 		rsb	r8, r9, #0
 6912              	.LVL497:
 6913              	.LBB6218:
 6914              	.LBI6200:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 6915              		.loc 4 41 10 is_stmt 1 view .LVU1581
 6916              	.LBB6212:
 6917              	.LBI6201:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 6918              		.loc 15 239 10 view .LVU1582
 6919              	.LBB6206:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6920              		.loc 15 241 28 is_stmt 0 view .LVU1583
 6921 0150 0396     		str	r6, [sp, #12]
 6922              	.LBE6206:
 6923              	.LBE6212:
 6924              	.LBE6218:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 6925              		.loc 5 230 42 view .LVU1584
 6926 0152 C0F02381 		bcc	.L417
 6927              	.LVL498:
 6928              	.LBB6219:
 6929              	.LBB6213:
 6930              	.LBB6207:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 300


 6931              		.loc 15 241 9 view .LVU1585
 6932 0156 002F     		cmp	r7, #0
 6933 0158 40F05081 		bne	.L452
 6934 015c 002E     		cmp	r6, #0
 6935 015e 40F04D81 		bne	.L452
 6936              	.LBE6207:
 6937              	.LBE6213:
 6938              	.LBE6219:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 6939              		.loc 5 230 42 view .LVU1586
 6940 0162 4FF0FF36 		mov	r6, #-1
 6941 0166 0096     		str	r6, [sp]
 6942              	.LBB6220:
 6943              	.LBB6214:
 6944              	.LBB6208:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6945              		.loc 15 244 28 view .LVU1587
 6946 0168 E608     		lsrs	r6, r4, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6947              		.loc 15 244 42 view .LVU1588
 6948 016a 03EBC616 		add	r6, r3, r6, lsl #7
 6949 016e 0644     		add	r6, r6, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 6950              		.loc 15 243 9 view .LVU1589
 6951 0170 002D     		cmp	r5, #0
 6952 0172 00F01E81 		beq	.L419
 6953              	.LVL499:
 6954              	.L491:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6955              		.loc 15 244 48 view .LVU1590
 6956 0176 4FF0010C 		mov	ip, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6957              		.loc 15 244 54 view .LVU1591
 6958 017a 04F00707 		and	r7, r4, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6959              		.loc 15 244 48 view .LVU1592
 6960 017e 0CFA07F7 		lsl	r7, ip, r7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6961              		.loc 15 244 42 view .LVU1593
 6962 0182 96F814C0 		ldrb	ip, [r6, #20]	@ zero_extendqisi2
 6963 0186 47EA0C07 		orr	r7, r7, ip
 6964 018a 3775     		strb	r7, [r6, #20]
 6965 018c 0026     		movs	r6, #0
 6966 018e 0396     		str	r6, [sp, #12]
 6967              	.L418:
 6968              	.LVL500:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6969              		.loc 15 244 42 view .LVU1594
 6970              	.LBE6208:
 6971              	.LBE6214:
 6972              	.LBE6220:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 6973              		.loc 5 239 26 is_stmt 1 view .LVU1595
 6974 0190 A242     		cmp	r2, r4
 6975 0192 00F03D81 		beq	.L490
 6976              	.L421:
 6977              	.LVL501:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 301


 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 6978              		.loc 5 230 42 is_stmt 0 view .LVU1596
 6979 0196 C446     		mov	ip, r8
 6980 0198 1646     		mov	r6, r2
 6981 019a 1F46     		mov	r7, r3
 6982 019c 0592     		str	r2, [sp, #20]
 6983              	.LVL502:
 6984              	.L423:
 6985              	.LBB6221:
 6986              	.LBI6221:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 6987              		.loc 4 41 10 is_stmt 1 view .LVU1597
 6988              	.LBB6222:
 6989              	.LBI6222:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 6990              		.loc 15 239 10 view .LVU1598
 6991              	.LBB6223:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6992              		.loc 15 241 9 is_stmt 0 view .LVU1599
 6993 019e 7F2F     		cmp	r7, #127
 6994 01a0 15D8     		bhi	.L424
 6995 01a2 3F2E     		cmp	r6, #63
 6996 01a4 13D8     		bhi	.L424
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6997              		.loc 15 244 28 view .LVU1600
 6998 01a6 4FEAD60E 		lsr	lr, r6, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6999              		.loc 15 244 54 view .LVU1601
 7000 01aa 06F0070B 		and	fp, r6, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7001              		.loc 15 244 48 view .LVU1602
 7002 01ae 4FF0010A 		mov	r10, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7003              		.loc 15 244 42 view .LVU1603
 7004 01b2 07EBCE1E 		add	lr, r7, lr, lsl #7
 7005 01b6 8644     		add	lr, lr, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7006              		.loc 15 243 9 view .LVU1604
 7007 01b8 002D     		cmp	r5, #0
 7008 01ba 00F0E680 		beq	.L425
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7009              		.loc 15 244 48 view .LVU1605
 7010 01be 0AFA0BFA 		lsl	r10, r10, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7011              		.loc 15 244 42 view .LVU1606
 7012 01c2 9EF814B0 		ldrb	fp, [lr, #20]	@ zero_extendqisi2
 7013 01c6 4AEA0B0A 		orr	r10, r10, fp
 7014 01ca 8EF814A0 		strb	r10, [lr, #20]
 7015              	.L424:
 7016              	.LVL503:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7017              		.loc 15 244 42 view .LVU1607
 7018              	.LBE6223:
 7019              	.LBE6222:
 7020              	.LBE6221:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 7021              		.loc 5 243 13 view .LVU1608
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 302


 7022 01ce B8EB4C0F 		cmp	r8, ip, lsl #1
 242:../../libdaisy/src/hid/disp/display.h ****             if(error2 > -deltaY)
 7023              		.loc 5 242 20 view .LVU1609
 7024 01d2 4FEA4C0E 		lsl	lr, ip, #1
 7025              	.LVL504:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 7026              		.loc 5 243 13 view .LVU1610
 7027 01d6 02DA     		bge	.L426
 245:../../libdaisy/src/hid/disp/display.h ****                 x1 += signX;
 7028              		.loc 5 245 23 view .LVU1611
 7029 01d8 ACEB090C 		sub	ip, ip, r9
 7030              	.LVL505:
 246:../../libdaisy/src/hid/disp/display.h ****             }
 7031              		.loc 5 246 20 view .LVU1612
 7032 01dc 013F     		subs	r7, r7, #1
 7033              	.LVL506:
 7034              	.L426:
 249:../../libdaisy/src/hid/disp/display.h ****             {
 7035              		.loc 5 249 13 view .LVU1613
 7036 01de BEF1000F 		cmp	lr, #0
 7037 01e2 01D0     		beq	.L427
 252:../../libdaisy/src/hid/disp/display.h ****             }
 7038              		.loc 5 252 20 view .LVU1614
 7039 01e4 009A     		ldr	r2, [sp]
 7040 01e6 1644     		add	r6, r6, r2
 7041              	.LVL507:
 7042              	.L427:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7043              		.loc 5 239 26 is_stmt 1 view .LVU1615
 7044 01e8 BB42     		cmp	r3, r7
 7045 01ea D8D1     		bne	.L423
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7046              		.loc 5 239 26 is_stmt 0 view .LVU1616
 7047 01ec B442     		cmp	r4, r6
 7048 01ee D6D1     		bne	.L423
 7049 01f0 059A     		ldr	r2, [sp, #20]
 7050              	.LVL508:
 7051              	.L420:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7052              		.loc 5 239 26 view .LVU1617
 7053              	.LBE6199:
 7054              	.LBE6198:
 7055              	.LBB6234:
 7056              	.LBI6234:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 7057              		.loc 5 221 10 is_stmt 1 view .LVU1618
 7058              	.LBB6235:
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 7059              		.loc 5 227 52 is_stmt 0 view .LVU1619
 7060 01f2 A1EB030E 		sub	lr, r1, r3
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 7061              		.loc 5 227 22 view .LVU1620
 7062 01f6 BEF1000F 		cmp	lr, #0
 7063 01fa B8BF     		it	lt
 7064 01fc CEF1000E 		rsblt	lr, lr, #0
 7065              	.LVL509:
 7066              	.LBB6236:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 303


 7067              	.LBB6237:
 7068              	.LBB6238:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7069              		.loc 15 241 14 view .LVU1621
 7070 0200 7F29     		cmp	r1, #127
 7071 0202 94BF     		ite	ls
 7072 0204 4FF0000A 		movls	r10, #0
 7073 0208 4FF0010A 		movhi	r10, #1
 7074              	.LBE6238:
 7075              	.LBE6237:
 7076              	.LBE6236:
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 7077              		.loc 5 229 42 view .LVU1622
 7078 020c 9942     		cmp	r1, r3
 7079 020e 8CBF     		ite	hi
 7080 0210 4FF00109 		movhi	r9, #1
 7081 0214 4FF0FF39 		movls	r9, #-1
 7082              	.LVL510:
 7083              	.LBB6245:
 7084              	.LBI6236:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7085              		.loc 4 41 10 is_stmt 1 view .LVU1623
 7086              	.LBB6243:
 7087              	.LBI6237:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7088              		.loc 15 239 10 view .LVU1624
 7089              	.LBB6241:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7090              		.loc 15 241 9 is_stmt 0 view .LVU1625
 7091 0218 BAF1000F 		cmp	r10, #0
 7092 021c 13D1     		bne	.L429
 7093 021e 039E     		ldr	r6, [sp, #12]
 7094 0220 8EB9     		cbnz	r6, .L429
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7095              		.loc 15 244 28 view .LVU1626
 7096 0222 E608     		lsrs	r6, r4, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7097              		.loc 15 244 42 view .LVU1627
 7098 0224 01EBC616 		add	r6, r1, r6, lsl #7
 7099 0228 0644     		add	r6, r6, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7100              		.loc 15 243 9 view .LVU1628
 7101 022a 002D     		cmp	r5, #0
 7102 022c 00F0D380 		beq	.L430
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7103              		.loc 15 244 48 view .LVU1629
 7104 0230 4FF0010C 		mov	ip, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7105              		.loc 15 244 54 view .LVU1630
 7106 0234 04F00707 		and	r7, r4, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7107              		.loc 15 244 48 view .LVU1631
 7108 0238 0CFA07F7 		lsl	r7, ip, r7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7109              		.loc 15 244 42 view .LVU1632
 7110 023c 96F814C0 		ldrb	ip, [r6, #20]	@ zero_extendqisi2
 7111 0240 47EA0C07 		orr	r7, r7, ip
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 304


 7112 0244 3775     		strb	r7, [r6, #20]
 7113              	.L429:
 7114              	.LVL511:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7115              		.loc 15 244 42 view .LVU1633
 7116              	.LBE6241:
 7117              	.LBE6243:
 7118              	.LBE6245:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7119              		.loc 5 239 26 is_stmt 1 view .LVU1634
 7120 0246 049E     		ldr	r6, [sp, #16]
 7121 0248 26BB     		cbnz	r6, .L431
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 7122              		.loc 5 227 22 is_stmt 0 view .LVU1635
 7123 024a 7746     		mov	r7, lr
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7124              		.loc 5 239 26 view .LVU1636
 7125 024c 2646     		mov	r6, r4
 7126              	.LVL512:
 7127              	.L432:
 7128              	.LBB6246:
 7129              	.LBI6246:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7130              		.loc 4 41 10 is_stmt 1 view .LVU1637
 7131              	.LBB6247:
 7132              	.LBI6247:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7133              		.loc 15 239 10 view .LVU1638
 7134              	.LBB6248:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7135              		.loc 15 241 9 is_stmt 0 view .LVU1639
 7136 024e 7F2B     		cmp	r3, #127
 7137 0250 14D8     		bhi	.L434
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7138              		.loc 15 241 9 view .LVU1640
 7139 0252 3F2E     		cmp	r6, #63
 7140 0254 12D8     		bhi	.L434
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7141              		.loc 15 244 28 view .LVU1641
 7142 0256 4FEAD60C 		lsr	ip, r6, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7143              		.loc 15 244 54 view .LVU1642
 7144 025a 06F0070B 		and	fp, r6, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7145              		.loc 15 244 48 view .LVU1643
 7146 025e 4FF00108 		mov	r8, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7147              		.loc 15 244 42 view .LVU1644
 7148 0262 03EBCC1C 		add	ip, r3, ip, lsl #7
 7149 0266 8444     		add	ip, ip, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7150              		.loc 15 243 9 view .LVU1645
 7151 0268 002D     		cmp	r5, #0
 7152 026a 73D0     		beq	.L435
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7153              		.loc 15 244 48 view .LVU1646
 7154 026c 08FA0BF8 		lsl	r8, r8, fp
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 305


 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7155              		.loc 15 244 42 view .LVU1647
 7156 0270 9CF814B0 		ldrb	fp, [ip, #20]	@ zero_extendqisi2
 7157 0274 48EA0B08 		orr	r8, r8, fp
 7158 0278 8CF81480 		strb	r8, [ip, #20]
 7159              	.L434:
 7160              	.LVL513:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7161              		.loc 15 244 42 view .LVU1648
 7162              	.LBE6248:
 7163              	.LBE6247:
 7164              	.LBE6246:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 7165              		.loc 5 243 13 view .LVU1649
 7166 027c 5FEA470C 		lsls	ip, r7, #1
 7167              	.LVL514:
 246:../../libdaisy/src/hid/disp/display.h ****             }
 7168              		.loc 5 246 20 view .LVU1650
 7169 0280 18BF     		it	ne
 7170 0282 4B44     		addne	r3, r3, r9
 7171              	.LVL515:
 249:../../libdaisy/src/hid/disp/display.h ****             {
 7172              		.loc 5 249 13 view .LVU1651
 7173 0284 E645     		cmp	lr, ip
 7174 0286 01DD     		ble	.L437
 251:../../libdaisy/src/hid/disp/display.h ****                 y1 += signY;
 7175              		.loc 5 251 23 view .LVU1652
 7176 0288 7744     		add	r7, r7, lr
 7177              	.LVL516:
 252:../../libdaisy/src/hid/disp/display.h ****             }
 7178              		.loc 5 252 20 view .LVU1653
 7179 028a 013E     		subs	r6, r6, #1
 7180              	.LVL517:
 7181              	.L437:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7182              		.loc 5 239 26 is_stmt 1 view .LVU1654
 7183 028c 9942     		cmp	r1, r3
 7184 028e DED1     		bne	.L432
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7185              		.loc 5 239 26 is_stmt 0 view .LVU1655
 7186 0290 B442     		cmp	r4, r6
 7187 0292 DCD1     		bne	.L432
 7188              	.LVL518:
 7189              	.L431:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7190              		.loc 5 239 26 view .LVU1656
 7191              	.LBE6235:
 7192              	.LBE6234:
 7193              	.LBB6257:
 7194              	.LBI6257:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 7195              		.loc 5 221 10 is_stmt 1 view .LVU1657
 7196              	.LBB6258:
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 7197              		.loc 5 228 52 is_stmt 0 view .LVU1658
 7198 0294 A2EB040E 		sub	lr, r2, r4
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 306


 7199              		.loc 5 228 22 view .LVU1659
 7200 0298 BEF1000F 		cmp	lr, #0
 7201 029c B8BF     		it	lt
 7202 029e CEF1000E 		rsblt	lr, lr, #0
 7203              	.LVL519:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7204              		.loc 5 230 42 view .LVU1660
 7205 02a2 A242     		cmp	r2, r4
 7206 02a4 8CBF     		ite	hi
 7207 02a6 4FF00108 		movhi	r8, #1
 7208 02aa 4FF0FF38 		movls	r8, #-1
 7209              	.LVL520:
 231:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error2;
 7210              		.loc 5 231 22 view .LVU1661
 7211 02ae CEF1000C 		rsb	ip, lr, #0
 7212              	.LVL521:
 7213              	.LBB6259:
 7214              	.LBI6259:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7215              		.loc 4 41 10 is_stmt 1 view .LVU1662
 7216              	.LBB6260:
 7217              	.LBI6260:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7218              		.loc 15 239 10 view .LVU1663
 7219              	.LBB6261:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7220              		.loc 15 241 9 is_stmt 0 view .LVU1664
 7221 02b2 BAF1000F 		cmp	r10, #0
 7222 02b6 0ED1     		bne	.L439
 7223 02b8 029B     		ldr	r3, [sp, #8]
 7224 02ba 63B9     		cbnz	r3, .L439
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7225              		.loc 15 244 28 view .LVU1665
 7226 02bc D308     		lsrs	r3, r2, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7227              		.loc 15 244 54 view .LVU1666
 7228 02be 02F00707 		and	r7, r2, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7229              		.loc 15 244 48 view .LVU1667
 7230 02c2 0126     		movs	r6, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7231              		.loc 15 244 42 view .LVU1668
 7232 02c4 01EBC313 		add	r3, r1, r3, lsl #7
 7233 02c8 0344     		add	r3, r3, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7234              		.loc 15 243 9 view .LVU1669
 7235 02ca 002D     		cmp	r5, #0
 7236 02cc 7CD0     		beq	.L440
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7237              		.loc 15 244 48 view .LVU1670
 7238 02ce BE40     		lsls	r6, r6, r7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7239              		.loc 15 244 42 view .LVU1671
 7240 02d0 1F7D     		ldrb	r7, [r3, #20]	@ zero_extendqisi2
 7241 02d2 3E43     		orrs	r6, r6, r7
 7242 02d4 1E75     		strb	r6, [r3, #20]
 7243              	.L439:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 307


 7244              	.LVL522:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7245              		.loc 15 244 42 view .LVU1672
 7246              	.LBE6261:
 7247              	.LBE6260:
 7248              	.LBE6259:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7249              		.loc 5 239 26 is_stmt 1 view .LVU1673
 7250 02d6 019B     		ldr	r3, [sp, #4]
 7251 02d8 002B     		cmp	r3, #0
 7252 02da 7FF4CDAE 		bne	.L397
 7253 02de 6646     		mov	r6, ip
 7254 02e0 0B46     		mov	r3, r1
 7255              	.LVL523:
 7256              	.L441:
 7257              	.LBB6266:
 7258              	.LBI6266:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7259              		.loc 4 41 10 view .LVU1674
 7260              	.LBB6267:
 7261              	.LBI6267:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7262              		.loc 15 239 10 view .LVU1675
 7263              	.LBB6268:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7264              		.loc 15 241 9 is_stmt 0 view .LVU1676
 7265 02e2 7F2B     		cmp	r3, #127
 7266 02e4 12D8     		bhi	.L443
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7267              		.loc 15 241 9 view .LVU1677
 7268 02e6 3F2C     		cmp	r4, #63
 7269 02e8 10D8     		bhi	.L443
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7270              		.loc 15 244 28 view .LVU1678
 7271 02ea E708     		lsrs	r7, r4, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7272              		.loc 15 244 54 view .LVU1679
 7273 02ec 04F0070A 		and	r10, r4, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7274              		.loc 15 244 48 view .LVU1680
 7275 02f0 4FF00109 		mov	r9, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7276              		.loc 15 244 42 view .LVU1681
 7277 02f4 03EBC717 		add	r7, r3, r7, lsl #7
 7278 02f8 0744     		add	r7, r7, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7279              		.loc 15 243 9 view .LVU1682
 7280 02fa A5B3     		cbz	r5, .L444
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7281              		.loc 15 244 48 view .LVU1683
 7282 02fc 09FA0AF9 		lsl	r9, r9, r10
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7283              		.loc 15 244 42 view .LVU1684
 7284 0300 97F814A0 		ldrb	r10, [r7, #20]	@ zero_extendqisi2
 7285 0304 49EA0A09 		orr	r9, r9, r10
 7286 0308 87F81490 		strb	r9, [r7, #20]
 7287              	.L443:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 308


 7288              	.LVL524:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7289              		.loc 15 244 42 view .LVU1685
 7290              	.LBE6268:
 7291              	.LBE6267:
 7292              	.LBE6266:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 7293              		.loc 5 243 13 view .LVU1686
 7294 030c BCEB460F 		cmp	ip, r6, lsl #1
 242:../../libdaisy/src/hid/disp/display.h ****             if(error2 > -deltaY)
 7295              		.loc 5 242 20 view .LVU1687
 7296 0310 4FEA4607 		lsl	r7, r6, #1
 7297              	.LVL525:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 7298              		.loc 5 243 13 view .LVU1688
 7299 0314 02DA     		bge	.L445
 245:../../libdaisy/src/hid/disp/display.h ****                 x1 += signX;
 7300              		.loc 5 245 23 view .LVU1689
 7301 0316 A6EB0E06 		sub	r6, r6, lr
 7302              	.LVL526:
 246:../../libdaisy/src/hid/disp/display.h ****             }
 7303              		.loc 5 246 20 view .LVU1690
 7304 031a 013B     		subs	r3, r3, #1
 7305              	.LVL527:
 7306              	.L445:
 249:../../libdaisy/src/hid/disp/display.h ****             {
 7307              		.loc 5 249 13 view .LVU1691
 7308 031c 07B1     		cbz	r7, .L446
 252:../../libdaisy/src/hid/disp/display.h ****             }
 7309              		.loc 5 252 20 view .LVU1692
 7310 031e 4444     		add	r4, r4, r8
 7311              	.LVL528:
 7312              	.L446:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7313              		.loc 5 239 26 is_stmt 1 view .LVU1693
 7314 0320 9942     		cmp	r1, r3
 7315 0322 DED1     		bne	.L441
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7316              		.loc 5 239 26 is_stmt 0 view .LVU1694
 7317 0324 A242     		cmp	r2, r4
 7318 0326 DCD1     		bne	.L441
 7319              	.LBE6258:
 7320              	.LBE6257:
 7321              	.LBE6310:
 281:../../libdaisy/src/hid/disp/display.h **** 
 7322              		.loc 5 281 5 view .LVU1695
 7323 0328 07B0     		add	sp, sp, #28
 7324              		.cfi_remember_state
 7325              		.cfi_def_cfa_offset 36
 7326              		@ sp needed
 7327 032a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7328              	.LVL529:
 7329              	.L406:
 7330              		.cfi_restore_state
 7331              	.LBB6311:
 7332              	.LBB6277:
 7333              	.LBB6194:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 309


 7334              	.LBB6190:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7335              		.loc 4 41 10 is_stmt 1 view .LVU1696
 7336              	.LBB6179:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7337              		.loc 15 239 10 view .LVU1697
 7338              	.LBB6175:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7339              		.loc 15 241 28 is_stmt 0 view .LVU1698
 7340 032e 3F2A     		cmp	r2, #63
 7341              	.LBE6175:
 7342              	.LBE6179:
 7343              	.LBE6190:
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 7344              		.loc 5 229 42 view .LVU1699
 7345 0330 4FF0010A 		mov	r10, #1
 7346              	.LBB6191:
 7347              	.LBB6180:
 7348              	.LBB6176:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7349              		.loc 15 241 28 view .LVU1700
 7350 0334 94BF     		ite	ls
 7351 0336 0026     		movls	r6, #0
 7352 0338 0126     		movhi	r6, #1
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7353              		.loc 15 241 14 view .LVU1701
 7354 033a 7F2B     		cmp	r3, #127
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7355              		.loc 15 241 28 view .LVU1702
 7356 033c 0296     		str	r6, [sp, #8]
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7357              		.loc 15 241 14 view .LVU1703
 7358 033e 94BF     		ite	ls
 7359 0340 0027     		movls	r7, #0
 7360 0342 0127     		movhi	r7, #1
 7361 0344 0097     		str	r7, [sp]
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7362              		.loc 15 241 9 view .LVU1704
 7363 0346 002E     		cmp	r6, #0
 7364 0348 7FF4C8AE 		bne	.L410
 7365 034c 002F     		cmp	r7, #0
 7366 034e 3FF4AEAE 		beq	.L448
 7367 0352 C3E6     		b	.L410
 7368              	.LVL530:
 7369              	.L435:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7370              		.loc 15 241 9 view .LVU1705
 7371              	.LBE6176:
 7372              	.LBE6180:
 7373              	.LBE6191:
 7374              	.LBE6194:
 7375              	.LBE6277:
 7376              	.LBB6278:
 7377              	.LBB6255:
 7378              	.LBB6253:
 7379              	.LBB6252:
 7380              	.LBB6251:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 310


 7381              	.LBB6249:
 7382              	.LBI6249:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7383              		.loc 15 239 10 is_stmt 1 view .LVU1706
 7384              	.LBB6250:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7385              		.loc 15 246 49 is_stmt 0 view .LVU1707
 7386 0354 08FA0BFB 		lsl	fp, r8, fp
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7387              		.loc 15 246 42 view .LVU1708
 7388 0358 9CF81480 		ldrb	r8, [ip, #20]	@ zero_extendqisi2
 7389 035c 28EA0B08 		bic	r8, r8, fp
 7390 0360 8CF81480 		strb	r8, [ip, #20]
 7391 0364 8AE7     		b	.L434
 7392              	.LVL531:
 7393              	.L444:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7394              		.loc 15 246 42 view .LVU1709
 7395              	.LBE6250:
 7396              	.LBE6249:
 7397              	.LBE6251:
 7398              	.LBE6252:
 7399              	.LBE6253:
 7400              	.LBE6255:
 7401              	.LBE6278:
 7402              	.LBB6279:
 7403              	.LBB6275:
 7404              	.LBB6273:
 7405              	.LBB6272:
 7406              	.LBB6271:
 7407              	.LBB6269:
 7408              	.LBI6269:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7409              		.loc 15 239 10 is_stmt 1 view .LVU1710
 7410              	.LBB6270:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7411              		.loc 15 246 49 is_stmt 0 view .LVU1711
 7412 0366 09FA0AFA 		lsl	r10, r9, r10
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7413              		.loc 15 246 42 view .LVU1712
 7414 036a 97F81490 		ldrb	r9, [r7, #20]	@ zero_extendqisi2
 7415 036e 29EA0A09 		bic	r9, r9, r10
 7416 0372 87F81490 		strb	r9, [r7, #20]
 7417 0376 C9E7     		b	.L443
 7418              	.LVL532:
 7419              	.L414:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7420              		.loc 15 246 42 view .LVU1713
 7421              	.LBE6270:
 7422              	.LBE6269:
 7423              	.LBE6271:
 7424              	.LBE6272:
 7425              	.LBE6273:
 7426              	.LBE6275:
 7427              	.LBE6279:
 7428              	.LBB6280:
 7429              	.LBB6195:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 311


 7430              	.LBB6192:
 7431              	.LBB6189:
 7432              	.LBB6188:
 7433              	.LBB6186:
 7434              	.LBI6186:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7435              		.loc 15 239 10 is_stmt 1 view .LVU1714
 7436              	.LBB6187:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7437              		.loc 15 246 49 is_stmt 0 view .LVU1715
 7438 0378 09FA0BFB 		lsl	fp, r9, fp
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7439              		.loc 15 246 42 view .LVU1716
 7440 037c 97F81490 		ldrb	r9, [r7, #20]	@ zero_extendqisi2
 7441 0380 29EA0B09 		bic	r9, r9, fp
 7442 0384 87F81490 		strb	r9, [r7, #20]
 7443 0388 C5E6     		b	.L413
 7444              	.LVL533:
 7445              	.L425:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7446              		.loc 15 246 42 view .LVU1717
 7447              	.LBE6187:
 7448              	.LBE6186:
 7449              	.LBE6188:
 7450              	.LBE6189:
 7451              	.LBE6192:
 7452              	.LBE6195:
 7453              	.LBE6280:
 7454              	.LBB6281:
 7455              	.LBB6231:
 7456              	.LBB6228:
 7457              	.LBB6227:
 7458              	.LBB6226:
 7459              	.LBB6224:
 7460              	.LBI6224:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7461              		.loc 15 239 10 is_stmt 1 view .LVU1718
 7462              	.LBB6225:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7463              		.loc 15 246 49 is_stmt 0 view .LVU1719
 7464 038a 0AFA0BFB 		lsl	fp, r10, fp
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7465              		.loc 15 246 42 view .LVU1720
 7466 038e 9EF814A0 		ldrb	r10, [lr, #20]	@ zero_extendqisi2
 7467 0392 2AEA0B0A 		bic	r10, r10, fp
 7468 0396 8EF814A0 		strb	r10, [lr, #20]
 7469 039a 18E7     		b	.L424
 7470              	.LVL534:
 7471              	.L417:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7472              		.loc 15 246 42 view .LVU1721
 7473              	.LBE6225:
 7474              	.LBE6224:
 7475              	.LBE6226:
 7476              	.LBE6227:
 7477              	.LBE6228:
 7478              	.LBB6229:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 312


 7479              	.LBB6215:
 7480              	.LBB6209:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7481              		.loc 15 241 9 view .LVU1722
 7482 039c 97BB     		cbnz	r7, .L456
 7483 039e 8EBB     		cbnz	r6, .L456
 7484              	.LBE6209:
 7485              	.LBE6215:
 7486              	.LBE6229:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7487              		.loc 5 230 42 view .LVU1723
 7488 03a0 0126     		movs	r6, #1
 7489 03a2 0096     		str	r6, [sp]
 7490              	.LBB6230:
 7491              	.LBB6216:
 7492              	.LBB6210:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7493              		.loc 15 244 28 view .LVU1724
 7494 03a4 E608     		lsrs	r6, r4, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7495              		.loc 15 244 42 view .LVU1725
 7496 03a6 03EBC616 		add	r6, r3, r6, lsl #7
 7497 03aa 0644     		add	r6, r6, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7498              		.loc 15 243 9 view .LVU1726
 7499 03ac 002D     		cmp	r5, #0
 7500 03ae 7FF4E2AE 		bne	.L491
 7501              	.LVL535:
 7502              	.L419:
 7503              	.LBB6203:
 7504              	.LBI6203:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7505              		.loc 15 239 10 is_stmt 1 view .LVU1727
 7506              	.LBB6204:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7507              		.loc 15 246 49 is_stmt 0 view .LVU1728
 7508 03b2 0127     		movs	r7, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7509              		.loc 15 246 55 view .LVU1729
 7510 03b4 04F0070C 		and	ip, r4, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7511              		.loc 15 246 42 view .LVU1730
 7512 03b8 0395     		str	r5, [sp, #12]
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7513              		.loc 15 246 49 view .LVU1731
 7514 03ba 07FA0CFC 		lsl	ip, r7, ip
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7515              		.loc 15 246 42 view .LVU1732
 7516 03be 377D     		ldrb	r7, [r6, #20]	@ zero_extendqisi2
 7517 03c0 27EA0C07 		bic	r7, r7, ip
 7518 03c4 3775     		strb	r7, [r6, #20]
 7519 03c6 E3E6     		b	.L418
 7520              	.LVL536:
 7521              	.L440:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7522              		.loc 15 246 42 view .LVU1733
 7523              	.LBE6204:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 313


 7524              	.LBE6203:
 7525              	.LBE6210:
 7526              	.LBE6216:
 7527              	.LBE6230:
 7528              	.LBE6231:
 7529              	.LBE6281:
 7530              	.LBB6282:
 7531              	.LBB6276:
 7532              	.LBB6274:
 7533              	.LBB6265:
 7534              	.LBB6264:
 7535              	.LBB6262:
 7536              	.LBI6262:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7537              		.loc 15 239 10 is_stmt 1 view .LVU1734
 7538              	.LBB6263:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7539              		.loc 15 246 49 is_stmt 0 view .LVU1735
 7540 03c8 06FA07F7 		lsl	r7, r6, r7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7541              		.loc 15 246 42 view .LVU1736
 7542 03cc 1E7D     		ldrb	r6, [r3, #20]	@ zero_extendqisi2
 7543 03ce 26EA0706 		bic	r6, r6, r7
 7544 03d2 1E75     		strb	r6, [r3, #20]
 7545 03d4 7FE7     		b	.L439
 7546              	.LVL537:
 7547              	.L430:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7548              		.loc 15 246 42 view .LVU1737
 7549              	.LBE6263:
 7550              	.LBE6262:
 7551              	.LBE6264:
 7552              	.LBE6265:
 7553              	.LBE6274:
 7554              	.LBE6276:
 7555              	.LBE6282:
 7556              	.LBB6283:
 7557              	.LBB6256:
 7558              	.LBB6254:
 7559              	.LBB6244:
 7560              	.LBB6242:
 7561              	.LBB6239:
 7562              	.LBI6239:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7563              		.loc 15 239 10 is_stmt 1 view .LVU1738
 7564              	.LBB6240:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7565              		.loc 15 246 49 is_stmt 0 view .LVU1739
 7566 03d6 0127     		movs	r7, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7567              		.loc 15 246 55 view .LVU1740
 7568 03d8 04F0070C 		and	ip, r4, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7569              		.loc 15 246 49 view .LVU1741
 7570 03dc 07FA0CFC 		lsl	ip, r7, ip
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7571              		.loc 15 246 42 view .LVU1742
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 314


 7572 03e0 377D     		ldrb	r7, [r6, #20]	@ zero_extendqisi2
 7573 03e2 27EA0C07 		bic	r7, r7, ip
 7574 03e6 3775     		strb	r7, [r6, #20]
 7575 03e8 2DE7     		b	.L429
 7576              	.LVL538:
 7577              	.L408:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7578              		.loc 15 246 42 view .LVU1743
 7579              	.LBE6240:
 7580              	.LBE6239:
 7581              	.LBE6242:
 7582              	.LBE6244:
 7583              	.LBE6254:
 7584              	.LBE6256:
 7585              	.LBE6283:
 7586              	.LBB6284:
 7587              	.LBB6196:
 7588              	.LBB6193:
 7589              	.LBB6181:
 7590              	.LBB6177:
 7591              	.LBB6172:
 7592              	.LBI6172:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7593              		.loc 15 239 10 is_stmt 1 view .LVU1744
 7594              	.LBB6173:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7595              		.loc 15 246 49 is_stmt 0 view .LVU1745
 7596 03ea 07FA0CFC 		lsl	ip, r7, ip
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7597              		.loc 15 246 42 view .LVU1746
 7598 03ee 377D     		ldrb	r7, [r6, #20]	@ zero_extendqisi2
 7599 03f0 0295     		str	r5, [sp, #8]
 7600 03f2 27EA0C07 		bic	r7, r7, ip
 7601 03f6 0095     		str	r5, [sp]
 7602 03f8 3775     		strb	r7, [r6, #20]
 7603 03fa 6CE6     		b	.L407
 7604              	.LVL539:
 7605              	.L452:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7606              		.loc 15 246 42 view .LVU1747
 7607              	.LBE6173:
 7608              	.LBE6172:
 7609              	.LBE6177:
 7610              	.LBE6181:
 7611              	.LBE6193:
 7612              	.LBE6196:
 7613              	.LBE6284:
 7614              	.LBB6285:
 7615              	.LBB6232:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7616              		.loc 5 230 42 view .LVU1748
 7617 03fc 4FF0FF36 		mov	r6, #-1
 7618 0400 0096     		str	r6, [sp]
 7619 0402 C5E6     		b	.L418
 7620              	.LVL540:
 7621              	.L456:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 315


 7622              		.loc 5 230 42 view .LVU1749
 7623 0404 0126     		movs	r6, #1
 7624 0406 0096     		str	r6, [sp]
 7625 0408 C5E6     		b	.L421
 7626              	.LVL541:
 7627              	.L489:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7628              		.loc 5 230 42 view .LVU1750
 7629              	.LBE6232:
 7630              	.LBE6285:
 7631              	.LBB6286:
 7632              	.LBB6197:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7633              		.loc 5 239 19 view .LVU1751
 7634 040a 0126     		movs	r6, #1
 7635 040c 0496     		str	r6, [sp, #16]
 7636 040e 90E6     		b	.L409
 7637              	.LVL542:
 7638              	.L490:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7639              		.loc 5 239 19 view .LVU1752
 7640              	.LBE6197:
 7641              	.LBE6286:
 7642              	.LBB6287:
 7643              	.LBB6233:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7644              		.loc 5 239 33 view .LVU1753
 7645 0410 0126     		movs	r6, #1
 7646 0412 0196     		str	r6, [sp, #4]
 7647 0414 EDE6     		b	.L420
 7648              	.LBE6233:
 7649              	.LBE6287:
 7650              	.LBE6311:
 7651              		.cfi_endproc
 7652              	.LFE6190:
 7654 0416 00BF     		.section	.text._ZNSt14_Function_baseD2Ev,"axG",%progbits,_ZNSt14_Function_baseD5Ev,comdat
 7655              		.align	1
 7656              		.p2align 2,,3
 7657              		.weak	_ZNSt14_Function_baseD2Ev
 7658              		.syntax unified
 7659              		.thumb
 7660              		.thumb_func
 7661              		.fpu fpv5-d16
 7663              	_ZNSt14_Function_baseD2Ev:
 7664              	.LVL543:
 7665              	.LFB5034:
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 7666              		.loc 16 242 5 is_stmt 1 view -0
 7667              		.cfi_startproc
 7668              		@ args = 0, pretend = 0, frame = 0
 7669              		@ frame_needed = 0, uses_anonymous_args = 0
 7670              	.LBB6313:
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 7671              		.loc 16 244 7 view .LVU1755
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 7672              		.loc 16 244 11 is_stmt 0 view .LVU1756
 7673 0000 8368     		ldr	r3, [r0, #8]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 316


 7674              	.LBE6313:
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 7675              		.loc 16 242 5 view .LVU1757
 7676 0002 10B5     		push	{r4, lr}
 7677              		.cfi_def_cfa_offset 8
 7678              		.cfi_offset 4, -8
 7679              		.cfi_offset 14, -4
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 7680              		.loc 16 242 5 view .LVU1758
 7681 0004 0446     		mov	r4, r0
 7682              	.LBB6314:
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 7683              		.loc 16 244 7 view .LVU1759
 7684 0006 13B1     		cbz	r3, .L493
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 7685              		.loc 16 245 2 is_stmt 1 view .LVU1760
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 7686              		.loc 16 245 12 is_stmt 0 view .LVU1761
 7687 0008 0322     		movs	r2, #3
 7688 000a 0146     		mov	r1, r0
 7689 000c 9847     		blx	r3
 7690              	.LVL544:
 7691              	.L493:
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 7692              		.loc 16 245 12 view .LVU1762
 7693              	.LBE6314:
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 7694              		.loc 16 246 5 view .LVU1763
 7695 000e 2046     		mov	r0, r4
 7696 0010 10BD     		pop	{r4, pc}
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 7697              		.loc 16 246 5 view .LVU1764
 7698              		.cfi_endproc
 7699              	.LFE5034:
 7701              		.weak	_ZNSt14_Function_baseD1Ev
 7702              		.thumb_set _ZNSt14_Function_baseD1Ev,_ZNSt14_Function_baseD2Ev
 7703 0012 00BF     		.section	.text._ZN10jellybeans8MenuItemaSEOS0_.isra.0,"ax",%progbits
 7704              		.align	1
 7705              		.p2align 2,,3
 7706              		.syntax unified
 7707              		.thumb
 7708              		.thumb_func
 7709              		.fpu fpv5-d16
 7711              	_ZN10jellybeans8MenuItemaSEOS0_.isra.0:
 7712              	.LVL545:
 7713              	.LFB6201:
 7714              		.loc 28 21 11 is_stmt 1 view -0
 7715              		.cfi_startproc
 7716              		@ args = 0, pretend = 0, frame = 24
 7717              		@ frame_needed = 0, uses_anonymous_args = 0
 7718              		.loc 28 21 11 is_stmt 0 view .LVU1766
 7719 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 7720              		.cfi_def_cfa_offset 20
 7721              		.cfi_offset 4, -20
 7722              		.cfi_offset 5, -16
 7723              		.cfi_offset 6, -12
 7724              		.cfi_offset 7, -8
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 317


 7725              		.cfi_offset 14, -4
 7726 0002 0D46     		mov	r5, r1
 7727 0004 51F8043B 		ldr	r3, [r1], #4
 7728 0008 0446     		mov	r4, r0
 7729 000a 87B0     		sub	sp, sp, #28
 7730              		.cfi_def_cfa_offset 48
 7731              		.loc 28 21 11 view .LVU1767
 7732 000c 40F8043B 		str	r3, [r0], #4
 7733              	.LVL546:
 7734              	.LBB6371:
 7735              	.LBB6372:
 7736              	.LBB6373:
 7737              	.LBB6374:
 7738              	.LBB6375:
 7739              	.LBB6376:
 7740              	.LBB6377:
 7741              	.LBB6378:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 7742              		.loc 26 111 13 view .LVU1768
 7743 0010 0027     		movs	r7, #0
 7744              	.LBE6378:
 7745              	.LBE6377:
 7746              	.LBE6376:
 7747              	.LBE6375:
 7748              	.LBE6374:
 7749              	.LBE6373:
 7750              	.LBE6372:
 7751              	.LBE6371:
 7752              		.loc 28 21 11 view .LVU1769
 7753 0012 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.isra.0
 7754              	.LVL547:
 7755 0016 05F11C01 		add	r1, r5, #28
 7756 001a 04F11C00 		add	r0, r4, #28
 7757              	.LBB6433:
 7758              	.LBB6431:
 7759              	.LBB6429:
 7760              	.LBB6427:
 684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector assignment operator.
 687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x will not be copied.
 691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is copied depends on the allocator traits.
 693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(const vector& __x);
 696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move assignment operator.
 700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  if the allocators permit it).
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 318


 704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Afterwards @a __x is a valid, but unspecified %vector.
 705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is moved depends on the allocator traits.
 707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	constexpr bool __move_storage =
 712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
 713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  || _Alloc_traits::_S_always_equal();
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector list assignment operator.
 720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(initializer_list<value_type> __l)
 731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __val  Value to be assigned.
 742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  value.  Note that the assignment completely changes the
 745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the number of elements assigned.
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(size_type __n, const value_type& __val)
 750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_assign(__n, __val); }
 751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
 756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  range [__first,__last).
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 319


 761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
 770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(initializer_list<value_type> __l)
 795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Get a copy of the memory allocation object.
 802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::get_allocator;
 803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // iterators
 805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points to the first
 807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 320


 818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(end()); }
 849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  in reverse element order.
 863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(begin()); }
 867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 321


 875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cbegin() const noexcept
 885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cend() const noexcept
 894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crbegin() const noexcept
 903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crend() const noexcept
 912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.2] capacity
 916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _S_max_size(_M_get_Tp_allocator()); }
 925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 322


 932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  default constructed elements are appended.
 935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size)
 938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_default_append(__new_size - size());
 941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 323


 989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       shrink_to_fit()
 990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_shrink_to_fit(); }
 991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns the total number of elements that the %vector can
 995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  hold before needing to allocate more memory.
 996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
1000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 - this->_M_impl._M_start); }
1001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
1004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  equal end().)
1005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _GLIBCXX_NODISCARD bool
1007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
1008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return begin() == end(); }
1009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *          elements.
1013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements required.
1014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
1015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function attempts to reserve enough memory for the
1017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
1018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number requested is more than max_size(), length_error is
1019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  thrown.
1020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The advantage of this function is that if optimal code is a
1022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  necessity and the user can determine the number of elements
1023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that will be required, the user can reserve the memory in
1024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
1025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and copying of %vector data.
1026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reserve(size_type __n);
1029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // element access
1031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
1044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 324


1046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
1062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Safety check used only from at().
1069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_range_check(size_type __n) const
1071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n >= this->size())
1073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
1074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu) >= this->size() "
1075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu)"),
1076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				   __n, this->size());
1077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
1080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n)
1093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 325


1103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n) const
1111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the first
1118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
1122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
1129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
1133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the last
1140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
1144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
1151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element of the %vector.
1152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
1155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 326


1160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
1162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // data access
1163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
1165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
1166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp*
1168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
1169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp*
1172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
1173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.3] modifiers
1176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Add data to the end of the %vector.
1178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be added.
1179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation.  The function creates an
1181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element at the end of the %vector and assigns the given data
1182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
1183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  done in constant time if the %vector has preallocated space
1184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  available.
1185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(const value_type& __x)
1188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
1190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
1192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
1193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     __x);
1194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    ++this->_M_impl._M_finish;
1195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
1196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
1198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_realloc_insert(end(), __x);
1199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(value_type&& __x)
1204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
1205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201402L
1208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	reference
1209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace_back(_Args&&... __args);
1213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Removes last element.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 327


1217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
1219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that no data is returned, and if the last element's
1221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
1222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  called.
1223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
1226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	--this->_M_impl._M_finish;
1229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
1230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
1231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
1236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __args  Arguments.
1238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert an object of type T constructed
1241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
1242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
1243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and if it is frequently used the user should consider using
1244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::list.
1245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace(const_iterator __position, _Args&&... __args)
1249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ return _M_emplace_aux(__position, std::forward<_Args>(__args)...); }
1250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
1264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 328


1274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, const value_type& __x);
1278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__x)); }
1295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
1300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the
1302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  specified by @a position.
1304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	auto __offset = __position - cbegin();
1313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(begin() + __offset, __l.begin(), __l.end(),
1314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			std::random_access_iterator_tag());
1315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 329


1331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	difference_type __offset = __position - cbegin();
1338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
1377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(const_iterator __position, _InputIterator __first,
1380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     __first, __last, __false_type());
1385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  return begin() + __offset;
1386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 330


1388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(iterator __position, _InputIterator __first,
1405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove element at given position.
1415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the element at the given position and thus
1419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  shorten the %vector by one.
1420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointer is the user's responsibility.
1427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __position)
1431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __position)
1434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__position); }
1435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove a range of elements.
1439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *                  erased.
1442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *           prior to erasing (or end()).
1444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 331


1445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the elements in the range
1446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the elements, and that if the elements themselves are
1452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __beg = begin();
1460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __cbeg = cbegin();
1461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __first, iterator __last)
1465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__first, __last); }
1466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Swaps data with another %vector.
1470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocators are swapped depends on the allocator traits.
1478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       swap(vector& __x) _GLIBCXX_NOEXCEPT
1481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_assert(_Alloc_traits::propagate_on_container_swap::value
1484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 || _M_get_Tp_allocator() == __x._M_get_Tp_allocator());
1485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				  __x._M_get_Tp_allocator());
1489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the user's responsibility.
1496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 332


1502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer
1508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_allocate_and_copy(size_type __n,
1509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try
1513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
1516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      return __result;
1517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __catch(...)
1519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _M_deallocate(__result, __n);
1521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __throw_exception_again;
1522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal constructor functions follow.
1527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(_S_check_init_len(
1538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		static_cast<size_type>(__n), _M_get_Tp_allocator()));
1539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			       __false_type)
1549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
1551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
1552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_InputIterator __first, _InputIterator __last,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 333


1559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::input_iterator_tag)
1560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try {
1562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    for (; __first != __last; ++__first)
1563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      emplace_back(*__first);
1565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      push_back(*__first);
1567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  } __catch(...) {
1569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    clear();
1570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __throw_exception_again;
1571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
1578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
1579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
1585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					this->_M_impl._M_start,
1587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // vector(n,value,a) constructor.
1592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
1597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the vector(n) constructor.
1602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_initialize(size_type __n)
1604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
1607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					   _M_get_Tp_allocator());
1608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // assignment work for the range versions.
1613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 334


1616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_assign(__n, __val); }
1622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __false_type)
1628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
1629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_InputIterator __first, _InputIterator __last,
1634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::input_iterator_tag);
1635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::forward_iterator_tag);
1641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by assign(n,t), and the range assign when it turns out
1643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // to be the same thing.
1644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_assign(size_type __n, const value_type& __val);
1646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal insert functions follow.
1648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,
1656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __true_type)
1657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_insert(__pos, __n, __val); }
1658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _InputIterator __first,
1663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   _InputIterator __last, __false_type)
1664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_insert(__pos, __first, __last,
1666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  std::__iterator_category(__first));
1667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _InputIterator __first,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 335


1673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_InputIterator __last, std::input_iterator_tag);
1674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _ForwardIterator __first,
1679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
1682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // the same thing.
1683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
1685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by resize(n).
1688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_append(size_type __n);
1690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       bool
1692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_shrink_to_fit();
1693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x)
1697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_aux(iterator __position, const value_type& __x);
1699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_realloc_insert(iterator __position, const value_type& __x);
1702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // A value_type object constructed with _Alloc_traits::construct()
1704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // and destroyed with _Alloc_traits::destroy().
1705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Temporary_value
1706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename... _Args>
1708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  explicit
1709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Temporary_value(vector* __vec, _Args&&... __args) : _M_this(__vec)
1710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(_M_this->_M_impl, _M_ptr(),
1712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     std::forward<_Args>(__args)...);
1713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	~_Temporary_value()
1716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _Alloc_traits::destroy(_M_this->_M_impl, _M_ptr()); }
1717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	value_type&
1719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_val() { return *_M_ptr(); }
1720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       private:
1722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Tp*
1723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_ptr() { return reinterpret_cast<_Tp*>(&__buf); }
1724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector* _M_this;
1726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typename aligned_storage<sizeof(_Tp), alignof(_Tp)>::type __buf;
1727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
1728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x) and other functions when insertion needs to
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 336


1730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // reallocate or move existing elements. _Arg is either _Tp& or _Tp.
1731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Arg>
1732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_aux(iterator __position, _Arg&& __arg);
1734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_realloc_insert(iterator __position, _Args&&... __args);
1738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Either move-construct at the end, or forward to _M_insert_aux.
1740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_rval(const_iterator __position, value_type&& __v);
1742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Try to emplace at the end, otherwise forward to _M_insert_aux.
1744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_emplace_aux(const_iterator __position, _Args&&... __args);
1747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Emplacing an rvalue of the correct type can use _M_insert_rval.
1749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_emplace_aux(const_iterator __position, value_type&& __v)
1751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__v)); }
1752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by _M_fill_insert, _M_insert_aux etc.
1755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
1756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_check_len(size_type __n, const char* __s) const
1757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (max_size() - size() < __n)
1759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
1760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_type __len = size() + (std::max)(size(), __n);
1762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
1763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by constructors to check initial size.
1766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static size_type
1767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_check_init_len(size_type __n, const allocator_type& __a)
1768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n > _S_max_size(_Tp_alloc_type(__a)))
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
1771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
1772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n;
1773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static size_type
1776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
1777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
1779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
1780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// (even if std::allocator_traits::max_size says we can).
1781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_t __diffmax
1782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
1783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_t __allocmax = _Alloc_traits::max_size(__a);
1784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (std::min)(__diffmax, __allocmax);
1785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 337


1787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal erase functions follow.
1788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
1790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _M_assign_aux.
1791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
1793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (size_type __n = this->_M_impl._M_finish - __pos)
1795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::_Destroy(__pos, this->_M_impl._M_finish,
1797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  _M_get_Tp_allocator());
1798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish = __pos;
1799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_SHRINK(__n);
1800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_erase(iterator __position);
1805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_erase(iterator __first, iterator __last);
1808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
1811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Constant-time move assignment when source object's memory can be
1812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // moved, either because the source's allocator will move too
1813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // or because the allocators are equal.
1814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_move_assign(vector&& __x, true_type) noexcept
1816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector __tmp(get_allocator());
 7761              		.loc 26 1817 9 view .LVU1770
 7762 001e 02AE     		add	r6, sp, #8
 7763              	.LBE6427:
 7764              	.LBE6429:
 7765              	.LBE6431:
 7766              	.LBE6433:
 7767              		.loc 28 21 11 view .LVU1771
 7768 0020 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.isra.0
 7769              	.LVL548:
 7770              	.LBB6434:
 7771              	.LBI6371:
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7772              		.loc 26 709 7 is_stmt 1 view .LVU1772
 7773              	.LBB6432:
 7774              	.LBB6430:
 7775              	.LBI6373:
1815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7776              		.loc 26 1815 7 view .LVU1773
 7777              	.LBB6428:
 7778              	.LBB6394:
 7779              	.LBI6394:
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 7780              		.loc 26 284 7 view .LVU1774
 7781              	.LBB6395:
 7782              	.LBI6395:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 338


 7783              		.loc 21 147 7 view .LVU1775
 7784              	.LBB6396:
 7785              	.LBI6396:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7786              		.loc 22 82 7 view .LVU1776
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7787              		.loc 22 82 7 is_stmt 0 view .LVU1777
 7788              	.LBE6396:
 7789              	.LBE6395:
 7790              	.LBE6394:
 7791              	.LBB6397:
 7792              	.LBI6397:
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a) { }
 7793              		.loc 26 497 7 is_stmt 1 view .LVU1778
 7794              	.LBB6398:
 7795              	.LBI6398:
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 7796              		.loc 26 293 7 view .LVU1779
 7797              	.LBB6399:
 7798              	.LBI6399:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 7799              		.loc 26 136 2 view .LVU1780
 7800              	.LBB6400:
 7801              	.LBI6400:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7802              		.loc 21 147 7 view .LVU1781
 7803              	.LBB6401:
 7804              	.LBI6401:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7805              		.loc 22 82 7 view .LVU1782
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7806              		.loc 22 82 7 is_stmt 0 view .LVU1783
 7807              	.LBE6401:
 7808              	.LBE6400:
 7809              	.LBB6402:
 7810              	.LBI6402:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 7811              		.loc 26 97 2 is_stmt 1 view .LVU1784
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 7812              		.loc 26 97 2 is_stmt 0 view .LVU1785
 7813              	.LBE6402:
 7814              	.LBE6399:
 7815              	.LBE6398:
 7816              	.LBE6397:
 7817              	.LBB6403:
 7818              	.LBI6403:
 7819              		.loc 21 162 7 is_stmt 1 view .LVU1786
 7820              	.LBB6404:
 7821              	.LBI6404:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7822              		.loc 22 89 7 view .LVU1787
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7823              		.loc 22 89 7 is_stmt 0 view .LVU1788
 7824              	.LBE6404:
 7825              	.LBE6403:
 7826              	.LBB6405:
 7827              	.LBI6405:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 339


 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 7828              		.loc 26 117 2 is_stmt 1 view .LVU1789
 7829              	.LBB6406:
 7830              	.LBB6407:
 7831              	.LBI6407:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 7832              		.loc 26 97 2 view .LVU1790
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 7833              		.loc 26 97 2 is_stmt 0 view .LVU1791
 7834              	.LBE6407:
 7835              	.LBB6408:
 7836              	.LBI6408:
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 7837              		.loc 26 109 2 is_stmt 1 view .LVU1792
 7838              	.LBB6409:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 7839              		.loc 26 111 19 is_stmt 0 view .LVU1793
 7840 0024 636B     		ldr	r3, [r4, #52]
 7841              	.LVL549:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 7842              		.loc 26 111 19 view .LVU1794
 7843              	.LBE6409:
 7844              	.LBE6408:
 7845              	.LBB6412:
 7846              	.LBB6413:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 7847              		.loc 26 113 28 view .LVU1795
 7848 0026 EA6B     		ldr	r2, [r5, #60]
 7849              	.LBE6413:
 7850              	.LBE6412:
 7851              	.LBE6406:
 7852              	.LBE6405:
 7853              		.loc 26 1817 9 view .LVU1796
 7854 0028 3046     		mov	r0, r6
 7855              	.LBB6422:
 7856              	.LBB6391:
 7857              	.LBB6381:
 7858              	.LBB6382:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 7859              		.loc 26 111 13 view .LVU1797
 7860 002a 0293     		str	r3, [sp, #8]
 7861              	.LBE6382:
 7862              	.LBE6381:
 7863              	.LBE6391:
 7864              	.LBE6422:
 7865              	.LBB6423:
 7866              	.LBB6420:
 7867              	.LBB6416:
 7868              	.LBB6410:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 7869              		.loc 26 112 20 view .LVU1798
 7870 002c A36B     		ldr	r3, [r4, #56]
 7871              	.LVL550:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 7872              		.loc 26 112 20 view .LVU1799
 7873              	.LBE6410:
 7874              	.LBE6416:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 340


 7875              	.LBE6420:
 7876              	.LBE6423:
 7877              	.LBB6424:
 7878              	.LBB6392:
 7879              	.LBB6385:
 7880              	.LBB6383:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 7881              		.loc 26 112 14 view .LVU1800
 7882 002e 0393     		str	r3, [sp, #12]
 7883              	.LBE6383:
 7884              	.LBE6385:
 7885              	.LBE6392:
 7886              	.LBE6424:
 7887              	.LBB6425:
 7888              	.LBB6421:
 7889              	.LBB6417:
 7890              	.LBB6414:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 7891              		.loc 26 111 19 view .LVU1801
 7892 0030 6B6B     		ldr	r3, [r5, #52]
 7893              	.LVL551:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 7894              		.loc 26 111 13 view .LVU1802
 7895 0032 6363     		str	r3, [r4, #52]
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 7896              		.loc 26 112 20 view .LVU1803
 7897 0034 AB6B     		ldr	r3, [r5, #56]
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 7898              		.loc 26 112 14 view .LVU1804
 7899 0036 A363     		str	r3, [r4, #56]
 7900              	.LVL552:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 7901              		.loc 26 112 14 view .LVU1805
 7902              	.LBE6414:
 7903              	.LBE6417:
 7904              	.LBB6418:
 7905              	.LBB6411:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 7906              		.loc 26 113 28 view .LVU1806
 7907 0038 E36B     		ldr	r3, [r4, #60]
 7908              	.LVL553:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 7909              		.loc 26 113 28 view .LVU1807
 7910              	.LBE6411:
 7911              	.LBE6418:
 7912              	.LBB6419:
 7913              	.LBI6412:
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 7914              		.loc 26 109 2 is_stmt 1 view .LVU1808
 7915              	.LBB6415:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 7916              		.loc 26 113 22 is_stmt 0 view .LVU1809
 7917 003a E263     		str	r2, [r4, #60]
 7918              	.LVL554:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 7919              		.loc 26 113 22 view .LVU1810
 7920              	.LBE6415:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 341


 7921              	.LBE6419:
 7922              	.LBE6421:
 7923              	.LBE6425:
 7924              	.LBB6426:
 7925              	.LBI6375:
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 7926              		.loc 26 117 2 is_stmt 1 view .LVU1811
 7927              	.LBB6393:
 7928              	.LBB6386:
 7929              	.LBI6386:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 7930              		.loc 26 97 2 view .LVU1812
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 7931              		.loc 26 97 2 is_stmt 0 view .LVU1813
 7932              	.LBE6386:
 7933              	.LBB6387:
 7934              	.LBI6381:
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 7935              		.loc 26 109 2 is_stmt 1 view .LVU1814
 7936              	.LBE6387:
 7937              	.LBB6388:
 7938              	.LBB6379:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 7939              		.loc 26 113 22 is_stmt 0 view .LVU1815
 7940 003c EF63     		str	r7, [r5, #60]
 7941              	.LBE6379:
 7942              	.LBE6388:
 7943              	.LBB6389:
 7944              	.LBB6384:
 7945 003e 0493     		str	r3, [sp, #16]
 7946              	.LVL555:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 7947              		.loc 26 113 22 view .LVU1816
 7948              	.LBE6384:
 7949              	.LBE6389:
 7950              	.LBB6390:
 7951              	.LBI6377:
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 7952              		.loc 26 109 2 is_stmt 1 view .LVU1817
 7953              	.LBB6380:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 7954              		.loc 26 112 14 is_stmt 0 view .LVU1818
 7955 0040 C5E90D77 		strd	r7, r7, [r5, #52]
 7956              	.LBE6380:
 7957              	.LBE6390:
 7958              	.LBE6393:
 7959              	.LBE6426:
 7960              		.loc 26 1817 9 view .LVU1819
 7961 0044 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 7962              	.LVL556:
 7963              		.loc 26 1817 9 view .LVU1820
 7964              	.LBE6428:
 7965              	.LBE6430:
 7966              	.LBE6432:
 7967              	.LBE6434:
 7968              	.LBB6435:
 7969              	.LBI6435:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 342


 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       private _Function_base
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Func,
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	       typename _Res2 = __invoke_result<_Func&, _ArgTypes...>>
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	struct _Callable
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	: __is_invocable_impl<_Res2, _Res>::type
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ };
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // Used so the return type convertibility checks aren't done when
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // performing overload resolution for copy construction/assignment.
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Tp>
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	struct _Callable<function, _Tp> : false_type { };
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Cond, typename _Tp>
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	using _Requires = typename enable_if<_Cond::value, _Tp>::type;
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     public:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       typedef _Res result_type;
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // [3.7.2.1] construct/copy/destroy
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Default construct creates an empty function call wrapper.
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @post @c !(bool)*this
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function() noexcept
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       : _Function_base() { }
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Creates an empty function call wrapper.
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @post @c !(bool)*this
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(nullptr_t) noexcept
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       : _Function_base() { }
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function copy constructor.
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __x A %function object with identical call signature.
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @post @c bool(*this) == bool(__x)
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The newly-created %function contains a copy of the target of @a
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  __x (if it has one).
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(const function& __x);
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function move constructor.
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __x A %function object rvalue with identical call signature.
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The newly-created %function contains the target of @a __x
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  (if it has one).
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(function&& __x) noexcept : _Function_base()
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	__x.swap(*this);
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 343


 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Builds a %function that targets a copy of the incoming
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  function object.
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __f A %function object that is callable with parameters of
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  type @c T1, @c T2, ..., @c TN and returns a value convertible
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  to @c Res.
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The newly-created %function object will target a copy of
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @a __f. If @a __f is @c reference_wrapper<F>, then this function
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  object will contain a reference to the function object @c
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  __f.get(). If @a __f is a NULL function pointer or NULL
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  pointer-to-member, the newly-created object will be empty.
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  If @a __f is a non-NULL function pointer or an object of type @c
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  reference_wrapper<F>, this function will not throw.
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Functor,
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	       typename = _Requires<__not_<is_same<_Functor, function>>, void>,
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	       typename = _Requires<_Callable<_Functor>, void>>
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	function(_Functor);
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function assignment operator.
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __x A %function with identical call signature.
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @post @c (bool)*this == (bool)x
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @returns @c *this
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The target of @a __x is copied to @c *this. If @a __x has no
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  target, then @c *this will be empty.
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  If @a __x targets a function pointer or a reference to a function
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  object, then this operation will not throw an %exception.
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function&
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       operator=(const function& __x)
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	function(__x).swap(*this);
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	return *this;
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function move-assignment operator.
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __x A %function rvalue with identical call signature.
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @returns @c *this
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The target of @a __x is moved to @c *this. If @a __x has no
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  target, then @c *this will be empty.
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  If @a __x targets a function pointer or a reference to a function
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  object, then this operation will not throw an %exception.
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function&
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       operator=(function&& __x) noexcept
 7970              		.loc 16 414 7 is_stmt 1 view .LVU1821
 7971              	.LBB6436:
 7972              	.LBB6437:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 344


 7973              	.LBI6437:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 7974              		.loc 16 357 7 view .LVU1822
 7975              	.LBB6438:
 7976              	.LBB6439:
 7977              	.LBI6439:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 7978              		.loc 16 240 5 view .LVU1823
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 7979              		.loc 16 240 5 is_stmt 0 view .LVU1824
 7980              	.LBE6439:
 7981              	.LBB6440:
 7982              	.LBI6440:
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	function(std::move(__x)).swap(*this);
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	return *this;
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function assignment to zero.
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @post @c !(bool)*this
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @returns @c *this
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The target of @c *this is deallocated, leaving it empty.
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function&
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       operator=(nullptr_t) noexcept
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	if (_M_manager)
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  {
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _M_manager(_M_functor, _M_functor, __destroy_functor);
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _M_manager = nullptr;
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _M_invoker = nullptr;
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  }
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	return *this;
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function assignment to a new target.
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __f A %function object that is callable with parameters of
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  type @c T1, @c T2, ..., @c TN and returns a value convertible
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  to @c Res.
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @return @c *this
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  This  %function object wrapper will target a copy of @a
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  __f. If @a __f is @c reference_wrapper<F>, then this function
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  object will contain a reference to the function object @c
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  __f.get(). If @a __f is a NULL function pointer or NULL
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  pointer-to-member, @c this object will be empty.
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  If @a __f is a non-NULL function pointer or an object of type @c
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  reference_wrapper<F>, this function will not throw.
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Functor>
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_Requires<_Callable<typename decay<_Functor>::type>, function&>
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	operator=(_Functor&& __f)
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 345


 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  function(std::forward<_Functor>(__f)).swap(*this);
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  return *this;
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /// @overload
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Functor>
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	function&
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	operator=(reference_wrapper<_Functor> __f) noexcept
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  function(__f).swap(*this);
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  return *this;
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // [3.7.2.2] function modifiers
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Swap the targets of two %function objects.
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __x A %function with identical call signature.
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  Swap the targets of @c this function object and @a __f. This
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  function will not throw an %exception.
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       void swap(function& __x) noexcept
 7983              		.loc 16 481 12 is_stmt 1 view .LVU1825
 7984              	.LBB6441:
 7985              	.LBI6441:
 7986              		.file 34 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\mov
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Move, forward and identity for C++11 + swap -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** /** @file bits/move.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #ifndef _MOVE_H
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 346


  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _MOVE_H 1
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #include <bits/c++config.h>
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus < 201103L
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** # include <bits/concept_check.h>
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** {
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // Used, in C++03 mode too, by allocators, etc.
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief Same as C++11 std::addressof
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @ingroup utilities
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     inline _GLIBCXX_CONSTEXPR _Tp*
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return __builtin_addressof(__r); }
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus >= 201103L
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** } // namespace
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #include <type_traits> // Brings in std::declval too.
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** {
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @addtogroup utilities
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @{
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Forward an lvalue.
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to the specified type.
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr _Tp&&
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Forward an rvalue.
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to the specified type.
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr _Tp&&
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 347


  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     {
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 		    " substituting _Tp is an lvalue reference type");
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       return static_cast<_Tp&&>(__t);
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     }
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Convert a value to an rvalue.
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __t  A thing of arbitrary type.
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   */
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     move(_Tp&& __t) noexcept
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     struct __move_if_noexcept_cond
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     : public __and_<__not_<is_nothrow_move_constructible<_Tp>>,
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****                     is_copy_constructible<_Tp>>::type { };
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Conditionally convert a value to an rvalue.
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __x  A thing of arbitrary type.
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter, possibly cast to an rvalue-reference.
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  Same as std::move unless the type's move constructor could throw and the
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  type is copyable, in which case an lvalue-reference is returned instead.
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr typename
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     conditional<__move_if_noexcept_cond<_Tp>::value, const _Tp&, _Tp&&>::type
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     move_if_noexcept(_Tp& __x) noexcept
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return std::move(__x); }
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // declval, from type_traits.
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus > 201402L
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // 2296. std::addressof should be constexpr
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** # define __cpp_lib_addressof_constexpr 201603
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief Returns the actual address of the object or function
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *         referenced by r, even in the presence of an overloaded
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *         operator&.
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __r  Reference to an object or function.
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return   The actual address.
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   */
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     inline _GLIBCXX17_CONSTEXPR _Tp*
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     addressof(_Tp& __r) noexcept
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return std::__addressof(__r); }
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // 2598. addressof works on temporaries
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 348


 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     const _Tp* addressof(const _Tp&&) = delete;
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // C++11 version of std::exchange for internal use.
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template <typename _Tp, typename _Up = _Tp>
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX20_CONSTEXPR
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     inline _Tp
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     __exchange(_Tp& __obj, _Up&& __new_val)
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     {
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       _Tp __old_val = std::move(__obj);
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __obj = std::forward<_Up>(__new_val);
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       return __old_val;
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     }
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /// @} group utilities
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _GLIBCXX_MOVE(__val) std::move(__val)
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _GLIBCXX_FORWARD(_Tp, __val) std::forward<_Tp>(__val)
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #else
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _GLIBCXX_MOVE(__val) (__val)
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _GLIBCXX_FORWARD(_Tp, __val) (__val)
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @addtogroup utilities
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @{
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief Swaps two values.
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __a  A thing of arbitrary type.
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __b  Another thing of arbitrary type.
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return   Nothing.
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   */
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX20_CONSTEXPR
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     inline
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus >= 201103L
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     typename enable_if<__and_<__not_<__is_tuple_like<_Tp>>,
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 			      is_move_constructible<_Tp>,
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 			      is_move_assignable<_Tp>>::value>::type
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #else
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     void
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     swap(_Tp& __a, _Tp& __b)
 7987              		.loc 34 189 5 view .LVU1826
 7988              	.LBB6442:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 				is_nothrow_move_assignable<_Tp>>::value)
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     {
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus < 201103L
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       // concept requirements
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       _Tp __tmp = _GLIBCXX_MOVE(__a);
 7989              		.loc 34 197 11 is_stmt 0 view .LVU1827
 7990 0048 05F1400C 		add	ip, r5, #64
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 349


 7991              	.LVL557:
 7992              		.loc 34 197 11 view .LVU1828
 7993 004c 6B46     		mov	r3, sp
 7994              	.LBE6442:
 7995              	.LBE6441:
 7996              	.LBE6440:
 7997              	.LBE6438:
 7998              	.LBE6437:
 7999              	.LBB6455:
 8000              	.LBB6456:
 8001              	.LBB6457:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __a = _GLIBCXX_MOVE(__b);
 8002              		.loc 34 198 7 view .LVU1829
 8003 004e 04F14002 		add	r2, r4, #64
 8004              	.LVL558:
 8005              		.loc 34 198 7 view .LVU1830
 8006              	.LBE6457:
 8007              	.LBE6456:
 8008              	.LBE6455:
 8009              	.LBB6466:
 8010              	.LBB6454:
 8011              	.LBB6453:
 8012              	.LBB6445:
 8013              	.LBB6443:
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __a = _GLIBCXX_MOVE(__b);
 8014              		.loc 34 197 11 view .LVU1831
 8015 0052 9CE80300 		ldm	ip, {r0, r1}
 8016 0056 83E80300 		stm	r3, {r0, r1}
 8017              		.loc 34 198 7 view .LVU1832
 8018 005a 96E80300 		ldm	r6, {r0, r1}
 8019 005e 8CE80300 		stm	ip, {r0, r1}
 8020              	.LBE6443:
 8021              	.LBE6445:
 8022              	.LBB6446:
 8023              	.LBB6447:
 8024              		.loc 34 198 11 view .LVU1833
 8025 0062 0599     		ldr	r1, [sp, #20]
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __a = _GLIBCXX_MOVE(__b);
 8026              		.loc 34 197 11 view .LVU1834
 8027 0064 D5F84CC0 		ldr	ip, [r5, #76]
 8028              	.LVL559:
 8029              		.loc 34 198 11 view .LVU1835
 8030 0068 E964     		str	r1, [r5, #76]
 8031              	.LBE6447:
 8032              	.LBE6446:
 8033              	.LBB6448:
 8034              	.LBB6449:
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __a = _GLIBCXX_MOVE(__b);
 8035              		.loc 34 197 11 view .LVU1836
 8036 006a D5F848E0 		ldr	lr, [r5, #72]
 8037              		.loc 34 198 11 view .LVU1837
 8038 006e AF64     		str	r7, [r5, #72]
 8039              	.LBE6449:
 8040              	.LBE6448:
 8041              	.LBB6450:
 8042              	.LBB6444:
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 350


 8043              		.loc 34 199 7 view .LVU1838
 8044 0070 93E80300 		ldm	r3, {r0, r1}
 8045 0074 86E80300 		stm	r6, {r0, r1}
 8046              	.LVL560:
 8047              		.loc 34 199 7 view .LVU1839
 8048              	.LBE6444:
 8049              	.LBE6450:
 8050              	.LBB6451:
 8051              	.LBI6448:
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8052              		.loc 34 189 5 is_stmt 1 view .LVU1840
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8053              		.loc 34 189 5 is_stmt 0 view .LVU1841
 8054              	.LBE6451:
 8055              	.LBB6452:
 8056              	.LBI6446:
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8057              		.loc 34 189 5 is_stmt 1 view .LVU1842
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8058              		.loc 34 189 5 is_stmt 0 view .LVU1843
 8059              	.LBE6452:
 8060              	.LBE6453:
 8061              	.LBE6454:
 8062              	.LBE6466:
 8063              	.LBB6467:
 8064              	.LBI6455:
 8065              		.loc 16 481 12 is_stmt 1 view .LVU1844
 8066              	.LBB6459:
 8067              	.LBI6456:
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8068              		.loc 34 189 5 view .LVU1845
 8069              	.LBB6458:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8070              		.loc 34 198 7 is_stmt 0 view .LVU1846
 8071 0078 92E80300 		ldm	r2, {r0, r1}
 8072 007c 86E80300 		stm	r6, {r0, r1}
 8073              		.loc 34 199 7 view .LVU1847
 8074 0080 93E80300 		ldm	r3, {r0, r1}
 8075 0084 82E80300 		stm	r2, {r0, r1}
 8076              	.LVL561:
 8077              		.loc 34 199 7 view .LVU1848
 8078              	.LBE6458:
 8079              	.LBE6459:
 8080              	.LBB6460:
 8081              	.LBI6460:
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8082              		.loc 34 189 5 is_stmt 1 view .LVU1849
 8083              	.LBB6461:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8084              		.loc 34 198 11 is_stmt 0 view .LVU1850
 8085 0088 A36C     		ldr	r3, [r4, #72]
 8086              	.LBE6461:
 8087              	.LBE6460:
 8088              	.LBE6467:
 8089              	.LBB6468:
 8090              	.LBB6469:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 351


 8091              		.loc 16 303 11 view .LVU1851
 8092 008a 3046     		mov	r0, r6
 8093              	.LBE6469:
 8094              	.LBE6468:
 8095              	.LBB6471:
 8096              	.LBB6463:
 8097              	.LBB6462:
 8098              		.loc 34 199 11 view .LVU1852
 8099 008c C4F848E0 		str	lr, [r4, #72]
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8100              		.loc 34 198 11 view .LVU1853
 8101 0090 0493     		str	r3, [sp, #16]
 8102              	.LVL562:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8103              		.loc 34 198 11 view .LVU1854
 8104              	.LBE6462:
 8105              	.LBE6463:
 8106              	.LBB6464:
 8107              	.LBI6464:
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8108              		.loc 34 189 5 is_stmt 1 view .LVU1855
 8109              	.LBB6465:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8110              		.loc 34 198 11 is_stmt 0 view .LVU1856
 8111 0092 E36C     		ldr	r3, [r4, #76]
 8112              		.loc 34 199 11 view .LVU1857
 8113 0094 C4F84CC0 		str	ip, [r4, #76]
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8114              		.loc 34 198 11 view .LVU1858
 8115 0098 0593     		str	r3, [sp, #20]
 8116              	.LVL563:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8117              		.loc 34 198 11 view .LVU1859
 8118              	.LBE6465:
 8119              	.LBE6464:
 8120              	.LBE6471:
 8121              	.LBB6472:
 8122              	.LBI6468:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 8123              		.loc 16 303 11 is_stmt 1 view .LVU1860
 8124              	.LBB6470:
 8125 009a FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 8126              	.LVL564:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 8127              		.loc 16 303 11 is_stmt 0 view .LVU1861
 8128              	.LBE6470:
 8129              	.LBE6472:
 8130              	.LBE6436:
 8131              	.LBE6435:
 8132              		.loc 28 21 11 view .LVU1862
 8133 009e 07B0     		add	sp, sp, #28
 8134              		.cfi_def_cfa_offset 20
 8135              		@ sp needed
 8136 00a0 F0BD     		pop	{r4, r5, r6, r7, pc}
 8137              		.loc 28 21 11 view .LVU1863
 8138              		.cfi_endproc
 8139              	.LFE6201:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 352


 8141 00a2 00BF     		.section	.text._ZN10jellybeans8MenuItemD2Ev,"axG",%progbits,_ZN10jellybeans8MenuItemD5Ev,comdat
 8142              		.align	1
 8143              		.p2align 2,,3
 8144              		.weak	_ZN10jellybeans8MenuItemD2Ev
 8145              		.syntax unified
 8146              		.thumb
 8147              		.thumb_func
 8148              		.fpu fpv5-d16
 8150              	_ZN10jellybeans8MenuItemD2Ev:
 8151              	.LVL565:
 8152              	.LFB5107:
 8153              		.loc 28 21 11 is_stmt 1 view -0
 8154              		.cfi_startproc
 8155              		@ args = 0, pretend = 0, frame = 0
 8156              		@ frame_needed = 0, uses_anonymous_args = 0
 8157              		.loc 28 21 11 is_stmt 0 view .LVU1865
 8158 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 8159              		.cfi_def_cfa_offset 24
 8160              		.cfi_offset 3, -24
 8161              		.cfi_offset 4, -20
 8162              		.cfi_offset 5, -16
 8163              		.cfi_offset 6, -12
 8164              		.cfi_offset 7, -8
 8165              		.cfi_offset 14, -4
 8166              	.LBB6552:
 8167              	.LBB6553:
 8168              	.LBB6554:
 8169              	.LBB6555:
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 8170              		.loc 16 244 11 view .LVU1866
 8171 0002 836C     		ldr	r3, [r0, #72]
 8172              	.LBE6555:
 8173              	.LBE6554:
 8174              	.LBE6553:
 8175              	.LBE6552:
 8176              		.loc 28 21 11 view .LVU1867
 8177 0004 0646     		mov	r6, r0
 8178              	.LVL566:
 8179              	.LBB6561:
 8180              	.LBI6552:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 8181              		.loc 16 303 11 is_stmt 1 view .LVU1868
 8182              	.LBB6560:
 8183              	.LBB6558:
 8184              	.LBI6554:
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 8185              		.loc 16 242 5 view .LVU1869
 8186              	.LBB6556:
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 8187              		.loc 16 244 7 view .LVU1870
 8188 0006 23B1     		cbz	r3, .L501
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 8189              		.loc 16 245 2 view .LVU1871
 8190              	.LBE6556:
 8191              	.LBE6558:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 8192              		.loc 16 303 11 is_stmt 0 view .LVU1872
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 353


 8193 0008 00F14001 		add	r1, r0, #64
 8194              	.LVL567:
 8195              	.LBB6559:
 8196              	.LBB6557:
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 8197              		.loc 16 245 12 view .LVU1873
 8198 000c 0322     		movs	r2, #3
 8199 000e 0846     		mov	r0, r1
 8200              	.LVL568:
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 8201              		.loc 16 245 12 view .LVU1874
 8202 0010 9847     		blx	r3
 8203              	.LVL569:
 8204              	.L501:
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 8205              		.loc 16 245 12 view .LVU1875
 8206              	.LBE6557:
 8207              	.LBE6559:
 8208              	.LBE6560:
 8209              	.LBE6561:
 8210              	.LBB6562:
 8211              	.LBI6562:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8212              		.loc 26 678 7 is_stmt 1 view .LVU1876
 8213              	.LBB6563:
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 8214              		.loc 26 680 15 is_stmt 0 view .LVU1877
 8215 0012 D6E90D57 		ldrd	r5, r7, [r6, #52]
 8216              	.LVL570:
 8217              	.LBB6564:
 8218              	.LBI6564:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 8219              		.loc 26 276 7 is_stmt 1 view .LVU1878
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 8220              		.loc 26 276 7 is_stmt 0 view .LVU1879
 8221              	.LBE6564:
 8222              	.LBB6565:
 8223              	.LBI6565:
 8224              		.loc 25 735 5 is_stmt 1 view .LVU1880
 8225              	.LBB6566:
 8226              	.LBB6567:
 8227              	.LBB6568:
 8228              	.LBB6569:
 8229              		.loc 27 151 19 view .LVU1881
 8230 0016 BD42     		cmp	r5, r7
 8231 0018 0FD0     		beq	.L502
 8232 001a 05F10804 		add	r4, r5, #8
 8233              	.LVL571:
 8234              	.L504:
 8235              	.LBB6570:
 8236              	.LBI6570:
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 8237              		.loc 27 135 5 view .LVU1882
 8238              	.LBB6571:
 8239              	.LBI6571:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 8240              		.loc 19 657 7 view .LVU1883
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 354


 8241              	.LBB6572:
 8242              	.LBI6572:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8243              		.loc 19 229 7 view .LVU1884
 8244              	.LBB6573:
 8245              	.LBB6574:
 8246              	.LBI6574:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 8247              		.loc 19 221 7 view .LVU1885
 8248              	.LBB6575:
 8249              	.LBI6575:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8250              		.loc 19 186 7 view .LVU1886
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8251              		.loc 19 186 7 is_stmt 0 view .LVU1887
 8252              	.LBE6575:
 8253              	.LBE6574:
 8254              	.LBB6578:
 8255              	.LBI6578:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8256              		.loc 19 236 7 is_stmt 1 view .LVU1888
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8257              		.loc 19 236 7 is_stmt 0 view .LVU1889
 8258              	.LBE6578:
 8259              	.LBB6586:
 8260              	.LBB6577:
 8261              	.LBB6576:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8262              		.loc 19 187 28 view .LVU1890
 8263 001e 54F8080C 		ldr	r0, [r4, #-8]
 8264              	.LVL572:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8265              		.loc 19 187 28 view .LVU1891
 8266              	.LBE6576:
 8267              	.LBE6577:
 8268              	.LBE6586:
 8269              	.LBB6587:
 8270              	.LBB6579:
 8271              	.LBB6580:
 8272              	.LBI6580:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8273              		.loc 25 491 7 is_stmt 1 view .LVU1892
 8274              	.LBB6581:
 8275              	.LBI6581:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8276              		.loc 22 120 7 view .LVU1893
 8277              	.LBE6581:
 8278              	.LBE6580:
 8279              	.LBE6579:
 8280              	.LBE6587:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8281              		.loc 19 231 2 is_stmt 0 view .LVU1894
 8282 0022 8442     		cmp	r4, r0
 8283              	.LBE6573:
 8284              	.LBE6572:
 8285              	.LBE6571:
 8286              	.LBE6570:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 355


 8287              		.loc 27 151 19 view .LVU1895
 8288 0024 04F11804 		add	r4, r4, #24
 8289              	.LBB6595:
 8290              	.LBB6594:
 8291              	.LBB6590:
 8292              	.LBB6589:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8293              		.loc 19 231 2 view .LVU1896
 8294 0028 03D0     		beq	.L503
 8295              	.LBB6588:
 8296              	.LBB6585:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8297              		.loc 19 237 34 view .LVU1897
 8298 002a A968     		ldr	r1, [r5, #8]
 8299              	.LBB6584:
 8300              	.LBB6583:
 8301              	.LBB6582:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8302              		.loc 22 133 19 view .LVU1898
 8303 002c 0131     		adds	r1, r1, #1
 8304              	.LVL573:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8305              		.loc 22 133 19 view .LVU1899
 8306 002e FFF7FEFF 		bl	_ZdlPvj
 8307              	.LVL574:
 8308              	.L503:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8309              		.loc 22 133 19 view .LVU1900
 8310              	.LBE6582:
 8311              	.LBE6583:
 8312              	.LBE6584:
 8313              	.LBE6585:
 8314              	.LBE6588:
 8315              	.LBE6589:
 8316              	.LBE6590:
 8317              	.LBB6591:
 8318              	.LBI6591:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8319              		.loc 19 150 14 is_stmt 1 view .LVU1901
 8320              	.LBB6592:
 8321              	.LBI6592:
 8322              		.loc 21 162 7 view .LVU1902
 8323              	.LBB6593:
 8324              	.LBI6593:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8325              		.loc 22 89 7 view .LVU1903
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8326              		.loc 22 89 7 is_stmt 0 view .LVU1904
 8327              	.LBE6593:
 8328              	.LBE6592:
 8329              	.LBE6591:
 8330              	.LBE6594:
 8331              	.LBE6595:
 8332              		.loc 27 151 4 is_stmt 1 view .LVU1905
 8333 0032 1835     		adds	r5, r5, #24
 8334              	.LVL575:
 8335              		.loc 27 151 19 view .LVU1906
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 356


 8336 0034 AF42     		cmp	r7, r5
 8337 0036 F2D1     		bne	.L504
 8338              	.LBE6569:
 8339              	.LBE6568:
 8340              	.LBE6567:
 8341              	.LBE6566:
 8342              	.LBE6565:
 8343              	.LBB6596:
 8344              	.LBB6597:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 8345              		.loc 26 335 15 is_stmt 0 view .LVU1907
 8346 0038 776B     		ldr	r7, [r6, #52]
 8347              	.LVL576:
 8348              	.L502:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 8349              		.loc 26 335 15 view .LVU1908
 8350              	.LBE6597:
 8351              	.LBI6596:
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8352              		.loc 26 333 7 is_stmt 1 view .LVU1909
 8353              	.LBB6612:
 8354              	.LBB6598:
 8355              	.LBI6598:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8356              		.loc 26 350 7 view .LVU1910
 8357              	.LBB6599:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 8358              		.loc 26 353 2 is_stmt 0 view .LVU1911
 8359 003a 27B1     		cbz	r7, .L505
 8360              	.LVL577:
 8361              	.LBB6600:
 8362              	.LBI6600:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8363              		.loc 25 491 7 is_stmt 1 view .LVU1912
 8364              	.LBB6601:
 8365              	.LBB6602:
 8366              	.LBI6602:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8367              		.loc 22 120 7 view .LVU1913
 8368              	.LBE6602:
 8369              	.LBE6601:
 8370              	.LBE6600:
 8371              	.LBE6599:
 8372              	.LBE6598:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 8373              		.loc 26 336 35 is_stmt 0 view .LVU1914
 8374 003c F16B     		ldr	r1, [r6, #60]
 8375              	.LBB6608:
 8376              	.LBB6607:
 8377              	.LBB6606:
 8378              	.LBB6605:
 8379              	.LBB6604:
 8380              	.LBB6603:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8381              		.loc 22 133 19 view .LVU1915
 8382 003e 3846     		mov	r0, r7
 8383 0040 C91B     		subs	r1, r1, r7
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 357


 8384 0042 FFF7FEFF 		bl	_ZdlPvj
 8385              	.LVL578:
 8386              	.L505:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8387              		.loc 22 133 19 view .LVU1916
 8388              	.LBE6603:
 8389              	.LBE6604:
 8390              	.LBE6605:
 8391              	.LBE6606:
 8392              	.LBE6607:
 8393              	.LBE6608:
 8394              	.LBB6609:
 8395              	.LBI6609:
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 8396              		.loc 26 128 14 is_stmt 1 view .LVU1917
 8397              	.LBB6610:
 8398              	.LBI6610:
 8399              		.loc 21 162 7 view .LVU1918
 8400              	.LBB6611:
 8401              	.LBI6611:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8402              		.loc 22 89 7 view .LVU1919
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8403              		.loc 22 89 7 is_stmt 0 view .LVU1920
 8404              	.LBE6611:
 8405              	.LBE6610:
 8406              	.LBE6609:
 8407              	.LBE6612:
 8408              	.LBE6596:
 8409              	.LBE6563:
 8410              	.LBE6562:
 8411              	.LBB6613:
 8412              	.LBI6613:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 8413              		.loc 19 657 7 is_stmt 1 view .LVU1921
 8414              	.LBB6614:
 8415              	.LBI6614:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8416              		.loc 19 229 7 view .LVU1922
 8417              	.LBB6615:
 8418              	.LBB6616:
 8419              	.LBI6616:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 8420              		.loc 19 221 7 view .LVU1923
 8421              	.LBB6617:
 8422              	.LBI6617:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8423              		.loc 19 186 7 view .LVU1924
 8424              	.LBB6618:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8425              		.loc 19 187 28 is_stmt 0 view .LVU1925
 8426 0046 F069     		ldr	r0, [r6, #28]
 8427              	.LVL579:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8428              		.loc 19 187 28 view .LVU1926
 8429              	.LBE6618:
 8430              	.LBE6617:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 358


 8431              	.LBB6619:
 8432              	.LBI6619:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8433              		.loc 19 200 7 is_stmt 1 view .LVU1927
 8434              	.LBB6620:
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 8435              		.loc 19 203 57 is_stmt 0 view .LVU1928
 8436 0048 06F12403 		add	r3, r6, #36
 8437              	.LBE6620:
 8438              	.LBE6619:
 8439              	.LBE6616:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8440              		.loc 19 231 2 view .LVU1929
 8441 004c 9842     		cmp	r0, r3
 8442 004e 03D0     		beq	.L506
 8443              	.LVL580:
 8444              	.LBB6621:
 8445              	.LBI6621:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8446              		.loc 19 236 7 is_stmt 1 view .LVU1930
 8447              	.LBB6622:
 8448              	.LBB6623:
 8449              	.LBI6623:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8450              		.loc 25 491 7 view .LVU1931
 8451              	.LBB6624:
 8452              	.LBI6624:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8453              		.loc 22 120 7 view .LVU1932
 8454              	.LBE6624:
 8455              	.LBE6623:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8456              		.loc 19 237 34 is_stmt 0 view .LVU1933
 8457 0050 716A     		ldr	r1, [r6, #36]
 8458              	.LBB6627:
 8459              	.LBB6626:
 8460              	.LBB6625:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8461              		.loc 22 133 19 view .LVU1934
 8462 0052 0131     		adds	r1, r1, #1
 8463              	.LVL581:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8464              		.loc 22 133 19 view .LVU1935
 8465 0054 FFF7FEFF 		bl	_ZdlPvj
 8466              	.LVL582:
 8467              	.L506:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8468              		.loc 22 133 19 view .LVU1936
 8469              	.LBE6625:
 8470              	.LBE6626:
 8471              	.LBE6627:
 8472              	.LBE6622:
 8473              	.LBE6621:
 8474              	.LBE6615:
 8475              	.LBE6614:
 8476              	.LBB6628:
 8477              	.LBI6628:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 359


 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8478              		.loc 19 150 14 is_stmt 1 view .LVU1937
 8479              	.LBB6629:
 8480              	.LBI6629:
 8481              		.loc 21 162 7 view .LVU1938
 8482              	.LBB6630:
 8483              	.LBI6630:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8484              		.loc 22 89 7 view .LVU1939
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8485              		.loc 22 89 7 is_stmt 0 view .LVU1940
 8486              	.LBE6630:
 8487              	.LBE6629:
 8488              	.LBE6628:
 8489              	.LBE6613:
 8490              	.LBB6631:
 8491              	.LBI6631:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 8492              		.loc 19 657 7 is_stmt 1 view .LVU1941
 8493              	.LBB6632:
 8494              	.LBI6632:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8495              		.loc 19 229 7 view .LVU1942
 8496              	.LBB6633:
 8497              	.LBB6634:
 8498              	.LBI6634:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 8499              		.loc 19 221 7 view .LVU1943
 8500              	.LBB6635:
 8501              	.LBI6635:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8502              		.loc 19 186 7 view .LVU1944
 8503              	.LBB6636:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8504              		.loc 19 187 28 is_stmt 0 view .LVU1945
 8505 0058 7068     		ldr	r0, [r6, #4]
 8506              	.LVL583:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8507              		.loc 19 187 28 view .LVU1946
 8508              	.LBE6636:
 8509              	.LBE6635:
 8510              	.LBB6637:
 8511              	.LBI6637:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8512              		.loc 19 200 7 is_stmt 1 view .LVU1947
 8513              	.LBB6638:
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 8514              		.loc 19 203 57 is_stmt 0 view .LVU1948
 8515 005a 06F10C03 		add	r3, r6, #12
 8516              	.LBE6638:
 8517              	.LBE6637:
 8518              	.LBE6634:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8519              		.loc 19 231 2 view .LVU1949
 8520 005e 9842     		cmp	r0, r3
 8521 0060 03D0     		beq	.L507
 8522              	.LVL584:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 360


 8523              	.LBB6639:
 8524              	.LBI6639:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8525              		.loc 19 236 7 is_stmt 1 view .LVU1950
 8526              	.LBB6640:
 8527              	.LBB6641:
 8528              	.LBI6641:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8529              		.loc 25 491 7 view .LVU1951
 8530              	.LBB6642:
 8531              	.LBI6642:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8532              		.loc 22 120 7 view .LVU1952
 8533              	.LBE6642:
 8534              	.LBE6641:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8535              		.loc 19 237 34 is_stmt 0 view .LVU1953
 8536 0062 F168     		ldr	r1, [r6, #12]
 8537              	.LBB6645:
 8538              	.LBB6644:
 8539              	.LBB6643:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8540              		.loc 22 133 19 view .LVU1954
 8541 0064 0131     		adds	r1, r1, #1
 8542              	.LVL585:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8543              		.loc 22 133 19 view .LVU1955
 8544 0066 FFF7FEFF 		bl	_ZdlPvj
 8545              	.LVL586:
 8546              	.L507:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8547              		.loc 22 133 19 view .LVU1956
 8548              	.LBE6643:
 8549              	.LBE6644:
 8550              	.LBE6645:
 8551              	.LBE6640:
 8552              	.LBE6639:
 8553              	.LBE6633:
 8554              	.LBE6632:
 8555              	.LBB6646:
 8556              	.LBI6646:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8557              		.loc 19 150 14 is_stmt 1 view .LVU1957
 8558              	.LBB6647:
 8559              	.LBI6647:
 8560              		.loc 21 162 7 view .LVU1958
 8561              	.LBB6648:
 8562              	.LBI6648:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8563              		.loc 22 89 7 view .LVU1959
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8564              		.loc 22 89 7 is_stmt 0 view .LVU1960
 8565              	.LBE6648:
 8566              	.LBE6647:
 8567              	.LBE6646:
 8568              	.LBE6631:
 8569              		.loc 28 21 11 view .LVU1961
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 361


 8570 006a 3046     		mov	r0, r6
 8571 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8572              		.loc 28 21 11 view .LVU1962
 8573              		.cfi_endproc
 8574              	.LFE5107:
 8576              		.weak	_ZN10jellybeans8MenuItemD1Ev
 8577              		.thumb_set _ZN10jellybeans8MenuItemD1Ev,_ZN10jellybeans8MenuItemD2Ev
 8578 006e 00BF     		.section	.text._Z14UpdateControlsv,"ax",%progbits
 8579              		.align	1
 8580              		.p2align 2,,3
 8581              		.global	_Z14UpdateControlsv
 8582              		.syntax unified
 8583              		.thumb
 8584              		.thumb_func
 8585              		.fpu fpv5-d16
 8587              	_Z14UpdateControlsv:
 8588              	.LFB5120:
 103:Jellybeans.cpp **** 
 104:Jellybeans.cpp **** 
 105:Jellybeans.cpp **** int main(void) {
 106:Jellybeans.cpp ****     // Initialize hardware
 107:Jellybeans.cpp ****     patch.Init();
 108:Jellybeans.cpp **** 
 109:Jellybeans.cpp ****     // Initialize arp
 110:Jellybeans.cpp ****     myArp = new Arp();
 111:Jellybeans.cpp **** 
 112:Jellybeans.cpp ****     // Initialize menu items
 113:Jellybeans.cpp ****     // Note that the positions of items 0-3 need to remain fixed
 114:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cb);
 115:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 116:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cb);
 117:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 118:Jellybeans.cpp ****     menuItems[4] = MenuItem("Tonic    ", allNotes,       0, cb);
 119:Jellybeans.cpp ****     menuItems[5] = MenuItem("Scale    ", modes,          0, cb);
 120:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", arpRhythms,     0, cb); // Rhythm
 121:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 122:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cb);
 123:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 124:Jellybeans.cpp **** 
 125:Jellybeans.cpp ****     // Initialize CV params
 126:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 127:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 128:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 129:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 130:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 131:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 132:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 133:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 134:Jellybeans.cpp **** 
 135:Jellybeans.cpp ****     // Initialize variables
 136:Jellybeans.cpp ****     arpNoteDacOutput1 = 0.f;
 137:Jellybeans.cpp ****     trigOut     = false;
 138:Jellybeans.cpp ****     menuPos     = 0;
 139:Jellybeans.cpp ****     isEditing   = false;
 140:Jellybeans.cpp ****     //debugString = "I'm a debug string";
 141:Jellybeans.cpp ****     debugString = myArp->chord->myString;
 142:Jellybeans.cpp **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 362


 143:Jellybeans.cpp ****     patch.StartAdc();
 144:Jellybeans.cpp **** 
 145:Jellybeans.cpp ****     // Main event loop
 146:Jellybeans.cpp ****     while(1){
 147:Jellybeans.cpp ****         UpdateControls();
 148:Jellybeans.cpp ****         UpdateOled();
 149:Jellybeans.cpp ****         //UpdateOutputs();
 150:Jellybeans.cpp ****     }
 151:Jellybeans.cpp **** }
 152:Jellybeans.cpp **** 
 153:Jellybeans.cpp **** // Handle any input to Patches' controls
 154:Jellybeans.cpp **** void UpdateControls() {
 8589              		.loc 14 154 23 is_stmt 1 view -0
 8590              		.cfi_startproc
 8591              		@ args = 0, pretend = 0, frame = 0
 8592              		@ frame_needed = 0, uses_anonymous_args = 0
 155:Jellybeans.cpp ****     patch.ProcessAnalogControls();
 8593              		.loc 14 155 5 view .LVU1964
 154:Jellybeans.cpp ****     patch.ProcessAnalogControls();
 8594              		.loc 14 154 23 is_stmt 0 view .LVU1965
 8595 0000 38B5     		push	{r3, r4, r5, lr}
 8596              		.cfi_def_cfa_offset 16
 8597              		.cfi_offset 3, -16
 8598              		.cfi_offset 4, -12
 8599              		.cfi_offset 5, -8
 8600              		.cfi_offset 14, -4
 8601              		.loc 14 155 32 view .LVU1966
 8602 0002 4148     		ldr	r0, .L531
 8603 0004 FFF7FEFF 		bl	_ZN5daisy10DaisyPatch21ProcessAnalogControlsEv
 8604              	.LVL587:
 156:Jellybeans.cpp ****     patch.ProcessDigitalControls();
 8605              		.loc 14 156 5 is_stmt 1 view .LVU1967
 8606              		.loc 14 156 33 is_stmt 0 view .LVU1968
 8607 0008 3F48     		ldr	r0, .L531
 8608 000a FFF7FEFF 		bl	_ZN5daisy10DaisyPatch22ProcessDigitalControlsEv
 8609              	.LVL588:
 157:Jellybeans.cpp **** 
 158:Jellybeans.cpp ****     // Parse CV values
 159:Jellybeans.cpp ****     int curCvVal;
 8610              		.loc 14 159 5 is_stmt 1 view .LVU1969
 160:Jellybeans.cpp ****     // Pattern
 161:Jellybeans.cpp ****     curCvVal = static_cast<int>(patternParam.Process());
 8611              		.loc 14 161 5 view .LVU1970
 8612              		.loc 14 161 53 is_stmt 0 view .LVU1971
 8613 000e 3F48     		ldr	r0, .L531+4
 8614 0010 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 8615              	.LVL589:
 8616              		.loc 14 161 14 view .LVU1972
 8617 0014 FDEEC07A 		vcvt.s32.f32	s15, s0
 162:Jellybeans.cpp ****     if(curCvVal != patternCurCvVal){
 8618              		.loc 14 162 17 view .LVU1973
 8619 0018 3D4D     		ldr	r5, .L531+8
 161:Jellybeans.cpp ****     if(curCvVal != patternCurCvVal){
 8620              		.loc 14 161 14 view .LVU1974
 8621 001a 17EE904A 		vmov	r4, s15	@ int
 8622              	.LVL590:
 8623              		.loc 14 162 5 is_stmt 1 view .LVU1975
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 363


 8624 001e 2B68     		ldr	r3, [r5]
 8625 0020 A342     		cmp	r3, r4
 8626 0022 05D0     		beq	.L517
 163:Jellybeans.cpp ****         menuItems[0].SetIndex(curCvVal);
 8627              		.loc 14 163 9 view .LVU1976
 8628              	.LVL591:
 8629              	.LBB6649:
 8630              	.LBI6649:
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef _Tp 	    			      value_type;
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef value_type*			      pointer;
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef const value_type*                       const_pointer;
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef value_type&                   	      reference;
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef const value_type&             	      const_reference;
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef value_type*          		      iterator;
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef const value_type*			      const_iterator;
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::size_t                    	      size_type;
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::ptrdiff_t                   	      difference_type;
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::reverse_iterator<iterator>	      reverse_iterator;
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // Support for zero-sized arrays mandatory.
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef _GLIBCXX_STD_C::__array_traits<_Tp, _Nm> _AT_Type;
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typename _AT_Type::_Type                         _M_elems;
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // No explicit construct/copy/destroy for aggregate type.
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // DR 776.
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX20_CONSTEXPR void
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       fill(const value_type& __u)
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { std::fill_n(begin(), size(), __u); }
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX20_CONSTEXPR void
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       swap(array& __other)
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       noexcept(_AT_Type::_Is_nothrow_swappable::value)
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { std::swap_ranges(begin(), end(), __other.begin()); }
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // Iterators.
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR iterator
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       begin() noexcept
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return iterator(data()); }
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       begin() const noexcept
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data()); }
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR iterator
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       end() noexcept
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return iterator(data() + _Nm); }
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       end() const noexcept
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data() + _Nm); }
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       rbegin() noexcept
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return reverse_iterator(end()); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 364


 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       rbegin() const noexcept
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(end()); }
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       rend() noexcept
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return reverse_iterator(begin()); }
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       rend() const noexcept
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(begin()); }
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       cbegin() const noexcept
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data()); }
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       cend() const noexcept
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data() + _Nm); }
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       crbegin() const noexcept
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(end()); }
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       crend() const noexcept
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(begin()); }
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // Capacity.
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       constexpr size_type
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       size() const noexcept { return _Nm; }
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       constexpr size_type
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       max_size() const noexcept { return _Nm; }
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX_NODISCARD constexpr bool
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       empty() const noexcept { return size() == 0; }
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // Element access.
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR reference
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       operator[](size_type __n) noexcept
 8631              		.loc 24 185 7 view .LVU1977
 8632              	.LBB6650:
 8633              	.LBI6650:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8634              		.loc 24 55 7 view .LVU1978
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8635              		.loc 24 55 7 is_stmt 0 view .LVU1979
 8636              	.LBE6650:
 8637              	.LBE6649:
 8638              		.loc 14 163 30 view .LVU1980
 8639 0024 17EE901A 		vmov	r1, s15	@ int
 8640 0028 3A48     		ldr	r0, .L531+12
 8641 002a FFF7FEFF 		bl	_ZN10jellybeans8MenuItem8SetIndexEi
 8642              	.LVL592:
 164:Jellybeans.cpp ****         patternCurCvVal = curCvVal;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 365


 8643              		.loc 14 164 9 is_stmt 1 view .LVU1981
 8644              		.loc 14 164 25 is_stmt 0 view .LVU1982
 8645 002e 2C60     		str	r4, [r5]
 8646              	.L517:
 165:Jellybeans.cpp ****     }
 166:Jellybeans.cpp ****     // Division
 167:Jellybeans.cpp ****     curCvVal = static_cast<int>(divisionParam.Process());
 8647              		.loc 14 167 5 is_stmt 1 view .LVU1983
 8648              		.loc 14 167 54 is_stmt 0 view .LVU1984
 8649 0030 3948     		ldr	r0, .L531+16
 8650 0032 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 8651              	.LVL593:
 8652              		.loc 14 167 14 view .LVU1985
 8653 0036 FDEEC07A 		vcvt.s32.f32	s15, s0
 168:Jellybeans.cpp ****     if(curCvVal != divisionCurCvVal){
 8654              		.loc 14 168 17 view .LVU1986
 8655 003a 384D     		ldr	r5, .L531+20
 167:Jellybeans.cpp ****     if(curCvVal != divisionCurCvVal){
 8656              		.loc 14 167 14 view .LVU1987
 8657 003c 17EE904A 		vmov	r4, s15	@ int
 8658              	.LVL594:
 8659              		.loc 14 168 5 is_stmt 1 view .LVU1988
 8660 0040 2B68     		ldr	r3, [r5]
 8661 0042 A342     		cmp	r3, r4
 8662 0044 05D0     		beq	.L518
 169:Jellybeans.cpp ****         menuItems[1].SetIndex(curCvVal);
 8663              		.loc 14 169 9 view .LVU1989
 8664              	.LVL595:
 8665              	.LBB6651:
 8666              	.LBI6651:
 8667              		.loc 24 185 7 view .LVU1990
 8668              	.LBB6652:
 8669              	.LBI6652:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8670              		.loc 24 55 7 view .LVU1991
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8671              		.loc 24 55 7 is_stmt 0 view .LVU1992
 8672              	.LBE6652:
 8673              	.LBE6651:
 8674              		.loc 14 169 30 view .LVU1993
 8675 0046 17EE901A 		vmov	r1, s15	@ int
 8676 004a 3548     		ldr	r0, .L531+24
 8677 004c FFF7FEFF 		bl	_ZN10jellybeans8MenuItem8SetIndexEi
 8678              	.LVL596:
 170:Jellybeans.cpp ****         divisionCurCvVal = curCvVal;
 8679              		.loc 14 170 9 is_stmt 1 view .LVU1994
 8680              		.loc 14 170 26 is_stmt 0 view .LVU1995
 8681 0050 2C60     		str	r4, [r5]
 8682              	.L518:
 171:Jellybeans.cpp ****     }
 172:Jellybeans.cpp ****     // Voicing
 173:Jellybeans.cpp ****     curCvVal = static_cast<int>(voicingParam.Process());
 8683              		.loc 14 173 5 is_stmt 1 view .LVU1996
 8684              		.loc 14 173 53 is_stmt 0 view .LVU1997
 8685 0052 3448     		ldr	r0, .L531+28
 8686 0054 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 8687              	.LVL597:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 366


 8688              		.loc 14 173 14 view .LVU1998
 8689 0058 FDEEC07A 		vcvt.s32.f32	s15, s0
 174:Jellybeans.cpp ****     if(curCvVal != voicingCurCvVal){
 8690              		.loc 14 174 17 view .LVU1999
 8691 005c 324D     		ldr	r5, .L531+32
 173:Jellybeans.cpp ****     if(curCvVal != voicingCurCvVal){
 8692              		.loc 14 173 14 view .LVU2000
 8693 005e 17EE904A 		vmov	r4, s15	@ int
 8694              	.LVL598:
 8695              		.loc 14 174 5 is_stmt 1 view .LVU2001
 8696 0062 2B68     		ldr	r3, [r5]
 8697 0064 A342     		cmp	r3, r4
 8698 0066 05D0     		beq	.L519
 175:Jellybeans.cpp ****         menuItems[2].SetIndex(curCvVal);
 8699              		.loc 14 175 9 view .LVU2002
 8700              	.LVL599:
 8701              	.LBB6653:
 8702              	.LBI6653:
 8703              		.loc 24 185 7 view .LVU2003
 8704              	.LBB6654:
 8705              	.LBI6654:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8706              		.loc 24 55 7 view .LVU2004
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8707              		.loc 24 55 7 is_stmt 0 view .LVU2005
 8708              	.LBE6654:
 8709              	.LBE6653:
 8710              		.loc 14 175 30 view .LVU2006
 8711 0068 17EE901A 		vmov	r1, s15	@ int
 8712 006c 2F48     		ldr	r0, .L531+36
 8713 006e FFF7FEFF 		bl	_ZN10jellybeans8MenuItem8SetIndexEi
 8714              	.LVL600:
 176:Jellybeans.cpp ****         voicingCurCvVal = curCvVal;
 8715              		.loc 14 176 9 is_stmt 1 view .LVU2007
 8716              		.loc 14 176 25 is_stmt 0 view .LVU2008
 8717 0072 2C60     		str	r4, [r5]
 8718              	.L519:
 177:Jellybeans.cpp ****     }
 178:Jellybeans.cpp ****     // Inversion
 179:Jellybeans.cpp ****     curCvVal = static_cast<int>(inversionParam.Process());
 8719              		.loc 14 179 5 is_stmt 1 view .LVU2009
 8720              		.loc 14 179 55 is_stmt 0 view .LVU2010
 8721 0074 2E48     		ldr	r0, .L531+40
 8722 0076 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 8723              	.LVL601:
 8724              		.loc 14 179 14 view .LVU2011
 8725 007a FDEEC07A 		vcvt.s32.f32	s15, s0
 180:Jellybeans.cpp ****     if(curCvVal != inversionCurCvVal){
 8726              		.loc 14 180 17 view .LVU2012
 8727 007e 2D4D     		ldr	r5, .L531+44
 179:Jellybeans.cpp ****     if(curCvVal != inversionCurCvVal){
 8728              		.loc 14 179 14 view .LVU2013
 8729 0080 17EE904A 		vmov	r4, s15	@ int
 8730              	.LVL602:
 8731              		.loc 14 180 5 is_stmt 1 view .LVU2014
 8732 0084 2B68     		ldr	r3, [r5]
 8733 0086 A342     		cmp	r3, r4
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 367


 8734 0088 05D0     		beq	.L520
 181:Jellybeans.cpp ****         menuItems[3].SetIndex(curCvVal);
 8735              		.loc 14 181 9 view .LVU2015
 8736              	.LVL603:
 8737              	.LBB6655:
 8738              	.LBI6655:
 8739              		.loc 24 185 7 view .LVU2016
 8740              	.LBB6656:
 8741              	.LBI6656:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8742              		.loc 24 55 7 view .LVU2017
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8743              		.loc 24 55 7 is_stmt 0 view .LVU2018
 8744              	.LBE6656:
 8745              	.LBE6655:
 8746              		.loc 14 181 30 view .LVU2019
 8747 008a 17EE901A 		vmov	r1, s15	@ int
 8748 008e 2A48     		ldr	r0, .L531+48
 8749 0090 FFF7FEFF 		bl	_ZN10jellybeans8MenuItem8SetIndexEi
 8750              	.LVL604:
 182:Jellybeans.cpp ****         inversionCurCvVal = curCvVal;
 8751              		.loc 14 182 9 is_stmt 1 view .LVU2020
 8752              		.loc 14 182 27 is_stmt 0 view .LVU2021
 8753 0094 2C60     		str	r4, [r5]
 8754              	.L520:
 183:Jellybeans.cpp ****     }
 184:Jellybeans.cpp **** 
 185:Jellybeans.cpp ****     if(!isEditing)
 8755              		.loc 14 185 5 is_stmt 1 view .LVU2022
 8756              	.LBB6657:
 8757              		.loc 14 185 8 is_stmt 0 view .LVU2023
 8758 0096 294C     		ldr	r4, .L531+52
 8759              	.LVL605:
 8760              		.loc 14 185 5 view .LVU2024
 8761 0098 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 8762 009a 9BB9     		cbnz	r3, .L521
 186:Jellybeans.cpp ****     {
 187:Jellybeans.cpp ****         // Update menu position
 188:Jellybeans.cpp ****         menuPos += patch.encoder.Increment();
 8763              		.loc 14 188 9 is_stmt 1 view .LVU2025
 8764              	.LVL606:
 8765              	.LBB6658:
 8766              	.LBI6658:
  22:../../libdaisy/src/hid/encoder.h **** 
  23:../../libdaisy/src/hid/encoder.h ****     /** Initializes the encoder with the specified hardware pins.
  24:../../libdaisy/src/hid/encoder.h ****      * Update rate is to be deprecated in a future release
  25:../../libdaisy/src/hid/encoder.h ****      */
  26:../../libdaisy/src/hid/encoder.h ****     void Init(dsy_gpio_pin a,
  27:../../libdaisy/src/hid/encoder.h ****               dsy_gpio_pin b,
  28:../../libdaisy/src/hid/encoder.h ****               dsy_gpio_pin click,
  29:../../libdaisy/src/hid/encoder.h ****               float        update_rate = 0.f);
  30:../../libdaisy/src/hid/encoder.h ****     /** Called at update_rate to debounce and handle timing for the switch.
  31:../../libdaisy/src/hid/encoder.h ****      * In order for events not to be missed, its important that the Edge/Pressed checks be made at 
  32:../../libdaisy/src/hid/encoder.h ****      */
  33:../../libdaisy/src/hid/encoder.h ****     void Debounce();
  34:../../libdaisy/src/hid/encoder.h **** 
  35:../../libdaisy/src/hid/encoder.h ****     /** Returns +1 if the encoder was turned clockwise, -1 if it was turned counter-clockwise, or 0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 368


  36:../../libdaisy/src/hid/encoder.h ****     inline int32_t Increment() const { return inc_; }
 8767              		.loc 7 36 20 view .LVU2026
 8768              	.LBB6659:
 8769              		.loc 7 36 40 view .LVU2027
 8770              		.loc 7 36 40 is_stmt 0 view .LVU2028
 8771              	.LBE6659:
 8772              	.LBE6658:
 8773              		.loc 14 188 17 view .LVU2029
 8774 009c 2849     		ldr	r1, .L531+56
 8775              	.LBB6661:
 8776              	.LBB6660:
 8777              		.loc 7 36 47 view .LVU2030
 8778 009e 1A4D     		ldr	r5, .L531
 8779              	.LBE6660:
 8780              	.LBE6661:
 8781              		.loc 14 188 17 view .LVU2031
 8782 00a0 0A68     		ldr	r2, [r1]
 8783 00a2 686D     		ldr	r0, [r5, #84]
 8784 00a4 0244     		add	r2, r2, r0
 189:Jellybeans.cpp ****     
 190:Jellybeans.cpp ****         if (menuPos > (int) menuItems.size() - 1) {
 8785              		.loc 14 190 9 is_stmt 1 view .LVU2032
 8786 00a6 092A     		cmp	r2, #9
 8787 00a8 1BDC     		bgt	.L529
 191:Jellybeans.cpp ****             menuPos = (int) menuItems.size() - 1;
 192:Jellybeans.cpp ****         } else if (menuPos <= 0) {
 8788              		.loc 14 192 16 view .LVU2033
 188:Jellybeans.cpp ****     
 8789              		.loc 14 188 17 is_stmt 0 view .LVU2034
 8790 00aa 002A     		cmp	r2, #0
 8791 00ac C8BF     		it	gt
 8792 00ae 1346     		movgt	r3, r2
 8793 00b0 0B60     		str	r3, [r1]
 8794              	.L523:
 193:Jellybeans.cpp ****             menuPos = 0;
 194:Jellybeans.cpp ****         }
 195:Jellybeans.cpp **** 
 196:Jellybeans.cpp ****         isEditing = patch.encoder.RisingEdge() ? true : false; // TODO fix lmao
 8795              		.loc 14 196 9 is_stmt 1 view .LVU2035
 8796              	.LVL607:
 8797              	.LBB6662:
 8798              	.LBI6662:
  37:../../libdaisy/src/hid/encoder.h **** 
  38:../../libdaisy/src/hid/encoder.h ****     /** Returns true if the encoder was just pressed. */
  39:../../libdaisy/src/hid/encoder.h ****     inline bool RisingEdge() const { return sw_.RisingEdge(); }
 8799              		.loc 7 39 17 view .LVU2036
 8800              	.LBE6662:
 8801              	.LBE6657:
 8802              		.loc 7 39 38 view .LVU2037
 8803              	.LBB6685:
 8804              	.LBB6665:
 8805              	.LBB6663:
 8806              	.LBI6663:
  43:../../libdaisy/src/hid/switch.h **** 
  44:../../libdaisy/src/hid/switch.h ****     /** 
  45:../../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 369


  47:../../libdaisy/src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../../libdaisy/src/hid/switch.h ****     */
  52:../../libdaisy/src/hid/switch.h ****     void
  53:../../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../libdaisy/src/hid/switch.h **** 
  55:../../libdaisy/src/hid/switch.h ****     /**
  56:../../libdaisy/src/hid/switch.h ****        Simplified Init.
  57:../../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../../libdaisy/src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../libdaisy/src/hid/switch.h ****     */
  60:../../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../../libdaisy/src/hid/switch.h **** 
  62:../../libdaisy/src/hid/switch.h ****     /** 
  63:../../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../libdaisy/src/hid/switch.h ****     */
  67:../../libdaisy/src/hid/switch.h ****     void Debounce();
  68:../../libdaisy/src/hid/switch.h **** 
  69:../../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 8807              		.loc 8 70 17 view .LVU2038
 8808              	.LBB6664:
 8809              		.loc 8 70 38 view .LVU2039
 8810              		.loc 8 70 55 is_stmt 0 view .LVU2040
 8811 00b2 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 8812 00b6 A3F17F03 		sub	r3, #127
 8813 00ba B3FA83F3 		clz	r3, r3
 8814 00be 5B09     		lsrs	r3, r3, #5
 8815 00c0 2370     		strb	r3, [r4]
 8816              	.LBE6664:
 8817              	.LBE6663:
 8818              	.LBE6665:
 8819              	.LBE6685:
 197:Jellybeans.cpp ****     }
 198:Jellybeans.cpp ****     else
 199:Jellybeans.cpp ****     {
 200:Jellybeans.cpp ****         // Update selected menu item's value
 201:Jellybeans.cpp ****         int inc = patch.encoder.Increment();
 202:Jellybeans.cpp ****         if (inc > 0){
 203:Jellybeans.cpp ****             menuItems[menuPos].Increment();
 204:Jellybeans.cpp ****         } else if (inc < 0){
 205:Jellybeans.cpp ****             menuItems[menuPos].Decrement();
 206:Jellybeans.cpp ****         }
 207:Jellybeans.cpp **** 
 208:Jellybeans.cpp ****         isEditing = patch.encoder.RisingEdge() ? false : true;// TODO fix lmao
 209:Jellybeans.cpp ****     }
 210:Jellybeans.cpp **** 
 211:Jellybeans.cpp ****     // // Update step with respect to clock
 212:Jellybeans.cpp ****     // //
 213:Jellybeans.cpp ****     // // Currently, we'll just do 1 step per clock pulse
 214:Jellybeans.cpp ****     // if(patch.gate_input[0].Trig() || patch.gate_input[1].Trig())
 215:Jellybeans.cpp ****     // {
 216:Jellybeans.cpp ****     //     myArp.UpdateStep();
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 370


 217:Jellybeans.cpp ****     // }
 218:Jellybeans.cpp **** }
 8820              		.loc 14 218 1 view .LVU2041
 8821 00c2 38BD     		pop	{r3, r4, r5, pc}
 8822              	.L521:
 8823              	.LBB6686:
 8824              	.LBB6666:
 201:Jellybeans.cpp ****         if (inc > 0){
 8825              		.loc 14 201 9 is_stmt 1 view .LVU2042
 8826              	.LVL608:
 8827              	.LBB6667:
 8828              	.LBI6667:
  36:../../libdaisy/src/hid/encoder.h **** 
 8829              		.loc 7 36 20 view .LVU2043
 8830              	.LBB6668:
  36:../../libdaisy/src/hid/encoder.h **** 
 8831              		.loc 7 36 40 view .LVU2044
  36:../../libdaisy/src/hid/encoder.h **** 
 8832              		.loc 7 36 47 is_stmt 0 view .LVU2045
 8833 00c4 104D     		ldr	r5, .L531
 8834 00c6 6B6D     		ldr	r3, [r5, #84]
 8835              	.LVL609:
  36:../../libdaisy/src/hid/encoder.h **** 
 8836              		.loc 7 36 47 view .LVU2046
 8837              	.LBE6668:
 8838              	.LBE6667:
 202:Jellybeans.cpp ****             menuItems[menuPos].Increment();
 8839              		.loc 14 202 9 is_stmt 1 view .LVU2047
 8840 00c8 002B     		cmp	r3, #0
 8841 00ca 0DDC     		bgt	.L530
 204:Jellybeans.cpp ****             menuItems[menuPos].Decrement();
 8842              		.loc 14 204 16 view .LVU2048
 8843 00cc 15D0     		beq	.L527
 205:Jellybeans.cpp ****         }
 8844              		.loc 14 205 13 view .LVU2049
 8845              	.LVL610:
 8846              	.LBB6669:
 8847              	.LBI6669:
 8848              		.loc 24 185 7 view .LVU2050
 8849              	.LBB6670:
 8850              	.LBI6670:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8851              		.loc 24 55 7 view .LVU2051
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8852              		.loc 24 55 7 is_stmt 0 view .LVU2052
 8853              	.LBE6670:
 8854              	.LBE6669:
 205:Jellybeans.cpp ****         }
 8855              		.loc 14 205 30 view .LVU2053
 8856 00ce 1C4B     		ldr	r3, .L531+56
 8857              	.LVL611:
 8858              	.LBB6673:
 8859              	.LBB6672:
 8860              	.LBB6671:
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 8861              		.loc 24 56 41 view .LVU2054
 8862 00d0 1048     		ldr	r0, .L531+12
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 371


 8863 00d2 1B68     		ldr	r3, [r3]
 8864 00d4 03EB8303 		add	r3, r3, r3, lsl #2
 8865              	.LBE6671:
 8866              	.LBE6672:
 8867              	.LBE6673:
 205:Jellybeans.cpp ****         }
 8868              		.loc 14 205 41 view .LVU2055
 8869 00d8 00EB0310 		add	r0, r0, r3, lsl #4
 8870 00dc FFF7FEFF 		bl	_ZN10jellybeans8MenuItem9DecrementEv
 8871              	.LVL612:
 205:Jellybeans.cpp ****         }
 8872              		.loc 14 205 41 view .LVU2056
 8873 00e0 0BE0     		b	.L527
 8874              	.L529:
 205:Jellybeans.cpp ****         }
 8875              		.loc 14 205 41 view .LVU2057
 8876              	.LBE6666:
 191:Jellybeans.cpp ****         } else if (menuPos <= 0) {
 8877              		.loc 14 191 13 is_stmt 1 view .LVU2058
 191:Jellybeans.cpp ****         } else if (menuPos <= 0) {
 8878              		.loc 14 191 21 is_stmt 0 view .LVU2059
 8879 00e2 0923     		movs	r3, #9
 8880 00e4 0B60     		str	r3, [r1]
 8881 00e6 E4E7     		b	.L523
 8882              	.LVL613:
 8883              	.L530:
 8884              	.LBB6683:
 203:Jellybeans.cpp ****         } else if (inc < 0){
 8885              		.loc 14 203 13 is_stmt 1 view .LVU2060
 8886              	.LBB6674:
 8887              	.LBI6674:
 8888              		.loc 24 185 7 view .LVU2061
 8889              	.LBB6675:
 8890              	.LBI6675:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8891              		.loc 24 55 7 view .LVU2062
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 8892              		.loc 24 55 7 is_stmt 0 view .LVU2063
 8893              	.LBE6675:
 8894              	.LBE6674:
 203:Jellybeans.cpp ****         } else if (inc < 0){
 8895              		.loc 14 203 30 view .LVU2064
 8896 00e8 154B     		ldr	r3, .L531+56
 8897              	.LVL614:
 8898              	.LBB6678:
 8899              	.LBB6677:
 8900              	.LBB6676:
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 8901              		.loc 24 56 41 view .LVU2065
 8902 00ea 0A48     		ldr	r0, .L531+12
 8903 00ec 1B68     		ldr	r3, [r3]
 8904 00ee 03EB8303 		add	r3, r3, r3, lsl #2
 8905              	.LBE6676:
 8906              	.LBE6677:
 8907              	.LBE6678:
 203:Jellybeans.cpp ****         } else if (inc < 0){
 8908              		.loc 14 203 41 view .LVU2066
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 372


 8909 00f2 00EB0310 		add	r0, r0, r3, lsl #4
 8910 00f6 FFF7FEFF 		bl	_ZN10jellybeans8MenuItem9IncrementEv
 8911              	.LVL615:
 8912              	.L527:
 208:Jellybeans.cpp ****     }
 8913              		.loc 14 208 9 is_stmt 1 view .LVU2067
 8914              	.LBB6679:
 8915              	.LBI6679:
 8916              		.loc 7 39 17 view .LVU2068
 8917              	.LBE6679:
 8918              	.LBE6683:
 8919              	.LBE6686:
 8920              		.loc 7 39 38 view .LVU2069
 8921              	.LBB6687:
 8922              	.LBB6684:
 8923              	.LBB6682:
 8924              	.LBB6680:
 8925              	.LBI6680:
 8926              		.loc 8 70 17 view .LVU2070
 8927              	.LBB6681:
 8928              		.loc 8 70 38 view .LVU2071
 8929              		.loc 8 70 38 is_stmt 0 view .LVU2072
 8930              	.LBE6681:
 8931              	.LBE6680:
 8932              	.LBE6682:
 208:Jellybeans.cpp ****     }
 8933              		.loc 14 208 48 view .LVU2073
 8934 00fa 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 8935 00fe 7F3B     		subs	r3, r3, #127
 8936 0100 18BF     		it	ne
 8937 0102 0123     		movne	r3, #1
 8938 0104 2370     		strb	r3, [r4]
 8939              	.LBE6684:
 8940              	.LBE6687:
 8941              		.loc 14 218 1 view .LVU2074
 8942 0106 38BD     		pop	{r3, r4, r5, pc}
 8943              	.L532:
 8944              		.align	2
 8945              	.L531:
 8946 0108 00000000 		.word	patch
 8947 010c 00000000 		.word	.LANCHOR0
 8948 0110 00000000 		.word	.LANCHOR1
 8949 0114 00000000 		.word	.LANCHOR2
 8950 0118 00000000 		.word	.LANCHOR3
 8951 011c 00000000 		.word	.LANCHOR4
 8952 0120 50000000 		.word	.LANCHOR2+80
 8953 0124 00000000 		.word	.LANCHOR5
 8954 0128 00000000 		.word	.LANCHOR6
 8955 012c A0000000 		.word	.LANCHOR2+160
 8956 0130 00000000 		.word	.LANCHOR7
 8957 0134 00000000 		.word	.LANCHOR8
 8958 0138 F0000000 		.word	.LANCHOR2+240
 8959 013c 00000000 		.word	.LANCHOR9
 8960 0140 00000000 		.word	.LANCHOR10
 8961              		.cfi_endproc
 8962              	.LFE5120:
 8964              		.section	.text._Z10DrawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii,"ax",%progbits
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 373


 8965              		.align	1
 8966              		.p2align 2,,3
 8967              		.global	_Z10DrawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
 8968              		.syntax unified
 8969              		.thumb
 8970              		.thumb_func
 8971              		.fpu fpv5-d16
 8973              	_Z10DrawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii:
 8974              	.LVL616:
 8975              	.LFB5123:
 219:Jellybeans.cpp **** 
 220:Jellybeans.cpp **** // Update Patches' screen
 221:Jellybeans.cpp **** //
 222:Jellybeans.cpp **** // Display on Daisy Patch is 128x64p
 223:Jellybeans.cpp **** // With 7x10 font, this means it's limited to:
 224:Jellybeans.cpp **** //  - 18 chars horizontally (w/2p to spare)
 225:Jellybeans.cpp **** //  - 6 chars vertically (w/4p to spare)
 226:Jellybeans.cpp **** void UpdateOled() {
 227:Jellybeans.cpp ****     // Clear display
 228:Jellybeans.cpp ****     patch.display.Fill(false);  
 229:Jellybeans.cpp **** 
 230:Jellybeans.cpp ****     // Draw the top bar
 231:Jellybeans.cpp ****     //DrawString(myArp.string, 0, 0);
 232:Jellybeans.cpp ****     patch.display.DrawLine(0, 11, 128, 11, true);
 233:Jellybeans.cpp **** 
 234:Jellybeans.cpp ****     // Draw the cursor indicator
 235:Jellybeans.cpp ****     DrawString(">", 0, 11);
 236:Jellybeans.cpp **** 
 237:Jellybeans.cpp ****     int listSize = 5;
 238:Jellybeans.cpp **** 
 239:Jellybeans.cpp ****     if (debugMode){
 240:Jellybeans.cpp ****         // If in debug mode, reserve the bottom menu item's space for debug data
 241:Jellybeans.cpp ****         listSize--;
 242:Jellybeans.cpp ****         patch.display.DrawLine(0, 53, 128, 53, true);
 243:Jellybeans.cpp ****         DrawString(debugString, 2, 54);
 244:Jellybeans.cpp ****     }
 245:Jellybeans.cpp **** 
 246:Jellybeans.cpp ****     // Draw each menu item
 247:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 248:Jellybeans.cpp ****         if (i < (int) menuItems.size()){
 249:Jellybeans.cpp ****             DrawString(menuItems[i].DisplayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 250:Jellybeans.cpp ****         }    
 251:Jellybeans.cpp ****     }
 252:Jellybeans.cpp **** 
 253:Jellybeans.cpp ****     // Write display buffer to OLED
 254:Jellybeans.cpp ****     patch.display.Update();
 255:Jellybeans.cpp **** }
 256:Jellybeans.cpp **** 
 257:Jellybeans.cpp **** // Updates Patches' output values
 258:Jellybeans.cpp **** // void UpdateOutputs()
 259:Jellybeans.cpp **** // {
 260:Jellybeans.cpp **** //     patch.seed.dac.WriteValue(DacHandle::Channel::ONE, arpNoteDacOutput1);
 261:Jellybeans.cpp **** 
 262:Jellybeans.cpp **** //     dsy_gpio_write(&patch.gate_output, trigOut);
 263:Jellybeans.cpp **** //     trigOut = false;
 264:Jellybeans.cpp **** // }
 265:Jellybeans.cpp **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 374


 266:Jellybeans.cpp **** /*
 267:Jellybeans.cpp ****  * Utility functions
 268:Jellybeans.cpp ****  */
 269:Jellybeans.cpp **** 
 270:Jellybeans.cpp **** // Utility to perform a silly little dance where we set the cursor, 
 271:Jellybeans.cpp **** // convert a std::string to char*, and pass it to WriteString()
 272:Jellybeans.cpp **** void DrawString(std::string str, int x, int y){
 8976              		.loc 14 272 47 is_stmt 1 view -0
 8977              		.cfi_startproc
 8978              		@ args = 0, pretend = 0, frame = 16
 8979              		@ frame_needed = 0, uses_anonymous_args = 0
 273:Jellybeans.cpp ****     patch.display.SetCursor(x, y);
 8980              		.loc 14 273 5 view .LVU2076
 8981              	.LBB6729:
 8982              	.LBI6729:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 8983              		.loc 5 171 10 view .LVU2077
 8984              	.LBB6730:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 8985              		.loc 5 173 9 view .LVU2078
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 8986              		.loc 5 173 19 is_stmt 0 view .LVU2079
 8987 0000 89B2     		uxth	r1, r1
 8988              	.LVL617:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 8989              		.loc 5 173 19 view .LVU2080
 8990 0002 4A4B     		ldr	r3, .L555
 174:../../libdaisy/src/hid/disp/display.h ****     }
 8991              		.loc 5 174 19 view .LVU2081
 8992 0004 92B2     		uxth	r2, r2
 8993              	.LVL618:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 8994              		.loc 5 173 19 view .LVU2082
 8995 0006 7F29     		cmp	r1, #127
 8996 0008 28BF     		it	cs
 8997 000a 7F21     		movcs	r1, #127
 8998              	.LVL619:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 8999              		.loc 5 174 19 view .LVU2083
 9000 000c 3F2A     		cmp	r2, #63
 9001              	.LBE6730:
 9002              	.LBE6729:
 272:Jellybeans.cpp ****     patch.display.SetCursor(x, y);
 9003              		.loc 14 272 47 view .LVU2084
 9004 000e 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 9005              		.cfi_def_cfa_offset 36
 9006              		.cfi_offset 4, -36
 9007              		.cfi_offset 5, -32
 9008              		.cfi_offset 6, -28
 9009              		.cfi_offset 7, -24
 9010              		.cfi_offset 8, -20
 9011              		.cfi_offset 9, -16
 9012              		.cfi_offset 10, -12
 9013              		.cfi_offset 11, -8
 9014              		.cfi_offset 14, -4
 9015              	.LBB6734:
 9016              	.LBB6731:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 375


 174:../../libdaisy/src/hid/disp/display.h ****     }
 9017              		.loc 5 174 19 view .LVU2085
 9018 0012 28BF     		it	cs
 9019 0014 3F22     		movcs	r2, #63
 9020              	.LVL620:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9021              		.loc 5 174 19 view .LVU2086
 9022              	.LBE6731:
 9023              	.LBE6734:
 9024              	.LBB6735:
 9025              	.LBB6736:
 9026              	.LBB6737:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9027              		.loc 19 187 28 view .LVU2087
 9028 0016 D0F800A0 		ldr	r10, [r0]
 9029              	.LBE6737:
 9030              	.LBE6736:
 9031              	.LBE6735:
 9032              	.LBB6739:
 9033              	.LBB6732:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9034              		.loc 5 173 19 view .LVU2088
 9035 001a 4548     		ldr	r0, .L555+4
 9036              	.LVL621:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9037              		.loc 5 173 19 view .LVU2089
 9038              	.LBE6732:
 9039              	.LBE6739:
 272:Jellybeans.cpp ****     patch.display.SetCursor(x, y);
 9040              		.loc 14 272 47 view .LVU2090
 9041 001c 85B0     		sub	sp, sp, #20
 9042              		.cfi_def_cfa_offset 56
 9043 001e 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 9044              	.LBB6740:
 9045              	.LBB6733:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9046              		.loc 5 174 19 view .LVU2091
 9047 0020 A0F8A621 		strh	r2, [r0, #422]	@ movhi
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9048              		.loc 5 173 19 view .LVU2092
 9049 0024 A0F8A411 		strh	r1, [r0, #420]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9050              		.loc 5 174 9 is_stmt 1 view .LVU2093
 9051              	.LVL622:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9052              		.loc 5 174 9 is_stmt 0 view .LVU2094
 9053              	.LBE6733:
 9054              	.LBE6740:
 274:Jellybeans.cpp ****     char* cstr = &str[0];
 9055              		.loc 14 274 5 is_stmt 1 view .LVU2095
 9056              	.LBB6741:
 9057              	.LBI6735:
 995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
 999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  <code>*this == ""</code>.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 376


1000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NODISCARD bool
1002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->size() == 0; }
1004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Element access:
1006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
1009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
1012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
1013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
1015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
1020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
1021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
1026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
1027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
1029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
1030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
1032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[](size_type __pos)
 9058              		.loc 19 1034 7 view .LVU2096
 9059              	.LBB6738:
 9060              	.LBI6736:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9061              		.loc 19 186 7 view .LVU2097
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9062              		.loc 19 186 7 is_stmt 0 view .LVU2098
 9063              	.LBE6738:
 9064              	.LBE6741:
 275:Jellybeans.cpp ****     patch.display.WriteString(cstr, font, true);
 9065              		.loc 14 275 5 is_stmt 1 view .LVU2099
 9066              		.loc 14 275 5 is_stmt 0 view .LVU2100
 9067 0028 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 9068              	.LBB6742:
 9069              	.LBB6743:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 9070              		.loc 5 443 9 view .LVU2101
 9071 002a 9AF800B0 		ldrb	fp, [r10]	@ zero_extendqisi2
 9072 002e 5B68     		ldr	r3, [r3, #4]
 9073 0030 0292     		str	r2, [sp, #8]
 9074              	.LVL623:
 443:../../libdaisy/src/hid/disp/display.h ****         {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 377


 9075              		.loc 5 443 9 view .LVU2102
 9076 0032 0393     		str	r3, [sp, #12]
 9077              	.LVL624:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 9078              		.loc 5 443 9 view .LVU2103
 9079              	.LBE6743:
 9080              	.LBI6742:
 440:../../libdaisy/src/hid/disp/display.h ****     {
 9081              		.loc 5 440 10 is_stmt 1 view .LVU2104
 9082              	.LBB6783:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 9083              		.loc 5 443 9 view .LVU2105
 9084 0034 BBF1000F 		cmp	fp, #0
 9085 0038 72D0     		beq	.L533
 9086              	.LVL625:
 9087              	.L534:
 9088              	.LBB6744:
 9089              	.LBI6744:
 396:../../libdaisy/src/hid/disp/display.h ****     {
 9090              		.loc 5 396 10 view .LVU2106
 9091              	.LBB6745:
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 9092              		.loc 5 401 20 is_stmt 0 view .LVU2107
 9093 003a ABF12003 		sub	r3, fp, #32
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 9094              		.loc 5 401 9 view .LVU2108
 9095 003e DAB2     		uxtb	r2, r3
 9096 0040 5E2A     		cmp	r2, #94
 9097 0042 70D8     		bhi	.L547
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 9098              		.loc 5 405 23 view .LVU2109
 9099 0044 3A49     		ldr	r1, .L555+4
 9100 0046 B1F8A4E1 		ldrh	lr, [r1, #420]
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 9101              		.loc 5 405 33 view .LVU2110
 9102 004a 0EEB0502 		add	r2, lr, r5
 406:../../libdaisy/src/hid/disp/display.h ****         {
 9103              		.loc 5 406 12 view .LVU2111
 9104 004e 802A     		cmp	r2, #128
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 9105              		.loc 5 405 33 view .LVU2112
 9106 0050 0192     		str	r2, [sp, #4]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 9107              		.loc 5 406 12 view .LVU2113
 9108 0052 68DC     		bgt	.L547
 406:../../libdaisy/src/hid/disp/display.h ****         {
 9109              		.loc 5 406 27 view .LVU2114
 9110 0054 B1F8A621 		ldrh	r2, [r1, #422]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 9111              		.loc 5 406 37 view .LVU2115
 9112 0058 0299     		ldr	r1, [sp, #8]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 9113              		.loc 5 406 27 view .LVU2116
 9114 005a 0092     		str	r2, [sp]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 9115              		.loc 5 406 37 view .LVU2117
 9116 005c 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 378


 406:../../libdaisy/src/hid/disp/display.h ****         {
 9117              		.loc 5 406 12 view .LVU2118
 9118 005e 402A     		cmp	r2, #64
 9119 0060 61DC     		bgt	.L547
 9120              	.LVL626:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 9121              		.loc 5 413 22 is_stmt 1 view .LVU2119
 9122 0062 0029     		cmp	r1, #0
 9123 0064 45D0     		beq	.L538
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 9124              		.loc 5 415 37 is_stmt 0 view .LVU2120
 9125 0066 029A     		ldr	r2, [sp, #8]
 9126 0068 6FF00047 		mvn	r7, #-2147483648
 9127 006c 0098     		ldr	r0, [sp]
 9128 006e 02FB03F3 		mul	r3, r2, r3
 9129 0072 1F44     		add	r7, r7, r3
 9130 0074 1344     		add	r3, r3, r2
 9131 0076 039A     		ldr	r2, [sp, #12]
 9132 0078 A2F10209 		sub	r9, r2, #2
 9133 007c 02EB4707 		add	r7, r2, r7, lsl #1
 9134 0080 09EB4309 		add	r9, r9, r3, lsl #1
 9135              	.LVL627:
 9136              	.L539:
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 9137              		.loc 5 415 15 view .LVU2121
 9138 0084 37F802CF 		ldrh	ip, [r7, #2]!
 9139              	.LVL628:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9140              		.loc 5 416 26 is_stmt 1 view .LVU2122
 9141 0088 7DB3     		cbz	r5, .L542
 9142              	.LBB6746:
 9143              	.LBB6747:
 9144              	.LBB6748:
 9145              	.LBB6749:
 9146              	.LBB6750:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9147              		.loc 15 246 55 is_stmt 0 view .LVU2123
 9148 008a 00F00703 		and	r3, r0, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9149              		.loc 15 246 49 view .LVU2124
 9150 008e 0126     		movs	r6, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9151              		.loc 15 246 28 view .LVU2125
 9152 0090 C208     		lsrs	r2, r0, #3
 9153              	.LBE6750:
 9154              	.LBE6749:
 9155              	.LBE6748:
 9156              	.LBE6747:
 9157              	.LBE6746:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9158              		.loc 5 416 19 view .LVU2126
 9159 0092 0024     		movs	r4, #0
 9160              	.LBB6769:
 9161              	.LBB6764:
 9162              	.LBB6760:
 9163              	.LBB6755:
 9164              	.LBB6751:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 379


 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9165              		.loc 15 246 49 view .LVU2127
 9166 0094 9E40     		lsls	r6, r6, r3
 9167 0096 49F2B413 		movw	r3, #37300
 9168 009a 7344     		add	r3, r3, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9169              		.loc 15 246 42 view .LVU2128
 9170 009c 76B2     		sxtb	r6, r6
 9171 009e 03EBC213 		add	r3, r3, r2, lsl #7
 9172 00a2 244A     		ldr	r2, .L555+8
 9173 00a4 6FEA0608 		mvn	r8, r6
 9174 00a8 1344     		add	r3, r3, r2
 9175 00aa 7246     		mov	r2, lr
 9176 00ac 0BE0     		b	.L543
 9177              	.LVL629:
 9178              	.L554:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9179              		.loc 15 246 42 view .LVU2129
 9180              	.LBE6751:
 9181              	.LBE6755:
 9182              	.LBE6760:
 9183              	.LBE6764:
 9184              	.LBE6769:
 9185              	.LBB6770:
 9186              	.LBB6771:
 9187              	.LBB6772:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 9188              		.loc 15 241 9 view .LVU2130
 9189 00ae 7F2A     		cmp	r2, #127
 9190 00b0 04D8     		bhi	.L541
 9191 00b2 3F28     		cmp	r0, #63
 9192 00b4 02D8     		bhi	.L541
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 9193              		.loc 15 244 42 view .LVU2131
 9194 00b6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 9195 00b8 3143     		orrs	r1, r1, r6
 9196 00ba 1970     		strb	r1, [r3]
 9197              	.L541:
 9198              	.LVL630:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 9199              		.loc 15 244 42 view .LVU2132
 9200              	.LBE6772:
 9201              	.LBE6771:
 9202              	.LBE6770:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9203              		.loc 5 416 13 is_stmt 1 view .LVU2133
 9204 00bc 0134     		adds	r4, r4, #1
 9205              	.LVL631:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9206              		.loc 5 416 26 view .LVU2134
 9207 00be 0133     		adds	r3, r3, #1
 9208 00c0 0132     		adds	r2, r2, #1
 9209 00c2 A542     		cmp	r5, r4
 9210 00c4 11D0     		beq	.L542
 9211              	.LVL632:
 9212              	.L543:
 9213              	.LBB6774:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 380


 9214              	.LBI6770:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 9215              		.loc 4 41 10 view .LVU2135
 9216              	.LBB6773:
 9217              	.LBI6771:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 9218              		.loc 15 239 10 view .LVU2136
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 9219              		.loc 15 239 10 is_stmt 0 view .LVU2137
 9220              	.LBE6773:
 9221              	.LBE6774:
 9222              	.LBB6775:
 9223              	.LBI6746:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 9224              		.loc 4 41 10 is_stmt 1 view .LVU2138
 9225              	.LBB6765:
 9226              	.LBI6747:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 9227              		.loc 15 239 10 view .LVU2139
 9228              	.LBE6765:
 9229              	.LBE6775:
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 9230              		.loc 5 418 23 is_stmt 0 view .LVU2140
 9231 00c6 0CFA04F1 		lsl	r1, ip, r4
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 9232              		.loc 5 418 17 view .LVU2141
 9233 00ca 0904     		lsls	r1, r1, #16
 9234 00cc EFD4     		bmi	.L554
 9235              	.LVL633:
 9236              	.LBB6776:
 9237              	.LBB6766:
 9238              	.LBB6761:
 9239              	.LBB6756:
 9240              	.LBI6749:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 9241              		.loc 15 239 10 is_stmt 1 view .LVU2142
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 9242              		.loc 15 239 10 is_stmt 0 view .LVU2143
 9243              	.LBE6756:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 9244              		.loc 15 241 9 view .LVU2144
 9245 00ce 7F2A     		cmp	r2, #127
 9246 00d0 F4D8     		bhi	.L541
 9247 00d2 3F28     		cmp	r0, #63
 9248 00d4 F2D8     		bhi	.L541
 9249              	.LBB6757:
 9250              	.LBB6752:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9251              		.loc 15 246 42 view .LVU2145
 9252 00d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 9253              	.LBE6752:
 9254              	.LBE6757:
 9255              	.LBE6761:
 9256              	.LBE6766:
 9257              	.LBE6776:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9258              		.loc 5 416 13 view .LVU2146
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 381


 9259 00d8 0134     		adds	r4, r4, #1
 9260              	.LVL634:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9261              		.loc 5 416 26 view .LVU2147
 9262 00da 0133     		adds	r3, r3, #1
 9263 00dc 0132     		adds	r2, r2, #1
 9264              	.LBB6777:
 9265              	.LBB6767:
 9266              	.LBB6762:
 9267              	.LBB6758:
 9268              	.LBB6753:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9269              		.loc 15 246 42 view .LVU2148
 9270 00de 08EA0101 		and	r1, r8, r1
 9271              	.LBE6753:
 9272              	.LBE6758:
 9273              	.LBE6762:
 9274              	.LBE6767:
 9275              	.LBE6777:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9276              		.loc 5 416 26 view .LVU2149
 9277 00e2 A542     		cmp	r5, r4
 9278              	.LBB6778:
 9279              	.LBB6768:
 9280              	.LBB6763:
 9281              	.LBB6759:
 9282              	.LBB6754:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9283              		.loc 15 246 42 view .LVU2150
 9284 00e4 03F8011C 		strb	r1, [r3, #-1]
 9285              	.LVL635:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 9286              		.loc 15 246 42 view .LVU2151
 9287              	.LBE6754:
 9288              	.LBE6759:
 9289              	.LBE6763:
 9290              	.LBE6768:
 9291              	.LBE6778:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9292              		.loc 5 416 13 is_stmt 1 view .LVU2152
 416:../../libdaisy/src/hid/disp/display.h ****             {
 9293              		.loc 5 416 26 view .LVU2153
 9294 00e8 EDD1     		bne	.L543
 9295              	.LVL636:
 9296              	.L542:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 9297              		.loc 5 413 9 view .LVU2154
 413:../../libdaisy/src/hid/disp/display.h ****         {
 9298              		.loc 5 413 22 view .LVU2155
 9299 00ea B945     		cmp	r9, r7
 9300 00ec 00F10100 		add	r0, r0, #1
 9301 00f0 C8D1     		bne	.L539
 9302              	.LVL637:
 9303              	.L538:
 9304              	.LBB6779:
 9305              	.LBI6779:
 171:../../libdaisy/src/hid/disp/display.h ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 382


 9306              		.loc 5 171 10 view .LVU2156
 9307              	.LBB6780:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9308              		.loc 5 173 9 view .LVU2157
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9309              		.loc 5 174 19 is_stmt 0 view .LVU2158
 9310 00f2 009A     		ldr	r2, [sp]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9311              		.loc 5 173 19 view .LVU2159
 9312 00f4 BDF80430 		ldrh	r3, [sp, #4]
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9313              		.loc 5 174 19 view .LVU2160
 9314 00f8 3F2A     		cmp	r2, #63
 9315 00fa 0D49     		ldr	r1, .L555+4
 9316 00fc 28BF     		it	cs
 9317 00fe 3F22     		movcs	r2, #63
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9318              		.loc 5 173 19 view .LVU2161
 9319 0100 7F2B     		cmp	r3, #127
 9320 0102 28BF     		it	cs
 9321 0104 7F23     		movcs	r3, #127
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9322              		.loc 5 174 19 view .LVU2162
 9323 0106 A1F8A621 		strh	r2, [r1, #422]	@ movhi
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 9324              		.loc 5 173 19 view .LVU2163
 9325 010a A1F8A431 		strh	r3, [r1, #420]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9326              		.loc 5 174 9 is_stmt 1 view .LVU2164
 9327              	.LVL638:
 9328              	.L535:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 9329              		.loc 5 174 9 is_stmt 0 view .LVU2165
 9330              	.LBE6780:
 9331              	.LBE6779:
 9332              	.LBE6745:
 9333              	.LBE6744:
 445:../../libdaisy/src/hid/disp/display.h ****                != *str)
 9334              		.loc 5 445 13 view .LVU2166
 9335 010e 9AF80030 		ldrb	r3, [r10]	@ zero_extendqisi2
 9336 0112 5B45     		cmp	r3, fp
 9337 0114 04D1     		bne	.L533
 9338              	.LVL639:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 9339              		.loc 5 443 9 is_stmt 1 view .LVU2167
 9340 0116 1AF801BF 		ldrb	fp, [r10, #1]!	@ zero_extendqisi2
 9341              	.LVL640:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 9342              		.loc 5 443 9 is_stmt 0 view .LVU2168
 9343 011a BBF1000F 		cmp	fp, #0
 9344 011e 8CD1     		bne	.L534
 9345              	.L533:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 9346              		.loc 5 443 9 view .LVU2169
 9347              	.LBE6783:
 9348              	.LBE6742:
 276:Jellybeans.cpp **** }...
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 383


 9349              		.loc 14 276 1 view .LVU2170
 9350 0120 05B0     		add	sp, sp, #20
 9351              		.cfi_remember_state
 9352              		.cfi_def_cfa_offset 36
 9353              		@ sp needed
 9354 0122 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 9355              	.LVL641:
 9356              	.L547:
 9357              		.cfi_restore_state
 9358              	.LBB6785:
 9359              	.LBB6784:
 9360              	.LBB6782:
 9361              	.LBB6781:
 402:../../libdaisy/src/hid/disp/display.h **** 
 9362              		.loc 5 402 20 view .LVU2171
 9363 0126 4FF0000B 		mov	fp, #0
 9364              	.LVL642:
 402:../../libdaisy/src/hid/disp/display.h **** 
 9365              		.loc 5 402 20 view .LVU2172
 9366 012a F0E7     		b	.L535
 9367              	.L556:
 9368              		.align	2
 9369              	.L555:
 9370 012c 00000000 		.word	.LANCHOR11
 9371 0130 00900000 		.word	patch+36864
 9372 0134 00000000 		.word	patch
 9373              	.LBE6781:
 9374              	.LBE6782:
 9375              	.LBE6784:
 9376              	.LBE6785:
 9377              		.cfi_endproc
 9378              	.LFE5123:
 9380              		.section	.text._Z10UpdateOledv,"ax",%progbits
 9381              		.align	1
 9382              		.p2align 2,,3
 9383              		.global	_Z10UpdateOledv
 9384              		.syntax unified
 9385              		.thumb
 9386              		.thumb_func
 9387              		.fpu fpv5-d16
 9389              	_Z10UpdateOledv:
 9390              	.LFB5122:
 226:Jellybeans.cpp **** void UpdateOled() {
 9391              		.loc 14 226 19 is_stmt 1 view -0
 9392              		.cfi_startproc
 9393              		@ args = 0, pretend = 0, frame = 32
 9394              		@ frame_needed = 0, uses_anonymous_args = 0
 228:Jellybeans.cpp ****     patch.display.Fill(false);  
 9395              		.loc 14 228 5 view .LVU2174
 9396              	.LVL643:
 9397              	.LBB6993:
 9398              	.LBI6993:
  33:../../libdaisy/src/hid/disp/oled_display.h **** 
 9399              		.loc 4 33 10 view .LVU2175
 9400              	.LBB6994:
 9401              	.LBI6994:
 249:../../libdaisy/src/dev/oled_ssd130x.h ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 384


 9402              		.loc 15 249 10 view .LVU2176
 9403              	.LBB6995:
 251:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 9404              		.loc 15 251 29 view .LVU2177
 253:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 9405              		.loc 15 253 24 is_stmt 0 view .LVU2178
 9406 0000 0021     		movs	r1, #0
 9407 0002 4FF48062 		mov	r2, #1024
 9408 0006 6248     		ldr	r0, .L587
 9409              	.LBE6995:
 9410              	.LBE6994:
 9411              	.LBE6993:
 226:Jellybeans.cpp **** void UpdateOled() {
 9412              		.loc 14 226 19 view .LVU2179
 9413 0008 F0B5     		push	{r4, r5, r6, r7, lr}
 9414              		.cfi_def_cfa_offset 20
 9415              		.cfi_offset 4, -20
 9416              		.cfi_offset 5, -16
 9417              		.cfi_offset 6, -12
 9418              		.cfi_offset 7, -8
 9419              		.cfi_offset 14, -4
 9420 000a 89B0     		sub	sp, sp, #36
 9421              		.cfi_def_cfa_offset 56
 9422              	.LBB6998:
 9423              	.LBB6997:
 9424              	.LBB6996:
 253:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 9425              		.loc 15 253 24 view .LVU2180
 9426 000c FFF7FEFF 		bl	memset
 9427              	.LVL644:
 253:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 9428              		.loc 15 253 24 view .LVU2181
 9429 0010 604B     		ldr	r3, .L587+4
 9430 0012 03F18001 		add	r1, r3, #128
 9431              	.LVL645:
 9432              	.L558:
 253:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 9433              		.loc 15 253 24 view .LVU2182
 9434              	.LBE6996:
 9435              	.LBE6997:
 9436              	.LBE6998:
 9437              	.LBB6999:
 9438              	.LBB7000:
 9439              	.LBB7001:
 9440              	.LBI7001:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 9441              		.loc 4 41 10 is_stmt 1 view .LVU2183
 9442              	.LBB7002:
 9443              	.LBI7002:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 9444              		.loc 15 239 10 view .LVU2184
 9445              	.LBB7003:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 9446              		.loc 15 244 42 is_stmt 0 view .LVU2185
 9447 0016 13F8012F 		ldrb	r2, [r3, #1]!	@ zero_extendqisi2
 9448              	.LVL646:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 385


 9449              		.loc 15 244 42 view .LVU2186
 9450 001a 42F00802 		orr	r2, r2, #8
 9451              	.LBE7003:
 9452              	.LBE7002:
 9453              	.LBE7001:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 9454              		.loc 5 239 26 view .LVU2187
 9455 001e 9942     		cmp	r1, r3
 9456              	.LBB7006:
 9457              	.LBB7005:
 9458              	.LBB7004:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 9459              		.loc 15 244 42 view .LVU2188
 9460 0020 1A70     		strb	r2, [r3]
 9461              	.LVL647:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 9462              		.loc 15 244 42 view .LVU2189
 9463              	.LBE7004:
 9464              	.LBE7005:
 9465              	.LBE7006:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 9466              		.loc 5 239 26 is_stmt 1 view .LVU2190
 9467 0022 F8D1     		bne	.L558
 9468              	.LVL648:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 9469              		.loc 5 239 26 is_stmt 0 view .LVU2191
 9470              	.LBE7000:
 9471              	.LBE6999:
 235:Jellybeans.cpp ****     DrawString(">", 0, 11);
 9472              		.loc 14 235 5 is_stmt 1 view .LVU2192
 9473              	.LBB7007:
 9474              	.LBI7007:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 9475              		.loc 21 144 7 view .LVU2193
 9476              	.LBB7008:
 9477              	.LBI7008:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9478              		.loc 22 79 7 view .LVU2194
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9479              		.loc 22 79 7 is_stmt 0 view .LVU2195
 9480              	.LBE7008:
 9481              	.LBE7007:
 9482              	.LBB7009:
 9483              	.LBI7009:
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 9484              		.loc 19 525 7 is_stmt 1 view .LVU2196
 9485              	.LBB7010:
 9486              	.LBB7011:
 9487              	.LBI7011:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9488              		.loc 19 190 7 view .LVU2197
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9489              		.loc 19 190 7 is_stmt 0 view .LVU2198
 9490              	.LBE7011:
 9491              	.LBB7012:
 9492              	.LBI7012:
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 386


 9493              		.loc 19 156 2 is_stmt 1 view .LVU2199
 9494              	.LBB7013:
 9495              	.LBB7014:
 9496              	.LBB7015:
 9497              	.LBI7015:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9498              		.loc 21 147 7 view .LVU2200
 9499              	.LBB7016:
 9500              	.LBI7016:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9501              		.loc 22 82 7 view .LVU2201
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9502              		.loc 22 82 7 is_stmt 0 view .LVU2202
 9503              	.LBE7016:
 9504              	.LBE7015:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9505              		.loc 19 157 35 view .LVU2203
 9506 0024 04AD     		add	r5, sp, #16
 9507              	.LVL649:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9508              		.loc 19 157 35 view .LVU2204
 9509              	.LBE7014:
 9510              	.LBE7013:
 9511              	.LBE7012:
 9512              	.LBB7017:
 9513              	.LBB7018:
 9514              	.LBB7019:
 9515              	.LBB7020:
 9516              	.LBB7021:
 9517              	.LBB7022:
 9518              	.LBB7023:
 9519              	.LBB7024:
 9520              	.LBB7025:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9521              		.loc 19 183 26 view .LVU2205
 9522 0026 0121     		movs	r1, #1
 9523              	.LBE7025:
 9524              	.LBE7024:
 9525              	.LBE7023:
 9526              	.LBB7028:
 9527              	.LBB7029:
 9528              	.LBB7030:
 9529              	.LBB7031:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9530              		.loc 20 322 14 view .LVU2206
 9531 0028 3E23     		movs	r3, #62
 9532              	.LBE7031:
 9533              	.LBE7030:
 9534              	.LBE7029:
 9535              	.LBE7028:
 9536              	.LBE7022:
 9537              	.LBE7021:
 9538              	.LBE7020:
 9539              	.LBE7019:
 9540              	.LBE7018:
 9541              	.LBE7017:
 9542              	.LBE7010:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 387


 9543              	.LBE7009:
 235:Jellybeans.cpp ****     DrawString(">", 0, 11);
 9544              		.loc 14 235 15 view .LVU2207
 9545 002a 02A8     		add	r0, sp, #8
 9546              	.LVL650:
 235:Jellybeans.cpp ****     DrawString(">", 0, 11);
 9547              		.loc 14 235 15 view .LVU2208
 9548 002c 0B22     		movs	r2, #11
 9549              	.LBB7044:
 9550              	.LBB7043:
 9551              	.LBB7042:
 9552              	.LBB7041:
 9553              	.LBB7040:
 9554              	.LBB7039:
 9555              	.LBB7038:
 9556              	.LBB7037:
 9557              	.LBB7035:
 9558              	.LBB7034:
 9559              	.LBB7033:
 9560              	.LBB7032:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9561              		.loc 20 322 14 view .LVU2209
 9562 002e ADF81030 		strh	r3, [sp, #16]	@ movhi
 9563              	.LVL651:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9564              		.loc 20 322 14 view .LVU2210
 9565              	.LBE7032:
 9566              	.LBE7033:
 9567              	.LBE7034:
 9568              	.LBE7035:
 9569              	.LBB7036:
 9570              	.LBB7027:
 9571              	.LBB7026:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9572              		.loc 19 183 26 view .LVU2211
 9573 0032 CDE90251 		strd	r5, r1, [sp, #8]
 9574              	.LBE7026:
 9575              	.LBE7027:
 9576              	.LBE7036:
 9577              	.LBE7037:
 9578              	.LBE7038:
 9579              	.LBE7039:
 9580              	.LBE7040:
 9581              	.LBE7041:
 9582              	.LBE7042:
 9583              	.LBE7043:
 9584              	.LBE7044:
 235:Jellybeans.cpp ****     DrawString(">", 0, 11);
 9585              		.loc 14 235 15 view .LVU2212
 9586 0036 0021     		movs	r1, #0
 9587 0038 FFF7FEFF 		bl	_Z10DrawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
 9588              	.LVL652:
 9589              	.LBB7045:
 9590              	.LBI7045:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 9591              		.loc 19 657 7 is_stmt 1 view .LVU2213
 9592              	.LBB7046:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 388


 9593              	.LBB7047:
 9594              	.LBI7047:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9595              		.loc 19 229 7 view .LVU2214
 9596              	.LBB7048:
 9597              	.LBB7049:
 9598              	.LBI7049:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 9599              		.loc 19 221 7 view .LVU2215
 9600              	.LBB7050:
 9601              	.LBI7050:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9602              		.loc 19 186 7 view .LVU2216
 9603              	.LBB7051:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9604              		.loc 19 187 28 is_stmt 0 view .LVU2217
 9605 003c 0298     		ldr	r0, [sp, #8]
 9606              	.LVL653:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9607              		.loc 19 187 28 view .LVU2218
 9608              	.LBE7051:
 9609              	.LBE7050:
 9610              	.LBB7052:
 9611              	.LBI7052:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9612              		.loc 19 200 7 is_stmt 1 view .LVU2219
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9613              		.loc 19 200 7 is_stmt 0 view .LVU2220
 9614              	.LBE7052:
 9615              	.LBE7049:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 9616              		.loc 19 231 2 view .LVU2221
 9617 003e A842     		cmp	r0, r5
 9618 0040 03D0     		beq	.L559
 9619              	.LVL654:
 9620              	.LBB7053:
 9621              	.LBI7053:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 9622              		.loc 19 236 7 is_stmt 1 view .LVU2222
 9623              	.LBB7054:
 9624              	.LBB7055:
 9625              	.LBI7055:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 9626              		.loc 25 491 7 view .LVU2223
 9627              	.LBB7056:
 9628              	.LBI7056:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 9629              		.loc 22 120 7 view .LVU2224
 9630              	.LBE7056:
 9631              	.LBE7055:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9632              		.loc 19 237 34 is_stmt 0 view .LVU2225
 9633 0042 0499     		ldr	r1, [sp, #16]
 9634              	.LBB7059:
 9635              	.LBB7058:
 9636              	.LBB7057:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 389


 9637              		.loc 22 133 19 view .LVU2226
 9638 0044 0131     		adds	r1, r1, #1
 9639              	.LVL655:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9640              		.loc 22 133 19 view .LVU2227
 9641 0046 FFF7FEFF 		bl	_ZdlPvj
 9642              	.LVL656:
 9643              	.L559:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9644              		.loc 22 133 19 view .LVU2228
 9645              	.LBE7057:
 9646              	.LBE7058:
 9647              	.LBE7059:
 9648              	.LBE7054:
 9649              	.LBE7053:
 9650              	.LBE7048:
 9651              	.LBE7047:
 9652              	.LBB7060:
 9653              	.LBI7060:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9654              		.loc 19 150 14 is_stmt 1 view .LVU2229
 9655              	.LBB7061:
 9656              	.LBI7061:
 9657              		.loc 21 162 7 view .LVU2230
 9658              	.LBB7062:
 9659              	.LBI7062:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9660              		.loc 22 89 7 view .LVU2231
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9661              		.loc 22 89 7 is_stmt 0 view .LVU2232
 9662              	.LBE7062:
 9663              	.LBE7061:
 9664              	.LBE7060:
 9665              	.LBE7046:
 9666              	.LBE7045:
 9667              	.LBB7063:
 9668              	.LBI7063:
 9669              		.loc 21 162 7 is_stmt 1 view .LVU2233
 9670              	.LBB7064:
 9671              	.LBI7064:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9672              		.loc 22 89 7 view .LVU2234
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9673              		.loc 22 89 7 is_stmt 0 view .LVU2235
 9674              	.LBE7064:
 9675              	.LBE7063:
 237:Jellybeans.cpp ****     int listSize = 5;
 9676              		.loc 14 237 5 is_stmt 1 view .LVU2236
 239:Jellybeans.cpp ****     if (debugMode){
 9677              		.loc 14 239 5 view .LVU2237
 241:Jellybeans.cpp ****         listSize--;
 9678              		.loc 14 241 9 view .LVU2238
 242:Jellybeans.cpp ****         patch.display.DrawLine(0, 53, 128, 53, true);
 9679              		.loc 14 242 9 view .LVU2239
 9680              	.LBB7065:
 9681              	.LBI7065:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 390


 9682              		.loc 5 221 10 view .LVU2240
 9683              	.LBB7066:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 9684              		.loc 5 239 26 view .LVU2241
 9685 004a 534B     		ldr	r3, .L587+8
 9686 004c 03F18001 		add	r1, r3, #128
 9687              	.LVL657:
 9688              	.L560:
 9689              	.LBB7067:
 9690              	.LBI7067:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 9691              		.loc 4 41 10 view .LVU2242
 9692              	.LBB7068:
 9693              	.LBI7068:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 9694              		.loc 15 239 10 view .LVU2243
 9695              	.LBB7069:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 9696              		.loc 15 244 42 is_stmt 0 view .LVU2244
 9697 0050 13F8012F 		ldrb	r2, [r3, #1]!	@ zero_extendqisi2
 9698              	.LVL658:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 9699              		.loc 15 244 42 view .LVU2245
 9700 0054 42F02002 		orr	r2, r2, #32
 9701              	.LBE7069:
 9702              	.LBE7068:
 9703              	.LBE7067:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 9704              		.loc 5 239 26 view .LVU2246
 9705 0058 9942     		cmp	r1, r3
 9706              	.LBB7072:
 9707              	.LBB7071:
 9708              	.LBB7070:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 9709              		.loc 15 244 42 view .LVU2247
 9710 005a 1A70     		strb	r2, [r3]
 9711              	.LVL659:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 9712              		.loc 15 244 42 view .LVU2248
 9713              	.LBE7070:
 9714              	.LBE7071:
 9715              	.LBE7072:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 9716              		.loc 5 239 26 is_stmt 1 view .LVU2249
 9717 005c F8D1     		bne	.L560
 9718              	.LVL660:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 9719              		.loc 5 239 26 is_stmt 0 view .LVU2250
 9720              	.LBE7066:
 9721              	.LBE7065:
 243:Jellybeans.cpp ****         DrawString(debugString, 2, 54);
 9722              		.loc 14 243 9 is_stmt 1 view .LVU2251
 9723              	.LBB7073:
 9724              	.LBI7073:
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 9725              		.loc 19 448 7 view .LVU2252
 9726              	.LBB7074:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 391


 9727              	.LBB7075:
 9728              	.LBB7076:
 9729              	.LBI7076:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9730              		.loc 19 190 7 view .LVU2253
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9731              		.loc 19 190 7 is_stmt 0 view .LVU2254
 9732              	.LBE7076:
 9733              	.LBB7077:
 9734              	.LBI7077:
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 9735              		.loc 19 290 7 is_stmt 1 view .LVU2255
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 9736              		.loc 19 290 7 is_stmt 0 view .LVU2256
 9737              	.LBE7077:
 9738              	.LBB7078:
 9739              	.LBI7078:
 9740              		.file 35 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\allo
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** /** @file ext/alloc_traits.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  */
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #pragma GCC system_header
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** # include <bits/alloc_traits.h>
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus < 201103L
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #endif
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 392


  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** {
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** /**
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++11 allocators.
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  * @ingroup allocators
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** */
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** template<typename _Alloc, typename = typename _Alloc::value_type>
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   struct __alloc_traits
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   : std::allocator_traits<_Alloc>
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #endif
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   {
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef _Alloc allocator_type;
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef value_type&                             reference;
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef const value_type&                       const_reference;
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::allocate;
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::deallocate;
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::construct;
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::destroy;
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::max_size;
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   private:
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr>
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       using __is_custom_pointer
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   public:
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // overload construct for non-standard pointer types
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr, typename... _Args>
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       noexcept(noexcept(_Base_type::construct(__a, std::__to_address(__p),
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 					      std::forward<_Args>(__args)...)))
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       {
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 	_Base_type::construct(__a, std::__to_address(__p),
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 			      std::forward<_Args>(__args)...);
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       }
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // overload destroy for non-standard pointer types
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr>
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       { _Base_type::destroy(__a, std::__to_address(__p)); }
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 393


  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
 9741              		.loc 35 97 29 is_stmt 1 view .LVU2257
 9742              	.LBB7079:
 9743              	.LBI7079:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 9744              		.loc 25 558 7 view .LVU2258
 9745              	.LBB7080:
 9746              	.LBI7080:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9747              		.loc 21 147 7 view .LVU2259
 9748              	.LBB7081:
 9749              	.LBI7081:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9750              		.loc 22 82 7 view .LVU2260
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9751              		.loc 22 82 7 is_stmt 0 view .LVU2261
 9752              	.LBE7081:
 9753              	.LBE7080:
 9754              	.LBE7079:
 9755              	.LBE7078:
 9756              	.LBB7082:
 9757              	.LBI7082:
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 9758              		.loc 19 159 2 is_stmt 1 view .LVU2262
 9759              	.LBB7083:
 9760              	.LBB7084:
 9761              	.LBB7085:
 9762              	.LBI7085:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 9763              		.loc 34 101 5 view .LVU2263
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 9764              		.loc 34 101 5 is_stmt 0 view .LVU2264
 9765              	.LBE7085:
 9766              	.LBB7086:
 9767              	.LBI7086:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9768              		.loc 21 147 7 is_stmt 1 view .LVU2265
 9769              	.LBB7087:
 9770              	.LBI7087:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9771              		.loc 22 82 7 view .LVU2266
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9772              		.loc 22 82 7 is_stmt 0 view .LVU2267
 9773              	.LBE7087:
 9774              	.LBE7086:
 9775              	.LBE7084:
 9776              	.LBE7083:
 9777              	.LBE7082:
 9778              	.LBB7090:
 9779              	.LBB7091:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9780              		.loc 19 187 28 view .LVU2268
 9781 005e 4F4B     		ldr	r3, .L587+12
 9782              	.LBE7091:
 9783              	.LBE7090:
 9784              	.LBB7092:
 9785              	.LBB7089:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 394


 9786              	.LBB7088:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 9787              		.loc 19 160 46 view .LVU2269
 9788 0060 0295     		str	r5, [sp, #8]
 9789              	.LVL661:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 9790              		.loc 19 160 46 view .LVU2270
 9791              	.LBE7088:
 9792              	.LBE7089:
 9793              	.LBE7092:
 9794              	.LBB7093:
 9795              	.LBI7093:
 9796              		.loc 21 162 7 is_stmt 1 view .LVU2271
 9797              	.LBB7094:
 9798              	.LBI7094:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9799              		.loc 22 89 7 view .LVU2272
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9800              		.loc 22 89 7 is_stmt 0 view .LVU2273
 9801              	.LBE7094:
 9802              	.LBE7093:
 9803              	.LBB7095:
 9804              	.LBI7090:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9805              		.loc 19 186 7 is_stmt 1 view .LVU2274
 9806              	.LBE7095:
 9807              	.LBB7096:
 9808              	.LBB7097:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9809              		.loc 19 908 16 is_stmt 0 view .LVU2275
 9810 0062 D3E90064 		ldrd	r6, r4, [r3]
 9811              	.LVL662:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9812              		.loc 19 908 16 view .LVU2276
 9813              	.LBE7097:
 9814              	.LBE7096:
 9815              	.LBB7098:
 9816              	.LBI7098:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 9817              		.loc 19 263 9 is_stmt 1 view .LVU2277
 9818              	.LBB7099:
 9819              	.LBB7100:
 9820              	.LBI7100:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 9821              		.loc 19 243 9 view .LVU2278
 9822              	.LBB7101:
 9823              	.LBB7102:
 9824              	.LBI7102:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 9825              		.loc 23 206 7 view .LVU2279
 9826              	.LBB7103:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 9827              		.loc 23 211 42 is_stmt 0 view .LVU2280
 9828 0066 E642     		cmn	r6, r4
 9829 0068 02D0     		beq	.L561
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 9830              		.loc 23 211 42 view .LVU2281
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 395


 9831 006a 002E     		cmp	r6, #0
 9832 006c 00F08C80 		beq	.L583
 9833              	.L561:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 9834              		.loc 23 217 2 view .LVU2282
 9835 0070 0F2C     		cmp	r4, #15
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 9836              		.loc 23 215 12 view .LVU2283
 9837 0072 0194     		str	r4, [sp, #4]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 9838              		.loc 23 217 2 view .LVU2284
 9839 0074 77D8     		bhi	.L584
 9840              	.LVL663:
 9841              	.LBB7104:
 9842              	.LBI7104:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9843              		.loc 19 186 7 is_stmt 1 view .LVU2285
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9844              		.loc 19 186 7 is_stmt 0 view .LVU2286
 9845              	.LBE7104:
 9846              	.LBB7106:
 9847              	.LBI7106:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 9848              		.loc 19 392 7 is_stmt 1 view .LVU2287
 9849              	.LBB7107:
 9850              	.LBI7107:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9851              		.loc 19 346 7 view .LVU2288
 9852              	.LBB7108:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 9853              		.loc 19 348 2 is_stmt 0 view .LVU2289
 9854 0076 012C     		cmp	r4, #1
 9855 0078 38D1     		bne	.L564
 9856              	.LVL664:
 9857              	.LBB7109:
 9858              	.LBI7109:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 9859              		.loc 20 321 7 is_stmt 1 view .LVU2290
 9860              	.LBB7110:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9861              		.loc 20 322 9 view .LVU2291
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9862              		.loc 20 322 16 is_stmt 0 view .LVU2292
 9863 007a 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9864              		.loc 20 322 22 view .LVU2293
 9865 007c 2A46     		mov	r2, r5
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9866              		.loc 20 322 14 view .LVU2294
 9867 007e 8DF81030 		strb	r3, [sp, #16]
 9868              	.LVL665:
 9869              	.L565:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9870              		.loc 20 322 14 view .LVU2295
 9871              	.LBE7110:
 9872              	.LBE7109:
 9873              	.LBE7108:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 396


 9874              	.LBE7107:
 9875              	.LBE7106:
 9876              	.LBB7126:
 9877              	.LBI7126:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9878              		.loc 19 214 7 is_stmt 1 view .LVU2296
 9879              	.LBB7127:
 9880              	.LBB7128:
 9881              	.LBI7128:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 9882              		.loc 19 182 7 view .LVU2297
 9883              	.LBE7128:
 9884              	.LBB7130:
 9885              	.LBB7131:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9886              		.loc 20 322 14 is_stmt 0 view .LVU2298
 9887 0082 0023     		movs	r3, #0
 9888              	.LBE7131:
 9889              	.LBE7130:
 9890              	.LBE7127:
 9891              	.LBE7126:
 9892              	.LBE7103:
 9893              	.LBE7102:
 9894              	.LBE7101:
 9895              	.LBE7100:
 9896              	.LBE7099:
 9897              	.LBE7098:
 9898              	.LBE7075:
 9899              	.LBE7074:
 9900              	.LBE7073:
 243:Jellybeans.cpp ****         DrawString(debugString, 2, 54);
 9901              		.loc 14 243 19 view .LVU2299
 9902 0084 02A8     		add	r0, sp, #8
 9903              	.LVL666:
 9904              	.LBB7190:
 9905              	.LBB7186:
 9906              	.LBB7182:
 9907              	.LBB7178:
 9908              	.LBB7174:
 9909              	.LBB7170:
 9910              	.LBB7166:
 9911              	.LBB7162:
 9912              	.LBB7158:
 9913              	.LBB7143:
 9914              	.LBB7140:
 9915              	.LBB7134:
 9916              	.LBB7129:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9917              		.loc 19 183 26 view .LVU2300
 9918 0086 0394     		str	r4, [sp, #12]
 9919              	.LVL667:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9920              		.loc 19 183 26 view .LVU2301
 9921              	.LBE7129:
 9922              	.LBE7134:
 9923              	.LBB7135:
 9924              	.LBI7135:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 397


 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9925              		.loc 19 186 7 is_stmt 1 view .LVU2302
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9926              		.loc 19 186 7 is_stmt 0 view .LVU2303
 9927              	.LBE7135:
 9928              	.LBB7137:
 9929              	.LBI7130:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 9930              		.loc 20 321 7 is_stmt 1 view .LVU2304
 9931              	.LBB7132:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9932              		.loc 20 322 9 view .LVU2305
 9933              	.LBE7132:
 9934              	.LBE7137:
 9935              	.LBE7140:
 9936              	.LBE7143:
 9937              	.LBE7158:
 9938              	.LBE7162:
 9939              	.LBE7166:
 9940              	.LBE7170:
 9941              	.LBE7174:
 9942              	.LBE7178:
 9943              	.LBE7182:
 9944              	.LBE7186:
 9945              	.LBE7190:
 243:Jellybeans.cpp ****         DrawString(debugString, 2, 54);
 9946              		.loc 14 243 19 is_stmt 0 view .LVU2306
 9947 0088 0221     		movs	r1, #2
 9948              	.LBB7191:
 9949              	.LBB7187:
 9950              	.LBB7183:
 9951              	.LBB7179:
 9952              	.LBB7175:
 9953              	.LBB7171:
 9954              	.LBB7167:
 9955              	.LBB7163:
 9956              	.LBB7159:
 9957              	.LBB7144:
 9958              	.LBB7141:
 9959              	.LBB7138:
 9960              	.LBB7133:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9961              		.loc 20 322 14 view .LVU2307
 9962 008a 1355     		strb	r3, [r2, r4]
 9963              	.LVL668:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9964              		.loc 20 322 14 view .LVU2308
 9965              	.LBE7133:
 9966              	.LBE7138:
 9967              	.LBE7141:
 9968              	.LBE7144:
 9969              	.LBE7159:
 9970              	.LBE7163:
 9971              	.LBE7167:
 9972              	.LBE7171:
 9973              	.LBE7175:
 9974              	.LBE7179:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 398


 9975              	.LBE7183:
 9976              	.LBE7187:
 9977              	.LBE7191:
 243:Jellybeans.cpp ****         DrawString(debugString, 2, 54);
 9978              		.loc 14 243 19 view .LVU2309
 9979 008c 3622     		movs	r2, #54
 9980 008e FFF7FEFF 		bl	_Z10DrawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
 9981              	.LVL669:
 9982              	.LBB7192:
 9983              	.LBI7192:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 9984              		.loc 19 657 7 is_stmt 1 view .LVU2310
 9985              	.LBB7193:
 9986              	.LBB7194:
 9987              	.LBI7194:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9988              		.loc 19 229 7 view .LVU2311
 9989              	.LBB7195:
 9990              	.LBB7196:
 9991              	.LBI7196:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 9992              		.loc 19 221 7 view .LVU2312
 9993              	.LBB7197:
 9994              	.LBI7197:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9995              		.loc 19 186 7 view .LVU2313
 9996              	.LBB7198:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9997              		.loc 19 187 28 is_stmt 0 view .LVU2314
 9998 0092 0298     		ldr	r0, [sp, #8]
 9999              	.LVL670:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10000              		.loc 19 187 28 view .LVU2315
 10001              	.LBE7198:
 10002              	.LBE7197:
 10003              	.LBB7199:
 10004              	.LBI7199:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10005              		.loc 19 200 7 is_stmt 1 view .LVU2316
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10006              		.loc 19 200 7 is_stmt 0 view .LVU2317
 10007              	.LBE7199:
 10008              	.LBE7196:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10009              		.loc 19 231 2 view .LVU2318
 10010 0094 A842     		cmp	r0, r5
 10011 0096 03D0     		beq	.L566
 10012              	.LVL671:
 10013              	.LBB7200:
 10014              	.LBI7200:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10015              		.loc 19 236 7 is_stmt 1 view .LVU2319
 10016              	.LBB7201:
 10017              	.LBB7202:
 10018              	.LBI7202:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10019              		.loc 25 491 7 view .LVU2320
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 399


 10020              	.LBB7203:
 10021              	.LBI7203:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10022              		.loc 22 120 7 view .LVU2321
 10023              	.LBE7203:
 10024              	.LBE7202:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10025              		.loc 19 237 34 is_stmt 0 view .LVU2322
 10026 0098 0499     		ldr	r1, [sp, #16]
 10027              	.LBB7206:
 10028              	.LBB7205:
 10029              	.LBB7204:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10030              		.loc 22 133 19 view .LVU2323
 10031 009a 0131     		adds	r1, r1, #1
 10032              	.LVL672:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10033              		.loc 22 133 19 view .LVU2324
 10034 009c FFF7FEFF 		bl	_ZdlPvj
 10035              	.LVL673:
 10036              	.L566:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10037              		.loc 22 133 19 view .LVU2325
 10038              	.LBE7204:
 10039              	.LBE7205:
 10040              	.LBE7206:
 10041              	.LBE7201:
 10042              	.LBE7200:
 10043              	.LBE7195:
 10044              	.LBE7194:
 10045              	.LBB7207:
 10046              	.LBI7207:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10047              		.loc 19 150 14 is_stmt 1 view .LVU2326
 10048              	.LBB7208:
 10049              	.LBI7208:
 10050              		.loc 21 162 7 view .LVU2327
 10051              	.LBB7209:
 10052              	.LBI7209:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10053              		.loc 22 89 7 view .LVU2328
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10054              		.loc 22 89 7 is_stmt 0 view .LVU2329
 10055              	.LBE7209:
 10056              	.LBE7208:
 10057              	.LBE7207:
 10058              	.LBE7193:
 10059              	.LBE7192:
 247:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10060              		.loc 14 247 5 is_stmt 1 view .LVU2330
 10061              	.LBB7210:
 247:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10062              		.loc 14 247 13 is_stmt 0 view .LVU2331
 10063 00a0 3F4F     		ldr	r7, .L587+16
 10064 00a2 404E     		ldr	r6, .L587+20
 10065 00a4 3C68     		ldr	r4, [r7]
 10066              	.LVL674:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 400


 247:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10067              		.loc 14 247 28 is_stmt 1 view .LVU2332
 10068 00a6 04EB8403 		add	r3, r4, r4, lsl #2
 10069 00aa 06EB0316 		add	r6, r6, r3, lsl #4
 10070 00ae 05E0     		b	.L569
 10071              	.L567:
 247:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10072              		.loc 14 247 5 discriminator 2 view .LVU2333
 247:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10073              		.loc 14 247 38 is_stmt 0 discriminator 2 view .LVU2334
 10074 00b0 3B68     		ldr	r3, [r7]
 247:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10075              		.loc 14 247 5 discriminator 2 view .LVU2335
 10076 00b2 0134     		adds	r4, r4, #1
 10077              	.LVL675:
 247:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10078              		.loc 14 247 28 is_stmt 1 discriminator 2 view .LVU2336
 10079 00b4 5036     		adds	r6, r6, #80
 247:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10080              		.loc 14 247 38 is_stmt 0 discriminator 2 view .LVU2337
 10081 00b6 0433     		adds	r3, r3, #4
 247:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10082              		.loc 14 247 28 discriminator 2 view .LVU2338
 10083 00b8 A342     		cmp	r3, r4
 10084 00ba 1BDD     		ble	.L585
 10085              	.L569:
 248:Jellybeans.cpp ****         if (i < (int) menuItems.size()){
 10086              		.loc 14 248 9 is_stmt 1 view .LVU2339
 10087 00bc 092C     		cmp	r4, #9
 10088 00be F7DC     		bgt	.L567
 249:Jellybeans.cpp ****             DrawString(menuItems[i].DisplayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10089              		.loc 14 249 13 view .LVU2340
 10090              	.LVL676:
 10091              	.LBB7211:
 10092              	.LBI7211:
 10093              		.loc 24 185 7 view .LVU2341
 10094              	.LBB7212:
 10095              	.LBI7212:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 10096              		.loc 24 55 7 view .LVU2342
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 10097              		.loc 24 55 7 is_stmt 0 view .LVU2343
 10098              	.LBE7212:
 10099              	.LBE7211:
 249:Jellybeans.cpp ****             DrawString(menuItems[i].DisplayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10100              		.loc 14 249 50 view .LVU2344
 10101 00c0 3146     		mov	r1, r6
 10102 00c2 02A8     		add	r0, sp, #8
 10103              	.LVL677:
 249:Jellybeans.cpp ****             DrawString(menuItems[i].DisplayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10104              		.loc 14 249 50 view .LVU2345
 10105 00c4 FFF7FEFF 		bl	_ZN10jellybeans8MenuItem12DisplayValueB5cxx11Ev
 10106              	.LVL678:
 249:Jellybeans.cpp ****             DrawString(menuItems[i].DisplayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10107              		.loc 14 249 67 view .LVU2346
 10108 00c8 3B68     		ldr	r3, [r7]
 249:Jellybeans.cpp ****             DrawString(menuItems[i].DisplayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 401


 10109              		.loc 14 249 23 view .LVU2347
 10110 00ca 02A8     		add	r0, sp, #8
 10111              	.LVL679:
 249:Jellybeans.cpp ****             DrawString(menuItems[i].DisplayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10112              		.loc 14 249 23 view .LVU2348
 10113 00cc 0721     		movs	r1, #7
 249:Jellybeans.cpp ****             DrawString(menuItems[i].DisplayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10114              		.loc 14 249 67 view .LVU2349
 10115 00ce E31A     		subs	r3, r4, r3
 249:Jellybeans.cpp ****             DrawString(menuItems[i].DisplayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10116              		.loc 14 249 78 view .LVU2350
 10117 00d0 03EB8303 		add	r3, r3, r3, lsl #2
 10118 00d4 5A00     		lsls	r2, r3, #1
 249:Jellybeans.cpp ****             DrawString(menuItems[i].DisplayValue(), fontWidth, (i - menuPos) * fontHeight + 12);
 10119              		.loc 14 249 23 view .LVU2351
 10120 00d6 0C32     		adds	r2, r2, #12
 10121 00d8 FFF7FEFF 		bl	_Z10DrawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
 10122              	.LVL680:
 10123              	.LBB7213:
 10124              	.LBI7213:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 10125              		.loc 19 657 7 is_stmt 1 view .LVU2352
 10126              	.LBB7214:
 10127              	.LBB7215:
 10128              	.LBI7215:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10129              		.loc 19 229 7 view .LVU2353
 10130              	.LBB7216:
 10131              	.LBB7217:
 10132              	.LBI7217:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 10133              		.loc 19 221 7 view .LVU2354
 10134              	.LBB7218:
 10135              	.LBI7218:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10136              		.loc 19 186 7 view .LVU2355
 10137              	.LBB7219:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10138              		.loc 19 187 28 is_stmt 0 view .LVU2356
 10139 00dc 0298     		ldr	r0, [sp, #8]
 10140              	.LVL681:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10141              		.loc 19 187 28 view .LVU2357
 10142              	.LBE7219:
 10143              	.LBE7218:
 10144              	.LBB7220:
 10145              	.LBI7220:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10146              		.loc 19 200 7 is_stmt 1 view .LVU2358
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10147              		.loc 19 200 7 is_stmt 0 view .LVU2359
 10148              	.LBE7220:
 10149              	.LBE7217:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10150              		.loc 19 231 2 view .LVU2360
 10151 00de A842     		cmp	r0, r5
 10152 00e0 E6D0     		beq	.L567
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 402


 10153              	.LVL682:
 10154              	.LBB7221:
 10155              	.LBI7221:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10156              		.loc 19 236 7 is_stmt 1 view .LVU2361
 10157              	.LBB7222:
 10158              	.LBB7223:
 10159              	.LBI7223:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10160              		.loc 25 491 7 view .LVU2362
 10161              	.LBB7224:
 10162              	.LBI7224:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10163              		.loc 22 120 7 view .LVU2363
 10164              	.LBE7224:
 10165              	.LBE7223:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10166              		.loc 19 237 34 is_stmt 0 view .LVU2364
 10167 00e2 0499     		ldr	r1, [sp, #16]
 10168              	.LBB7227:
 10169              	.LBB7226:
 10170              	.LBB7225:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10171              		.loc 22 133 19 view .LVU2365
 10172 00e4 0131     		adds	r1, r1, #1
 10173              	.LVL683:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10174              		.loc 22 133 19 view .LVU2366
 10175 00e6 FFF7FEFF 		bl	_ZdlPvj
 10176              	.LVL684:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10177              		.loc 22 133 19 view .LVU2367
 10178              	.LBE7225:
 10179              	.LBE7226:
 10180              	.LBE7227:
 10181              	.LBE7222:
 10182              	.LBE7221:
 10183              	.LBE7216:
 10184              	.LBE7215:
 10185              	.LBB7231:
 10186              	.LBI7231:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10187              		.loc 19 150 14 is_stmt 1 view .LVU2368
 10188              	.LBB7232:
 10189              	.LBI7232:
 10190              		.loc 21 162 7 view .LVU2369
 10191              	.LBB7233:
 10192              	.LBI7233:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10193              		.loc 22 89 7 view .LVU2370
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10194              		.loc 22 89 7 is_stmt 0 view .LVU2371
 10195              	.LBE7233:
 10196              	.LBE7232:
 10197              	.LBE7231:
 10198              	.LBB7234:
 10199              	.LBB7230:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 403


 10200              	.LBB7229:
 10201              	.LBB7228:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10202              		.loc 19 237 79 view .LVU2372
 10203 00ea E1E7     		b	.L567
 10204              	.LVL685:
 10205              	.L564:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10206              		.loc 19 237 79 view .LVU2373
 10207              	.LBE7228:
 10208              	.LBE7229:
 10209              	.LBE7230:
 10210              	.LBE7234:
 10211              	.LBE7214:
 10212              	.LBE7213:
 10213              	.LBE7210:
 10214              	.LBB7235:
 10215              	.LBB7188:
 10216              	.LBB7184:
 10217              	.LBB7180:
 10218              	.LBB7176:
 10219              	.LBB7172:
 10220              	.LBB7168:
 10221              	.LBB7164:
 10222              	.LBB7160:
 10223              	.LBB7145:
 10224              	.LBB7123:
 10225              	.LBB7120:
 10226              	.LBB7111:
 10227              	.LBI7111:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10228              		.loc 19 346 7 is_stmt 1 view .LVU2374
 10229              	.LBB7112:
 10230              	.LBI7112:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 10231              		.loc 20 387 7 view .LVU2375
 10232              	.LBB7113:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 10233              		.loc 20 389 2 view .LVU2376
 10234 00ec 002C     		cmp	r4, #0
 10235 00ee 49D1     		bne	.L586
 10236 00f0 2A46     		mov	r2, r5
 10237 00f2 C6E7     		b	.L565
 10238              	.LVL686:
 10239              	.L585:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 10240              		.loc 20 389 2 is_stmt 0 view .LVU2377
 10241 00f4 264E     		ldr	r6, .L587
 10242              	.LBE7113:
 10243              	.LBE7112:
 10244              	.LBE7111:
 10245              	.LBE7120:
 10246              	.LBE7123:
 10247              	.LBE7145:
 10248              	.LBE7160:
 10249              	.LBE7164:
 10250              	.LBE7168:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 404


 10251              	.LBE7172:
 10252              	.LBE7176:
 10253              	.LBE7180:
 10254              	.LBE7184:
 10255              	.LBE7188:
 10256              	.LBE7235:
 10257              	.LBB7236:
 247:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10258              		.loc 14 247 28 view .LVU2378
 10259 00f6 B024     		movs	r4, #176
 10260              	.LVL687:
 10261              	.L570:
 247:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 10262              		.loc 14 247 28 view .LVU2379
 10263 00f8 0025     		movs	r5, #0
 10264              	.LBE7236:
 10265              	.LBB7237:
 10266              	.LBB7238:
 10267              	.LBB7239:
 10268              	.LBB7240:
 10269              	.LBB7241:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 10270              		.loc 15 111 23 view .LVU2380
 10271 00fa 2B48     		ldr	r0, .L587+24
 10272 00fc 8DF80840 		strb	r4, [sp, #8]
 10273              	.LVL688:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 10274              		.loc 15 111 23 view .LVU2381
 10275              	.LBE7241:
 10276              	.LBI7240:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 10277              		.loc 15 109 10 is_stmt 1 view .LVU2382
 10278              	.LBB7242:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 10279              		.loc 15 111 9 view .LVU2383
 10280              	.LBE7242:
 10281              	.LBE7240:
 10282              		.loc 15 270 22 is_stmt 0 view .LVU2384
 10283 0100 0134     		adds	r4, r4, #1
 10284              	.LVL689:
 10285              	.LBB7245:
 10286              	.LBB7243:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 10287              		.loc 15 111 23 view .LVU2385
 10288 0102 2946     		mov	r1, r5
 10289 0104 FFF7FEFF 		bl	dsy_gpio_write
 10290              	.LVL690:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10291              		.loc 15 112 9 is_stmt 1 view .LVU2386
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10292              		.loc 15 112 30 is_stmt 0 view .LVU2387
 10293 0108 6423     		movs	r3, #100
 10294 010a 0122     		movs	r2, #1
 10295 010c 02A9     		add	r1, sp, #8
 10296              	.LVL691:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10297              		.loc 15 112 30 view .LVU2388
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 405


 10298 010e 2748     		ldr	r0, .L587+28
 10299              	.LVL692:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10300              		.loc 15 112 30 view .LVU2389
 10301              	.LBE7243:
 10302              	.LBE7245:
 10303              		.loc 15 270 22 view .LVU2390
 10304 0110 E4B2     		uxtb	r4, r4
 10305              	.LBB7246:
 10306              	.LBB7244:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10307              		.loc 15 112 30 view .LVU2391
 10308 0112 FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 10309              	.LVL693:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10310              		.loc 15 112 30 view .LVU2392
 10311              	.LBE7244:
 10312              	.LBE7246:
 10313              	.LBB7247:
 10314              	.LBB7248:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 10315              		.loc 15 111 23 view .LVU2393
 10316 0116 2946     		mov	r1, r5
 10317 0118 2348     		ldr	r0, .L587+24
 10318 011a 8DF80850 		strb	r5, [sp, #8]
 10319              	.LVL694:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 10320              		.loc 15 111 23 view .LVU2394
 10321              	.LBE7248:
 10322              	.LBI7247:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 10323              		.loc 15 109 10 is_stmt 1 view .LVU2395
 10324              	.LBB7249:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 10325              		.loc 15 111 9 view .LVU2396
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 10326              		.loc 15 111 23 is_stmt 0 view .LVU2397
 10327 011e FFF7FEFF 		bl	dsy_gpio_write
 10328              	.LVL695:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10329              		.loc 15 112 9 is_stmt 1 view .LVU2398
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10330              		.loc 15 112 30 is_stmt 0 view .LVU2399
 10331 0122 0122     		movs	r2, #1
 10332 0124 6423     		movs	r3, #100
 10333 0126 02A9     		add	r1, sp, #8
 10334              	.LVL696:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10335              		.loc 15 112 30 view .LVU2400
 10336 0128 2048     		ldr	r0, .L587+28
 10337              	.LVL697:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10338              		.loc 15 112 30 view .LVU2401
 10339 012a FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 10340              	.LVL698:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10341              		.loc 15 112 30 view .LVU2402
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 406


 10342 012e 1023     		movs	r3, #16
 10343              	.LBE7249:
 10344              	.LBE7247:
 10345              	.LBB7250:
 10346              	.LBB7251:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 10347              		.loc 15 111 23 view .LVU2403
 10348 0130 2946     		mov	r1, r5
 10349 0132 1D48     		ldr	r0, .L587+24
 10350 0134 8DF80830 		strb	r3, [sp, #8]
 10351              	.LVL699:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 10352              		.loc 15 111 23 view .LVU2404
 10353              	.LBE7251:
 10354              	.LBI7250:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 10355              		.loc 15 109 10 is_stmt 1 view .LVU2405
 10356              	.LBB7252:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 10357              		.loc 15 111 9 view .LVU2406
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 10358              		.loc 15 111 23 is_stmt 0 view .LVU2407
 10359 0138 FFF7FEFF 		bl	dsy_gpio_write
 10360              	.LVL700:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10361              		.loc 15 112 9 is_stmt 1 view .LVU2408
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10362              		.loc 15 112 30 is_stmt 0 view .LVU2409
 10363 013c 6423     		movs	r3, #100
 10364 013e 0122     		movs	r2, #1
 10365 0140 02A9     		add	r1, sp, #8
 10366              	.LVL701:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10367              		.loc 15 112 30 view .LVU2410
 10368 0142 1A48     		ldr	r0, .L587+28
 10369              	.LVL702:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10370              		.loc 15 112 30 view .LVU2411
 10371 0144 FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 10372              	.LVL703:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10373              		.loc 15 112 30 view .LVU2412
 10374              	.LBE7252:
 10375              	.LBE7250:
 10376              	.LBB7253:
 10377              	.LBI7253:
 115:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 10378              		.loc 15 115 10 is_stmt 1 view .LVU2413
 10379              	.LBB7254:
 117:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 10380              		.loc 15 117 9 view .LVU2414
 117:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 10381              		.loc 15 117 23 is_stmt 0 view .LVU2415
 10382 0148 0121     		movs	r1, #1
 10383 014a 1748     		ldr	r0, .L587+24
 10384 014c FFF7FEFF 		bl	dsy_gpio_write
 10385              	.LVL704:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 407


 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10386              		.loc 15 118 9 is_stmt 1 view .LVU2416
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10387              		.loc 15 118 30 is_stmt 0 view .LVU2417
 10388 0150 8022     		movs	r2, #128
 10389 0152 3146     		mov	r1, r6
 10390 0154 6423     		movs	r3, #100
 10391 0156 1548     		ldr	r0, .L587+28
 10392              	.LVL705:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10393              		.loc 15 118 30 view .LVU2418
 10394              	.LBE7254:
 10395              	.LBE7253:
 10396              		.loc 15 270 22 view .LVU2419
 10397 0158 1644     		add	r6, r6, r2
 10398              	.LVL706:
 10399              	.LBB7256:
 10400              	.LBB7255:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10401              		.loc 15 118 30 view .LVU2420
 10402 015a FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 10403              	.LVL707:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 10404              		.loc 15 118 30 view .LVU2421
 10405              	.LBE7255:
 10406              	.LBE7256:
 10407              		.loc 15 270 9 is_stmt 1 view .LVU2422
 10408              		.loc 15 270 22 view .LVU2423
 10409 015e B82C     		cmp	r4, #184
 10410 0160 CAD1     		bne	.L570
 10411              	.LBE7239:
 10412              	.LBE7238:
 10413              	.LBE7237:
 255:Jellybeans.cpp **** }
 10414              		.loc 14 255 1 is_stmt 0 view .LVU2424
 10415 0162 09B0     		add	sp, sp, #36
 10416              		.cfi_remember_state
 10417              		.cfi_def_cfa_offset 20
 10418              		@ sp needed
 10419 0164 F0BD     		pop	{r4, r5, r6, r7, pc}
 10420              	.LVL708:
 10421              	.L584:
 10422              		.cfi_restore_state
 10423              	.LBB7257:
 10424              	.LBB7189:
 10425              	.LBB7185:
 10426              	.LBB7181:
 10427              	.LBB7177:
 10428              	.LBB7173:
 10429              	.LBB7169:
 10430              	.LBB7165:
 10431              	.LBB7161:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 10432              		.loc 23 219 13 view .LVU2425
 10433 0166 0022     		movs	r2, #0
 10434 0168 01A9     		add	r1, sp, #4
 10435 016a 02A8     		add	r0, sp, #8
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 408


 10436              	.LVL709:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 10437              		.loc 23 219 13 view .LVU2426
 10438 016c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 10439              	.LVL710:
 10440              	.LBB7146:
 10441              	.LBI7146:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 10442              		.loc 19 178 7 is_stmt 1 view .LVU2427
 10443              	.LBE7146:
 10444              	.LBB7148:
 10445              	.LBB7149:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10446              		.loc 19 211 31 is_stmt 0 view .LVU2428
 10447 0170 019B     		ldr	r3, [sp, #4]
 10448              	.LBE7149:
 10449              	.LBE7148:
 10450              	.LBB7151:
 10451              	.LBB7147:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10452              		.loc 19 179 26 view .LVU2429
 10453 0172 0290     		str	r0, [sp, #8]
 10454              	.LVL711:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10455              		.loc 19 179 26 view .LVU2430
 10456              	.LBE7147:
 10457              	.LBE7151:
 10458              	.LBB7152:
 10459              	.LBI7148:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 10460              		.loc 19 210 7 is_stmt 1 view .LVU2431
 10461              	.LBB7150:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10462              		.loc 19 211 31 is_stmt 0 view .LVU2432
 10463 0174 0493     		str	r3, [sp, #16]
 10464              	.LVL712:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10465              		.loc 19 211 31 view .LVU2433
 10466              	.LBE7150:
 10467              	.LBE7152:
 10468              	.LBB7153:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10469              		.loc 19 186 7 is_stmt 1 view .LVU2434
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10470              		.loc 19 186 7 is_stmt 0 view .LVU2435
 10471              	.LBE7153:
 10472              	.LBB7154:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 10473              		.loc 19 392 7 is_stmt 1 view .LVU2436
 10474              	.LBB7124:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10475              		.loc 19 346 7 view .LVU2437
 10476              	.LBB7121:
 10477              	.LBB7118:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10478              		.loc 19 346 7 view .LVU2438
 10479              	.LBB7116:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 409


 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 10480              		.loc 20 387 7 view .LVU2439
 10481              	.LBB7114:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 10482              		.loc 20 389 2 view .LVU2440
 10483              	.L563:
 10484              		.loc 20 395 2 view .LVU2441
 10485              		.loc 20 395 49 is_stmt 0 view .LVU2442
 10486 0176 2246     		mov	r2, r4
 10487 0178 3146     		mov	r1, r6
 10488 017a FFF7FEFF 		bl	memcpy
 10489              	.LVL713:
 10490              		.loc 20 395 49 view .LVU2443
 10491              	.LBE7114:
 10492              	.LBE7116:
 10493              	.LBE7118:
 10494              	.LBE7121:
 10495              	.LBE7124:
 10496              	.LBE7154:
 10497              	.LBB7155:
 10498              	.LBB7142:
 10499              	.LBB7139:
 10500              	.LBB7136:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10501              		.loc 19 187 28 view .LVU2444
 10502 017e DDE90142 		ldrd	r4, r2, [sp, #4]
 10503              	.LVL714:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10504              		.loc 19 187 28 view .LVU2445
 10505              	.LBE7136:
 10506              	.LBE7139:
 10507              	.LBE7142:
 10508              	.LBE7155:
 10509              	.LBB7156:
 10510              	.LBB7125:
 10511              	.LBB7122:
 10512              	.LBB7119:
 10513              	.LBB7117:
 10514              	.LBB7115:
 10515              		.loc 20 395 66 view .LVU2446
 10516 0182 7EE7     		b	.L565
 10517              	.LVL715:
 10518              	.L586:
 10519              		.loc 20 395 66 view .LVU2447
 10520              	.LBE7115:
 10521              	.LBE7117:
 10522              	.LBE7119:
 10523              	.LBE7122:
 10524              	.LBE7125:
 10525              	.LBE7156:
 10526              	.LBB7157:
 10527              	.LBB7105:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10528              		.loc 19 187 28 view .LVU2448
 10529 0184 2846     		mov	r0, r5
 10530 0186 F6E7     		b	.L563
 10531              	.LVL716:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 410


 10532              	.L583:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10533              		.loc 19 187 28 view .LVU2449
 10534              	.LBE7105:
 10535              	.LBE7157:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 10536              		.loc 23 212 28 view .LVU2450
 10537 0188 0948     		ldr	r0, .L587+32
 10538 018a FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 10539              	.LVL717:
 10540              	.L588:
 10541 018e 00BF     		.align	2
 10542              	.L587:
 10543 0190 B4910000 		.word	patch+37300
 10544 0194 33920000 		.word	patch+37427
 10545 0198 B3940000 		.word	patch+38067
 10546 019c 00000000 		.word	.LANCHOR12
 10547 01a0 00000000 		.word	.LANCHOR10
 10548 01a4 00000000 		.word	.LANCHOR2
 10549 01a8 B0910000 		.word	patch+37296
 10550 01ac A8910000 		.word	patch+37288
 10551 01b0 00000000 		.word	.LC9
 10552              	.LBE7161:
 10553              	.LBE7165:
 10554              	.LBE7169:
 10555              	.LBE7173:
 10556              	.LBE7177:
 10557              	.LBE7181:
 10558              	.LBE7185:
 10559              	.LBE7189:
 10560              	.LBE7257:
 10561              		.cfi_endproc
 10562              	.LFE5122:
 10564              		.section	.rodata._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16i
 10565              		.align	2
 10566              	.LC10:
 10567 0000 63616E6E 		.ascii	"cannot create std::vector larger than max_size()\000"
 10567      6F742063 
 10567      72656174 
 10567      65207374 
 10567      643A3A76 
 10568              		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16ini
 10569              		.align	1
 10570              		.p2align 2,,3
 10571              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_
 10572              		.syntax unified
 10573              		.thumb
 10574              		.thumb_func
 10575              		.fpu fpv5-d16
 10577              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5
 10578              	.LVL718:
 10579              	.LFB5460:
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 10580              		.loc 26 625 7 is_stmt 1 view -0
 10581              		.cfi_startproc
 10582              		@ args = 0, pretend = 0, frame = 16
 10583              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 411


 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 10584              		.loc 26 625 7 is_stmt 0 view .LVU2452
 10585 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 10586              		.cfi_def_cfa_offset 32
 10587              		.cfi_offset 4, -32
 10588              		.cfi_offset 5, -28
 10589              		.cfi_offset 6, -24
 10590              		.cfi_offset 7, -20
 10591              		.cfi_offset 8, -16
 10592              		.cfi_offset 9, -12
 10593              		.cfi_offset 10, -8
 10594              		.cfi_offset 14, -4
 10595 0004 84B0     		sub	sp, sp, #16
 10596              		.cfi_def_cfa_offset 48
 10597              	.LBB7355:
 10598              	.LBB7356:
 10599              	.LBB7357:
 10600              	.LBB7358:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 10601              		.loc 26 98 47 view .LVU2453
 10602 0006 0024     		movs	r4, #0
 10603              	.LBE7358:
 10604              	.LBE7357:
 10605              	.LBE7356:
 10606              	.LBE7355:
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 10607              		.loc 26 625 7 view .LVU2454
 10608 0008 6B46     		mov	r3, sp
 10609              	.LVL719:
 10610              	.LBB7369:
 10611              	.LBB7366:
 10612              	.LBB7361:
 10613              	.LBB7359:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 10614              		.loc 26 98 47 view .LVU2455
 10615 000a 8460     		str	r4, [r0, #8]
 10616              	.LBE7359:
 10617              	.LBE7361:
 10618              	.LBE7366:
 10619              	.LBE7369:
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 10620              		.loc 26 625 7 view .LVU2456
 10621 000c 83E80600 		stm	r3, {r1, r2}
 10622              	.LVL720:
 10623              	.LBB7370:
 10624              	.LBI7355:
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 10625              		.loc 26 293 7 is_stmt 1 view .LVU2457
 10626              	.LBB7367:
 10627              	.LBI7356:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 10628              		.loc 26 136 2 view .LVU2458
 10629              	.LBB7362:
 10630              	.LBI7362:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10631              		.loc 21 147 7 view .LVU2459
 10632              	.LBB7363:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 412


 10633              	.LBI7363:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10634              		.loc 22 82 7 view .LVU2460
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10635              		.loc 22 82 7 is_stmt 0 view .LVU2461
 10636              	.LBE7363:
 10637              	.LBE7362:
 10638              	.LBB7364:
 10639              	.LBI7357:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 10640              		.loc 26 97 2 is_stmt 1 view .LVU2462
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 10641              		.loc 26 97 2 is_stmt 0 view .LVU2463
 10642              	.LBE7364:
 10643              	.LBE7367:
 10644              	.LBE7370:
 10645              	.LBB7371:
 10646              	.LBI7371:
 10647              		.file 36 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\initializ
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // std::initializer_list support -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // Copyright (C) 2008-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // This file is part of GCC.
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GCC is free software; you can redistribute it and/or modify
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // it under the terms of the GNU General Public License as published by
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // the Free Software Foundation; either version 3, or (at your option)
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // any later version.
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GCC is distributed in the hope that it will be useful,
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GNU General Public License for more details.
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // Under Section 7 of GPL version 3, you are granted additional
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // permissions described in the GCC Runtime Library Exception, version
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // 3.1, as published by the Free Software Foundation.
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // You should have received a copy of the GNU General Public License and
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // a copy of the GCC Runtime Library Exception along with this program;
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // <http://www.gnu.org/licenses/>.
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** /** @file initializer_list
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****  *  This is a Standard C++ Library header.
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #ifndef _INITIALIZER_LIST
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #define _INITIALIZER_LIST
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #pragma GCC system_header
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #if __cplusplus < 201103L
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** # include <bits/c++0x_warning.h>
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #else // C++0x
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 413


  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #pragma GCC visibility push(default)
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #include <bits/c++config.h>
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** namespace std
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** {
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****   /// initializer_list
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****   template<class _E>
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****     class initializer_list
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****     {
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****     public:
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef _E 		value_type;
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E& 	reference;
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E& 	const_reference;
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef size_t 		size_type;
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E* 	iterator;
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E* 	const_iterator;
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****     private:
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       iterator			_M_array;
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       size_type			_M_len;
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // The compiler can call a private constructor.
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr initializer_list(const_iterator __a, size_type __l)
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       : _M_array(__a), _M_len(__l) { }
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****     public:
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr initializer_list() noexcept
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       : _M_array(0), _M_len(0) { }
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // Number of elements.
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr size_type
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       size() const noexcept { return _M_len; }
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // First element.
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr const_iterator
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       begin() const noexcept { return _M_array; }
 10648              		.loc 36 75 7 is_stmt 1 view .LVU2464
 10649              		.loc 36 75 7 is_stmt 0 view .LVU2465
 10650              	.LBE7371:
 10651              	.LBB7372:
 10652              	.LBI7372:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // One past the last element.
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr const_iterator
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       end() const noexcept { return begin() + size(); }
 10653              		.loc 36 79 7 is_stmt 1 view .LVU2466
 10654              	.LBB7373:
 10655              	.LBB7374:
 10656              	.LBI7374:
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 10657              		.loc 36 71 7 view .LVU2467
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 10658              		.loc 36 71 7 is_stmt 0 view .LVU2468
 10659              	.LBE7374:
 10660              		.loc 36 79 45 view .LVU2469
 10661 0010 02EB4203 		add	r3, r2, r2, lsl #1
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 414


 10662              	.LVL721:
 10663              		.loc 36 79 45 view .LVU2470
 10664              	.LBE7373:
 10665              	.LBE7372:
 10666              	.LBB7376:
 10667              	.LBB7377:
 10668              	.LBB7378:
 10669              	.LBB7379:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 10670              		.loc 26 1769 2 view .LVU2471
 10671 0014 2F4A     		ldr	r2, .L615
 10672 0016 B2EBC30F 		cmp	r2, r3, lsl #3
 10673              	.LBE7379:
 10674              	.LBE7378:
 10675              	.LBE7377:
 10676              	.LBE7376:
 10677              	.LBB7558:
 10678              	.LBB7375:
 10679              		.loc 36 79 52 view .LVU2472
 10680 001a 01EBC309 		add	r9, r1, r3, lsl #3
 10681              	.LVL722:
 10682              		.loc 36 79 52 view .LVU2473
 10683              	.LBE7375:
 10684              	.LBE7558:
 10685              	.LBB7559:
 10686              	.LBI7376:
1577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
 10687              		.loc 26 1577 2 is_stmt 1 view .LVU2474
 10688              	.LBB7553:
 10689              	.LBB7387:
 10690              	.LBI7378:
1767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 10691              		.loc 26 1767 7 view .LVU2475
 10692              	.LBB7384:
 10693              	.LBB7380:
 10694              	.LBI7380:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10695              		.loc 21 147 7 view .LVU2476
 10696              	.LBB7381:
 10697              	.LBI7381:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10698              		.loc 22 82 7 view .LVU2477
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10699              		.loc 22 82 7 is_stmt 0 view .LVU2478
 10700              	.LBE7381:
 10701              	.LBE7380:
 10702              	.LBB7382:
 10703              	.LBI7382:
 10704              		.loc 21 162 7 is_stmt 1 view .LVU2479
 10705              	.LBB7383:
 10706              	.LBI7383:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10707              		.loc 22 89 7 view .LVU2480
 10708              	.LBE7383:
 10709              	.LBE7382:
 10710              	.LBE7384:
 10711              	.LBE7387:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 415


 10712              	.LBE7553:
 10713              	.LBE7559:
 10714              	.LBB7560:
 10715              	.LBB7368:
 10716              	.LBB7365:
 10717              	.LBB7360:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 10718              		.loc 26 98 47 is_stmt 0 view .LVU2481
 10719 001e C0E90044 		strd	r4, r4, [r0]
 10720              	.LBE7360:
 10721              	.LBE7365:
 10722              	.LBE7368:
 10723              	.LBE7560:
 10724              	.LBB7561:
 10725              	.LBB7554:
 10726              	.LBB7388:
 10727              	.LBB7385:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 10728              		.loc 26 1769 2 view .LVU2482
 10729 0022 53D3     		bcc	.L611
 10730              	.LVL723:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 10731              		.loc 26 1769 2 view .LVU2483
 10732              	.LBE7385:
 10733              	.LBE7388:
 10734              	.LBB7389:
 10735              	.LBI7389:
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 10736              		.loc 26 343 7 is_stmt 1 view .LVU2484
 10737 0024 DC00     		lsls	r4, r3, #3
 10738              	.LVL724:
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 10739              		.loc 26 343 7 is_stmt 0 view .LVU2485
 10740 0026 8046     		mov	r8, r0
 10741              	.LBB7390:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 10742              		.loc 26 346 18 view .LVU2486
 10743 0028 002C     		cmp	r4, #0
 10744 002a 43D0     		beq	.L591
 10745 002c 0E46     		mov	r6, r1
 10746              	.LVL725:
 10747              	.LBB7391:
 10748              	.LBI7391:
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 10749              		.loc 25 459 7 is_stmt 1 view .LVU2487
 10750              	.LBB7392:
 10751              	.LBI7392:
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10752              		.loc 22 103 7 view .LVU2488
 10753              	.LBB7393:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 10754              		.loc 22 115 41 is_stmt 0 view .LVU2489
 10755 002e 2046     		mov	r0, r4
 10756              	.LVL726:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 10757              		.loc 22 115 41 view .LVU2490
 10758 0030 FFF7FEFF 		bl	_Znwj
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 416


 10759              	.LVL727:
 10760              	.LBE7393:
 10761              	.LBE7392:
 10762              	.LBE7391:
 10763              	.LBE7390:
 10764              	.LBE7389:
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 10765              		.loc 26 1583 61 view .LVU2491
 10766 0034 0444     		add	r4, r4, r0
 10767              	.LVL728:
 10768              	.LBB7399:
 10769              	.LBB7400:
 10770              	.LBB7401:
 10771              	.LBB7402:
 10772              	.LBB7403:
 10773              		.file 37 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 417


  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus > 201402L
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <bits/stl_pair.h>
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <type_traits>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <ext/alloc_traits.h>
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** {
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /** @addtogroup memory
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @{
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    */
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __first != __last; ++__first, (void)++__cur)
 10774              		.loc 37 90 23 view .LVU2492
 10775 0036 B145     		cmp	r9, r6
 10776              	.LBE7403:
 10777              	.LBE7402:
 10778              	.LBE7401:
 10779              	.LBE7400:
 10780              	.LBE7399:
 10781              	.LBB7545:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 418


 10782              	.LBB7397:
 10783              	.LBB7396:
 10784              	.LBB7395:
 10785              	.LBB7394:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 10786              		.loc 22 115 41 view .LVU2493
 10787 0038 0746     		mov	r7, r0
 10788              	.LVL729:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 10789              		.loc 22 115 41 view .LVU2494
 10790              	.LBE7394:
 10791              	.LBE7395:
 10792              	.LBE7396:
 10793              	.LBE7397:
 10794              	.LBE7545:
 10795              	.LBB7546:
 10796              	.LBI7399:
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy<true>
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType1;
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 419


 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType2;
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::copy
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType2, decltype(*__first)>::value,
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from value type of input range");
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::copy
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::copy:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __assignable>::
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill<true>
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 420


 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       const _Tp& __x)
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 421


 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  any of the POD optimizations.
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 422


 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __first != __last; ++__first, (void)++__cur)
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 10797              		.loc 37 323 5 is_stmt 1 view .LVU2495
 10798              	.LBB7540:
 10799              	.LBB7535:
 10800              	.LBB7530:
 10801              	.LBB7525:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 10802              		.loc 37 90 23 view .LVU2496
 10803              	.LBE7525:
 10804              	.LBE7530:
 10805              	.LBE7535:
 10806              	.LBE7540:
 10807              	.LBE7546:
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 10808              		.loc 26 1583 36 is_stmt 0 view .LVU2497
 10809 003a C8F80840 		str	r4, [r8, #8]
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 10810              		.loc 26 1582 6 view .LVU2498
 10811 003e C8F80000 		str	r0, [r8]
 10812              	.LBB7547:
 10813              	.LBB7541:
 10814              	.LBB7536:
 10815              	.LBB7531:
 10816              	.LBB7526:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 10817              		.loc 37 90 23 view .LVU2499
 10818 0042 3AD0     		beq	.L592
 10819 0044 00F11804 		add	r4, r0, #24
 10820 0048 0BE0     		b	.L598
 10821              	.LVL730:
 10822              	.L614:
 10823              	.LBB7404:
 10824              	.LBB7405:
 10825              	.LBB7406:
 10826              	.LBB7407:
 10827              	.LBB7408:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 423


 10828              	.LBB7409:
 10829              	.LBB7410:
 10830              	.LBB7411:
 10831              	.LBB7412:
 10832              	.LBB7413:
 10833              	.LBB7414:
 10834              	.LBB7415:
 10835              	.LBB7416:
 10836              	.LBI7416:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 10837              		.loc 20 321 7 is_stmt 1 view .LVU2500
 10838              	.LBB7417:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10839              		.loc 20 322 9 view .LVU2501
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10840              		.loc 20 322 16 is_stmt 0 view .LVU2502
 10841 004a 9AF80030 		ldrb	r3, [r10]	@ zero_extendqisi2
 10842              	.LVL731:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10843              		.loc 20 322 14 view .LVU2503
 10844 004e 04F8103C 		strb	r3, [r4, #-16]
 10845              	.LVL732:
 10846              	.L597:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10847              		.loc 20 322 14 view .LVU2504
 10848              	.LBE7417:
 10849              	.LBE7416:
 10850              	.LBE7415:
 10851              	.LBE7414:
 10852              	.LBE7413:
 10853              	.LBB7438:
 10854              	.LBI7438:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10855              		.loc 19 214 7 is_stmt 1 view .LVU2505
 10856              	.LBB7439:
 10857              	.LBB7440:
 10858              	.LBI7440:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 10859              		.loc 19 182 7 view .LVU2506
 10860              	.LBE7440:
 10861              	.LBE7439:
 10862              	.LBE7438:
 10863              	.LBE7412:
 10864              	.LBE7411:
 10865              	.LBE7410:
 10866              	.LBE7409:
 10867              	.LBE7408:
 10868              	.LBE7407:
 10869              	.LBE7406:
 10870              	.LBE7405:
 10871              	.LBE7404:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 10872              		.loc 37 90 8 is_stmt 0 view .LVU2507
 10873 0052 1836     		adds	r6, r6, #24
 10874              	.LBB7520:
 10875              	.LBB7516:
 10876              	.LBB7512:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 424


 10877              	.LBB7491:
 10878              	.LBB7487:
 10879              	.LBB7483:
 10880              	.LBB7479:
 10881              	.LBB7475:
 10882              	.LBB7471:
 10883              	.LBB7455:
 10884              	.LBB7452:
 10885              	.LBB7442:
 10886              	.LBB7443:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10887              		.loc 20 322 14 view .LVU2508
 10888 0054 0023     		movs	r3, #0
 10889              	.LBE7443:
 10890              	.LBE7442:
 10891              	.LBB7446:
 10892              	.LBB7441:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10893              		.loc 19 183 26 view .LVU2509
 10894 0056 44F8145C 		str	r5, [r4, #-20]
 10895              	.LVL733:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10896              		.loc 19 183 26 view .LVU2510
 10897              	.LBE7441:
 10898              	.LBE7446:
 10899              	.LBB7447:
 10900              	.LBI7447:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10901              		.loc 19 186 7 is_stmt 1 view .LVU2511
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10902              		.loc 19 186 7 is_stmt 0 view .LVU2512
 10903              	.LBE7447:
 10904              	.LBB7449:
 10905              	.LBI7442:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 10906              		.loc 20 321 7 is_stmt 1 view .LVU2513
 10907              	.LBB7444:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10908              		.loc 20 322 9 view .LVU2514
 10909              	.LBE7444:
 10910              	.LBE7449:
 10911              	.LBE7452:
 10912              	.LBE7455:
 10913              	.LBE7471:
 10914              	.LBE7475:
 10915              	.LBE7479:
 10916              	.LBE7483:
 10917              	.LBE7487:
 10918              	.LBE7491:
 10919              	.LBE7512:
 10920              	.LBE7516:
 10921              	.LBE7520:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 10922              		.loc 37 90 23 is_stmt 0 view .LVU2515
 10923 005a 1834     		adds	r4, r4, #24
 10924              	.LVL734:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 425


 10925              		.loc 37 90 23 view .LVU2516
 10926 005c B145     		cmp	r9, r6
 10927              	.LBB7521:
 10928              	.LBB7517:
 10929              	.LBB7513:
 10930              	.LBB7492:
 10931              	.LBB7488:
 10932              	.LBB7484:
 10933              	.LBB7480:
 10934              	.LBB7476:
 10935              	.LBB7472:
 10936              	.LBB7456:
 10937              	.LBB7453:
 10938              	.LBB7450:
 10939              	.LBB7445:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10940              		.loc 20 322 14 view .LVU2517
 10941 005e 4355     		strb	r3, [r0, r5]
 10942              	.LVL735:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10943              		.loc 20 322 14 view .LVU2518
 10944              	.LBE7445:
 10945              	.LBE7450:
 10946              	.LBE7453:
 10947              	.LBE7456:
 10948              	.LBE7472:
 10949              	.LBE7476:
 10950              	.LBE7480:
 10951              	.LBE7484:
 10952              	.LBE7488:
 10953              	.LBE7492:
 10954              	.LBE7513:
 10955              	.LBE7517:
 10956              	.LBE7521:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 10957              		.loc 37 90 8 is_stmt 1 view .LVU2519
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 10958              		.loc 37 90 23 view .LVU2520
 10959 0060 2BD0     		beq	.L592
 10960              	.L598:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 10961              		.loc 37 90 23 is_stmt 0 view .LVU2521
 10962 0062 A4F11000 		sub	r0, r4, #16
 10963 0066 A4F11803 		sub	r3, r4, #24
 10964              	.LVL736:
 10965              	.LBB7522:
 10966              	.LBI7404:
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 10967              		.loc 27 108 5 is_stmt 1 view .LVU2522
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 10968              		.loc 27 108 5 is_stmt 0 view .LVU2523
 10969              	.LBE7522:
 10970              	.LBE7526:
 10971              	.LBE7531:
 10972              	.LBE7536:
 10973              	.LBE7541:
 10974              	.LBE7547:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 426


 10975              	.LBE7554:
 10976              	.LBE7561:
 10977              		.loc 18 175 3 is_stmt 1 view .LVU2524
 10978              	.LBB7562:
 10979              	.LBB7555:
 10980              	.LBB7548:
 10981              	.LBB7542:
 10982              	.LBB7537:
 10983              	.LBB7532:
 10984              	.LBB7527:
 10985              	.LBB7523:
 10986              	.LBB7518:
 10987              	.LBI7405:
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 10988              		.loc 19 448 7 view .LVU2525
 10989              	.LBB7514:
 10990              	.LBB7493:
 10991              	.LBI7493:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10992              		.loc 19 190 7 view .LVU2526
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10993              		.loc 19 190 7 is_stmt 0 view .LVU2527
 10994              	.LBE7493:
 10995              	.LBB7494:
 10996              	.LBI7494:
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 10997              		.loc 19 290 7 is_stmt 1 view .LVU2528
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 10998              		.loc 19 290 7 is_stmt 0 view .LVU2529
 10999              	.LBE7494:
 11000              	.LBB7495:
 11001              	.LBI7495:
 11002              		.loc 35 97 29 is_stmt 1 view .LVU2530
 11003              	.LBB7496:
 11004              	.LBI7496:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 11005              		.loc 25 558 7 view .LVU2531
 11006              	.LBB7497:
 11007              	.LBI7497:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11008              		.loc 21 147 7 view .LVU2532
 11009              	.LBB7498:
 11010              	.LBI7498:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11011              		.loc 22 82 7 view .LVU2533
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11012              		.loc 22 82 7 is_stmt 0 view .LVU2534
 11013              	.LBE7498:
 11014              	.LBE7497:
 11015              	.LBE7496:
 11016              	.LBE7495:
 11017              	.LBB7499:
 11018              	.LBI7499:
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 11019              		.loc 19 159 2 is_stmt 1 view .LVU2535
 11020              	.LBB7500:
 11021              	.LBB7501:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 427


 11022              	.LBI7501:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 11023              		.loc 34 101 5 view .LVU2536
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 11024              		.loc 34 101 5 is_stmt 0 view .LVU2537
 11025              	.LBE7501:
 11026              	.LBB7502:
 11027              	.LBI7502:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11028              		.loc 21 147 7 is_stmt 1 view .LVU2538
 11029              	.LBB7503:
 11030              	.LBI7503:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11031              		.loc 22 82 7 view .LVU2539
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11032              		.loc 22 82 7 is_stmt 0 view .LVU2540
 11033 006a 2746     		mov	r7, r4
 11034              	.LBE7503:
 11035              	.LBE7502:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 11036              		.loc 19 160 46 view .LVU2541
 11037 006c 44F8180C 		str	r0, [r4, #-24]
 11038              	.LVL737:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 11039              		.loc 19 160 46 view .LVU2542
 11040              	.LBE7500:
 11041              	.LBE7499:
 11042              	.LBB7504:
 11043              	.LBI7504:
 11044              		.loc 21 162 7 is_stmt 1 view .LVU2543
 11045              	.LBB7505:
 11046              	.LBI7505:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11047              		.loc 22 89 7 view .LVU2544
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11048              		.loc 22 89 7 is_stmt 0 view .LVU2545
 11049              	.LBE7505:
 11050              	.LBE7504:
 11051              	.LBB7506:
 11052              	.LBI7506:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11053              		.loc 19 186 7 is_stmt 1 view .LVU2546
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11054              		.loc 19 186 7 is_stmt 0 view .LVU2547
 11055              	.LBE7506:
 11056              	.LBB7507:
 11057              	.LBI7507:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11058              		.loc 19 186 7 is_stmt 1 view .LVU2548
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11059              		.loc 19 186 7 is_stmt 0 view .LVU2549
 11060              	.LBE7507:
 11061              	.LBB7508:
 11062              	.LBI7508:
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11063              		.loc 19 907 7 is_stmt 1 view .LVU2550
 11064              	.LBB7509:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 428


 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11065              		.loc 19 908 16 is_stmt 0 view .LVU2551
 11066 0070 D6E900A5 		ldrd	r10, r5, [r6]
 11067              	.LVL738:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11068              		.loc 19 908 16 view .LVU2552
 11069              	.LBE7509:
 11070              	.LBE7508:
 11071              	.LBB7510:
 11072              	.LBI7407:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 11073              		.loc 19 263 9 is_stmt 1 view .LVU2553
 11074              	.LBB7489:
 11075              	.LBB7485:
 11076              	.LBI7409:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 11077              		.loc 19 243 9 view .LVU2554
 11078              	.LBB7481:
 11079              	.LBB7477:
 11080              	.LBI7411:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 11081              		.loc 23 206 7 view .LVU2555
 11082              	.LBB7473:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 11083              		.loc 23 211 42 is_stmt 0 view .LVU2556
 11084 0074 1AEB050F 		cmn	r10, r5
 11085 0078 02D0     		beq	.L593
 11086 007a BAF1000F 		cmp	r10, #0
 11087 007e 22D0     		beq	.L612
 11088              	.L593:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 11089              		.loc 23 217 2 view .LVU2557
 11090 0080 0F2D     		cmp	r5, #15
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 11091              		.loc 23 215 12 view .LVU2558
 11092 0082 0395     		str	r5, [sp, #12]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 11093              		.loc 23 217 2 view .LVU2559
 11094 0084 04D8     		bhi	.L613
 11095              	.LVL739:
 11096              	.LBB7457:
 11097              	.LBI7457:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11098              		.loc 19 186 7 is_stmt 1 view .LVU2560
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11099              		.loc 19 186 7 is_stmt 0 view .LVU2561
 11100              	.LBE7457:
 11101              	.LBB7458:
 11102              	.LBI7413:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 11103              		.loc 19 392 7 is_stmt 1 view .LVU2562
 11104              	.LBB7434:
 11105              	.LBI7414:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11106              		.loc 19 346 7 view .LVU2563
 11107              	.LBB7430:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 429


 11108              		.loc 19 348 2 is_stmt 0 view .LVU2564
 11109 0086 012D     		cmp	r5, #1
 11110 0088 DFD0     		beq	.L614
 11111              	.LVL740:
 11112              	.LBB7418:
 11113              	.LBI7418:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11114              		.loc 19 346 7 is_stmt 1 view .LVU2565
 11115              	.LBB7419:
 11116              	.LBI7419:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 11117              		.loc 20 387 7 view .LVU2566
 11118              	.LBB7420:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11119              		.loc 20 389 2 view .LVU2567
 11120 008a 002D     		cmp	r5, #0
 11121 008c E1D0     		beq	.L597
 11122 008e 09E0     		b	.L595
 11123              	.LVL741:
 11124              	.L613:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11125              		.loc 20 389 2 is_stmt 0 view .LVU2568
 11126              	.LBE7420:
 11127              	.LBE7419:
 11128              	.LBE7418:
 11129              	.LBE7430:
 11130              	.LBE7434:
 11131              	.LBE7458:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 11132              		.loc 23 219 13 view .LVU2569
 11133 0090 1846     		mov	r0, r3
 11134 0092 0022     		movs	r2, #0
 11135 0094 03A9     		add	r1, sp, #12
 11136 0096 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 11137              	.LVL742:
 11138              	.LBB7459:
 11139              	.LBB7460:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11140              		.loc 19 211 31 view .LVU2570
 11141 009a 039B     		ldr	r3, [sp, #12]
 11142              	.LVL743:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11143              		.loc 19 211 31 view .LVU2571
 11144              	.LBE7460:
 11145              	.LBE7459:
 11146              	.LBB7462:
 11147              	.LBI7462:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 11148              		.loc 19 178 7 is_stmt 1 view .LVU2572
 11149              	.LBB7463:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11150              		.loc 19 179 26 is_stmt 0 view .LVU2573
 11151 009c 44F8180C 		str	r0, [r4, #-24]
 11152              	.LVL744:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11153              		.loc 19 179 26 view .LVU2574
 11154              	.LBE7463:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 430


 11155              	.LBE7462:
 11156              	.LBB7464:
 11157              	.LBI7459:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 11158              		.loc 19 210 7 is_stmt 1 view .LVU2575
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 11159              		.loc 19 210 7 is_stmt 0 view .LVU2576
 11160              	.LBE7464:
 11161              	.LBB7465:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11162              		.loc 19 186 7 is_stmt 1 view .LVU2577
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11163              		.loc 19 186 7 is_stmt 0 view .LVU2578
 11164              	.LBE7465:
 11165              	.LBB7466:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 11166              		.loc 19 392 7 is_stmt 1 view .LVU2579
 11167              	.LBB7435:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11168              		.loc 19 346 7 view .LVU2580
 11169              	.LBB7431:
 11170              	.LBB7427:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11171              		.loc 19 346 7 view .LVU2581
 11172              	.LBB7424:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 11173              		.loc 20 387 7 view .LVU2582
 11174              	.LBB7421:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11175              		.loc 20 389 2 view .LVU2583
 11176              	.LBE7421:
 11177              	.LBE7424:
 11178              	.LBE7427:
 11179              	.LBE7431:
 11180              	.LBE7435:
 11181              	.LBE7466:
 11182              	.LBB7467:
 11183              	.LBB7461:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11184              		.loc 19 211 31 is_stmt 0 view .LVU2584
 11185 00a0 44F8103C 		str	r3, [r4, #-16]
 11186              	.L595:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11187              		.loc 19 211 31 view .LVU2585
 11188              	.LBE7461:
 11189              	.LBE7467:
 11190              	.LBB7468:
 11191              	.LBB7436:
 11192              	.LBB7432:
 11193              	.LBB7428:
 11194              	.LBB7425:
 11195              	.LBB7422:
 11196              		.loc 20 395 2 is_stmt 1 view .LVU2586
 11197              		.loc 20 395 49 is_stmt 0 view .LVU2587
 11198 00a4 2A46     		mov	r2, r5
 11199 00a6 5146     		mov	r1, r10
 11200 00a8 FFF7FEFF 		bl	memcpy
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 431


 11201              	.LVL745:
 11202              		.loc 20 395 49 view .LVU2588
 11203              	.LBE7422:
 11204              	.LBE7425:
 11205              	.LBE7428:
 11206              	.LBE7432:
 11207              	.LBE7436:
 11208              	.LBE7468:
 11209              		.loc 23 232 15 view .LVU2589
 11210 00ac 039D     		ldr	r5, [sp, #12]
 11211              	.LVL746:
 11212              	.LBB7469:
 11213              	.LBB7454:
 11214              	.LBB7451:
 11215              	.LBB7448:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11216              		.loc 19 187 28 view .LVU2590
 11217 00ae 54F8180C 		ldr	r0, [r4, #-24]
 11218              	.LBE7448:
 11219              	.LBE7451:
 11220              	.LBE7454:
 11221              	.LBE7469:
 11222              	.LBB7470:
 11223              	.LBB7437:
 11224              	.LBB7433:
 11225              	.LBB7429:
 11226              	.LBB7426:
 11227              	.LBB7423:
 11228              		.loc 20 395 66 view .LVU2591
 11229 00b2 CEE7     		b	.L597
 11230              	.LVL747:
 11231              	.L591:
 11232              		.loc 20 395 66 view .LVU2592
 11233              	.LBE7423:
 11234              	.LBE7426:
 11235              	.LBE7429:
 11236              	.LBE7433:
 11237              	.LBE7437:
 11238              	.LBE7470:
 11239              	.LBE7473:
 11240              	.LBE7477:
 11241              	.LBE7481:
 11242              	.LBE7485:
 11243              	.LBE7489:
 11244              	.LBE7510:
 11245              	.LBE7514:
 11246              	.LBE7518:
 11247              	.LBE7523:
 11248              	.LBE7527:
 11249              	.LBE7532:
 11250              	.LBE7537:
 11251              	.LBE7542:
 11252              	.LBE7548:
 11253              	.LBB7549:
 11254              	.LBB7398:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 11255              		.loc 26 346 18 view .LVU2593
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 432


 11256 00b4 2746     		mov	r7, r4
 11257              	.LBE7398:
 11258              	.LBE7549:
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 11259              		.loc 26 1582 6 view .LVU2594
 11260 00b6 0460     		str	r4, [r0]
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 11261              		.loc 26 1583 36 view .LVU2595
 11262 00b8 8460     		str	r4, [r0, #8]
 11263              	.LVL748:
 11264              	.LBB7550:
 11265              		.loc 37 323 5 is_stmt 1 view .LVU2596
 11266              	.LBB7543:
 11267              	.LBB7538:
 11268              	.LBB7533:
 11269              	.LBB7528:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 11270              		.loc 37 90 23 view .LVU2597
 11271              	.L592:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 11272              		.loc 37 90 23 is_stmt 0 view .LVU2598
 11273              	.LBE7528:
 11274              	.LBE7533:
 11275              	.LBE7538:
 11276              	.LBE7543:
 11277              	.LBE7550:
 11278              	.LBE7555:
 11279              	.LBE7562:
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 11280              		.loc 26 631 7 view .LVU2599
 11281 00ba 4046     		mov	r0, r8
 11282              	.LBB7563:
 11283              	.LBB7556:
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 11284              		.loc 26 1584 28 view .LVU2600
 11285 00bc C8F80470 		str	r7, [r8, #4]
 11286              	.LVL749:
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 11287              		.loc 26 1584 28 view .LVU2601
 11288              	.LBE7556:
 11289              	.LBE7563:
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 11290              		.loc 26 631 7 view .LVU2602
 11291 00c0 04B0     		add	sp, sp, #16
 11292              		.cfi_remember_state
 11293              		.cfi_def_cfa_offset 32
 11294              		@ sp needed
 11295 00c2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 11296              	.LVL750:
 11297              	.L612:
 11298              		.cfi_restore_state
 11299              	.LBB7564:
 11300              	.LBB7557:
 11301              	.LBB7551:
 11302              	.LBB7544:
 11303              	.LBB7539:
 11304              	.LBB7534:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 433


 11305              	.LBB7529:
 11306              	.LBB7524:
 11307              	.LBB7519:
 11308              	.LBB7515:
 11309              	.LBB7511:
 11310              	.LBB7490:
 11311              	.LBB7486:
 11312              	.LBB7482:
 11313              	.LBB7478:
 11314              	.LBB7474:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 11315              		.loc 23 212 28 view .LVU2603
 11316 00c6 0448     		ldr	r0, .L615+4
 11317 00c8 FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 11318              	.LVL751:
 11319              	.L611:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 11320              		.loc 23 212 28 view .LVU2604
 11321              	.LBE7474:
 11322              	.LBE7478:
 11323              	.LBE7482:
 11324              	.LBE7486:
 11325              	.LBE7490:
 11326              	.LBE7511:
 11327              	.LBE7515:
 11328              	.LBE7519:
 11329              	.LBE7524:
 11330              	.LBE7529:
 11331              	.LBE7534:
 11332              	.LBE7539:
 11333              	.LBE7544:
 11334              	.LBE7551:
 11335              	.LBB7552:
 11336              	.LBB7386:
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
 11337              		.loc 26 1770 24 view .LVU2605
 11338 00cc 0348     		ldr	r0, .L615+8
 11339              	.LVL752:
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
 11340              		.loc 26 1770 24 view .LVU2606
 11341 00ce FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 11342              	.LVL753:
 11343              	.L616:
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
 11344              		.loc 26 1770 24 view .LVU2607
 11345 00d2 00BF     		.align	2
 11346              	.L615:
 11347 00d4 F8FFFF7F 		.word	2147483640
 11348 00d8 00000000 		.word	.LC9
 11349 00dc 00000000 		.word	.LC10
 11350              	.LBE7386:
 11351              	.LBE7552:
 11352              	.LBE7557:
 11353              	.LBE7564:
 11354              		.cfi_endproc
 11355              	.LFE5460:
 11357              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 434


 11358              		.thumb_set _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initial
 11359              		.section	.text._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_,"axG",%progbits,_ZNSt6vectorIiS
 11360              		.align	1
 11361              		.p2align 2,,3
 11362              		.weak	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_
 11363              		.syntax unified
 11364              		.thumb
 11365              		.thumb_func
 11366              		.fpu fpv5-d16
 11368              	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_:
 11369              	.LVL754:
 11370              	.LFB5472:
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 11371              		.loc 26 625 7 is_stmt 1 view -0
 11372              		.cfi_startproc
 11373              		@ args = 0, pretend = 0, frame = 8
 11374              		@ frame_needed = 0, uses_anonymous_args = 0
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 11375              		.loc 26 625 7 is_stmt 0 view .LVU2609
 11376 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 11377              		.cfi_def_cfa_offset 20
 11378              		.cfi_offset 4, -20
 11379              		.cfi_offset 5, -16
 11380              		.cfi_offset 6, -12
 11381              		.cfi_offset 7, -8
 11382              		.cfi_offset 14, -4
 11383 0002 83B0     		sub	sp, sp, #12
 11384              		.cfi_def_cfa_offset 32
 11385              	.LBB7608:
 11386              	.LBB7609:
 11387              	.LBB7610:
 11388              	.LBB7611:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 11389              		.loc 26 98 47 view .LVU2610
 11390 0004 0023     		movs	r3, #0
 11391              	.LVL755:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 11392              		.loc 26 98 47 view .LVU2611
 11393              	.LBE7611:
 11394              	.LBE7610:
 11395              	.LBE7609:
 11396              	.LBE7608:
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 11397              		.loc 26 625 7 view .LVU2612
 11398 0006 02AC     		add	r4, sp, #8
 11399 0008 04E90600 		stmdb	r4, {r1, r2}
 11400 000c 0446     		mov	r4, r0
 11401              	.LBB7622:
 11402              	.LBB7623:
 11403              	.LBB7624:
 11404              	.LBB7625:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 11405              		.loc 26 1769 2 view .LVU2613
 11406 000e 1148     		ldr	r0, .L624
 11407              	.LVL756:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 11408              		.loc 26 1769 2 view .LVU2614
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 435


 11409              	.LBE7625:
 11410              	.LBE7624:
 11411              	.LBE7623:
 11412              	.LBE7622:
 11413              	.LBB7684:
 11414              	.LBI7608:
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 11415              		.loc 26 293 7 is_stmt 1 view .LVU2615
 11416              	.LBB7619:
 11417              	.LBI7609:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 11418              		.loc 26 136 2 view .LVU2616
 11419              	.LBB7614:
 11420              	.LBI7614:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11421              		.loc 21 147 7 view .LVU2617
 11422              	.LBB7615:
 11423              	.LBI7615:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11424              		.loc 22 82 7 view .LVU2618
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11425              		.loc 22 82 7 is_stmt 0 view .LVU2619
 11426              	.LBE7615:
 11427              	.LBE7614:
 11428              	.LBB7616:
 11429              	.LBI7610:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 11430              		.loc 26 97 2 is_stmt 1 view .LVU2620
 11431              	.LBE7616:
 11432              	.LBE7619:
 11433              	.LBE7684:
 11434              	.LBB7685:
 11435              	.LBB7677:
 11436              	.LBB7634:
 11437              	.LBB7630:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 11438              		.loc 26 1769 2 is_stmt 0 view .LVU2621
 11439 0010 B0EB820F 		cmp	r0, r2, lsl #2
 11440              	.LBE7630:
 11441              	.LBE7634:
 11442              	.LBE7677:
 11443              	.LBE7685:
 11444              	.LBB7686:
 11445              	.LBB7620:
 11446              	.LBB7617:
 11447              	.LBB7612:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 11448              		.loc 26 98 47 view .LVU2622
 11449 0014 A360     		str	r3, [r4, #8]
 11450              	.LVL757:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 11451              		.loc 26 98 47 view .LVU2623
 11452              	.LBE7612:
 11453              	.LBE7617:
 11454              	.LBE7620:
 11455              	.LBE7686:
 11456              	.LBB7687:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 436


 11457              	.LBI7687:
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 11458              		.loc 36 75 7 is_stmt 1 view .LVU2624
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 11459              		.loc 36 75 7 is_stmt 0 view .LVU2625
 11460              	.LBE7687:
 11461              	.LBB7688:
 11462              	.LBI7688:
 11463              		.loc 36 79 7 is_stmt 1 view .LVU2626
 11464              	.LBB7689:
 11465              	.LBB7690:
 11466              	.LBI7690:
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 11467              		.loc 36 71 7 view .LVU2627
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 11468              		.loc 36 71 7 is_stmt 0 view .LVU2628
 11469              	.LBE7690:
 11470              	.LBE7689:
 11471              	.LBE7688:
 11472              	.LBB7691:
 11473              	.LBI7622:
1577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
 11474              		.loc 26 1577 2 is_stmt 1 view .LVU2629
 11475              	.LBB7678:
 11476              	.LBB7635:
 11477              	.LBI7624:
1767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 11478              		.loc 26 1767 7 view .LVU2630
 11479              	.LBB7631:
 11480              	.LBB7626:
 11481              	.LBI7626:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11482              		.loc 21 147 7 view .LVU2631
 11483              	.LBB7627:
 11484              	.LBI7627:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11485              		.loc 22 82 7 view .LVU2632
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11486              		.loc 22 82 7 is_stmt 0 view .LVU2633
 11487              	.LBE7627:
 11488              	.LBE7626:
 11489              	.LBB7628:
 11490              	.LBI7628:
 11491              		.loc 21 162 7 is_stmt 1 view .LVU2634
 11492              	.LBB7629:
 11493              	.LBI7629:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11494              		.loc 22 89 7 view .LVU2635
 11495              	.LBE7629:
 11496              	.LBE7628:
 11497              	.LBE7631:
 11498              	.LBE7635:
 11499              	.LBE7678:
 11500              	.LBE7691:
 11501              	.LBB7692:
 11502              	.LBB7621:
 11503              	.LBB7618:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 437


 11504              	.LBB7613:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 11505              		.loc 26 98 47 is_stmt 0 view .LVU2636
 11506 0016 C4E90033 		strd	r3, r3, [r4]
 11507              	.LBE7613:
 11508              	.LBE7618:
 11509              	.LBE7621:
 11510              	.LBE7692:
 11511              	.LBB7693:
 11512              	.LBB7679:
 11513              	.LBB7636:
 11514              	.LBB7632:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 11515              		.loc 26 1769 2 view .LVU2637
 11516 001a 18D3     		bcc	.L623
 11517              	.LVL758:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 11518              		.loc 26 1769 2 view .LVU2638
 11519              	.LBE7632:
 11520              	.LBE7636:
 11521              	.LBB7637:
 11522              	.LBI7637:
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 11523              		.loc 26 343 7 is_stmt 1 view .LVU2639
 11524 001c 9600     		lsls	r6, r2, #2
 11525              	.LVL759:
 11526              	.LBB7638:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 11527              		.loc 26 346 18 is_stmt 0 view .LVU2640
 11528 001e 7EB1     		cbz	r6, .L619
 11529              	.LBB7639:
 11530              	.LBB7640:
 11531              	.LBB7641:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 11532              		.loc 22 115 41 view .LVU2641
 11533 0020 3046     		mov	r0, r6
 11534 0022 0F46     		mov	r7, r1
 11535              	.LVL760:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 11536              		.loc 22 115 41 view .LVU2642
 11537              	.LBE7641:
 11538              	.LBE7640:
 11539              	.LBI7639:
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 11540              		.loc 25 459 7 is_stmt 1 view .LVU2643
 11541              	.LBB7643:
 11542              	.LBI7640:
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 11543              		.loc 22 103 7 view .LVU2644
 11544              	.LBB7642:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 11545              		.loc 22 115 41 is_stmt 0 view .LVU2645
 11546 0024 FFF7FEFF 		bl	_Znwj
 11547              	.LVL761:
 11548 0028 0546     		mov	r5, r0
 11549              	.LVL762:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 438


 11550              		.loc 22 115 41 view .LVU2646
 11551              	.LBE7642:
 11552              	.LBE7643:
 11553              	.LBE7639:
 11554              	.LBE7638:
 11555              	.LBE7637:
 11556              	.LBB7644:
 11557              	.LBB7645:
 11558              	.LBB7646:
 11559              	.LBB7647:
 11560              	.LBB7648:
 11561              	.LBB7649:
 11562              	.LBB7650:
 11563              	.LBB7651:
 11564              	.LBB7652:
 11565              	.LBB7653:
 11566              	.LBB7654:
 11567              		.file 38 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 439


  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/functexcept.h>
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_pair.h>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <debug/debug.h>
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/predefined_ops.h>
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <type_traits>
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus > 201703L
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <compare>
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** {
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /*
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    */
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline int
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 440


  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return 0;
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       else
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _BoolType>
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    _ValueType1;
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__a = *__b;
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__b = __tmp;
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap<true>
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  swap(*__a, *__b);
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif // C++03
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   Nothing.
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  iterators themselves.
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 441


 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType1;
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType2;
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType2>)
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType1>)
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType1;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType2;
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(__a, __b);
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #else
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // 187. iter_swap underspecified
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       swap(*__a, *__b);
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  The ranges must not overlap.
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _ForwardIterator2
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 442


 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __first2;
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__b < __a)
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return  __a < __b ? __b : __a;
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__a < __b)
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 443


 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__b, __a))
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__a, __b))
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_base(_Iterator __it)
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __it; }
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _From, typename _To>
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _From
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 444


 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __res; }
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // a for loop with an explicit count.
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = *__first;
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Category>
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, _Category>
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = std::move(*__first);
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = *__first;
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 445


 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = std::move(*__first);
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove>
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _Tp>
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _Tp*
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_move_assignable<_Tp>,
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  // trivial types can have deleted assignment
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 11568              		.loc 38 426 23 view .LVU2647
 11569 002a 3946     		mov	r1, r7
 11570 002c 3246     		mov	r2, r6
 11571              	.LBE7654:
 11572              	.LBE7653:
 11573              	.LBE7652:
 11574              	.LBE7651:
 11575              	.LBE7650:
 11576              	.LBE7649:
 11577              	.LBE7648:
 11578              	.LBE7647:
 11579              	.LBE7646:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 446


 11580              	.LBE7645:
 11581              	.LBE7644:
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 11582              		.loc 26 1583 61 view .LVU2648
 11583 002e 3544     		add	r5, r5, r6
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 11584              		.loc 26 1582 6 view .LVU2649
 11585 0030 2060     		str	r0, [r4]
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 11586              		.loc 26 1583 36 view .LVU2650
 11587 0032 A560     		str	r5, [r4, #8]
 11588              	.LVL763:
 11589              	.LBB7674:
 11590              	.LBI7644:
 11591              		.loc 37 323 5 is_stmt 1 view .LVU2651
 11592              	.LBB7672:
 11593              	.LBI7645:
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 11594              		.loc 37 125 5 view .LVU2652
 11595              	.LBB7670:
 11596              	.LBB7668:
 11597              	.LBI7647:
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 11598              		.loc 37 107 9 view .LVU2653
 11599              	.LBB7666:
 11600              	.LBI7648:
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT>
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct char_traits;
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class istreambuf_iterator;
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class ostreambuf_iterator;
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				    _CharT*>::__type
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 447


 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return std::__copy_move<_IsMove, false, _Category>::
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  __copy_m(__first, __last, __result);
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct _Deque_iterator;
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _OI);
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II, _II, _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II __first, _II __last, _OI __result)
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__niter_wrap(__result,
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 448


 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__last),
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__result)));
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  _OI);
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II, _II,
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  An input iterator.
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   An input iterator.
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result An output iterator.
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result + (last - first)
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  within [first,last).
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _II, typename _OI>
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 11601              		.loc 38 560 5 view .LVU2654
 11602              	.LBB7664:
 11603              	.LBI7649:
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 11604              		.loc 38 511 5 view .LVU2655
 11605              	.LBB7662:
 11606              	.LBI7650:
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 11607              		.loc 38 505 5 view .LVU2656
 11608              	.LBB7660:
 11609              	.LBI7651:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 449


 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 11610              		.loc 38 463 5 view .LVU2657
 11611              	.LBB7658:
 11612              	.LBB7656:
 11613              	.LBI7653:
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 11614              		.loc 38 415 2 view .LVU2658
 11615              	.LBB7655:
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 11616              		.loc 38 426 23 is_stmt 0 view .LVU2659
 11617 0034 FFF7FEFF 		bl	memcpy
 11618              	.LVL764:
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 11619              		.loc 38 426 23 view .LVU2660
 11620              	.LBE7655:
 11621              	.LBE7656:
 11622              	.LBE7658:
 11623              	.LBE7660:
 11624              	.LBE7662:
 11625              	.LBE7664:
 11626              	.LBE7666:
 11627              	.LBE7668:
 11628              	.LBE7670:
 11629              	.LBE7672:
 11630              	.LBE7674:
 11631              	.LBE7679:
 11632              	.LBE7693:
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 11633              		.loc 26 631 7 view .LVU2661
 11634 0038 2046     		mov	r0, r4
 11635              	.LBB7694:
 11636              	.LBB7680:
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 11637              		.loc 26 1584 28 view .LVU2662
 11638 003a 6560     		str	r5, [r4, #4]
 11639              	.LVL765:
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 11640              		.loc 26 1584 28 view .LVU2663
 11641              	.LBE7680:
 11642              	.LBE7694:
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 11643              		.loc 26 631 7 view .LVU2664
 11644 003c 03B0     		add	sp, sp, #12
 11645              		.cfi_remember_state
 11646              		.cfi_def_cfa_offset 20
 11647              		@ sp needed
 11648 003e F0BD     		pop	{r4, r5, r6, r7, pc}
 11649              	.LVL766:
 11650              	.L619:
 11651              		.cfi_restore_state
 11652              	.LBB7695:
 11653              	.LBB7681:
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 11654              		.loc 26 1583 61 view .LVU2665
 11655 0040 3546     		mov	r5, r6
 11656              	.LBE7681:
 11657              	.LBE7695:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 450


 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 11658              		.loc 26 631 7 view .LVU2666
 11659 0042 2046     		mov	r0, r4
 11660              	.LBB7696:
 11661              	.LBB7682:
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 11662              		.loc 26 1582 6 view .LVU2667
 11663 0044 2660     		str	r6, [r4]
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 11664              		.loc 26 1583 36 view .LVU2668
 11665 0046 A660     		str	r6, [r4, #8]
 11666              	.LVL767:
 11667              	.LBB7675:
 11668              		.loc 37 323 5 is_stmt 1 view .LVU2669
 11669              	.LBB7673:
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 11670              		.loc 37 125 5 view .LVU2670
 11671              	.LBB7671:
 11672              	.LBB7669:
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 11673              		.loc 37 107 9 view .LVU2671
 11674              	.LBB7667:
 11675              		.loc 38 560 5 view .LVU2672
 11676              	.LBB7665:
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 11677              		.loc 38 511 5 view .LVU2673
 11678              	.LBB7663:
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 11679              		.loc 38 505 5 view .LVU2674
 11680              	.LBB7661:
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 11681              		.loc 38 463 5 view .LVU2675
 11682              	.LBB7659:
 11683              	.LBB7657:
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 11684              		.loc 38 415 2 view .LVU2676
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 11685              		.loc 38 415 2 is_stmt 0 view .LVU2677
 11686              	.LBE7657:
 11687              	.LBE7659:
 11688              	.LBE7661:
 11689              	.LBE7663:
 11690              	.LBE7665:
 11691              	.LBE7667:
 11692              	.LBE7669:
 11693              	.LBE7671:
 11694              	.LBE7673:
 11695              	.LBE7675:
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 11696              		.loc 26 1584 28 view .LVU2678
 11697 0048 6560     		str	r5, [r4, #4]
 11698              	.LVL768:
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 11699              		.loc 26 1584 28 view .LVU2679
 11700              	.LBE7682:
 11701              	.LBE7696:
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 451


 11702              		.loc 26 631 7 view .LVU2680
 11703 004a 03B0     		add	sp, sp, #12
 11704              		.cfi_remember_state
 11705              		.cfi_def_cfa_offset 20
 11706              		@ sp needed
 11707 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 11708              	.LVL769:
 11709              	.L623:
 11710              		.cfi_restore_state
 11711              	.LBB7697:
 11712              	.LBB7683:
 11713              	.LBB7676:
 11714              	.LBB7633:
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
 11715              		.loc 26 1770 24 view .LVU2681
 11716 004e 0248     		ldr	r0, .L624+4
 11717 0050 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 11718              	.LVL770:
 11719              	.L625:
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
 11720              		.loc 26 1770 24 view .LVU2682
 11721              		.align	2
 11722              	.L624:
 11723 0054 FCFFFF7F 		.word	2147483644
 11724 0058 00000000 		.word	.LC10
 11725              	.LBE7633:
 11726              	.LBE7676:
 11727              	.LBE7683:
 11728              	.LBE7697:
 11729              		.cfi_endproc
 11730              	.LFE5472:
 11732              		.weak	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 11733              		.thumb_set _ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_,_ZNSt6vectorIiSaIiEEC2ESt16initiali
 11734              		.section	.text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC
 11735              		.align	1
 11736              		.p2align 2,,3
 11737              		.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS
 11738              		.syntax unified
 11739              		.thumb
 11740              		.thumb_func
 11741              		.fpu fpv5-d16
 11743              	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS9_Lb1EE
 11744              	.LVL771:
 11745              	.LFB5489:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       typedef _T1 first_type;    ///< The type of the `first` member
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       typedef _T2 second_type;   ///< The type of the `second` member
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _T1 first;                 ///< The first member
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _T2 second;                ///< The second member
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // 265.  std::pair::pair() effects overly restrictive
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /** The default constructor creates @c first and @c second using their
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        *  respective default constructors.  */
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 452


 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1 = _T1,
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename _U2 = _T2,
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename enable_if<__and_<
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                      __is_implicitly_default_constructible<_U1>,
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                      __is_implicitly_default_constructible<_U2>>
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                    ::value, bool>::type = true>
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _GLIBCXX_CONSTEXPR pair()
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(), second() { }
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1 = _T1,
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename _U2 = _T2,
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename enable_if<__and_<
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        is_default_constructible<_U1>,
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        is_default_constructible<_U2>,
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        __not_<
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          __and_<__is_implicitly_default_constructible<_U1>,
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                 __is_implicitly_default_constructible<_U2>>>>
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                    ::value, bool>::type = false>
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       explicit constexpr pair()
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(), second() { }
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus < 201103L
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Two objects may be passed to a @c pair constructor to be copied.
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       pair(const _T1& __a, const _T2& __b)
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #else
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // Shortcut for constraining the templates that don't take pairs.
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @cond undocumented
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       using _PCCP = _PCC<true, _T1, _T2>;
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @endcond
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Construct from two const lvalues, allowing implicit conversions.
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1 = _T1, typename _U2=_T2, typename
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                 && _PCCP::template
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(const _T1& __a, const _T2& __b)
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Construct from two const lvalues, disallowing implicit conversions.
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        template<typename _U1 = _T1, typename _U2=_T2, typename
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		enable_if<_PCCP::template
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _ConstructiblePair<_U1, _U2>()
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                  && !_PCCP::template
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _ImplicitlyConvertiblePair<_U1, _U2>(),
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       explicit constexpr pair(const _T1& __a, const _T2& __b)
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus < 201103L
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// There is also a templated constructor to convert from other pairs.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 453


 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2>
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	pair(const pair<_U1, _U2>& __p)
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #else
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // Shortcut for constraining the templates that take pairs.
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @cond undocumented
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         using _PCCFP = _PCC<!is_same<_T1, _U1>::value
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    || !is_same<_T2, _U2>::value,
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _T1, _T2>;
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @endcond
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                 && _PCCFP<_U1, _U2>::template
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			  bool>::type=true>
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         constexpr pair(const pair<_U1, _U2>& __p)
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         : first(__p.first), second(__p.second) { }
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			 && !_PCCFP<_U1, _U2>::template
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	explicit constexpr pair(const pair<_U1, _U2>& __p)
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(const pair&) = default;	///< Copy constructor
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // DR 811.
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveCopyPair<true, _U1, _T2>(),
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        constexpr pair(_U1&& __x, const _T2& __y)
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveCopyPair<false, _U1, _T2>(),
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        explicit constexpr pair(_U1&& __x, const _T2& __y)
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U2, typename
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _CopyMovePair<true, _T1, _U2>(),
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        constexpr pair(const _T1& __x, _U2&& __y)
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 454


 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U2, typename
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _CopyMovePair<false, _T1, _U2>(),
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        explicit pair(const _T1& __x, _U2&& __y)
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveConstructiblePair<_U1, _U2>()
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			  && _PCCP::template
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	constexpr pair(_U1&& __x, _U2&& __y)
 11746              		.loc 30 352 12 is_stmt 1 view -0
 11747              		.cfi_startproc
 11748              		@ args = 0, pretend = 0, frame = 8
 11749              		@ frame_needed = 0, uses_anonymous_args = 0
 11750              		.loc 30 352 12 is_stmt 0 view .LVU2684
 11751 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 11752              		.cfi_def_cfa_offset 24
 11753              		.cfi_offset 4, -24
 11754              		.cfi_offset 5, -20
 11755              		.cfi_offset 6, -16
 11756              		.cfi_offset 7, -12
 11757              		.cfi_offset 8, -8
 11758              		.cfi_offset 14, -4
 11759 0004 0446     		mov	r4, r0
 11760              	.LBB7762:
 11761              	.LBB7763:
 11762              	.LBB7764:
 11763              	.LBB7765:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 11764              		.loc 19 193 51 view .LVU2685
 11765 0006 00F10807 		add	r7, r0, #8
 11766              	.LBE7765:
 11767              	.LBE7764:
 11768              	.LBE7763:
 11769              	.LBE7762:
 11770              		.loc 30 352 12 view .LVU2686
 11771 000a 82B0     		sub	sp, sp, #8
 11772              		.cfi_def_cfa_offset 32
 11773              	.LBB7874:
 11774              	.LBB7854:
 11775              	.LBB7766:
 11776              	.LBB7767:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 11777              		.loc 20 357 25 view .LVU2687
 11778 000c 0846     		mov	r0, r1
 11779              	.LVL772:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 11780              		.loc 20 357 25 view .LVU2688
 11781              	.LBE7767:
 11782              	.LBE7766:
 11783              	.LBB7771:
 11784              	.LBB7772:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 455


 11785              		.loc 19 157 35 view .LVU2689
 11786 000e 2760     		str	r7, [r4]
 11787              	.LBE7772:
 11788              	.LBE7771:
 11789              	.LBE7854:
 11790              	.LBE7874:
 11791              		.loc 30 352 12 view .LVU2690
 11792 0010 8846     		mov	r8, r1
 11793              	.LVL773:
 11794              	.LBB7875:
 11795              	.LBB7855:
 11796              	.LBI7855:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 11797              		.loc 34 76 5 is_stmt 1 view .LVU2691
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 11798              		.loc 34 76 5 is_stmt 0 view .LVU2692
 11799              	.LBE7855:
 11800              	.LBB7856:
 11801              	.LBI7856:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 11802              		.loc 21 144 7 is_stmt 1 view .LVU2693
 11803              	.LBB7857:
 11804              	.LBI7857:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11805              		.loc 22 79 7 view .LVU2694
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11806              		.loc 22 79 7 is_stmt 0 view .LVU2695
 11807              	.LBE7857:
 11808              	.LBE7856:
 11809              	.LBB7858:
 11810              	.LBI7763:
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 11811              		.loc 19 525 7 is_stmt 1 view .LVU2696
 11812              	.LBB7776:
 11813              	.LBI7764:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11814              		.loc 19 190 7 view .LVU2697
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11815              		.loc 19 190 7 is_stmt 0 view .LVU2698
 11816              	.LBE7776:
 11817              	.LBB7777:
 11818              	.LBI7771:
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 11819              		.loc 19 156 2 is_stmt 1 view .LVU2699
 11820              	.LBB7775:
 11821              	.LBB7773:
 11822              	.LBI7773:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11823              		.loc 21 147 7 view .LVU2700
 11824              	.LBB7774:
 11825              	.LBI7774:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11826              		.loc 22 82 7 view .LVU2701
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11827              		.loc 22 82 7 is_stmt 0 view .LVU2702
 11828              	.LBE7774:
 11829              	.LBE7773:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 456


 11830              	.LBE7775:
 11831              	.LBE7777:
 11832              	.LBB7778:
 11833              	.LBI7766:
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 11834              		.loc 20 351 7 is_stmt 1 view .LVU2703
 11835              	.LBB7768:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 11836              		.loc 20 357 2 view .LVU2704
 11837              	.LBE7768:
 11838              	.LBE7778:
 11839              	.LBE7858:
 11840              	.LBE7875:
 11841              		.loc 30 352 12 is_stmt 0 view .LVU2705
 11842 0012 1546     		mov	r5, r2
 11843              	.LBB7876:
 11844              	.LBB7859:
 11845              	.LBB7779:
 11846              	.LBB7769:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 11847              		.loc 20 357 25 view .LVU2706
 11848 0014 FFF7FEFF 		bl	strlen
 11849              	.LVL774:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 11850              		.loc 20 357 25 view .LVU2707
 11851              	.LBE7769:
 11852              	.LBE7779:
 11853              	.LBB7780:
 11854              	.LBB7781:
 11855              	.LBB7782:
 11856              	.LBB7783:
 11857              	.LBB7784:
 11858              	.LBB7785:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 11859              		.loc 23 217 2 view .LVU2708
 11860 0018 0F28     		cmp	r0, #15
 11861              	.LBE7785:
 11862              	.LBE7784:
 11863              	.LBE7783:
 11864              	.LBE7782:
 11865              	.LBE7781:
 11866              	.LBE7780:
 11867              	.LBB7850:
 11868              	.LBB7770:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 11869              		.loc 20 357 25 view .LVU2709
 11870 001a 0646     		mov	r6, r0
 11871              	.LVL775:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 11872              		.loc 20 357 25 view .LVU2710
 11873              	.LBE7770:
 11874              	.LBE7850:
 11875              	.LBB7851:
 11876              	.LBI7780:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 11877              		.loc 19 263 9 is_stmt 1 view .LVU2711
 11878              	.LBB7847:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 457


 11879              	.LBB7844:
 11880              	.LBI7782:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 11881              		.loc 19 243 9 view .LVU2712
 11882              	.LBB7841:
 11883              	.LBB7838:
 11884              	.LBI7784:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 11885              		.loc 23 206 7 view .LVU2713
 11886              	.LBB7835:
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 11887              		.loc 23 215 12 is_stmt 0 view .LVU2714
 11888 001c 0190     		str	r0, [sp, #4]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 11889              		.loc 23 217 2 view .LVU2715
 11890 001e 17D8     		bhi	.L635
 11891              	.LVL776:
 11892              	.LBB7786:
 11893              	.LBI7786:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11894              		.loc 19 186 7 is_stmt 1 view .LVU2716
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11895              		.loc 19 186 7 is_stmt 0 view .LVU2717
 11896              	.LBE7786:
 11897              	.LBB7787:
 11898              	.LBI7787:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 11899              		.loc 19 396 7 is_stmt 1 view .LVU2718
 11900              	.LBB7788:
 11901              	.LBI7788:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11902              		.loc 19 346 7 view .LVU2719
 11903              	.LBB7789:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 11904              		.loc 19 348 2 is_stmt 0 view .LVU2720
 11905 0020 0128     		cmp	r0, #1
 11906 0022 12D1     		bne	.L629
 11907              	.LVL777:
 11908              	.LBB7790:
 11909              	.LBI7790:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 11910              		.loc 20 321 7 is_stmt 1 view .LVU2721
 11911              	.LBB7791:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11912              		.loc 20 322 9 view .LVU2722
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11913              		.loc 20 322 14 is_stmt 0 view .LVU2723
 11914 0024 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 11915 0028 2372     		strb	r3, [r4, #8]
 11916              	.LVL778:
 11917              	.L630:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11918              		.loc 20 322 14 view .LVU2724
 11919              	.LBE7791:
 11920              	.LBE7790:
 11921              	.LBE7789:
 11922              	.LBE7788:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 458


 11923              	.LBE7787:
 11924              	.LBB7807:
 11925              	.LBI7807:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11926              		.loc 19 214 7 is_stmt 1 view .LVU2725
 11927              	.LBB7808:
 11928              	.LBB7809:
 11929              	.LBI7809:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 11930              		.loc 19 182 7 view .LVU2726
 11931              	.LBE7809:
 11932              	.LBB7811:
 11933              	.LBB7812:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11934              		.loc 20 322 14 is_stmt 0 view .LVU2727
 11935 002a 0023     		movs	r3, #0
 11936              	.LBE7812:
 11937              	.LBE7811:
 11938              	.LBB7815:
 11939              	.LBB7810:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11940              		.loc 19 183 26 view .LVU2728
 11941 002c 6660     		str	r6, [r4, #4]
 11942              	.LVL779:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11943              		.loc 19 183 26 view .LVU2729
 11944              	.LBE7810:
 11945              	.LBE7815:
 11946              	.LBB7816:
 11947              	.LBI7816:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11948              		.loc 19 186 7 is_stmt 1 view .LVU2730
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11949              		.loc 19 186 7 is_stmt 0 view .LVU2731
 11950              	.LBE7816:
 11951              	.LBB7818:
 11952              	.LBI7811:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 11953              		.loc 20 321 7 is_stmt 1 view .LVU2732
 11954              	.LBB7813:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11955              		.loc 20 322 9 view .LVU2733
 11956              	.LBE7813:
 11957              	.LBE7818:
 11958              	.LBE7808:
 11959              	.LBE7807:
 11960              	.LBE7835:
 11961              	.LBE7838:
 11962              	.LBE7841:
 11963              	.LBE7844:
 11964              	.LBE7847:
 11965              	.LBE7851:
 11966              	.LBE7859:
 11967              	.LBE7876:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 11968              		.loc 30 353 68 is_stmt 0 view .LVU2734
 11969 002e 2046     		mov	r0, r4
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 459


 11970              	.LBB7877:
 11971              	.LBB7860:
 11972              	.LBB7852:
 11973              	.LBB7848:
 11974              	.LBB7845:
 11975              	.LBB7842:
 11976              	.LBB7839:
 11977              	.LBB7836:
 11978              	.LBB7823:
 11979              	.LBB7821:
 11980              	.LBB7819:
 11981              	.LBB7814:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11982              		.loc 20 322 14 view .LVU2735
 11983 0030 BB55     		strb	r3, [r7, r6]
 11984              	.LVL780:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11985              		.loc 20 322 14 view .LVU2736
 11986              	.LBE7814:
 11987              	.LBE7819:
 11988              	.LBE7821:
 11989              	.LBE7823:
 11990              	.LBE7836:
 11991              	.LBE7839:
 11992              	.LBE7842:
 11993              	.LBE7845:
 11994              	.LBE7848:
 11995              	.LBE7852:
 11996              	.LBE7860:
 11997              	.LBB7861:
 11998              	.LBI7861:
 11999              		.loc 21 162 7 is_stmt 1 view .LVU2737
 12000              	.LBB7862:
 12001              	.LBI7862:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12002              		.loc 22 89 7 view .LVU2738
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12003              		.loc 22 89 7 is_stmt 0 view .LVU2739
 12004              	.LBE7862:
 12005              	.LBE7861:
 12006              	.LBB7863:
 12007              	.LBI7863:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 12008              		.loc 34 76 5 is_stmt 1 view .LVU2740
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 12009              		.loc 34 76 5 is_stmt 0 view .LVU2741
 12010              	.LBE7863:
 12011              	.LBB7864:
 12012              	.LBI7864:
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 12013              		.loc 26 572 7 is_stmt 1 view .LVU2742
 12014              	.LBB7865:
 12015              	.LBI7865:
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 12016              		.loc 26 308 7 view .LVU2743
 12017              	.LBB7866:
 12018              	.LBI7866:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 460


 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 12019              		.loc 26 143 2 view .LVU2744
 12020              	.LBB7867:
 12021              	.LBI7867:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 12022              		.loc 34 101 5 view .LVU2745
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 12023              		.loc 34 101 5 is_stmt 0 view .LVU2746
 12024              	.LBE7867:
 12025              	.LBB7868:
 12026              	.LBI7868:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12027              		.loc 21 147 7 is_stmt 1 view .LVU2747
 12028              	.LBB7869:
 12029              	.LBI7869:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12030              		.loc 22 82 7 view .LVU2748
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12031              		.loc 22 82 7 is_stmt 0 view .LVU2749
 12032              	.LBE7869:
 12033              	.LBE7868:
 12034              	.LBB7870:
 12035              	.LBI7870:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 12036              		.loc 34 101 5 is_stmt 1 view .LVU2750
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 12037              		.loc 34 101 5 is_stmt 0 view .LVU2751
 12038              	.LBE7870:
 12039              	.LBB7871:
 12040              	.LBI7871:
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 12041              		.loc 26 102 2 is_stmt 1 view .LVU2752
 12042              	.LBB7872:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 12043              		.loc 26 104 43 is_stmt 0 view .LVU2753
 12044 0032 D5E90012 		ldrd	r1, r2, [r5]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 12045              		.loc 26 105 17 view .LVU2754
 12046 0036 2B60     		str	r3, [r5]
 12047              	.LVL781:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 12048              		.loc 26 104 43 view .LVU2755
 12049 0038 E261     		str	r2, [r4, #28]
 12050 003a AA68     		ldr	r2, [r5, #8]
 12051 003c A161     		str	r1, [r4, #24]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 12052              		.loc 26 105 33 view .LVU2756
 12053 003e 6B60     		str	r3, [r5, #4]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 12054              		.loc 26 105 57 view .LVU2757
 12055 0040 AB60     		str	r3, [r5, #8]
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 12056              		.loc 26 104 43 view .LVU2758
 12057 0042 2262     		str	r2, [r4, #32]
 12058              	.LBE7872:
 12059              	.LBE7871:
 12060              	.LBE7866:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 461


 12061              	.LBE7865:
 12062              	.LBE7864:
 12063              	.LBE7877:
 12064              		.loc 30 353 68 view .LVU2759
 12065 0044 02B0     		add	sp, sp, #8
 12066              		.cfi_remember_state
 12067              		.cfi_def_cfa_offset 24
 12068              		@ sp needed
 12069 0046 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 12070              	.LVL782:
 12071              	.L629:
 12072              		.cfi_restore_state
 12073              	.LBB7878:
 12074              	.LBB7873:
 12075              	.LBB7853:
 12076              	.LBB7849:
 12077              	.LBB7846:
 12078              	.LBB7843:
 12079              	.LBB7840:
 12080              	.LBB7837:
 12081              	.LBB7824:
 12082              	.LBB7804:
 12083              	.LBB7801:
 12084              	.LBB7792:
 12085              	.LBI7792:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12086              		.loc 19 346 7 is_stmt 1 view .LVU2760
 12087              	.LBB7793:
 12088              	.LBI7793:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 12089              		.loc 20 387 7 view .LVU2761
 12090              	.LBB7794:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 12091              		.loc 20 389 2 view .LVU2762
 12092 004a 0028     		cmp	r0, #0
 12093 004c EDD0     		beq	.L630
 12094 004e 08E0     		b	.L628
 12095              	.LVL783:
 12096              	.L635:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 12097              		.loc 20 389 2 is_stmt 0 view .LVU2763
 12098              	.LBE7794:
 12099              	.LBE7793:
 12100              	.LBE7792:
 12101              	.LBE7801:
 12102              	.LBE7804:
 12103              	.LBE7824:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 12104              		.loc 23 219 13 view .LVU2764
 12105 0050 0022     		movs	r2, #0
 12106 0052 01A9     		add	r1, sp, #4
 12107 0054 2046     		mov	r0, r4
 12108              	.LVL784:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 12109              		.loc 23 219 13 view .LVU2765
 12110 0056 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 12111              	.LVL785:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 462


 12112              	.LBB7825:
 12113              	.LBB7826:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12114              		.loc 19 211 31 view .LVU2766
 12115 005a 019B     		ldr	r3, [sp, #4]
 12116              	.LBE7826:
 12117              	.LBE7825:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 12118              		.loc 23 219 13 view .LVU2767
 12119 005c 0746     		mov	r7, r0
 12120              	.LVL786:
 12121              	.LBB7828:
 12122              	.LBI7828:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 12123              		.loc 19 178 7 is_stmt 1 view .LVU2768
 12124              	.LBB7829:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12125              		.loc 19 179 26 is_stmt 0 view .LVU2769
 12126 005e 2060     		str	r0, [r4]
 12127              	.LVL787:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12128              		.loc 19 179 26 view .LVU2770
 12129              	.LBE7829:
 12130              	.LBE7828:
 12131              	.LBB7830:
 12132              	.LBI7825:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 12133              		.loc 19 210 7 is_stmt 1 view .LVU2771
 12134              	.LBB7827:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12135              		.loc 19 211 31 is_stmt 0 view .LVU2772
 12136 0060 A360     		str	r3, [r4, #8]
 12137              	.LVL788:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12138              		.loc 19 211 31 view .LVU2773
 12139              	.LBE7827:
 12140              	.LBE7830:
 12141              	.LBB7831:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12142              		.loc 19 186 7 is_stmt 1 view .LVU2774
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12143              		.loc 19 186 7 is_stmt 0 view .LVU2775
 12144              	.LBE7831:
 12145              	.LBB7832:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 12146              		.loc 19 396 7 is_stmt 1 view .LVU2776
 12147              	.LBB7805:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12148              		.loc 19 346 7 view .LVU2777
 12149              	.LBB7802:
 12150              	.LBB7799:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12151              		.loc 19 346 7 view .LVU2778
 12152              	.LBB7797:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 12153              		.loc 20 387 7 view .LVU2779
 12154              	.LBB7795:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 463


 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 12155              		.loc 20 389 2 view .LVU2780
 12156              	.L628:
 12157              		.loc 20 395 2 view .LVU2781
 12158              		.loc 20 395 49 is_stmt 0 view .LVU2782
 12159 0062 3246     		mov	r2, r6
 12160 0064 3846     		mov	r0, r7
 12161 0066 4146     		mov	r1, r8
 12162 0068 FFF7FEFF 		bl	memcpy
 12163              	.LVL789:
 12164              	.LBE7795:
 12165              	.LBE7797:
 12166              	.LBE7799:
 12167              	.LBE7802:
 12168              	.LBE7805:
 12169              	.LBE7832:
 12170              		.loc 23 232 15 view .LVU2783
 12171 006c 019E     		ldr	r6, [sp, #4]
 12172              	.LVL790:
 12173              	.LBB7833:
 12174              	.LBB7822:
 12175              	.LBB7820:
 12176              	.LBB7817:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12177              		.loc 19 187 28 view .LVU2784
 12178 006e 2768     		ldr	r7, [r4]
 12179              	.LVL791:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12180              		.loc 19 187 28 view .LVU2785
 12181              	.LBE7817:
 12182              	.LBE7820:
 12183              	.LBE7822:
 12184              	.LBE7833:
 12185              	.LBB7834:
 12186              	.LBB7806:
 12187              	.LBB7803:
 12188              	.LBB7800:
 12189              	.LBB7798:
 12190              	.LBB7796:
 12191              		.loc 20 395 66 view .LVU2786
 12192 0070 DBE7     		b	.L630
 12193              	.LBE7796:
 12194              	.LBE7798:
 12195              	.LBE7800:
 12196              	.LBE7803:
 12197              	.LBE7806:
 12198              	.LBE7834:
 12199              	.LBE7837:
 12200              	.LBE7840:
 12201              	.LBE7843:
 12202              	.LBE7846:
 12203              	.LBE7849:
 12204              	.LBE7853:
 12205              	.LBE7873:
 12206              	.LBE7878:
 12207              		.cfi_endproc
 12208              	.LFE5489:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 464


 12210              		.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA6_KcS
 12211              		.thumb_set _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA
 12212 0072 00BF     		.section	.text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC
 12213              		.align	1
 12214              		.p2align 2,,3
 12215              		.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS
 12216              		.syntax unified
 12217              		.thumb
 12218              		.thumb_func
 12219              		.fpu fpv5-d16
 12221              	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS9_Lb1EE
 12222              	.LVL792:
 12223              	.LFB5493:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 12224              		.loc 30 352 12 is_stmt 1 view -0
 12225              		.cfi_startproc
 12226              		@ args = 0, pretend = 0, frame = 8
 12227              		@ frame_needed = 0, uses_anonymous_args = 0
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 12228              		.loc 30 352 12 is_stmt 0 view .LVU2788
 12229 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 12230              		.cfi_def_cfa_offset 24
 12231              		.cfi_offset 4, -24
 12232              		.cfi_offset 5, -20
 12233              		.cfi_offset 6, -16
 12234              		.cfi_offset 7, -12
 12235              		.cfi_offset 8, -8
 12236              		.cfi_offset 14, -4
 12237 0004 0446     		mov	r4, r0
 12238              	.LBB7943:
 12239              	.LBB7944:
 12240              	.LBB7945:
 12241              	.LBB7946:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 12242              		.loc 19 193 51 view .LVU2789
 12243 0006 00F10807 		add	r7, r0, #8
 12244              	.LBE7946:
 12245              	.LBE7945:
 12246              	.LBE7944:
 12247              	.LBE7943:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 12248              		.loc 30 352 12 view .LVU2790
 12249 000a 82B0     		sub	sp, sp, #8
 12250              		.cfi_def_cfa_offset 32
 12251              	.LBB8055:
 12252              	.LBB8035:
 12253              	.LBB7947:
 12254              	.LBB7948:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12255              		.loc 20 357 25 view .LVU2791
 12256 000c 0846     		mov	r0, r1
 12257              	.LVL793:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12258              		.loc 20 357 25 view .LVU2792
 12259              	.LBE7948:
 12260              	.LBE7947:
 12261              	.LBB7952:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 465


 12262              	.LBB7953:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12263              		.loc 19 157 35 view .LVU2793
 12264 000e 2760     		str	r7, [r4]
 12265              	.LBE7953:
 12266              	.LBE7952:
 12267              	.LBE8035:
 12268              	.LBE8055:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 12269              		.loc 30 352 12 view .LVU2794
 12270 0010 8846     		mov	r8, r1
 12271              	.LVL794:
 12272              	.LBB8056:
 12273              	.LBB8036:
 12274              	.LBI8036:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 12275              		.loc 34 76 5 is_stmt 1 view .LVU2795
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 12276              		.loc 34 76 5 is_stmt 0 view .LVU2796
 12277              	.LBE8036:
 12278              	.LBB8037:
 12279              	.LBI8037:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 12280              		.loc 21 144 7 is_stmt 1 view .LVU2797
 12281              	.LBB8038:
 12282              	.LBI8038:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12283              		.loc 22 79 7 view .LVU2798
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12284              		.loc 22 79 7 is_stmt 0 view .LVU2799
 12285              	.LBE8038:
 12286              	.LBE8037:
 12287              	.LBB8039:
 12288              	.LBI7944:
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 12289              		.loc 19 525 7 is_stmt 1 view .LVU2800
 12290              	.LBB7957:
 12291              	.LBI7945:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12292              		.loc 19 190 7 view .LVU2801
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12293              		.loc 19 190 7 is_stmt 0 view .LVU2802
 12294              	.LBE7957:
 12295              	.LBB7958:
 12296              	.LBI7952:
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 12297              		.loc 19 156 2 is_stmt 1 view .LVU2803
 12298              	.LBB7956:
 12299              	.LBB7954:
 12300              	.LBI7954:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12301              		.loc 21 147 7 view .LVU2804
 12302              	.LBB7955:
 12303              	.LBI7955:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12304              		.loc 22 82 7 view .LVU2805
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 466


 12305              		.loc 22 82 7 is_stmt 0 view .LVU2806
 12306              	.LBE7955:
 12307              	.LBE7954:
 12308              	.LBE7956:
 12309              	.LBE7958:
 12310              	.LBB7959:
 12311              	.LBI7947:
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 12312              		.loc 20 351 7 is_stmt 1 view .LVU2807
 12313              	.LBB7949:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12314              		.loc 20 357 2 view .LVU2808
 12315              	.LBE7949:
 12316              	.LBE7959:
 12317              	.LBE8039:
 12318              	.LBE8056:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 12319              		.loc 30 352 12 is_stmt 0 view .LVU2809
 12320 0012 1546     		mov	r5, r2
 12321              	.LBB8057:
 12322              	.LBB8040:
 12323              	.LBB7960:
 12324              	.LBB7950:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12325              		.loc 20 357 25 view .LVU2810
 12326 0014 FFF7FEFF 		bl	strlen
 12327              	.LVL795:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12328              		.loc 20 357 25 view .LVU2811
 12329              	.LBE7950:
 12330              	.LBE7960:
 12331              	.LBB7961:
 12332              	.LBB7962:
 12333              	.LBB7963:
 12334              	.LBB7964:
 12335              	.LBB7965:
 12336              	.LBB7966:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 12337              		.loc 23 217 2 view .LVU2812
 12338 0018 0F28     		cmp	r0, #15
 12339              	.LBE7966:
 12340              	.LBE7965:
 12341              	.LBE7964:
 12342              	.LBE7963:
 12343              	.LBE7962:
 12344              	.LBE7961:
 12345              	.LBB8031:
 12346              	.LBB7951:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12347              		.loc 20 357 25 view .LVU2813
 12348 001a 0646     		mov	r6, r0
 12349              	.LVL796:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12350              		.loc 20 357 25 view .LVU2814
 12351              	.LBE7951:
 12352              	.LBE8031:
 12353              	.LBB8032:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 467


 12354              	.LBI7961:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 12355              		.loc 19 263 9 is_stmt 1 view .LVU2815
 12356              	.LBB8028:
 12357              	.LBB8025:
 12358              	.LBI7963:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 12359              		.loc 19 243 9 view .LVU2816
 12360              	.LBB8022:
 12361              	.LBB8019:
 12362              	.LBI7965:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 12363              		.loc 23 206 7 view .LVU2817
 12364              	.LBB8016:
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 12365              		.loc 23 215 12 is_stmt 0 view .LVU2818
 12366 001c 0190     		str	r0, [sp, #4]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 12367              		.loc 23 217 2 view .LVU2819
 12368 001e 17D8     		bhi	.L645
 12369              	.LVL797:
 12370              	.LBB7967:
 12371              	.LBI7967:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12372              		.loc 19 186 7 is_stmt 1 view .LVU2820
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12373              		.loc 19 186 7 is_stmt 0 view .LVU2821
 12374              	.LBE7967:
 12375              	.LBB7968:
 12376              	.LBI7968:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 12377              		.loc 19 396 7 is_stmt 1 view .LVU2822
 12378              	.LBB7969:
 12379              	.LBI7969:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12380              		.loc 19 346 7 view .LVU2823
 12381              	.LBB7970:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 12382              		.loc 19 348 2 is_stmt 0 view .LVU2824
 12383 0020 0128     		cmp	r0, #1
 12384 0022 12D1     		bne	.L639
 12385              	.LVL798:
 12386              	.LBB7971:
 12387              	.LBI7971:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 12388              		.loc 20 321 7 is_stmt 1 view .LVU2825
 12389              	.LBB7972:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12390              		.loc 20 322 9 view .LVU2826
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12391              		.loc 20 322 14 is_stmt 0 view .LVU2827
 12392 0024 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 12393 0028 2372     		strb	r3, [r4, #8]
 12394              	.LVL799:
 12395              	.L640:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12396              		.loc 20 322 14 view .LVU2828
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 468


 12397              	.LBE7972:
 12398              	.LBE7971:
 12399              	.LBE7970:
 12400              	.LBE7969:
 12401              	.LBE7968:
 12402              	.LBB7988:
 12403              	.LBI7988:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12404              		.loc 19 214 7 is_stmt 1 view .LVU2829
 12405              	.LBB7989:
 12406              	.LBB7990:
 12407              	.LBI7990:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 12408              		.loc 19 182 7 view .LVU2830
 12409              	.LBE7990:
 12410              	.LBB7992:
 12411              	.LBB7993:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12412              		.loc 20 322 14 is_stmt 0 view .LVU2831
 12413 002a 0023     		movs	r3, #0
 12414              	.LBE7993:
 12415              	.LBE7992:
 12416              	.LBB7996:
 12417              	.LBB7991:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12418              		.loc 19 183 26 view .LVU2832
 12419 002c 6660     		str	r6, [r4, #4]
 12420              	.LVL800:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12421              		.loc 19 183 26 view .LVU2833
 12422              	.LBE7991:
 12423              	.LBE7996:
 12424              	.LBB7997:
 12425              	.LBI7997:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12426              		.loc 19 186 7 is_stmt 1 view .LVU2834
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12427              		.loc 19 186 7 is_stmt 0 view .LVU2835
 12428              	.LBE7997:
 12429              	.LBB7999:
 12430              	.LBI7992:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 12431              		.loc 20 321 7 is_stmt 1 view .LVU2836
 12432              	.LBB7994:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12433              		.loc 20 322 9 view .LVU2837
 12434              	.LBE7994:
 12435              	.LBE7999:
 12436              	.LBE7989:
 12437              	.LBE7988:
 12438              	.LBE8016:
 12439              	.LBE8019:
 12440              	.LBE8022:
 12441              	.LBE8025:
 12442              	.LBE8028:
 12443              	.LBE8032:
 12444              	.LBE8040:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 469


 12445              	.LBE8057:
 12446              		.loc 30 353 68 is_stmt 0 view .LVU2838
 12447 002e 2046     		mov	r0, r4
 12448              	.LBB8058:
 12449              	.LBB8041:
 12450              	.LBB8033:
 12451              	.LBB8029:
 12452              	.LBB8026:
 12453              	.LBB8023:
 12454              	.LBB8020:
 12455              	.LBB8017:
 12456              	.LBB8004:
 12457              	.LBB8002:
 12458              	.LBB8000:
 12459              	.LBB7995:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12460              		.loc 20 322 14 view .LVU2839
 12461 0030 BB55     		strb	r3, [r7, r6]
 12462              	.LVL801:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12463              		.loc 20 322 14 view .LVU2840
 12464              	.LBE7995:
 12465              	.LBE8000:
 12466              	.LBE8002:
 12467              	.LBE8004:
 12468              	.LBE8017:
 12469              	.LBE8020:
 12470              	.LBE8023:
 12471              	.LBE8026:
 12472              	.LBE8029:
 12473              	.LBE8033:
 12474              	.LBE8041:
 12475              	.LBB8042:
 12476              	.LBI8042:
 12477              		.loc 21 162 7 is_stmt 1 view .LVU2841
 12478              	.LBB8043:
 12479              	.LBI8043:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12480              		.loc 22 89 7 view .LVU2842
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12481              		.loc 22 89 7 is_stmt 0 view .LVU2843
 12482              	.LBE8043:
 12483              	.LBE8042:
 12484              	.LBB8044:
 12485              	.LBI8044:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 12486              		.loc 34 76 5 is_stmt 1 view .LVU2844
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 12487              		.loc 34 76 5 is_stmt 0 view .LVU2845
 12488              	.LBE8044:
 12489              	.LBB8045:
 12490              	.LBI8045:
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 12491              		.loc 26 572 7 is_stmt 1 view .LVU2846
 12492              	.LBB8046:
 12493              	.LBI8046:
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 470


 12494              		.loc 26 308 7 view .LVU2847
 12495              	.LBB8047:
 12496              	.LBI8047:
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 12497              		.loc 26 143 2 view .LVU2848
 12498              	.LBB8048:
 12499              	.LBI8048:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 12500              		.loc 34 101 5 view .LVU2849
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 12501              		.loc 34 101 5 is_stmt 0 view .LVU2850
 12502              	.LBE8048:
 12503              	.LBB8049:
 12504              	.LBI8049:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12505              		.loc 21 147 7 is_stmt 1 view .LVU2851
 12506              	.LBB8050:
 12507              	.LBI8050:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12508              		.loc 22 82 7 view .LVU2852
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12509              		.loc 22 82 7 is_stmt 0 view .LVU2853
 12510              	.LBE8050:
 12511              	.LBE8049:
 12512              	.LBB8051:
 12513              	.LBI8051:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 12514              		.loc 34 101 5 is_stmt 1 view .LVU2854
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 12515              		.loc 34 101 5 is_stmt 0 view .LVU2855
 12516              	.LBE8051:
 12517              	.LBB8052:
 12518              	.LBI8052:
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 12519              		.loc 26 102 2 is_stmt 1 view .LVU2856
 12520              	.LBB8053:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 12521              		.loc 26 104 43 is_stmt 0 view .LVU2857
 12522 0032 D5E90012 		ldrd	r1, r2, [r5]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 12523              		.loc 26 105 17 view .LVU2858
 12524 0036 2B60     		str	r3, [r5]
 12525              	.LVL802:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 12526              		.loc 26 104 43 view .LVU2859
 12527 0038 E261     		str	r2, [r4, #28]
 12528 003a AA68     		ldr	r2, [r5, #8]
 12529 003c A161     		str	r1, [r4, #24]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 12530              		.loc 26 105 33 view .LVU2860
 12531 003e 6B60     		str	r3, [r5, #4]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 12532              		.loc 26 105 57 view .LVU2861
 12533 0040 AB60     		str	r3, [r5, #8]
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 12534              		.loc 26 104 43 view .LVU2862
 12535 0042 2262     		str	r2, [r4, #32]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 471


 12536              	.LBE8053:
 12537              	.LBE8052:
 12538              	.LBE8047:
 12539              	.LBE8046:
 12540              	.LBE8045:
 12541              	.LBE8058:
 12542              		.loc 30 353 68 view .LVU2863
 12543 0044 02B0     		add	sp, sp, #8
 12544              		.cfi_remember_state
 12545              		.cfi_def_cfa_offset 24
 12546              		@ sp needed
 12547 0046 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 12548              	.LVL803:
 12549              	.L639:
 12550              		.cfi_restore_state
 12551              	.LBB8059:
 12552              	.LBB8054:
 12553              	.LBB8034:
 12554              	.LBB8030:
 12555              	.LBB8027:
 12556              	.LBB8024:
 12557              	.LBB8021:
 12558              	.LBB8018:
 12559              	.LBB8005:
 12560              	.LBB7985:
 12561              	.LBB7982:
 12562              	.LBB7973:
 12563              	.LBI7973:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12564              		.loc 19 346 7 is_stmt 1 view .LVU2864
 12565              	.LBB7974:
 12566              	.LBI7974:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 12567              		.loc 20 387 7 view .LVU2865
 12568              	.LBB7975:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 12569              		.loc 20 389 2 view .LVU2866
 12570 004a 0028     		cmp	r0, #0
 12571 004c EDD0     		beq	.L640
 12572 004e 08E0     		b	.L638
 12573              	.LVL804:
 12574              	.L645:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 12575              		.loc 20 389 2 is_stmt 0 view .LVU2867
 12576              	.LBE7975:
 12577              	.LBE7974:
 12578              	.LBE7973:
 12579              	.LBE7982:
 12580              	.LBE7985:
 12581              	.LBE8005:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 12582              		.loc 23 219 13 view .LVU2868
 12583 0050 0022     		movs	r2, #0
 12584 0052 01A9     		add	r1, sp, #4
 12585 0054 2046     		mov	r0, r4
 12586              	.LVL805:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 472


 12587              		.loc 23 219 13 view .LVU2869
 12588 0056 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 12589              	.LVL806:
 12590              	.LBB8006:
 12591              	.LBB8007:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12592              		.loc 19 211 31 view .LVU2870
 12593 005a 019B     		ldr	r3, [sp, #4]
 12594              	.LBE8007:
 12595              	.LBE8006:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 12596              		.loc 23 219 13 view .LVU2871
 12597 005c 0746     		mov	r7, r0
 12598              	.LVL807:
 12599              	.LBB8009:
 12600              	.LBI8009:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 12601              		.loc 19 178 7 is_stmt 1 view .LVU2872
 12602              	.LBB8010:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12603              		.loc 19 179 26 is_stmt 0 view .LVU2873
 12604 005e 2060     		str	r0, [r4]
 12605              	.LVL808:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12606              		.loc 19 179 26 view .LVU2874
 12607              	.LBE8010:
 12608              	.LBE8009:
 12609              	.LBB8011:
 12610              	.LBI8006:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 12611              		.loc 19 210 7 is_stmt 1 view .LVU2875
 12612              	.LBB8008:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12613              		.loc 19 211 31 is_stmt 0 view .LVU2876
 12614 0060 A360     		str	r3, [r4, #8]
 12615              	.LVL809:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12616              		.loc 19 211 31 view .LVU2877
 12617              	.LBE8008:
 12618              	.LBE8011:
 12619              	.LBB8012:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12620              		.loc 19 186 7 is_stmt 1 view .LVU2878
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12621              		.loc 19 186 7 is_stmt 0 view .LVU2879
 12622              	.LBE8012:
 12623              	.LBB8013:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 12624              		.loc 19 396 7 is_stmt 1 view .LVU2880
 12625              	.LBB7986:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12626              		.loc 19 346 7 view .LVU2881
 12627              	.LBB7983:
 12628              	.LBB7980:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12629              		.loc 19 346 7 view .LVU2882
 12630              	.LBB7978:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 473


 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 12631              		.loc 20 387 7 view .LVU2883
 12632              	.LBB7976:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 12633              		.loc 20 389 2 view .LVU2884
 12634              	.L638:
 12635              		.loc 20 395 2 view .LVU2885
 12636              		.loc 20 395 49 is_stmt 0 view .LVU2886
 12637 0062 3246     		mov	r2, r6
 12638 0064 3846     		mov	r0, r7
 12639 0066 4146     		mov	r1, r8
 12640 0068 FFF7FEFF 		bl	memcpy
 12641              	.LVL810:
 12642              	.LBE7976:
 12643              	.LBE7978:
 12644              	.LBE7980:
 12645              	.LBE7983:
 12646              	.LBE7986:
 12647              	.LBE8013:
 12648              		.loc 23 232 15 view .LVU2887
 12649 006c 019E     		ldr	r6, [sp, #4]
 12650              	.LVL811:
 12651              	.LBB8014:
 12652              	.LBB8003:
 12653              	.LBB8001:
 12654              	.LBB7998:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12655              		.loc 19 187 28 view .LVU2888
 12656 006e 2768     		ldr	r7, [r4]
 12657              	.LVL812:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12658              		.loc 19 187 28 view .LVU2889
 12659              	.LBE7998:
 12660              	.LBE8001:
 12661              	.LBE8003:
 12662              	.LBE8014:
 12663              	.LBB8015:
 12664              	.LBB7987:
 12665              	.LBB7984:
 12666              	.LBB7981:
 12667              	.LBB7979:
 12668              	.LBB7977:
 12669              		.loc 20 395 66 view .LVU2890
 12670 0070 DBE7     		b	.L640
 12671              	.LBE7977:
 12672              	.LBE7979:
 12673              	.LBE7981:
 12674              	.LBE7984:
 12675              	.LBE7987:
 12676              	.LBE8015:
 12677              	.LBE8018:
 12678              	.LBE8021:
 12679              	.LBE8024:
 12680              	.LBE8027:
 12681              	.LBE8030:
 12682              	.LBE8034:
 12683              	.LBE8054:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 474


 12684              	.LBE8059:
 12685              		.cfi_endproc
 12686              	.LFE5493:
 12688              		.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA7_KcS
 12689              		.thumb_set _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA
 12690 0072 00BF     		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,"
 12691              		.align	1
 12692              		.p2align 2,,3
 12693              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
 12694              		.syntax unified
 12695              		.thumb
 12696              		.thumb_func
 12697              		.fpu fpv5-d16
 12699              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:
 12700              	.LVL813:
 12701              	.LFB5519:
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 12702              		.loc 26 553 7 is_stmt 1 view -0
 12703              		.cfi_startproc
 12704              		@ args = 0, pretend = 0, frame = 8
 12705              		@ frame_needed = 0, uses_anonymous_args = 0
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 12706              		.loc 26 553 7 is_stmt 0 view .LVU2892
 12707 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 12708              		.cfi_def_cfa_offset 32
 12709              		.cfi_offset 4, -32
 12710              		.cfi_offset 5, -28
 12711              		.cfi_offset 6, -24
 12712              		.cfi_offset 7, -20
 12713              		.cfi_offset 8, -16
 12714              		.cfi_offset 9, -12
 12715              		.cfi_offset 10, -8
 12716              		.cfi_offset 14, -4
 12717              	.LBB8160:
 12718              	.LBB8161:
 12719              	.LBB8162:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 12720              		.loc 26 919 50 view .LVU2893
 12721 0004 D1E90024 		ldrd	r2, r4, [r1]
 12722              	.LBE8162:
 12723              	.LBE8161:
 12724              	.LBB8163:
 12725              	.LBB8164:
 12726              	.LBB8165:
 12727              	.LBB8166:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 12728              		.loc 26 98 47 view .LVU2894
 12729 0008 0023     		movs	r3, #0
 12730              	.LBE8166:
 12731              	.LBE8165:
 12732              	.LBE8164:
 12733              	.LBE8163:
 12734              	.LBE8160:
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 12735              		.loc 26 553 7 view .LVU2895
 12736 000a 82B0     		sub	sp, sp, #8
 12737              		.cfi_def_cfa_offset 40
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 475


 12738              	.LBB8361:
 12739              	.LBB8200:
 12740              	.LBB8173:
 12741              	.LBB8174:
 12742              	.LBB8175:
 12743              	.LBB8176:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 12744              		.loc 26 346 18 view .LVU2896
 12745 000c A41A     		subs	r4, r4, r2
 12746              	.LBE8176:
 12747              	.LBE8175:
 12748              	.LBE8174:
 12749              	.LBE8173:
 12750              	.LBE8200:
 12751              	.LBE8361:
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 12752              		.loc 26 553 7 view .LVU2897
 12753 000e 0D46     		mov	r5, r1
 12754 0010 8046     		mov	r8, r0
 12755              	.LVL814:
 12756              	.LBB8362:
 12757              	.LBB8201:
 12758              	.LBI8161:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 12759              		.loc 26 918 7 is_stmt 1 view .LVU2898
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 12760              		.loc 26 918 7 is_stmt 0 view .LVU2899
 12761              	.LBE8201:
 12762              	.LBB8202:
 12763              	.LBI8202:
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 12764              		.loc 26 280 7 is_stmt 1 view .LVU2900
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 12765              		.loc 26 280 7 is_stmt 0 view .LVU2901
 12766              	.LBE8202:
 12767              	.LBB8203:
 12768              	.LBI8203:
 12769              		.loc 35 97 29 is_stmt 1 view .LVU2902
 12770              	.LBB8204:
 12771              	.LBI8204:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 12772              		.loc 25 558 7 view .LVU2903
 12773              	.LBB8205:
 12774              	.LBI8205:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12775              		.loc 21 147 7 view .LVU2904
 12776              	.LBB8206:
 12777              	.LBI8206:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12778              		.loc 22 82 7 view .LVU2905
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12779              		.loc 22 82 7 is_stmt 0 view .LVU2906
 12780              	.LBE8206:
 12781              	.LBE8205:
 12782              	.LBE8204:
 12783              	.LBE8203:
 12784              	.LBB8207:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 476


 12785              	.LBI8163:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 12786              		.loc 26 303 7 is_stmt 1 view .LVU2907
 12787              	.LBB8194:
 12788              	.LBI8164:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 12789              		.loc 26 136 2 view .LVU2908
 12790              	.LBB8169:
 12791              	.LBI8169:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12792              		.loc 21 147 7 view .LVU2909
 12793              	.LBB8170:
 12794              	.LBI8170:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12795              		.loc 22 82 7 view .LVU2910
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12796              		.loc 22 82 7 is_stmt 0 view .LVU2911
 12797              	.LBE8170:
 12798              	.LBE8169:
 12799              	.LBB8171:
 12800              	.LBI8165:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 12801              		.loc 26 97 2 is_stmt 1 view .LVU2912
 12802              	.LBB8167:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 12803              		.loc 26 98 47 is_stmt 0 view .LVU2913
 12804 0012 8360     		str	r3, [r0, #8]
 12805              	.LVL815:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 12806              		.loc 26 98 47 view .LVU2914
 12807              	.LBE8167:
 12808              	.LBE8171:
 12809              	.LBE8194:
 12810              	.LBB8195:
 12811              	.LBI8173:
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 12812              		.loc 26 359 7 is_stmt 1 view .LVU2915
 12813              	.LBB8190:
 12814              	.LBB8186:
 12815              	.LBI8175:
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 12816              		.loc 26 343 7 view .LVU2916
 12817              	.LBE8186:
 12818              	.LBE8190:
 12819              	.LBE8195:
 12820              	.LBB8196:
 12821              	.LBB8172:
 12822              	.LBB8168:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 12823              		.loc 26 98 47 is_stmt 0 view .LVU2917
 12824 0014 C0E90033 		strd	r3, r3, [r0]
 12825              	.LBE8168:
 12826              	.LBE8172:
 12827              	.LBE8196:
 12828              	.LBB8197:
 12829              	.LBB8191:
 12830              	.LBB8187:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 477


 12831              	.LBB8183:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 12832              		.loc 26 346 18 view .LVU2918
 12833 0018 49D0     		beq	.L656
 12834              	.LVL816:
 12835              	.LBB8177:
 12836              	.LBI8177:
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 12837              		.loc 25 459 7 is_stmt 1 view .LVU2919
 12838              	.LBB8178:
 12839              	.LBI8178:
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 12840              		.loc 22 103 7 view .LVU2920
 12841              	.LBB8179:
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 12842              		.loc 22 105 2 is_stmt 0 view .LVU2921
 12843 001a 284B     		ldr	r3, .L672
 12844 001c 9C42     		cmp	r4, r3
 12845 001e 4BD8     		bhi	.L668
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 12846              		.loc 22 115 41 view .LVU2922
 12847 0020 2046     		mov	r0, r4
 12848              	.LVL817:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 12849              		.loc 22 115 41 view .LVU2923
 12850 0022 FFF7FEFF 		bl	_Znwj
 12851              	.LVL818:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 12852              		.loc 22 115 41 view .LVU2924
 12853 0026 8246     		mov	r10, r0
 12854              	.LVL819:
 12855              	.L647:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 12856              		.loc 22 115 41 view .LVU2925
 12857              	.LBE8179:
 12858              	.LBE8178:
 12859              	.LBE8177:
 12860              	.LBE8183:
 12861              	.LBE8187:
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 12862              		.loc 26 363 59 view .LVU2926
 12863 0028 5444     		add	r4, r4, r10
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 12864              		.loc 26 362 26 view .LVU2927
 12865 002a C8E900AA 		strd	r10, r10, [r8]
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 12866              		.loc 26 363 34 view .LVU2928
 12867 002e C8F80840 		str	r4, [r8, #8]
 12868              	.LVL820:
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 12869              		.loc 26 363 34 view .LVU2929
 12870              	.LBE8191:
 12871              	.LBE8197:
 12872              	.LBE8207:
 12873              	.LBB8208:
 12874              	.LBI8208:
 12875              		.loc 21 162 7 is_stmt 1 view .LVU2930
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 478


 12876              	.LBB8209:
 12877              	.LBI8209:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12878              		.loc 22 89 7 view .LVU2931
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12879              		.loc 22 89 7 is_stmt 0 view .LVU2932
 12880              	.LBE8209:
 12881              	.LBE8208:
 12882              	.LBB8210:
 12883              	.LBI8210:
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 12884              		.loc 26 820 7 is_stmt 1 view .LVU2933
 12885              	.LBB8211:
 12886              	.LBI8211:
 12887              		.file 39 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Iterators -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1996-1998
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 479


  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /** @file bits/stl_iterator.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This file implements reverse_iterator, back_insert_iterator,
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  front_insert_iterator, insert_iterator, __normal_iterator, and their
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  supporting functions and overloaded operators.
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #ifndef _STL_ITERATOR_H
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #define _STL_ITERATOR_H 1
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/cpp_type_traits.h>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <ext/type_traits.h>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/move.h>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/ptr_traits.h>
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <type_traits>
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201811L
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_constexpr_iterator 201811L
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #elif __cplusplus == 201703L
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201803L
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <compare>
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <new>
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <bits/iterator_concepts.h>
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @addtogroup iterators
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @{
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    */
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   namespace __detail
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   {
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // Weaken iterator_category _Cat to _Limit if it is derived from that,
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // otherwise use _Otherwise.
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<typename _Cat, typename _Limit, typename _Otherwise = _Cat>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 480


 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using __clamp_iter_cat
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<derived_from<_Cat, _Limit>, _Limit, _Otherwise>;
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   }
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.1 Reverse iterators
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Bidirectional and random access iterators have corresponding reverse
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator adaptors that iterate through the data structure in the
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  opposite direction.  They have the same signatures as the corresponding
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.  The fundamental relation between a reverse %iterator and its
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  corresponding %iterator @c i is established by the identity:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @code
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *      &*(reverse_iterator(i)) == &*(i - 1)
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @endcode
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  <em>This mapping is dictated by the fact that while there is always a
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  pointer past the end of an array, there might not be a valid pointer
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  before the beginning of an array.</em> [24.4.1]/1,2
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators can be tricky and surprising at first.  Their
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  semantics make sense, however, and the trickiness is a side effect of
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  the requirement that the iterators must be safe.
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class reverse_iterator
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<typename iterator_traits<_Iterator>::iterator_category,
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::value_type,
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::difference_type,
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::pointer,
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****                       typename iterator_traits<_Iterator>::reference>
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator current;
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer		pointer;
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference		reference;
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<random_access_iterator<_Iterator>,
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			random_access_iterator_tag,
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			bidirectional_iterator_tag>;
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_category
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= __detail::__clamp_iter_cat<typename __traits_type::iterator_category,
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 				     random_access_iterator_tag>;
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The default constructor value-initializes member @p current.
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  If it is a pointer, that means it is zero-initialized.
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 481


 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 235 No specification of default ctor for reverse_iterator
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 1012. reverse_iterator default ctor should value initialize
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator() : current() { }
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This %iterator will move in the opposite direction that @p x does.
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX17_CONSTEXPR
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(iterator_type __x) : current(__x) { }
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The copy constructor is normal.
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(const reverse_iterator& __x)
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : current(__x.current) { }
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator& operator=(const reverse_iterator&) = default;
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  A %reverse_iterator across other types can be copied if the
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  underlying %iterator can be converted to the type of @c current.
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_GLIBCXX17_CONSTEXPR
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         reverse_iterator(const reverse_iterator<_Iter>& __x)
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	: current(__x.base()) { }
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c current, the %iterator used for underlying work.
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR iterator_type
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return current; }
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reference to the value at @c --current
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @warning This implementation requires that for an iterator of the
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           underlying iterator type, @c x, a reference obtained by
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           @c *x remains valid after @c x has been modified or
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *--__tmp;
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 482


 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A pointer to the value at @c --current
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR pointer
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_concepts >= 201907L
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires is_pointer_v<_Iterator>
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	|| requires(const _Iterator __i) { __i.operator->(); }
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// 1052. operator-> should also support smart pointers
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--__tmp;
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return _S_to_pointer(__tmp);
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The original value of @c *this
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--()
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator with the previous value of @c *this
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 483


 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--(int)
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(difference_type __n) const
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current - __n); }
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator backwards @a __n steps.
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+=(difference_type __n)
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current -= __n;
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(difference_type __n) const
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current + __n); }
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator forwards @a __n steps.
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-=(difference_type __n)
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current += __n;
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The value at @c current - @a __n - 1
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 484


 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator[](difference_type __n) const
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *(*this + __n); }
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend constexpr iter_rvalue_reference_t<_Iterator>
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       iter_move(const reverse_iterator& __i)
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(is_nothrow_copy_constructible_v<_Iterator>
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       && noexcept(ranges::iter_move(--std::declval<_Iterator&>())))
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	auto __tmp = __i.base();
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return ranges::iter_move(--__tmp);
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<indirectly_swappable<_Iterator> _Iter2>
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	friend constexpr void
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter_swap(const reverse_iterator& __x,
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		  const reverse_iterator<_Iter2>& __y)
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	noexcept(is_nothrow_copy_constructible_v<_Iterator>
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && is_nothrow_copy_constructible_v<_Iter2>
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && noexcept(ranges::iter_swap(--std::declval<_Iterator&>(),
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					       --std::declval<_Iter2&>())))
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __xtmp = __x.base();
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __ytmp = __y.base();
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  ranges::iter_swap(--__xtmp, --__ytmp);
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	}
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     private:
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR _Tp*
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp* __p)
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __p; }
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR pointer
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp __t)
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __t.operator->(); }
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@{
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A %reverse_iterator.
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __y  A %reverse_iterator.
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  A simple bool.
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators forward comparisons to their underlying base()
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus <= 201703L || ! defined __cpp_lib_concepts
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 485


 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_Iterator>& __x,
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_Iterator>& __x,
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_Iterator>& __x,
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_Iterator>& __x,
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_Iterator>& __x,
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_Iterator>& __x,
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 280. Comparison of reverse_iterator to const reverse_iterator.
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 486


 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else // C++20
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() == __y.base() } -> convertible_to<bool>; }
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() != __y.base() } -> convertible_to<bool>; }
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() != __y.base(); }
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() > __y.base() } -> convertible_to<bool>; }
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() > __y.base(); }
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() < __y.base() } -> convertible_to<bool>; }
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() < __y.base(); }
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() >= __y.base() } -> convertible_to<bool>; }
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() >= __y.base(); }
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() <= __y.base() } -> convertible_to<bool>; }
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() <= __y.base(); }
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 487


 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL,
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	   three_way_comparable_with<_IteratorL> _IteratorR>
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr compare_three_way_result_t<_IteratorL, _IteratorR>
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=>(const reverse_iterator<_IteratorL>& __x,
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const reverse_iterator<_IteratorR>& __y)
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() <=> __x.base(); }
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++20
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@}
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_Iterator>::difference_type
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_IteratorL>::difference_type
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 685. reverse_iterator/move_iterator difference has invalid signatures
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR auto
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__y.base() - __x.base())
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __x)
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__x.base() - __n); }
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Same as C++14 make_reverse_iterator but used in C++11 mode too.
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __make_reverse_iterator(_Iterator __i)
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # if __cplusplus >= 201402L
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  define __cpp_lib_make_reverse_iterator 201402
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 2285. make_reverse_iterator
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /// Generator function for reverse_iterator.
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     make_reverse_iterator(_Iterator __i)
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  if __cplusplus > 201703L && defined __cpp_lib_concepts
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 488


 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator1, typename _Iterator2>
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires (!sized_sentinel_for<_Iterator1, _Iterator2>)
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline constexpr bool
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     disable_sized_sentinel_for<reverse_iterator<_Iterator1>,
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			       reverse_iterator<_Iterator2>> = true;
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  endif // C++20
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # endif // C++14
 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __niter_base(reverse_iterator<_Iterator> __it)
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__niter_base(__it.base())))
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__niter_base(__it.base())); }
 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     struct __is_move_iterator<reverse_iterator<_Iterator> >
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : __is_move_iterator<_Iterator>
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { };
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __miter_base(reverse_iterator<_Iterator> __it)
 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__miter_base(__it.base())))
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__miter_base(__it.base())); }
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++11
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.2.2.1 back_insert_iterator
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator appends it to the container using
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_back.
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the back_inserter function to create these iterators can
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class back_insert_iterator
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr back_insert_iterator() noexcept : container(nullptr) { }
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 489


 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator(_Container& __x)
 614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the end, if you like).  Assigning a value to the %iterator will
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always append the value to the end of the container.
 626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(std::move(__value));
 648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator
 667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 490


 670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of back_insert_iterator working on @p __x.
 674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating back_insert_iterator instances.
 676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline back_insert_iterator<_Container>
 685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     back_inserter(_Container& __x)
 686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return back_insert_iterator<_Container>(__x); }
 687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator prepends it to the container using
 693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_front.
 694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the front_inserter function to create these iterators can
 696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class front_insert_iterator
 700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr front_insert_iterator() noexcept : container(nullptr) { }
 712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator(_Container& __x)
 717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 491


 727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the front, if you like).  Assigning a value to the %iterator will
 728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always prepend the value to the front of the container.
 729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(std::move(__value));
 751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator
 770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of front_insert_iterator working on @p x.
 777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating front_insert_iterator instances.
 779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 492


 784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline front_insert_iterator<_Container>
 788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     front_inserter(_Container& __x)
 789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return front_insert_iterator<_Container>(__x); }
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator inserts it in the container at the
 796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position, rather than overwriting the value at that
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  position.
 798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  (Sequences will actually insert a @e copy of the value before the
 800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position.)
 801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the inserter function to create these iterators can
 803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class insert_iterator
 807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using _Iter = std::__detail::__range_iter_t<_Container>;
 811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container = nullptr;
 814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter = _Iter();
 815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename _Container::iterator		_Iter;
 817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter;
 821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator() = default;
 831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The only way to create this %iterator is with a container and an
 835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  initial position (a normal %iterator into the container).
 836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator(_Container& __x, _Iter __i)
 839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)), iter(__i) {}
 840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 493


 841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator maintains its own position in the
 848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container.  Assigning a value to the %iterator will insert the
 849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  value into the container at the place before the %iterator.
 850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The position is maintained such that subsequent assignments will
 852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  insert values immediately after one another.  For example,
 853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @code
 854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A and Z
 855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     insert_iterator i (v, ++v.begin());
 857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 1;
 858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 2;
 859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 3;
 860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A, 1, 2, 3, and Z
 862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @endcode
 863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, std::move(__value));
 887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 494


 898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __x  A container of arbitrary type.
 913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __i  An iterator into the container.
 914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of insert_iterator working on @p __x.
 915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating insert_iterator instances.
 917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr insert_iterator<_Container>
 926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, std::__detail::__range_iter_t<_Container> __i)
 927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return insert_iterator<_Container>(__x, __i); }
 928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container, typename _Iterator>
 930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline insert_iterator<_Container>
 931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, _Iterator __i)
 932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       return insert_iterator<_Container>(__x,
 934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					 typename _Container::iterator(__i));
 935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     }
 936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // @} group iterators
 939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** } // namespace
 942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
 945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // This iterator adapter is @a normal in the sense that it does not
 948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // change the semantics of any of the operators of its iterator
 949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // parameter.  Its primary purpose is to convert an iterator that is
 950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // not a class, e.g. a pointer, into an iterator that is a class.
 951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // The _Container parameter exists solely so that different containers
 952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // using this template can instantiate different types, even if the
 953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _Iterator parameter is the same.
 954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 495


 955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class __normal_iterator
 956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator _M_current;
 959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef std::iterator_traits<_Iterator>		__traits_type;
 961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type 	difference_type;
 967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference 	reference;
 968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer   	pointer;
 969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept = std::__detail::__iter_concept<_Iterator>;
 972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
 975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(_Iterator()) { }
 976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 12888              		.loc 39 978 7 view .LVU2934
 12889              	.LBE8211:
 12890              	.LBE8210:
 12891              	.LBB8212:
 12892              	.LBB8213:
 12893              	.LBB8214:
 979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 12894              		.loc 39 979 23 is_stmt 0 view .LVU2935
 12895 0032 D5E90069 		ldrd	r6, r9, [r5]
 12896              	.LVL821:
 12897              		.loc 39 979 23 view .LVU2936
 12898              	.LBE8214:
 12899              	.LBE8213:
 12900              	.LBE8212:
 12901              	.LBB8215:
 12902              	.LBI8215:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 12903              		.loc 26 276 7 is_stmt 1 view .LVU2937
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 12904              		.loc 26 276 7 is_stmt 0 view .LVU2938
 12905              	.LBE8215:
 12906              	.LBB8216:
 12907              	.LBI8216:
 12908              		.loc 37 323 5 is_stmt 1 view .LVU2939
 12909              	.LBB8217:
 12910              	.LBI8217:
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 12911              		.loc 37 125 5 view .LVU2940
 12912              	.LBB8218:
 12913              	.LBB8219:
 12914              	.LBI8219:
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 12915              		.loc 37 84 9 view .LVU2941
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 496


 12916              	.LBB8220:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 12917              		.loc 37 90 23 view .LVU2942
 12918 0036 B145     		cmp	r9, r6
 12919 0038 33D0     		beq	.L649
 12920 003a 0AF11804 		add	r4, r10, #24
 12921 003e 0AE0     		b	.L655
 12922              	.LVL822:
 12923              	.L671:
 12924              	.LBB8221:
 12925              	.LBB8222:
 12926              	.LBB8223:
 12927              	.LBB8224:
 12928              	.LBB8225:
 12929              	.LBB8226:
 12930              	.LBB8227:
 12931              	.LBB8228:
 12932              	.LBB8229:
 12933              	.LBB8230:
 12934              	.LBB8231:
 12935              	.LBB8232:
 12936              	.LBB8233:
 12937              	.LBI8233:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 12938              		.loc 20 321 7 view .LVU2943
 12939              	.LBB8234:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12940              		.loc 20 322 9 view .LVU2944
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12941              		.loc 20 322 16 is_stmt 0 view .LVU2945
 12942 0040 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 12943              	.LVL823:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12944              		.loc 20 322 14 view .LVU2946
 12945 0042 04F8103C 		strb	r3, [r4, #-16]
 12946              	.LVL824:
 12947              	.L654:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12948              		.loc 20 322 14 view .LVU2947
 12949              	.LBE8234:
 12950              	.LBE8233:
 12951              	.LBE8232:
 12952              	.LBE8231:
 12953              	.LBE8230:
 12954              	.LBB8255:
 12955              	.LBI8255:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12956              		.loc 19 214 7 is_stmt 1 view .LVU2948
 12957              	.LBB8256:
 12958              	.LBB8257:
 12959              	.LBI8257:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 12960              		.loc 19 182 7 view .LVU2949
 12961              	.LBE8257:
 12962              	.LBE8256:
 12963              	.LBE8255:
 12964              	.LBE8229:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 497


 12965              	.LBE8228:
 12966              	.LBE8227:
 12967              	.LBE8226:
 12968              	.LBE8225:
 12969              	.LBE8224:
 12970              	.LBE8223:
 12971              	.LBE8222:
 12972              	.LBE8221:
 12973              	.LBB8341:
 12974              	.LBB8342:
 980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Allow iterator to const_iterator conversion
 982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         _GLIBCXX20_CONSTEXPR
 984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         __normal_iterator(const __normal_iterator<_Iter,
 985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			  typename __enable_if<
 986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
 987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
 988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         : _M_current(__i.base()) { }
 989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Forward iterator requirements
 991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reference
 993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const _GLIBCXX_NOEXCEPT
 994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *_M_current; }
 995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       pointer
 998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const _GLIBCXX_NOEXCEPT
 999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++() _GLIBCXX_NOEXCEPT
1004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++_M_current;
 12975              		.loc 39 1005 2 is_stmt 0 view .LVU2950
 12976 0046 1836     		adds	r6, r6, #24
 12977              	.LVL825:
 12978              		.loc 39 1005 2 view .LVU2951
 12979              	.LBE8342:
 12980              	.LBE8341:
 12981              	.LBB8343:
 12982              	.LBB8336:
 12983              	.LBB8331:
 12984              	.LBB8308:
 12985              	.LBB8304:
 12986              	.LBB8300:
 12987              	.LBB8296:
 12988              	.LBB8292:
 12989              	.LBB8288:
 12990              	.LBB8272:
 12991              	.LBB8269:
 12992              	.LBB8259:
 12993              	.LBB8260:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12994              		.loc 20 322 14 view .LVU2952
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 498


 12995 0048 0023     		movs	r3, #0
 12996              	.LBE8260:
 12997              	.LBE8259:
 12998              	.LBB8263:
 12999              	.LBB8258:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13000              		.loc 19 183 26 view .LVU2953
 13001 004a 44F8145C 		str	r5, [r4, #-20]
 13002              	.LVL826:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13003              		.loc 19 183 26 view .LVU2954
 13004              	.LBE8258:
 13005              	.LBE8263:
 13006              	.LBB8264:
 13007              	.LBI8264:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13008              		.loc 19 186 7 is_stmt 1 view .LVU2955
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13009              		.loc 19 186 7 is_stmt 0 view .LVU2956
 13010              	.LBE8264:
 13011              	.LBB8266:
 13012              	.LBI8259:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 13013              		.loc 20 321 7 is_stmt 1 view .LVU2957
 13014              	.LBB8261:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13015              		.loc 20 322 9 view .LVU2958
 13016              	.LBE8261:
 13017              	.LBE8266:
 13018              	.LBE8269:
 13019              	.LBE8272:
 13020              	.LBE8288:
 13021              	.LBE8292:
 13022              	.LBE8296:
 13023              	.LBE8300:
 13024              	.LBE8304:
 13025              	.LBE8308:
 13026              	.LBE8331:
 13027              	.LBE8336:
 13028              	.LBE8343:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 13029              		.loc 37 90 23 is_stmt 0 view .LVU2959
 13030 004e 1834     		adds	r4, r4, #24
 13031              	.LVL827:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 13032              		.loc 37 90 23 view .LVU2960
 13033 0050 4E45     		cmp	r6, r9
 13034              	.LBB8344:
 13035              	.LBB8337:
 13036              	.LBB8332:
 13037              	.LBB8309:
 13038              	.LBB8305:
 13039              	.LBB8301:
 13040              	.LBB8297:
 13041              	.LBB8293:
 13042              	.LBB8289:
 13043              	.LBB8273:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 499


 13044              	.LBB8270:
 13045              	.LBB8267:
 13046              	.LBB8262:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13047              		.loc 20 322 14 view .LVU2961
 13048 0052 4355     		strb	r3, [r0, r5]
 13049              	.LVL828:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13050              		.loc 20 322 14 view .LVU2962
 13051              	.LBE8262:
 13052              	.LBE8267:
 13053              	.LBE8270:
 13054              	.LBE8273:
 13055              	.LBE8289:
 13056              	.LBE8293:
 13057              	.LBE8297:
 13058              	.LBE8301:
 13059              	.LBE8305:
 13060              	.LBE8309:
 13061              	.LBE8332:
 13062              	.LBE8337:
 13063              	.LBE8344:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 13064              		.loc 37 90 8 is_stmt 1 view .LVU2963
 13065              	.LBB8345:
 13066              	.LBI8341:
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 13067              		.loc 39 1003 7 view .LVU2964
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 13068              		.loc 39 1003 7 is_stmt 0 view .LVU2965
 13069              	.LBE8345:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 13070              		.loc 37 90 23 is_stmt 1 view .LVU2966
 13071 0054 25D0     		beq	.L649
 13072              	.L655:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 13073              		.loc 37 90 23 is_stmt 0 view .LVU2967
 13074 0056 A4F11000 		sub	r0, r4, #16
 13075              	.LBB8346:
 13076              	.LBB8338:
 13077              	.LBB8333:
 13078              	.LBB8310:
 13079              	.LBB8311:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13080              		.loc 19 908 16 view .LVU2968
 13081 005a 7568     		ldr	r5, [r6, #4]
 13082 005c A4F11803 		sub	r3, r4, #24
 13083              	.LVL829:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13084              		.loc 19 908 16 view .LVU2969
 13085              	.LBE8311:
 13086              	.LBE8310:
 13087              	.LBE8333:
 13088              	.LBE8338:
 13089              	.LBI8221:
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 13090              		.loc 27 108 5 is_stmt 1 view .LVU2970
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 500


 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 13091              		.loc 27 108 5 is_stmt 0 view .LVU2971
 13092              	.LBE8346:
 13093              	.LBE8220:
 13094              	.LBE8219:
 13095              	.LBE8218:
 13096              	.LBE8217:
 13097              	.LBE8216:
 13098              	.LBE8362:
 13099              		.loc 18 175 3 is_stmt 1 view .LVU2972
 13100              	.LBB8363:
 13101              	.LBB8357:
 13102              	.LBB8355:
 13103              	.LBB8353:
 13104              	.LBB8351:
 13105              	.LBB8349:
 13106              	.LBB8347:
 13107              	.LBB8339:
 13108              	.LBI8222:
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 13109              		.loc 19 448 7 view .LVU2973
 13110              	.LBB8334:
 13111              	.LBB8312:
 13112              	.LBI8312:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13113              		.loc 19 190 7 view .LVU2974
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13114              		.loc 19 190 7 is_stmt 0 view .LVU2975
 13115              	.LBE8312:
 13116              	.LBB8313:
 13117              	.LBI8313:
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 13118              		.loc 19 290 7 is_stmt 1 view .LVU2976
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 13119              		.loc 19 290 7 is_stmt 0 view .LVU2977
 13120              	.LBE8313:
 13121              	.LBB8314:
 13122              	.LBI8314:
 13123              		.loc 35 97 29 is_stmt 1 view .LVU2978
 13124              	.LBB8315:
 13125              	.LBI8315:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 13126              		.loc 25 558 7 view .LVU2979
 13127              	.LBB8316:
 13128              	.LBI8316:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13129              		.loc 21 147 7 view .LVU2980
 13130              	.LBB8317:
 13131              	.LBI8317:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13132              		.loc 22 82 7 view .LVU2981
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13133              		.loc 22 82 7 is_stmt 0 view .LVU2982
 13134              	.LBE8317:
 13135              	.LBE8316:
 13136              	.LBE8315:
 13137              	.LBE8314:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 501


 13138              	.LBB8318:
 13139              	.LBI8318:
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 13140              		.loc 19 159 2 is_stmt 1 view .LVU2983
 13141              	.LBB8319:
 13142              	.LBB8320:
 13143              	.LBI8320:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13144              		.loc 34 101 5 view .LVU2984
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13145              		.loc 34 101 5 is_stmt 0 view .LVU2985
 13146              	.LBE8320:
 13147              	.LBB8321:
 13148              	.LBI8321:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13149              		.loc 21 147 7 is_stmt 1 view .LVU2986
 13150              	.LBB8322:
 13151              	.LBI8322:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13152              		.loc 22 82 7 view .LVU2987
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13153              		.loc 22 82 7 is_stmt 0 view .LVU2988
 13154 0060 A246     		mov	r10, r4
 13155              	.LBE8322:
 13156              	.LBE8321:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 13157              		.loc 19 160 46 view .LVU2989
 13158 0062 44F8180C 		str	r0, [r4, #-24]
 13159              	.LVL830:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 13160              		.loc 19 160 46 view .LVU2990
 13161              	.LBE8319:
 13162              	.LBE8318:
 13163              	.LBB8323:
 13164              	.LBI8323:
 13165              		.loc 21 162 7 is_stmt 1 view .LVU2991
 13166              	.LBB8324:
 13167              	.LBI8324:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13168              		.loc 22 89 7 view .LVU2992
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13169              		.loc 22 89 7 is_stmt 0 view .LVU2993
 13170              	.LBE8324:
 13171              	.LBE8323:
 13172              	.LBB8325:
 13173              	.LBI8325:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13174              		.loc 19 186 7 is_stmt 1 view .LVU2994
 13175              	.LBB8326:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13176              		.loc 19 187 28 is_stmt 0 view .LVU2995
 13177 0066 3768     		ldr	r7, [r6]
 13178              	.LVL831:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13179              		.loc 19 187 28 view .LVU2996
 13180              	.LBE8326:
 13181              	.LBE8325:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 502


 13182              	.LBB8327:
 13183              	.LBI8327:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13184              		.loc 19 186 7 is_stmt 1 view .LVU2997
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13185              		.loc 19 186 7 is_stmt 0 view .LVU2998
 13186              	.LBE8327:
 13187              	.LBB8328:
 13188              	.LBI8310:
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 13189              		.loc 19 907 7 is_stmt 1 view .LVU2999
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 13190              		.loc 19 907 7 is_stmt 0 view .LVU3000
 13191              	.LBE8328:
 13192              	.LBB8329:
 13193              	.LBI8224:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 13194              		.loc 19 263 9 is_stmt 1 view .LVU3001
 13195              	.LBB8306:
 13196              	.LBB8302:
 13197              	.LBI8226:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 13198              		.loc 19 243 9 view .LVU3002
 13199              	.LBB8298:
 13200              	.LBB8294:
 13201              	.LBI8228:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 13202              		.loc 23 206 7 view .LVU3003
 13203              	.LBB8290:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 13204              		.loc 23 211 42 is_stmt 0 view .LVU3004
 13205 0068 EF42     		cmn	r7, r5
 13206 006a 00D0     		beq	.L650
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 13207              		.loc 23 211 42 view .LVU3005
 13208 006c 0FB3     		cbz	r7, .L669
 13209              	.L650:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 13210              		.loc 23 217 2 view .LVU3006
 13211 006e 0F2D     		cmp	r5, #15
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 13212              		.loc 23 215 12 view .LVU3007
 13213 0070 0195     		str	r5, [sp, #4]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 13214              		.loc 23 217 2 view .LVU3008
 13215 0072 04D8     		bhi	.L670
 13216              	.LVL832:
 13217              	.LBB8274:
 13218              	.LBI8274:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13219              		.loc 19 186 7 is_stmt 1 view .LVU3009
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13220              		.loc 19 186 7 is_stmt 0 view .LVU3010
 13221              	.LBE8274:
 13222              	.LBB8275:
 13223              	.LBI8230:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 503


 13224              		.loc 19 392 7 is_stmt 1 view .LVU3011
 13225              	.LBB8251:
 13226              	.LBI8231:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13227              		.loc 19 346 7 view .LVU3012
 13228              	.LBB8247:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 13229              		.loc 19 348 2 is_stmt 0 view .LVU3013
 13230 0074 012D     		cmp	r5, #1
 13231 0076 E3D0     		beq	.L671
 13232              	.LVL833:
 13233              	.LBB8235:
 13234              	.LBI8235:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13235              		.loc 19 346 7 is_stmt 1 view .LVU3014
 13236              	.LBB8236:
 13237              	.LBI8236:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 13238              		.loc 20 387 7 view .LVU3015
 13239              	.LBB8237:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13240              		.loc 20 389 2 view .LVU3016
 13241 0078 002D     		cmp	r5, #0
 13242 007a E4D0     		beq	.L654
 13243 007c 09E0     		b	.L652
 13244              	.LVL834:
 13245              	.L670:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13246              		.loc 20 389 2 is_stmt 0 view .LVU3017
 13247              	.LBE8237:
 13248              	.LBE8236:
 13249              	.LBE8235:
 13250              	.LBE8247:
 13251              	.LBE8251:
 13252              	.LBE8275:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 13253              		.loc 23 219 13 view .LVU3018
 13254 007e 1846     		mov	r0, r3
 13255 0080 0022     		movs	r2, #0
 13256 0082 01A9     		add	r1, sp, #4
 13257 0084 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 13258              	.LVL835:
 13259              	.LBB8276:
 13260              	.LBB8277:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13261              		.loc 19 211 31 view .LVU3019
 13262 0088 019B     		ldr	r3, [sp, #4]
 13263              	.LVL836:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13264              		.loc 19 211 31 view .LVU3020
 13265              	.LBE8277:
 13266              	.LBE8276:
 13267              	.LBB8279:
 13268              	.LBI8279:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 13269              		.loc 19 178 7 is_stmt 1 view .LVU3021
 13270              	.LBB8280:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 504


 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13271              		.loc 19 179 26 is_stmt 0 view .LVU3022
 13272 008a 44F8180C 		str	r0, [r4, #-24]
 13273              	.LVL837:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13274              		.loc 19 179 26 view .LVU3023
 13275              	.LBE8280:
 13276              	.LBE8279:
 13277              	.LBB8281:
 13278              	.LBI8276:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 13279              		.loc 19 210 7 is_stmt 1 view .LVU3024
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 13280              		.loc 19 210 7 is_stmt 0 view .LVU3025
 13281              	.LBE8281:
 13282              	.LBB8282:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13283              		.loc 19 186 7 is_stmt 1 view .LVU3026
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13284              		.loc 19 186 7 is_stmt 0 view .LVU3027
 13285              	.LBE8282:
 13286              	.LBB8283:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 13287              		.loc 19 392 7 is_stmt 1 view .LVU3028
 13288              	.LBB8252:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13289              		.loc 19 346 7 view .LVU3029
 13290              	.LBB8248:
 13291              	.LBB8244:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13292              		.loc 19 346 7 view .LVU3030
 13293              	.LBB8241:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 13294              		.loc 20 387 7 view .LVU3031
 13295              	.LBB8238:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13296              		.loc 20 389 2 view .LVU3032
 13297              	.LBE8238:
 13298              	.LBE8241:
 13299              	.LBE8244:
 13300              	.LBE8248:
 13301              	.LBE8252:
 13302              	.LBE8283:
 13303              	.LBB8284:
 13304              	.LBB8278:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13305              		.loc 19 211 31 is_stmt 0 view .LVU3033
 13306 008e 44F8103C 		str	r3, [r4, #-16]
 13307              	.L652:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13308              		.loc 19 211 31 view .LVU3034
 13309              	.LBE8278:
 13310              	.LBE8284:
 13311              	.LBB8285:
 13312              	.LBB8253:
 13313              	.LBB8249:
 13314              	.LBB8245:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 505


 13315              	.LBB8242:
 13316              	.LBB8239:
 13317              		.loc 20 395 2 is_stmt 1 view .LVU3035
 13318              		.loc 20 395 49 is_stmt 0 view .LVU3036
 13319 0092 2A46     		mov	r2, r5
 13320 0094 3946     		mov	r1, r7
 13321 0096 FFF7FEFF 		bl	memcpy
 13322              	.LVL838:
 13323              		.loc 20 395 49 view .LVU3037
 13324              	.LBE8239:
 13325              	.LBE8242:
 13326              	.LBE8245:
 13327              	.LBE8249:
 13328              	.LBE8253:
 13329              	.LBE8285:
 13330              		.loc 23 232 15 view .LVU3038
 13331 009a 019D     		ldr	r5, [sp, #4]
 13332              	.LVL839:
 13333              	.LBB8286:
 13334              	.LBB8271:
 13335              	.LBB8268:
 13336              	.LBB8265:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13337              		.loc 19 187 28 view .LVU3039
 13338 009c 54F8180C 		ldr	r0, [r4, #-24]
 13339              	.LBE8265:
 13340              	.LBE8268:
 13341              	.LBE8271:
 13342              	.LBE8286:
 13343              	.LBB8287:
 13344              	.LBB8254:
 13345              	.LBB8250:
 13346              	.LBB8246:
 13347              	.LBB8243:
 13348              	.LBB8240:
 13349              		.loc 20 395 66 view .LVU3040
 13350 00a0 D1E7     		b	.L654
 13351              	.LVL840:
 13352              	.L649:
 13353              		.loc 20 395 66 view .LVU3041
 13354              	.LBE8240:
 13355              	.LBE8243:
 13356              	.LBE8246:
 13357              	.LBE8250:
 13358              	.LBE8254:
 13359              	.LBE8287:
 13360              	.LBE8290:
 13361              	.LBE8294:
 13362              	.LBE8298:
 13363              	.LBE8302:
 13364              	.LBE8306:
 13365              	.LBE8329:
 13366              	.LBE8334:
 13367              	.LBE8339:
 13368              	.LBE8347:
 13369              	.LBE8349:
 13370              	.LBE8351:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 506


 13371              	.LBE8353:
 13372              	.LBE8355:
 13373              	.LBE8357:
 13374              	.LBE8363:
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 13375              		.loc 26 561 7 view .LVU3042
 13376 00a2 4046     		mov	r0, r8
 13377              	.LBB8364:
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 13378              		.loc 26 557 26 view .LVU3043
 13379 00a4 C8F804A0 		str	r10, [r8, #4]
 13380              	.LBE8364:
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 13381              		.loc 26 561 7 view .LVU3044
 13382 00a8 02B0     		add	sp, sp, #8
 13383              		.cfi_remember_state
 13384              		.cfi_def_cfa_offset 32
 13385              		@ sp needed
 13386 00aa BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 13387              	.LVL841:
 13388              	.L656:
 13389              		.cfi_restore_state
 13390              	.LBB8365:
 13391              	.LBB8358:
 13392              	.LBB8198:
 13393              	.LBB8192:
 13394              	.LBB8188:
 13395              	.LBB8184:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 13396              		.loc 26 346 18 view .LVU3045
 13397 00ae A246     		mov	r10, r4
 13398 00b0 BAE7     		b	.L647
 13399              	.LVL842:
 13400              	.L669:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 13401              		.loc 26 346 18 view .LVU3046
 13402              	.LBE8184:
 13403              	.LBE8188:
 13404              	.LBE8192:
 13405              	.LBE8198:
 13406              	.LBE8358:
 13407              	.LBB8359:
 13408              	.LBB8356:
 13409              	.LBB8354:
 13410              	.LBB8352:
 13411              	.LBB8350:
 13412              	.LBB8348:
 13413              	.LBB8340:
 13414              	.LBB8335:
 13415              	.LBB8330:
 13416              	.LBB8307:
 13417              	.LBB8303:
 13418              	.LBB8299:
 13419              	.LBB8295:
 13420              	.LBB8291:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 13421              		.loc 23 212 28 view .LVU3047
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 507


 13422 00b2 0348     		ldr	r0, .L672+4
 13423 00b4 FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 13424              	.LVL843:
 13425              	.L668:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 13426              		.loc 23 212 28 view .LVU3048
 13427              	.LBE8291:
 13428              	.LBE8295:
 13429              	.LBE8299:
 13430              	.LBE8303:
 13431              	.LBE8307:
 13432              	.LBE8330:
 13433              	.LBE8335:
 13434              	.LBE8340:
 13435              	.LBE8348:
 13436              	.LBE8350:
 13437              	.LBE8352:
 13438              	.LBE8354:
 13439              	.LBE8356:
 13440              	.LBE8359:
 13441              	.LBB8360:
 13442              	.LBB8199:
 13443              	.LBB8193:
 13444              	.LBB8189:
 13445              	.LBB8185:
 13446              	.LBB8182:
 13447              	.LBB8181:
 13448              	.LBB8180:
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13449              		.loc 22 106 26 view .LVU3049
 13450 00b8 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 13451              	.LVL844:
 13452              	.L673:
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13453              		.loc 22 106 26 view .LVU3050
 13454              		.align	2
 13455              	.L672:
 13456 00bc F8FFFF7F 		.word	2147483640
 13457 00c0 00000000 		.word	.LC9
 13458              	.LBE8180:
 13459              	.LBE8181:
 13460              	.LBE8182:
 13461              	.LBE8185:
 13462              	.LBE8189:
 13463              	.LBE8193:
 13464              	.LBE8199:
 13465              	.LBE8360:
 13466              	.LBE8365:
 13467              		.cfi_endproc
 13468              	.LFE5519:
 13470              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 13471              		.thumb_set _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_,_ZNSt
 13472              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 13473              		.align	2
 13474              	.LC11:
 13475 0000 50617474 		.ascii	"Pattern  \000"
 13475      65726E20 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 508


 13475      2000
 13476 000a 0000     		.align	2
 13477              	.LC12:
 13478 000c 4E2F4120 		.ascii	"N/A      \000"
 13478      20202020 
 13478      2000
 13479 0016 0000     		.align	2
 13480              	.LC13:
 13481 0018 566F6963 		.ascii	"Voicing  \000"
 13481      696E6720 
 13481      2000
 13482 0022 0000     		.align	2
 13483              	.LC14:
 13484 0024 546F6E69 		.ascii	"Tonic    \000"
 13484      63202020 
 13484      2000
 13485 002e 0000     		.align	2
 13486              	.LC15:
 13487 0030 5363616C 		.ascii	"Scale    \000"
 13487      65202020 
 13487      2000
 13488 003a 0000     		.align	2
 13489              	.LC16:
 13490 003c 4F637461 		.ascii	"Octave   \000"
 13490      76652020 
 13490      2000
 13491 0046 0000     		.align	2
 13492              	.LC17:
 13493 0048 436C6F63 		.ascii	"Clock In \000"
 13493      6B20496E 
 13493      2000
 13494              		.section	.text.startup.main,"ax",%progbits
 13495              		.align	1
 13496              		.p2align 2,,3
 13497              		.global	main
 13498              		.syntax unified
 13499              		.thumb
 13500              		.thumb_func
 13501              		.fpu fpv5-d16
 13503              	main:
 13504              	.LFB5112:
 105:Jellybeans.cpp **** int main(void) {
 13505              		.loc 14 105 16 is_stmt 1 view -0
 13506              		.cfi_startproc
 13507              		@ Volatile: function does not return.
 13508              		@ args = 0, pretend = 0, frame = 136
 13509              		@ frame_needed = 0, uses_anonymous_args = 0
 107:Jellybeans.cpp ****     patch.Init();
 13510              		.loc 14 107 5 view .LVU3052
 105:Jellybeans.cpp **** int main(void) {
 13511              		.loc 14 105 16 is_stmt 0 view .LVU3053
 13512 0000 2DE98048 		push	{r7, fp, lr}
 13513              		.cfi_def_cfa_offset 12
 13514              		.cfi_offset 7, -12
 13515              		.cfi_offset 11, -8
 13516              		.cfi_offset 14, -4
 107:Jellybeans.cpp ****     patch.Init();
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 509


 13517              		.loc 14 107 15 view .LVU3054
 13518 0004 0021     		movs	r1, #0
 105:Jellybeans.cpp **** int main(void) {
 13519              		.loc 14 105 16 view .LVU3055
 13520 0006 A5B0     		sub	sp, sp, #148
 13521              		.cfi_def_cfa_offset 160
 107:Jellybeans.cpp ****     patch.Init();
 13522              		.loc 14 107 15 view .LVU3056
 13523 0008 B648     		ldr	r0, .L677
 13524 000a FFF7FEFF 		bl	_ZN5daisy10DaisyPatch4InitEb
 13525              	.LVL845:
 110:Jellybeans.cpp ****     myArp = new Arp();
 13526              		.loc 14 110 5 is_stmt 1 view .LVU3057
 110:Jellybeans.cpp ****     myArp = new Arp();
 13527              		.loc 14 110 21 is_stmt 0 view .LVU3058
 13528 000e 5C20     		movs	r0, #92
 13529 0010 FFF7FEFF 		bl	_Znwj
 13530              	.LVL846:
 13531 0014 0446     		mov	r4, r0
 110:Jellybeans.cpp ****     myArp = new Arp();
 13532              		.loc 14 110 11 view .LVU3059
 13533 0016 FFF7FEFF 		bl	_ZN10jellybeans3ArpC1Ev
 13534              	.LVL847:
 13535 001a B34B     		ldr	r3, .L677+4
 114:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cb);
 13536              		.loc 14 114 63 view .LVU3060
 13537 001c DFF834B3 		ldr	fp, .L677+112
 13538 0020 0AA8     		add	r0, sp, #40
 110:Jellybeans.cpp ****     myArp = new Arp();
 13539              		.loc 14 110 11 view .LVU3061
 13540 0022 1C60     		str	r4, [r3]
 114:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cb);
 13541              		.loc 14 114 5 is_stmt 1 view .LVU3062
 13542              	.LVL848:
 13543              	.LBB8366:
 13544              	.LBI8366:
 13545              		.loc 24 185 7 view .LVU3063
 13546              	.LBB8367:
 13547              	.LBI8367:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 13548              		.loc 24 55 7 view .LVU3064
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 13549              		.loc 24 55 7 is_stmt 0 view .LVU3065
 13550              	.LBE8367:
 13551              	.LBE8366:
 13552              	.LBB8368:
 13553              	.LBI8368:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 13554              		.loc 21 144 7 is_stmt 1 view .LVU3066
 13555              	.LBB8369:
 13556              	.LBI8369:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13557              		.loc 22 79 7 view .LVU3067
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13558              		.loc 22 79 7 is_stmt 0 view .LVU3068
 13559              	.LBE8369:
 13560              	.LBE8368:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 510


 114:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cb);
 13561              		.loc 14 114 63 view .LVU3069
 13562 0024 06AC     		add	r4, sp, #24
 13563 0026 B149     		ldr	r1, .L677+8
 13564              	.LBB8370:
 13565              	.LBB8371:
 13566              	.LBB8372:
 13567              	.LBB8373:
 13568              	.LBB8374:
 13569              	.LBB8375:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 13570              		.loc 16 233 4 view .LVU3070
 13571 0028 B14F     		ldr	r7, .L677+12
 13572              	.LBE8375:
 13573              	.LBE8374:
 13574              	.LBE8373:
 13575              	.LBE8372:
 13576              	.LBE8371:
 13577              	.LBE8370:
 114:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cb);
 13578              		.loc 14 114 63 view .LVU3071
 13579 002a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 13580              	.LVL849:
 13581              	.LBB8394:
 13582              	.LBB8389:
 13583              	.LBB8383:
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	std::swap(_M_functor, __x._M_functor);
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	std::swap(_M_manager, __x._M_manager);
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	std::swap(_M_invoker, __x._M_invoker);
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // [3.7.2.3] function capacity
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Determine if the %function wrapper has a target.
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @return @c true when this %function object contains a target,
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  or @c false when it is empty.
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  This function will not throw an %exception.
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       explicit operator bool() const noexcept
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       { return !_M_empty(); }
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // [3.7.2.4] function invocation
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Invokes the function targeted by @c *this.
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @returns the result of the target.
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @throws bad_function_call when @c !(bool)*this
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The function call operator invokes the target function object
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  stored by @c this.
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Res operator()(_ArgTypes... __args) const;
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 511


 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cpp_rtti
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // [3.7.2.5] function target access
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Determine the type of the target of this function object
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  wrapper.
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @returns the type identifier of the target function object, or
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @c typeid(void) if @c !(bool)*this.
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  This function will not throw an %exception.
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       const type_info& target_type() const noexcept;
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Access the stored target function object.
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @return Returns a pointer to the stored target function object,
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  if @c typeid(_Functor).equals(target_type()); otherwise, a NULL
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  pointer.
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        * This function does not throw exceptions.
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        * @{
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Functor>       _Functor* target() noexcept;
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Functor> const _Functor* target() const noexcept;
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // @}
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #endif
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     private:
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       using _Invoker_type = _Res (*)(const _Any_data&, _ArgTypes&&...);
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Invoker_type _M_invoker;
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cpp_deduction_guides >= 201606
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename>
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __function_guide_helper
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { };
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename _Tp, bool _Nx, typename... _Args>
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __function_guide_helper<
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Res (_Tp::*) (_Args...) noexcept(_Nx)
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     >
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { using type = _Res(_Args...); };
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename _Tp, bool _Nx, typename... _Args>
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __function_guide_helper<
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Res (_Tp::*) (_Args...) & noexcept(_Nx)
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     >
 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { using type = _Res(_Args...); };
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename _Tp, bool _Nx, typename... _Args>
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __function_guide_helper<
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Res (_Tp::*) (_Args...) const noexcept(_Nx)
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     >
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { using type = _Res(_Args...); };
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 512


 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename _Tp, bool _Nx, typename... _Args>
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __function_guide_helper<
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Res (_Tp::*) (_Args...) const & noexcept(_Nx)
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     >
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { using type = _Res(_Args...); };
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename... _ArgTypes>
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     function(_Res(*)(_ArgTypes...)) -> function<_Res(_ArgTypes...)>;
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Functor, typename _Signature = typename
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	   __function_guide_helper<decltype(&_Functor::operator())>::type>
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     function(_Functor) -> function<_Signature>;
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #endif
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   // Out-of-line member definitions.
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename... _ArgTypes>
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     function<_Res(_ArgTypes...)>::
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     function(const function& __x)
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : _Function_base()
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       if (static_cast<bool>(__x))
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  __x._M_manager(_M_functor, __x._M_functor, __clone_functor);
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_invoker = __x._M_invoker;
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_manager = __x._M_manager;
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename... _ArgTypes>
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     template<typename _Functor, typename, typename>
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function<_Res(_ArgTypes...)>::
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       : _Function_base()
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	typedef _Function_handler<_Res(_ArgTypes...), _Functor> _My_handler;
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	if (_My_handler::_M_not_empty_function(__f))
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  {
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _My_handler::_M_init_functor(_M_functor, std::move(__f));
 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _M_invoker = &_My_handler::_M_invoke;
 13584              		.loc 16 610 17 view .LVU3072
 13585 002e B14E     		ldr	r6, .L677+16
 13586              	.LBE8383:
 13587              	.LBE8389:
 13588              	.LBE8394:
 114:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cb);
 13589              		.loc 14 114 63 view .LVU3073
 13590 0030 5946     		mov	r1, fp
 13591              	.LBB8395:
 13592              	.LBB8390:
 13593              	.LBB8384:
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _M_manager = &_My_handler::_M_manager;
 13594              		.loc 16 611 17 view .LVU3074
 13595 0032 B14D     		ldr	r5, .L677+20
 13596              	.LBE8384:
 13597              	.LBE8390:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 513


 13598              	.LBE8395:
 114:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cb);
 13599              		.loc 14 114 63 view .LVU3075
 13600 0034 03A8     		add	r0, sp, #12
 13601 0036 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 13602              	.LVL850:
 13603              	.LBB8396:
 13604              	.LBI8370:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 13605              		.loc 16 601 7 is_stmt 1 view .LVU3076
 13606              	.LBB8391:
 13607              	.LBB8385:
 13608              	.LBI8385:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 13609              		.loc 16 240 5 view .LVU3077
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 13610              		.loc 16 240 5 is_stmt 0 view .LVU3078
 13611              	.LBE8385:
 13612              	.LBB8386:
 13613              	.LBB8379:
 13614              	.LBI8379:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 13615              		.loc 16 217 4 is_stmt 1 view .LVU3079
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 13616              		.loc 16 217 4 is_stmt 0 view .LVU3080
 13617              	.LBE8379:
 13618              	.LBB8380:
 13619              	.LBI8380:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13620              		.loc 34 101 5 is_stmt 1 view .LVU3081
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13621              		.loc 34 101 5 is_stmt 0 view .LVU3082
 13622              	.LBE8380:
 13623              	.LBB8381:
 13624              	.LBI8373:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 13625              		.loc 16 207 2 is_stmt 1 view .LVU3083
 13626              	.LBB8377:
 13627              	.LBI8374:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 13628              		.loc 16 232 2 view .LVU3084
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 13629              		.loc 16 232 2 is_stmt 0 view .LVU3085
 13630              	.LBE8377:
 13631              	.LBE8381:
 13632              	.LBE8386:
 13633              	.LBE8391:
 13634              	.LBE8396:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 13635              		.loc 16 87 37 is_stmt 1 view .LVU3086
 13636              		.loc 18 175 3 view .LVU3087
 114:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cb);
 13637              		.loc 14 114 63 is_stmt 0 view .LVU3088
 13638 003a 0023     		movs	r3, #0
 13639 003c 03AA     		add	r2, sp, #12
 13640 003e 0AA9     		add	r1, sp, #40
 13641 0040 0094     		str	r4, [sp]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 514


 13642 0042 10A8     		add	r0, sp, #64
 13643              	.LBB8397:
 13644              	.LBB8392:
 13645              	.LBB8387:
 13646              	.LBB8382:
 13647              	.LBB8378:
 13648              	.LBB8376:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 13649              		.loc 16 233 4 view .LVU3089
 13650 0044 0697     		str	r7, [sp, #24]
 13651              	.LVL851:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 13652              		.loc 16 233 4 view .LVU3090
 13653              	.LBE8376:
 13654              	.LBE8378:
 13655              	.LBE8382:
 13656              	.LBE8387:
 13657              	.LBE8392:
 13658              	.LBE8397:
 115:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 13659              		.loc 14 115 63 view .LVU3091
 13660 0046 DFF81083 		ldr	r8, .L677+116
 116:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cb);
 13661              		.loc 14 116 63 view .LVU3092
 13662 004a DFF810A3 		ldr	r10, .L677+120
 117:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 13663              		.loc 14 117 63 view .LVU3093
 13664 004e DFF81093 		ldr	r9, .L677+124
 126:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 13665              		.loc 14 126 22 view .LVU3094
 13666 0052 9FEDAA8A 		vldr.32	s16, .L677+24
 13667              	.LBB8398:
 13668              	.LBB8393:
 13669              	.LBB8388:
 13670              		.loc 16 611 17 view .LVU3095
 13671 0056 CDE90856 		strd	r5, r6, [sp, #32]
 13672              	.LVL852:
 13673              		.loc 16 611 17 view .LVU3096
 13674              	.LBE8388:
 13675              	.LBE8393:
 13676              	.LBE8398:
 114:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cb);
 13677              		.loc 14 114 63 view .LVU3097
 13678 005a FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 13679              	.LVL853:
 13680 005e 10A9     		add	r1, sp, #64
 13681 0060 A748     		ldr	r0, .L677+28
 13682 0062 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 13683              	.LVL854:
 114:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cb);
 13684              		.loc 14 114 20 view .LVU3098
 13685 0066 10A8     		add	r0, sp, #64
 13686 0068 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 13687              	.LVL855:
 13688              	.LBB8399:
 13689              	.LBI8399:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 515


 13690              		.loc 16 303 11 is_stmt 1 view .LVU3099
 13691              	.LBB8400:
 13692 006c 2046     		mov	r0, r4
 13693 006e FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 13694              	.LVL856:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 13695              		.loc 16 303 11 is_stmt 0 view .LVU3100
 13696              	.LBE8400:
 13697              	.LBE8399:
 114:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cb);
 13698              		.loc 14 114 63 view .LVU3101
 13699 0072 03A8     		add	r0, sp, #12
 13700 0074 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 13701              	.LVL857:
 13702              	.LBB8401:
 13703              	.LBI8401:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 13704              		.loc 19 657 7 is_stmt 1 view .LVU3102
 13705              	.LBB8402:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13706              		.loc 19 658 19 is_stmt 0 view .LVU3103
 13707 0078 0AA8     		add	r0, sp, #40
 13708              	.LVL858:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13709              		.loc 19 658 19 view .LVU3104
 13710 007a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 13711              	.LVL859:
 13712              	.LBB8403:
 13713              	.LBI8403:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13714              		.loc 19 150 14 is_stmt 1 view .LVU3105
 13715              	.LBB8404:
 13716              	.LBI8404:
 13717              		.loc 21 162 7 view .LVU3106
 13718              	.LBB8405:
 13719              	.LBI8405:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13720              		.loc 22 89 7 view .LVU3107
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13721              		.loc 22 89 7 is_stmt 0 view .LVU3108
 13722              	.LBE8405:
 13723              	.LBE8404:
 13724              	.LBE8403:
 13725              	.LBE8402:
 13726              	.LBE8401:
 13727              	.LBB8406:
 13728              	.LBI8406:
 13729              		.loc 21 162 7 is_stmt 1 view .LVU3109
 13730              	.LBB8407:
 13731              	.LBI8407:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13732              		.loc 22 89 7 view .LVU3110
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13733              		.loc 22 89 7 is_stmt 0 view .LVU3111
 13734              	.LBE8407:
 13735              	.LBE8406:
 115:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 516


 13736              		.loc 14 115 5 is_stmt 1 view .LVU3112
 13737              	.LBB8408:
 13738              	.LBI8408:
 13739              		.loc 24 185 7 view .LVU3113
 13740              	.LBB8409:
 13741              	.LBI8409:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 13742              		.loc 24 55 7 view .LVU3114
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 13743              		.loc 24 55 7 is_stmt 0 view .LVU3115
 13744              	.LBE8409:
 13745              	.LBE8408:
 13746              	.LBB8410:
 13747              	.LBI8410:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 13748              		.loc 21 144 7 is_stmt 1 view .LVU3116
 13749              	.LBB8411:
 13750              	.LBI8411:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13751              		.loc 22 79 7 view .LVU3117
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13752              		.loc 22 79 7 is_stmt 0 view .LVU3118
 13753              	.LBE8411:
 13754              	.LBE8410:
 115:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 13755              		.loc 14 115 63 view .LVU3119
 13756 007e A149     		ldr	r1, .L677+32
 13757 0080 0AA8     		add	r0, sp, #40
 13758 0082 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 13759              	.LVL860:
 13760 0086 4146     		mov	r1, r8
 13761 0088 03A8     		add	r0, sp, #12
 13762 008a FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 13763              	.LVL861:
 13764              	.LBB8412:
 13765              	.LBI8412:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 13766              		.loc 16 601 7 is_stmt 1 view .LVU3120
 13767              	.LBB8413:
 13768              	.LBB8414:
 13769              	.LBI8414:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 13770              		.loc 16 240 5 view .LVU3121
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 13771              		.loc 16 240 5 is_stmt 0 view .LVU3122
 13772              	.LBE8414:
 13773              	.LBB8415:
 13774              	.LBB8416:
 13775              	.LBI8416:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 13776              		.loc 16 217 4 is_stmt 1 view .LVU3123
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 13777              		.loc 16 217 4 is_stmt 0 view .LVU3124
 13778              	.LBE8416:
 13779              	.LBB8417:
 13780              	.LBI8417:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 517


 13781              		.loc 34 101 5 is_stmt 1 view .LVU3125
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13782              		.loc 34 101 5 is_stmt 0 view .LVU3126
 13783              	.LBE8417:
 13784              	.LBB8418:
 13785              	.LBI8418:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 13786              		.loc 16 207 2 is_stmt 1 view .LVU3127
 13787              	.LBB8419:
 13788              	.LBI8419:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 13789              		.loc 16 232 2 view .LVU3128
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 13790              		.loc 16 232 2 is_stmt 0 view .LVU3129
 13791              	.LBE8419:
 13792              	.LBE8418:
 13793              	.LBE8415:
 13794              	.LBE8413:
 13795              	.LBE8412:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 13796              		.loc 16 87 37 is_stmt 1 view .LVU3130
 13797              		.loc 18 175 3 view .LVU3131
 115:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 13798              		.loc 14 115 63 is_stmt 0 view .LVU3132
 13799 008e 0023     		movs	r3, #0
 13800 0090 03AA     		add	r2, sp, #12
 13801 0092 0AA9     		add	r1, sp, #40
 13802 0094 0094     		str	r4, [sp]
 13803 0096 10A8     		add	r0, sp, #64
 13804              	.LBB8425:
 13805              	.LBB8424:
 13806              	.LBB8423:
 13807              	.LBB8422:
 13808              	.LBB8421:
 13809              	.LBB8420:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 13810              		.loc 16 233 4 view .LVU3133
 13811 0098 0697     		str	r7, [sp, #24]
 13812              	.LVL862:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 13813              		.loc 16 233 4 view .LVU3134
 13814              	.LBE8420:
 13815              	.LBE8421:
 13816              	.LBE8422:
 13817              		.loc 16 611 17 view .LVU3135
 13818 009a CDE90856 		strd	r5, r6, [sp, #32]
 13819              	.LVL863:
 13820              		.loc 16 611 17 view .LVU3136
 13821              	.LBE8423:
 13822              	.LBE8424:
 13823              	.LBE8425:
 115:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 13824              		.loc 14 115 63 view .LVU3137
 13825 009e FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 13826              	.LVL864:
 13827 00a2 10A9     		add	r1, sp, #64
 13828 00a4 9848     		ldr	r0, .L677+36
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 518


 13829 00a6 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 13830              	.LVL865:
 115:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 13831              		.loc 14 115 20 view .LVU3138
 13832 00aa 10A8     		add	r0, sp, #64
 13833 00ac FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 13834              	.LVL866:
 13835              	.LBB8426:
 13836              	.LBI8426:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 13837              		.loc 16 303 11 is_stmt 1 view .LVU3139
 13838              	.LBB8427:
 13839 00b0 2046     		mov	r0, r4
 13840 00b2 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 13841              	.LVL867:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 13842              		.loc 16 303 11 is_stmt 0 view .LVU3140
 13843              	.LBE8427:
 13844              	.LBE8426:
 115:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 13845              		.loc 14 115 63 view .LVU3141
 13846 00b6 03A8     		add	r0, sp, #12
 13847 00b8 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 13848              	.LVL868:
 13849              	.LBB8428:
 13850              	.LBI8428:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 13851              		.loc 19 657 7 is_stmt 1 view .LVU3142
 13852              	.LBB8429:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13853              		.loc 19 658 19 is_stmt 0 view .LVU3143
 13854 00bc 0AA8     		add	r0, sp, #40
 13855              	.LVL869:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13856              		.loc 19 658 19 view .LVU3144
 13857 00be FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 13858              	.LVL870:
 13859              	.LBB8430:
 13860              	.LBI8430:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13861              		.loc 19 150 14 is_stmt 1 view .LVU3145
 13862              	.LBB8431:
 13863              	.LBI8431:
 13864              		.loc 21 162 7 view .LVU3146
 13865              	.LBB8432:
 13866              	.LBI8432:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13867              		.loc 22 89 7 view .LVU3147
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13868              		.loc 22 89 7 is_stmt 0 view .LVU3148
 13869              	.LBE8432:
 13870              	.LBE8431:
 13871              	.LBE8430:
 13872              	.LBE8429:
 13873              	.LBE8428:
 13874              	.LBB8433:
 13875              	.LBI8433:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 519


 13876              		.loc 21 162 7 is_stmt 1 view .LVU3149
 13877              	.LBB8434:
 13878              	.LBI8434:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13879              		.loc 22 89 7 view .LVU3150
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13880              		.loc 22 89 7 is_stmt 0 view .LVU3151
 13881              	.LBE8434:
 13882              	.LBE8433:
 116:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cb);
 13883              		.loc 14 116 5 is_stmt 1 view .LVU3152
 13884              	.LBB8435:
 13885              	.LBI8435:
 13886              		.loc 24 185 7 view .LVU3153
 13887              	.LBB8436:
 13888              	.LBI8436:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 13889              		.loc 24 55 7 view .LVU3154
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 13890              		.loc 24 55 7 is_stmt 0 view .LVU3155
 13891              	.LBE8436:
 13892              	.LBE8435:
 13893              	.LBB8437:
 13894              	.LBI8437:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 13895              		.loc 21 144 7 is_stmt 1 view .LVU3156
 13896              	.LBB8438:
 13897              	.LBI8438:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13898              		.loc 22 79 7 view .LVU3157
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13899              		.loc 22 79 7 is_stmt 0 view .LVU3158
 13900              	.LBE8438:
 13901              	.LBE8437:
 116:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cb);
 13902              		.loc 14 116 63 view .LVU3159
 13903 00c2 9249     		ldr	r1, .L677+40
 13904 00c4 0AA8     		add	r0, sp, #40
 13905 00c6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 13906              	.LVL871:
 13907 00ca 5146     		mov	r1, r10
 13908 00cc 03A8     		add	r0, sp, #12
 13909 00ce FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 13910              	.LVL872:
 13911              	.LBB8439:
 13912              	.LBI8439:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 13913              		.loc 16 601 7 is_stmt 1 view .LVU3160
 13914              	.LBB8440:
 13915              	.LBB8441:
 13916              	.LBI8441:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 13917              		.loc 16 240 5 view .LVU3161
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 13918              		.loc 16 240 5 is_stmt 0 view .LVU3162
 13919              	.LBE8441:
 13920              	.LBB8442:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 520


 13921              	.LBB8443:
 13922              	.LBI8443:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 13923              		.loc 16 217 4 is_stmt 1 view .LVU3163
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 13924              		.loc 16 217 4 is_stmt 0 view .LVU3164
 13925              	.LBE8443:
 13926              	.LBB8444:
 13927              	.LBI8444:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13928              		.loc 34 101 5 is_stmt 1 view .LVU3165
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13929              		.loc 34 101 5 is_stmt 0 view .LVU3166
 13930              	.LBE8444:
 13931              	.LBB8445:
 13932              	.LBI8445:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 13933              		.loc 16 207 2 is_stmt 1 view .LVU3167
 13934              	.LBB8446:
 13935              	.LBI8446:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 13936              		.loc 16 232 2 view .LVU3168
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 13937              		.loc 16 232 2 is_stmt 0 view .LVU3169
 13938              	.LBE8446:
 13939              	.LBE8445:
 13940              	.LBE8442:
 13941              	.LBE8440:
 13942              	.LBE8439:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 13943              		.loc 16 87 37 is_stmt 1 view .LVU3170
 13944              		.loc 18 175 3 view .LVU3171
 116:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cb);
 13945              		.loc 14 116 63 is_stmt 0 view .LVU3172
 13946 00d2 0023     		movs	r3, #0
 13947 00d4 03AA     		add	r2, sp, #12
 13948 00d6 0AA9     		add	r1, sp, #40
 13949 00d8 0094     		str	r4, [sp]
 13950 00da 10A8     		add	r0, sp, #64
 13951              	.LBB8452:
 13952              	.LBB8451:
 13953              	.LBB8450:
 13954              	.LBB8449:
 13955              	.LBB8448:
 13956              	.LBB8447:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 13957              		.loc 16 233 4 view .LVU3173
 13958 00dc 0697     		str	r7, [sp, #24]
 13959              	.LVL873:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 13960              		.loc 16 233 4 view .LVU3174
 13961              	.LBE8447:
 13962              	.LBE8448:
 13963              	.LBE8449:
 13964              		.loc 16 611 17 view .LVU3175
 13965 00de CDE90856 		strd	r5, r6, [sp, #32]
 13966              	.LVL874:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 521


 13967              		.loc 16 611 17 view .LVU3176
 13968              	.LBE8450:
 13969              	.LBE8451:
 13970              	.LBE8452:
 116:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cb);
 13971              		.loc 14 116 63 view .LVU3177
 13972 00e2 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 13973              	.LVL875:
 13974 00e6 10A9     		add	r1, sp, #64
 13975 00e8 8948     		ldr	r0, .L677+44
 13976 00ea FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 13977              	.LVL876:
 116:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cb);
 13978              		.loc 14 116 20 view .LVU3178
 13979 00ee 10A8     		add	r0, sp, #64
 13980 00f0 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 13981              	.LVL877:
 13982              	.LBB8453:
 13983              	.LBI8453:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 13984              		.loc 16 303 11 is_stmt 1 view .LVU3179
 13985              	.LBB8454:
 13986 00f4 2046     		mov	r0, r4
 13987 00f6 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 13988              	.LVL878:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 13989              		.loc 16 303 11 is_stmt 0 view .LVU3180
 13990              	.LBE8454:
 13991              	.LBE8453:
 116:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cb);
 13992              		.loc 14 116 63 view .LVU3181
 13993 00fa 03A8     		add	r0, sp, #12
 13994 00fc FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 13995              	.LVL879:
 13996              	.LBB8455:
 13997              	.LBI8455:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 13998              		.loc 19 657 7 is_stmt 1 view .LVU3182
 13999              	.LBB8456:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14000              		.loc 19 658 19 is_stmt 0 view .LVU3183
 14001 0100 0AA8     		add	r0, sp, #40
 14002              	.LVL880:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14003              		.loc 19 658 19 view .LVU3184
 14004 0102 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 14005              	.LVL881:
 14006              	.LBB8457:
 14007              	.LBI8457:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14008              		.loc 19 150 14 is_stmt 1 view .LVU3185
 14009              	.LBB8458:
 14010              	.LBI8458:
 14011              		.loc 21 162 7 view .LVU3186
 14012              	.LBB8459:
 14013              	.LBI8459:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 522


 14014              		.loc 22 89 7 view .LVU3187
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14015              		.loc 22 89 7 is_stmt 0 view .LVU3188
 14016              	.LBE8459:
 14017              	.LBE8458:
 14018              	.LBE8457:
 14019              	.LBE8456:
 14020              	.LBE8455:
 14021              	.LBB8460:
 14022              	.LBI8460:
 14023              		.loc 21 162 7 is_stmt 1 view .LVU3189
 14024              	.LBB8461:
 14025              	.LBI8461:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14026              		.loc 22 89 7 view .LVU3190
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14027              		.loc 22 89 7 is_stmt 0 view .LVU3191
 14028              	.LBE8461:
 14029              	.LBE8460:
 117:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 14030              		.loc 14 117 5 is_stmt 1 view .LVU3192
 14031              	.LBB8462:
 14032              	.LBI8462:
 14033              		.loc 24 185 7 view .LVU3193
 14034              	.LBB8463:
 14035              	.LBI8463:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14036              		.loc 24 55 7 view .LVU3194
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14037              		.loc 24 55 7 is_stmt 0 view .LVU3195
 14038              	.LBE8463:
 14039              	.LBE8462:
 14040              	.LBB8464:
 14041              	.LBI8464:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 14042              		.loc 21 144 7 is_stmt 1 view .LVU3196
 14043              	.LBB8465:
 14044              	.LBI8465:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14045              		.loc 22 79 7 view .LVU3197
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14046              		.loc 22 79 7 is_stmt 0 view .LVU3198
 14047              	.LBE8465:
 14048              	.LBE8464:
 117:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 14049              		.loc 14 117 63 view .LVU3199
 14050 0106 7F49     		ldr	r1, .L677+32
 14051 0108 0AA8     		add	r0, sp, #40
 14052 010a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 14053              	.LVL882:
 14054 010e 4946     		mov	r1, r9
 14055 0110 03A8     		add	r0, sp, #12
 14056 0112 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 14057              	.LVL883:
 14058              	.LBB8466:
 14059              	.LBI8466:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 523


 14060              		.loc 16 601 7 is_stmt 1 view .LVU3200
 14061              	.LBB8467:
 14062              	.LBB8468:
 14063              	.LBI8468:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14064              		.loc 16 240 5 view .LVU3201
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14065              		.loc 16 240 5 is_stmt 0 view .LVU3202
 14066              	.LBE8468:
 14067              	.LBB8469:
 14068              	.LBB8470:
 14069              	.LBI8470:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14070              		.loc 16 217 4 is_stmt 1 view .LVU3203
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14071              		.loc 16 217 4 is_stmt 0 view .LVU3204
 14072              	.LBE8470:
 14073              	.LBB8471:
 14074              	.LBI8471:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14075              		.loc 34 101 5 is_stmt 1 view .LVU3205
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14076              		.loc 34 101 5 is_stmt 0 view .LVU3206
 14077              	.LBE8471:
 14078              	.LBB8472:
 14079              	.LBI8472:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 14080              		.loc 16 207 2 is_stmt 1 view .LVU3207
 14081              	.LBB8473:
 14082              	.LBI8473:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14083              		.loc 16 232 2 view .LVU3208
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14084              		.loc 16 232 2 is_stmt 0 view .LVU3209
 14085              	.LBE8473:
 14086              	.LBE8472:
 14087              	.LBE8469:
 14088              	.LBE8467:
 14089              	.LBE8466:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 14090              		.loc 16 87 37 is_stmt 1 view .LVU3210
 14091              		.loc 18 175 3 view .LVU3211
 117:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 14092              		.loc 14 117 63 is_stmt 0 view .LVU3212
 14093 0116 0023     		movs	r3, #0
 14094 0118 03AA     		add	r2, sp, #12
 14095 011a 0AA9     		add	r1, sp, #40
 14096 011c 0094     		str	r4, [sp]
 14097 011e 10A8     		add	r0, sp, #64
 14098              	.LBB8479:
 14099              	.LBB8478:
 14100              	.LBB8477:
 14101              	.LBB8476:
 14102              	.LBB8475:
 14103              	.LBB8474:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14104              		.loc 16 233 4 view .LVU3213
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 524


 14105 0120 0697     		str	r7, [sp, #24]
 14106              	.LVL884:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14107              		.loc 16 233 4 view .LVU3214
 14108              	.LBE8474:
 14109              	.LBE8475:
 14110              	.LBE8476:
 14111              		.loc 16 611 17 view .LVU3215
 14112 0122 CDE90856 		strd	r5, r6, [sp, #32]
 14113              	.LVL885:
 14114              		.loc 16 611 17 view .LVU3216
 14115              	.LBE8477:
 14116              	.LBE8478:
 14117              	.LBE8479:
 117:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 14118              		.loc 14 117 63 view .LVU3217
 14119 0126 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 14120              	.LVL886:
 14121 012a 10A9     		add	r1, sp, #64
 14122 012c 7948     		ldr	r0, .L677+48
 14123 012e FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 14124              	.LVL887:
 117:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 14125              		.loc 14 117 20 view .LVU3218
 14126 0132 10A8     		add	r0, sp, #64
 14127 0134 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 14128              	.LVL888:
 14129              	.LBB8480:
 14130              	.LBI8480:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 14131              		.loc 16 303 11 is_stmt 1 view .LVU3219
 14132              	.LBB8481:
 14133 0138 2046     		mov	r0, r4
 14134 013a FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 14135              	.LVL889:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 14136              		.loc 16 303 11 is_stmt 0 view .LVU3220
 14137              	.LBE8481:
 14138              	.LBE8480:
 117:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 14139              		.loc 14 117 63 view .LVU3221
 14140 013e 03A8     		add	r0, sp, #12
 14141 0140 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 14142              	.LVL890:
 14143              	.LBB8482:
 14144              	.LBI8482:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 14145              		.loc 19 657 7 is_stmt 1 view .LVU3222
 14146              	.LBB8483:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14147              		.loc 19 658 19 is_stmt 0 view .LVU3223
 14148 0144 0AA8     		add	r0, sp, #40
 14149              	.LVL891:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14150              		.loc 19 658 19 view .LVU3224
 14151 0146 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 14152              	.LVL892:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 525


 14153              	.LBB8484:
 14154              	.LBI8484:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14155              		.loc 19 150 14 is_stmt 1 view .LVU3225
 14156              	.LBB8485:
 14157              	.LBI8485:
 14158              		.loc 21 162 7 view .LVU3226
 14159              	.LBB8486:
 14160              	.LBI8486:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14161              		.loc 22 89 7 view .LVU3227
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14162              		.loc 22 89 7 is_stmt 0 view .LVU3228
 14163              	.LBE8486:
 14164              	.LBE8485:
 14165              	.LBE8484:
 14166              	.LBE8483:
 14167              	.LBE8482:
 14168              	.LBB8487:
 14169              	.LBI8487:
 14170              		.loc 21 162 7 is_stmt 1 view .LVU3229
 14171              	.LBB8488:
 14172              	.LBI8488:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14173              		.loc 22 89 7 view .LVU3230
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14174              		.loc 22 89 7 is_stmt 0 view .LVU3231
 14175              	.LBE8488:
 14176              	.LBE8487:
 118:Jellybeans.cpp ****     menuItems[4] = MenuItem("Tonic    ", allNotes,       0, cb);
 14177              		.loc 14 118 5 is_stmt 1 view .LVU3232
 14178              	.LBB8489:
 14179              	.LBI8489:
 14180              		.loc 24 185 7 view .LVU3233
 14181              	.LBB8490:
 14182              	.LBI8490:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14183              		.loc 24 55 7 view .LVU3234
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14184              		.loc 24 55 7 is_stmt 0 view .LVU3235
 14185              	.LBE8490:
 14186              	.LBE8489:
 14187              	.LBB8491:
 14188              	.LBI8491:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 14189              		.loc 21 144 7 is_stmt 1 view .LVU3236
 14190              	.LBB8492:
 14191              	.LBI8492:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14192              		.loc 22 79 7 view .LVU3237
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14193              		.loc 22 79 7 is_stmt 0 view .LVU3238
 14194              	.LBE8492:
 14195              	.LBE8491:
 118:Jellybeans.cpp ****     menuItems[4] = MenuItem("Tonic    ", allNotes,       0, cb);
 14196              		.loc 14 118 63 view .LVU3239
 14197 014a 7349     		ldr	r1, .L677+52
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 526


 14198 014c 0AA8     		add	r0, sp, #40
 14199 014e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 14200              	.LVL893:
 14201 0152 7249     		ldr	r1, .L677+56
 14202 0154 03A8     		add	r0, sp, #12
 14203 0156 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 14204              	.LVL894:
 14205              	.LBB8493:
 14206              	.LBI8493:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 14207              		.loc 16 601 7 is_stmt 1 view .LVU3240
 14208              	.LBB8494:
 14209              	.LBB8495:
 14210              	.LBI8495:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14211              		.loc 16 240 5 view .LVU3241
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14212              		.loc 16 240 5 is_stmt 0 view .LVU3242
 14213              	.LBE8495:
 14214              	.LBB8496:
 14215              	.LBB8497:
 14216              	.LBI8497:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14217              		.loc 16 217 4 is_stmt 1 view .LVU3243
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14218              		.loc 16 217 4 is_stmt 0 view .LVU3244
 14219              	.LBE8497:
 14220              	.LBB8498:
 14221              	.LBI8498:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14222              		.loc 34 101 5 is_stmt 1 view .LVU3245
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14223              		.loc 34 101 5 is_stmt 0 view .LVU3246
 14224              	.LBE8498:
 14225              	.LBB8499:
 14226              	.LBI8499:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 14227              		.loc 16 207 2 is_stmt 1 view .LVU3247
 14228              	.LBB8500:
 14229              	.LBI8500:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14230              		.loc 16 232 2 view .LVU3248
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14231              		.loc 16 232 2 is_stmt 0 view .LVU3249
 14232              	.LBE8500:
 14233              	.LBE8499:
 14234              	.LBE8496:
 14235              	.LBE8494:
 14236              	.LBE8493:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 14237              		.loc 16 87 37 is_stmt 1 view .LVU3250
 14238              		.loc 18 175 3 view .LVU3251
 118:Jellybeans.cpp ****     menuItems[4] = MenuItem("Tonic    ", allNotes,       0, cb);
 14239              		.loc 14 118 63 is_stmt 0 view .LVU3252
 14240 015a 0023     		movs	r3, #0
 14241 015c 03AA     		add	r2, sp, #12
 14242 015e 0AA9     		add	r1, sp, #40
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 527


 14243 0160 0094     		str	r4, [sp]
 14244 0162 10A8     		add	r0, sp, #64
 14245              	.LBB8506:
 14246              	.LBB8505:
 14247              	.LBB8504:
 14248              	.LBB8503:
 14249              	.LBB8502:
 14250              	.LBB8501:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14251              		.loc 16 233 4 view .LVU3253
 14252 0164 0697     		str	r7, [sp, #24]
 14253              	.LVL895:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14254              		.loc 16 233 4 view .LVU3254
 14255              	.LBE8501:
 14256              	.LBE8502:
 14257              	.LBE8503:
 14258              		.loc 16 611 17 view .LVU3255
 14259 0166 CDE90856 		strd	r5, r6, [sp, #32]
 14260              	.LVL896:
 14261              		.loc 16 611 17 view .LVU3256
 14262              	.LBE8504:
 14263              	.LBE8505:
 14264              	.LBE8506:
 118:Jellybeans.cpp ****     menuItems[4] = MenuItem("Tonic    ", allNotes,       0, cb);
 14265              		.loc 14 118 63 view .LVU3257
 14266 016a FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 14267              	.LVL897:
 14268 016e 10A9     		add	r1, sp, #64
 14269 0170 6B48     		ldr	r0, .L677+60
 14270 0172 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 14271              	.LVL898:
 118:Jellybeans.cpp ****     menuItems[4] = MenuItem("Tonic    ", allNotes,       0, cb);
 14272              		.loc 14 118 20 view .LVU3258
 14273 0176 10A8     		add	r0, sp, #64
 14274 0178 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 14275              	.LVL899:
 14276              	.LBB8507:
 14277              	.LBI8507:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 14278              		.loc 16 303 11 is_stmt 1 view .LVU3259
 14279              	.LBB8508:
 14280 017c 2046     		mov	r0, r4
 14281 017e FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 14282              	.LVL900:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 14283              		.loc 16 303 11 is_stmt 0 view .LVU3260
 14284              	.LBE8508:
 14285              	.LBE8507:
 118:Jellybeans.cpp ****     menuItems[4] = MenuItem("Tonic    ", allNotes,       0, cb);
 14286              		.loc 14 118 63 view .LVU3261
 14287 0182 03A8     		add	r0, sp, #12
 14288 0184 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 14289              	.LVL901:
 14290              	.LBB8509:
 14291              	.LBI8509:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 528


 14292              		.loc 19 657 7 is_stmt 1 view .LVU3262
 14293              	.LBB8510:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14294              		.loc 19 658 19 is_stmt 0 view .LVU3263
 14295 0188 0AA8     		add	r0, sp, #40
 14296              	.LVL902:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14297              		.loc 19 658 19 view .LVU3264
 14298 018a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 14299              	.LVL903:
 14300              	.LBB8511:
 14301              	.LBI8511:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14302              		.loc 19 150 14 is_stmt 1 view .LVU3265
 14303              	.LBB8512:
 14304              	.LBI8512:
 14305              		.loc 21 162 7 view .LVU3266
 14306              	.LBB8513:
 14307              	.LBI8513:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14308              		.loc 22 89 7 view .LVU3267
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14309              		.loc 22 89 7 is_stmt 0 view .LVU3268
 14310              	.LBE8513:
 14311              	.LBE8512:
 14312              	.LBE8511:
 14313              	.LBE8510:
 14314              	.LBE8509:
 14315              	.LBB8514:
 14316              	.LBI8514:
 14317              		.loc 21 162 7 is_stmt 1 view .LVU3269
 14318              	.LBB8515:
 14319              	.LBI8515:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14320              		.loc 22 89 7 view .LVU3270
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14321              		.loc 22 89 7 is_stmt 0 view .LVU3271
 14322              	.LBE8515:
 14323              	.LBE8514:
 119:Jellybeans.cpp ****     menuItems[5] = MenuItem("Scale    ", modes,          0, cb);
 14324              		.loc 14 119 5 is_stmt 1 view .LVU3272
 14325              	.LBB8516:
 14326              	.LBI8516:
 14327              		.loc 24 185 7 view .LVU3273
 14328              	.LBB8517:
 14329              	.LBI8517:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14330              		.loc 24 55 7 view .LVU3274
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14331              		.loc 24 55 7 is_stmt 0 view .LVU3275
 14332              	.LBE8517:
 14333              	.LBE8516:
 14334              	.LBB8518:
 14335              	.LBI8518:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 14336              		.loc 21 144 7 is_stmt 1 view .LVU3276
 14337              	.LBB8519:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 529


 14338              	.LBI8519:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14339              		.loc 22 79 7 view .LVU3277
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14340              		.loc 22 79 7 is_stmt 0 view .LVU3278
 14341              	.LBE8519:
 14342              	.LBE8518:
 119:Jellybeans.cpp ****     menuItems[5] = MenuItem("Scale    ", modes,          0, cb);
 14343              		.loc 14 119 63 view .LVU3279
 14344 018e 6549     		ldr	r1, .L677+64
 14345 0190 0AA8     		add	r0, sp, #40
 14346 0192 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 14347              	.LVL904:
 14348 0196 6449     		ldr	r1, .L677+68
 14349 0198 03A8     		add	r0, sp, #12
 14350 019a FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 14351              	.LVL905:
 14352              	.LBB8520:
 14353              	.LBI8520:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 14354              		.loc 16 601 7 is_stmt 1 view .LVU3280
 14355              	.LBB8521:
 14356              	.LBB8522:
 14357              	.LBI8522:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14358              		.loc 16 240 5 view .LVU3281
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14359              		.loc 16 240 5 is_stmt 0 view .LVU3282
 14360              	.LBE8522:
 14361              	.LBB8523:
 14362              	.LBB8524:
 14363              	.LBI8524:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14364              		.loc 16 217 4 is_stmt 1 view .LVU3283
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14365              		.loc 16 217 4 is_stmt 0 view .LVU3284
 14366              	.LBE8524:
 14367              	.LBB8525:
 14368              	.LBI8525:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14369              		.loc 34 101 5 is_stmt 1 view .LVU3285
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14370              		.loc 34 101 5 is_stmt 0 view .LVU3286
 14371              	.LBE8525:
 14372              	.LBB8526:
 14373              	.LBI8526:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 14374              		.loc 16 207 2 is_stmt 1 view .LVU3287
 14375              	.LBB8527:
 14376              	.LBI8527:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14377              		.loc 16 232 2 view .LVU3288
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14378              		.loc 16 232 2 is_stmt 0 view .LVU3289
 14379              	.LBE8527:
 14380              	.LBE8526:
 14381              	.LBE8523:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 530


 14382              	.LBE8521:
 14383              	.LBE8520:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 14384              		.loc 16 87 37 is_stmt 1 view .LVU3290
 14385              		.loc 18 175 3 view .LVU3291
 119:Jellybeans.cpp ****     menuItems[5] = MenuItem("Scale    ", modes,          0, cb);
 14386              		.loc 14 119 63 is_stmt 0 view .LVU3292
 14387 019e 0023     		movs	r3, #0
 14388 01a0 03AA     		add	r2, sp, #12
 14389 01a2 0AA9     		add	r1, sp, #40
 14390 01a4 0094     		str	r4, [sp]
 14391 01a6 10A8     		add	r0, sp, #64
 14392              	.LBB8533:
 14393              	.LBB8532:
 14394              	.LBB8531:
 14395              	.LBB8530:
 14396              	.LBB8529:
 14397              	.LBB8528:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14398              		.loc 16 233 4 view .LVU3293
 14399 01a8 0697     		str	r7, [sp, #24]
 14400              	.LVL906:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14401              		.loc 16 233 4 view .LVU3294
 14402              	.LBE8528:
 14403              	.LBE8529:
 14404              	.LBE8530:
 14405              		.loc 16 611 17 view .LVU3295
 14406 01aa CDE90856 		strd	r5, r6, [sp, #32]
 14407              	.LVL907:
 14408              		.loc 16 611 17 view .LVU3296
 14409              	.LBE8531:
 14410              	.LBE8532:
 14411              	.LBE8533:
 119:Jellybeans.cpp ****     menuItems[5] = MenuItem("Scale    ", modes,          0, cb);
 14412              		.loc 14 119 63 view .LVU3297
 14413 01ae FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 14414              	.LVL908:
 14415 01b2 10A9     		add	r1, sp, #64
 14416 01b4 5D48     		ldr	r0, .L677+72
 14417 01b6 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 14418              	.LVL909:
 119:Jellybeans.cpp ****     menuItems[5] = MenuItem("Scale    ", modes,          0, cb);
 14419              		.loc 14 119 20 view .LVU3298
 14420 01ba 10A8     		add	r0, sp, #64
 14421 01bc FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 14422              	.LVL910:
 14423              	.LBB8534:
 14424              	.LBI8534:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 14425              		.loc 16 303 11 is_stmt 1 view .LVU3299
 14426              	.LBB8535:
 14427 01c0 2046     		mov	r0, r4
 14428 01c2 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 14429              	.LVL911:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 14430              		.loc 16 303 11 is_stmt 0 view .LVU3300
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 531


 14431              	.LBE8535:
 14432              	.LBE8534:
 119:Jellybeans.cpp ****     menuItems[5] = MenuItem("Scale    ", modes,          0, cb);
 14433              		.loc 14 119 63 view .LVU3301
 14434 01c6 03A8     		add	r0, sp, #12
 14435 01c8 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 14436              	.LVL912:
 14437              	.LBB8536:
 14438              	.LBI8536:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 14439              		.loc 19 657 7 is_stmt 1 view .LVU3302
 14440              	.LBB8537:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14441              		.loc 19 658 19 is_stmt 0 view .LVU3303
 14442 01cc 0AA8     		add	r0, sp, #40
 14443              	.LVL913:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14444              		.loc 19 658 19 view .LVU3304
 14445 01ce FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 14446              	.LVL914:
 14447              	.LBB8538:
 14448              	.LBI8538:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14449              		.loc 19 150 14 is_stmt 1 view .LVU3305
 14450              	.LBB8539:
 14451              	.LBI8539:
 14452              		.loc 21 162 7 view .LVU3306
 14453              	.LBB8540:
 14454              	.LBI8540:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14455              		.loc 22 89 7 view .LVU3307
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14456              		.loc 22 89 7 is_stmt 0 view .LVU3308
 14457              	.LBE8540:
 14458              	.LBE8539:
 14459              	.LBE8538:
 14460              	.LBE8537:
 14461              	.LBE8536:
 14462              	.LBB8541:
 14463              	.LBI8541:
 14464              		.loc 21 162 7 is_stmt 1 view .LVU3309
 14465              	.LBB8542:
 14466              	.LBI8542:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14467              		.loc 22 89 7 view .LVU3310
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14468              		.loc 22 89 7 is_stmt 0 view .LVU3311
 14469              	.LBE8542:
 14470              	.LBE8541:
 120:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", arpRhythms,     0, cb); // Rhythm
 14471              		.loc 14 120 5 is_stmt 1 view .LVU3312
 14472              	.LBB8543:
 14473              	.LBI8543:
 14474              		.loc 24 185 7 view .LVU3313
 14475              	.LBB8544:
 14476              	.LBI8544:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 532


 14477              		.loc 24 55 7 view .LVU3314
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14478              		.loc 24 55 7 is_stmt 0 view .LVU3315
 14479              	.LBE8544:
 14480              	.LBE8543:
 14481              	.LBB8545:
 14482              	.LBI8545:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 14483              		.loc 21 144 7 is_stmt 1 view .LVU3316
 14484              	.LBB8546:
 14485              	.LBI8546:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14486              		.loc 22 79 7 view .LVU3317
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14487              		.loc 22 79 7 is_stmt 0 view .LVU3318
 14488              	.LBE8546:
 14489              	.LBE8545:
 120:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", arpRhythms,     0, cb); // Rhythm
 14490              		.loc 14 120 63 view .LVU3319
 14491 01d2 4C49     		ldr	r1, .L677+32
 14492 01d4 0AA8     		add	r0, sp, #40
 14493 01d6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 14494              	.LVL915:
 14495 01da 5549     		ldr	r1, .L677+76
 14496 01dc 03A8     		add	r0, sp, #12
 14497 01de FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 14498              	.LVL916:
 14499              	.LBB8547:
 14500              	.LBI8547:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 14501              		.loc 16 601 7 is_stmt 1 view .LVU3320
 14502              	.LBB8548:
 14503              	.LBB8549:
 14504              	.LBI8549:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14505              		.loc 16 240 5 view .LVU3321
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14506              		.loc 16 240 5 is_stmt 0 view .LVU3322
 14507              	.LBE8549:
 14508              	.LBB8550:
 14509              	.LBB8551:
 14510              	.LBI8551:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14511              		.loc 16 217 4 is_stmt 1 view .LVU3323
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14512              		.loc 16 217 4 is_stmt 0 view .LVU3324
 14513              	.LBE8551:
 14514              	.LBB8552:
 14515              	.LBI8552:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14516              		.loc 34 101 5 is_stmt 1 view .LVU3325
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14517              		.loc 34 101 5 is_stmt 0 view .LVU3326
 14518              	.LBE8552:
 14519              	.LBB8553:
 14520              	.LBI8553:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 533


 14521              		.loc 16 207 2 is_stmt 1 view .LVU3327
 14522              	.LBB8554:
 14523              	.LBI8554:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14524              		.loc 16 232 2 view .LVU3328
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14525              		.loc 16 232 2 is_stmt 0 view .LVU3329
 14526              	.LBE8554:
 14527              	.LBE8553:
 14528              	.LBE8550:
 14529              	.LBE8548:
 14530              	.LBE8547:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 14531              		.loc 16 87 37 is_stmt 1 view .LVU3330
 14532              		.loc 18 175 3 view .LVU3331
 120:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", arpRhythms,     0, cb); // Rhythm
 14533              		.loc 14 120 63 is_stmt 0 view .LVU3332
 14534 01e2 0023     		movs	r3, #0
 14535 01e4 03AA     		add	r2, sp, #12
 14536 01e6 0AA9     		add	r1, sp, #40
 14537 01e8 0094     		str	r4, [sp]
 14538 01ea 10A8     		add	r0, sp, #64
 14539              	.LBB8560:
 14540              	.LBB8559:
 14541              	.LBB8558:
 14542              	.LBB8557:
 14543              	.LBB8556:
 14544              	.LBB8555:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14545              		.loc 16 233 4 view .LVU3333
 14546 01ec 0697     		str	r7, [sp, #24]
 14547              	.LVL917:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14548              		.loc 16 233 4 view .LVU3334
 14549              	.LBE8555:
 14550              	.LBE8556:
 14551              	.LBE8557:
 14552              		.loc 16 611 17 view .LVU3335
 14553 01ee CDE90856 		strd	r5, r6, [sp, #32]
 14554              	.LVL918:
 14555              		.loc 16 611 17 view .LVU3336
 14556              	.LBE8558:
 14557              	.LBE8559:
 14558              	.LBE8560:
 120:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", arpRhythms,     0, cb); // Rhythm
 14559              		.loc 14 120 63 view .LVU3337
 14560 01f2 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 14561              	.LVL919:
 14562 01f6 10A9     		add	r1, sp, #64
 14563 01f8 4E48     		ldr	r0, .L677+80
 14564 01fa FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 14565              	.LVL920:
 120:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", arpRhythms,     0, cb); // Rhythm
 14566              		.loc 14 120 20 view .LVU3338
 14567 01fe 10A8     		add	r0, sp, #64
 14568 0200 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 14569              	.LVL921:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 534


 14570              	.LBB8561:
 14571              	.LBI8561:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 14572              		.loc 16 303 11 is_stmt 1 view .LVU3339
 14573              	.LBB8562:
 14574 0204 2046     		mov	r0, r4
 14575 0206 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 14576              	.LVL922:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 14577              		.loc 16 303 11 is_stmt 0 view .LVU3340
 14578              	.LBE8562:
 14579              	.LBE8561:
 120:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", arpRhythms,     0, cb); // Rhythm
 14580              		.loc 14 120 63 view .LVU3341
 14581 020a 03A8     		add	r0, sp, #12
 14582 020c FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 14583              	.LVL923:
 14584              	.LBB8563:
 14585              	.LBI8563:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 14586              		.loc 19 657 7 is_stmt 1 view .LVU3342
 14587              	.LBB8564:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14588              		.loc 19 658 19 is_stmt 0 view .LVU3343
 14589 0210 0AA8     		add	r0, sp, #40
 14590              	.LVL924:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14591              		.loc 19 658 19 view .LVU3344
 14592 0212 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 14593              	.LVL925:
 14594              	.LBB8565:
 14595              	.LBI8565:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14596              		.loc 19 150 14 is_stmt 1 view .LVU3345
 14597              	.LBB8566:
 14598              	.LBI8566:
 14599              		.loc 21 162 7 view .LVU3346
 14600              	.LBB8567:
 14601              	.LBI8567:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14602              		.loc 22 89 7 view .LVU3347
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14603              		.loc 22 89 7 is_stmt 0 view .LVU3348
 14604              	.LBE8567:
 14605              	.LBE8566:
 14606              	.LBE8565:
 14607              	.LBE8564:
 14608              	.LBE8563:
 14609              	.LBB8568:
 14610              	.LBI8568:
 14611              		.loc 21 162 7 is_stmt 1 view .LVU3349
 14612              	.LBB8569:
 14613              	.LBI8569:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14614              		.loc 22 89 7 view .LVU3350
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14615              		.loc 22 89 7 is_stmt 0 view .LVU3351
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 535


 14616              	.LBE8569:
 14617              	.LBE8568:
 121:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 14618              		.loc 14 121 5 is_stmt 1 view .LVU3352
 14619              	.LBB8570:
 14620              	.LBI8570:
 14621              		.loc 24 185 7 view .LVU3353
 14622              	.LBB8571:
 14623              	.LBI8571:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14624              		.loc 24 55 7 view .LVU3354
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14625              		.loc 24 55 7 is_stmt 0 view .LVU3355
 14626              	.LBE8571:
 14627              	.LBE8570:
 14628              	.LBB8572:
 14629              	.LBI8572:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 14630              		.loc 21 144 7 is_stmt 1 view .LVU3356
 14631              	.LBB8573:
 14632              	.LBI8573:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14633              		.loc 22 79 7 view .LVU3357
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14634              		.loc 22 79 7 is_stmt 0 view .LVU3358
 14635              	.LBE8573:
 14636              	.LBE8572:
 121:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 14637              		.loc 14 121 63 view .LVU3359
 14638 0216 3B49     		ldr	r1, .L677+32
 14639 0218 0AA8     		add	r0, sp, #40
 14640 021a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 14641              	.LVL926:
 14642 021e 4649     		ldr	r1, .L677+84
 14643 0220 03A8     		add	r0, sp, #12
 14644 0222 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 14645              	.LVL927:
 14646              	.LBB8574:
 14647              	.LBI8574:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 14648              		.loc 16 601 7 is_stmt 1 view .LVU3360
 14649              	.LBB8575:
 14650              	.LBB8576:
 14651              	.LBI8576:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14652              		.loc 16 240 5 view .LVU3361
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14653              		.loc 16 240 5 is_stmt 0 view .LVU3362
 14654              	.LBE8576:
 14655              	.LBB8577:
 14656              	.LBB8578:
 14657              	.LBI8578:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14658              		.loc 16 217 4 is_stmt 1 view .LVU3363
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14659              		.loc 16 217 4 is_stmt 0 view .LVU3364
 14660              	.LBE8578:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 536


 14661              	.LBB8579:
 14662              	.LBI8579:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14663              		.loc 34 101 5 is_stmt 1 view .LVU3365
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14664              		.loc 34 101 5 is_stmt 0 view .LVU3366
 14665              	.LBE8579:
 14666              	.LBB8580:
 14667              	.LBI8580:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 14668              		.loc 16 207 2 is_stmt 1 view .LVU3367
 14669              	.LBB8581:
 14670              	.LBI8581:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14671              		.loc 16 232 2 view .LVU3368
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14672              		.loc 16 232 2 is_stmt 0 view .LVU3369
 14673              	.LBE8581:
 14674              	.LBE8580:
 14675              	.LBE8577:
 14676              	.LBE8575:
 14677              	.LBE8574:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 14678              		.loc 16 87 37 is_stmt 1 view .LVU3370
 14679              		.loc 18 175 3 view .LVU3371
 121:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 14680              		.loc 14 121 63 is_stmt 0 view .LVU3372
 14681 0226 0023     		movs	r3, #0
 14682 0228 03AA     		add	r2, sp, #12
 14683 022a 0AA9     		add	r1, sp, #40
 14684 022c 0094     		str	r4, [sp]
 14685 022e 10A8     		add	r0, sp, #64
 14686              	.LBB8587:
 14687              	.LBB8586:
 14688              	.LBB8585:
 14689              	.LBB8584:
 14690              	.LBB8583:
 14691              	.LBB8582:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14692              		.loc 16 233 4 view .LVU3373
 14693 0230 0697     		str	r7, [sp, #24]
 14694              	.LVL928:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14695              		.loc 16 233 4 view .LVU3374
 14696              	.LBE8582:
 14697              	.LBE8583:
 14698              	.LBE8584:
 14699              		.loc 16 611 17 view .LVU3375
 14700 0232 CDE90856 		strd	r5, r6, [sp, #32]
 14701              	.LVL929:
 14702              		.loc 16 611 17 view .LVU3376
 14703              	.LBE8585:
 14704              	.LBE8586:
 14705              	.LBE8587:
 121:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 14706              		.loc 14 121 63 view .LVU3377
 14707 0236 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 537


 14708              	.LVL930:
 14709 023a 10A9     		add	r1, sp, #64
 14710 023c 3F48     		ldr	r0, .L677+88
 14711 023e FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 14712              	.LVL931:
 121:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 14713              		.loc 14 121 20 view .LVU3378
 14714 0242 10A8     		add	r0, sp, #64
 14715 0244 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 14716              	.LVL932:
 14717              	.LBB8588:
 14718              	.LBI8588:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 14719              		.loc 16 303 11 is_stmt 1 view .LVU3379
 14720              	.LBB8589:
 14721 0248 2046     		mov	r0, r4
 14722 024a FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 14723              	.LVL933:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 14724              		.loc 16 303 11 is_stmt 0 view .LVU3380
 14725              	.LBE8589:
 14726              	.LBE8588:
 121:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 14727              		.loc 14 121 63 view .LVU3381
 14728 024e 03A8     		add	r0, sp, #12
 14729 0250 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 14730              	.LVL934:
 14731              	.LBB8590:
 14732              	.LBI8590:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 14733              		.loc 19 657 7 is_stmt 1 view .LVU3382
 14734              	.LBB8591:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14735              		.loc 19 658 19 is_stmt 0 view .LVU3383
 14736 0254 0AA8     		add	r0, sp, #40
 14737              	.LVL935:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14738              		.loc 19 658 19 view .LVU3384
 14739 0256 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 14740              	.LVL936:
 14741              	.LBB8592:
 14742              	.LBI8592:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14743              		.loc 19 150 14 is_stmt 1 view .LVU3385
 14744              	.LBB8593:
 14745              	.LBI8593:
 14746              		.loc 21 162 7 view .LVU3386
 14747              	.LBB8594:
 14748              	.LBI8594:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14749              		.loc 22 89 7 view .LVU3387
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14750              		.loc 22 89 7 is_stmt 0 view .LVU3388
 14751              	.LBE8594:
 14752              	.LBE8593:
 14753              	.LBE8592:
 14754              	.LBE8591:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 538


 14755              	.LBE8590:
 14756              	.LBB8595:
 14757              	.LBI8595:
 14758              		.loc 21 162 7 is_stmt 1 view .LVU3389
 14759              	.LBB8596:
 14760              	.LBI8596:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14761              		.loc 22 89 7 view .LVU3390
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14762              		.loc 22 89 7 is_stmt 0 view .LVU3391
 14763              	.LBE8596:
 14764              	.LBE8595:
 122:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cb);
 14765              		.loc 14 122 5 is_stmt 1 view .LVU3392
 14766              	.LBB8597:
 14767              	.LBI8597:
 14768              		.loc 24 185 7 view .LVU3393
 14769              	.LBB8598:
 14770              	.LBI8598:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14771              		.loc 24 55 7 view .LVU3394
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14772              		.loc 24 55 7 is_stmt 0 view .LVU3395
 14773              	.LBE8598:
 14774              	.LBE8597:
 14775              	.LBB8599:
 14776              	.LBI8599:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 14777              		.loc 21 144 7 is_stmt 1 view .LVU3396
 14778              	.LBB8600:
 14779              	.LBI8600:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14780              		.loc 22 79 7 view .LVU3397
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14781              		.loc 22 79 7 is_stmt 0 view .LVU3398
 14782              	.LBE8600:
 14783              	.LBE8599:
 122:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cb);
 14784              		.loc 14 122 63 view .LVU3399
 14785 025a 3949     		ldr	r1, .L677+92
 14786 025c 0AA8     		add	r0, sp, #40
 14787 025e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 14788              	.LVL937:
 14789 0262 3549     		ldr	r1, .L677+84
 14790 0264 03A8     		add	r0, sp, #12
 14791 0266 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 14792              	.LVL938:
 14793              	.LBB8601:
 14794              	.LBI8601:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 14795              		.loc 16 601 7 is_stmt 1 view .LVU3400
 14796              	.LBB8602:
 14797              	.LBB8603:
 14798              	.LBI8603:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14799              		.loc 16 240 5 view .LVU3401
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 539


 14800              		.loc 16 240 5 is_stmt 0 view .LVU3402
 14801              	.LBE8603:
 14802              	.LBB8604:
 14803              	.LBB8605:
 14804              	.LBI8605:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14805              		.loc 16 217 4 is_stmt 1 view .LVU3403
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14806              		.loc 16 217 4 is_stmt 0 view .LVU3404
 14807              	.LBE8605:
 14808              	.LBB8606:
 14809              	.LBI8606:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14810              		.loc 34 101 5 is_stmt 1 view .LVU3405
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14811              		.loc 34 101 5 is_stmt 0 view .LVU3406
 14812              	.LBE8606:
 14813              	.LBB8607:
 14814              	.LBI8607:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 14815              		.loc 16 207 2 is_stmt 1 view .LVU3407
 14816              	.LBB8608:
 14817              	.LBI8608:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14818              		.loc 16 232 2 view .LVU3408
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14819              		.loc 16 232 2 is_stmt 0 view .LVU3409
 14820              	.LBE8608:
 14821              	.LBE8607:
 14822              	.LBE8604:
 14823              	.LBE8602:
 14824              	.LBE8601:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 14825              		.loc 16 87 37 is_stmt 1 view .LVU3410
 14826              		.loc 18 175 3 view .LVU3411
 122:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cb);
 14827              		.loc 14 122 63 is_stmt 0 view .LVU3412
 14828 026a 0023     		movs	r3, #0
 14829 026c 03AA     		add	r2, sp, #12
 14830 026e 0AA9     		add	r1, sp, #40
 14831 0270 0094     		str	r4, [sp]
 14832 0272 10A8     		add	r0, sp, #64
 14833              	.LBB8614:
 14834              	.LBB8613:
 14835              	.LBB8612:
 14836              	.LBB8611:
 14837              	.LBB8610:
 14838              	.LBB8609:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14839              		.loc 16 233 4 view .LVU3413
 14840 0274 0697     		str	r7, [sp, #24]
 14841              	.LVL939:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14842              		.loc 16 233 4 view .LVU3414
 14843              	.LBE8609:
 14844              	.LBE8610:
 14845              	.LBE8611:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 540


 14846              		.loc 16 611 17 view .LVU3415
 14847 0276 CDE90856 		strd	r5, r6, [sp, #32]
 14848              	.LVL940:
 14849              		.loc 16 611 17 view .LVU3416
 14850              	.LBE8612:
 14851              	.LBE8613:
 14852              	.LBE8614:
 122:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cb);
 14853              		.loc 14 122 63 view .LVU3417
 14854 027a FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 14855              	.LVL941:
 14856 027e 10A9     		add	r1, sp, #64
 14857 0280 3048     		ldr	r0, .L677+96
 14858 0282 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 14859              	.LVL942:
 122:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cb);
 14860              		.loc 14 122 20 view .LVU3418
 14861 0286 10A8     		add	r0, sp, #64
 14862 0288 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 14863              	.LVL943:
 14864              	.LBB8615:
 14865              	.LBI8615:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 14866              		.loc 16 303 11 is_stmt 1 view .LVU3419
 14867              	.LBB8616:
 14868 028c 2046     		mov	r0, r4
 14869 028e FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 14870              	.LVL944:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 14871              		.loc 16 303 11 is_stmt 0 view .LVU3420
 14872              	.LBE8616:
 14873              	.LBE8615:
 122:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cb);
 14874              		.loc 14 122 63 view .LVU3421
 14875 0292 03A8     		add	r0, sp, #12
 14876 0294 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 14877              	.LVL945:
 14878              	.LBB8617:
 14879              	.LBI8617:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 14880              		.loc 19 657 7 is_stmt 1 view .LVU3422
 14881              	.LBB8618:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14882              		.loc 19 658 19 is_stmt 0 view .LVU3423
 14883 0298 0AA8     		add	r0, sp, #40
 14884              	.LVL946:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14885              		.loc 19 658 19 view .LVU3424
 14886 029a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 14887              	.LVL947:
 14888              	.LBB8619:
 14889              	.LBI8619:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14890              		.loc 19 150 14 is_stmt 1 view .LVU3425
 14891              	.LBB8620:
 14892              	.LBI8620:
 14893              		.loc 21 162 7 view .LVU3426
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 541


 14894              	.LBB8621:
 14895              	.LBI8621:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14896              		.loc 22 89 7 view .LVU3427
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14897              		.loc 22 89 7 is_stmt 0 view .LVU3428
 14898              	.LBE8621:
 14899              	.LBE8620:
 14900              	.LBE8619:
 14901              	.LBE8618:
 14902              	.LBE8617:
 14903              	.LBB8622:
 14904              	.LBI8622:
 14905              		.loc 21 162 7 is_stmt 1 view .LVU3429
 14906              	.LBB8623:
 14907              	.LBI8623:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14908              		.loc 22 89 7 view .LVU3430
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14909              		.loc 22 89 7 is_stmt 0 view .LVU3431
 14910              	.LBE8623:
 14911              	.LBE8622:
 123:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 14912              		.loc 14 123 5 is_stmt 1 view .LVU3432
 14913              	.LBB8624:
 14914              	.LBI8624:
 14915              		.loc 24 185 7 view .LVU3433
 14916              	.LBB8625:
 14917              	.LBI8625:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14918              		.loc 24 55 7 view .LVU3434
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 14919              		.loc 24 55 7 is_stmt 0 view .LVU3435
 14920              	.LBE8625:
 14921              	.LBE8624:
 14922              	.LBB8626:
 14923              	.LBI8626:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 14924              		.loc 21 144 7 is_stmt 1 view .LVU3436
 14925              	.LBB8627:
 14926              	.LBI8627:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14927              		.loc 22 79 7 view .LVU3437
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14928              		.loc 22 79 7 is_stmt 0 view .LVU3438
 14929              	.LBE8627:
 14930              	.LBE8626:
 123:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 14931              		.loc 14 123 63 view .LVU3439
 14932 029e 2A49     		ldr	r1, .L677+100
 14933 02a0 0AA8     		add	r0, sp, #40
 14934 02a2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 14935              	.LVL948:
 14936 02a6 4146     		mov	r1, r8
 14937 02a8 03A8     		add	r0, sp, #12
 14938 02aa FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 14939              	.LVL949:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 542


 14940              	.LBB8628:
 14941              	.LBI8628:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 14942              		.loc 16 601 7 is_stmt 1 view .LVU3440
 14943              	.LBB8629:
 14944              	.LBB8630:
 14945              	.LBI8630:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14946              		.loc 16 240 5 view .LVU3441
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14947              		.loc 16 240 5 is_stmt 0 view .LVU3442
 14948              	.LBE8630:
 14949              	.LBB8631:
 14950              	.LBB8632:
 14951              	.LBI8632:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14952              		.loc 16 217 4 is_stmt 1 view .LVU3443
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 14953              		.loc 16 217 4 is_stmt 0 view .LVU3444
 14954              	.LBE8632:
 14955              	.LBB8633:
 14956              	.LBI8633:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14957              		.loc 34 101 5 is_stmt 1 view .LVU3445
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14958              		.loc 34 101 5 is_stmt 0 view .LVU3446
 14959              	.LBE8633:
 14960              	.LBB8634:
 14961              	.LBI8634:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 14962              		.loc 16 207 2 is_stmt 1 view .LVU3447
 14963              	.LBB8635:
 14964              	.LBI8635:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14965              		.loc 16 232 2 view .LVU3448
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 14966              		.loc 16 232 2 is_stmt 0 view .LVU3449
 14967              	.LBE8635:
 14968              	.LBE8634:
 14969              	.LBE8631:
 14970              	.LBE8629:
 14971              	.LBE8628:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 14972              		.loc 16 87 37 is_stmt 1 view .LVU3450
 14973              		.loc 18 175 3 view .LVU3451
 123:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 14974              		.loc 14 123 63 is_stmt 0 view .LVU3452
 14975 02ae 0023     		movs	r3, #0
 14976 02b0 03AA     		add	r2, sp, #12
 14977 02b2 0AA9     		add	r1, sp, #40
 14978 02b4 0094     		str	r4, [sp]
 14979 02b6 10A8     		add	r0, sp, #64
 14980              	.LBB8643:
 14981              	.LBB8641:
 14982              	.LBB8639:
 14983              	.LBB8638:
 14984              	.LBB8637:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 543


 14985              	.LBB8636:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14986              		.loc 16 233 4 view .LVU3453
 14987 02b8 0697     		str	r7, [sp, #24]
 14988              	.LVL950:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 14989              		.loc 16 233 4 view .LVU3454
 14990              	.LBE8636:
 14991              	.LBE8637:
 14992              	.LBE8638:
 14993              	.LBE8639:
 14994              	.LBE8641:
 14995              	.LBE8643:
 14996              	.LBB8644:
 14997              	.LBB8645:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 14998              		.loc 26 919 50 view .LVU3455
 14999 02ba 244F     		ldr	r7, .L677+104
 15000              	.LBE8645:
 15001              	.LBE8644:
 15002              	.LBB8647:
 15003              	.LBB8642:
 15004              	.LBB8640:
 15005              		.loc 16 611 17 view .LVU3456
 15006 02bc CDE90856 		strd	r5, r6, [sp, #32]
 15007              	.LVL951:
 15008              		.loc 16 611 17 view .LVU3457
 15009              	.LBE8640:
 15010              	.LBE8642:
 15011              	.LBE8647:
 123:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 15012              		.loc 14 123 63 view .LVU3458
 15013 02c0 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 15014              	.LVL952:
 15015 02c4 10A9     		add	r1, sp, #64
 15016 02c6 2248     		ldr	r0, .L677+108
 15017 02c8 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 15018              	.LVL953:
 123:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 15019              		.loc 14 123 20 view .LVU3459
 15020 02cc 10A8     		add	r0, sp, #64
 15021 02ce FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 15022              	.LVL954:
 15023              	.LBB8648:
 15024              	.LBI8648:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15025              		.loc 16 303 11 is_stmt 1 view .LVU3460
 15026              	.LBB8649:
 15027 02d2 2046     		mov	r0, r4
 15028 02d4 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 15029              	.LVL955:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 15030              		.loc 16 303 11 is_stmt 0 view .LVU3461
 15031              	.LBE8649:
 15032              	.LBE8648:
 123:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 15033              		.loc 14 123 63 view .LVU3462
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 544


 15034 02d8 03A8     		add	r0, sp, #12
 15035 02da FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 15036              	.LVL956:
 15037              	.LBB8650:
 15038              	.LBI8650:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 15039              		.loc 19 657 7 is_stmt 1 view .LVU3463
 15040              	.LBB8651:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15041              		.loc 19 658 19 is_stmt 0 view .LVU3464
 15042 02de 0AA8     		add	r0, sp, #40
 15043 02e0 40E0     		b	.L678
 15044              	.L679:
 15045 02e2 00BF     		.align	2
 15046              	.L677:
 15047 02e4 00000000 		.word	patch
 15048 02e8 00000000 		.word	.LANCHOR13
 15049 02ec 00000000 		.word	.LC11
 15050 02f0 00000000 		.word	_Z2cbv
 15051 02f4 00000000 		.word	_ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data
 15052 02f8 00000000 		.word	_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation
 15053 02fc 00000000 		.word	0
 15054 0300 00000000 		.word	.LANCHOR2
 15055 0304 0C000000 		.word	.LC12
 15056 0308 50000000 		.word	.LANCHOR2+80
 15057 030c 18000000 		.word	.LC13
 15058 0310 A0000000 		.word	.LANCHOR2+160
 15059 0314 F0000000 		.word	.LANCHOR2+240
 15060 0318 24000000 		.word	.LC14
 15061 031c 00000000 		.word	.LANCHOR18
 15062 0320 40010000 		.word	.LANCHOR2+320
 15063 0324 30000000 		.word	.LC15
 15064 0328 00000000 		.word	.LANCHOR19
 15065 032c 90010000 		.word	.LANCHOR2+400
 15066 0330 00000000 		.word	.LANCHOR20
 15067 0334 E0010000 		.word	.LANCHOR2+480
 15068 0338 00000000 		.word	.LANCHOR21
 15069 033c 30020000 		.word	.LANCHOR2+560
 15070 0340 3C000000 		.word	.LC16
 15071 0344 80020000 		.word	.LANCHOR2+640
 15072 0348 48000000 		.word	.LC17
 15073 034c ABAAAAAA 		.word	-1431655765
 15074 0350 D0020000 		.word	.LANCHOR2+720
 15075 0354 00000000 		.word	.LANCHOR14
 15076 0358 00000000 		.word	.LANCHOR15
 15077 035c 00000000 		.word	.LANCHOR16
 15078 0360 00000000 		.word	.LANCHOR17
 15079              	.L678:
 15080              	.LVL957:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15081              		.loc 19 658 19 view .LVU3465
 15082 0364 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 15083              	.LVL958:
 15084              	.LBB8652:
 15085              	.LBI8652:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15086              		.loc 19 150 14 is_stmt 1 view .LVU3466
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 545


 15087              	.LBB8653:
 15088              	.LBI8653:
 15089              		.loc 21 162 7 view .LVU3467
 15090              	.LBB8654:
 15091              	.LBI8654:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15092              		.loc 22 89 7 view .LVU3468
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15093              		.loc 22 89 7 is_stmt 0 view .LVU3469
 15094              	.LBE8654:
 15095              	.LBE8653:
 15096              	.LBE8652:
 15097              	.LBE8651:
 15098              	.LBE8650:
 15099              	.LBB8655:
 15100              	.LBI8655:
 15101              		.loc 21 162 7 is_stmt 1 view .LVU3470
 15102              	.LBB8656:
 15103              	.LBI8656:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15104              		.loc 22 89 7 view .LVU3471
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15105              		.loc 22 89 7 is_stmt 0 view .LVU3472
 15106              	.LBE8656:
 15107              	.LBE8655:
 126:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 15108              		.loc 14 126 5 is_stmt 1 view .LVU3473
 126:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 15109              		.loc 14 126 39 is_stmt 0 view .LVU3474
 15110 0368 514D     		ldr	r5, .L680
 15111 036a 10AC     		add	r4, sp, #64
 126:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 15112              		.loc 14 126 22 view .LVU3475
 15113 036c B0EE480A 		vmov.f32	s0, s16
 15114              	.LBB8657:
 15115              	.LBB8646:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 15116              		.loc 26 919 50 view .LVU3476
 15117 0370 DBE90023 		ldrd	r2, r3, [fp]
 15118 0374 9B1A     		subs	r3, r3, r2
 15119 0376 DB10     		asrs	r3, r3, #3
 15120 0378 07FB03F2 		mul	r2, r7, r3
 15121 037c 00EE902A 		vmov	s1, r2	@ int
 15122              	.LBE8646:
 15123              	.LBE8657:
 126:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 15124              		.loc 14 126 39 view .LVU3477
 15125 0380 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15126 0382 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 15127 0384 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 126:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 15128              		.loc 14 126 22 view .LVU3478
 15129 0388 F8EE600A 		vcvt.f32.u32	s1, s1
 127:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 15130              		.loc 14 127 40 view .LVU3479
 15131 038c 05F11006 		add	r6, r5, #16
 126:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 546


 15132              		.loc 14 126 39 view .LVU3480
 15133 0390 84E80F00 		stm	r4, {r0, r1, r2, r3}
 15134              	.LVL959:
 15135              	.LBB8658:
 15136              	.LBI8644:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 15137              		.loc 26 918 7 is_stmt 1 view .LVU3481
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 15138              		.loc 26 918 7 is_stmt 0 view .LVU3482
 15139              	.LBE8658:
 126:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 15140              		.loc 14 126 22 view .LVU3483
 15141 0394 0022     		movs	r2, #0
 15142 0396 10A9     		add	r1, sp, #64
 15143 0398 4648     		ldr	r0, .L680+4
 15144 039a FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 15145              	.LVL960:
 15146              	.LBB8659:
 15147              	.LBI8659:
 15148              		.loc 2 23 5 is_stmt 1 view .LVU3484
 15149              		.loc 2 23 5 is_stmt 0 view .LVU3485
 15150              	.LBE8659:
 127:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 15151              		.loc 14 127 5 is_stmt 1 view .LVU3486
 127:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 15152              		.loc 14 127 40 is_stmt 0 view .LVU3487
 15153 039e 0DF1400C 		add	ip, sp, #64
 127:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 15154              		.loc 14 127 23 view .LVU3488
 15155 03a2 B0EE480A 		vmov.f32	s0, s16
 15156              	.LBB8660:
 15157              	.LBB8661:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 15158              		.loc 26 919 50 view .LVU3489
 15159 03a6 D8E90023 		ldrd	r2, r3, [r8]
 15160 03aa 9B1A     		subs	r3, r3, r2
 15161 03ac DB10     		asrs	r3, r3, #3
 15162 03ae 07FB03F2 		mul	r2, r7, r3
 15163 03b2 00EE902A 		vmov	s1, r2	@ int
 15164              	.LBE8661:
 15165              	.LBE8660:
 127:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 15166              		.loc 14 127 40 view .LVU3490
 15167 03b6 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15168 03b8 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 15169 03bc 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 127:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 15170              		.loc 14 127 23 view .LVU3491
 15171 03c0 F8EE600A 		vcvt.f32.u32	s1, s1
 128:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 15172              		.loc 14 128 39 view .LVU3492
 15173 03c4 05F13006 		add	r6, r5, #48
 127:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 15174              		.loc 14 127 40 view .LVU3493
 15175 03c8 84E80F00 		stm	r4, {r0, r1, r2, r3}
 15176              	.LVL961:
 15177              	.LBB8662:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 547


 15178              	.LBI8660:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 15179              		.loc 26 918 7 is_stmt 1 view .LVU3494
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 15180              		.loc 26 918 7 is_stmt 0 view .LVU3495
 15181              	.LBE8662:
 127:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 15182              		.loc 14 127 23 view .LVU3496
 15183 03cc 0022     		movs	r2, #0
 15184 03ce 10A9     		add	r1, sp, #64
 15185 03d0 3948     		ldr	r0, .L680+8
 15186 03d2 FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 15187              	.LVL962:
 15188              	.LBB8663:
 15189              	.LBI8663:
 15190              		.loc 2 23 5 is_stmt 1 view .LVU3497
 15191              		.loc 2 23 5 is_stmt 0 view .LVU3498
 15192              	.LBE8663:
 128:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 15193              		.loc 14 128 5 is_stmt 1 view .LVU3499
 128:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 15194              		.loc 14 128 39 is_stmt 0 view .LVU3500
 15195 03d6 0DF1400C 		add	ip, sp, #64
 128:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 15196              		.loc 14 128 22 view .LVU3501
 15197 03da B0EE480A 		vmov.f32	s0, s16
 15198              	.LBB8664:
 15199              	.LBB8665:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 15200              		.loc 26 919 50 view .LVU3502
 15201 03de DAE90023 		ldrd	r2, r3, [r10]
 15202 03e2 9B1A     		subs	r3, r3, r2
 15203 03e4 DB10     		asrs	r3, r3, #3
 15204 03e6 07FB03F2 		mul	r2, r7, r3
 15205 03ea 00EE902A 		vmov	s1, r2	@ int
 15206              	.LBE8665:
 15207              	.LBE8664:
 128:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 15208              		.loc 14 128 39 view .LVU3503
 15209 03ee 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15210 03f0 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 15211 03f4 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 128:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 15212              		.loc 14 128 22 view .LVU3504
 15213 03f8 F8EE600A 		vcvt.f32.u32	s1, s1
 129:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 15214              		.loc 14 129 41 view .LVU3505
 15215 03fc 05F15006 		add	r6, r5, #80
 128:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 15216              		.loc 14 128 39 view .LVU3506
 15217 0400 84E80F00 		stm	r4, {r0, r1, r2, r3}
 15218              	.LVL963:
 15219              	.LBB8666:
 15220              	.LBI8664:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 15221              		.loc 26 918 7 is_stmt 1 view .LVU3507
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 548


 15222              		.loc 26 918 7 is_stmt 0 view .LVU3508
 15223              	.LBE8666:
 128:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 15224              		.loc 14 128 22 view .LVU3509
 15225 0404 0022     		movs	r2, #0
 15226 0406 10A9     		add	r1, sp, #64
 15227 0408 2C48     		ldr	r0, .L680+12
 15228 040a FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 15229              	.LVL964:
 15230              	.LBB8667:
 15231              	.LBI8667:
 15232              		.loc 2 23 5 is_stmt 1 view .LVU3510
 15233              		.loc 2 23 5 is_stmt 0 view .LVU3511
 15234              	.LBE8667:
 129:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 15235              		.loc 14 129 5 is_stmt 1 view .LVU3512
 129:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 15236              		.loc 14 129 24 is_stmt 0 view .LVU3513
 15237 040e B0EE480A 		vmov.f32	s0, s16
 15238              	.LBB8668:
 15239              	.LBB8669:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 15240              		.loc 26 919 50 view .LVU3514
 15241 0412 D9E90023 		ldrd	r2, r3, [r9]
 15242 0416 9B1A     		subs	r3, r3, r2
 15243 0418 DB10     		asrs	r3, r3, #3
 15244 041a 07FB03F2 		mul	r2, r7, r3
 15245              	.LBE8669:
 15246              	.LBE8668:
 129:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 15247              		.loc 14 129 41 view .LVU3515
 15248 041e 10AF     		add	r7, sp, #64
 15249              	.LBB8671:
 15250              	.LBB8670:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 15251              		.loc 26 919 50 view .LVU3516
 15252 0420 00EE902A 		vmov	s1, r2	@ int
 15253              	.LBE8670:
 15254              	.LBE8671:
 129:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 15255              		.loc 14 129 41 view .LVU3517
 15256 0424 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15257 0426 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 15258 0428 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 129:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 15259              		.loc 14 129 24 view .LVU3518
 15260 042c F8EE600A 		vcvt.f32.u32	s1, s1
 129:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 15261              		.loc 14 129 41 view .LVU3519
 15262 0430 84E80F00 		stm	r4, {r0, r1, r2, r3}
 15263              	.LVL965:
 15264              	.LBB8672:
 15265              	.LBI8668:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 15266              		.loc 26 918 7 is_stmt 1 view .LVU3520
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 15267              		.loc 26 918 7 is_stmt 0 view .LVU3521
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 549


 15268              	.LBE8672:
 129:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 15269              		.loc 14 129 24 view .LVU3522
 15270 0434 10A9     		add	r1, sp, #64
 15271 0436 0022     		movs	r2, #0
 15272 0438 2148     		ldr	r0, .L680+16
 15273 043a FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 15274              	.LVL966:
 15275              	.LBB8673:
 15276              	.LBI8673:
 15277              		.loc 2 23 5 is_stmt 1 view .LVU3523
 15278              		.loc 2 23 5 is_stmt 0 view .LVU3524
 15279              	.LBE8673:
 130:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 15280              		.loc 14 130 5 is_stmt 1 view .LVU3525
 130:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 15281              		.loc 14 130 62 is_stmt 0 view .LVU3526
 15282 043e 1D48     		ldr	r0, .L680+4
 15283 0440 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 15284              	.LVL967:
 130:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 15285              		.loc 14 130 25 view .LVU3527
 15286 0444 BDEEC00A 		vcvt.s32.f32	s0, s0
 130:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 15287              		.loc 14 130 23 view .LVU3528
 15288 0448 1E4B     		ldr	r3, .L680+20
 131:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 15289              		.loc 14 131 63 view .LVU3529
 15290 044a 1B48     		ldr	r0, .L680+8
 130:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 15291              		.loc 14 130 25 view .LVU3530
 15292 044c 83ED000A 		vstr.32	s0, [r3]	@ int
 131:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 15293              		.loc 14 131 5 is_stmt 1 view .LVU3531
 131:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 15294              		.loc 14 131 63 is_stmt 0 view .LVU3532
 15295 0450 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 15296              	.LVL968:
 131:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 15297              		.loc 14 131 25 view .LVU3533
 15298 0454 BDEEC00A 		vcvt.s32.f32	s0, s0
 131:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 15299              		.loc 14 131 23 view .LVU3534
 15300 0458 1B4B     		ldr	r3, .L680+24
 132:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 15301              		.loc 14 132 62 view .LVU3535
 15302 045a 1848     		ldr	r0, .L680+12
 131:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 15303              		.loc 14 131 25 view .LVU3536
 15304 045c 83ED000A 		vstr.32	s0, [r3]	@ int
 132:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 15305              		.loc 14 132 5 is_stmt 1 view .LVU3537
 132:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 15306              		.loc 14 132 62 is_stmt 0 view .LVU3538
 15307 0460 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 15308              	.LVL969:
 132:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 550


 15309              		.loc 14 132 25 view .LVU3539
 15310 0464 BDEEC00A 		vcvt.s32.f32	s0, s0
 132:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 15311              		.loc 14 132 23 view .LVU3540
 15312 0468 184B     		ldr	r3, .L680+28
 133:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 15313              		.loc 14 133 64 view .LVU3541
 15314 046a 1548     		ldr	r0, .L680+16
 132:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 15315              		.loc 14 132 25 view .LVU3542
 15316 046c 83ED000A 		vstr.32	s0, [r3]	@ int
 133:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 15317              		.loc 14 133 5 is_stmt 1 view .LVU3543
 133:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 15318              		.loc 14 133 64 is_stmt 0 view .LVU3544
 15319 0470 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 15320              	.LVL970:
 141:Jellybeans.cpp ****     debugString = myArp->chord->myString;
 15321              		.loc 14 141 26 view .LVU3545
 15322 0474 164B     		ldr	r3, .L680+32
 133:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 15323              		.loc 14 133 25 view .LVU3546
 15324 0476 BDEEC00A 		vcvt.s32.f32	s0, s0
 137:Jellybeans.cpp ****     trigOut     = false;
 15325              		.loc 14 137 17 view .LVU3547
 15326 047a 1648     		ldr	r0, .L680+36
 141:Jellybeans.cpp ****     debugString = myArp->chord->myString;
 15327              		.loc 14 141 26 view .LVU3548
 15328 047c 1A68     		ldr	r2, [r3]
 133:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 15329              		.loc 14 133 23 view .LVU3549
 15330 047e 164B     		ldr	r3, .L680+40
 15331              	.LBB8674:
 15332              	.LBB8675:
 15333              	.LBB8676:
1035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// and in C++11 mode.
1038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
1039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
1042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
1047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (const) reference to the character.
1048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
1051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
1052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
1053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n) const
1056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 551


1057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= this->size())
1058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
1060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
1061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
1062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
1063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
1068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
1069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
1072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
1073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
1074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n)
1077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= size())
1079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
1081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
1082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
1083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
1084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the first
1089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() noexcept
1093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
1096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() const noexcept
1104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
1107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the last
1111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 552


1114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() noexcept
1115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
1118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last element of the %string.
1123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() const noexcept
1126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
1129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Modifiers:
1133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
1135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const basic_string& __str)
1140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__str); }
1141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
1144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const _CharT* __s)
1149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__s); }
1150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a character.
1153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to append.
1154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(_CharT __c)
1158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->push_back(__c);
1160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
1166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(initializer_list<_CharT> __l)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 553


1171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
1177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator+=(const _Tp& __svt)
1183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->append(__svt); }
1184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
1188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str)
1193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a substring.
1197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function appends @a __n characters from @a __str
1204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  than the number of available characters in @a __str, the
1206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  remainder of @a __str is appended.
1207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos)
1210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_append(__str._M_data()
1211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C substring.
1216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s, size_type __n)
1222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_append(__s, __n);
1226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 554


1228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
1230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s)
1235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __n = traits_type::length(__s);
1238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_append(__s, __n);
1240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append multiple characters.
1244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
1246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends __n copies of __c to this string.
1249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(size_type __n, _CharT __c)
1252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
1257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(initializer_list<_CharT> __l)
1262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters.
1267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
1275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
1278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
1280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 555


1285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
1286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
1291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(const _Tp& __svt)
1292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
1293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           __sv_type __sv = __svt;
1294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->append(__sv.data(), __sv.size());
1295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
1296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos The position in the string_view to append from.
1301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
1306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_append(__sv.data()
1310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
1311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a single character.
1317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to append.
1318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       push_back(_CharT __c)
1321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
1323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__size + 1 > this->capacity())
1324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_set_length(__size + 1);
1327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
1331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
1332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str)
1336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
1339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
1340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
1341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 556


1342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
1343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		// Propagating allocator cannot free existing storage so must
1344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		// deallocate it before replacing current allocator.
1345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		if (__str.size() <= _S_local_capacity)
1346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
1347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_data(_M_local_data());
1349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_set_length(0);
1350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
1351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		else
1352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
1353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    const auto __len = __str.size();
1354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
1355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    // If this allocation throws there are no effects:
1356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
1357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_data(__ptr);
1359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_capacity(__len);
1360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_set_length(__len);
1361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
1362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
1363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
1364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
1365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_assign(__str);
 15334              		.loc 19 1366 17 view .LVU3550
 15335 0480 916D     		ldr	r1, [r2, #88]
 15336              	.LBE8676:
 15337              	.LBE8675:
 15338              	.LBE8674:
 136:Jellybeans.cpp ****     arpNoteDacOutput1 = 0.f;
 15339              		.loc 14 136 23 view .LVU3551
 15340 0482 164A     		ldr	r2, .L680+44
 133:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 15341              		.loc 14 133 25 view .LVU3552
 15342 0484 83ED000A 		vstr.32	s0, [r3]	@ int
 136:Jellybeans.cpp ****     arpNoteDacOutput1 = 0.f;
 15343              		.loc 14 136 5 is_stmt 1 view .LVU3553
 137:Jellybeans.cpp ****     trigOut     = false;
 15344              		.loc 14 137 17 is_stmt 0 view .LVU3554
 15345 0488 0023     		movs	r3, #0
 136:Jellybeans.cpp ****     arpNoteDacOutput1 = 0.f;
 15346              		.loc 14 136 23 view .LVU3555
 15347 048a 82ED008A 		vstr.32	s16, [r2]
 137:Jellybeans.cpp ****     trigOut     = false;
 15348              		.loc 14 137 5 is_stmt 1 view .LVU3556
 138:Jellybeans.cpp ****     menuPos     = 0;
 15349              		.loc 14 138 17 is_stmt 0 view .LVU3557
 15350 048e 144A     		ldr	r2, .L680+48
 137:Jellybeans.cpp ****     trigOut     = false;
 15351              		.loc 14 137 17 view .LVU3558
 15352 0490 0370     		strb	r3, [r0]
 138:Jellybeans.cpp ****     menuPos     = 0;
 15353              		.loc 14 138 5 is_stmt 1 view .LVU3559
 138:Jellybeans.cpp ****     menuPos     = 0;
 15354              		.loc 14 138 17 is_stmt 0 view .LVU3560
 15355 0492 1360     		str	r3, [r2]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 557


 139:Jellybeans.cpp ****     isEditing   = false;
 15356              		.loc 14 139 5 is_stmt 1 view .LVU3561
 139:Jellybeans.cpp ****     isEditing   = false;
 15357              		.loc 14 139 17 is_stmt 0 view .LVU3562
 15358 0494 134A     		ldr	r2, .L680+52
 15359              	.LBB8681:
 15360              	.LBB8679:
 15361              	.LBB8677:
 15362              		.loc 19 1366 17 view .LVU3563
 15363 0496 1448     		ldr	r0, .L680+56
 15364              	.LBE8677:
 15365              	.LBE8679:
 15366              	.LBE8681:
 139:Jellybeans.cpp ****     isEditing   = false;
 15367              		.loc 14 139 17 view .LVU3564
 15368 0498 1370     		strb	r3, [r2]
 141:Jellybeans.cpp ****     debugString = myArp->chord->myString;
 15369              		.loc 14 141 5 is_stmt 1 view .LVU3565
 15370              	.LVL971:
 15371              	.LBB8682:
 15372              	.LBI8674:
 665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15373              		.loc 19 665 7 view .LVU3566
 15374              	.LBB8680:
 15375              	.LBI8675:
1335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15376              		.loc 19 1335 7 view .LVU3567
 15377              	.LBB8678:
 15378              		.loc 19 1366 17 is_stmt 0 view .LVU3568
 15379 049a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
 15380              	.LVL972:
 15381              		.loc 19 1366 17 view .LVU3569
 15382              	.LBE8678:
 15383              	.LBE8680:
 15384              	.LBE8682:
 143:Jellybeans.cpp ****     patch.StartAdc();
 15385              		.loc 14 143 5 is_stmt 1 view .LVU3570
 143:Jellybeans.cpp ****     patch.StartAdc();
 15386              		.loc 14 143 19 is_stmt 0 view .LVU3571
 15387 049e A5F16800 		sub	r0, r5, #104
 15388 04a2 FFF7FEFF 		bl	_ZN5daisy10DaisyPatch8StartAdcEv
 15389              	.LVL973:
 15390              	.L675:
 146:Jellybeans.cpp ****     while(1){
 15391              		.loc 14 146 5 is_stmt 1 discriminator 1 view .LVU3572
 147:Jellybeans.cpp ****         UpdateControls();
 15392              		.loc 14 147 9 discriminator 1 view .LVU3573
 147:Jellybeans.cpp ****         UpdateControls();
 15393              		.loc 14 147 23 is_stmt 0 discriminator 1 view .LVU3574
 15394 04a6 FFF7FEFF 		bl	_Z14UpdateControlsv
 15395              	.LVL974:
 148:Jellybeans.cpp ****         UpdateOled();
 15396              		.loc 14 148 9 is_stmt 1 discriminator 1 view .LVU3575
 148:Jellybeans.cpp ****         UpdateOled();
 15397              		.loc 14 148 19 is_stmt 0 discriminator 1 view .LVU3576
 15398 04aa FFF7FEFF 		bl	_Z10UpdateOledv
 15399              	.LVL975:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 558


 146:Jellybeans.cpp ****     while(1){
 15400              		.loc 14 146 5 is_stmt 1 discriminator 1 view .LVU3577
 15401 04ae FAE7     		b	.L675
 15402              	.L681:
 15403              		.align	2
 15404              	.L680:
 15405 04b0 58000000 		.word	patch+88
 15406 04b4 00000000 		.word	.LANCHOR0
 15407 04b8 00000000 		.word	.LANCHOR3
 15408 04bc 00000000 		.word	.LANCHOR5
 15409 04c0 00000000 		.word	.LANCHOR7
 15410 04c4 00000000 		.word	.LANCHOR1
 15411 04c8 00000000 		.word	.LANCHOR4
 15412 04cc 00000000 		.word	.LANCHOR6
 15413 04d0 00000000 		.word	.LANCHOR13
 15414 04d4 00000000 		.word	.LANCHOR23
 15415 04d8 00000000 		.word	.LANCHOR8
 15416 04dc 00000000 		.word	.LANCHOR22
 15417 04e0 00000000 		.word	.LANCHOR10
 15418 04e4 00000000 		.word	.LANCHOR9
 15419 04e8 00000000 		.word	.LANCHOR12
 15420              		.cfi_endproc
 15421              	.LFE5112:
 15423              		.section	.text._ZNSt12_Vector_baseIiSaIiEED2Ev,"axG",%progbits,_ZNSt12_Vector_baseIiSaIiEED5Ev,com
 15424              		.align	1
 15425              		.p2align 2,,3
 15426              		.weak	_ZNSt12_Vector_baseIiSaIiEED2Ev
 15427              		.syntax unified
 15428              		.thumb
 15429              		.thumb_func
 15430              		.fpu fpv5-d16
 15432              	_ZNSt12_Vector_baseIiSaIiEED2Ev:
 15433              	.LVL976:
 15434              	.LFB5695:
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 15435              		.loc 26 333 7 view -0
 15436              		.cfi_startproc
 15437              		@ args = 0, pretend = 0, frame = 0
 15438              		@ frame_needed = 0, uses_anonymous_args = 0
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 15439              		.loc 26 333 7 is_stmt 0 view .LVU3579
 15440 0000 10B5     		push	{r4, lr}
 15441              		.cfi_def_cfa_offset 8
 15442              		.cfi_offset 4, -8
 15443              		.cfi_offset 14, -4
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 15444              		.loc 26 333 7 view .LVU3580
 15445 0002 0446     		mov	r4, r0
 15446              	.LBB8683:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 15447              		.loc 26 335 15 view .LVU3581
 15448 0004 0068     		ldr	r0, [r0]
 15449              	.LVL977:
 15450              	.LBB8684:
 15451              	.LBI8684:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 15452              		.loc 26 350 7 is_stmt 1 view .LVU3582
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 559


 15453              	.LBB8685:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 15454              		.loc 26 353 2 is_stmt 0 view .LVU3583
 15455 0006 18B1     		cbz	r0, .L683
 15456              	.LVL978:
 15457              	.LBB8686:
 15458              	.LBI8686:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 15459              		.loc 25 491 7 is_stmt 1 view .LVU3584
 15460              	.LBB8687:
 15461              	.LBB8688:
 15462              	.LBI8688:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 15463              		.loc 22 120 7 view .LVU3585
 15464              	.LBE8688:
 15465              	.LBE8687:
 15466              	.LBE8686:
 15467              	.LBE8685:
 15468              	.LBE8684:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 15469              		.loc 26 336 35 is_stmt 0 view .LVU3586
 15470 0008 A168     		ldr	r1, [r4, #8]
 15471              	.LBB8694:
 15472              	.LBB8693:
 15473              	.LBB8692:
 15474              	.LBB8691:
 15475              	.LBB8690:
 15476              	.LBB8689:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 15477              		.loc 22 133 19 view .LVU3587
 15478 000a 091A     		subs	r1, r1, r0
 15479 000c FFF7FEFF 		bl	_ZdlPvj
 15480              	.LVL979:
 15481              	.L683:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 15482              		.loc 22 133 19 view .LVU3588
 15483              	.LBE8689:
 15484              	.LBE8690:
 15485              	.LBE8691:
 15486              	.LBE8692:
 15487              	.LBE8693:
 15488              	.LBE8694:
 15489              	.LBB8695:
 15490              	.LBI8695:
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 15491              		.loc 26 128 14 is_stmt 1 view .LVU3589
 15492              	.LBB8696:
 15493              	.LBI8696:
 15494              		.loc 21 162 7 view .LVU3590
 15495              	.LBB8697:
 15496              	.LBI8697:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15497              		.loc 22 89 7 view .LVU3591
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15498              		.loc 22 89 7 is_stmt 0 view .LVU3592
 15499              	.LBE8697:
 15500              	.LBE8696:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 560


 15501              	.LBE8695:
 15502              	.LBE8683:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 15503              		.loc 26 337 7 view .LVU3593
 15504 0010 2046     		mov	r0, r4
 15505 0012 10BD     		pop	{r4, pc}
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 15506              		.loc 26 337 7 view .LVU3594
 15507              		.cfi_endproc
 15508              	.LFE5695:
 15510              		.weak	_ZNSt12_Vector_baseIiSaIiEED1Ev
 15511              		.thumb_set _ZNSt12_Vector_baseIiSaIiEED1Ev,_ZNSt12_Vector_baseIiSaIiEED2Ev
 15512              		.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6v
 15513              		.align	1
 15514              		.p2align 2,,3
 15515              		.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSa
 15516              		.syntax unified
 15517              		.thumb
 15518              		.thumb_func
 15519              		.fpu fpv5-d16
 15521              	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt
 15522              	.LVL980:
 15523              	.LFB6057:
1925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      _Compare, _Alloc>::iterator
1930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_lower_bound(_Link_type __x, _Base_ptr __y,
1932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		   const _Key& __k)
1933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
1935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
1936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = _S_right(__x);
1939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return iterator(__y);
1940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      _Compare, _Alloc>::const_iterator
1946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
1948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		   const _Key& __k) const
1949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
1951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
1952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = _S_right(__x);
1955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return const_iterator(__y);
1956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 561


1959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      _Compare, _Alloc>::iterator
1962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_upper_bound(_Link_type __x, _Base_ptr __y,
1964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		   const _Key& __k)
1965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
1967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (_M_impl._M_key_compare(__k, _S_key(__x)))
1968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = _S_right(__x);
1971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return iterator(__y);
1972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      _Compare, _Alloc>::const_iterator
1978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_upper_bound(_Const_Link_type __x, _Const_Base_ptr __y,
1980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		   const _Key& __k) const
1981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
1983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (_M_impl._M_key_compare(__k, _S_key(__x)))
1984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = _S_right(__x);
1987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return const_iterator(__y);
1988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
1993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::iterator,
1994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
1995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::iterator>
1996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     equal_range(const _Key& __k)
1998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type __x = _M_begin();
2000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr __y = _M_end();
2001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
2002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (_M_impl._M_key_compare(_S_key(__x), __k))
2004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __x = _S_right(__x);
2005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
2006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __y = __x, __x = _S_left(__x);
2007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
2009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _Link_type __xu(__x);
2010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _Base_ptr __yu(__y);
2011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __y = __x, __x = _S_left(__x);
2012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __xu = _S_right(__xu);
2013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      return pair<iterator,
2014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			  iterator>(_M_lower_bound(__x, __y, __k),
2015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				    _M_upper_bound(__xu, __yu, __k));
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 562


2016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
2017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return pair<iterator, iterator>(iterator(__y),
2019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				      iterator(__y));
2020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::const_iterator,
2026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
2027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::const_iterator>
2028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     equal_range(const _Key& __k) const
2030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Link_type __x = _M_begin();
2032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Base_ptr __y = _M_end();
2033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
2034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (_M_impl._M_key_compare(_S_key(__x), __k))
2036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __x = _S_right(__x);
2037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
2038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __y = __x, __x = _S_left(__x);
2039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
2041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _Const_Link_type __xu(__x);
2042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _Const_Base_ptr __yu(__y);
2043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __y = __x, __x = _S_left(__x);
2044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __xu = _S_right(__xu);
2045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      return pair<const_iterator,
2046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			  const_iterator>(_M_lower_bound(__x, __y, __k),
2047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 					  _M_upper_bound(__xu, __yu, __k));
2048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
2049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return pair<const_iterator, const_iterator>(const_iterator(__y),
2051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 						  const_iterator(__y));
2052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
2057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     swap(_Rb_tree& __t)
2059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Compare>::value)
2060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (_M_root() == 0)
2062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__t._M_root() != 0)
2064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_impl._M_move_data(__t._M_impl);
2065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else if (__t._M_root() == 0)
2067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__t._M_impl._M_move_data(_M_impl);
2068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else
2069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  std::swap(_M_root(),__t._M_root());
2071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  std::swap(_M_leftmost(),__t._M_leftmost());
2072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  std::swap(_M_rightmost(),__t._M_rightmost());
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 563


2073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_root()->_M_parent = _M_end();
2075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __t._M_root()->_M_parent = __t._M_end();
2076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  std::swap(this->_M_impl._M_node_count, __t._M_impl._M_node_count);
2077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // No need to swap header's color as it does not change.
2079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       std::swap(this->_M_impl._M_key_compare, __t._M_impl._M_key_compare);
2080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Alloc_traits::_S_on_swap(_M_get_Node_allocator(),
2082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				__t._M_get_Node_allocator());
2083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
2089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
2090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
2091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 15524              		.loc 29 2091 5 is_stmt 1 view -0
 15525              		.cfi_startproc
 15526              		@ args = 0, pretend = 0, frame = 8
 15527              		@ frame_needed = 0, uses_anonymous_args = 0
 15528              		.loc 29 2091 5 is_stmt 0 view .LVU3596
 15529 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 15530              		.cfi_def_cfa_offset 36
 15531              		.cfi_offset 4, -36
 15532              		.cfi_offset 5, -32
 15533              		.cfi_offset 6, -28
 15534              		.cfi_offset 7, -24
 15535              		.cfi_offset 8, -20
 15536              		.cfi_offset 9, -16
 15537              		.cfi_offset 10, -12
 15538              		.cfi_offset 11, -8
 15539              		.cfi_offset 14, -4
 15540              	.LBB8773:
 15541              	.LBB8774:
 749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 15542              		.loc 29 749 73 view .LVU3597
 15543 0004 8C68     		ldr	r4, [r1, #8]
 15544              	.LBE8774:
 15545              	.LBE8773:
 15546              		.loc 29 2091 5 view .LVU3598
 15547 0006 83B0     		sub	sp, sp, #12
 15548              		.cfi_def_cfa_offset 48
 15549              		.loc 29 2091 5 view .LVU3599
 15550 0008 8B46     		mov	fp, r1
 15551 000a 8146     		mov	r9, r0
 15552              	.LVL981:
 15553              	.LBB8775:
 15554              	.LBI8773:
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 15555              		.loc 29 748 7 is_stmt 1 view .LVU3600
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 15556              		.loc 29 748 7 is_stmt 0 view .LVU3601
 15557              	.LBE8775:
 15558              	.LBB8776:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 564


 15559              	.LBI8776:
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 15560              		.loc 29 759 7 is_stmt 1 view .LVU3602
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 15561              		.loc 29 759 7 is_stmt 0 view .LVU3603
 15562              	.LBE8776:
2092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_get_insert_unique_pos(const key_type& __k)
2093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
2095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type __x = _M_begin();
2096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr __y = _M_end();
2097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       bool __comp = true;
2098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
 15563              		.loc 29 2098 18 is_stmt 1 view .LVU3604
2091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_get_insert_unique_pos(const key_type& __k)
 15564              		.loc 29 2091 5 is_stmt 0 view .LVU3605
 15565 000c 0192     		str	r2, [sp, #4]
 15566              		.loc 29 2098 18 view .LVU3606
 15567 000e 002C     		cmp	r4, #0
 15568 0010 36D0     		beq	.L712
 15569 0012 019B     		ldr	r3, [sp, #4]
 15570 0014 D3F800A0 		ldr	r10, [r3]
 15571 0018 D3F80480 		ldr	r8, [r3, #4]
 15572 001c 00E0     		b	.L691
 15573              	.LVL982:
 15574              	.L710:
 15575              		.loc 29 2098 18 view .LVU3607
 15576 001e 1446     		mov	r4, r2
 15577              	.LVL983:
 15578              	.L691:
 15579              	.LBB8778:
 15580              	.LBI8778:
 15581              		.file 40 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Functor implementations -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 565


  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Copyright (c) 1996-1998
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** /** @file bits/stl_function.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *  Do not attempt to use it directly. @headername{functional}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #ifndef _STL_FUNCTION_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #define _STL_FUNCTION_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #include <bits/move.h>
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** {
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.1 base classes
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup functors Function Objects
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup utilities
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Function objects, or @e functors, are objects with an @c operator()
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  defined and accessible.  They can be passed as arguments to algorithm
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  templates and used in place of a function pointer.  Not only is the
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  resulting expressiveness of the library increased, but the generated
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  code can be more efficient than what you might write by hand.  When we
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  refer to @a functors, then, generally we include function pointers in
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  the description as well.
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Often, functors are only created as temporaries passed to algorithm
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  calls, rather than being created as named variables.
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 566


  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Two examples taken from the standard itself follow.  To perform a
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  by-element addition of two vectors @c a and @c b containing @c double,
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  and put the result in @c a, use
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \code
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  transform (a.begin(), a.end(), b.begin(), a.begin(), plus<double>());
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \endcode
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  To negate every element in @c a, use
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \code
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  transform(a.begin(), a.end(), a.begin(), negate<double>());
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \endcode
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The addition and negation functions will be inlined directly.
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The standard functors are derived from structs named @c unary_function
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  and @c binary_function.  These two classes contain nothing but typedefs,
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  to aid in generic (template) programming.  If you write your own
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  functors, you might consider doing the same.
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /**
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  This is one of the @link functors functor base classes@endlink.
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Arg, typename _Result>
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct unary_function
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c argument_type is the type of the argument
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg 	argument_type;   
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c result_type is the return type
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Result 	result_type;  
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /**
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  This is one of the @link functors functor base classes@endlink.
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Arg1, typename _Arg2, typename _Result>
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct binary_function
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c first_argument_type is the type of the first argument
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg1 	first_argument_type; 
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c second_argument_type is the type of the second argument
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg2 	second_argument_type;
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c result_type is the return type
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Result 	result_type;
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @}  */
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.2 arithmetic
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup arithmetic_functors Arithmetic Classes
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup functors
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Because basic math often needs to be done during an algorithm,
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  the library provides functors for those operations.  See the
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  documentation for @link functors the base classes@endlink
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  for examples of their use.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 567


 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   struct __is_transparent;  // undefined
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus;
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus;
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies;
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides;
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus;
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate;
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus : public binary_function<_Tp, _Tp, _Tp>
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x + __y; }
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus : public binary_function<_Tp, _Tp, _Tp>
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x - __y; }
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies : public binary_function<_Tp, _Tp, _Tp>
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x * __y; }
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 568


 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides : public binary_function<_Tp, _Tp, _Tp>
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x / __y; }
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus : public binary_function<_Tp, _Tp, _Tp>
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x % __y; }
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate : public unary_function<_Tp, _Tp>
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x) const
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return -__x; }
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #define __cpp_lib_transparent_operators 201510
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus<void>
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) + std::forward<_Up>(__u)))
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) + std::forward<_Up>(__u))
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) + std::forward<_Up>(__u); }
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus<void>
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) - std::forward<_Up>(__u)))
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) - std::forward<_Up>(__u))
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 569


 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) - std::forward<_Up>(__u); }
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies<void>
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) * std::forward<_Up>(__u)))
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) * std::forward<_Up>(__u))
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) * std::forward<_Up>(__u); }
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides<void>
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) / std::forward<_Up>(__u)))
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) / std::forward<_Up>(__u))
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) / std::forward<_Up>(__u); }
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus<void>
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) % std::forward<_Up>(__u)))
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) % std::forward<_Up>(__u))
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) % std::forward<_Up>(__u); }
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate<void>
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp>
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 570


 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t) const
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(-std::forward<_Tp>(__t)))
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(-std::forward<_Tp>(__t))
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return -std::forward<_Tp>(__t); }
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @}  */
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.3 comparisons
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup comparison_functors Comparison Classes
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup functors
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The library provides six wrapper functors for all the basic comparisons
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  in C++, like @c <.
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct equal_to;
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct not_equal_to;
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct greater;
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct less;
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct greater_equal;
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct less_equal;
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct equal_to : public binary_function<_Tp, _Tp, bool>
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       bool
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x == __y; }
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct not_equal_to : public binary_function<_Tp, _Tp, bool>
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       bool
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x != __y; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 571


 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct greater : public binary_function<_Tp, _Tp, bool>
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       bool
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x > __y; }
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct less : public binary_function<_Tp, _Tp, bool>
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       bool
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 15582              		.loc 40 385 7 is_stmt 1 view .LVU3608
 15583              	.LBB8779:
 15584              	.LBI8779:
1367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
1373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
1374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
1378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(basic_string&& __str)
1381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this = std::move(__str);
1386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a substring of a string.
1391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to use.
1392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str.
1393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
1394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the substring of @a __str
1398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is larger than the number of available characters in @a
1400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, the remainder of @a __str is used.
1401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 572


1402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
1404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a C substring.
1410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
1411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
1412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the first @a __n
1415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s, size_type __n)
1420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of a C string.
1427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
1428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function returns.
1433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s)
1436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
1439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
1440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to multiple characters.
1444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Length of the resulting string.
1445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
1446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character @a __c.
1450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(size_type __n, _CharT __c)
1453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a range of characters.
1457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 573


1459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
1465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
1468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
1470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(initializer_list<_CharT> __l)
1481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a string_view.
1487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	assign(const _Tp& __svt)
1493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
1496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
1500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
1502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to assign.
1503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
1508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_replace(size_type(0), this->size(),
1511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
1512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
1513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 574


1516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *              insert at.
1522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __p - begin();
1538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->replace(__p, __p, __n, __c);
1539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(this->_M_data() + __pos);
1540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
1563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *              insert at.
1565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __beg  Start of range.
1566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __end  End of range.
1567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 575


1573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
1574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
1576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	iterator
1578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
1580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __pos = __p - begin();
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
1588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __beg  Start of range.
1590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __end  End of range.
1591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
1599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
1600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(const_iterator __p, initializer_list<_CharT> __l)
1613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
1614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
1616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // See PR libstdc++/83328
1617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert value of a string.
1628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1 Position in string to insert at.
1629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to insert.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 576


1630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, size_type(0),
1641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_data(), __str.size()); }
1642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a substring.
1645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
1646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str   The string to insert.
1647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
1649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos2 > @a str.size().
1653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     size_type __pos2, size_type __n = npos)
1664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C substring.
1670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
1671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
1672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to insert.
1673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  doesn't change if an error is thrown.
1683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 577


1687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C string.
1690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
1691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
1692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
1702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     traits_type::length(__s));
1709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index in string to insert at.
1714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      size_type(0), __n, __c); }
1731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert one character.
1734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 578


1744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __p - begin();
1750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
1752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
1757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
1758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
1759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
1764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
1767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
1771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
1772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
1773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to insert.
1775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	insert(size_type __pos1, const _Tp& __svt,
1780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       size_type __pos2, size_type __n = npos)
1781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, size_type(0),
1784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
1785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
1786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
1787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove characters.
1792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 579


1801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check(__pos, "basic_string::erase");
1809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == npos)
1810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_set_length(__pos);
1811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__n != 0)
1812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_erase(__pos, _M_limit(__pos, __n));
1813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove one character.
1818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  iterator referencing same location after removal.
1820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the character at @a __position from this string. The value
1822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  of the string doesn't change if an error is thrown.
1823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(__const_iterator __position)
1826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __position < end());
1829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __position - begin();
1830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
1832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove a range of characters.
1836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __last <= end());
1848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         const size_type __pos = __first - begin();
1849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__last == end())
1850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_set_length(__pos);
1851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
1852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_erase(__pos, __last - __first);
1853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(this->_M_data() + __pos);
1854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 580


1858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove the last character.
1859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The string must be non-empty.
1861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pop_back() noexcept
1864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_erase(size() - 1, 1);
1867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
1872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to be replaced.
1874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
1875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  error is thrown.
1886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
1893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character to replace.
1894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
1896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from str to use.
1898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.size().
1901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string doesn't change if an error is thrown.
1908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
1912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 581


1915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
1921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
1933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2)
1937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C string.
1945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
1948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with multiple characters.
1968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters to insert.
1971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 582


1972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
1982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string.
1990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String value to insert.
1993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
1999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string doesn't change if an error is thrown.
2000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string& __str)
2004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
2005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C substring.
2008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
2011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to insert.
2012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
2017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
2019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
2020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __s, size_type __n)
2024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
2028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 583


2029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C string.
2032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
2035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
2040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
2045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
2048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with multiple characters
2052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
2055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
2056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
2061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
2066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _CharT __c)
2067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
2071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with range.
2075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
2078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
2079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 584


2086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
2087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
2089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
2090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
2091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
2092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
2093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
2095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   && __i2 <= end());
2097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
2099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					   std::__false_type());
2100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
2102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
2103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
2104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
2105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
2106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
2107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
2108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(iterator __i1, iterator __i2,
2109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
2111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   && __i2 <= end());
2113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
2115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
2116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
2118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Specializations for the common case of pointer and iterator:
2120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
2121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
2124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
2130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
2135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
2141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 585


2143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      iterator __k1, iterator __k2)
2146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
2152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
2157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
2163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
2166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
2168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
2171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
2178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
2179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
2181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    initializer_list<_CharT> __l)
2182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.size()); }
2183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
2184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
2188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position to replace at.
2189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to replace.
2190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
2191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
2195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
2196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
2199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 586


2200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
2203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  The position to replace at.
2204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1    The number of characters to replace.
2205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
2207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2    The number of characters to insert.
2208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
2212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(size_type __pos1, size_type __n1, const _Tp& __svt,
2213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
2214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, __n1,
2217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
2218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
2219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
2220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
2224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1    An iterator referencing the start position
2225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           to replace at.
2226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2    An iterator referencing the end position
2227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           for the replace.
2228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
2233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
2234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
2237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
2241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Integer>
2242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
2243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
2245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
2246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
2248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
2249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
2251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    __false_type);
2252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
2255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     _CharT __c);
2256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 587


2257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
2259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 const size_type __len2);
2260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
2263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
2265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy substring into C string.
2268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to copy value into.
2269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to copy.
2270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to copy.
2271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Number of characters actually copied
2272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
2275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
2276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.
2277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
2280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Swap contents with another string.
2283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String to swap with.
2284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
2286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  time.
2287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
2289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
2290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // String operations:
2292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
2294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
2296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  happen.
2297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
2299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
2300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
2301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to contents.
2304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
2306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
2307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
2308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
2309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
2311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
2312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
2313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 588


2314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return non-const pointer to contents.
2317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to the character sequence held by the string.
2319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Modifying the characters in the sequence is allowed.
2320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
2322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() noexcept
2323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
2324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
2325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
2328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type
2330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
2331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_get_allocator(); }
2332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C substring.
2335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
2338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
2341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
2343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
2347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string.
2351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
2352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
2356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
2357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns npos.
2358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
2361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
2363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string_view.
2367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 589


2371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
2374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
2378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C string.
2383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
2388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s within this string.  If found, returns the index where
2389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
2390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
2396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
2400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
2405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
2410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string.
2413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
2414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
2418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str within this string.  If found, returns the index where
2419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
2420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
2423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
2425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 590


2428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string_view.
2429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
2436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
2440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C substring.
2445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
2451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
2453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
2457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C string.
2461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of  last occurrence.
2464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s within this string.  If found, returns the index
2467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it begins.  If not found, returns npos.
2468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
2478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 591


2485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of string.
2491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
2492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
2497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of a string_view.
2508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
2510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
2516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
2520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C substring.
2525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
2526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
2533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
2534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
2537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C string.
2541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 592


2542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
2559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index
2565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it was found.  If not found, returns npos.
2566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__c, __pos); }
2572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
2575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
2576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
2581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
2592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
2594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 593


2599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
2600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
2604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C substring.
2609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
2610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
2617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
2618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
2621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C string.
2625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
2626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
2643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__c, __pos); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 594


2656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in string.
2659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
2660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  was found.  If not found, returns npos.
2666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in a string_view.
2675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  A object convertible to string_view containing
2676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
2677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
2683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
2687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C substring.
2692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
2705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C string.
2708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 595


2713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a different character.
2726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
2727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  index where it was found.  If not found, returns npos.
2733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in string.
2740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
2741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __str within this string.  If found,
2746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
2757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
2759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
2765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
2769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 596


2770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to consider.
2777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
2783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
2787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C string.
2789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __s within this string.  If found,
2795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a different character.
2808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
2809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Get a substring.
2822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character (default 0).
2823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  The new string.
2825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 597


2827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Construct and return a new string using the @a __n
2828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string
2833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return basic_string(*this,
2835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string.
2839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  size() and str.size().  The function then compares the two
2847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
2850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const basic_string& __str) const
2853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
2855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __osize = __str.size();
2856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!__r)
2860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
2861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __r;
2862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
2867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
2868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
2872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(const _Tp& __svt) const
2873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __size = this->size();
2877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __osize = __sv.size();
2878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
2879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
2881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (!__r)
2882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __r = _S_compare(__size, __osize);
2883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __r;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 598


2884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
2888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
2889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to compare.
2890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                against.
2892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
2896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
2897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
2901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
2905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
2906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  The number of characters to compare.
2907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                against.
2909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
2910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  The number of characters to compare.
2911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
2915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
2916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
2917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this)
2921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
2922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a string.
2927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
2928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring.
2929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n characters
2933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to compare as the smallest of the length of the substring
2938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  and @a __str.size().  The function then compares the two
2939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling
2940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 599


2941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the shorter one is ordered first.
2943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a substring.
2949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character of substring.
2950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
2951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
2957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substrings.  The function then compares the two strings by
2965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  calling
2966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
2969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
2973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a C string.
2976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
2977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of size() and the length of a string
2983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  ordered first.
2987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
2990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 5 String::compare specification questionable
2993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a C string.
2995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
2996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
2997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 600


2998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
3001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
3002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
3003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
3004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
3005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of the length of the substring and
3006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of a string constructed from @a __s.  The
3007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two string by calling
3008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
3009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
3011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
3012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
3013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
3014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring against a character %array.
3017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
3018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
3019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  character %array to compare against.
3020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters of s.
3021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
3024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
3025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
3026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  if this substring is ordered before the string from @a __s,
3027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
3028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
3029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  effective length rlen of the strings to compare as the
3030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
3031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two strings by calling
3032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
3033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
3035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
3037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  no special meaning.
3038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
3039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
3040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
3041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2) const;
3042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus > 201703L
3044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(_CharT __x) const noexcept
3050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(const _CharT* __x) const noexcept
3054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 601


3055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(_CharT __x) const noexcept
3062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(const _CharT* __x) const noexcept
3066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++20
3068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allow basic_stringbuf::__xfer_bufptrs to call _M_length:
3070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename, typename, typename> friend class basic_stringbuf;
3071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     };
3072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
3073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
3074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // Reference-counted COW string implentation
3075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
3077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @class basic_string basic_string.h <string>
3078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
3079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup strings
3081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup sequences
3082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _CharT  Type of character
3084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
3085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                   char_traits<_CharT>.
3086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
3087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
3089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
3090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
3091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
3092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
3093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @doctodo
3095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Documentation?  What's that?
3098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
3099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  A string looks like this:
3101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @code
3103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                                        [_Rep]
3104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                                        _M_length
3105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
3106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *   _M_dataplus                          _M_refcount
3107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
3108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @endcode
3109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Where the _M_p points to the first character in the string, and
3111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 602


3112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  pointer to the header.
3113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  This approach has the enormous advantage that a string object
3115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
3116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  within a single %pair of inline functions, which each compile to
3117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
3118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
3119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
3120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  object at the front.
3121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
3123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  not the _Rep is so that the debugger can see the string
3124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
3125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
3126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  string length.)
3127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
3129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
3130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  static constructors have run.  The reference-count encoding is
3131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
3132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  destroy the empty-string _Rep object.
3133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  All but the last paragraph is considered pretty conventional
3135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  for a C++ string implementation.
3136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   */
3137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // 21.3  Template class basic_string
3138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     class basic_string
3140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
3141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
3142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rebind<_CharT>::other _CharT_alloc_type;
3143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_CharT_alloc_type> _CharT_alloc_traits;
3144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Types:
3146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Traits					    traits_type;
3148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Traits::char_type		    value_type;
3149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Alloc					    allocator_type;
3150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
3151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
3152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
3153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
3154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
3155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef value_type&				    reference;
3157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef const value_type&				    const_reference;
3158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_traits::pointer	    pointer;
3160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_traits::const_pointer   const_pointer;
3161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
3162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
3163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****                                                             const_iterator;
3164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
3165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
3166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     protected:
3168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // type used for positions in insert, erase etc.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 603


3169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef iterator __const_iterator;
3170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
3172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _Rep: string representation
3173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   Invariants:
3174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
3175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      must be kept null-terminated.
3176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   2. _M_capacity >= _M_length
3177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
3178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   3. _M_refcount has three states:
3179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
3180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //       0: one reference, non-const.
3181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
3182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
3183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
3184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      empty string representation needs no constructor.
3185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Rep_base
3187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type		_M_length;
3189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type		_M_capacity;
3190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Atomic_word		_M_refcount;
3191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Rep : _Rep_base
3194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Types:
3196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
3197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  rebind<char>::other _Raw_bytes_alloc;
3198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// (Public) Data members:
3200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// The maximum number of individual char_type elements of an
3202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// individual string is determined by _S_max_size. This is the
3203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
3204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
3205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
3206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
3207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// look like this:
3208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
3209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Solving for m:
3210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
3211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// In addition, this implementation quarters this amount.
3212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	static const size_type	_S_max_size;
3213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	static const _CharT	_S_terminal;
3214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
3216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // (carefully) in an empty string with one reference.
3217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static size_type _S_empty_rep_storage[];
3218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _Rep&
3220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
3221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { 
3222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
3223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
3224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  // be reasonably safe in this case.
3225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 604


3226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
3227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         bool
3230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
3231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
3232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if defined(__GTHREADS)
3233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // so we need to use an atomic load. However, _M_is_leaked
3235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // predicate does not change concurrently (i.e. the string is either
3236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // leaked or not), so a relaxed load is enough.
3237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;
3238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->_M_refcount < 0;
3240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
3242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         bool
3244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
3245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if defined(__GTHREADS)
3247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // so we need to use an atomic load. Another thread can drop last
3249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // but one reference concurrently with this check, so we need this
3250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // load to be acquire to synchronize with release fetch_and_add in
3251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // _M_dispose.
3252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_ACQUIRE) > 0;
3253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->_M_refcount > 0;
3255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
3257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
3259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
3260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->_M_refcount = -1; }
3261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
3263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
3264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->_M_refcount = 0; }
3265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	void
3267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
3268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    {
3273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_M_set_sharable();  // One reference.
3274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_M_length = __n;
3275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
3276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      // grrr. (per 21.3.4)
3277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
3278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    }
3279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_refdata() throw()
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 605


3283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
3284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
3287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
3289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
3290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Create & Destroy
3293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	static _Rep*
3294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
3295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	void
3297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
3298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    {
3303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
3304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
3305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // Decrement of _M_refcount is acq_rel, because:
3306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // - all but last decrements need to release to synchronize with
3307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   the last decrement that will delete the object.
3308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // - the last decrement needs to acquire to synchronize with
3309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   all the previous decrements.
3310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // - last but one decrement needs to release to synchronize with
3311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   the acquire load in _M_is_shared that will conclude that
3312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   the object is not shared anymore.
3313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
3314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 							 -1) <= 0)
3315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		{
3316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
3317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_destroy(__a);
3318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		}
3319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    }
3320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}  // XXX MT
3321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	void
3323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_destroy(const _Alloc&) throw();
3324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_refcopy() throw()
3327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
3332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_refdata();
3333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}  // XXX MT
3334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
3337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 606


3340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Alloc_hider : _Alloc
3341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
3343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
3344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT* _M_p; // The actual data.
3346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Data Members (public):
3350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
3351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // size that the allocator can hold.
3352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Value returned by various member functions when they fail.
3353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
3354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
3356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Data Members (private):
3357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
3358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
3360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
3361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return  _M_dataplus._M_p; }
3362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
3364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
3365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return (_M_dataplus._M_p = __p); }
3366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _Rep*
3368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
3369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
3370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
3372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // but they do not call _M_leak.
3373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
3375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data()); }
3376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
3379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data() + this->size()); }
3380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
3383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
3385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_leak_hard();
3386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check(size_type __pos, const char* __s) const
3390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__pos > this->size())
3392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
3393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "this->size() (which is %zu)"),
3394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __s, __pos, this->size());
3395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __pos;
3396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 607


3397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
3400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
3402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_length_error(__N(__s));
3403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
3406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
3408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
3410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
3411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // True if _Rep and source do not overlap.
3414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
3416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
3418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
3419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // When __n = 1 way faster than the general multichar
3422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // traits_type::copy/move/assign.
3423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
3427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
3428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::copy(__d, __s, __n);
3430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
3436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
3437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
3439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
3443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
3445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, __c);
3446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
3448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
3451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // to optimize for the common case of pointers as iterators.
3452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Iterator>
3453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static void
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 608


3454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
3455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
3456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
3457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
3458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
3462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
3466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
3467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
3471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
3475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
3476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static int
3479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
3480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
3482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
3484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
3485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
3486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
3487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return int(__d);
3489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
3493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_leak_hard();
3496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static _Rep&
3498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
3499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _Rep::_S_empty_rep(); }
3500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
3502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // A helper type for avoiding boiler-plate.
3503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
3504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename _Res>
3506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	using _If_sv = enable_if_t<
3507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
3508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
3509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
3510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _Res>;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 609


3511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allows an implicit conversion to __sv_type.
3513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static __sv_type
3514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
3515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __svt; }
3516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Wraps a string_view by explicit conversion and thus
3518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // allows to add an internal constructor that does not
3519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // participate in overload resolution when a string_view
3520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // is provided.
3521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct __sv_wrapper
3522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
3524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__sv_type _M_sv;
3525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
3529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          wrapper.
3530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svw  string view wrapper.
3531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
3532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
3534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
3535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
3536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Construct/copy/destroy:
3540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: We overload ctors in some cases instead of using default
3541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
3542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Default constructor creates an empty string.
3545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string()
3547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
3549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc())
3550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc())
3552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { }
3554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
3557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
3559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _Alloc& __a);
3560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
3562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
3564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str);
3567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 610


3568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
3570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
3572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
3575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc());
3578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
3581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n);
3587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
3589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
3593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n, const _Alloc& __a);
3596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string initialized by a character %array.
3599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source character %array.
3600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
3604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  has no special meaning.
3605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
3607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc());
3608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a C string.
3611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source C string.
3612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
3615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
3617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
3618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
3620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_S_construct(__s, __s ? __s + traits_type::length(__s) :
3621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****                                  __s + npos, __a), __a)
3622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { }
3623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 611


3625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as multiple characters.
3626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters.
3627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to use.
3628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
3631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move construct string.
3635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
3638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
3639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
3640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str)
3641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
3643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(std::move(__str._M_dataplus))
3645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
3648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
3650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from an initializer %list.
3655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list of characters.
3656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
3659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
3661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(__str._M_rep()->_M_grab(__a, __str.get_allocator()), __a)
3662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { }
3663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
3665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(__str._M_data(), __a)
3666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__a == __str.get_allocator())
3668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
3669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(_S_empty_rep()._M_refdata());
3671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(_S_construct(size_type(), _CharT(), __a));
3673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
3675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_dataplus._M_p = _S_construct(__str.begin(), __str.end(), __a);
3677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
3679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a range.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 612


3682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __beg  Start of range.
3683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __end  End of range.
3684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
3687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
3688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc());
3689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
3691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
3693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t   Source object convertible to string view.
3694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
3695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
3696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a   Allocator to use.
3697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
3700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
3701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
3702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a string_view.
3705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t  Source object convertible to string view.
3706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit
3710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
3711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
3712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
3713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Destroy the string instance.
3716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
3718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
3719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Assign the value of @a str to this string.
3722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const basic_string& __str)
3726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__str); }
3727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy contents of @a s into this string.
3730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source null-terminated string.
3731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const _CharT* __s) 
3734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
3735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string of length 1.
3738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Source character.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 613


3739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Assigning to a character makes this string length 1 and
3741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (*this)[0] == @a c.
3742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(_CharT __c) 
3745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
3746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(1, __c); 
3747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
3748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
3753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
3756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a str is a valid, but unspecified string.
3757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
3758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(basic_string&& __str)
3760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value)
3761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// NB: DR 1204.
3763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->swap(__str);
3764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
3765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
3769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list.
3770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(initializer_list<_CharT> __l)
3773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(__l.begin(), __l.size());
3775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
3776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
3778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
3780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
3782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svt An object convertible to  string_view.
3783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
3785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
3786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator=(const _Tp& __svt)
3787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->assign(__svt); }
3788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Convert to a string_view.
3791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return A string_view.
3792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator __sv_type() const noexcept
3794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(data(), size()); }
3795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 614


3796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Iterators:
3798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string.  Unshares the string.
3801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
3806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data());
3807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
3812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data()); }
3816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points one past the last
3819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Unshares the string.
3820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() // FIXME C++11: should be noexcept.
3823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
3825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + this->size());
3826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
3831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  order.  Unshares the string.
3840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
3842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->end()); }
3844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
3849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 615


3853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element order.  Unshares the string.
3858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
3860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->begin()); }
3862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
3866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
3867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
3876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cbegin() const noexcept
3879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data()); }
3880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
3884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cend() const noexcept
3887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
3893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crbegin() const noexcept
3896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
3897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
3901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
3902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crend() const noexcept
3905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Capacity:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 616


3910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
3911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
3912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_rep()->_M_length; }
3915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
3917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
3918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_rep()->_M_length; }
3921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the size() of the largest possible %string.
3923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _Rep::_S_max_size; }
3926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to fill any new elements.
3931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will %resize the %string to the specified
3933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number of characters.  If the number is smaller than the
3934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n, _CharT __c);
3939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will resize the %string to the specified length.  If
3945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  setting them to 0.
3949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n)
3952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { this->resize(__n, _CharT()); }
3953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
3956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
3958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_exceptions
3960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (capacity() > size())
3961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
3962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    try
3963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { reserve(0); }
3964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    catch(...)
3965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { }
3966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 617


3967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns the total number of characters that the %string can hold
3973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  before needing to allocate more memory.
3974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
3977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_rep()->_M_capacity; }
3978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
3981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          characters.
3982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __res_arg  Number of characters required.
3983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
3984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function attempts to reserve enough memory for the
3986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string to hold the specified number of characters.  If the
3987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number requested is more than max_size(), length_error is
3988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
3989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The advantage of this function is that if optimal code is a
3991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  necessity and the user can determine the string length that will be
3992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
3993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
3994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  data.
3995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reserve(size_type __res_arg = 0);
3998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Erases the string, making it empty.
4001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
4003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
4005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (_M_rep()->_M_is_shared())
4007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
4008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_rep()->_M_dispose(this->get_allocator());
4009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(_S_empty_rep()._M_refdata());
4010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
4011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
4012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_rep()->_M_set_length_and_sharable(0);
4013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
4015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // PR 56166: this should not throw.
4016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear()
4018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_mutate(0, this->size(), 0); }
4019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
4020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
4023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  <code>*this == ""</code>.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 618


4024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NODISCARD bool
4026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
4027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->size() == 0; }
4028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Element access:
4030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
4033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (constant) reference to the character.
4034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
4036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
4037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
4039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
4042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
4044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
4045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
4050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
4051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
4053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
4054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)  Unshares the string.
4056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[](size_type __pos)
4059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
4061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// and in C++11 mode.
4062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
4063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // In pedantic mode be strict in C++98 mode.
4064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
4065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
4066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
4067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
4072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (const) reference to the character.
4073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
4076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
4077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
4078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n) const
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 619


4081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= this->size())
4083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
4085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
4086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
4087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
4088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
4093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
4094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
4097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
4098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
4099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  unsharing the string.
4100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n)
4103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= size())
4105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
4107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
4108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
4109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
4110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
4111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the first
4116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
4117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front()
4120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
4123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
4127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
4128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() const noexcept
4131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
4134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the last
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 620


4138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
4139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back()
4142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
4145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
4149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last element of the %string.
4150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() const noexcept
4153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
4156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
4158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Modifiers:
4160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
4162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
4163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const basic_string& __str)
4167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__str); }
4168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
4171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
4172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const _CharT* __s)
4176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__s); }
4177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a character.
4180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to append.
4181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(_CharT __c)
4185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
4186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->push_back(__c);
4187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
4188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
4193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
4194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 621


4195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(initializer_list<_CharT> __l)
4198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
4204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator+=(const _Tp& __svt)
4210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->append(__svt); }
4211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
4215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
4216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str);
4220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a substring.
4223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
4224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str to append.
4225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
4226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
4228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function appends @a __n characters from @a __str
4230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
4231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  than the number of available characters in @a __str, the
4232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  remainder of @a __str is appended.
4233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos);
4236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C substring.
4239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
4240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
4241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s, size_type __n);
4245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
4248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
4249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 622


4252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s)
4253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->append(__s, traits_type::length(__s));
4256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append multiple characters.
4260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
4261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
4262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends __n copies of __c to this string.
4265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(size_type __n, _CharT __c);
4268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
4272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to append.
4273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(initializer_list<_CharT> __l)
4277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters.
4282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
4287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
4290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
4291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
4292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
4296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt)
4302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->append(__sv.data(), __sv.size());
4305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters from a string_view.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 623


4309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The object convertible to string_view to be appended
4310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *               from.
4311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos The position in the string_view to append from.
4312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
4313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
4317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
4318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return append(__sv.data()
4321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
4322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a single character.
4328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to append.
4329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       push_back(_CharT __c)
4332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
4333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __len = 1 + this->size();
4334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
4335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->reserve(__len);
4336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
4337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
4338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
4342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
4343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str);
4347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
4351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
4352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
4355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
4356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(basic_string&& __str)
4359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(allocator_traits<_Alloc>::is_always_equal::value)
4360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->swap(__str);
4362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
4363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 624


4366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a substring of a string.
4368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to use.
4369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str.
4370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
4371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
4373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the substring of @a __str
4375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
4376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is larger than the number of available characters in @a
4377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, the remainder of @a __str is used.
4378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
4381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__str._M_data()
4382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
4383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    __str._M_limit(__pos, __n)); }
4384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a C substring.
4387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
4388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
4389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the first @a __n
4392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
4393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
4394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s, size_type __n);
4397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of a C string.
4400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
4401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
4404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
4405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function returns.
4406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s)
4409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
4412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to multiple characters.
4416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Length of the resulting string.
4417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
4418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to @a __n copies of
4421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character @a __c.
4422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 625


4423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(size_type __n, _CharT __c)
4425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
4426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a range of characters.
4429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
4434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
4437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
4438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
4439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
4443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
4444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(initializer_list<_CharT> __l)
4448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
4449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a string_view.
4454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The source object convertible to string_view.
4455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	assign(const _Tp& __svt)
4460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
4463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
4467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The source object convertible to string_view.
4468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
4469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to assign.
4470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
4474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
4475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return assign(__sv.data()
4478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
4479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 626


4480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
4485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
4487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
4488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
4491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
4492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
4493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
4498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
4499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
4502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __beg  Start of range.
4504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __end  End of range.
4505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
4508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
4509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
4514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
4515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
4516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert an initializer_list of characters.
4520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
4526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
4529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert value of a string.
4534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
4535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to insert.
4536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 627


4537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
4540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
4541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
4546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
4547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a substring.
4550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
4551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to insert.
4552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
4553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
4554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
4557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos2 > @a str.size().
4558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
4560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
4561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
4562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
4563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
4564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
4568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     size_type __pos2, size_type __n = npos)
4569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->insert(__pos1, __str._M_data()
4570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
4571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
4572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C substring.
4575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
4577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to insert.
4578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
4584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
4585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
4586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
4587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  doesn't change if an error is thrown.
4588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
4591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 628


4594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
4596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
4602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  adding characters causes the length to exceed max_size(),
4603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
4604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
4605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
4606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s)
4609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
4612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
4616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index in string to insert at.
4617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
4618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
4619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
4625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
4626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
4627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
4632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
4633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      size_type(0), __n, __c); }
4634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert one character.
4637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
4638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
4639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing newly inserted char.
4640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
4643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If adding character causes the length to exceed max_size(),
4644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
4645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
4649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, _CharT __c)
4650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 629


4651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
4653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
4654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_rep()->_M_set_leaked();
4655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
4656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
4661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
4663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
4668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
4671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
4675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
4677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string_view to insert
4678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from.
4679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to insert.
4680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
4684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(size_type __pos1, const _Tp& __svt,
4685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       size_type __pos2, size_type __n = npos)
4686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, size_type(0), __sv.data()
4689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
4690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
4691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove characters.
4696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
4697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
4698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes @a __n characters from this string starting at @a
4703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
4704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
4705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
4706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 630


4708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
4711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
4712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
4713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
4714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
4715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove one character.
4719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
4720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  iterator referencing same location after removal.
4721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the character at @a __position from this string. The value
4723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  of the string doesn't change if an error is thrown.
4724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
4726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(iterator __position)
4727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
4729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __position < _M_iend());
4730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
4731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
4732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_rep()->_M_set_leaked();
4733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
4734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove a range of characters.
4738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
4739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
4740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing location of first after removal.
4741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
4743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
4744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
4746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(iterator __first, iterator __last);
4747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  
4748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove the last character.
4751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The string must be non-empty.
4753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
4756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	erase(size() - 1, 1);
4759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
4764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 631


4765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to be replaced.
4766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
4767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
4773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
4774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
4776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
4777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  error is thrown.
4778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
4781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
4782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
4785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character to replace.
4786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
4788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of str to use.
4789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from str to use.
4790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
4792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.size().
4793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
4796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
4797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
4798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
4799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string doesn't change if an error is thrown.
4800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
4803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
4804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
4805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
4806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
4807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C substring.
4810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
4813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
4814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
4816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
4820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
4821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 632


4822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of result exceeds max_size(), length_error is
4823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
4825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
4828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2);
4829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C string.
4832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
4835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
4837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the characters of @a __s are
4841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
4842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
4843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
4848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
4851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with multiple characters.
4855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters to insert.
4858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
4859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
4861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
4864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
4865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
4867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
4869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
4872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
4873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
4874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string.
4877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 633


4879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String value to insert.
4880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
4885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
4886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string doesn't change if an error is thrown.
4887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
4890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
4891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C substring.
4894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
4897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to insert.
4898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
4903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
4905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
4906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
4909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
4913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C string.
4917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
4920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
4925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
4930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
4933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 634


4936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
4940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
4941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
4951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
4955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with range.
4959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
4962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
4963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
4970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
4971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
4974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(iterator __i1, iterator __i2,
4975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
4976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
4977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   && __i2 <= _M_iend());
4979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
4980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
4981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
4982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Specializations for the common case of pointer and iterator:
4985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
4986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
4988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 635


4993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
4994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2,
4998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
4999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
5002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
5005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
5009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
5012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
5015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2,
5019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
5020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
5023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
5026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
5029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
5031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
5032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
5033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
5034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
5036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
5038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
5039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
5040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
5041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
5042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
5044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    initializer_list<_CharT> __l)
5045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
5046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
5047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 636


5050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
5051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position to replace at.
5052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to replace.
5053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
5054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
5058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
5059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
5062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
5066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  The position to replace at.
5067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1    The number of characters to replace.
5068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
5070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2    The number of characters to insert.
5071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
5075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(size_type __pos1, size_type __n1, const _Tp& __svt,
5076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
5077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, __n1,
5080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
5081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
5082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
5083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
5087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1    An iterator referencing the start position
5088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           to replace at.
5089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2    An iterator referencing the end position
5090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           for the replace.
5091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
5096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
5097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
5100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
5104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Integer>
5105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
5106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 637


5107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _Integer __val, __true_type)
5108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
5109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
5111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
5112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
5113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _InputIterator __k2, __false_type);
5114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
5117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     _CharT __c);
5118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
5121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		      size_type __n2);
5122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
5124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // requires special behaviour if _InIter is an integral type
5125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InIterator>
5126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
5128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 const _Alloc& __a, __false_type)
5129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
5131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
5132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
5136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Integer>
5137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
5139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 const _Alloc& __a, __true_type)
5140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
5141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				    __end, __a); }
5142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static _CharT*
5144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
5145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _S_construct(__req, __c, __a); }
5146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InIterator>
5148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
5150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
5152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
5153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
5154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
5156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InIterator>
5157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
5159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		      input_iterator_tag);
5160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
5162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // string::iterator, _CharT*, etc.
5163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _FwdIterator>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 638


5164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
5166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     forward_iterator_tag);
5167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static _CharT*
5169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
5170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
5172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy substring into C string.
5175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to copy value into.
5176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to copy.
5177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to copy.
5178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Number of characters actually copied
5179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
5182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
5183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.
5184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
5187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Swap contents with another string.
5190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String to swap with.
5191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
5193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  time.
5194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
5196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       swap(basic_string& __s)
5197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value);
5198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // String operations:
5200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
5202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
5204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  happen.
5205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
5207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
5208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
5209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to contents.
5212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
5214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
5215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
5216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
5217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
5219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
5220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 639


5221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return non-const pointer to contents.
5225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to the character sequence held by the string.
5227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Modifying the characters in the sequence is allowed.
5228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
5230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() noexcept
5231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
5233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data();
5234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
5236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
5239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type
5241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
5242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
5243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C substring.
5246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
5248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
5249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
5252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
5254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
5258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string.
5262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
5263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
5267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
5268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns npos.
5269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
5272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
5274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C string.
5277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 640


5278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
5282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s within this string.  If found, returns the index where
5283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
5284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
5290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
5294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
5299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
5304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string_view.
5308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
5315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
5319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string.
5324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
5325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
5327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
5329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str within this string.  If found, returns the index where
5330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
5331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
5334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 641


5335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
5336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C substring.
5339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
5341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
5342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
5343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
5345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
5347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
5351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C string.
5355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
5357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of  last occurrence.
5358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
5360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s within this string.  If found, returns the index
5361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it begins.  If not found, returns npos.
5362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
5368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
5372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
5382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string_view.
5386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
5389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 642


5392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
5393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
5397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of string.
5402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
5403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
5408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
5413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
5415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C substring.
5418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
5419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
5420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
5421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
5426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
5427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
5430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C string.
5434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
5435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
5444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
5448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 643


5449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
5452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the character
5457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index
5458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it was found.  If not found, returns npos.
5459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to find(__c, __pos).
5461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__c, __pos); }
5465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of a string_view.
5469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
5471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
5477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
5481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
5486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
5487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
5492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
5497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
5499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C substring.
5502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
5503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
5504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
5505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 644


5506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
5510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
5511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
5514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C string.
5518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
5519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
5528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
5532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
5536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
5545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__c, __pos); }
5549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
5553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
5555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
5561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 645


5563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
5565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in string.
5570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
5571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
5575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
5576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  was found.  If not found, returns npos.
5577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
5580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
5582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C substring.
5585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
5587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from __s to consider.
5588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within
5592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
5597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
5598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C string.
5601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in @a __s within this string.  If found, returns
5607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
5611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
5615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a different character.
5619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 646


5620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character
5624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  other than @a __c within this string.  If found, returns the
5625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  index where it was found.  If not found, returns npos.
5626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
5629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in a string_view.
5634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
5636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
5642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
5646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in string.
5651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
5652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __str within this string.  If found,
5657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
5662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
5664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C substring.
5667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
5669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to consider.
5670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
5673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
5674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If found, returns the index where it was found.  If not found,
5675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
5676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 647


5677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
5679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
5680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C string.
5682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __s within this string.  If found,
5688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
5693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
5697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a different character.
5701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
5702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
5706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
5707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
5711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
5716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
5718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
5724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
5728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Get a substring.
5733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character (default 0).
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 648


5734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
5735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  The new string.
5736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Construct and return a new string using the @a __n
5739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  If the string is too
5740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
5741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
5742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string
5744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
5745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return basic_string(*this,
5746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
5747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string.
5750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
5751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
5754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
5755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
5756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length rlen of the strings to compare as the smallest of
5757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  size() and str.size().  The function then compares the two
5758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
5759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
5761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const basic_string& __str) const
5764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
5766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __osize = __str.size();
5767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __len = std::min(__size, __osize);
5768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
5770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!__r)
5771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
5772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __r;
5773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
5778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
5779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
5783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(const _Tp& __svt) const
5784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   __sv_type __sv = __svt;
5787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __size = this->size();
5788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __osize = __sv.size();
5789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
5790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 649


5791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
5792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (!__r)
5793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __r = _S_compare(__size, __osize);
5794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __r;
5795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
5799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
5800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to compare.
5801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
5802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                against.
5803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
5807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
5808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
5812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
5816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
5817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  The number of characters to compare.
5818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   An object convertible to string_view to compare
5819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                 against.
5820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
5821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  The number of characters to compare.
5822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
5826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
5827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
5828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this)
5832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
5833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a string.
5838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
5839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring.
5840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
5841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n characters
5844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
5845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
5846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
5847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 650


5848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to compare as the smallest of the length of the substring
5849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  and @a __str.size().  The function then compares the two
5850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling
5851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
5852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
5853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the shorter one is ordered first.
5854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
5857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a substring.
5860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character of substring.
5861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
5862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
5863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
5864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters in substring of str.
5865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
5868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
5869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
5870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
5871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
5872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
5873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
5874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings to compare as the smallest of the lengths of the
5875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substrings.  The function then compares the two strings by
5876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  calling
5877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
5878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
5880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
5883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
5884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a C string.
5887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
5888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
5891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
5892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
5893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of size() and the length of a string
5894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
5895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
5896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
5897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  ordered first.
5898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
5901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 5 String::compare specification questionable
5904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 651


5905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a C string.
5906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
5907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
5908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
5909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
5912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
5913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
5914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
5915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
5916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of the length of the substring and
5917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of a string constructed from @a __s.  The
5918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two string by calling
5919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
5920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
5922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
5925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring against a character %array.
5928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
5929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
5930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  character %array to compare against.
5931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters of s.
5932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
5935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
5936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
5937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  if this substring is ordered before the string from @a __s,
5938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
5939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
5940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  effective length rlen of the strings to compare as the
5941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
5942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two strings by calling
5943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
5944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
5946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
5948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  no special meaning.
5949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
5952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2) const;
5953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus > 201703L
5955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(_CharT __x) const noexcept
5961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 652


5962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(const _CharT* __x) const noexcept
5965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(_CharT __x) const noexcept
5973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(const _CharT* __x) const noexcept
5977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++20
5979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # ifdef _GLIBCXX_TM_TS_INTERNAL
5981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend void
5982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_C1_for_exceptions(void* that, const char* s,
5983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    void* exc);
5984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend const char*
5985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_c_str(const void *that);
5986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend void
5987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_D1(void *that);
5988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend void
5989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_D1_commit(void *that);
5990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # endif
5991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   };
5992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
5993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides >= 201606
5995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
5996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _InputIterator, typename _CharT
5997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     = typename iterator_traits<_InputIterator>::value_type,
5998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
5999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireInputIter<_InputIterator>,
6000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string(_InputIterator, _InputIterator, _Allocator = _Allocator())
6002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       -> basic_string<_CharT, char_traits<_CharT>, _Allocator>;
6003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
6005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // 3075. basic_string needs deduction guides from basic_string_view
6006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits,
6007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>, const _Allocator& = _Allocator())
6010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits,
6013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>,
6016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 const _Allocator& = _Allocator())
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 653


6019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
6021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
6022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator+
6024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate two strings.
6026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
6032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __str.append(__rhs);
6037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __str;
6038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate C string and string.
6042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const _CharT* __lhs,
6049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate character and string.
6053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate string and C string.
6063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __rhs)
6071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __str.append(__rhs);
6074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __str;
6075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 654


6076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate string and character.
6079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
6086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
6088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __string_type::size_type		__size_type;
6089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __string_type __str(__lhs);
6090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __str.append(__size_type(1), __rhs);
6091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __str;
6092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
6095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
6113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       using _Alloc_traits = allocator_traits<_Alloc>;
6114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool __use_rhs = false;
6115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       if _GLIBCXX17_CONSTEXPR (typename _Alloc_traits::is_always_equal{})
6116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__use_rhs = true;
6117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       else if (__lhs.get_allocator() == __rhs.get_allocator())
6118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__use_rhs = true;
6119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       if (__use_rhs)
6120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
6121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
6122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const auto __size = __lhs.size() + __rhs.size();
6123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__size > __lhs.capacity() && __size <= __rhs.capacity())
6124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    return std::move(__rhs.insert(0, __lhs));
6125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
6126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return std::move(__lhs.append(__rhs));
6127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const _CharT* __lhs,
6132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 655


6133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(_CharT __lhs,
6138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
6140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __rhs)
6145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _CharT __rhs)
6151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
6152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
6153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator ==
6155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test equivalence of two strings.
6157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
6166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT>
6169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline
6170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
6171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
6172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
6173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return (__lhs.size() == __rhs.size()
6174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
6175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 						    __lhs.size())); }
6176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test equivalence of string and C string.
6179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  String.
6180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  C string.
6181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const _CharT* __rhs)
6187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_lib_three_way_comparison
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 656


6190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Three-way comparison of a string and a C string.
6192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  A string.
6193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  A null-terminated string.
6194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  A value indicating whether `__lhs` is less than, equal to,
6195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *	       greater than, or incomparable with `__rhs`.
6196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline auto
6199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<=>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		const basic_string<_CharT, _Traits, _Alloc>& __rhs) noexcept
6201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     -> decltype(__detail::__char_traits_cmp_cat<_Traits>(0))
6202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __detail::__char_traits_cmp_cat<_Traits>(__lhs.compare(__rhs)); }
6203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Three-way comparison of a string and a C string.
6206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  A string.
6207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  A null-terminated string.
6208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  A value indicating whether `__lhs` is less than, equal to,
6209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *	       greater than, or incomparable with `__rhs`.
6210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline auto
6213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<=>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		const _CharT* __rhs) noexcept
6215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     -> decltype(__detail::__char_traits_cmp_cat<_Traits>(0))
6216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __detail::__char_traits_cmp_cat<_Traits>(__lhs.compare(__rhs)); }
6217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
6218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test equivalence of C string and string.
6220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  C string.
6221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  String.
6222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
6223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const _CharT* __lhs,
6227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
6229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator !=
6231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test difference of two strings.
6233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
6242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return !(__lhs == __rhs); }
6243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test difference of C string and string.
6246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  C string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 657


6247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  String.
6248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) != 0.  False otherwise.
6249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator!=(const _CharT* __lhs,
6253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return !(__lhs == __rhs); }
6255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test difference of string and C string.
6258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  String.
6259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  C string.
6260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const _CharT* __rhs)
6266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return !(__lhs == __rhs); }
6267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator <
6269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if string precedes string.
6271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 15585              		.loc 19 6277 5 view .LVU3609
 15586              	.LBB8780:
 15587              	.LBB8781:
 15588              	.LBB8782:
 15589              	.LBB8783:
 15590              	.LBB8784:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 15591              		.loc 20 347 2 view .LVU3610
 15592 0020 6669     		ldr	r6, [r4, #20]
 15593              	.LBE8784:
 15594              	.LBE8783:
 15595              	.LBE8782:
 15596              	.LBI8781:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15597              		.loc 19 2852 7 view .LVU3611
 15598              	.LVL984:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15599              		.loc 19 2852 7 is_stmt 0 view .LVU3612
 15600 0022 4546     		mov	r5, r8
 15601 0024 2769     		ldr	r7, [r4, #16]
 15602              	.LBB8790:
 15603              	.LBB8787:
 15604              	.LBB8785:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 15605              		.loc 20 347 25 view .LVU3613
 15606 0026 5046     		mov	r0, r10
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 658


 15607 0028 B045     		cmp	r8, r6
 15608 002a 3946     		mov	r1, r7
 15609 002c 28BF     		it	cs
 15610 002e 3546     		movcs	r5, r6
 15611              	.LVL985:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 15612              		.loc 20 347 25 view .LVU3614
 15613              	.LBE8785:
 15614              	.LBI8783:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 15615              		.loc 20 337 7 is_stmt 1 view .LVU3615
 15616              	.LBB8786:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 15617              		.loc 20 339 2 view .LVU3616
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 15618              		.loc 20 347 25 is_stmt 0 view .LVU3617
 15619 0030 2A46     		mov	r2, r5
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 15620              		.loc 20 339 2 view .LVU3618
 15621 0032 15B1     		cbz	r5, .L693
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 15622              		.loc 20 347 25 view .LVU3619
 15623 0034 FFF7FEFF 		bl	memcmp
 15624              	.LVL986:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 15625              		.loc 20 347 25 view .LVU3620
 15626              	.LBE8786:
 15627              	.LBE8787:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 15628              		.loc 19 2859 2 view .LVU3621
 15629 0038 08B9     		cbnz	r0, .L694
 15630              	.LVL987:
 15631              	.L693:
 15632              	.LBB8788:
 15633              	.LBI8788:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15634              		.loc 19 401 7 is_stmt 1 view .LVU3622
 15635              	.LBB8789:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15636              		.loc 19 403 51 is_stmt 0 view .LVU3623
 15637 003a A8EB0600 		sub	r0, r8, r6
 15638              	.LVL988:
 15639              	.L694:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15640              		.loc 19 403 51 view .LVU3624
 15641              	.LBE8789:
 15642              	.LBE8788:
 15643              	.LBE8790:
 15644              	.LBE8781:
 15645              	.LBE8780:
 15646              	.LBE8779:
 15647              	.LBE8778:
 15648 003e 0028     		cmp	r0, #0
 15649              	.LBB8791:
 15650              	.LBB8792:
 798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 15651              		.loc 29 798 53 view .LVU3625
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 659


 15652 0040 D4E90212 		ldrd	r1, r2, [r4, #8]
 15653              	.LBE8792:
 15654              	.LBE8791:
 15655 0044 AEBF     		itee	ge
 15656 0046 0021     		movge	r1, #0
 15657 0048 0A46     		movlt	r2, r1
 15658 004a 0121     		movlt	r1, #1
 15659              	.LVL989:
 15660              		.loc 29 2098 18 is_stmt 1 view .LVU3626
 15661 004c 002A     		cmp	r2, #0
 15662 004e E6D1     		bne	.L710
 15663              	.LVL990:
 15664              	.LBB8793:
 15665              	.LBI8793:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 15666              		.loc 29 273 7 view .LVU3627
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 15667              		.loc 29 273 7 is_stmt 0 view .LVU3628
 15668              	.LBE8793:
2099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x;
2101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
2102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = __comp ? _S_left(__x) : _S_right(__x);
2103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator __j = iterator(__y);
2105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__comp)
 15669              		.loc 29 2105 7 view .LVU3629
 15670 0050 B9B9     		cbnz	r1, .L690
 15671 0052 A346     		mov	fp, r4
 15672              	.LVL991:
 15673              	.L697:
 15674              	.LBB8794:
 15675              	.LBI8794:
 15676              		.loc 40 385 7 is_stmt 1 view .LVU3630
 15677              	.LBB8795:
 15678              	.LBI8795:
 15679              		.loc 19 6277 5 view .LVU3631
 15680              	.LBB8796:
 15681              	.LBI8796:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15682              		.loc 19 2852 7 view .LVU3632
 15683              	.LBB8797:
 15684              	.LBB8798:
 15685              	.LBI8798:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 15686              		.loc 20 337 7 view .LVU3633
 15687              	.LBB8799:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 15688              		.loc 20 339 2 view .LVU3634
 15689 0054 8DB1     		cbz	r5, .L700
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 15690              		.loc 20 347 2 view .LVU3635
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 15691              		.loc 20 347 25 is_stmt 0 view .LVU3636
 15692 0056 2A46     		mov	r2, r5
 15693 0058 5146     		mov	r1, r10
 15694 005a 3846     		mov	r0, r7
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 660


 15695 005c FFF7FEFF 		bl	memcmp
 15696              	.LVL992:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 15697              		.loc 20 347 25 view .LVU3637
 15698              	.LBE8799:
 15699              	.LBE8798:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 15700              		.loc 19 2859 2 view .LVU3638
 15701 0060 58B1     		cbz	r0, .L700
 15702              	.L701:
 15703              	.LVL993:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 15704              		.loc 19 2859 2 view .LVU3639
 15705              	.LBE8797:
 15706              	.LBE8796:
 15707              	.LBE8795:
 15708              	.LBE8794:
2106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__j == begin())
2108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(__x, __y);
2109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    --__j;
2111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 15709              		.loc 29 2112 7 view .LVU3640
 15710 0062 0028     		cmp	r0, #0
 15711              	.LVL994:
 15712              	.LBB8805:
 15713              	.LBI8805:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 15714              		.loc 30 352 12 is_stmt 1 view .LVU3641
 15715              	.LBB8806:
 15716              	.LBB8807:
 15717              	.LBB8808:
 15718              	.LBI8808:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 15719              		.loc 34 76 5 view .LVU3642
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 15720              		.loc 34 76 5 is_stmt 0 view .LVU3643
 15721              	.LBE8808:
 15722              		.loc 30 353 64 view .LVU3644
 15723 0064 4FF00003 		mov	r3, #0
 15724              	.LBE8807:
 15725              	.LBE8806:
 15726              	.LBE8805:
2113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _Res(__x, __y);
2114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return _Res(__j._M_node, 0);
2115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 15727              		.loc 29 2115 5 view .LVU3645
 15728 0068 4846     		mov	r0, r9
 15729              	.LBB8812:
 15730              	.LBB8811:
 15731              	.LBB8810:
 15732              		.loc 30 353 64 view .LVU3646
 15733 006a B4BF     		ite	lt
 15734 006c C9E9003B 		strdlt	r3, fp, [r9]
 15735              	.LVL995:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 661


 15736              	.LBB8809:
 15737              	.LBI8809:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 15738              		.loc 34 76 5 is_stmt 1 view .LVU3647
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 15739              		.loc 34 76 5 is_stmt 0 view .LVU3648
 15740              	.LBE8809:
 15741              	.LBE8810:
 15742              	.LBE8811:
 15743              	.LBE8812:
 15744              	.LBB8813:
 15745              	.LBI8813:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 15746              		.loc 30 322 18 is_stmt 1 view .LVU3649
 15747              	.LBB8814:
 15748              	.LBB8815:
 15749              	.LBB8816:
 15750              	.LBI8816:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 15751              		.loc 34 76 5 view .LVU3650
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 15752              		.loc 34 76 5 is_stmt 0 view .LVU3651
 15753              	.LBE8816:
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 15754              		.loc 30 323 51 view .LVU3652
 15755 0070 C9E90043 		strdge	r4, r3, [r9]
 15756              	.LVL996:
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 15757              		.loc 30 323 51 view .LVU3653
 15758              	.LBE8815:
 15759              	.LBE8814:
 15760              	.LBE8813:
 15761              		.loc 29 2115 5 view .LVU3654
 15762 0074 03B0     		add	sp, sp, #12
 15763              		.cfi_remember_state
 15764              		.cfi_def_cfa_offset 36
 15765              		@ sp needed
 15766 0076 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 15767              	.LVL997:
 15768              	.L700:
 15769              		.cfi_restore_state
 15770              	.LBB8817:
 15771              	.LBB8804:
 15772              	.LBB8803:
 15773              	.LBB8802:
 15774              	.LBB8800:
 15775              	.LBI8800:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15776              		.loc 19 401 7 is_stmt 1 view .LVU3655
 15777              	.LBB8801:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15778              		.loc 19 403 51 is_stmt 0 view .LVU3656
 15779 007a A6EB0800 		sub	r0, r6, r8
 15780              	.LVL998:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15781              		.loc 19 403 51 view .LVU3657
 15782              	.LBE8801:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 662


 15783              	.LBE8800:
 15784 007e F0E7     		b	.L701
 15785              	.LVL999:
 15786              	.L712:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15787              		.loc 19 403 51 view .LVU3658
 15788              	.LBE8802:
 15789              	.LBE8803:
 15790              	.LBE8804:
 15791              	.LBE8817:
 15792              	.LBB8818:
 15793              	.LBB8777:
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 15794              		.loc 29 760 31 view .LVU3659
 15795 0080 0C1D     		adds	r4, r1, #4
 15796              	.LVL1000:
 15797              	.L690:
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 15798              		.loc 29 760 31 view .LVU3660
 15799              	.LBE8777:
 15800              	.LBE8818:
 15801              	.LBB8819:
 15802              	.LBI8819:
1002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(this->_M_impl._M_header._M_left); }
 15803              		.loc 29 1002 7 is_stmt 1 view .LVU3661
 15804              	.LBB8820:
 15805              	.LBB8821:
 15806              	.LBI8821:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 15807              		.loc 29 273 7 view .LVU3662
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 15808              		.loc 29 273 7 is_stmt 0 view .LVU3663
 15809              	.LBE8821:
 15810              	.LBE8820:
 15811              	.LBE8819:
2107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(__x, __y);
 15812              		.loc 29 2107 4 view .LVU3664
 15813 0082 DBF80C30 		ldr	r3, [fp, #12]
 15814 0086 A342     		cmp	r3, r4
 15815 0088 10D0     		beq	.L713
 15816              	.LVL1001:
 15817              	.LBB8822:
 15818              	.LBI8822:
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 15819              		.loc 29 300 7 is_stmt 1 view .LVU3665
 15820              	.LBB8823:
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 15821              		.loc 29 302 30 is_stmt 0 view .LVU3666
 15822 008a 2046     		mov	r0, r4
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 15823              		.loc 29 303 10 view .LVU3667
 15824 008c A346     		mov	fp, r4
 15825              	.LVL1002:
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 15826              		.loc 29 302 30 view .LVU3668
 15827 008e FFF7FEFF 		bl	_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
 15828              	.LVL1003:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 663


 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 15829              		.loc 29 302 30 view .LVU3669
 15830 0092 019B     		ldr	r3, [sp, #4]
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 15831              		.loc 29 303 10 view .LVU3670
 15832 0094 0446     		mov	r4, r0
 15833 0096 D3F80480 		ldr	r8, [r3, #4]
 15834 009a D3F800A0 		ldr	r10, [r3]
 15835 009e D0E90476 		ldrd	r7, r6, [r0, #16]
 15836 00a2 4645     		cmp	r6, r8
 15837 00a4 3546     		mov	r5, r6
 15838 00a6 28BF     		it	cs
 15839 00a8 4546     		movcs	r5, r8
 15840 00aa D3E7     		b	.L697
 15841              	.LVL1004:
 15842              	.L713:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 15843              		.loc 29 303 10 view .LVU3671
 15844              	.LBE8823:
 15845              	.LBE8822:
 15846              	.LBB8824:
 15847              	.LBI8824:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 15848              		.loc 30 352 12 is_stmt 1 view .LVU3672
 15849              	.LBB8825:
 15850              	.LBB8826:
 15851              	.LBB8827:
 15852              	.LBI8827:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 15853              		.loc 34 76 5 view .LVU3673
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 15854              		.loc 34 76 5 is_stmt 0 view .LVU3674
 15855              	.LBE8827:
 15856              		.loc 30 353 64 view .LVU3675
 15857 00ac 0023     		movs	r3, #0
 15858              	.LBE8826:
 15859              	.LBE8825:
 15860              	.LBE8824:
 15861              		.loc 29 2115 5 view .LVU3676
 15862 00ae 4846     		mov	r0, r9
 15863              	.LBB8831:
 15864              	.LBB8830:
 15865              	.LBB8829:
 15866              		.loc 30 353 64 view .LVU3677
 15867 00b0 C9E90034 		strd	r3, r4, [r9]
 15868              	.LVL1005:
 15869              	.LBB8828:
 15870              	.LBI8828:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 15871              		.loc 34 76 5 is_stmt 1 view .LVU3678
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 15872              		.loc 34 76 5 is_stmt 0 view .LVU3679
 15873              	.LBE8828:
 15874              	.LBE8829:
 15875              	.LBE8830:
 15876              	.LBE8831:
 15877              		.loc 29 2115 5 view .LVU3680
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 664


 15878 00b4 03B0     		add	sp, sp, #12
 15879              		.cfi_def_cfa_offset 36
 15880              		@ sp needed
 15881 00b6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 15882              		.loc 29 2115 5 view .LVU3681
 15883              		.cfi_endproc
 15884              	.LFE6057:
 15886 00ba 00BF     		.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6v
 15887              		.align	1
 15888              		.p2align 2,,3
 15889              		.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSa
 15890              		.syntax unified
 15891              		.thumb
 15892              		.thumb_func
 15893              		.fpu fpv5-d16
 15895              	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt
 15896              	.LVL1006:
 15897              	.LFB5959:
2116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
2121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
2122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
2123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_get_insert_equal_pos(const key_type& __k)
2125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
2127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type __x = _M_begin();
2128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr __y = _M_end();
2129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
2130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x;
2132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = _M_impl._M_key_compare(__k, _S_key(__x)) ?
2133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_S_left(__x) : _S_right(__x);
2134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return _Res(__x, __y);
2136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg>
2142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::iterator, bool>
2145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_unique(_Arg&& __v)
2148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
2149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_unique(const _Val& __v)
2150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef pair<iterator, bool> _Res;
2153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr> __res
2154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 665


2155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__res.second)
2157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
2159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return _Res(_M_insert_(__res.first, __res.second,
2160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				 _GLIBCXX_FORWARD(_Arg, __v), __an),
2161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      true);
2162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return _Res(iterator(__res.first), false);
2165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg>
2171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_equal(_Arg&& __v)
2176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
2177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_equal(const _Val& __v)
2178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr> __res
2181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	= _M_get_insert_equal_pos(_KeyOfValue()(__v));
2182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Alloc_node __an(*this);
2183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return _M_insert_(__res.first, __res.second,
2184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			_GLIBCXX_FORWARD(_Arg, __v), __an);
2185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
2191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
2192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
2193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 15898              		.loc 29 2193 5 is_stmt 1 view -0
 15899              		.cfi_startproc
 15900              		@ args = 0, pretend = 0, frame = 8
 15901              		@ frame_needed = 0, uses_anonymous_args = 0
 15902              		.loc 29 2193 5 is_stmt 0 view .LVU3683
 15903 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 15904              		.cfi_def_cfa_offset 36
 15905              		.cfi_offset 4, -36
 15906              		.cfi_offset 5, -32
 15907              		.cfi_offset 6, -28
 15908              		.cfi_offset 7, -24
 15909              		.cfi_offset 8, -20
 15910              		.cfi_offset 9, -16
 15911              		.cfi_offset 10, -12
 15912              		.cfi_offset 11, -8
 15913              		.cfi_offset 14, -4
 15914 0004 1F46     		mov	r7, r3
 15915              	.LBB9003:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 666


 15916              	.LBB9004:
 15917              	.LBB9005:
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 15918              		.loc 29 760 31 view .LVU3684
 15919 0006 0B1D     		adds	r3, r1, #4
 15920              	.LVL1007:
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 15921              		.loc 29 760 31 view .LVU3685
 15922              	.LBE9005:
 15923              	.LBE9004:
 15924              	.LBE9003:
 15925              		.loc 29 2193 5 view .LVU3686
 15926 0008 83B0     		sub	sp, sp, #12
 15927              		.cfi_def_cfa_offset 48
 15928              		.loc 29 2193 5 view .LVU3687
 15929 000a 0E46     		mov	r6, r1
 15930              	.LBB9114:
2194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_get_insert_hint_unique_pos(const_iterator __position,
2195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				  const key_type& __k)
2196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator __pos = __position._M_const_cast();
2198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
2199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // end()
2201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__pos._M_node == _M_end())
 15931              		.loc 29 2201 7 view .LVU3688
 15932 000c 9A42     		cmp	r2, r3
 15933              	.LBE9114:
2193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_get_insert_hint_unique_pos(const_iterator __position,
 15934              		.loc 29 2193 5 view .LVU3689
 15935 000e 0546     		mov	r5, r0
 15936              	.LVL1008:
 15937              	.LBB9115:
 15938              	.LBI9115:
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 15939              		.loc 29 354 7 is_stmt 1 view .LVU3690
 15940              	.LBB9116:
 15941              	.LBB9117:
 15942              	.LBI9117:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 15943              		.loc 29 273 7 view .LVU3691
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 15944              		.loc 29 273 7 is_stmt 0 view .LVU3692
 15945              	.LBE9117:
 15946              	.LBE9116:
 15947              	.LBE9115:
 15948              	.LBB9118:
 15949              	.LBB9006:
 15950              	.LBI9004:
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 15951              		.loc 29 759 7 is_stmt 1 view .LVU3693
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 15952              		.loc 29 759 7 is_stmt 0 view .LVU3694
 15953              	.LBE9006:
 15954              		.loc 29 2201 7 view .LVU3695
 15955 0010 4DD0     		beq	.L753
 15956              	.LVL1009:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 667


 15957              	.LBB9007:
 15958              	.LBB9008:
 15959              	.LBI9008:
 15960              		.loc 40 385 7 is_stmt 1 view .LVU3696
 15961              	.LBB9009:
 15962              	.LBI9009:
 15963              		.loc 19 6277 5 view .LVU3697
 15964 0012 1446     		mov	r4, r2
 15965              	.LVL1010:
 15966              		.loc 19 6277 5 is_stmt 0 view .LVU3698
 15967 0014 D7E900B8 		ldrd	fp, r8, [r7]
 15968 0018 D2E90419 		ldrd	r1, r9, [r2, #16]
 15969              	.LVL1011:
 15970              		.loc 19 6277 5 view .LVU3699
 15971 001c C246     		mov	r10, r8
 15972 001e C845     		cmp	r8, r9
 15973 0020 28BF     		it	cs
 15974 0022 CA46     		movcs	r10, r9
 15975              	.LVL1012:
 15976              	.LBB9010:
 15977              	.LBB9011:
 15978              	.LBB9012:
 15979              	.LBB9013:
 15980              	.LBI9013:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 15981              		.loc 20 337 7 is_stmt 1 view .LVU3700
 15982              	.LBB9014:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 15983              		.loc 20 339 2 view .LVU3701
 15984 0024 BAF1000F 		cmp	r10, #0
 15985 0028 1CD0     		beq	.L720
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 15986              		.loc 20 347 2 view .LVU3702
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 15987              		.loc 20 347 25 is_stmt 0 view .LVU3703
 15988 002a 5246     		mov	r2, r10
 15989              	.LVL1013:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 15990              		.loc 20 347 25 view .LVU3704
 15991 002c 5846     		mov	r0, fp
 15992              	.LVL1014:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 15993              		.loc 20 347 25 view .LVU3705
 15994 002e 0191     		str	r1, [sp, #4]
 15995 0030 FFF7FEFF 		bl	memcmp
 15996              	.LVL1015:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 15997              		.loc 20 347 25 view .LVU3706
 15998              	.LBE9014:
 15999              	.LBE9013:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 16000              		.loc 19 2859 2 view .LVU3707
 16001 0034 0028     		cmp	r0, #0
 16002 0036 0199     		ldr	r1, [sp, #4]
 16003 0038 02D1     		bne	.L751
 16004              	.LVL1016:
 16005              	.LBB9015:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 668


 16006              	.LBI9015:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16007              		.loc 19 401 7 is_stmt 1 view .LVU3708
 16008              	.LBB9016:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16009              		.loc 19 403 51 is_stmt 0 view .LVU3709
 16010 003a A8EB0903 		sub	r3, r8, r9
 16011              	.LBE9016:
 16012              	.LBE9015:
 16013              	.LBE9012:
 16014              	.LBE9011:
 16015              	.LBE9010:
 16016              	.LBE9009:
 16017              	.LBE9008:
2202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (size() > 0
2204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
2205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
2206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _M_get_insert_unique_pos(__k);
2208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 16018              		.loc 29 2209 12 view .LVU3710
 16019 003e 002B     		cmp	r3, #0
 16020              	.L751:
 16021 0040 14DB     		blt	.L733
 16022              	.LVL1017:
 16023              	.LBB9023:
 16024              	.LBB9024:
 16025              	.LBB9025:
 16026              	.LBB9026:
 16027              	.LBB9027:
 16028              	.LBB9028:
 16029              	.LBB9029:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16030              		.loc 20 347 2 is_stmt 1 view .LVU3711
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16031              		.loc 20 347 25 is_stmt 0 view .LVU3712
 16032 0042 0846     		mov	r0, r1
 16033 0044 5246     		mov	r2, r10
 16034 0046 5946     		mov	r1, fp
 16035 0048 FFF7FEFF 		bl	memcmp
 16036              	.LVL1018:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16037              		.loc 20 347 25 view .LVU3713
 16038              	.LBE9029:
 16039              	.LBE9028:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 16040              		.loc 19 2859 2 view .LVU3714
 16041 004c 08B9     		cbnz	r0, .L727
 16042              	.LVL1019:
 16043              	.L735:
 16044              	.LBB9030:
 16045              	.LBI9030:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16046              		.loc 19 401 7 is_stmt 1 view .LVU3715
 16047              	.LBB9031:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 669


 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16048              		.loc 19 403 51 is_stmt 0 view .LVU3716
 16049 004e A9EB0800 		sub	r0, r9, r8
 16050              	.LVL1020:
 16051              	.L727:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16052              		.loc 19 403 51 view .LVU3717
 16053              	.LBE9031:
 16054              	.LBE9030:
 16055              	.LBE9027:
 16056              	.LBE9026:
 16057              	.LBE9025:
 16058              	.LBE9024:
2210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  // First, try before...
2212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  iterator __before = __pos;
2213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__pos._M_node == _M_leftmost()) // begin()
2214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(_M_leftmost(), _M_leftmost());
2215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
2216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
2217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (_S_right(__before._M_node) == 0)
2218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(0, __before._M_node);
2219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      else
2220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(__pos._M_node, __pos._M_node);
2221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
2222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _M_get_insert_unique_pos(__k);
2224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 16059              		.loc 29 2225 12 view .LVU3718
 16060 0052 0028     		cmp	r0, #0
 16061 0054 50DB     		blt	.L754
 16062              	.LVL1021:
 16063              	.LBB9032:
 16064              	.LBI9032:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 16065              		.loc 30 322 18 is_stmt 1 view .LVU3719
 16066              	.LBB9033:
 16067              	.LBB9034:
 16068              	.LBB9035:
 16069              	.LBI9035:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16070              		.loc 34 76 5 view .LVU3720
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16071              		.loc 34 76 5 is_stmt 0 view .LVU3721
 16072              	.LBE9035:
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 16073              		.loc 30 323 51 view .LVU3722
 16074 0056 0023     		movs	r3, #0
 16075 0058 C5E90043 		strd	r4, r3, [r5]
 16076              	.LVL1022:
 16077              	.L714:
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 16078              		.loc 30 323 51 view .LVU3723
 16079              	.LBE9034:
 16080              	.LBE9033:
 16081              	.LBE9032:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 670


 16082              	.LBE9023:
 16083              	.LBE9007:
 16084              	.LBE9118:
2226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  // ... then try after.
2228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  iterator __after = __pos;
2229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__pos._M_node == _M_rightmost())
2230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
2231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
2232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
2233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (_S_right(__pos._M_node) == 0)
2234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(0, __pos._M_node);
2235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      else
2236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(__after._M_node, __after._M_node);
2237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
2238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _M_get_insert_unique_pos(__k);
2240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else
2242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// Equivalent keys.
2243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _Res(__pos._M_node, 0);
2244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 16085              		.loc 29 2244 5 view .LVU3724
 16086 005c 2846     		mov	r0, r5
 16087 005e 03B0     		add	sp, sp, #12
 16088              		.cfi_remember_state
 16089              		.cfi_def_cfa_offset 36
 16090              		@ sp needed
 16091 0060 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 16092              	.LVL1023:
 16093              	.L720:
 16094              		.cfi_restore_state
 16095              	.LBB9119:
 16096              	.LBB9099:
 16097              	.LBB9070:
 16098              	.LBB9022:
 16099              	.LBB9021:
 16100              	.LBB9020:
 16101              	.LBB9019:
 16102              	.LBB9018:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16103              		.loc 19 401 7 is_stmt 1 view .LVU3725
 16104              	.LBB9017:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16105              		.loc 19 403 51 is_stmt 0 view .LVU3726
 16106 0064 A8EB0903 		sub	r3, r8, r9
 16107              	.LBE9017:
 16108              	.LBE9018:
 16109              	.LBE9019:
 16110              	.LBE9020:
 16111              	.LBE9021:
 16112              	.LBE9022:
 16113              	.LBE9070:
2209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 16114              		.loc 29 2209 12 view .LVU3727
 16115 0068 002B     		cmp	r3, #0
 16116 006a F0DA     		bge	.L735
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 671


 16117              	.LVL1024:
 16118              	.L733:
 16119              	.LBB9071:
2213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(_M_leftmost(), _M_leftmost());
 16120              		.loc 29 2213 22 view .LVU3728
 16121 006c F368     		ldr	r3, [r6, #12]
2213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(_M_leftmost(), _M_leftmost());
 16122              		.loc 29 2213 4 view .LVU3729
 16123 006e A342     		cmp	r3, r4
 16124 0070 17D0     		beq	.L726
 16125              	.LVL1025:
 16126              	.LBB9072:
 16127              	.LBI9072:
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 16128              		.loc 29 300 7 is_stmt 1 view .LVU3730
 16129              	.LBB9073:
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 16130              		.loc 29 302 30 is_stmt 0 view .LVU3731
 16131 0072 2046     		mov	r0, r4
 16132 0074 FFF7FEFF 		bl	_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
 16133              	.LVL1026:
 16134 0078 D0F814A0 		ldr	r10, [r0, #20]
 16135 007c 8146     		mov	r9, r0
 16136              	.LVL1027:
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 16137              		.loc 29 302 30 view .LVU3732
 16138              	.LBE9073:
 16139              	.LBE9072:
 16140              	.LBB9074:
 16141              	.LBI9074:
 16142              		.loc 40 385 7 is_stmt 1 view .LVU3733
 16143              	.LBB9075:
 16144              	.LBI9075:
 16145              		.loc 19 6277 5 view .LVU3734
 16146              	.LBB9076:
 16147              	.LBB9077:
 16148              	.LBI9077:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16149              		.loc 19 2852 7 view .LVU3735
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16150              		.loc 19 2852 7 is_stmt 0 view .LVU3736
 16151 007e C245     		cmp	r10, r8
 16152 0080 5246     		mov	r2, r10
 16153 0082 28BF     		it	cs
 16154 0084 4246     		movcs	r2, r8
 16155              	.LVL1028:
 16156              	.LBB9078:
 16157              	.LBB9079:
 16158              	.LBI9079:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 16159              		.loc 20 337 7 is_stmt 1 view .LVU3737
 16160              	.LBB9080:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 16161              		.loc 20 339 2 view .LVU3738
 16162 0086 22B1     		cbz	r2, .L724
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16163              		.loc 20 347 2 view .LVU3739
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 672


 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16164              		.loc 20 347 25 is_stmt 0 view .LVU3740
 16165 0088 5946     		mov	r1, fp
 16166 008a 0069     		ldr	r0, [r0, #16]
 16167              	.LVL1029:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16168              		.loc 20 347 25 view .LVU3741
 16169 008c FFF7FEFF 		bl	memcmp
 16170              	.LVL1030:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16171              		.loc 20 347 25 view .LVU3742
 16172              	.LBE9080:
 16173              	.LBE9079:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 16174              		.loc 19 2859 2 view .LVU3743
 16175 0090 08B9     		cbnz	r0, .L725
 16176              	.LVL1031:
 16177              	.L724:
 16178              	.LBB9081:
 16179              	.LBI9081:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16180              		.loc 19 401 7 is_stmt 1 view .LVU3744
 16181              	.LBB9082:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16182              		.loc 19 403 51 is_stmt 0 view .LVU3745
 16183 0092 AAEB0800 		sub	r0, r10, r8
 16184              	.LVL1032:
 16185              	.L725:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16186              		.loc 19 403 51 view .LVU3746
 16187              	.LBE9082:
 16188              	.LBE9081:
 16189              	.LBE9078:
 16190              	.LBE9077:
 16191              	.LBE9076:
 16192              	.LBE9075:
 16193              	.LBE9074:
2215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 16194              		.loc 29 2215 9 view .LVU3747
 16195 0096 0028     		cmp	r0, #0
 16196 0098 25DA     		bge	.L716
 16197              	.LVL1033:
 16198              	.LBB9083:
 16199              	.LBI9083:
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 16200              		.loc 29 797 7 is_stmt 1 view .LVU3748
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 16201              		.loc 29 797 7 is_stmt 0 view .LVU3749
 16202              	.LBE9083:
2217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(0, __before._M_node);
 16203              		.loc 29 2217 8 view .LVU3750
 16204 009a D9F80C30 		ldr	r3, [r9, #12]
 16205 009e 002B     		cmp	r3, #0
 16206 00a0 4BD0     		beq	.L755
 16207              	.LVL1034:
 16208              	.L726:
 16209              	.LBB9084:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 673


 16210              	.LBI9084:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 16211              		.loc 30 352 12 is_stmt 1 view .LVU3751
 16212              	.LBB9085:
 16213              	.LBB9086:
 16214              	.LBB9087:
 16215              	.LBI9087:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16216              		.loc 34 76 5 view .LVU3752
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16217              		.loc 34 76 5 is_stmt 0 view .LVU3753
 16218              	.LBE9087:
 16219              	.LBE9086:
 16220              	.LBE9085:
 16221              	.LBE9084:
 16222              	.LBE9071:
 16223              	.LBE9099:
 16224              	.LBE9119:
 16225              		.loc 29 2244 5 view .LVU3754
 16226 00a2 2846     		mov	r0, r5
 16227              	.LBB9120:
 16228              	.LBB9100:
 16229              	.LBB9094:
 16230              	.LBB9090:
 16231              	.LBB9089:
 16232              	.LBB9088:
 16233              		.loc 30 353 64 view .LVU3755
 16234 00a4 C5E90044 		strd	r4, r4, [r5]
 16235              	.LBE9088:
 16236              	.LBE9089:
 16237              	.LBE9090:
 16238              	.LBE9094:
 16239              	.LBE9100:
 16240              	.LBE9120:
 16241              		.loc 29 2244 5 view .LVU3756
 16242 00a8 03B0     		add	sp, sp, #12
 16243              		.cfi_remember_state
 16244              		.cfi_def_cfa_offset 36
 16245              		@ sp needed
 16246 00aa BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 16247              	.LVL1035:
 16248              	.L753:
 16249              		.cfi_restore_state
 16250              	.LBB9121:
 16251              	.LBB9101:
 16252              	.LBI9101:
1038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_impl._M_node_count; }
 16253              		.loc 29 1038 7 is_stmt 1 view .LVU3757
1038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_impl._M_node_count; }
 16254              		.loc 29 1038 7 is_stmt 0 view .LVU3758
 16255              	.LBE9101:
2204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
 16256              		.loc 29 2204 8 view .LVU3759
 16257 00ae 4B69     		ldr	r3, [r1, #20]
 16258 00b0 CBB1     		cbz	r3, .L716
2204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
 16259              		.loc 29 2204 33 discriminator 1 view .LVU3760
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 674


 16260 00b2 0C69     		ldr	r4, [r1, #16]
 16261              	.LVL1036:
 16262              	.LBB9102:
 16263              	.LBI9102:
 16264              		.loc 40 385 7 is_stmt 1 discriminator 1 view .LVU3761
 16265              	.LBB9103:
 16266              	.LBI9103:
 16267              		.loc 19 6277 5 discriminator 1 view .LVU3762
 16268 00b4 D7F80480 		ldr	r8, [r7, #4]
 16269 00b8 D4F81490 		ldr	r9, [r4, #20]
 16270              	.LBB9104:
 16271              	.LBB9105:
 16272              	.LBI9105:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16273              		.loc 19 2852 7 discriminator 1 view .LVU3763
 16274              	.LVL1037:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16275              		.loc 19 2852 7 is_stmt 0 discriminator 1 view .LVU3764
 16276 00bc C145     		cmp	r9, r8
 16277 00be 4A46     		mov	r2, r9
 16278              	.LVL1038:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16279              		.loc 19 2852 7 discriminator 1 view .LVU3765
 16280 00c0 28BF     		it	cs
 16281 00c2 4246     		movcs	r2, r8
 16282              	.LVL1039:
 16283              	.LBB9106:
 16284              	.LBB9107:
 16285              	.LBI9107:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 16286              		.loc 20 337 7 is_stmt 1 discriminator 1 view .LVU3766
 16287              	.LBB9108:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 16288              		.loc 20 339 2 discriminator 1 view .LVU3767
 16289 00c4 22B1     		cbz	r2, .L717
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16290              		.loc 20 347 2 view .LVU3768
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16291              		.loc 20 347 25 is_stmt 0 view .LVU3769
 16292 00c6 3968     		ldr	r1, [r7]
 16293              	.LVL1040:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16294              		.loc 20 347 25 view .LVU3770
 16295 00c8 2069     		ldr	r0, [r4, #16]
 16296              	.LVL1041:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16297              		.loc 20 347 25 view .LVU3771
 16298 00ca FFF7FEFF 		bl	memcmp
 16299              	.LVL1042:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16300              		.loc 20 347 25 view .LVU3772
 16301              	.LBE9108:
 16302              	.LBE9107:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 16303              		.loc 19 2859 2 view .LVU3773
 16304 00ce 08B9     		cbnz	r0, .L718
 16305              	.LVL1043:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 675


 16306              	.L717:
 16307              	.LBB9109:
 16308              	.LBI9109:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16309              		.loc 19 401 7 is_stmt 1 view .LVU3774
 16310              	.LBB9110:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16311              		.loc 19 403 51 is_stmt 0 view .LVU3775
 16312 00d0 A9EB0800 		sub	r0, r9, r8
 16313              	.LVL1044:
 16314              	.L718:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16315              		.loc 19 403 51 view .LVU3776
 16316              	.LBE9110:
 16317              	.LBE9109:
 16318              	.LBE9106:
 16319              	.LBE9105:
 16320              	.LBE9104:
 16321              	.LBE9103:
 16322              	.LBE9102:
2204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
 16323              		.loc 29 2204 8 view .LVU3777
 16324 00d4 0028     		cmp	r0, #0
 16325 00d6 06DA     		bge	.L716
 16326              	.LVL1045:
 16327              	.L752:
 16328              	.LBB9111:
 16329              	.LBB9095:
 16330              	.LBB9036:
 16331              	.LBB9037:
 16332              	.LBI9037:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 16333              		.loc 30 336 18 is_stmt 1 view .LVU3778
 16334              	.LBB9038:
 16335              	.LBB9039:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 16336              		.loc 30 337 51 is_stmt 0 view .LVU3779
 16337 00d8 0023     		movs	r3, #0
 16338              	.LBE9039:
 16339              	.LBE9038:
 16340              	.LBE9037:
 16341              	.LBE9036:
 16342              	.LBE9095:
 16343              	.LBE9111:
 16344              	.LBE9121:
 16345              		.loc 29 2244 5 view .LVU3780
 16346 00da 2846     		mov	r0, r5
 16347              	.LBB9122:
 16348              	.LBB9112:
 16349              	.LBB9096:
 16350              	.LBB9068:
 16351              	.LBB9043:
 16352              	.LBB9042:
 16353              	.LBB9041:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 16354              		.loc 30 337 51 view .LVU3781
 16355 00dc C5E90034 		strd	r3, r4, [r5]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 676


 16356              	.LVL1046:
 16357              	.LBB9040:
 16358              	.LBI9040:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16359              		.loc 34 76 5 is_stmt 1 view .LVU3782
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16360              		.loc 34 76 5 is_stmt 0 view .LVU3783
 16361              	.LBE9040:
 16362              	.LBE9041:
 16363              	.LBE9042:
 16364              	.LBE9043:
 16365              	.LBE9068:
 16366              	.LBE9096:
 16367              	.LBE9112:
 16368              	.LBE9122:
 16369              		.loc 29 2244 5 view .LVU3784
 16370 00e0 03B0     		add	sp, sp, #12
 16371              		.cfi_remember_state
 16372              		.cfi_def_cfa_offset 36
 16373              		@ sp needed
 16374 00e2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 16375              	.LVL1047:
 16376              	.L716:
 16377              		.cfi_restore_state
 16378              	.LBB9123:
2207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 16379              		.loc 29 2207 37 discriminator 4 view .LVU3785
 16380 00e6 2846     		mov	r0, r5
 16381 00e8 3A46     		mov	r2, r7
 16382 00ea 3146     		mov	r1, r6
 16383 00ec FFF7FEFF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiE
 16384              	.LVL1048:
 16385              	.LBE9123:
 16386              		.loc 29 2244 5 discriminator 4 view .LVU3786
 16387 00f0 2846     		mov	r0, r5
 16388 00f2 03B0     		add	sp, sp, #12
 16389              		.cfi_remember_state
 16390              		.cfi_def_cfa_offset 36
 16391              		@ sp needed
 16392 00f4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 16393              	.LVL1049:
 16394              	.L754:
 16395              		.cfi_restore_state
 16396              	.LBB9124:
 16397              	.LBB9113:
 16398              	.LBB9097:
 16399              	.LBB9069:
2229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
 16400              		.loc 29 2229 22 view .LVU3787
 16401 00f8 3369     		ldr	r3, [r6, #16]
2229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
 16402              		.loc 29 2229 4 view .LVU3788
 16403 00fa A342     		cmp	r3, r4
 16404 00fc ECD0     		beq	.L752
 16405              	.LVL1050:
 16406              	.LBB9044:
 16407              	.LBI9044:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 677


 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 16408              		.loc 29 285 7 is_stmt 1 view .LVU3789
 16409              	.LBB9045:
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 16410              		.loc 29 287 30 is_stmt 0 view .LVU3790
 16411 00fe 2046     		mov	r0, r4
 16412 0100 FFF7FEFF 		bl	_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base
 16413              	.LVL1051:
 16414 0104 D0F814A0 		ldr	r10, [r0, #20]
 16415 0108 8146     		mov	r9, r0
 16416              	.LVL1052:
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 16417              		.loc 29 287 30 view .LVU3791
 16418              	.LBE9045:
 16419              	.LBE9044:
 16420              	.LBB9046:
 16421              	.LBI9046:
 16422              		.loc 40 385 7 is_stmt 1 view .LVU3792
 16423              	.LBB9047:
 16424              	.LBI9047:
 16425              		.loc 19 6277 5 view .LVU3793
 16426              	.LBB9048:
 16427              	.LBB9049:
 16428              	.LBI9049:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16429              		.loc 19 2852 7 view .LVU3794
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16430              		.loc 19 2852 7 is_stmt 0 view .LVU3795
 16431 010a C245     		cmp	r10, r8
 16432 010c 5246     		mov	r2, r10
 16433 010e 28BF     		it	cs
 16434 0110 4246     		movcs	r2, r8
 16435              	.LVL1053:
 16436              	.LBB9050:
 16437              	.LBB9051:
 16438              	.LBI9051:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 16439              		.loc 20 337 7 is_stmt 1 view .LVU3796
 16440              	.LBB9052:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 16441              		.loc 20 339 2 view .LVU3797
 16442 0112 62B1     		cbz	r2, .L730
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16443              		.loc 20 347 2 view .LVU3798
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16444              		.loc 20 347 25 is_stmt 0 view .LVU3799
 16445 0114 5846     		mov	r0, fp
 16446              	.LVL1054:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16447              		.loc 20 347 25 view .LVU3800
 16448 0116 D9F81010 		ldr	r1, [r9, #16]
 16449 011a FFF7FEFF 		bl	memcmp
 16450              	.LVL1055:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 16451              		.loc 20 347 25 view .LVU3801
 16452              	.LBE9052:
 16453              	.LBE9051:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 678


2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 16454              		.loc 19 2859 2 view .LVU3802
 16455 011e 30B1     		cbz	r0, .L730
 16456              	.L731:
 16457              	.LVL1056:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 16458              		.loc 19 2859 2 view .LVU3803
 16459              	.LBE9050:
 16460              	.LBE9049:
 16461              	.LBE9048:
 16462              	.LBE9047:
 16463              	.LBE9046:
2231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 16464              		.loc 29 2231 9 view .LVU3804
 16465 0120 0028     		cmp	r0, #0
 16466 0122 E0DA     		bge	.L716
 16467              	.LVL1057:
 16468              	.LBB9059:
 16469              	.LBI9059:
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 16470              		.loc 29 797 7 is_stmt 1 view .LVU3805
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 16471              		.loc 29 797 7 is_stmt 0 view .LVU3806
 16472              	.LBE9059:
2233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(0, __pos._M_node);
 16473              		.loc 29 2233 8 view .LVU3807
 16474 0124 E368     		ldr	r3, [r4, #12]
 16475 0126 2BB1     		cbz	r3, .L756
 16476              	.LVL1058:
 16477              	.LBB9060:
 16478              	.LBI9060:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 16479              		.loc 30 352 12 is_stmt 1 view .LVU3808
 16480              	.LBB9061:
 16481              	.LBB9062:
 16482              	.LBB9063:
 16483              	.LBI9063:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16484              		.loc 34 76 5 view .LVU3809
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 16485              		.loc 34 76 5 is_stmt 0 view .LVU3810
 16486              	.LBE9063:
 16487              		.loc 30 353 64 view .LVU3811
 16488 0128 C5E90099 		strd	r9, r9, [r5]
 16489              	.LBE9062:
 16490              		.loc 30 353 68 view .LVU3812
 16491 012c 96E7     		b	.L714
 16492              	.LVL1059:
 16493              	.L730:
 16494              		.loc 30 353 68 view .LVU3813
 16495              	.LBE9061:
 16496              	.LBE9060:
 16497              	.LBB9064:
 16498              	.LBB9058:
 16499              	.LBB9057:
 16500              	.LBB9056:
 16501              	.LBB9055:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 679


 16502              	.LBB9053:
 16503              	.LBI9053:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16504              		.loc 19 401 7 is_stmt 1 view .LVU3814
 16505              	.LBB9054:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16506              		.loc 19 403 51 is_stmt 0 view .LVU3815
 16507 012e A8EB0A00 		sub	r0, r8, r10
 16508              	.LVL1060:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16509              		.loc 19 403 51 view .LVU3816
 16510              	.LBE9054:
 16511              	.LBE9053:
 16512 0132 F5E7     		b	.L731
 16513              	.LVL1061:
 16514              	.L756:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16515              		.loc 19 403 51 view .LVU3817
 16516              	.LBE9055:
 16517              	.LBE9056:
 16518              	.LBE9057:
 16519              	.LBE9058:
 16520              	.LBE9064:
 16521              	.LBB9065:
 16522              	.LBI9065:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 16523              		.loc 30 336 18 is_stmt 1 view .LVU3818
 16524              	.LBB9066:
 16525              	.LBB9067:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 16526              		.loc 30 337 51 is_stmt 0 view .LVU3819
 16527 0134 C5E90034 		strd	r3, r4, [r5]
 16528              	.LVL1062:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 16529              		.loc 30 337 51 view .LVU3820
 16530 0138 90E7     		b	.L714
 16531              	.LVL1063:
 16532              	.L755:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 16533              		.loc 30 337 51 view .LVU3821
 16534              	.LBE9067:
 16535              	.LBE9066:
 16536              	.LBE9065:
 16537              	.LBE9069:
 16538              	.LBE9097:
 16539              	.LBB9098:
 16540              	.LBB9091:
 16541              	.LBI9091:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 16542              		.loc 30 336 18 is_stmt 1 view .LVU3822
 16543              	.LBB9092:
 16544              	.LBB9093:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 16545              		.loc 30 337 51 is_stmt 0 view .LVU3823
 16546 013a C5E90039 		strd	r3, r9, [r5]
 16547              	.LVL1064:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 680


 16548              		.loc 30 337 51 view .LVU3824
 16549 013e 8DE7     		b	.L714
 16550              	.LBE9093:
 16551              	.LBE9092:
 16552              	.LBE9091:
 16553              	.LBE9098:
 16554              	.LBE9113:
 16555              	.LBE9124:
 16556              		.cfi_endproc
 16557              	.LFE5959:
 16559              		.section	.rodata._Z41__static_initialization_and_destruction_0ii.constprop.0.str1.4,"aMS",%progbit
 16560              		.align	2
 16561              	.LC18:
 16562 0000 4300     		.ascii	"C\000"
 16563 0002 0000     		.align	2
 16564              	.LC19:
 16565 0004 432300   		.ascii	"C#\000"
 16566 0007 00       		.align	2
 16567              	.LC20:
 16568 0008 4400     		.ascii	"D\000"
 16569 000a 0000     		.align	2
 16570              	.LC21:
 16571 000c 442300   		.ascii	"D#\000"
 16572 000f 00       		.align	2
 16573              	.LC22:
 16574 0010 4500     		.ascii	"E\000"
 16575 0012 0000     		.align	2
 16576              	.LC23:
 16577 0014 4600     		.ascii	"F\000"
 16578 0016 0000     		.align	2
 16579              	.LC24:
 16580 0018 462300   		.ascii	"F#\000"
 16581 001b 00       		.align	2
 16582              	.LC25:
 16583 001c 4700     		.ascii	"G\000"
 16584 001e 0000     		.align	2
 16585              	.LC26:
 16586 0020 472300   		.ascii	"G#\000"
 16587 0023 00       		.align	2
 16588              	.LC27:
 16589 0024 4100     		.ascii	"A\000"
 16590 0026 0000     		.align	2
 16591              	.LC28:
 16592 0028 412300   		.ascii	"A#\000"
 16593 002b 00       		.align	2
 16594              	.LC29:
 16595 002c 4200     		.ascii	"B\000"
 16596 002e 0000     		.align	2
 16597              	.LC30:
 16598 0030 433000   		.ascii	"C0\000"
 16599 0033 00       		.align	2
 16600              	.LC31:
 16601 0034 43233000 		.ascii	"C#0\000"
 16602              		.align	2
 16603              	.LC32:
 16604 0038 443000   		.ascii	"D0\000"
 16605 003b 00       		.align	2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 681


 16606              	.LC33:
 16607 003c 44233000 		.ascii	"D#0\000"
 16608              		.align	2
 16609              	.LC34:
 16610 0040 453000   		.ascii	"E0\000"
 16611 0043 00       		.align	2
 16612              	.LC35:
 16613 0044 463000   		.ascii	"F0\000"
 16614 0047 00       		.align	2
 16615              	.LC36:
 16616 0048 46233000 		.ascii	"F#0\000"
 16617              		.align	2
 16618              	.LC37:
 16619 004c 473000   		.ascii	"G0\000"
 16620 004f 00       		.align	2
 16621              	.LC38:
 16622 0050 47233000 		.ascii	"G#0\000"
 16623              		.align	2
 16624              	.LC39:
 16625 0054 413000   		.ascii	"A0\000"
 16626 0057 00       		.align	2
 16627              	.LC40:
 16628 0058 41233000 		.ascii	"A#0\000"
 16629              		.align	2
 16630              	.LC41:
 16631 005c 423000   		.ascii	"B0\000"
 16632 005f 00       		.align	2
 16633              	.LC42:
 16634 0060 433100   		.ascii	"C1\000"
 16635 0063 00       		.align	2
 16636              	.LC43:
 16637 0064 43233100 		.ascii	"C#1\000"
 16638              		.align	2
 16639              	.LC44:
 16640 0068 443100   		.ascii	"D1\000"
 16641 006b 00       		.align	2
 16642              	.LC45:
 16643 006c 44233100 		.ascii	"D#1\000"
 16644              		.align	2
 16645              	.LC46:
 16646 0070 453100   		.ascii	"E1\000"
 16647 0073 00       		.align	2
 16648              	.LC47:
 16649 0074 463100   		.ascii	"F1\000"
 16650 0077 00       		.align	2
 16651              	.LC48:
 16652 0078 46233100 		.ascii	"F#1\000"
 16653              		.align	2
 16654              	.LC49:
 16655 007c 473100   		.ascii	"G1\000"
 16656 007f 00       		.align	2
 16657              	.LC50:
 16658 0080 47233100 		.ascii	"G#1\000"
 16659              		.align	2
 16660              	.LC51:
 16661 0084 413100   		.ascii	"A1\000"
 16662 0087 00       		.align	2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 682


 16663              	.LC52:
 16664 0088 41233100 		.ascii	"A#1\000"
 16665              		.align	2
 16666              	.LC53:
 16667 008c 423100   		.ascii	"B1\000"
 16668 008f 00       		.align	2
 16669              	.LC54:
 16670 0090 433200   		.ascii	"C2\000"
 16671 0093 00       		.align	2
 16672              	.LC55:
 16673 0094 43233200 		.ascii	"C#2\000"
 16674              		.align	2
 16675              	.LC56:
 16676 0098 443200   		.ascii	"D2\000"
 16677 009b 00       		.align	2
 16678              	.LC57:
 16679 009c 44233200 		.ascii	"D#2\000"
 16680              		.align	2
 16681              	.LC58:
 16682 00a0 453200   		.ascii	"E2\000"
 16683 00a3 00       		.align	2
 16684              	.LC59:
 16685 00a4 463200   		.ascii	"F2\000"
 16686 00a7 00       		.align	2
 16687              	.LC60:
 16688 00a8 46233200 		.ascii	"F#2\000"
 16689              		.align	2
 16690              	.LC61:
 16691 00ac 473200   		.ascii	"G2\000"
 16692 00af 00       		.align	2
 16693              	.LC62:
 16694 00b0 47233200 		.ascii	"G#2\000"
 16695              		.align	2
 16696              	.LC63:
 16697 00b4 413200   		.ascii	"A2\000"
 16698 00b7 00       		.align	2
 16699              	.LC64:
 16700 00b8 41233200 		.ascii	"A#2\000"
 16701              		.align	2
 16702              	.LC65:
 16703 00bc 423200   		.ascii	"B2\000"
 16704 00bf 00       		.align	2
 16705              	.LC66:
 16706 00c0 433300   		.ascii	"C3\000"
 16707 00c3 00       		.align	2
 16708              	.LC67:
 16709 00c4 43233300 		.ascii	"C#3\000"
 16710              		.align	2
 16711              	.LC68:
 16712 00c8 443300   		.ascii	"D3\000"
 16713 00cb 00       		.align	2
 16714              	.LC69:
 16715 00cc 44233300 		.ascii	"D#3\000"
 16716              		.align	2
 16717              	.LC70:
 16718 00d0 453300   		.ascii	"E3\000"
 16719 00d3 00       		.align	2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 683


 16720              	.LC71:
 16721 00d4 463300   		.ascii	"F3\000"
 16722 00d7 00       		.align	2
 16723              	.LC72:
 16724 00d8 46233300 		.ascii	"F#3\000"
 16725              		.align	2
 16726              	.LC73:
 16727 00dc 473300   		.ascii	"G3\000"
 16728 00df 00       		.align	2
 16729              	.LC74:
 16730 00e0 47233300 		.ascii	"G#3\000"
 16731              		.align	2
 16732              	.LC75:
 16733 00e4 413300   		.ascii	"A3\000"
 16734 00e7 00       		.align	2
 16735              	.LC76:
 16736 00e8 41233300 		.ascii	"A#3\000"
 16737              		.align	2
 16738              	.LC77:
 16739 00ec 423300   		.ascii	"B3\000"
 16740 00ef 00       		.align	2
 16741              	.LC78:
 16742 00f0 433400   		.ascii	"C4\000"
 16743 00f3 00       		.align	2
 16744              	.LC79:
 16745 00f4 43233400 		.ascii	"C#4\000"
 16746              		.align	2
 16747              	.LC80:
 16748 00f8 443400   		.ascii	"D4\000"
 16749 00fb 00       		.align	2
 16750              	.LC81:
 16751 00fc 44233400 		.ascii	"D#4\000"
 16752              		.align	2
 16753              	.LC82:
 16754 0100 453400   		.ascii	"E4\000"
 16755 0103 00       		.align	2
 16756              	.LC83:
 16757 0104 463400   		.ascii	"F4\000"
 16758 0107 00       		.align	2
 16759              	.LC84:
 16760 0108 46233400 		.ascii	"F#4\000"
 16761              		.align	2
 16762              	.LC85:
 16763 010c 473400   		.ascii	"G4\000"
 16764 010f 00       		.align	2
 16765              	.LC86:
 16766 0110 47233400 		.ascii	"G#4\000"
 16767              		.align	2
 16768              	.LC87:
 16769 0114 413400   		.ascii	"A4\000"
 16770 0117 00       		.align	2
 16771              	.LC88:
 16772 0118 41233400 		.ascii	"A#4\000"
 16773              		.align	2
 16774              	.LC89:
 16775 011c 423400   		.ascii	"B4\000"
 16776 011f 00       		.align	2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 684


 16777              	.LC90:
 16778 0120 4D616A6F 		.ascii	"Major\000"
 16778      7200
 16779 0126 0000     		.align	2
 16780              	.LC91:
 16781 0128 4D696E6F 		.ascii	"Minor\000"
 16781      7200
 16782 012e 0000     		.align	2
 16783              	.LC92:
 16784 0130 446F7269 		.ascii	"Dorian\000"
 16784      616E00
 16785 0137 00       		.align	2
 16786              	.LC93:
 16787 0138 50687972 		.ascii	"Phyrgi\000"
 16787      676900
 16788 013f 00       		.align	2
 16789              	.LC94:
 16790 0140 4C796469 		.ascii	"Lydian\000"
 16790      616E00
 16791 0147 00       		.align	2
 16792              	.LC95:
 16793 0148 4D69786F 		.ascii	"Mixo\000"
 16793      00
 16794 014d 000000   		.align	2
 16795              	.LC96:
 16796 0150 4C6F6372 		.ascii	"Locri\000"
 16796      6900
 16797 0156 0000     		.align	2
 16798              	.LC97:
 16799 0158 4E6F6E65 		.ascii	"None\000"
 16799      00
 16800 015d 000000   		.align	2
 16801              	.LC98:
 16802 0160 44726F70 		.ascii	"Drop 2\000"
 16802      203200
 16803 0167 00       		.align	2
 16804              	.LC99:
 16805 0168 44726F70 		.ascii	"Drop 3\000"
 16805      203300
 16806 016f 00       		.align	2
 16807              	.LC100:
 16808 0170 44726F70 		.ascii	"Drop 4\000"
 16808      203400
 16809 0177 00       		.align	2
 16810              	.LC101:
 16811 0178 3100     		.ascii	"1\000"
 16812 017a 0000     		.align	2
 16813              	.LC102:
 16814 017c 3200     		.ascii	"2\000"
 16815 017e 0000     		.align	2
 16816              	.LC103:
 16817 0180 3400     		.ascii	"4\000"
 16818 0182 0000     		.align	2
 16819              	.LC104:
 16820 0184 3800     		.ascii	"8\000"
 16821 0186 0000     		.align	2
 16822              	.LC105:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 685


 16823 0188 313600   		.ascii	"16\000"
 16824 018b 00       		.align	2
 16825              	.LC106:
 16826 018c 54726961 		.ascii	"Triad\000"
 16826      6400
 16827 0192 0000     		.align	2
 16828              	.LC107:
 16829 0194 54726961 		.ascii	"Triad+\000"
 16829      642B00
 16830 019b 00       		.align	2
 16831              	.LC108:
 16832 019c 37746800 		.ascii	"7th\000"
 16833              		.align	2
 16834              	.LC109:
 16835 01a0 3774682B 		.ascii	"7th+9th\000"
 16835      39746800 
 16836              		.align	2
 16837              	.LC110:
 16838 01a8 31317468 		.ascii	"11th\000"
 16838      00
 16839 01ad 000000   		.align	2
 16840              	.LC111:
 16841 01b0 31337468 		.ascii	"13th\000"
 16841      00
 16842 01b5 000000   		.align	2
 16843              	.LC112:
 16844 01b8 36746800 		.ascii	"6th\000"
 16845              		.align	2
 16846              	.LC113:
 16847 01bc 53757332 		.ascii	"Sus2\000"
 16847      00
 16848 01c1 000000   		.align	2
 16849              	.LC114:
 16850 01c4 53757334 		.ascii	"Sus4\000"
 16850      00
 16851 01c9 000000   		.align	2
 16852              	.LC115:
 16853 01cc 506F7765 		.ascii	"Power\000"
 16853      7200
 16854 01d2 0000     		.align	2
 16855              	.LC116:
 16856 01d4 5368656C 		.ascii	"Shell 1\000"
 16856      6C203100 
 16857              		.align	2
 16858              	.LC117:
 16859 01dc 5368656C 		.ascii	"Shell 2\000"
 16859      6C203200 
 16860              		.align	2
 16861              	.LC118:
 16862 01e4 557000   		.ascii	"Up\000"
 16863 01e7 00       		.align	2
 16864              	.LC119:
 16865 01e8 446F776E 		.ascii	"Down\000"
 16865      00
 16866 01ed 000000   		.align	2
 16867              	.LC120:
 16868 01f0 552B4420 		.ascii	"U+D In\000"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 686


 16868      496E00
 16869 01f7 00       		.align	2
 16870              	.LC121:
 16871 01f8 552B4420 		.ascii	"U+D Ex\000"
 16871      457800
 16872 01ff 00       		.align	2
 16873              	.LC122:
 16874 0200 52616E64 		.ascii	"Random\000"
 16874      6F6D00
 16875 0207 00       		.align	2
 16876              	.LC123:
 16877 0208 53772032 		.ascii	"Sw 25%\000"
 16877      352500
 16878 020f 00       		.align	2
 16879              	.LC124:
 16880 0210 53772035 		.ascii	"Sw 50%\000"
 16880      302500
 16881 0217 00       		.align	2
 16882              	.LC125:
 16883 0218 53772037 		.ascii	"Sw 75%\000"
 16883      352500
 16884 021f 00       		.align	2
 16885              	.LC126:
 16886 0220 53772031 		.ascii	"Sw 100%\000"
 16886      30302500 
 16887              		.align	2
 16888              	.LC127:
 16889 0228 3000     		.ascii	"0\000"
 16890 022a 0000     		.align	2
 16891              	.LC128:
 16892 022c 2B3100   		.ascii	"+1\000"
 16893 022f 00       		.align	2
 16894              	.LC129:
 16895 0230 2B3200   		.ascii	"+2\000"
 16896              		.section	.text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0,"ax",%progbits
 16897              		.align	1
 16898              		.p2align 2,,3
 16899              		.syntax unified
 16900              		.thumb
 16901              		.thumb_func
 16902              		.fpu fpv5-d16
 16904              	_Z41__static_initialization_and_destruction_0ii.constprop.0:
 16905              	.LFB6221:
 16906              		.loc 14 276 1 is_stmt 1 view -0
 16907              		.cfi_startproc
 16908              		@ args = 0, pretend = 0, frame = 688
 16909              		@ frame_needed = 0, uses_anonymous_args = 0
 16910              	.LVL1065:
 16911              	.LBB10099:
 16912              	.LBI10099:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 16913              		.loc 21 144 7 view .LVU3826
 16914              	.LBB10100:
 16915              	.LBI10100:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16916              		.loc 22 79 7 view .LVU3827
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 687


 16917              		.loc 22 79 7 is_stmt 0 view .LVU3828
 16918              	.LBE10100:
 16919              	.LBE10099:
 16920              		.loc 14 276 1 view .LVU3829
 16921 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 16922              		.cfi_def_cfa_offset 36
 16923              		.cfi_offset 4, -36
 16924              		.cfi_offset 5, -32
 16925              		.cfi_offset 6, -28
 16926              		.cfi_offset 7, -24
 16927              		.cfi_offset 8, -20
 16928              		.cfi_offset 9, -16
 16929              		.cfi_offset 10, -12
 16930              		.cfi_offset 11, -8
 16931              		.cfi_offset 14, -4
 16932 0004 ADF52D7D 		sub	sp, sp, #692
 16933              		.cfi_def_cfa_offset 728
 16934              		.file 41 "theory.h"
   1:theory.h      **** /* 
   2:theory.h      ****  * Copyright (C) 2021 Evan Pernu - All Rights Reserved
   3:theory.h      ****  * You may use, distribute and modify this code under the
   4:theory.h      ****  * terms of the GNU AGPLv3 license.
   5:theory.h      ****  * 
   6:theory.h      ****  * You should have received a copy of the GNU AGPLv3 license with
   7:theory.h      ****  * this file (LICENSE.md). If not, please write to: evanpernu@gmail.com, 
   8:theory.h      ****  * or visit: https://www.gnu.org/licenses/agpl-3.0.en.html
   9:theory.h      ****  */
  10:theory.h      **** 
  11:theory.h      **** #pragma once
  12:theory.h      **** 
  13:theory.h      **** #include <map>
  14:theory.h      **** #include <vector>
  15:theory.h      **** #include <string>
  16:theory.h      **** 
  17:theory.h      **** namespace jellybeans {
  18:theory.h      **** 
  19:theory.h      ****     const int MAX_NOTE = 60;
  20:theory.h      ****     const int MIN_NOTE = 0;
  21:theory.h      **** 
  22:theory.h      ****     // Returns true if the given note is diatonic to the given mode
  23:theory.h      ****     // @param a note's index in semitones from C or C0
  24:theory.h      ****     // @param an element of mu::allModes
  25:theory.h      ****     bool isDiatonic(int, std::string);
  26:theory.h      **** 
  27:theory.h      ****     // Note that the indices of these elements also correspond to
  28:theory.h      ****     // their semitone distances from C.
  29:theory.h      ****     const std::vector<std::string> allNotes {
  30:theory.h      ****         "C",
  31:theory.h      ****         "C#",
  32:theory.h      ****         "D",
  33:theory.h      ****         "D#",
  34:theory.h      ****         "E",
  35:theory.h      ****         "F",
  36:theory.h      ****         "F#",
  37:theory.h      ****         "G",
  38:theory.h      ****         "G#",
  39:theory.h      ****         "A",
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 688


  40:theory.h      ****         "A#",
  41:theory.h      ****         "B"
  42:theory.h      ****     };
 16935              		.loc 41 42 5 view .LVU3830
 16936 0008 A849     		ldr	r1, .L813
 16937 000a 64AC     		add	r4, sp, #400
 16938 000c ACAD     		add	r5, sp, #688
 16939 000e 2046     		mov	r0, r4
 16940 0010 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 16941              	.LVL1066:
 16942              	.LBB10101:
 16943              	.LBI10101:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 16944              		.loc 21 144 7 is_stmt 1 view .LVU3831
 16945              	.LBB10102:
 16946              	.LBI10102:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16947              		.loc 22 79 7 view .LVU3832
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16948              		.loc 22 79 7 is_stmt 0 view .LVU3833
 16949              	.LBE10102:
 16950              	.LBE10101:
 16951              		.loc 41 42 5 view .LVU3834
 16952 0014 A649     		ldr	r1, .L813+4
 16953 0016 6AA8     		add	r0, sp, #424
 16954 0018 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 16955              	.LVL1067:
 16956              	.LBB10103:
 16957              	.LBI10103:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 16958              		.loc 21 144 7 is_stmt 1 view .LVU3835
 16959              	.LBB10104:
 16960              	.LBI10104:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16961              		.loc 22 79 7 view .LVU3836
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16962              		.loc 22 79 7 is_stmt 0 view .LVU3837
 16963              	.LBE10104:
 16964              	.LBE10103:
 16965              		.loc 41 42 5 view .LVU3838
 16966 001c A549     		ldr	r1, .L813+8
 16967 001e 70A8     		add	r0, sp, #448
 16968 0020 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 16969              	.LVL1068:
 16970              	.LBB10105:
 16971              	.LBI10105:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 16972              		.loc 21 144 7 is_stmt 1 view .LVU3839
 16973              	.LBB10106:
 16974              	.LBI10106:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16975              		.loc 22 79 7 view .LVU3840
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16976              		.loc 22 79 7 is_stmt 0 view .LVU3841
 16977              	.LBE10106:
 16978              	.LBE10105:
 16979              		.loc 41 42 5 view .LVU3842
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 689


 16980 0024 A449     		ldr	r1, .L813+12
 16981 0026 76A8     		add	r0, sp, #472
 16982 0028 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 16983              	.LVL1069:
 16984              	.LBB10107:
 16985              	.LBI10107:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 16986              		.loc 21 144 7 is_stmt 1 view .LVU3843
 16987              	.LBB10108:
 16988              	.LBI10108:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16989              		.loc 22 79 7 view .LVU3844
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16990              		.loc 22 79 7 is_stmt 0 view .LVU3845
 16991              	.LBE10108:
 16992              	.LBE10107:
 16993              		.loc 41 42 5 view .LVU3846
 16994 002c A349     		ldr	r1, .L813+16
 16995 002e 7CA8     		add	r0, sp, #496
 16996 0030 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 16997              	.LVL1070:
 16998              	.LBB10109:
 16999              	.LBI10109:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17000              		.loc 21 144 7 is_stmt 1 view .LVU3847
 17001              	.LBB10110:
 17002              	.LBI10110:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17003              		.loc 22 79 7 view .LVU3848
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17004              		.loc 22 79 7 is_stmt 0 view .LVU3849
 17005              	.LBE10110:
 17006              	.LBE10109:
 17007              		.loc 41 42 5 view .LVU3850
 17008 0034 A249     		ldr	r1, .L813+20
 17009 0036 82A8     		add	r0, sp, #520
 17010 0038 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17011              	.LVL1071:
 17012              	.LBB10111:
 17013              	.LBI10111:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17014              		.loc 21 144 7 is_stmt 1 view .LVU3851
 17015              	.LBB10112:
 17016              	.LBI10112:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17017              		.loc 22 79 7 view .LVU3852
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17018              		.loc 22 79 7 is_stmt 0 view .LVU3853
 17019              	.LBE10112:
 17020              	.LBE10111:
 17021              		.loc 41 42 5 view .LVU3854
 17022 003c A149     		ldr	r1, .L813+24
 17023 003e 88A8     		add	r0, sp, #544
 17024 0040 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17025              	.LVL1072:
 17026              	.LBB10113:
 17027              	.LBI10113:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 690


 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17028              		.loc 21 144 7 is_stmt 1 view .LVU3855
 17029              	.LBB10114:
 17030              	.LBI10114:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17031              		.loc 22 79 7 view .LVU3856
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17032              		.loc 22 79 7 is_stmt 0 view .LVU3857
 17033              	.LBE10114:
 17034              	.LBE10113:
 17035              		.loc 41 42 5 view .LVU3858
 17036 0044 A049     		ldr	r1, .L813+28
 17037 0046 8EA8     		add	r0, sp, #568
 17038 0048 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17039              	.LVL1073:
 17040              	.LBB10115:
 17041              	.LBI10115:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17042              		.loc 21 144 7 is_stmt 1 view .LVU3859
 17043              	.LBB10116:
 17044              	.LBI10116:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17045              		.loc 22 79 7 view .LVU3860
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17046              		.loc 22 79 7 is_stmt 0 view .LVU3861
 17047              	.LBE10116:
 17048              	.LBE10115:
 17049              		.loc 41 42 5 view .LVU3862
 17050 004c 9F49     		ldr	r1, .L813+32
 17051 004e 94A8     		add	r0, sp, #592
 17052 0050 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17053              	.LVL1074:
 17054              	.LBB10117:
 17055              	.LBI10117:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17056              		.loc 21 144 7 is_stmt 1 view .LVU3863
 17057              	.LBB10118:
 17058              	.LBI10118:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17059              		.loc 22 79 7 view .LVU3864
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17060              		.loc 22 79 7 is_stmt 0 view .LVU3865
 17061              	.LBE10118:
 17062              	.LBE10117:
 17063              		.loc 41 42 5 view .LVU3866
 17064 0054 9E49     		ldr	r1, .L813+36
 17065 0056 9AA8     		add	r0, sp, #616
 17066 0058 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17067              	.LVL1075:
 17068              	.LBB10119:
 17069              	.LBI10119:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17070              		.loc 21 144 7 is_stmt 1 view .LVU3867
 17071              	.LBB10120:
 17072              	.LBI10120:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17073              		.loc 22 79 7 view .LVU3868
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 691


  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17074              		.loc 22 79 7 is_stmt 0 view .LVU3869
 17075              	.LBE10120:
 17076              	.LBE10119:
 17077              		.loc 41 42 5 view .LVU3870
 17078 005c 9D49     		ldr	r1, .L813+40
 17079 005e A0A8     		add	r0, sp, #640
 17080 0060 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17081              	.LVL1076:
 17082              	.LBB10121:
 17083              	.LBI10121:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17084              		.loc 21 144 7 is_stmt 1 view .LVU3871
 17085              	.LBB10122:
 17086              	.LBI10122:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17087              		.loc 22 79 7 view .LVU3872
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17088              		.loc 22 79 7 is_stmt 0 view .LVU3873
 17089              	.LBE10122:
 17090              	.LBE10121:
 17091              		.loc 41 42 5 view .LVU3874
 17092 0064 9C49     		ldr	r1, .L813+44
 17093 0066 A6A8     		add	r0, sp, #664
 17094 0068 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17095              	.LVL1077:
 17096 006c 0C23     		movs	r3, #12
 17097 006e 1AAA     		add	r2, sp, #104
 17098 0070 1A94     		str	r4, [sp, #104]
 17099 0072 1B93     		str	r3, [sp, #108]
 17100              	.LVL1078:
 17101              	.LBB10123:
 17102              	.LBI10123:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17103              		.loc 21 144 7 is_stmt 1 view .LVU3875
 17104              	.LBB10124:
 17105              	.LBI10124:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17106              		.loc 22 79 7 view .LVU3876
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17107              		.loc 22 79 7 is_stmt 0 view .LVU3877
 17108              	.LBE10124:
 17109              	.LBE10123:
 17110              		.loc 41 42 5 view .LVU3878
 17111 0074 5DAB     		add	r3, sp, #372
 17112 0076 9948     		ldr	r0, .L813+48
 17113 0078 06CA     		ldm	r2, {r1, r2}
 17114 007a FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 17115              	.LVL1079:
 17116              	.LBB10125:
 17117              	.LBI10125:
 17118              		.loc 21 162 7 is_stmt 1 view .LVU3879
 17119              	.LBB10126:
 17120              	.LBI10126:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17121              		.loc 22 89 7 view .LVU3880
 17122              	.L758:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 692


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17123              		.loc 22 89 7 is_stmt 0 view .LVU3881
 17124              	.LBE10126:
 17125              	.LBE10125:
 17126              		.loc 41 42 5 view .LVU3882
 17127 007e 183D     		subs	r5, r5, #24
 17128              	.LVL1080:
 17129              	.LBB10127:
 17130              	.LBI10127:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 17131              		.loc 19 657 7 is_stmt 1 view .LVU3883
 17132              	.LBB10128:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17133              		.loc 19 658 19 is_stmt 0 view .LVU3884
 17134 0080 2846     		mov	r0, r5
 17135 0082 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 17136              	.LVL1081:
 17137              	.LBB10129:
 17138              	.LBI10129:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17139              		.loc 19 150 14 is_stmt 1 view .LVU3885
 17140              	.LBB10130:
 17141              	.LBI10130:
 17142              		.loc 21 162 7 view .LVU3886
 17143              	.LBB10131:
 17144              	.LBI10131:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17145              		.loc 22 89 7 view .LVU3887
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17146              		.loc 22 89 7 is_stmt 0 view .LVU3888
 17147              	.LBE10131:
 17148              	.LBE10130:
 17149              	.LBE10129:
 17150              	.LBE10128:
 17151              	.LBE10127:
 17152              		.loc 41 42 5 view .LVU3889
 17153 0086 A542     		cmp	r5, r4
 17154 0088 F9D1     		bne	.L758
 17155              	.LVL1082:
 17156              	.LBB10132:
 17157              	.LBI10132:
 17158              		.loc 21 162 7 is_stmt 1 view .LVU3890
 17159              	.LBB10133:
 17160              	.LBI10133:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17161              		.loc 22 89 7 view .LVU3891
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17162              		.loc 22 89 7 is_stmt 0 view .LVU3892
 17163              	.LBE10133:
 17164              	.LBE10132:
 17165              	.LBB10134:
 17166              	.LBI10134:
 17167              		.loc 21 162 7 is_stmt 1 view .LVU3893
 17168              	.LBB10135:
 17169              	.LBI10135:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17170              		.loc 22 89 7 view .LVU3894
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 693


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17171              		.loc 22 89 7 is_stmt 0 view .LVU3895
 17172              	.LBE10135:
 17173              	.LBE10134:
 17174              	.LBB10136:
 17175              	.LBI10136:
 17176              		.loc 21 162 7 is_stmt 1 view .LVU3896
 17177              	.LBB10137:
 17178              	.LBI10137:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17179              		.loc 22 89 7 view .LVU3897
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17180              		.loc 22 89 7 is_stmt 0 view .LVU3898
 17181              	.LBE10137:
 17182              	.LBE10136:
 17183              	.LBB10138:
 17184              	.LBI10138:
 17185              		.loc 21 162 7 is_stmt 1 view .LVU3899
 17186              	.LBB10139:
 17187              	.LBI10139:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17188              		.loc 22 89 7 view .LVU3900
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17189              		.loc 22 89 7 is_stmt 0 view .LVU3901
 17190              	.LBE10139:
 17191              	.LBE10138:
 17192              	.LBB10140:
 17193              	.LBI10140:
 17194              		.loc 21 162 7 is_stmt 1 view .LVU3902
 17195              	.LBB10141:
 17196              	.LBI10141:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17197              		.loc 22 89 7 view .LVU3903
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17198              		.loc 22 89 7 is_stmt 0 view .LVU3904
 17199              	.LBE10141:
 17200              	.LBE10140:
 17201              	.LBB10142:
 17202              	.LBI10142:
 17203              		.loc 21 162 7 is_stmt 1 view .LVU3905
 17204              	.LBB10143:
 17205              	.LBI10143:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17206              		.loc 22 89 7 view .LVU3906
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17207              		.loc 22 89 7 is_stmt 0 view .LVU3907
 17208              	.LBE10143:
 17209              	.LBE10142:
 17210              	.LBB10144:
 17211              	.LBI10144:
 17212              		.loc 21 162 7 is_stmt 1 view .LVU3908
 17213              	.LBB10145:
 17214              	.LBI10145:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17215              		.loc 22 89 7 view .LVU3909
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17216              		.loc 22 89 7 is_stmt 0 view .LVU3910
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 694


 17217              	.LBE10145:
 17218              	.LBE10144:
 17219              	.LBB10146:
 17220              	.LBI10146:
 17221              		.loc 21 162 7 is_stmt 1 view .LVU3911
 17222              	.LBB10147:
 17223              	.LBI10147:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17224              		.loc 22 89 7 view .LVU3912
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17225              		.loc 22 89 7 is_stmt 0 view .LVU3913
 17226              	.LBE10147:
 17227              	.LBE10146:
 17228              	.LBB10148:
 17229              	.LBI10148:
 17230              		.loc 21 162 7 is_stmt 1 view .LVU3914
 17231              	.LBB10149:
 17232              	.LBI10149:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17233              		.loc 22 89 7 view .LVU3915
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17234              		.loc 22 89 7 is_stmt 0 view .LVU3916
 17235              	.LBE10149:
 17236              	.LBE10148:
 17237              	.LBB10150:
 17238              	.LBI10150:
 17239              		.loc 21 162 7 is_stmt 1 view .LVU3917
 17240              	.LBB10151:
 17241              	.LBI10151:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17242              		.loc 22 89 7 view .LVU3918
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17243              		.loc 22 89 7 is_stmt 0 view .LVU3919
 17244              	.LBE10151:
 17245              	.LBE10150:
 17246              	.LBB10152:
 17247              	.LBI10152:
 17248              		.loc 21 162 7 is_stmt 1 view .LVU3920
 17249              	.LBB10153:
 17250              	.LBI10153:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17251              		.loc 22 89 7 view .LVU3921
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17252              		.loc 22 89 7 is_stmt 0 view .LVU3922
 17253              	.LBE10153:
 17254              	.LBE10152:
 17255              	.LBB10154:
 17256              	.LBI10154:
 17257              		.loc 21 162 7 is_stmt 1 view .LVU3923
 17258              	.LBB10155:
 17259              	.LBI10155:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17260              		.loc 22 89 7 view .LVU3924
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17261              		.loc 22 89 7 is_stmt 0 view .LVU3925
 17262              	.LBE10155:
 17263              	.LBE10154:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 695


  29:theory.h      ****         "C",
 17264              		.loc 41 29 36 view .LVU3926
 17265 008a 954A     		ldr	r2, .L813+52
 17266 008c 88AE     		add	r6, sp, #544
 17267 008e 9549     		ldr	r1, .L813+56
 17268 0090 9248     		ldr	r0, .L813+48
 17269 0092 FFF7FEFF 		bl	__aeabi_atexit
 17270              	.LVL1083:
 17271              	.LBB10156:
 17272              	.LBI10156:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17273              		.loc 21 144 7 is_stmt 1 view .LVU3927
 17274              	.LBB10157:
 17275              	.LBI10157:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17276              		.loc 22 79 7 view .LVU3928
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17277              		.loc 22 79 7 is_stmt 0 view .LVU3929
 17278              	.LBE10157:
 17279              	.LBE10156:
  43:theory.h      **** 
  44:theory.h      ****     // Note that the indices of these elements also correspond to
  45:theory.h      ****     // their semitone distances from C0.
  46:theory.h      ****     const std::array<std::string, 60> allNotes5Oct {
  47:theory.h      ****         "C0",
  48:theory.h      ****         "C#0",
  49:theory.h      ****         "D0",
  50:theory.h      ****         "D#0",
  51:theory.h      ****         "E0",
  52:theory.h      ****         "F0",
  53:theory.h      ****         "F#0",
  54:theory.h      ****         "G0",
  55:theory.h      ****         "G#0",
  56:theory.h      ****         "A0",
  57:theory.h      ****         "A#0",
  58:theory.h      ****         "B0",
  59:theory.h      ****         "C1",
  60:theory.h      ****         "C#1",
  61:theory.h      ****         "D1",
  62:theory.h      ****         "D#1",
  63:theory.h      ****         "E1",
  64:theory.h      ****         "F1",
  65:theory.h      ****         "F#1",
  66:theory.h      ****         "G1",
  67:theory.h      ****         "G#1",
  68:theory.h      ****         "A1",
  69:theory.h      ****         "A#1",
  70:theory.h      ****         "B1",
  71:theory.h      ****         "C2",
  72:theory.h      ****         "C#2",
  73:theory.h      ****         "D2",
  74:theory.h      ****         "D#2",
  75:theory.h      ****         "E2",
  76:theory.h      ****         "F2",
  77:theory.h      ****         "F#2",
  78:theory.h      ****         "G2",
  79:theory.h      ****         "G#2",
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 696


  80:theory.h      ****         "A2",
  81:theory.h      ****         "A#2",
  82:theory.h      ****         "B2",
  83:theory.h      ****         "C3",
  84:theory.h      ****         "C#3",
  85:theory.h      ****         "D3",
  86:theory.h      ****         "D#3",
  87:theory.h      ****         "E3",
  88:theory.h      ****         "F3",
  89:theory.h      ****         "F#3",
  90:theory.h      ****         "G3",
  91:theory.h      ****         "G#3",
  92:theory.h      ****         "A3",
  93:theory.h      ****         "A#3",
  94:theory.h      ****         "B3",
  95:theory.h      ****         "C4",
  96:theory.h      ****         "C#4",
  97:theory.h      ****         "D4",
  98:theory.h      ****         "D#4",
  99:theory.h      ****         "E4",
 100:theory.h      ****         "F4",
 101:theory.h      ****         "F#4",
 102:theory.h      ****         "G4",
 103:theory.h      ****         "G#4",
 104:theory.h      ****         "A4",
 105:theory.h      ****         "A#4",
 106:theory.h      ****         "B4"
 107:theory.h      ****     };
 17280              		.loc 41 107 5 view .LVU3930
 17281 0096 9449     		ldr	r1, .L813+60
 17282 0098 9448     		ldr	r0, .L813+64
 17283 009a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17284              	.LVL1084:
 17285              	.LBB10158:
 17286              	.LBI10158:
 17287              		.loc 21 162 7 is_stmt 1 view .LVU3931
 17288              	.LBB10159:
 17289              	.LBI10159:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17290              		.loc 22 89 7 view .LVU3932
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17291              		.loc 22 89 7 is_stmt 0 view .LVU3933
 17292              	.LBE10159:
 17293              	.LBE10158:
 17294              	.LBB10160:
 17295              	.LBI10160:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17296              		.loc 21 144 7 is_stmt 1 view .LVU3934
 17297              	.LBB10161:
 17298              	.LBI10161:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17299              		.loc 22 79 7 view .LVU3935
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17300              		.loc 22 79 7 is_stmt 0 view .LVU3936
 17301              	.LBE10161:
 17302              	.LBE10160:
 17303              		.loc 41 107 5 view .LVU3937
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 697


 17304 009e 9449     		ldr	r1, .L813+68
 17305 00a0 9448     		ldr	r0, .L813+72
 17306 00a2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17307              	.LVL1085:
 17308              	.LBB10162:
 17309              	.LBI10162:
 17310              		.loc 21 162 7 is_stmt 1 view .LVU3938
 17311              	.LBB10163:
 17312              	.LBI10163:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17313              		.loc 22 89 7 view .LVU3939
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17314              		.loc 22 89 7 is_stmt 0 view .LVU3940
 17315              	.LBE10163:
 17316              	.LBE10162:
 17317              	.LBB10164:
 17318              	.LBI10164:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17319              		.loc 21 144 7 is_stmt 1 view .LVU3941
 17320              	.LBB10165:
 17321              	.LBI10165:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17322              		.loc 22 79 7 view .LVU3942
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17323              		.loc 22 79 7 is_stmt 0 view .LVU3943
 17324              	.LBE10165:
 17325              	.LBE10164:
 17326              		.loc 41 107 5 view .LVU3944
 17327 00a6 9449     		ldr	r1, .L813+76
 17328 00a8 9448     		ldr	r0, .L813+80
 17329 00aa FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17330              	.LVL1086:
 17331              	.LBB10166:
 17332              	.LBI10166:
 17333              		.loc 21 162 7 is_stmt 1 view .LVU3945
 17334              	.LBB10167:
 17335              	.LBI10167:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17336              		.loc 22 89 7 view .LVU3946
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17337              		.loc 22 89 7 is_stmt 0 view .LVU3947
 17338              	.LBE10167:
 17339              	.LBE10166:
 17340              	.LBB10168:
 17341              	.LBI10168:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17342              		.loc 21 144 7 is_stmt 1 view .LVU3948
 17343              	.LBB10169:
 17344              	.LBI10169:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17345              		.loc 22 79 7 view .LVU3949
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17346              		.loc 22 79 7 is_stmt 0 view .LVU3950
 17347              	.LBE10169:
 17348              	.LBE10168:
 17349              		.loc 41 107 5 view .LVU3951
 17350 00ae 9449     		ldr	r1, .L813+84
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 698


 17351 00b0 9448     		ldr	r0, .L813+88
 17352 00b2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17353              	.LVL1087:
 17354              	.LBB10170:
 17355              	.LBI10170:
 17356              		.loc 21 162 7 is_stmt 1 view .LVU3952
 17357              	.LBB10171:
 17358              	.LBI10171:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17359              		.loc 22 89 7 view .LVU3953
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17360              		.loc 22 89 7 is_stmt 0 view .LVU3954
 17361              	.LBE10171:
 17362              	.LBE10170:
 17363              	.LBB10172:
 17364              	.LBI10172:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17365              		.loc 21 144 7 is_stmt 1 view .LVU3955
 17366              	.LBB10173:
 17367              	.LBI10173:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17368              		.loc 22 79 7 view .LVU3956
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17369              		.loc 22 79 7 is_stmt 0 view .LVU3957
 17370              	.LBE10173:
 17371              	.LBE10172:
 17372              		.loc 41 107 5 view .LVU3958
 17373 00b6 9449     		ldr	r1, .L813+92
 17374 00b8 9448     		ldr	r0, .L813+96
 17375 00ba FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17376              	.LVL1088:
 17377              	.LBB10174:
 17378              	.LBI10174:
 17379              		.loc 21 162 7 is_stmt 1 view .LVU3959
 17380              	.LBB10175:
 17381              	.LBI10175:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17382              		.loc 22 89 7 view .LVU3960
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17383              		.loc 22 89 7 is_stmt 0 view .LVU3961
 17384              	.LBE10175:
 17385              	.LBE10174:
 17386              	.LBB10176:
 17387              	.LBI10176:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17388              		.loc 21 144 7 is_stmt 1 view .LVU3962
 17389              	.LBB10177:
 17390              	.LBI10177:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17391              		.loc 22 79 7 view .LVU3963
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17392              		.loc 22 79 7 is_stmt 0 view .LVU3964
 17393              	.LBE10177:
 17394              	.LBE10176:
 17395              		.loc 41 107 5 view .LVU3965
 17396 00be 9449     		ldr	r1, .L813+100
 17397 00c0 9448     		ldr	r0, .L813+104
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 699


 17398 00c2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17399              	.LVL1089:
 17400              	.LBB10178:
 17401              	.LBI10178:
 17402              		.loc 21 162 7 is_stmt 1 view .LVU3966
 17403              	.LBB10179:
 17404              	.LBI10179:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17405              		.loc 22 89 7 view .LVU3967
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17406              		.loc 22 89 7 is_stmt 0 view .LVU3968
 17407              	.LBE10179:
 17408              	.LBE10178:
 17409              	.LBB10180:
 17410              	.LBI10180:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17411              		.loc 21 144 7 is_stmt 1 view .LVU3969
 17412              	.LBB10181:
 17413              	.LBI10181:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17414              		.loc 22 79 7 view .LVU3970
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17415              		.loc 22 79 7 is_stmt 0 view .LVU3971
 17416              	.LBE10181:
 17417              	.LBE10180:
 17418              		.loc 41 107 5 view .LVU3972
 17419 00c6 9449     		ldr	r1, .L813+108
 17420 00c8 9448     		ldr	r0, .L813+112
 17421 00ca FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17422              	.LVL1090:
 17423              	.LBB10182:
 17424              	.LBI10182:
 17425              		.loc 21 162 7 is_stmt 1 view .LVU3973
 17426              	.LBB10183:
 17427              	.LBI10183:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17428              		.loc 22 89 7 view .LVU3974
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17429              		.loc 22 89 7 is_stmt 0 view .LVU3975
 17430              	.LBE10183:
 17431              	.LBE10182:
 17432              	.LBB10184:
 17433              	.LBI10184:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17434              		.loc 21 144 7 is_stmt 1 view .LVU3976
 17435              	.LBB10185:
 17436              	.LBI10185:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17437              		.loc 22 79 7 view .LVU3977
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17438              		.loc 22 79 7 is_stmt 0 view .LVU3978
 17439              	.LBE10185:
 17440              	.LBE10184:
 17441              		.loc 41 107 5 view .LVU3979
 17442 00ce 9449     		ldr	r1, .L813+116
 17443 00d0 9448     		ldr	r0, .L813+120
 17444 00d2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 700


 17445              	.LVL1091:
 17446              	.LBB10186:
 17447              	.LBI10186:
 17448              		.loc 21 162 7 is_stmt 1 view .LVU3980
 17449              	.LBB10187:
 17450              	.LBI10187:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17451              		.loc 22 89 7 view .LVU3981
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17452              		.loc 22 89 7 is_stmt 0 view .LVU3982
 17453              	.LBE10187:
 17454              	.LBE10186:
 17455              	.LBB10188:
 17456              	.LBI10188:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17457              		.loc 21 144 7 is_stmt 1 view .LVU3983
 17458              	.LBB10189:
 17459              	.LBI10189:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17460              		.loc 22 79 7 view .LVU3984
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17461              		.loc 22 79 7 is_stmt 0 view .LVU3985
 17462              	.LBE10189:
 17463              	.LBE10188:
 17464              		.loc 41 107 5 view .LVU3986
 17465 00d6 9449     		ldr	r1, .L813+124
 17466 00d8 9448     		ldr	r0, .L813+128
 17467 00da FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17468              	.LVL1092:
 17469              	.LBB10190:
 17470              	.LBI10190:
 17471              		.loc 21 162 7 is_stmt 1 view .LVU3987
 17472              	.LBB10191:
 17473              	.LBI10191:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17474              		.loc 22 89 7 view .LVU3988
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17475              		.loc 22 89 7 is_stmt 0 view .LVU3989
 17476              	.LBE10191:
 17477              	.LBE10190:
 17478              	.LBB10192:
 17479              	.LBI10192:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17480              		.loc 21 144 7 is_stmt 1 view .LVU3990
 17481              	.LBB10193:
 17482              	.LBI10193:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17483              		.loc 22 79 7 view .LVU3991
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17484              		.loc 22 79 7 is_stmt 0 view .LVU3992
 17485              	.LBE10193:
 17486              	.LBE10192:
 17487              		.loc 41 107 5 view .LVU3993
 17488 00de 9449     		ldr	r1, .L813+132
 17489 00e0 9448     		ldr	r0, .L813+136
 17490 00e2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17491              	.LVL1093:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 701


 17492              	.LBB10194:
 17493              	.LBI10194:
 17494              		.loc 21 162 7 is_stmt 1 view .LVU3994
 17495              	.LBB10195:
 17496              	.LBI10195:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17497              		.loc 22 89 7 view .LVU3995
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17498              		.loc 22 89 7 is_stmt 0 view .LVU3996
 17499              	.LBE10195:
 17500              	.LBE10194:
 17501              	.LBB10196:
 17502              	.LBI10196:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17503              		.loc 21 144 7 is_stmt 1 view .LVU3997
 17504              	.LBB10197:
 17505              	.LBI10197:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17506              		.loc 22 79 7 view .LVU3998
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17507              		.loc 22 79 7 is_stmt 0 view .LVU3999
 17508              	.LBE10197:
 17509              	.LBE10196:
 17510              		.loc 41 107 5 view .LVU4000
 17511 00e6 9449     		ldr	r1, .L813+140
 17512 00e8 9448     		ldr	r0, .L813+144
 17513 00ea FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17514              	.LVL1094:
 17515              	.LBB10198:
 17516              	.LBI10198:
 17517              		.loc 21 162 7 is_stmt 1 view .LVU4001
 17518              	.LBB10199:
 17519              	.LBI10199:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17520              		.loc 22 89 7 view .LVU4002
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17521              		.loc 22 89 7 is_stmt 0 view .LVU4003
 17522              	.LBE10199:
 17523              	.LBE10198:
 17524              	.LBB10200:
 17525              	.LBI10200:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17526              		.loc 21 144 7 is_stmt 1 view .LVU4004
 17527              	.LBB10201:
 17528              	.LBI10201:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17529              		.loc 22 79 7 view .LVU4005
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17530              		.loc 22 79 7 is_stmt 0 view .LVU4006
 17531              	.LBE10201:
 17532              	.LBE10200:
 17533              		.loc 41 107 5 view .LVU4007
 17534 00ee 9449     		ldr	r1, .L813+148
 17535 00f0 9448     		ldr	r0, .L813+152
 17536 00f2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17537              	.LVL1095:
 17538              	.LBB10202:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 702


 17539              	.LBI10202:
 17540              		.loc 21 162 7 is_stmt 1 view .LVU4008
 17541              	.LBB10203:
 17542              	.LBI10203:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17543              		.loc 22 89 7 view .LVU4009
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17544              		.loc 22 89 7 is_stmt 0 view .LVU4010
 17545              	.LBE10203:
 17546              	.LBE10202:
 17547              	.LBB10204:
 17548              	.LBI10204:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17549              		.loc 21 144 7 is_stmt 1 view .LVU4011
 17550              	.LBB10205:
 17551              	.LBI10205:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17552              		.loc 22 79 7 view .LVU4012
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17553              		.loc 22 79 7 is_stmt 0 view .LVU4013
 17554              	.LBE10205:
 17555              	.LBE10204:
 17556              		.loc 41 107 5 view .LVU4014
 17557 00f6 9449     		ldr	r1, .L813+156
 17558 00f8 9448     		ldr	r0, .L813+160
 17559 00fa FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17560              	.LVL1096:
 17561              	.LBB10206:
 17562              	.LBI10206:
 17563              		.loc 21 162 7 is_stmt 1 view .LVU4015
 17564              	.LBB10207:
 17565              	.LBI10207:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17566              		.loc 22 89 7 view .LVU4016
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17567              		.loc 22 89 7 is_stmt 0 view .LVU4017
 17568              	.LBE10207:
 17569              	.LBE10206:
 17570              	.LBB10208:
 17571              	.LBI10208:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17572              		.loc 21 144 7 is_stmt 1 view .LVU4018
 17573              	.LBB10209:
 17574              	.LBI10209:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17575              		.loc 22 79 7 view .LVU4019
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17576              		.loc 22 79 7 is_stmt 0 view .LVU4020
 17577              	.LBE10209:
 17578              	.LBE10208:
 17579              		.loc 41 107 5 view .LVU4021
 17580 00fe 9449     		ldr	r1, .L813+164
 17581 0100 9448     		ldr	r0, .L813+168
 17582 0102 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17583              	.LVL1097:
 17584              	.LBB10210:
 17585              	.LBI10210:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 703


 17586              		.loc 21 162 7 is_stmt 1 view .LVU4022
 17587              	.LBB10211:
 17588              	.LBI10211:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17589              		.loc 22 89 7 view .LVU4023
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17590              		.loc 22 89 7 is_stmt 0 view .LVU4024
 17591              	.LBE10211:
 17592              	.LBE10210:
 17593              	.LBB10212:
 17594              	.LBI10212:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17595              		.loc 21 144 7 is_stmt 1 view .LVU4025
 17596              	.LBB10213:
 17597              	.LBI10213:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17598              		.loc 22 79 7 view .LVU4026
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17599              		.loc 22 79 7 is_stmt 0 view .LVU4027
 17600              	.LBE10213:
 17601              	.LBE10212:
 17602              		.loc 41 107 5 view .LVU4028
 17603 0106 9449     		ldr	r1, .L813+172
 17604 0108 9448     		ldr	r0, .L813+176
 17605 010a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17606              	.LVL1098:
 17607              	.LBB10214:
 17608              	.LBI10214:
 17609              		.loc 21 162 7 is_stmt 1 view .LVU4029
 17610              	.LBB10215:
 17611              	.LBI10215:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17612              		.loc 22 89 7 view .LVU4030
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17613              		.loc 22 89 7 is_stmt 0 view .LVU4031
 17614              	.LBE10215:
 17615              	.LBE10214:
 17616              	.LBB10216:
 17617              	.LBI10216:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17618              		.loc 21 144 7 is_stmt 1 view .LVU4032
 17619              	.LBB10217:
 17620              	.LBI10217:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17621              		.loc 22 79 7 view .LVU4033
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17622              		.loc 22 79 7 is_stmt 0 view .LVU4034
 17623              	.LBE10217:
 17624              	.LBE10216:
 17625              		.loc 41 107 5 view .LVU4035
 17626 010e 9449     		ldr	r1, .L813+180
 17627 0110 9448     		ldr	r0, .L813+184
 17628 0112 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17629              	.LVL1099:
 17630              	.LBB10218:
 17631              	.LBI10218:
 17632              		.loc 21 162 7 is_stmt 1 view .LVU4036
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 704


 17633              	.LBB10219:
 17634              	.LBI10219:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17635              		.loc 22 89 7 view .LVU4037
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17636              		.loc 22 89 7 is_stmt 0 view .LVU4038
 17637              	.LBE10219:
 17638              	.LBE10218:
 17639              	.LBB10220:
 17640              	.LBI10220:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17641              		.loc 21 144 7 is_stmt 1 view .LVU4039
 17642              	.LBB10221:
 17643              	.LBI10221:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17644              		.loc 22 79 7 view .LVU4040
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17645              		.loc 22 79 7 is_stmt 0 view .LVU4041
 17646              	.LBE10221:
 17647              	.LBE10220:
 17648              		.loc 41 107 5 view .LVU4042
 17649 0116 9449     		ldr	r1, .L813+188
 17650 0118 9448     		ldr	r0, .L813+192
 17651 011a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17652              	.LVL1100:
 17653              	.LBB10222:
 17654              	.LBI10222:
 17655              		.loc 21 162 7 is_stmt 1 view .LVU4043
 17656              	.LBB10223:
 17657              	.LBI10223:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17658              		.loc 22 89 7 view .LVU4044
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17659              		.loc 22 89 7 is_stmt 0 view .LVU4045
 17660              	.LBE10223:
 17661              	.LBE10222:
 17662              	.LBB10224:
 17663              	.LBI10224:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17664              		.loc 21 144 7 is_stmt 1 view .LVU4046
 17665              	.LBB10225:
 17666              	.LBI10225:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17667              		.loc 22 79 7 view .LVU4047
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17668              		.loc 22 79 7 is_stmt 0 view .LVU4048
 17669              	.LBE10225:
 17670              	.LBE10224:
 17671              		.loc 41 107 5 view .LVU4049
 17672 011e 9449     		ldr	r1, .L813+196
 17673 0120 9448     		ldr	r0, .L813+200
 17674 0122 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17675              	.LVL1101:
 17676              	.LBB10226:
 17677              	.LBI10226:
 17678              		.loc 21 162 7 is_stmt 1 view .LVU4050
 17679              	.LBB10227:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 705


 17680              	.LBI10227:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17681              		.loc 22 89 7 view .LVU4051
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17682              		.loc 22 89 7 is_stmt 0 view .LVU4052
 17683              	.LBE10227:
 17684              	.LBE10226:
 17685              	.LBB10228:
 17686              	.LBI10228:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17687              		.loc 21 144 7 is_stmt 1 view .LVU4053
 17688              	.LBB10229:
 17689              	.LBI10229:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17690              		.loc 22 79 7 view .LVU4054
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17691              		.loc 22 79 7 is_stmt 0 view .LVU4055
 17692              	.LBE10229:
 17693              	.LBE10228:
 17694              		.loc 41 107 5 view .LVU4056
 17695 0126 9449     		ldr	r1, .L813+204
 17696 0128 9448     		ldr	r0, .L813+208
 17697 012a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17698              	.LVL1102:
 17699              	.LBB10230:
 17700              	.LBI10230:
 17701              		.loc 21 162 7 is_stmt 1 view .LVU4057
 17702              	.LBB10231:
 17703              	.LBI10231:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17704              		.loc 22 89 7 view .LVU4058
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17705              		.loc 22 89 7 is_stmt 0 view .LVU4059
 17706              	.LBE10231:
 17707              	.LBE10230:
 17708              	.LBB10232:
 17709              	.LBI10232:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17710              		.loc 21 144 7 is_stmt 1 view .LVU4060
 17711              	.LBB10233:
 17712              	.LBI10233:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17713              		.loc 22 79 7 view .LVU4061
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17714              		.loc 22 79 7 is_stmt 0 view .LVU4062
 17715              	.LBE10233:
 17716              	.LBE10232:
 17717              		.loc 41 107 5 view .LVU4063
 17718 012e 9449     		ldr	r1, .L813+212
 17719 0130 9448     		ldr	r0, .L813+216
 17720 0132 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17721              	.LVL1103:
 17722              	.LBB10234:
 17723              	.LBI10234:
 17724              		.loc 21 162 7 is_stmt 1 view .LVU4064
 17725              	.LBB10235:
 17726              	.LBI10235:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 706


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17727              		.loc 22 89 7 view .LVU4065
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17728              		.loc 22 89 7 is_stmt 0 view .LVU4066
 17729              	.LBE10235:
 17730              	.LBE10234:
 17731              	.LBB10236:
 17732              	.LBI10236:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17733              		.loc 21 144 7 is_stmt 1 view .LVU4067
 17734              	.LBB10237:
 17735              	.LBI10237:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17736              		.loc 22 79 7 view .LVU4068
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17737              		.loc 22 79 7 is_stmt 0 view .LVU4069
 17738              	.LBE10237:
 17739              	.LBE10236:
 17740              		.loc 41 107 5 view .LVU4070
 17741 0136 9449     		ldr	r1, .L813+220
 17742 0138 9448     		ldr	r0, .L813+224
 17743 013a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17744              	.LVL1104:
 17745              	.LBB10238:
 17746              	.LBI10238:
 17747              		.loc 21 162 7 is_stmt 1 view .LVU4071
 17748              	.LBB10239:
 17749              	.LBI10239:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17750              		.loc 22 89 7 view .LVU4072
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17751              		.loc 22 89 7 is_stmt 0 view .LVU4073
 17752              	.LBE10239:
 17753              	.LBE10238:
 17754              	.LBB10240:
 17755              	.LBI10240:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17756              		.loc 21 144 7 is_stmt 1 view .LVU4074
 17757              	.LBB10241:
 17758              	.LBI10241:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17759              		.loc 22 79 7 view .LVU4075
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17760              		.loc 22 79 7 is_stmt 0 view .LVU4076
 17761              	.LBE10241:
 17762              	.LBE10240:
 17763              		.loc 41 107 5 view .LVU4077
 17764 013e 9449     		ldr	r1, .L813+228
 17765 0140 9448     		ldr	r0, .L813+232
 17766 0142 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17767              	.LVL1105:
 17768              	.LBB10242:
 17769              	.LBI10242:
 17770              		.loc 21 162 7 is_stmt 1 view .LVU4078
 17771              	.LBB10243:
 17772              	.LBI10243:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 707


 17773              		.loc 22 89 7 view .LVU4079
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17774              		.loc 22 89 7 is_stmt 0 view .LVU4080
 17775              	.LBE10243:
 17776              	.LBE10242:
 17777              	.LBB10244:
 17778              	.LBI10244:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17779              		.loc 21 144 7 is_stmt 1 view .LVU4081
 17780              	.LBB10245:
 17781              	.LBI10245:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17782              		.loc 22 79 7 view .LVU4082
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17783              		.loc 22 79 7 is_stmt 0 view .LVU4083
 17784              	.LBE10245:
 17785              	.LBE10244:
 17786              		.loc 41 107 5 view .LVU4084
 17787 0146 9449     		ldr	r1, .L813+236
 17788 0148 9448     		ldr	r0, .L813+240
 17789 014a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17790              	.LVL1106:
 17791              	.LBB10246:
 17792              	.LBI10246:
 17793              		.loc 21 162 7 is_stmt 1 view .LVU4085
 17794              	.LBB10247:
 17795              	.LBI10247:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17796              		.loc 22 89 7 view .LVU4086
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17797              		.loc 22 89 7 is_stmt 0 view .LVU4087
 17798              	.LBE10247:
 17799              	.LBE10246:
 17800              	.LBB10248:
 17801              	.LBI10248:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17802              		.loc 21 144 7 is_stmt 1 view .LVU4088
 17803              	.LBB10249:
 17804              	.LBI10249:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17805              		.loc 22 79 7 view .LVU4089
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17806              		.loc 22 79 7 is_stmt 0 view .LVU4090
 17807              	.LBE10249:
 17808              	.LBE10248:
 17809              		.loc 41 107 5 view .LVU4091
 17810 014e 9449     		ldr	r1, .L813+244
 17811 0150 9448     		ldr	r0, .L813+248
 17812 0152 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17813              	.LVL1107:
 17814              	.LBB10250:
 17815              	.LBI10250:
 17816              		.loc 21 162 7 is_stmt 1 view .LVU4092
 17817              	.LBB10251:
 17818              	.LBI10251:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17819              		.loc 22 89 7 view .LVU4093
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 708


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17820              		.loc 22 89 7 is_stmt 0 view .LVU4094
 17821              	.LBE10251:
 17822              	.LBE10250:
 17823              	.LBB10252:
 17824              	.LBI10252:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17825              		.loc 21 144 7 is_stmt 1 view .LVU4095
 17826              	.LBB10253:
 17827              	.LBI10253:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17828              		.loc 22 79 7 view .LVU4096
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17829              		.loc 22 79 7 is_stmt 0 view .LVU4097
 17830              	.LBE10253:
 17831              	.LBE10252:
 17832              		.loc 41 107 5 view .LVU4098
 17833 0156 9449     		ldr	r1, .L813+252
 17834 0158 9448     		ldr	r0, .L813+256
 17835 015a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17836              	.LVL1108:
 17837              	.LBB10254:
 17838              	.LBI10254:
 17839              		.loc 21 162 7 is_stmt 1 view .LVU4099
 17840              	.LBB10255:
 17841              	.LBI10255:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17842              		.loc 22 89 7 view .LVU4100
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17843              		.loc 22 89 7 is_stmt 0 view .LVU4101
 17844              	.LBE10255:
 17845              	.LBE10254:
 17846              	.LBB10256:
 17847              	.LBI10256:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17848              		.loc 21 144 7 is_stmt 1 view .LVU4102
 17849              	.LBB10257:
 17850              	.LBI10257:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17851              		.loc 22 79 7 view .LVU4103
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17852              		.loc 22 79 7 is_stmt 0 view .LVU4104
 17853              	.LBE10257:
 17854              	.LBE10256:
 17855              		.loc 41 107 5 view .LVU4105
 17856 015e 9449     		ldr	r1, .L813+260
 17857 0160 9448     		ldr	r0, .L813+264
 17858 0162 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17859              	.LVL1109:
 17860              	.LBB10258:
 17861              	.LBI10258:
 17862              		.loc 21 162 7 is_stmt 1 view .LVU4106
 17863              	.LBB10259:
 17864              	.LBI10259:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17865              		.loc 22 89 7 view .LVU4107
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 709


 17866              		.loc 22 89 7 is_stmt 0 view .LVU4108
 17867              	.LBE10259:
 17868              	.LBE10258:
 17869              	.LBB10260:
 17870              	.LBI10260:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17871              		.loc 21 144 7 is_stmt 1 view .LVU4109
 17872              	.LBB10261:
 17873              	.LBI10261:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17874              		.loc 22 79 7 view .LVU4110
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17875              		.loc 22 79 7 is_stmt 0 view .LVU4111
 17876              	.LBE10261:
 17877              	.LBE10260:
 17878              		.loc 41 107 5 view .LVU4112
 17879 0166 9449     		ldr	r1, .L813+268
 17880 0168 9448     		ldr	r0, .L813+272
 17881 016a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17882              	.LVL1110:
 17883              	.LBB10262:
 17884              	.LBI10262:
 17885              		.loc 21 162 7 is_stmt 1 view .LVU4113
 17886              	.LBB10263:
 17887              	.LBI10263:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17888              		.loc 22 89 7 view .LVU4114
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17889              		.loc 22 89 7 is_stmt 0 view .LVU4115
 17890              	.LBE10263:
 17891              	.LBE10262:
 17892              	.LBB10264:
 17893              	.LBI10264:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17894              		.loc 21 144 7 is_stmt 1 view .LVU4116
 17895              	.LBB10265:
 17896              	.LBI10265:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17897              		.loc 22 79 7 view .LVU4117
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17898              		.loc 22 79 7 is_stmt 0 view .LVU4118
 17899              	.LBE10265:
 17900              	.LBE10264:
 17901              		.loc 41 107 5 view .LVU4119
 17902 016e 9449     		ldr	r1, .L813+276
 17903 0170 9448     		ldr	r0, .L813+280
 17904 0172 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17905              	.LVL1111:
 17906              	.LBB10266:
 17907              	.LBI10266:
 17908              		.loc 21 162 7 is_stmt 1 view .LVU4120
 17909              	.LBB10267:
 17910              	.LBI10267:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17911              		.loc 22 89 7 view .LVU4121
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17912              		.loc 22 89 7 is_stmt 0 view .LVU4122
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 710


 17913              	.LBE10267:
 17914              	.LBE10266:
 17915              	.LBB10268:
 17916              	.LBI10268:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17917              		.loc 21 144 7 is_stmt 1 view .LVU4123
 17918              	.LBB10269:
 17919              	.LBI10269:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17920              		.loc 22 79 7 view .LVU4124
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17921              		.loc 22 79 7 is_stmt 0 view .LVU4125
 17922              	.LBE10269:
 17923              	.LBE10268:
 17924              		.loc 41 107 5 view .LVU4126
 17925 0176 9449     		ldr	r1, .L813+284
 17926 0178 9448     		ldr	r0, .L813+288
 17927 017a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17928              	.LVL1112:
 17929              	.LBB10270:
 17930              	.LBI10270:
 17931              		.loc 21 162 7 is_stmt 1 view .LVU4127
 17932              	.LBB10271:
 17933              	.LBI10271:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17934              		.loc 22 89 7 view .LVU4128
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17935              		.loc 22 89 7 is_stmt 0 view .LVU4129
 17936              	.LBE10271:
 17937              	.LBE10270:
 17938              	.LBB10272:
 17939              	.LBI10272:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17940              		.loc 21 144 7 is_stmt 1 view .LVU4130
 17941              	.LBB10273:
 17942              	.LBI10273:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17943              		.loc 22 79 7 view .LVU4131
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17944              		.loc 22 79 7 is_stmt 0 view .LVU4132
 17945              	.LBE10273:
 17946              	.LBE10272:
 17947              		.loc 41 107 5 view .LVU4133
 17948 017e 9449     		ldr	r1, .L813+292
 17949 0180 9448     		ldr	r0, .L813+296
 17950 0182 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17951              	.LVL1113:
 17952              	.LBB10274:
 17953              	.LBI10274:
 17954              		.loc 21 162 7 is_stmt 1 view .LVU4134
 17955              	.LBB10275:
 17956              	.LBI10275:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17957              		.loc 22 89 7 view .LVU4135
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17958              		.loc 22 89 7 is_stmt 0 view .LVU4136
 17959              	.LBE10275:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 711


 17960              	.LBE10274:
 17961              	.LBB10276:
 17962              	.LBI10276:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17963              		.loc 21 144 7 is_stmt 1 view .LVU4137
 17964              	.LBB10277:
 17965              	.LBI10277:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17966              		.loc 22 79 7 view .LVU4138
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17967              		.loc 22 79 7 is_stmt 0 view .LVU4139
 17968              	.LBE10277:
 17969              	.LBE10276:
 17970              		.loc 41 107 5 view .LVU4140
 17971 0186 9449     		ldr	r1, .L813+300
 17972 0188 9448     		ldr	r0, .L813+304
 17973 018a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17974              	.LVL1114:
 17975              	.LBB10278:
 17976              	.LBI10278:
 17977              		.loc 21 162 7 is_stmt 1 view .LVU4141
 17978              	.LBB10279:
 17979              	.LBI10279:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17980              		.loc 22 89 7 view .LVU4142
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17981              		.loc 22 89 7 is_stmt 0 view .LVU4143
 17982              	.LBE10279:
 17983              	.LBE10278:
 17984              	.LBB10280:
 17985              	.LBI10280:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17986              		.loc 21 144 7 is_stmt 1 view .LVU4144
 17987              	.LBB10281:
 17988              	.LBI10281:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17989              		.loc 22 79 7 view .LVU4145
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17990              		.loc 22 79 7 is_stmt 0 view .LVU4146
 17991              	.LBE10281:
 17992              	.LBE10280:
 17993              		.loc 41 107 5 view .LVU4147
 17994 018e 9449     		ldr	r1, .L813+308
 17995 0190 9448     		ldr	r0, .L813+312
 17996 0192 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17997              	.LVL1115:
 17998              	.LBB10282:
 17999              	.LBI10282:
 18000              		.loc 21 162 7 is_stmt 1 view .LVU4148
 18001              	.LBB10283:
 18002              	.LBI10283:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18003              		.loc 22 89 7 view .LVU4149
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18004              		.loc 22 89 7 is_stmt 0 view .LVU4150
 18005              	.LBE10283:
 18006              	.LBE10282:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 712


 18007              	.LBB10284:
 18008              	.LBI10284:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18009              		.loc 21 144 7 is_stmt 1 view .LVU4151
 18010              	.LBB10285:
 18011              	.LBI10285:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18012              		.loc 22 79 7 view .LVU4152
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18013              		.loc 22 79 7 is_stmt 0 view .LVU4153
 18014              	.LBE10285:
 18015              	.LBE10284:
 18016              		.loc 41 107 5 view .LVU4154
 18017 0196 9449     		ldr	r1, .L813+316
 18018 0198 9448     		ldr	r0, .L813+320
 18019 019a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18020              	.LVL1116:
 18021              	.LBB10286:
 18022              	.LBI10286:
 18023              		.loc 21 162 7 is_stmt 1 view .LVU4155
 18024              	.LBB10287:
 18025              	.LBI10287:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18026              		.loc 22 89 7 view .LVU4156
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18027              		.loc 22 89 7 is_stmt 0 view .LVU4157
 18028              	.LBE10287:
 18029              	.LBE10286:
 18030              	.LBB10288:
 18031              	.LBI10288:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18032              		.loc 21 144 7 is_stmt 1 view .LVU4158
 18033              	.LBB10289:
 18034              	.LBI10289:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18035              		.loc 22 79 7 view .LVU4159
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18036              		.loc 22 79 7 is_stmt 0 view .LVU4160
 18037              	.LBE10289:
 18038              	.LBE10288:
 18039              		.loc 41 107 5 view .LVU4161
 18040 019e 9449     		ldr	r1, .L813+324
 18041 01a0 9448     		ldr	r0, .L813+328
 18042 01a2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18043              	.LVL1117:
 18044              	.LBB10290:
 18045              	.LBI10290:
 18046              		.loc 21 162 7 is_stmt 1 view .LVU4162
 18047              	.LBB10291:
 18048              	.LBI10291:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18049              		.loc 22 89 7 view .LVU4163
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18050              		.loc 22 89 7 is_stmt 0 view .LVU4164
 18051              	.LBE10291:
 18052              	.LBE10290:
 18053              	.LBB10292:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 713


 18054              	.LBI10292:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18055              		.loc 21 144 7 is_stmt 1 view .LVU4165
 18056              	.LBB10293:
 18057              	.LBI10293:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18058              		.loc 22 79 7 view .LVU4166
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18059              		.loc 22 79 7 is_stmt 0 view .LVU4167
 18060              	.LBE10293:
 18061              	.LBE10292:
 18062              		.loc 41 107 5 view .LVU4168
 18063 01a6 9449     		ldr	r1, .L813+332
 18064 01a8 9448     		ldr	r0, .L813+336
 18065 01aa FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18066              	.LVL1118:
 18067              	.LBB10294:
 18068              	.LBI10294:
 18069              		.loc 21 162 7 is_stmt 1 view .LVU4169
 18070              	.LBB10295:
 18071              	.LBI10295:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18072              		.loc 22 89 7 view .LVU4170
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18073              		.loc 22 89 7 is_stmt 0 view .LVU4171
 18074              	.LBE10295:
 18075              	.LBE10294:
 18076              	.LBB10296:
 18077              	.LBI10296:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18078              		.loc 21 144 7 is_stmt 1 view .LVU4172
 18079              	.LBB10297:
 18080              	.LBI10297:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18081              		.loc 22 79 7 view .LVU4173
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18082              		.loc 22 79 7 is_stmt 0 view .LVU4174
 18083              	.LBE10297:
 18084              	.LBE10296:
 18085              		.loc 41 107 5 view .LVU4175
 18086 01ae 9449     		ldr	r1, .L813+340
 18087 01b0 9448     		ldr	r0, .L813+344
 18088 01b2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18089              	.LVL1119:
 18090              	.LBB10298:
 18091              	.LBI10298:
 18092              		.loc 21 162 7 is_stmt 1 view .LVU4176
 18093              	.LBB10299:
 18094              	.LBI10299:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18095              		.loc 22 89 7 view .LVU4177
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18096              		.loc 22 89 7 is_stmt 0 view .LVU4178
 18097              	.LBE10299:
 18098              	.LBE10298:
 18099              	.LBB10300:
 18100              	.LBI10300:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 714


 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18101              		.loc 21 144 7 is_stmt 1 view .LVU4179
 18102              	.LBB10301:
 18103              	.LBI10301:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18104              		.loc 22 79 7 view .LVU4180
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18105              		.loc 22 79 7 is_stmt 0 view .LVU4181
 18106              	.LBE10301:
 18107              	.LBE10300:
 18108              		.loc 41 107 5 view .LVU4182
 18109 01b6 9449     		ldr	r1, .L813+348
 18110 01b8 9448     		ldr	r0, .L813+352
 18111 01ba FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18112              	.LVL1120:
 18113              	.LBB10302:
 18114              	.LBI10302:
 18115              		.loc 21 162 7 is_stmt 1 view .LVU4183
 18116              	.LBB10303:
 18117              	.LBI10303:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18118              		.loc 22 89 7 view .LVU4184
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18119              		.loc 22 89 7 is_stmt 0 view .LVU4185
 18120              	.LBE10303:
 18121              	.LBE10302:
 18122              	.LBB10304:
 18123              	.LBI10304:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18124              		.loc 21 144 7 is_stmt 1 view .LVU4186
 18125              	.LBB10305:
 18126              	.LBI10305:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18127              		.loc 22 79 7 view .LVU4187
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18128              		.loc 22 79 7 is_stmt 0 view .LVU4188
 18129              	.LBE10305:
 18130              	.LBE10304:
 18131              		.loc 41 107 5 view .LVU4189
 18132 01be 9449     		ldr	r1, .L813+356
 18133 01c0 9448     		ldr	r0, .L813+360
 18134 01c2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18135              	.LVL1121:
 18136              	.LBB10306:
 18137              	.LBI10306:
 18138              		.loc 21 162 7 is_stmt 1 view .LVU4190
 18139              	.LBB10307:
 18140              	.LBI10307:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18141              		.loc 22 89 7 view .LVU4191
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18142              		.loc 22 89 7 is_stmt 0 view .LVU4192
 18143              	.LBE10307:
 18144              	.LBE10306:
 18145              	.LBB10308:
 18146              	.LBI10308:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 715


 18147              		.loc 21 144 7 is_stmt 1 view .LVU4193
 18148              	.LBB10309:
 18149              	.LBI10309:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18150              		.loc 22 79 7 view .LVU4194
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18151              		.loc 22 79 7 is_stmt 0 view .LVU4195
 18152              	.LBE10309:
 18153              	.LBE10308:
 18154              		.loc 41 107 5 view .LVU4196
 18155 01c6 9449     		ldr	r1, .L813+364
 18156 01c8 9448     		ldr	r0, .L813+368
 18157 01ca FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18158              	.LVL1122:
 18159              	.LBB10310:
 18160              	.LBI10310:
 18161              		.loc 21 162 7 is_stmt 1 view .LVU4197
 18162              	.LBB10311:
 18163              	.LBI10311:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18164              		.loc 22 89 7 view .LVU4198
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18165              		.loc 22 89 7 is_stmt 0 view .LVU4199
 18166              	.LBE10311:
 18167              	.LBE10310:
 18168              	.LBB10312:
 18169              	.LBI10312:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18170              		.loc 21 144 7 is_stmt 1 view .LVU4200
 18171              	.LBB10313:
 18172              	.LBI10313:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18173              		.loc 22 79 7 view .LVU4201
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18174              		.loc 22 79 7 is_stmt 0 view .LVU4202
 18175              	.LBE10313:
 18176              	.LBE10312:
 18177              		.loc 41 107 5 view .LVU4203
 18178 01ce 9449     		ldr	r1, .L813+372
 18179 01d0 9448     		ldr	r0, .L813+376
 18180 01d2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18181              	.LVL1123:
 18182              	.LBB10314:
 18183              	.LBI10314:
 18184              		.loc 21 162 7 is_stmt 1 view .LVU4204
 18185              	.LBB10315:
 18186              	.LBI10315:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18187              		.loc 22 89 7 view .LVU4205
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18188              		.loc 22 89 7 is_stmt 0 view .LVU4206
 18189              	.LBE10315:
 18190              	.LBE10314:
 18191              	.LBB10316:
 18192              	.LBI10316:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18193              		.loc 21 144 7 is_stmt 1 view .LVU4207
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 716


 18194              	.LBB10317:
 18195              	.LBI10317:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18196              		.loc 22 79 7 view .LVU4208
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18197              		.loc 22 79 7 is_stmt 0 view .LVU4209
 18198              	.LBE10317:
 18199              	.LBE10316:
 18200              		.loc 41 107 5 view .LVU4210
 18201 01d6 9449     		ldr	r1, .L813+380
 18202 01d8 9448     		ldr	r0, .L813+384
 18203 01da FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18204              	.LVL1124:
 18205              	.LBB10318:
 18206              	.LBI10318:
 18207              		.loc 21 162 7 is_stmt 1 view .LVU4211
 18208              	.LBB10319:
 18209              	.LBI10319:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18210              		.loc 22 89 7 view .LVU4212
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18211              		.loc 22 89 7 is_stmt 0 view .LVU4213
 18212              	.LBE10319:
 18213              	.LBE10318:
 18214              	.LBB10320:
 18215              	.LBI10320:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18216              		.loc 21 144 7 is_stmt 1 view .LVU4214
 18217              	.LBB10321:
 18218              	.LBI10321:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18219              		.loc 22 79 7 view .LVU4215
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18220              		.loc 22 79 7 is_stmt 0 view .LVU4216
 18221              	.LBE10321:
 18222              	.LBE10320:
 18223              		.loc 41 107 5 view .LVU4217
 18224 01de 9449     		ldr	r1, .L813+388
 18225 01e0 9448     		ldr	r0, .L813+392
 18226 01e2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18227              	.LVL1125:
 18228              	.LBB10322:
 18229              	.LBI10322:
 18230              		.loc 21 162 7 is_stmt 1 view .LVU4218
 18231              	.LBB10323:
 18232              	.LBI10323:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18233              		.loc 22 89 7 view .LVU4219
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18234              		.loc 22 89 7 is_stmt 0 view .LVU4220
 18235              	.LBE10323:
 18236              	.LBE10322:
 18237              	.LBB10324:
 18238              	.LBI10324:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18239              		.loc 21 144 7 is_stmt 1 view .LVU4221
 18240              	.LBB10325:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 717


 18241              	.LBI10325:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18242              		.loc 22 79 7 view .LVU4222
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18243              		.loc 22 79 7 is_stmt 0 view .LVU4223
 18244              	.LBE10325:
 18245              	.LBE10324:
 18246              		.loc 41 107 5 view .LVU4224
 18247 01e6 9449     		ldr	r1, .L813+396
 18248 01e8 9448     		ldr	r0, .L813+400
 18249 01ea FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18250              	.LVL1126:
 18251              	.LBB10326:
 18252              	.LBI10326:
 18253              		.loc 21 162 7 is_stmt 1 view .LVU4225
 18254              	.LBB10327:
 18255              	.LBI10327:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18256              		.loc 22 89 7 view .LVU4226
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18257              		.loc 22 89 7 is_stmt 0 view .LVU4227
 18258              	.LBE10327:
 18259              	.LBE10326:
 18260              	.LBB10328:
 18261              	.LBI10328:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18262              		.loc 21 144 7 is_stmt 1 view .LVU4228
 18263              	.LBB10329:
 18264              	.LBI10329:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18265              		.loc 22 79 7 view .LVU4229
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18266              		.loc 22 79 7 is_stmt 0 view .LVU4230
 18267              	.LBE10329:
 18268              	.LBE10328:
 18269              		.loc 41 107 5 view .LVU4231
 18270 01ee 9449     		ldr	r1, .L813+404
 18271 01f0 9448     		ldr	r0, .L813+408
 18272 01f2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18273              	.LVL1127:
 18274              	.LBB10330:
 18275              	.LBI10330:
 18276              		.loc 21 162 7 is_stmt 1 view .LVU4232
 18277              	.LBB10331:
 18278              	.LBI10331:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18279              		.loc 22 89 7 view .LVU4233
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18280              		.loc 22 89 7 is_stmt 0 view .LVU4234
 18281              	.LBE10331:
 18282              	.LBE10330:
 18283              	.LBB10332:
 18284              	.LBI10332:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18285              		.loc 21 144 7 is_stmt 1 view .LVU4235
 18286              	.LBB10333:
 18287              	.LBI10333:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 718


  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18288              		.loc 22 79 7 view .LVU4236
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18289              		.loc 22 79 7 is_stmt 0 view .LVU4237
 18290              	.LBE10333:
 18291              	.LBE10332:
 18292              		.loc 41 107 5 view .LVU4238
 18293 01f6 9449     		ldr	r1, .L813+412
 18294 01f8 9448     		ldr	r0, .L813+416
 18295 01fa FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18296              	.LVL1128:
 18297              	.LBB10334:
 18298              	.LBI10334:
 18299              		.loc 21 162 7 is_stmt 1 view .LVU4239
 18300              	.LBB10335:
 18301              	.LBI10335:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18302              		.loc 22 89 7 view .LVU4240
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18303              		.loc 22 89 7 is_stmt 0 view .LVU4241
 18304              	.LBE10335:
 18305              	.LBE10334:
 18306              	.LBB10336:
 18307              	.LBI10336:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18308              		.loc 21 144 7 is_stmt 1 view .LVU4242
 18309              	.LBB10337:
 18310              	.LBI10337:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18311              		.loc 22 79 7 view .LVU4243
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18312              		.loc 22 79 7 is_stmt 0 view .LVU4244
 18313              	.LBE10337:
 18314              	.LBE10336:
 18315              		.loc 41 107 5 view .LVU4245
 18316 01fe 9449     		ldr	r1, .L813+420
 18317 0200 9448     		ldr	r0, .L813+424
 18318 0202 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18319              	.LVL1129:
 18320              	.LBB10338:
 18321              	.LBI10338:
 18322              		.loc 21 162 7 is_stmt 1 view .LVU4246
 18323              	.LBB10339:
 18324              	.LBI10339:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18325              		.loc 22 89 7 view .LVU4247
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18326              		.loc 22 89 7 is_stmt 0 view .LVU4248
 18327              	.LBE10339:
 18328              	.LBE10338:
 18329              	.LBB10340:
 18330              	.LBI10340:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18331              		.loc 21 144 7 is_stmt 1 view .LVU4249
 18332              	.LBB10341:
 18333              	.LBI10341:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 719


 18334              		.loc 22 79 7 view .LVU4250
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18335              		.loc 22 79 7 is_stmt 0 view .LVU4251
 18336              	.LBE10341:
 18337              	.LBE10340:
 18338              		.loc 41 107 5 view .LVU4252
 18339 0206 9449     		ldr	r1, .L813+428
 18340 0208 9448     		ldr	r0, .L813+432
 18341 020a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18342              	.LVL1130:
 18343              	.LBB10342:
 18344              	.LBI10342:
 18345              		.loc 21 162 7 is_stmt 1 view .LVU4253
 18346              	.LBB10343:
 18347              	.LBI10343:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18348              		.loc 22 89 7 view .LVU4254
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18349              		.loc 22 89 7 is_stmt 0 view .LVU4255
 18350              	.LBE10343:
 18351              	.LBE10342:
 18352              	.LBB10344:
 18353              	.LBI10344:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18354              		.loc 21 144 7 is_stmt 1 view .LVU4256
 18355              	.LBB10345:
 18356              	.LBI10345:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18357              		.loc 22 79 7 view .LVU4257
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18358              		.loc 22 79 7 is_stmt 0 view .LVU4258
 18359              	.LBE10345:
 18360              	.LBE10344:
 18361              		.loc 41 107 5 view .LVU4259
 18362 020e 9449     		ldr	r1, .L813+436
 18363 0210 9448     		ldr	r0, .L813+440
 18364 0212 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18365              	.LVL1131:
 18366              	.LBB10346:
 18367              	.LBI10346:
 18368              		.loc 21 162 7 is_stmt 1 view .LVU4260
 18369              	.LBB10347:
 18370              	.LBI10347:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18371              		.loc 22 89 7 view .LVU4261
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18372              		.loc 22 89 7 is_stmt 0 view .LVU4262
 18373              	.LBE10347:
 18374              	.LBE10346:
 18375              	.LBB10348:
 18376              	.LBI10348:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18377              		.loc 21 144 7 is_stmt 1 view .LVU4263
 18378              	.LBB10349:
 18379              	.LBI10349:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18380              		.loc 22 79 7 view .LVU4264
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 720


  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18381              		.loc 22 79 7 is_stmt 0 view .LVU4265
 18382              	.LBE10349:
 18383              	.LBE10348:
 18384              		.loc 41 107 5 view .LVU4266
 18385 0216 9449     		ldr	r1, .L813+444
 18386 0218 9448     		ldr	r0, .L813+448
 18387 021a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18388              	.LVL1132:
 18389              	.LBB10350:
 18390              	.LBI10350:
 18391              		.loc 21 162 7 is_stmt 1 view .LVU4267
 18392              	.LBB10351:
 18393              	.LBI10351:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18394              		.loc 22 89 7 view .LVU4268
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18395              		.loc 22 89 7 is_stmt 0 view .LVU4269
 18396              	.LBE10351:
 18397              	.LBE10350:
 18398              	.LBB10352:
 18399              	.LBI10352:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18400              		.loc 21 144 7 is_stmt 1 view .LVU4270
 18401              	.LBB10353:
 18402              	.LBI10353:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18403              		.loc 22 79 7 view .LVU4271
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18404              		.loc 22 79 7 is_stmt 0 view .LVU4272
 18405              	.LBE10353:
 18406              	.LBE10352:
 18407              		.loc 41 107 5 view .LVU4273
 18408 021e 9449     		ldr	r1, .L813+452
 18409 0220 9448     		ldr	r0, .L813+456
 18410 0222 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18411              	.LVL1133:
 18412              	.LBB10354:
 18413              	.LBI10354:
 18414              		.loc 21 162 7 is_stmt 1 view .LVU4274
 18415              	.LBB10355:
 18416              	.LBI10355:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18417              		.loc 22 89 7 view .LVU4275
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18418              		.loc 22 89 7 is_stmt 0 view .LVU4276
 18419              	.LBE10355:
 18420              	.LBE10354:
 18421              	.LBB10356:
 18422              	.LBI10356:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18423              		.loc 21 144 7 is_stmt 1 view .LVU4277
 18424              	.LBB10357:
 18425              	.LBI10357:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18426              		.loc 22 79 7 view .LVU4278
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 721


 18427              		.loc 22 79 7 is_stmt 0 view .LVU4279
 18428              	.LBE10357:
 18429              	.LBE10356:
 18430              		.loc 41 107 5 view .LVU4280
 18431 0226 9449     		ldr	r1, .L813+460
 18432 0228 9448     		ldr	r0, .L813+464
 18433 022a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18434              	.LVL1134:
 18435              	.LBB10358:
 18436              	.LBI10358:
 18437              		.loc 21 162 7 is_stmt 1 view .LVU4281
 18438              	.LBB10359:
 18439              	.LBI10359:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18440              		.loc 22 89 7 view .LVU4282
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18441              		.loc 22 89 7 is_stmt 0 view .LVU4283
 18442              	.LBE10359:
 18443              	.LBE10358:
 18444              	.LBB10360:
 18445              	.LBI10360:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18446              		.loc 21 144 7 is_stmt 1 view .LVU4284
 18447              	.LBB10361:
 18448              	.LBI10361:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18449              		.loc 22 79 7 view .LVU4285
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18450              		.loc 22 79 7 is_stmt 0 view .LVU4286
 18451              	.LBE10361:
 18452              	.LBE10360:
 18453              		.loc 41 107 5 view .LVU4287
 18454 022e 9449     		ldr	r1, .L813+468
 18455 0230 9448     		ldr	r0, .L813+472
 18456 0232 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18457              	.LVL1135:
 18458              	.LBB10362:
 18459              	.LBI10362:
 18460              		.loc 21 162 7 is_stmt 1 view .LVU4288
 18461              	.LBB10363:
 18462              	.LBI10363:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18463              		.loc 22 89 7 view .LVU4289
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18464              		.loc 22 89 7 is_stmt 0 view .LVU4290
 18465              	.LBE10363:
 18466              	.LBE10362:
 18467              	.LBB10364:
 18468              	.LBI10364:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18469              		.loc 21 144 7 is_stmt 1 view .LVU4291
 18470              	.LBB10365:
 18471              	.LBI10365:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18472              		.loc 22 79 7 view .LVU4292
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18473              		.loc 22 79 7 is_stmt 0 view .LVU4293
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 722


 18474              	.LBE10365:
 18475              	.LBE10364:
 18476              		.loc 41 107 5 view .LVU4294
 18477 0236 9449     		ldr	r1, .L813+476
 18478 0238 9448     		ldr	r0, .L813+480
 18479 023a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18480              	.LVL1136:
 18481              	.LBB10366:
 18482              	.LBI10366:
 18483              		.loc 21 162 7 is_stmt 1 view .LVU4295
 18484              	.LBB10367:
 18485              	.LBI10367:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18486              		.loc 22 89 7 view .LVU4296
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18487              		.loc 22 89 7 is_stmt 0 view .LVU4297
 18488              	.LBE10367:
 18489              	.LBE10366:
 18490              	.LBB10368:
 18491              	.LBI10368:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18492              		.loc 21 144 7 is_stmt 1 view .LVU4298
 18493              	.LBB10369:
 18494              	.LBI10369:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18495              		.loc 22 79 7 view .LVU4299
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18496              		.loc 22 79 7 is_stmt 0 view .LVU4300
 18497              	.LBE10369:
 18498              	.LBE10368:
 18499              		.loc 41 107 5 view .LVU4301
 18500 023e 9449     		ldr	r1, .L813+484
 18501 0240 9448     		ldr	r0, .L813+488
 18502 0242 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18503              	.LVL1137:
 18504              	.LBB10370:
 18505              	.LBI10370:
 18506              		.loc 21 162 7 is_stmt 1 view .LVU4302
 18507              	.LBB10371:
 18508              	.LBI10371:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18509              		.loc 22 89 7 view .LVU4303
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18510              		.loc 22 89 7 is_stmt 0 view .LVU4304
 18511              	.LBE10371:
 18512              	.LBE10370:
 18513              	.LBB10372:
 18514              	.LBI10372:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18515              		.loc 21 144 7 is_stmt 1 view .LVU4305
 18516              	.LBB10373:
 18517              	.LBI10373:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18518              		.loc 22 79 7 view .LVU4306
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18519              		.loc 22 79 7 is_stmt 0 view .LVU4307
 18520              	.LBE10373:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 723


 18521              	.LBE10372:
 18522              		.loc 41 107 5 view .LVU4308
 18523 0246 9449     		ldr	r1, .L813+492
 18524 0248 9448     		ldr	r0, .L813+496
 18525 024a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18526              	.LVL1138:
 18527              	.LBB10374:
 18528              	.LBI10374:
 18529              		.loc 21 162 7 is_stmt 1 view .LVU4309
 18530              	.LBB10375:
 18531              	.LBI10375:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18532              		.loc 22 89 7 view .LVU4310
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18533              		.loc 22 89 7 is_stmt 0 view .LVU4311
 18534              	.LBE10375:
 18535              	.LBE10374:
 18536              	.LBB10376:
 18537              	.LBI10376:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18538              		.loc 21 144 7 is_stmt 1 view .LVU4312
 18539              	.LBB10377:
 18540              	.LBI10377:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18541              		.loc 22 79 7 view .LVU4313
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18542              		.loc 22 79 7 is_stmt 0 view .LVU4314
 18543              	.LBE10377:
 18544              	.LBE10376:
 18545              		.loc 41 107 5 view .LVU4315
 18546 024e 9449     		ldr	r1, .L813+500
 18547 0250 9448     		ldr	r0, .L813+504
 18548 0252 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18549              	.LVL1139:
 18550              	.LBB10378:
 18551              	.LBI10378:
 18552              		.loc 21 162 7 is_stmt 1 view .LVU4316
 18553              	.LBB10379:
 18554              	.LBI10379:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18555              		.loc 22 89 7 view .LVU4317
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18556              		.loc 22 89 7 is_stmt 0 view .LVU4318
 18557              	.LBE10379:
 18558              	.LBE10378:
 18559              	.LBB10380:
 18560              	.LBI10380:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18561              		.loc 21 144 7 is_stmt 1 view .LVU4319
 18562              	.LBB10381:
 18563              	.LBI10381:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18564              		.loc 22 79 7 view .LVU4320
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18565              		.loc 22 79 7 is_stmt 0 view .LVU4321
 18566              	.LBE10381:
 18567              	.LBE10380:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 724


 18568              		.loc 41 107 5 view .LVU4322
 18569 0256 9449     		ldr	r1, .L813+508
 18570 0258 9448     		ldr	r0, .L813+512
 18571 025a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18572              	.LVL1140:
 18573              	.LBB10382:
 18574              	.LBI10382:
 18575              		.loc 21 162 7 is_stmt 1 view .LVU4323
 18576              	.LBB10383:
 18577              	.LBI10383:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18578              		.loc 22 89 7 view .LVU4324
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18579              		.loc 22 89 7 is_stmt 0 view .LVU4325
 18580              	.LBE10383:
 18581              	.LBE10382:
 18582              	.LBB10384:
 18583              	.LBI10384:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18584              		.loc 21 144 7 is_stmt 1 view .LVU4326
 18585              	.LBB10385:
 18586              	.LBI10385:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18587              		.loc 22 79 7 view .LVU4327
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18588              		.loc 22 79 7 is_stmt 0 view .LVU4328
 18589              	.LBE10385:
 18590              	.LBE10384:
 18591              		.loc 41 107 5 view .LVU4329
 18592 025e 9449     		ldr	r1, .L813+516
 18593 0260 9448     		ldr	r0, .L813+520
 18594 0262 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18595              	.LVL1141:
 18596              	.LBB10386:
 18597              	.LBI10386:
 18598              		.loc 21 162 7 is_stmt 1 view .LVU4330
 18599              	.LBB10387:
 18600              	.LBI10387:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18601              		.loc 22 89 7 view .LVU4331
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18602              		.loc 22 89 7 is_stmt 0 view .LVU4332
 18603              	.LBE10387:
 18604              	.LBE10386:
 18605              	.LBB10388:
 18606              	.LBI10388:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18607              		.loc 21 144 7 is_stmt 1 view .LVU4333
 18608              	.LBB10389:
 18609              	.LBI10389:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18610              		.loc 22 79 7 view .LVU4334
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18611              		.loc 22 79 7 is_stmt 0 view .LVU4335
 18612              	.LBE10389:
 18613              	.LBE10388:
 18614              		.loc 41 107 5 view .LVU4336
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 725


 18615 0266 9449     		ldr	r1, .L813+524
 18616 0268 9448     		ldr	r0, .L813+528
 18617 026a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18618              	.LVL1142:
 18619              	.LBB10390:
 18620              	.LBI10390:
 18621              		.loc 21 162 7 is_stmt 1 view .LVU4337
 18622              	.LBB10391:
 18623              	.LBI10391:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18624              		.loc 22 89 7 view .LVU4338
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18625              		.loc 22 89 7 is_stmt 0 view .LVU4339
 18626              	.LBE10391:
 18627              	.LBE10390:
 18628              	.LBB10392:
 18629              	.LBI10392:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18630              		.loc 21 144 7 is_stmt 1 view .LVU4340
 18631              	.LBB10393:
 18632              	.LBI10393:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18633              		.loc 22 79 7 view .LVU4341
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18634              		.loc 22 79 7 is_stmt 0 view .LVU4342
 18635              	.LBE10393:
 18636              	.LBE10392:
 18637              		.loc 41 107 5 view .LVU4343
 18638 026e 9449     		ldr	r1, .L813+532
 18639 0270 9448     		ldr	r0, .L813+536
 18640 0272 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18641              	.LVL1143:
 18642              	.LBB10394:
 18643              	.LBI10394:
 18644              		.loc 21 162 7 is_stmt 1 view .LVU4344
 18645              	.LBB10395:
 18646              	.LBI10395:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18647              		.loc 22 89 7 view .LVU4345
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18648              		.loc 22 89 7 is_stmt 0 view .LVU4346
 18649              	.LBE10395:
 18650              	.LBE10394:
  46:theory.h      ****         "C0",
 18651              		.loc 41 46 39 view .LVU4347
 18652 0276 1A4A     		ldr	r2, .L813+52
 18653 0278 9349     		ldr	r1, .L813+540
 18654 027a 1C48     		ldr	r0, .L813+64
 18655 027c FFF7FEFF 		bl	__aeabi_atexit
 18656              	.LVL1144:
 18657              	.LBB10396:
 18658              	.LBI10396:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18659              		.loc 21 144 7 is_stmt 1 view .LVU4348
 18660              	.LBB10397:
 18661              	.LBI10397:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 726


 18662              		.loc 22 79 7 view .LVU4349
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18663              		.loc 22 79 7 is_stmt 0 view .LVU4350
 18664              	.LBE10397:
 18665              	.LBE10396:
 108:theory.h      **** 
 109:theory.h      ****     // Note: Mode names are currently abbreviated due to 
 110:theory.h      ****     // Daisy Patch screen size limitations.
 111:theory.h      ****     //
 112:theory.h      ****     // TODO support exotic modes
 113:theory.h      ****     const std::vector<std::string> modes {
 114:theory.h      ****         "Major",
 115:theory.h      ****         "Minor",
 116:theory.h      ****         "Dorian",
 117:theory.h      ****         "Phyrgi", // Phyrgian
 118:theory.h      ****         "Lydian",
 119:theory.h      ****         "Mixo",   // Mixolydian
 120:theory.h      ****         "Locri",  // Locrian
 121:theory.h      ****     };
 18666              		.loc 41 121 5 view .LVU4351
 18667 0280 9249     		ldr	r1, .L813+544
 18668 0282 2846     		mov	r0, r5
 18669 0284 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18670              	.LVL1145:
 18671              	.LBB10398:
 18672              	.LBI10398:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18673              		.loc 21 144 7 is_stmt 1 view .LVU4352
 18674              	.LBB10399:
 18675              	.LBI10399:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18676              		.loc 22 79 7 view .LVU4353
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18677              		.loc 22 79 7 is_stmt 0 view .LVU4354
 18678              	.LBE10399:
 18679              	.LBE10398:
 18680              		.loc 41 121 5 view .LVU4355
 18681 0288 9149     		ldr	r1, .L813+548
 18682 028a 6AA8     		add	r0, sp, #424
 18683 028c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18684              	.LVL1146:
 18685              	.LBB10400:
 18686              	.LBI10400:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18687              		.loc 21 144 7 is_stmt 1 view .LVU4356
 18688              	.LBB10401:
 18689              	.LBI10401:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18690              		.loc 22 79 7 view .LVU4357
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18691              		.loc 22 79 7 is_stmt 0 view .LVU4358
 18692              	.LBE10401:
 18693              	.LBE10400:
 18694              		.loc 41 121 5 view .LVU4359
 18695 0290 9049     		ldr	r1, .L813+552
 18696 0292 70A8     		add	r0, sp, #448
 18697 0294 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 727


 18698              	.LVL1147:
 18699              	.LBB10402:
 18700              	.LBI10402:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18701              		.loc 21 144 7 is_stmt 1 view .LVU4360
 18702              	.LBB10403:
 18703              	.LBI10403:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18704              		.loc 22 79 7 view .LVU4361
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18705              		.loc 22 79 7 is_stmt 0 view .LVU4362
 18706              	.LBE10403:
 18707              	.LBE10402:
 18708              		.loc 41 121 5 view .LVU4363
 18709 0298 8F49     		ldr	r1, .L813+556
 18710 029a 76A8     		add	r0, sp, #472
 18711 029c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18712              	.LVL1148:
 18713              	.LBB10404:
 18714              	.LBI10404:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18715              		.loc 21 144 7 is_stmt 1 view .LVU4364
 18716              	.LBB10405:
 18717              	.LBI10405:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18718              		.loc 22 79 7 view .LVU4365
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18719              		.loc 22 79 7 is_stmt 0 view .LVU4366
 18720              	.LBE10405:
 18721              	.LBE10404:
 18722              		.loc 41 121 5 view .LVU4367
 18723 02a0 8E49     		ldr	r1, .L813+560
 18724 02a2 7CA8     		add	r0, sp, #496
 18725 02a4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18726              	.LVL1149:
 18727 02a8 1AE1     		b	.L814
 18728              	.L815:
 18729 02aa 00BF     		.align	2
 18730              	.L813:
 18731 02ac 00000000 		.word	.LC18
 18732 02b0 04000000 		.word	.LC19
 18733 02b4 08000000 		.word	.LC20
 18734 02b8 0C000000 		.word	.LC21
 18735 02bc 10000000 		.word	.LC22
 18736 02c0 14000000 		.word	.LC23
 18737 02c4 18000000 		.word	.LC24
 18738 02c8 1C000000 		.word	.LC25
 18739 02cc 20000000 		.word	.LC26
 18740 02d0 24000000 		.word	.LC27
 18741 02d4 28000000 		.word	.LC28
 18742 02d8 2C000000 		.word	.LC29
 18743 02dc 00000000 		.word	.LANCHOR18
 18744 02e0 00000000 		.word	__dso_handle
 18745 02e4 00000000 		.word	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 18746 02e8 30000000 		.word	.LC30
 18747 02ec 00000000 		.word	.LANCHOR24
 18748 02f0 34000000 		.word	.LC31
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 728


 18749 02f4 18000000 		.word	.LANCHOR24+24
 18750 02f8 38000000 		.word	.LC32
 18751 02fc 30000000 		.word	.LANCHOR24+48
 18752 0300 3C000000 		.word	.LC33
 18753 0304 48000000 		.word	.LANCHOR24+72
 18754 0308 40000000 		.word	.LC34
 18755 030c 60000000 		.word	.LANCHOR24+96
 18756 0310 44000000 		.word	.LC35
 18757 0314 78000000 		.word	.LANCHOR24+120
 18758 0318 48000000 		.word	.LC36
 18759 031c 90000000 		.word	.LANCHOR24+144
 18760 0320 4C000000 		.word	.LC37
 18761 0324 A8000000 		.word	.LANCHOR24+168
 18762 0328 50000000 		.word	.LC38
 18763 032c C0000000 		.word	.LANCHOR24+192
 18764 0330 54000000 		.word	.LC39
 18765 0334 D8000000 		.word	.LANCHOR24+216
 18766 0338 58000000 		.word	.LC40
 18767 033c F0000000 		.word	.LANCHOR24+240
 18768 0340 5C000000 		.word	.LC41
 18769 0344 08010000 		.word	.LANCHOR24+264
 18770 0348 60000000 		.word	.LC42
 18771 034c 20010000 		.word	.LANCHOR24+288
 18772 0350 64000000 		.word	.LC43
 18773 0354 38010000 		.word	.LANCHOR24+312
 18774 0358 68000000 		.word	.LC44
 18775 035c 50010000 		.word	.LANCHOR24+336
 18776 0360 6C000000 		.word	.LC45
 18777 0364 68010000 		.word	.LANCHOR24+360
 18778 0368 70000000 		.word	.LC46
 18779 036c 80010000 		.word	.LANCHOR24+384
 18780 0370 74000000 		.word	.LC47
 18781 0374 98010000 		.word	.LANCHOR24+408
 18782 0378 78000000 		.word	.LC48
 18783 037c B0010000 		.word	.LANCHOR24+432
 18784 0380 7C000000 		.word	.LC49
 18785 0384 C8010000 		.word	.LANCHOR24+456
 18786 0388 80000000 		.word	.LC50
 18787 038c E0010000 		.word	.LANCHOR24+480
 18788 0390 84000000 		.word	.LC51
 18789 0394 F8010000 		.word	.LANCHOR24+504
 18790 0398 88000000 		.word	.LC52
 18791 039c 10020000 		.word	.LANCHOR24+528
 18792 03a0 8C000000 		.word	.LC53
 18793 03a4 28020000 		.word	.LANCHOR24+552
 18794 03a8 90000000 		.word	.LC54
 18795 03ac 40020000 		.word	.LANCHOR24+576
 18796 03b0 94000000 		.word	.LC55
 18797 03b4 58020000 		.word	.LANCHOR24+600
 18798 03b8 98000000 		.word	.LC56
 18799 03bc 70020000 		.word	.LANCHOR24+624
 18800 03c0 9C000000 		.word	.LC57
 18801 03c4 88020000 		.word	.LANCHOR24+648
 18802 03c8 A0000000 		.word	.LC58
 18803 03cc A0020000 		.word	.LANCHOR24+672
 18804 03d0 A4000000 		.word	.LC59
 18805 03d4 B8020000 		.word	.LANCHOR24+696
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 729


 18806 03d8 A8000000 		.word	.LC60
 18807 03dc D0020000 		.word	.LANCHOR24+720
 18808 03e0 AC000000 		.word	.LC61
 18809 03e4 E8020000 		.word	.LANCHOR24+744
 18810 03e8 B0000000 		.word	.LC62
 18811 03ec 00030000 		.word	.LANCHOR24+768
 18812 03f0 B4000000 		.word	.LC63
 18813 03f4 18030000 		.word	.LANCHOR24+792
 18814 03f8 B8000000 		.word	.LC64
 18815 03fc 30030000 		.word	.LANCHOR24+816
 18816 0400 BC000000 		.word	.LC65
 18817 0404 48030000 		.word	.LANCHOR24+840
 18818 0408 C0000000 		.word	.LC66
 18819 040c 60030000 		.word	.LANCHOR24+864
 18820 0410 C4000000 		.word	.LC67
 18821 0414 78030000 		.word	.LANCHOR24+888
 18822 0418 C8000000 		.word	.LC68
 18823 041c 90030000 		.word	.LANCHOR24+912
 18824 0420 CC000000 		.word	.LC69
 18825 0424 A8030000 		.word	.LANCHOR24+936
 18826 0428 D0000000 		.word	.LC70
 18827 042c C0030000 		.word	.LANCHOR24+960
 18828 0430 D4000000 		.word	.LC71
 18829 0434 D8030000 		.word	.LANCHOR24+984
 18830 0438 D8000000 		.word	.LC72
 18831 043c F0030000 		.word	.LANCHOR24+1008
 18832 0440 DC000000 		.word	.LC73
 18833 0444 08040000 		.word	.LANCHOR24+1032
 18834 0448 E0000000 		.word	.LC74
 18835 044c 20040000 		.word	.LANCHOR24+1056
 18836 0450 E4000000 		.word	.LC75
 18837 0454 38040000 		.word	.LANCHOR24+1080
 18838 0458 E8000000 		.word	.LC76
 18839 045c 50040000 		.word	.LANCHOR24+1104
 18840 0460 EC000000 		.word	.LC77
 18841 0464 68040000 		.word	.LANCHOR24+1128
 18842 0468 F0000000 		.word	.LC78
 18843 046c 80040000 		.word	.LANCHOR24+1152
 18844 0470 F4000000 		.word	.LC79
 18845 0474 98040000 		.word	.LANCHOR24+1176
 18846 0478 F8000000 		.word	.LC80
 18847 047c B0040000 		.word	.LANCHOR24+1200
 18848 0480 FC000000 		.word	.LC81
 18849 0484 C8040000 		.word	.LANCHOR24+1224
 18850 0488 00010000 		.word	.LC82
 18851 048c E0040000 		.word	.LANCHOR24+1248
 18852 0490 04010000 		.word	.LC83
 18853 0494 F8040000 		.word	.LANCHOR24+1272
 18854 0498 08010000 		.word	.LC84
 18855 049c 10050000 		.word	.LANCHOR24+1296
 18856 04a0 0C010000 		.word	.LC85
 18857 04a4 28050000 		.word	.LANCHOR24+1320
 18858 04a8 10010000 		.word	.LC86
 18859 04ac 40050000 		.word	.LANCHOR24+1344
 18860 04b0 14010000 		.word	.LC87
 18861 04b4 58050000 		.word	.LANCHOR24+1368
 18862 04b8 18010000 		.word	.LC88
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 730


 18863 04bc 70050000 		.word	.LANCHOR24+1392
 18864 04c0 1C010000 		.word	.LC89
 18865 04c4 88050000 		.word	.LANCHOR24+1416
 18866 04c8 00000000 		.word	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED1Ev
 18867 04cc 20010000 		.word	.LC90
 18868 04d0 28010000 		.word	.LC91
 18869 04d4 30010000 		.word	.LC92
 18870 04d8 38010000 		.word	.LC93
 18871 04dc 40010000 		.word	.LC94
 18872              	.L814:
 18873              	.LVL1150:
 18874              	.LBB10406:
 18875              	.LBI10406:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18876              		.loc 21 144 7 is_stmt 1 view .LVU4368
 18877              	.LBB10407:
 18878              	.LBI10407:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18879              		.loc 22 79 7 view .LVU4369
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18880              		.loc 22 79 7 is_stmt 0 view .LVU4370
 18881              	.LBE10407:
 18882              	.LBE10406:
 18883              		.loc 41 121 5 view .LVU4371
 18884 04e0 B449     		ldr	r1, .L816
 18885 04e2 82A8     		add	r0, sp, #520
 18886 04e4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18887              	.LVL1151:
 18888              	.LBB10408:
 18889              	.LBI10408:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18890              		.loc 21 144 7 is_stmt 1 view .LVU4372
 18891              	.LBB10409:
 18892              	.LBI10409:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18893              		.loc 22 79 7 view .LVU4373
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18894              		.loc 22 79 7 is_stmt 0 view .LVU4374
 18895              	.LBE10409:
 18896              	.LBE10408:
 18897              		.loc 41 121 5 view .LVU4375
 18898 04e8 B349     		ldr	r1, .L816+4
 18899 04ea 88A8     		add	r0, sp, #544
 18900 04ec FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 18901              	.LVL1152:
 18902 04f0 0723     		movs	r3, #7
 18903 04f2 18AA     		add	r2, sp, #96
 18904 04f4 1895     		str	r5, [sp, #96]
 18905 04f6 1993     		str	r3, [sp, #100]
 18906              	.LVL1153:
 18907              	.LBB10410:
 18908              	.LBI10410:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 18909              		.loc 21 144 7 is_stmt 1 view .LVU4376
 18910              	.LBB10411:
 18911              	.LBI10411:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 731


 18912              		.loc 22 79 7 view .LVU4377
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18913              		.loc 22 79 7 is_stmt 0 view .LVU4378
 18914              	.LBE10411:
 18915              	.LBE10410:
 18916              		.loc 41 121 5 view .LVU4379
 18917 04f8 5DAB     		add	r3, sp, #372
 18918 04fa B048     		ldr	r0, .L816+8
 18919 04fc 06CA     		ldm	r2, {r1, r2}
 18920 04fe FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 18921              	.LVL1154:
 18922              	.LBB10412:
 18923              	.LBI10412:
 18924              		.loc 21 162 7 is_stmt 1 view .LVU4380
 18925              	.LBB10413:
 18926              	.LBI10413:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18927              		.loc 22 89 7 view .LVU4381
 18928              	.L759:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18929              		.loc 22 89 7 is_stmt 0 view .LVU4382
 18930              	.LBE10413:
 18931              	.LBE10412:
 18932              	.LBB10414:
 18933              	.LBI10414:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 18934              		.loc 19 657 7 is_stmt 1 view .LVU4383
 18935              	.LBB10415:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 18936              		.loc 19 658 19 is_stmt 0 view .LVU4384
 18937 0502 3046     		mov	r0, r6
 18938 0504 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 18939              	.LVL1155:
 18940              	.LBB10416:
 18941              	.LBI10416:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 18942              		.loc 19 150 14 is_stmt 1 view .LVU4385
 18943              	.LBB10417:
 18944              	.LBI10417:
 18945              		.loc 21 162 7 view .LVU4386
 18946              	.LBB10418:
 18947              	.LBI10418:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18948              		.loc 22 89 7 view .LVU4387
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18949              		.loc 22 89 7 is_stmt 0 view .LVU4388
 18950              	.LBE10418:
 18951              	.LBE10417:
 18952              	.LBE10416:
 18953              	.LBE10415:
 18954              	.LBE10414:
 18955              		.loc 41 121 5 view .LVU4389
 18956 0508 B542     		cmp	r5, r6
 18957 050a A6F11806 		sub	r6, r6, #24
 18958 050e F8D1     		bne	.L759
 18959              	.LVL1156:
 18960              	.LBB10419:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 732


 18961              	.LBI10419:
 18962              		.loc 21 162 7 is_stmt 1 view .LVU4390
 18963              	.LBB10420:
 18964              	.LBI10420:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18965              		.loc 22 89 7 view .LVU4391
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18966              		.loc 22 89 7 is_stmt 0 view .LVU4392
 18967              	.LBE10420:
 18968              	.LBE10419:
 18969              	.LBB10421:
 18970              	.LBI10421:
 18971              		.loc 21 162 7 is_stmt 1 view .LVU4393
 18972              	.LBB10422:
 18973              	.LBI10422:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18974              		.loc 22 89 7 view .LVU4394
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18975              		.loc 22 89 7 is_stmt 0 view .LVU4395
 18976              	.LBE10422:
 18977              	.LBE10421:
 18978              	.LBB10423:
 18979              	.LBI10423:
 18980              		.loc 21 162 7 is_stmt 1 view .LVU4396
 18981              	.LBB10424:
 18982              	.LBI10424:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18983              		.loc 22 89 7 view .LVU4397
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18984              		.loc 22 89 7 is_stmt 0 view .LVU4398
 18985              	.LBE10424:
 18986              	.LBE10423:
 18987              	.LBB10425:
 18988              	.LBI10425:
 18989              		.loc 21 162 7 is_stmt 1 view .LVU4399
 18990              	.LBB10426:
 18991              	.LBI10426:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18992              		.loc 22 89 7 view .LVU4400
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18993              		.loc 22 89 7 is_stmt 0 view .LVU4401
 18994              	.LBE10426:
 18995              	.LBE10425:
 18996              	.LBB10427:
 18997              	.LBI10427:
 18998              		.loc 21 162 7 is_stmt 1 view .LVU4402
 18999              	.LBB10428:
 19000              	.LBI10428:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19001              		.loc 22 89 7 view .LVU4403
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19002              		.loc 22 89 7 is_stmt 0 view .LVU4404
 19003              	.LBE10428:
 19004              	.LBE10427:
 19005              	.LBB10429:
 19006              	.LBI10429:
 19007              		.loc 21 162 7 is_stmt 1 view .LVU4405
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 733


 19008              	.LBB10430:
 19009              	.LBI10430:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19010              		.loc 22 89 7 view .LVU4406
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19011              		.loc 22 89 7 is_stmt 0 view .LVU4407
 19012              	.LBE10430:
 19013              	.LBE10429:
 19014              	.LBB10431:
 19015              	.LBI10431:
 19016              		.loc 21 162 7 is_stmt 1 view .LVU4408
 19017              	.LBB10432:
 19018              	.LBI10432:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19019              		.loc 22 89 7 view .LVU4409
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19020              		.loc 22 89 7 is_stmt 0 view .LVU4410
 19021              	.LBE10432:
 19022              	.LBE10431:
 122:theory.h      **** 
 123:theory.h      ****     // Maps scale names to their first octave of semitone values
 124:theory.h      ****     const std::map<std::string, std::vector<int>> modeToSemitones {
 125:theory.h      ****         {"Major",  std::vector<int>{0, 2, 4, 5, 7, 9, 11}},
 19023              		.loc 41 125 57 view .LVU4411
 19024 0510 AB4D     		ldr	r5, .L816+12
 19025 0512 4FF00709 		mov	r9, #7
 113:theory.h      ****         "Major",
 19026              		.loc 41 113 36 view .LVU4412
 19027 0516 AB4A     		ldr	r2, .L816+16
 19028              		.loc 41 125 57 view .LVU4413
 19029 0518 5DAF     		add	r7, sp, #372
 113:theory.h      ****         "Major",
 19030              		.loc 41 113 36 view .LVU4414
 19031 051a AB49     		ldr	r1, .L816+20
 19032 051c 6DAE     		add	r6, sp, #436
 19033 051e A748     		ldr	r0, .L816+8
 19034              	.LBB10433:
 19035              	.LBB10434:
 19036              	.LBB10435:
 19037              	.LBB10436:
 19038              	.LBB10437:
 19039              	.LBB10438:
 19040              	.LBB10439:
 19041              	.LBB10440:
 19042              	.LBB10441:
 19043              	.LBB10442:
 19044              	.LBB10443:
 19045              	.LBB10444:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 19046              		.loc 20 322 14 view .LVU4415
 19047 0520 4FF00008 		mov	r8, #0
 19048              	.LBE10444:
 19049              	.LBE10443:
 19050              	.LBE10442:
 19051              	.LBE10441:
 19052              	.LBE10440:
 19053              	.LBE10439:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 734


 19054              	.LBE10438:
 19055              	.LBE10437:
 19056              	.LBE10436:
 19057              	.LBE10435:
 19058              	.LBE10434:
 19059              	.LBE10433:
 113:theory.h      ****         "Major",
 19060              		.loc 41 113 36 view .LVU4416
 19061 0524 FFF7FEFF 		bl	__aeabi_atexit
 19062              	.LVL1157:
 19063              		.loc 41 125 57 view .LVU4417
 19064 0528 0DF1580C 		add	ip, sp, #88
 19065              	.LBB10573:
 19066              	.LBB10574:
 19067              	.LBB10575:
 19068              	.LBB10576:
 19069              	.LBB10577:
 19070              	.LBB10578:
 19071              	.LBB10579:
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reset();
 19072              		.loc 29 175 26 view .LVU4418
 19073 052c DFF8BCA2 		ldr	r10, .L816+56
 19074 0530 0DF52C7B 		add	fp, sp, #688
 19075              	.LBE10579:
 19076              	.LBE10578:
 19077              	.LBE10577:
 19078              	.LBE10576:
 19079              	.LBE10575:
 19080              	.LBE10574:
 19081              	.LBE10573:
 19082              		.loc 41 125 57 view .LVU4419
 19083 0534 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19084 0536 CDE91679 		strd	r7, r9, [sp, #88]
 19085              	.LVL1158:
 19086              	.LBB10896:
 19087              	.LBI10896:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19088              		.loc 21 144 7 is_stmt 1 view .LVU4420
 19089              	.LBB10897:
 19090              	.LBI10897:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19091              		.loc 22 79 7 view .LVU4421
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19092              		.loc 22 79 7 is_stmt 0 view .LVU4422
 19093              	.LBE10897:
 19094              	.LBE10896:
 19095              		.loc 41 125 57 view .LVU4423
 19096 053a 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 19097 053c 95E80700 		ldm	r5, {r0, r1, r2}
 19098 0540 08AB     		add	r3, sp, #32
 19099 0542 87E80700 		stm	r7, {r0, r1, r2}
 19100 0546 9CE80600 		ldm	ip, {r1, r2}
 19101 054a 30A8     		add	r0, sp, #192
 126:theory.h      ****         {"Minor",  std::vector<int>{0, 2, 3, 5, 7, 8, 10}},
 19102              		.loc 41 126 57 view .LVU4424
 19103 054c 56AF     		add	r7, sp, #344
 125:theory.h      ****         {"Minor",  std::vector<int>{0, 2, 3, 5, 7, 8, 10}},
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 735


 19104              		.loc 41 125 57 view .LVU4425
 19105 054e FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 19106              	.LVL1159:
 127:theory.h      ****         {"Dorian", std::vector<int>{0, 2, 3, 5, 7, 9, 10}},
 128:theory.h      ****         {"Phyrgi", std::vector<int>{0, 1, 3, 5, 7, 9, 10}},
 129:theory.h      ****         {"Lydian", std::vector<int>{0, 2, 4, 6, 7, 9, 11}},
 130:theory.h      ****         {"Mixo",   std::vector<int>{0, 2, 4, 5, 7, 9, 10}},
 131:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 132:theory.h      ****     };
 19107              		.loc 41 132 5 view .LVU4426
 19108 0552 30AA     		add	r2, sp, #192
 19109 0554 9D49     		ldr	r1, .L816+24
 19110 0556 2046     		mov	r0, r4
 19111 0558 FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA6_KcS9_L
 19112              	.LVL1160:
 126:theory.h      ****         {"Dorian", std::vector<int>{0, 2, 3, 5, 7, 9, 10}},
 19113              		.loc 41 126 57 view .LVU4427
 19114 055c 05F10C0C 		add	ip, r5, #12
 19115 0560 0DF1500E 		add	lr, sp, #80
 19116 0564 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 19117 0568 CDE91479 		strd	r7, r9, [sp, #80]
 19118              	.LVL1161:
 19119              	.LBB10898:
 19120              	.LBI10898:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19121              		.loc 21 144 7 is_stmt 1 view .LVU4428
 19122              	.LBB10899:
 19123              	.LBI10899:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19124              		.loc 22 79 7 view .LVU4429
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19125              		.loc 22 79 7 is_stmt 0 view .LVU4430
 19126              	.LBE10899:
 19127              	.LBE10898:
 126:theory.h      ****         {"Dorian", std::vector<int>{0, 2, 3, 5, 7, 9, 10}},
 19128              		.loc 41 126 57 view .LVU4431
 19129 056c 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 19130 056e 9CE80700 		ldm	ip, {r0, r1, r2}
 19131 0572 07AB     		add	r3, sp, #28
 19132 0574 87E80700 		stm	r7, {r0, r1, r2}
 19133 0578 9EE80600 		ldm	lr, {r1, r2}
 19134 057c 2DA8     		add	r0, sp, #180
 127:theory.h      ****         {"Phyrgi", std::vector<int>{0, 1, 3, 5, 7, 9, 10}},
 19135              		.loc 41 127 57 view .LVU4432
 19136 057e 4FAF     		add	r7, sp, #316
 126:theory.h      ****         {"Dorian", std::vector<int>{0, 2, 3, 5, 7, 9, 10}},
 19137              		.loc 41 126 57 view .LVU4433
 19138 0580 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 19139              	.LVL1162:
 19140              		.loc 41 132 5 view .LVU4434
 19141 0584 2DAA     		add	r2, sp, #180
 19142 0586 9249     		ldr	r1, .L816+28
 19143 0588 3046     		mov	r0, r6
 19144 058a FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA6_KcS9_L
 19145              	.LVL1163:
 127:theory.h      ****         {"Phyrgi", std::vector<int>{0, 1, 3, 5, 7, 9, 10}},
 19146              		.loc 41 127 57 view .LVU4435
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 736


 19147 058e 05F1280C 		add	ip, r5, #40
 19148 0592 0DF1480E 		add	lr, sp, #72
 19149 0596 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 19150 059a CDE91279 		strd	r7, r9, [sp, #72]
 19151              	.LVL1164:
 19152              	.LBB10900:
 19153              	.LBI10900:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19154              		.loc 21 144 7 is_stmt 1 view .LVU4436
 19155              	.LBB10901:
 19156              	.LBI10901:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19157              		.loc 22 79 7 view .LVU4437
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19158              		.loc 22 79 7 is_stmt 0 view .LVU4438
 19159              	.LBE10901:
 19160              	.LBE10900:
 127:theory.h      ****         {"Phyrgi", std::vector<int>{0, 1, 3, 5, 7, 9, 10}},
 19161              		.loc 41 127 57 view .LVU4439
 19162 059e 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 19163 05a0 9CE80700 		ldm	ip, {r0, r1, r2}
 19164 05a4 06AB     		add	r3, sp, #24
 19165 05a6 87E80700 		stm	r7, {r0, r1, r2}
 19166 05aa 9EE80600 		ldm	lr, {r1, r2}
 19167 05ae 2AA8     		add	r0, sp, #168
 128:theory.h      ****         {"Lydian", std::vector<int>{0, 2, 4, 6, 7, 9, 11}},
 19168              		.loc 41 128 57 view .LVU4440
 19169 05b0 48AF     		add	r7, sp, #288
 127:theory.h      ****         {"Phyrgi", std::vector<int>{0, 1, 3, 5, 7, 9, 10}},
 19170              		.loc 41 127 57 view .LVU4441
 19171 05b2 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 19172              	.LVL1165:
 19173              		.loc 41 132 5 view .LVU4442
 19174 05b6 2AAA     		add	r2, sp, #168
 19175 05b8 8649     		ldr	r1, .L816+32
 19176 05ba 76A8     		add	r0, sp, #472
 19177 05bc FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA7_KcS9_L
 19178              	.LVL1166:
 128:theory.h      ****         {"Lydian", std::vector<int>{0, 2, 4, 6, 7, 9, 11}},
 19179              		.loc 41 128 57 view .LVU4443
 19180 05c0 05F1440C 		add	ip, r5, #68
 19181 05c4 0DF1400E 		add	lr, sp, #64
 19182 05c8 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 19183 05cc CDE91079 		strd	r7, r9, [sp, #64]
 19184              	.LVL1167:
 19185              	.LBB10902:
 19186              	.LBI10902:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19187              		.loc 21 144 7 is_stmt 1 view .LVU4444
 19188              	.LBB10903:
 19189              	.LBI10903:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19190              		.loc 22 79 7 view .LVU4445
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19191              		.loc 22 79 7 is_stmt 0 view .LVU4446
 19192              	.LBE10903:
 19193              	.LBE10902:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 737


 128:theory.h      ****         {"Lydian", std::vector<int>{0, 2, 4, 6, 7, 9, 11}},
 19194              		.loc 41 128 57 view .LVU4447
 19195 05d0 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 19196 05d2 9CE80700 		ldm	ip, {r0, r1, r2}
 19197 05d6 05AB     		add	r3, sp, #20
 19198 05d8 87E80700 		stm	r7, {r0, r1, r2}
 19199 05dc 9EE80600 		ldm	lr, {r1, r2}
 19200 05e0 27A8     		add	r0, sp, #156
 129:theory.h      ****         {"Mixo",   std::vector<int>{0, 2, 4, 5, 7, 9, 10}},
 19201              		.loc 41 129 57 view .LVU4448
 19202 05e2 41AF     		add	r7, sp, #260
 128:theory.h      ****         {"Lydian", std::vector<int>{0, 2, 4, 6, 7, 9, 11}},
 19203              		.loc 41 128 57 view .LVU4449
 19204 05e4 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 19205              	.LVL1168:
 19206              		.loc 41 132 5 view .LVU4450
 19207 05e8 27AA     		add	r2, sp, #156
 19208 05ea 7B49     		ldr	r1, .L816+36
 19209 05ec 7FA8     		add	r0, sp, #508
 19210 05ee FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA7_KcS9_L
 19211              	.LVL1169:
 129:theory.h      ****         {"Mixo",   std::vector<int>{0, 2, 4, 5, 7, 9, 10}},
 19212              		.loc 41 129 57 view .LVU4451
 19213 05f2 05F1600C 		add	ip, r5, #96
 19214 05f6 0DF1380E 		add	lr, sp, #56
 19215 05fa BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 19216 05fe CDE90E79 		strd	r7, r9, [sp, #56]
 19217              	.LVL1170:
 19218              	.LBB10904:
 19219              	.LBI10904:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19220              		.loc 21 144 7 is_stmt 1 view .LVU4452
 19221              	.LBB10905:
 19222              	.LBI10905:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19223              		.loc 22 79 7 view .LVU4453
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19224              		.loc 22 79 7 is_stmt 0 view .LVU4454
 19225              	.LBE10905:
 19226              	.LBE10904:
 129:theory.h      ****         {"Mixo",   std::vector<int>{0, 2, 4, 5, 7, 9, 10}},
 19227              		.loc 41 129 57 view .LVU4455
 19228 0602 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 19229 0604 9CE80700 		ldm	ip, {r0, r1, r2}
 19230 0608 04AB     		add	r3, sp, #16
 19231 060a 87E80700 		stm	r7, {r0, r1, r2}
 19232 060e 9EE80600 		ldm	lr, {r1, r2}
 19233 0612 24A8     		add	r0, sp, #144
 130:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 19234              		.loc 41 130 57 view .LVU4456
 19235 0614 3AAF     		add	r7, sp, #232
 129:theory.h      ****         {"Mixo",   std::vector<int>{0, 2, 4, 5, 7, 9, 10}},
 19236              		.loc 41 129 57 view .LVU4457
 19237 0616 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 19238              	.LVL1171:
 19239              		.loc 41 132 5 view .LVU4458
 19240 061a 24AA     		add	r2, sp, #144
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 738


 19241 061c 6F49     		ldr	r1, .L816+40
 19242 061e 88A8     		add	r0, sp, #544
 19243 0620 FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA7_KcS9_L
 19244              	.LVL1172:
 130:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 19245              		.loc 41 130 57 view .LVU4459
 19246 0624 05F17C0C 		add	ip, r5, #124
 19247 0628 0DF1300E 		add	lr, sp, #48
 131:theory.h      ****     };
 19248              		.loc 41 131 57 view .LVU4460
 19249 062c 9835     		adds	r5, r5, #152
 130:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 19250              		.loc 41 130 57 view .LVU4461
 19251 062e BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 19252 0632 CDE90C79 		strd	r7, r9, [sp, #48]
 19253              	.LVL1173:
 19254              	.LBB10906:
 19255              	.LBI10906:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19256              		.loc 21 144 7 is_stmt 1 view .LVU4462
 19257              	.LBB10907:
 19258              	.LBI10907:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19259              		.loc 22 79 7 view .LVU4463
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19260              		.loc 22 79 7 is_stmt 0 view .LVU4464
 19261              	.LBE10907:
 19262              	.LBE10906:
 130:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 19263              		.loc 41 130 57 view .LVU4465
 19264 0636 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 19265 0638 9CE80700 		ldm	ip, {r0, r1, r2}
 19266 063c 03AB     		add	r3, sp, #12
 19267 063e 87E80700 		stm	r7, {r0, r1, r2}
 19268 0642 9EE80600 		ldm	lr, {r1, r2}
 19269 0646 21A8     		add	r0, sp, #132
 131:theory.h      ****     };
 19270              		.loc 41 131 57 view .LVU4466
 19271 0648 33AF     		add	r7, sp, #204
 130:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 19272              		.loc 41 130 57 view .LVU4467
 19273 064a FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 19274              	.LVL1174:
 19275              	.LBB10908:
 19276              	.LBI10433:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 19277              		.loc 30 352 12 is_stmt 1 view .LVU4468
 19278              	.LBB10510:
 19279              	.LBI10510:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 19280              		.loc 34 76 5 view .LVU4469
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 19281              		.loc 34 76 5 is_stmt 0 view .LVU4470
 19282              	.LBE10510:
 19283              	.LBB10511:
 19284              	.LBI10511:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 739


 19285              		.loc 21 144 7 is_stmt 1 view .LVU4471
 19286              	.LBB10512:
 19287              	.LBI10512:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19288              		.loc 22 79 7 view .LVU4472
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19289              		.loc 22 79 7 is_stmt 0 view .LVU4473
 19290              	.LBE10512:
 19291              	.LBE10511:
 19292              	.LBB10513:
 19293              	.LBI10434:
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 19294              		.loc 19 525 7 is_stmt 1 view .LVU4474
 19295              	.LBB10503:
 19296              	.LBB10486:
 19297              	.LBI10486:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19298              		.loc 19 190 7 view .LVU4475
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19299              		.loc 19 190 7 is_stmt 0 view .LVU4476
 19300              	.LBE10486:
 19301              	.LBB10487:
 19302              	.LBI10487:
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 19303              		.loc 19 156 2 is_stmt 1 view .LVU4477
 19304              	.LBB10488:
 19305              	.LBB10489:
 19306              	.LBB10490:
 19307              	.LBI10490:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 19308              		.loc 21 147 7 view .LVU4478
 19309              	.LBB10491:
 19310              	.LBI10491:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19311              		.loc 22 82 7 view .LVU4479
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19312              		.loc 22 82 7 is_stmt 0 view .LVU4480
 19313              	.LBE10491:
 19314              	.LBE10490:
 19315              	.LBE10489:
 19316              	.LBE10488:
 19317              	.LBE10487:
 19318              	.LBE10503:
 19319              	.LBE10513:
 19320              	.LBB10514:
 19321              	.LBB10515:
 19322              	.LBB10516:
 19323              	.LBB10517:
 19324              	.LBB10518:
 19325              	.LBB10519:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 19326              		.loc 26 104 43 view .LVU4481
 19327 064e 219B     		ldr	r3, [sp, #132]
 19328              	.LBE10519:
 19329              	.LBE10518:
 19330              	.LBE10517:
 19331              	.LBE10516:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 740


 19332              	.LBE10515:
 19333              	.LBE10514:
 19334              	.LBB10557:
 19335              	.LBB10504:
 19336              	.LBB10496:
 19337              	.LBB10482:
 19338              	.LBB10478:
 19339              	.LBB10474:
 19340              	.LBB10470:
 19341              	.LBB10466:
 19342              	.LBB10453:
 19343              	.LBB10447:
 19344              	.LBB10445:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 19345              		.loc 20 322 14 view .LVU4482
 19346 0650 84F8C080 		strb	r8, [r4, #192]
 19347              	.LBE10445:
 19348              	.LBE10447:
 19349              	.LBE10453:
 19350              	.LBE10466:
 19351              	.LBE10470:
 19352              	.LBE10474:
 19353              	.LBE10478:
 19354              	.LBE10482:
 19355              	.LBE10496:
 19356              	.LBE10504:
 19357              	.LBE10557:
 19358              	.LBE10908:
 131:theory.h      ****     };
 19359              		.loc 41 131 57 view .LVU4483
 19360 0654 0DF1280C 		add	ip, sp, #40
 19361              	.LBB10909:
 19362              	.LBB10558:
 19363              	.LBB10550:
 19364              	.LBB10543:
 19365              	.LBB10532:
 19366              	.LBB10526:
 19367              	.LBB10520:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 19368              		.loc 26 104 43 view .LVU4484
 19369 0658 C4F8CC30 		str	r3, [r4, #204]
 19370 065c 229B     		ldr	r3, [sp, #136]
 19371              	.LBE10520:
 19372              	.LBE10526:
 19373              	.LBE10532:
 19374              	.LBE10543:
 19375              	.LBE10550:
 19376              	.LBE10558:
 19377              	.LBE10909:
 131:theory.h      ****     };
 19378              		.loc 41 131 57 view .LVU4485
 19379 065e 0A97     		str	r7, [sp, #40]
 19380              	.LBB10910:
 19381              	.LBB10559:
 19382              	.LBB10551:
 19383              	.LBB10544:
 19384              	.LBB10533:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 741


 19385              	.LBB10527:
 19386              	.LBB10521:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 19387              		.loc 26 104 43 view .LVU4486
 19388 0660 C4F8D030 		str	r3, [r4, #208]
 19389 0664 239B     		ldr	r3, [sp, #140]
 19390              	.LBE10521:
 19391              	.LBE10527:
 19392              	.LBE10533:
 19393              	.LBE10544:
 19394              	.LBE10551:
 19395              	.LBE10559:
 19396              	.LBE10910:
 131:theory.h      ****     };
 19397              		.loc 41 131 57 view .LVU4487
 19398 0666 CDF82C90 		str	r9, [sp, #44]
 19399              	.LBB10911:
 19400              	.LBB10560:
 19401              	.LBB10552:
 19402              	.LBB10545:
 19403              	.LBB10534:
 19404              	.LBB10528:
 19405              	.LBB10522:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 19406              		.loc 26 104 43 view .LVU4488
 19407 066a C4F8D430 		str	r3, [r4, #212]
 19408              	.LBE10522:
 19409              	.LBE10528:
 19410              	.LBE10534:
 19411              	.LBE10545:
 19412              	.LBE10552:
 19413              	.LBE10560:
 19414              	.LBB10561:
 19415              	.LBB10505:
 19416              	.LBB10497:
 19417              	.LBB10494:
 19418              	.LBB10492:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19419              		.loc 19 157 35 view .LVU4489
 19420 066e 93AB     		add	r3, sp, #588
 19421              	.LVL1175:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19422              		.loc 19 157 35 view .LVU4490
 19423              	.LBE10492:
 19424              	.LBE10494:
 19425              	.LBE10497:
 19426              	.LBE10505:
 19427              	.LBE10561:
 19428              	.LBB10562:
 19429              	.LBB10553:
 19430              	.LBB10546:
 19431              	.LBB10535:
 19432              	.LBB10529:
 19433              	.LBB10523:
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 19434              		.loc 26 105 17 view .LVU4491
 19435 0670 CDF88480 		str	r8, [sp, #132]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 742


 19436              	.LBE10523:
 19437              	.LBE10529:
 19438              	.LBE10535:
 19439              	.LBE10546:
 19440              	.LBE10553:
 19441              	.LBE10562:
 19442              	.LBB10563:
 19443              	.LBB10506:
 19444              	.LBB10498:
 19445              	.LBB10495:
 19446              	.LBB10493:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19447              		.loc 19 157 35 view .LVU4492
 19448 0674 C4F8B430 		str	r3, [r4, #180]
 19449              	.LVL1176:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19450              		.loc 19 157 35 view .LVU4493
 19451              	.LBE10493:
 19452              	.LBE10495:
 19453              	.LBE10498:
 19454              	.LBB10499:
 19455              	.LBI10499:
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 19456              		.loc 20 351 7 is_stmt 1 view .LVU4494
 19457              	.LBE10499:
 19458              	.LBE10506:
 19459              	.LBE10563:
 19460              	.LBE10911:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 19461              		.loc 20 357 2 view .LVU4495
 19462              	.LBB10912:
 19463              	.LBB10564:
 19464              	.LBB10507:
 19465              	.LBB10500:
 19466              	.LBI10436:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 19467              		.loc 19 263 9 view .LVU4496
 19468              	.LBB10483:
 19469              	.LBB10479:
 19470              	.LBI10438:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 19471              		.loc 19 243 9 view .LVU4497
 19472              	.LBB10475:
 19473              	.LBB10471:
 19474              	.LBI10440:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 19475              		.loc 23 206 7 view .LVU4498
 19476              	.LBB10467:
 19477              	.LBB10454:
 19478              	.LBI10454:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 19479              		.loc 19 396 7 view .LVU4499
 19480              	.LBB10455:
 19481              	.LBI10455:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19482              		.loc 19 346 7 view .LVU4500
 19483              	.LBB10456:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 743


 19484              	.LBI10456:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19485              		.loc 19 346 7 view .LVU4501
 19486              	.LBB10457:
 19487              	.LBI10457:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 19488              		.loc 20 387 7 view .LVU4502
 19489              	.LBB10458:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 19490              		.loc 20 389 2 view .LVU4503
 19491              		.loc 20 395 2 view .LVU4504
 19492              		.loc 20 395 49 is_stmt 0 view .LVU4505
 19493 0678 594B     		ldr	r3, .L816+44
 19494              	.LVL1177:
 19495              		.loc 20 395 49 view .LVU4506
 19496              	.LBE10458:
 19497              	.LBE10457:
 19498              	.LBE10456:
 19499              	.LBE10455:
 19500              	.LBE10454:
 19501              	.LBE10467:
 19502              	.LBE10471:
 19503              	.LBE10475:
 19504              	.LBE10479:
 19505              	.LBE10483:
 19506              	.LBE10500:
 19507              	.LBE10507:
 19508              	.LBE10564:
 19509              	.LBB10565:
 19510              	.LBB10554:
 19511              	.LBB10547:
 19512              	.LBB10536:
 19513              	.LBB10530:
 19514              	.LBB10524:
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 19515              		.loc 26 105 33 view .LVU4507
 19516 067a CDF88880 		str	r8, [sp, #136]
 19517              	.LBE10524:
 19518              	.LBE10530:
 19519              	.LBE10536:
 19520              	.LBE10547:
 19521              	.LBE10554:
 19522              	.LBE10565:
 19523              	.LBB10566:
 19524              	.LBB10508:
 19525              	.LBB10501:
 19526              	.LBB10484:
 19527              	.LBB10480:
 19528              	.LBB10476:
 19529              	.LBB10472:
 19530              	.LBB10468:
 19531              	.LBB10463:
 19532              	.LBB10462:
 19533              	.LBB10461:
 19534              	.LBB10460:
 19535              	.LBB10459:
 19536              		.loc 20 395 49 view .LVU4508
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 744


 19537 067e 9393     		str	r3, [sp, #588]
 19538              	.LVL1178:
 19539              		.loc 20 395 49 view .LVU4509
 19540              	.LBE10459:
 19541              	.LBE10460:
 19542              	.LBE10461:
 19543              	.LBE10462:
 19544              	.LBE10463:
 19545              	.LBB10464:
 19546              	.LBI10442:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19547              		.loc 19 214 7 is_stmt 1 view .LVU4510
 19548              	.LBB10448:
 19549              	.LBI10448:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 19550              		.loc 19 182 7 view .LVU4511
 19551              	.LBB10449:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19552              		.loc 19 183 26 is_stmt 0 view .LVU4512
 19553 0680 0423     		movs	r3, #4
 19554              	.LBE10449:
 19555              	.LBE10448:
 19556              	.LBE10464:
 19557              	.LBE10468:
 19558              	.LBE10472:
 19559              	.LBE10476:
 19560              	.LBE10480:
 19561              	.LBE10484:
 19562              	.LBE10501:
 19563              	.LBE10508:
 19564              	.LBE10566:
 19565              	.LBB10567:
 19566              	.LBB10555:
 19567              	.LBB10548:
 19568              	.LBB10537:
 19569              	.LBB10531:
 19570              	.LBB10525:
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 19571              		.loc 26 105 57 view .LVU4513
 19572 0682 CDF88C80 		str	r8, [sp, #140]
 19573              	.LBE10525:
 19574              	.LBE10531:
 19575              	.LBE10537:
 19576              	.LBE10548:
 19577              	.LBE10555:
 19578              	.LBE10567:
 19579              	.LBB10568:
 19580              	.LBB10509:
 19581              	.LBB10502:
 19582              	.LBB10485:
 19583              	.LBB10481:
 19584              	.LBB10477:
 19585              	.LBB10473:
 19586              	.LBB10469:
 19587              	.LBB10465:
 19588              	.LBB10451:
 19589              	.LBB10450:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 745


 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19590              		.loc 19 183 26 view .LVU4514
 19591 0686 C4F8B830 		str	r3, [r4, #184]
 19592              	.LVL1179:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19593              		.loc 19 183 26 view .LVU4515
 19594              	.LBE10450:
 19595              	.LBE10451:
 19596              	.LBB10452:
 19597              	.LBI10443:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 19598              		.loc 20 321 7 is_stmt 1 view .LVU4516
 19599              	.LBB10446:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 19600              		.loc 20 322 9 view .LVU4517
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 19601              		.loc 20 322 9 is_stmt 0 view .LVU4518
 19602              	.LBE10446:
 19603              	.LBE10452:
 19604              	.LBE10465:
 19605              	.LBE10469:
 19606              	.LBE10473:
 19607              	.LBE10477:
 19608              	.LBE10481:
 19609              	.LBE10485:
 19610              	.LBE10502:
 19611              	.LBE10509:
 19612              	.LBE10568:
 19613              	.LBB10569:
 19614              	.LBI10569:
 19615              		.loc 21 162 7 is_stmt 1 view .LVU4519
 19616              	.LBB10570:
 19617              	.LBI10570:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19618              		.loc 22 89 7 view .LVU4520
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19619              		.loc 22 89 7 is_stmt 0 view .LVU4521
 19620              	.LBE10570:
 19621              	.LBE10569:
 19622              	.LBB10571:
 19623              	.LBI10571:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 19624              		.loc 34 76 5 is_stmt 1 view .LVU4522
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 19625              		.loc 34 76 5 is_stmt 0 view .LVU4523
 19626              	.LBE10571:
 19627              	.LBB10572:
 19628              	.LBI10514:
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 19629              		.loc 26 572 7 is_stmt 1 view .LVU4524
 19630              	.LBB10556:
 19631              	.LBI10515:
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 19632              		.loc 26 308 7 view .LVU4525
 19633              	.LBB10549:
 19634              	.LBI10516:
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 746


 19635              		.loc 26 143 2 view .LVU4526
 19636              	.LBB10538:
 19637              	.LBI10538:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 19638              		.loc 34 101 5 view .LVU4527
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 19639              		.loc 34 101 5 is_stmt 0 view .LVU4528
 19640              	.LBE10538:
 19641              	.LBB10539:
 19642              	.LBI10539:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 19643              		.loc 21 147 7 is_stmt 1 view .LVU4529
 19644              	.LBB10540:
 19645              	.LBI10540:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19646              		.loc 22 82 7 view .LVU4530
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19647              		.loc 22 82 7 is_stmt 0 view .LVU4531
 19648              	.LBE10540:
 19649              	.LBE10539:
 19650              	.LBB10541:
 19651              	.LBI10541:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 19652              		.loc 34 101 5 is_stmt 1 view .LVU4532
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 19653              		.loc 34 101 5 is_stmt 0 view .LVU4533
 19654              	.LBE10541:
 19655              	.LBB10542:
 19656              	.LBI10517:
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 19657              		.loc 26 102 2 is_stmt 1 view .LVU4534
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 19658              		.loc 26 102 2 is_stmt 0 view .LVU4535
 19659              	.LBE10542:
 19660              	.LBE10549:
 19661              	.LBE10556:
 19662              	.LBE10572:
 19663              	.LBE10912:
 19664              	.LBB10913:
 19665              	.LBI10913:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19666              		.loc 21 144 7 is_stmt 1 view .LVU4536
 19667              	.LBB10914:
 19668              	.LBI10914:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19669              		.loc 22 79 7 view .LVU4537
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19670              		.loc 22 79 7 is_stmt 0 view .LVU4538
 19671              	.LBE10914:
 19672              	.LBE10913:
 131:theory.h      ****     };
 19673              		.loc 41 131 57 view .LVU4539
 19674 068a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19675 068c 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 19676 068e 95E80700 		ldm	r5, {r0, r1, r2}
 19677 0692 02AB     		add	r3, sp, #8
 19678 0694 87E80700 		stm	r7, {r0, r1, r2}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 747


 19679 0698 9CE80600 		ldm	ip, {r1, r2}
 19680 069c 1EA8     		add	r0, sp, #120
 19681 069e FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
 19682              	.LVL1180:
 19683              		.loc 41 132 5 view .LVU4540
 19684 06a2 1EAA     		add	r2, sp, #120
 19685 06a4 4449     		ldr	r1, .L816+4
 19686 06a6 9AA8     		add	r0, sp, #616
 19687 06a8 FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA6_KcS9_L
 19688              	.LVL1181:
 19689              	.LBB10915:
 19690              	.LBI10915:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19691              		.loc 21 144 7 is_stmt 1 view .LVU4541
 19692              	.LBB10916:
 19693              	.LBI10916:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19694              		.loc 22 79 7 view .LVU4542
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19695              		.loc 22 79 7 is_stmt 0 view .LVU4543
 19696              	.LBE10916:
 19697              	.LBE10915:
 19698              	.LBB10917:
 19699              	.LBI10573:
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	  const _Compare& __comp = _Compare(),
 19700              		.loc 31 228 7 is_stmt 1 view .LVU4544
 19701              	.LBB10597:
 19702              	.LBI10597:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 19703              		.loc 21 147 7 view .LVU4545
 19704              	.LBB10598:
 19705              	.LBI10598:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19706              		.loc 22 82 7 view .LVU4546
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19707              		.loc 22 82 7 is_stmt 0 view .LVU4547
 19708              	.LBE10598:
 19709              	.LBE10597:
 19710              	.LBB10599:
 19711              	.LBI10574:
 938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       const allocator_type& __a = allocator_type())
 19712              		.loc 29 938 7 is_stmt 1 view .LVU4548
 19713              	.LBB10592:
 19714              	.LBI10592:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 19715              		.loc 21 157 2 view .LVU4549
 19716              	.LBB10593:
 19717              	.LBI10593:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19718              		.loc 22 79 7 view .LVU4550
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19719              		.loc 22 79 7 is_stmt 0 view .LVU4551
 19720              	.LBE10593:
 19721              	.LBE10592:
 19722              	.LBB10594:
 19723              	.LBI10575:
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 748


 19724              		.loc 29 714 4 is_stmt 1 view .LVU4552
 19725              	.LBB10591:
 19726              	.LBB10586:
 19727              	.LBI10586:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 19728              		.loc 34 101 5 view .LVU4553
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 19729              		.loc 34 101 5 is_stmt 0 view .LVU4554
 19730              	.LBE10586:
 19731              	.LBB10587:
 19732              	.LBI10587:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 19733              		.loc 21 147 7 is_stmt 1 view .LVU4555
 19734              	.LBB10588:
 19735              	.LBI10588:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19736              		.loc 22 82 7 view .LVU4556
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19737              		.loc 22 82 7 is_stmt 0 view .LVU4557
 19738              	.LBE10588:
 19739              	.LBE10587:
 19740              	.LBB10589:
 19741              	.LBI10589:
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_key_compare(__comp)
 19742              		.loc 29 152 7 is_stmt 1 view .LVU4558
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_key_compare(__comp)
 19743              		.loc 29 152 7 is_stmt 0 view .LVU4559
 19744              	.LBE10589:
 19745              	.LBB10590:
 19746              	.LBI10577:
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 19747              		.loc 29 173 5 is_stmt 1 view .LVU4560
 19748              	.LBB10585:
 19749              	.LBB10584:
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reset();
 19750              		.loc 29 175 7 view .LVU4561
 19751              	.LBB10580:
 19752              	.LBB10581:
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_right = &_M_header;
 19753              		.loc 29 209 25 is_stmt 0 view .LVU4562
 19754 06ac 0AF10403 		add	r3, r10, #4
 19755              	.LBE10581:
 19756              	.LBE10580:
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reset();
 19757              		.loc 29 175 26 view .LVU4563
 19758 06b0 8AF80480 		strb	r8, [r10, #4]
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 19759              		.loc 29 176 7 is_stmt 1 view .LVU4564
 19760              	.LVL1182:
 19761              	.LBB10583:
 19762              	.LBI10580:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 19763              		.loc 29 206 5 view .LVU4565
 19764              	.LBB10582:
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_left = &_M_header;
 19765              		.loc 29 208 7 view .LVU4566
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_left = &_M_header;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 749


 19766              		.loc 29 208 27 is_stmt 0 view .LVU4567
 19767 06b4 CAF80880 		str	r8, [r10, #8]
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_right = &_M_header;
 19768              		.loc 29 209 7 is_stmt 1 view .LVU4568
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 19769              		.loc 29 211 21 is_stmt 0 view .LVU4569
 19770 06b8 CAF81480 		str	r8, [r10, #20]
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_node_count = 0;
 19771              		.loc 29 210 26 view .LVU4570
 19772 06bc CAE90333 		strd	r3, r3, [r10, #12]
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 19773              		.loc 29 211 7 is_stmt 1 view .LVU4571
 19774              	.LVL1183:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 19775              		.loc 29 211 7 is_stmt 0 view .LVU4572
 19776              	.LBE10582:
 19777              	.LBE10583:
 19778              	.LBE10584:
 19779              	.LBE10585:
 19780              	.LBE10590:
 19781              	.LBE10591:
 19782              	.LBE10594:
 19783              	.LBB10595:
 19784              	.LBI10595:
 19785              		.loc 21 162 7 is_stmt 1 view .LVU4573
 19786              	.LBB10596:
 19787              	.LBI10596:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19788              		.loc 22 89 7 view .LVU4574
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19789              		.loc 22 89 7 is_stmt 0 view .LVU4575
 19790              	.LBE10596:
 19791              	.LBE10595:
 19792              	.LBE10599:
 19793              	.LBB10600:
 19794              	.LBI10600:
 19795              		.loc 21 162 7 is_stmt 1 view .LVU4576
 19796              	.LBB10601:
 19797              	.LBI10601:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19798              		.loc 22 89 7 view .LVU4577
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19799              		.loc 22 89 7 is_stmt 0 view .LVU4578
 19800              	.LBE10601:
 19801              	.LBE10600:
 19802              	.LBB10602:
 19803              	.LBI10602:
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 19804              		.loc 36 75 7 is_stmt 1 view .LVU4579
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 19805              		.loc 36 75 7 is_stmt 0 view .LVU4580
 19806              	.LBE10602:
 19807              	.LBB10603:
 19808              	.LBI10603:
 19809              		.loc 36 79 7 is_stmt 1 view .LVU4581
 19810              		.loc 36 79 7 is_stmt 0 view .LVU4582
 19811              	.LBE10603:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 750


 19812              	.LBB10604:
 19813              	.LBI10604:
1105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 19814              		.loc 29 1105 2 is_stmt 1 view .LVU4583
 19815              	.LBB10605:
 19816              	.LBB10606:
 19817              	.LBI10606:
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: _M_t(__t) { }
 19818              		.loc 29 542 2 view .LVU4584
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: _M_t(__t) { }
 19819              		.loc 29 542 2 is_stmt 0 view .LVU4585
 19820              	.LBE10606:
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 19821              		.loc 29 1108 19 is_stmt 1 view .LVU4586
 19822 06c0 26E0     		b	.L772
 19823              	.LVL1184:
 19824              	.L812:
 19825              	.LBB10607:
 19826              	.LBB10608:
 19827              	.LBB10609:
 19828              	.LBB10610:
 19829              	.LBB10611:
 19830              	.LBB10612:
 19831              	.LBB10613:
 19832              	.LBB10614:
 19833              	.LBB10615:
 19834              	.LBB10616:
 19835              	.LBB10617:
 19836              	.LBB10618:
 19837              	.LBB10619:
 19838              	.LBB10620:
 19839              	.LBB10621:
 19840              	.LBB10622:
 19841              	.LBB10623:
 19842              	.LBB10624:
 19843              	.LBB10625:
 19844              	.LBI10625:
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 19845              		.loc 25 459 7 view .LVU4587
 19846              	.LBB10626:
 19847              	.LBI10626:
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 19848              		.loc 22 103 7 view .LVU4588
 19849              	.LBB10627:
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 19850              		.loc 22 105 2 is_stmt 0 view .LVU4589
 19851 06c2 484B     		ldr	r3, .L816+48
 19852 06c4 9F42     		cmp	r7, r3
 19853 06c6 00F2C882 		bhi	.L807
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 19854              		.loc 22 115 41 view .LVU4590
 19855 06ca 3846     		mov	r0, r7
 19856 06cc FFF7FEFF 		bl	_Znwj
 19857              	.LVL1185:
 19858 06d0 0346     		mov	r3, r0
 19859              	.LVL1186:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 751


 19860              		.loc 22 115 41 view .LVU4591
 19861              	.LBE10627:
 19862              	.LBE10626:
 19863              	.LBE10625:
 19864              	.LBE10624:
 19865              	.LBE10623:
 19866              	.LBE10622:
 19867              	.LBE10621:
 19868              	.LBE10620:
 19869              	.LBB10658:
 19870              	.LBB10659:
 19871              	.LBB10660:
 979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 19872              		.loc 39 979 23 view .LVU4592
 19873 06d2 56E90310 		ldrd	r1, r0, [r6, #-12]
 19874              	.LBE10660:
 19875              	.LBE10659:
 19876              	.LBE10658:
 19877              	.LBB10662:
 19878              	.LBB10663:
 19879              	.LBB10664:
 19880              	.LBB10665:
 19881              	.LBB10666:
 19882              	.LBB10667:
 19883              	.LBB10668:
 19884              	.LBB10669:
 19885              	.LBB10670:
 19886              	.LBB10671:
 19887              	.LBB10672:
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 19888              		.loc 38 424 34 view .LVU4593
 19889 06d6 421A     		subs	r2, r0, r1
 19890              	.L769:
 19891              	.LVL1187:
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 19892              		.loc 38 424 34 view .LVU4594
 19893              	.LBE10672:
 19894              	.LBE10671:
 19895              	.LBE10670:
 19896              	.LBE10669:
 19897              	.LBE10668:
 19898              	.LBE10667:
 19899              	.LBE10666:
 19900              	.LBE10665:
 19901              	.LBE10664:
 19902              	.LBE10663:
 19903              	.LBE10662:
 19904              	.LBB10702:
 19905              	.LBB10642:
 19906              	.LBB10636:
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 19907              		.loc 26 363 59 view .LVU4595
 19908 06d8 1F44     		add	r7, r7, r3
 19909              	.LVL1188:
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 19910              		.loc 26 363 59 view .LVU4596
 19911              	.LBE10636:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 752


 19912              	.LBE10642:
 19913              	.LBE10702:
 19914              	.LBB10703:
 19915              	.LBB10699:
 19916              	.LBB10696:
 19917              	.LBB10693:
 19918              	.LBB10690:
 19919              	.LBB10687:
 19920              	.LBB10684:
 19921              	.LBB10681:
 19922              	.LBB10678:
 19923              	.LBB10675:
 19924              	.LBB10673:
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 19925              		.loc 38 425 4 view .LVU4597
 19926 06da 8842     		cmp	r0, r1
 19927              	.LBE10673:
 19928              	.LBE10675:
 19929              	.LBE10678:
 19930              	.LBE10681:
 19931              	.LBE10684:
 19932              	.LBE10687:
 19933              	.LBE10690:
 19934              	.LBE10693:
 19935              	.LBE10696:
 19936              	.LBE10699:
 19937              	.LBE10703:
 19938              	.LBB10704:
 19939              	.LBB10643:
 19940              	.LBB10637:
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 19941              		.loc 26 363 34 view .LVU4598
 19942 06dc 2F63     		str	r7, [r5, #48]
 19943              	.LVL1189:
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 19944              		.loc 26 363 34 view .LVU4599
 19945              	.LBE10637:
 19946              	.LBE10643:
 19947              	.LBE10704:
 19948              	.LBB10705:
 19949              	.LBI10705:
 19950              		.loc 21 162 7 is_stmt 1 view .LVU4600
 19951              	.LBB10706:
 19952              	.LBI10706:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19953              		.loc 22 89 7 view .LVU4601
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19954              		.loc 22 89 7 is_stmt 0 view .LVU4602
 19955              	.LBE10706:
 19956              	.LBE10705:
 19957              	.LBB10707:
 19958              	.LBI10707:
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 19959              		.loc 26 820 7 is_stmt 1 view .LVU4603
 19960              	.LBB10708:
 19961              	.LBI10708:
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 753


 19962              		.loc 39 978 7 view .LVU4604
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 19963              		.loc 39 978 7 is_stmt 0 view .LVU4605
 19964              	.LBE10708:
 19965              	.LBE10707:
 19966              	.LBB10709:
 19967              	.LBI10658:
 838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 19968              		.loc 26 838 7 is_stmt 1 view .LVU4606
 19969              	.LBB10661:
 19970              	.LBI10659:
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 19971              		.loc 39 978 7 view .LVU4607
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 19972              		.loc 39 978 7 is_stmt 0 view .LVU4608
 19973              	.LBE10661:
 19974              	.LBE10709:
 19975              	.LBB10710:
 19976              	.LBI10710:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 19977              		.loc 26 276 7 is_stmt 1 view .LVU4609
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 19978              		.loc 26 276 7 is_stmt 0 view .LVU4610
 19979              	.LBE10710:
 19980              	.LBB10711:
 19981              	.LBI10662:
 19982              		.loc 37 323 5 is_stmt 1 view .LVU4611
 19983              	.LBB10700:
 19984              	.LBI10663:
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 19985              		.loc 37 125 5 view .LVU4612
 19986              	.LBB10697:
 19987              	.LBB10694:
 19988              	.LBI10665:
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 19989              		.loc 37 107 9 view .LVU4613
 19990              	.LBB10691:
 19991              	.LBI10666:
 19992              		.loc 38 560 5 view .LVU4614
 19993              	.LBB10688:
 19994              	.LBI10667:
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 19995              		.loc 38 511 5 view .LVU4615
 19996              	.LBB10685:
 19997              	.LBI10668:
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 19998              		.loc 38 505 5 view .LVU4616
 19999              	.LBB10682:
 20000              	.LBI10669:
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 20001              		.loc 38 463 5 view .LVU4617
 20002              	.LBB10679:
 20003              	.LBB10676:
 20004              	.LBI10671:
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 20005              		.loc 38 415 2 view .LVU4618
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 754


 20006              		.loc 38 415 2 is_stmt 0 view .LVU4619
 20007              	.LBE10676:
 20008              	.LBE10679:
 20009              	.LBE10682:
 20010              	.LBE10685:
 20011              	.LBE10688:
 20012              	.LBE10691:
 20013              	.LBE10694:
 20014              	.LBE10697:
 20015              	.LBE10700:
 20016              	.LBE10711:
 20017              	.LBB10712:
 20018              	.LBB10644:
 20019              	.LBB10638:
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 20020              		.loc 26 362 26 view .LVU4620
 20021 06de C5E90A33 		strd	r3, r3, [r5, #40]
 20022              	.LVL1190:
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 20023              		.loc 26 362 26 view .LVU4621
 20024              	.LBE10638:
 20025              	.LBE10644:
 20026              	.LBE10712:
 20027              	.LBB10713:
 20028              	.LBB10701:
 20029              	.LBB10698:
 20030              	.LBB10695:
 20031              	.LBB10692:
 20032              	.LBB10689:
 20033              	.LBB10686:
 20034              	.LBB10683:
 20035              	.LBB10680:
 20036              	.LBB10677:
 20037              	.LBB10674:
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 20038              		.loc 38 425 4 view .LVU4622
 20039 06e2 05D0     		beq	.L771
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 20040              		.loc 38 426 23 view .LVU4623
 20041 06e4 1846     		mov	r0, r3
 20042 06e6 0192     		str	r2, [sp, #4]
 20043 06e8 FFF7FEFF 		bl	memmove
 20044              	.LVL1191:
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 20045              		.loc 38 426 23 view .LVU4624
 20046 06ec 019A     		ldr	r2, [sp, #4]
 20047 06ee 0346     		mov	r3, r0
 20048              	.L771:
 20049              	.LVL1192:
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 20050              		.loc 38 427 22 view .LVU4625
 20051 06f0 1344     		add	r3, r3, r2
 20052              	.LBE10674:
 20053              	.LBE10677:
 20054              	.LBE10680:
 20055              	.LBE10683:
 20056              	.LBE10686:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 755


 20057              	.LBE10689:
 20058              	.LBE10692:
 20059              	.LBE10695:
 20060              	.LBE10698:
 20061              	.LBE10701:
 20062              	.LBE10713:
 20063              	.LBE10619:
 20064              	.LBE10618:
 20065              	.LBE10617:
 20066              	.LBE10616:
 20067              	.LBE10615:
 20068              	.LBE10614:
 20069              	.LBE10613:
 20070              	.LBE10612:
 20071              	.LBE10611:
1818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				      this->_M_impl._M_header);
 20072              		.loc 29 1818 31 view .LVU4626
 20073 06f2 2946     		mov	r1, r5
 20074 06f4 4A46     		mov	r2, r9
 20075 06f6 4046     		mov	r0, r8
 20076              	.LBB10855:
 20077              	.LBB10850:
 20078              	.LBB10845:
 20079              	.LBB10836:
 20080              	.LBB10829:
 20081              	.LBB10825:
 20082              	.LBB10822:
 20083              	.LBB10728:
 20084              	.LBB10725:
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 20085              		.loc 26 557 26 view .LVU4627
 20086 06f8 EB62     		str	r3, [r5, #44]
 20087              	.LVL1193:
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 20088              		.loc 26 557 26 view .LVU4628
 20089              	.LBE10725:
 20090              	.LBE10728:
 20091              	.LBE10822:
 20092              	.LBE10825:
 20093              	.LBE10829:
 20094              	.LBE10836:
 20095              	.LBE10845:
 20096              	.LBE10850:
 20097              	.LBE10855:
1818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				      this->_M_impl._M_header);
 20098              		.loc 29 1818 31 view .LVU4629
 20099 06fa 3B4B     		ldr	r3, .L816+52
 20100 06fc FFF7FEFF 		bl	_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
 20101              	.LVL1194:
1820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return iterator(__z);
 20102              		.loc 29 1820 2 view .LVU4630
 20103 0700 DAF81430 		ldr	r3, [r10, #20]
 20104 0704 0133     		adds	r3, r3, #1
 20105 0706 CAF81430 		str	r3, [r10, #20]
 20106              	.LVL1195:
 20107              	.LBB10856:
 20108              	.LBI10856:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 756


 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 20109              		.loc 29 273 7 is_stmt 1 view .LVU4631
 20110              	.L760:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 20111              		.loc 29 273 7 is_stmt 0 view .LVU4632
 20112              	.LBE10856:
 20113              	.LBE10610:
 20114              	.LBE10609:
 20115              	.LBE10608:
 20116              	.LBE10607:
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 20117              		.loc 29 1108 4 is_stmt 1 view .LVU4633
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 20118              		.loc 29 1108 19 view .LVU4634
 20119 070a 2436     		adds	r6, r6, #36
 20120              	.LVL1196:
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 20121              		.loc 29 1108 19 is_stmt 0 view .LVU4635
 20122 070c B345     		cmp	fp, r6
 20123 070e 6FD0     		beq	.L808
 20124              	.LVL1197:
 20125              	.L772:
 20126              	.LBB10883:
 20127              	.LBI10883:
1010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(&this->_M_impl._M_header); }
 20128              		.loc 29 1010 7 is_stmt 1 view .LVU4636
 20129              	.LBB10884:
 20130              	.LBI10884:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 20131              		.loc 29 273 7 view .LVU4637
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 20132              		.loc 29 273 7 is_stmt 0 view .LVU4638
 20133              	.LBE10884:
 20134              	.LBE10883:
 20135              	.LBB10885:
 20136              	.LBI10885:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__it._M_node) { }
 20137              		.loc 29 350 7 is_stmt 1 view .LVU4639
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__it._M_node) { }
 20138              		.loc 29 350 7 is_stmt 0 view .LVU4640
 20139              	.LBE10885:
 20140              	.LBB10886:
 20141              	.LBI10607:
2245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg, typename _NodeGen>
2250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
2251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _NodeGen>
2252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 20142              		.loc 29 2254 7 is_stmt 1 view .LVU4641
 20143              	.LBB10879:
2255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_unique_(const_iterator __position,
2256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 757


2257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			_Arg&& __v,
2258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
2259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			const _Val& __v,
2260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			_NodeGen& __node_gen)
2262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr> __res
2264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
 20144              		.loc 29 2264 33 is_stmt 0 view .LVU4642
 20145 0710 354A     		ldr	r2, .L816+52
 20146 0712 A6F12403 		sub	r3, r6, #36
 20147              	.LVL1198:
 20148              		.loc 29 2264 33 view .LVU4643
 20149 0716 1CA8     		add	r0, sp, #112
 20150 0718 111F     		subs	r1, r2, #4
 20151 071a FFF7FEFF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiE
 20152              	.LVL1199:
 20153              		.loc 29 2264 33 view .LVU4644
 20154 071e DDF87490 		ldr	r9, [sp, #116]
 20155              	.LVL1200:
2265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__res.second)
 20156              		.loc 29 2266 7 view .LVU4645
 20157 0722 B9F1000F 		cmp	r9, #0
 20158 0726 F0D0     		beq	.L760
 20159              	.LVL1201:
 20160              	.LBB10875:
 20161              	.LBI10609:
1803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_(_Base_ptr __x, _Base_ptr __p,
 20162              		.loc 29 1803 7 is_stmt 1 view .LVU4646
 20163              	.LBB10871:
 20164              	.LBB10857:
 20165              	.LBI10857:
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 20166              		.loc 29 759 7 view .LVU4647
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 20167              		.loc 29 759 7 is_stmt 0 view .LVU4648
 20168              	.LBE10857:
1812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 20169              		.loc 29 1812 33 view .LVU4649
 20170 0728 2F4A     		ldr	r2, .L816+52
1813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 							_S_key(__p)));
 20171              		.loc 29 1813 10 view .LVU4650
 20172 072a 1C9B     		ldr	r3, [sp, #112]
1812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 20173              		.loc 29 1812 33 view .LVU4651
 20174 072c A9EB0208 		sub	r8, r9, r2
 20175 0730 B8FA88F8 		clz	r8, r8
 20176 0734 4FEA5818 		lsr	r8, r8, #5
 20177 0738 002B     		cmp	r3, #0
 20178 073a 18BF     		it	ne
 20179 073c 48F00108 		orrne	r8, r8, #1
 20180 0740 B8F1000F 		cmp	r8, #0
 20181 0744 00F07582 		beq	.L809
 20182              	.L761:
 20183              	.LVL1202:
 20184              	.LBB10858:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 758


 20185              	.LBI10611:
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 20186              		.loc 29 550 4 is_stmt 1 view .LVU4652
 20187              	.LBB10851:
 20188              	.LBI10612:
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 20189              		.loc 29 632 2 view .LVU4653
 20190              	.LBB10846:
 20191              	.LBB10837:
 20192              	.LBI10837:
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 20193              		.loc 29 583 7 view .LVU4654
 20194              	.LBB10838:
 20195              	.LBI10838:
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 20196              		.loc 25 459 7 view .LVU4655
 20197              	.LBB10839:
 20198              	.LBI10839:
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 20199              		.loc 22 103 7 view .LVU4656
 20200              	.LBB10840:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 20201              		.loc 22 115 41 is_stmt 0 view .LVU4657
 20202 0748 3420     		movs	r0, #52
 20203 074a FFF7FEFF 		bl	_Znwj
 20204              	.LVL1203:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 20205              		.loc 22 115 41 view .LVU4658
 20206 074e 0546     		mov	r5, r0
 20207              	.LVL1204:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 20208              		.loc 22 115 41 view .LVU4659
 20209              	.LBE10840:
 20210              	.LBE10839:
 20211              	.LBE10838:
 20212              	.LBE10837:
 20213              	.LBB10841:
 20214              	.LBI10614:
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 20215              		.loc 29 613 2 is_stmt 1 view .LVU4660
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 20216              		.loc 29 613 2 is_stmt 0 view .LVU4661
 20217              	.LBE10841:
 20218              	.LBE10846:
 20219              	.LBE10851:
 20220              	.LBE10858:
 20221              	.LBE10871:
 20222              	.LBE10875:
 20223              	.LBE10879:
 20224              	.LBE10886:
 20225              	.LBE10605:
 20226              	.LBE10604:
 20227              	.LBE10917:
 20228              		.loc 18 175 3 is_stmt 1 view .LVU4662
 20229              	.LBB10918:
 20230              	.LBB10893:
 20231              	.LBB10890:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 759


 20232              	.LBB10887:
 20233              	.LBB10880:
 20234              	.LBB10876:
 20235              	.LBB10872:
 20236              	.LBB10859:
 20237              	.LBB10852:
 20238              	.LBB10847:
 20239              	.LBB10842:
 20240              	.LBB10830:
 20241              	.LBI10830:
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_storage._M_ptr(); }
 20242              		.loc 29 234 7 view .LVU4663
 20243              	.LBB10831:
 20244              	.LBI10831:
 20245              		.file 42 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\alig
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // Aligned memory buffer -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // Copyright (C) 2013-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** /** @file ext/aligned_buffer.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****  */
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #ifndef _ALIGNED_BUFFER_H
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #define _ALIGNED_BUFFER_H 1
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #pragma GCC system_header
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #if __cplusplus >= 201103L
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** # include <type_traits>
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #else
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** # include <bits/c++0x_warning.h>
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #endif
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** namespace __gnu_cxx
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** {
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****   // A utility type containing a POD object that can hold an object of type
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 760


  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****   // _Tp initialized via placement new or allocator_traits::construct.
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****   // Intended for use as a data member subobject, use __aligned_buffer for
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****   // complete objects.
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****   template<typename _Tp>
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****     struct __aligned_membuf
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****     {
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // Target macro ADJUST_FIELD_ALIGN can produce different alignment for
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // types when used as class members. __aligned_membuf is intended
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // for use as a class member, so align the buffer as for a class member.
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // Since GCC 8 we could just use alignof(_Tp) instead, but older
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // versions of non-GNU compilers might still need this trick.
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       struct _Tp2 { _Tp _M_t; };
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       alignas(__alignof__(_Tp2::_M_t)) unsigned char _M_storage[sizeof(_Tp)];
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       __aligned_membuf() = default;
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // Can be used to avoid value-initialization zeroing _M_storage.
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       __aligned_membuf(std::nullptr_t) { }
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       void*
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       _M_addr() noexcept
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       { return static_cast<void*>(&_M_storage); }
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       const void*
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       _M_addr() const noexcept
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       { return static_cast<const void*>(&_M_storage); }
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       _Tp*
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       _M_ptr() noexcept
 20246              		.loc 42 72 7 view .LVU4664
 20247              	.LBB10832:
 20248              	.LBI10832:
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       { return static_cast<void*>(&_M_storage); }
 20249              		.loc 42 64 7 view .LVU4665
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       { return static_cast<void*>(&_M_storage); }
 20250              		.loc 42 64 7 is_stmt 0 view .LVU4666
 20251              	.LBE10832:
 20252              	.LBE10831:
 20253              	.LBE10830:
 20254              	.LBB10833:
 20255              	.LBI10615:
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 20256              		.loc 25 507 2 is_stmt 1 view .LVU4667
 20257              	.LBB10826:
 20258              	.LBI10616:
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 20259              		.loc 22 148 2 view .LVU4668
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 20260              		.loc 22 148 2 is_stmt 0 view .LVU4669
 20261              	.LBE10826:
 20262              	.LBE10833:
 20263              	.LBE10842:
 20264              	.LBE10847:
 20265              	.LBE10852:
 20266              	.LBE10859:
 20267              	.LBE10872:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 761


 20268              	.LBE10876:
 20269              	.LBE10880:
 20270              	.LBE10887:
 20271              	.LBE10890:
 20272              	.LBE10893:
 20273              	.LBE10918:
 20274              		.loc 18 175 3 is_stmt 1 view .LVU4670
 20275              	.LBB10919:
 20276              	.LBB10894:
 20277              	.LBB10891:
 20278              	.LBB10888:
 20279              	.LBB10881:
 20280              	.LBB10877:
 20281              	.LBB10873:
 20282              	.LBB10860:
 20283              	.LBB10853:
 20284              	.LBB10848:
 20285              	.LBB10843:
 20286              	.LBB10834:
 20287              	.LBB10827:
 20288              	.LBB10823:
 20289              	.LBI10617:
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 20290              		.loc 30 314 17 view .LVU4671
 20291              	.LBB10729:
 20292              	.LBI10729:
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 20293              		.loc 19 448 7 view .LVU4672
 20294              	.LBB10730:
 20295              	.LBB10731:
 20296              	.LBI10731:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20297              		.loc 19 190 7 view .LVU4673
 20298              	.LBB10732:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 20299              		.loc 19 193 51 is_stmt 0 view .LVU4674
 20300 0750 1830     		adds	r0, r0, #24
 20301              	.LVL1205:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 20302              		.loc 19 193 51 view .LVU4675
 20303              	.LBE10732:
 20304              	.LBE10731:
 20305              	.LBB10733:
 20306              	.LBI10733:
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 20307              		.loc 19 290 7 is_stmt 1 view .LVU4676
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 20308              		.loc 19 290 7 is_stmt 0 view .LVU4677
 20309              	.LBE10733:
 20310              	.LBB10734:
 20311              	.LBI10734:
 20312              		.loc 35 97 29 is_stmt 1 view .LVU4678
 20313              	.LBB10735:
 20314              	.LBI10735:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 20315              		.loc 25 558 7 view .LVU4679
 20316              	.LBB10736:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 762


 20317              	.LBI10736:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20318              		.loc 21 147 7 view .LVU4680
 20319              	.LBB10737:
 20320              	.LBI10737:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20321              		.loc 22 82 7 view .LVU4681
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20322              		.loc 22 82 7 is_stmt 0 view .LVU4682
 20323              	.LBE10737:
 20324              	.LBE10736:
 20325              	.LBE10735:
 20326              	.LBE10734:
 20327              	.LBB10738:
 20328              	.LBI10738:
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 20329              		.loc 19 159 2 is_stmt 1 view .LVU4683
 20330              	.LBB10739:
 20331              	.LBB10740:
 20332              	.LBI10740:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 20333              		.loc 34 101 5 view .LVU4684
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 20334              		.loc 34 101 5 is_stmt 0 view .LVU4685
 20335              	.LBE10740:
 20336              	.LBB10741:
 20337              	.LBI10741:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20338              		.loc 21 147 7 is_stmt 1 view .LVU4686
 20339              	.LBB10742:
 20340              	.LBI10742:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20341              		.loc 22 82 7 view .LVU4687
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20342              		.loc 22 82 7 is_stmt 0 view .LVU4688
 20343              	.LBE10742:
 20344              	.LBE10741:
 20345              	.LBE10739:
 20346              	.LBE10738:
 20347              	.LBB10744:
 20348              	.LBB10745:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20349              		.loc 19 908 16 view .LVU4689
 20350 0752 56E90937 		ldrd	r3, r7, [r6, #-36]
 20351              	.LBE10745:
 20352              	.LBE10744:
 20353              	.LBB10746:
 20354              	.LBB10743:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 20355              		.loc 19 160 46 view .LVU4690
 20356 0756 2861     		str	r0, [r5, #16]
 20357              	.LVL1206:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 20358              		.loc 19 160 46 view .LVU4691
 20359              	.LBE10743:
 20360              	.LBE10746:
 20361              	.LBB10747:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 763


 20362              	.LBI10747:
 20363              		.loc 21 162 7 is_stmt 1 view .LVU4692
 20364              	.LBB10748:
 20365              	.LBI10748:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20366              		.loc 22 89 7 view .LVU4693
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20367              		.loc 22 89 7 is_stmt 0 view .LVU4694
 20368              	.LBE10748:
 20369              	.LBE10747:
 20370              	.LBB10749:
 20371              	.LBI10749:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 20372              		.loc 19 186 7 is_stmt 1 view .LVU4695
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 20373              		.loc 19 186 7 is_stmt 0 view .LVU4696
 20374              	.LBE10749:
 20375              	.LBB10750:
 20376              	.LBI10750:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 20377              		.loc 19 186 7 is_stmt 1 view .LVU4697
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 20378              		.loc 19 186 7 is_stmt 0 view .LVU4698
 20379              	.LBE10750:
 20380              	.LBB10751:
 20381              	.LBI10744:
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 20382              		.loc 19 907 7 is_stmt 1 view .LVU4699
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 20383              		.loc 19 907 7 is_stmt 0 view .LVU4700
 20384              	.LBE10751:
 20385              	.LBB10752:
 20386              	.LBI10752:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 20387              		.loc 19 263 9 is_stmt 1 view .LVU4701
 20388              	.LBB10753:
 20389              	.LBB10754:
 20390              	.LBI10754:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 20391              		.loc 19 243 9 view .LVU4702
 20392              	.LBB10755:
 20393              	.LBB10756:
 20394              	.LBI10756:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 20395              		.loc 23 206 7 view .LVU4703
 20396              	.LBB10757:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 20397              		.loc 23 211 42 is_stmt 0 view .LVU4704
 20398 0758 FB42     		cmn	r3, r7
 20399 075a 02D0     		beq	.L764
 20400 075c 002B     		cmp	r3, #0
 20401 075e 00F07E82 		beq	.L810
 20402              	.L764:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 20403              		.loc 23 217 2 view .LVU4705
 20404 0762 0F2F     		cmp	r7, #15
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 764


 20405              		.loc 23 215 12 view .LVU4706
 20406 0764 0997     		str	r7, [sp, #36]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 20407              		.loc 23 217 2 view .LVU4707
 20408 0766 13D8     		bhi	.L811
 20409              	.LVL1207:
 20410              	.LBB10758:
 20411              	.LBI10758:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 20412              		.loc 19 186 7 is_stmt 1 view .LVU4708
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 20413              		.loc 19 186 7 is_stmt 0 view .LVU4709
 20414              	.LBE10758:
 20415              	.LBB10759:
 20416              	.LBI10759:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 20417              		.loc 19 392 7 is_stmt 1 view .LVU4710
 20418              	.LBB10760:
 20419              	.LBI10760:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20420              		.loc 19 346 7 view .LVU4711
 20421              	.LBB10761:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 20422              		.loc 19 348 2 is_stmt 0 view .LVU4712
 20423 0768 012F     		cmp	r7, #1
 20424 076a 0ED1     		bne	.L767
 20425              	.LVL1208:
 20426              	.LBB10762:
 20427              	.LBI10762:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 20428              		.loc 20 321 7 is_stmt 1 view .LVU4713
 20429              	.LBB10763:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20430              		.loc 20 322 9 view .LVU4714
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20431              		.loc 20 322 16 is_stmt 0 view .LVU4715
 20432 076c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20433              	.LVL1209:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20434              		.loc 20 322 14 view .LVU4716
 20435 076e 2B76     		strb	r3, [r5, #24]
 20436              	.LVL1210:
 20437              	.L768:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20438              		.loc 20 322 14 view .LVU4717
 20439              	.LBE10763:
 20440              	.LBE10762:
 20441              	.LBE10761:
 20442              	.LBE10760:
 20443              	.LBE10759:
 20444              	.LBB10779:
 20445              	.LBI10779:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20446              		.loc 19 214 7 is_stmt 1 view .LVU4718
 20447              	.LBB10780:
 20448              	.LBB10781:
 20449              	.LBI10781:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 765


 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 20450              		.loc 19 182 7 view .LVU4719
 20451              	.LBE10781:
 20452              	.LBB10783:
 20453              	.LBB10784:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20454              		.loc 20 322 14 is_stmt 0 view .LVU4720
 20455 0770 0023     		movs	r3, #0
 20456              	.LBE10784:
 20457              	.LBE10783:
 20458              	.LBB10786:
 20459              	.LBB10782:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20460              		.loc 19 183 26 view .LVU4721
 20461 0772 6F61     		str	r7, [r5, #20]
 20462              	.LVL1211:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20463              		.loc 19 183 26 view .LVU4722
 20464              	.LBE10782:
 20465              	.LBE10786:
 20466              	.LBB10787:
 20467              	.LBI10787:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 20468              		.loc 19 186 7 is_stmt 1 view .LVU4723
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 20469              		.loc 19 186 7 is_stmt 0 view .LVU4724
 20470              	.LBE10787:
 20471              	.LBB10789:
 20472              	.LBI10783:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 20473              		.loc 20 321 7 is_stmt 1 view .LVU4725
 20474              	.LBB10785:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20475              		.loc 20 322 9 view .LVU4726
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20476              		.loc 20 322 14 is_stmt 0 view .LVU4727
 20477 0774 C355     		strb	r3, [r0, r7]
 20478              	.LVL1212:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20479              		.loc 20 322 14 view .LVU4728
 20480              	.LBE10785:
 20481              	.LBE10789:
 20482              	.LBE10780:
 20483              	.LBE10779:
 20484              	.LBE10757:
 20485              	.LBE10756:
 20486              	.LBE10755:
 20487              	.LBE10754:
 20488              	.LBE10753:
 20489              	.LBE10752:
 20490              	.LBE10730:
 20491              	.LBE10729:
 20492              	.LBB10818:
 20493              	.LBI10618:
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 20494              		.loc 26 553 7 is_stmt 1 view .LVU4729
 20495              	.LBB10726:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 766


 20496              	.LBB10714:
 20497              	.LBI10714:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 20498              		.loc 26 918 7 view .LVU4730
 20499              	.LBE10714:
 20500              	.LBB10716:
 20501              	.LBB10645:
 20502              	.LBB10646:
 20503              	.LBB10647:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 20504              		.loc 26 98 47 is_stmt 0 view .LVU4731
 20505 0776 2B63     		str	r3, [r5, #48]
 20506              	.LBE10647:
 20507              	.LBE10646:
 20508              	.LBE10645:
 20509              	.LBE10716:
 20510              	.LBB10717:
 20511              	.LBB10715:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20512              		.loc 26 919 66 view .LVU4732
 20513 0778 56E90310 		ldrd	r1, r0, [r6, #-12]
 20514              	.LVL1213:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20515              		.loc 26 919 66 view .LVU4733
 20516              	.LBE10715:
 20517              	.LBE10717:
 20518              	.LBB10718:
 20519              	.LBI10718:
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20520              		.loc 26 280 7 is_stmt 1 view .LVU4734
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20521              		.loc 26 280 7 is_stmt 0 view .LVU4735
 20522              	.LBE10718:
 20523              	.LBB10719:
 20524              	.LBI10719:
 20525              		.loc 35 97 29 is_stmt 1 view .LVU4736
 20526              	.LBB10720:
 20527              	.LBI10720:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 20528              		.loc 25 558 7 view .LVU4737
 20529              	.LBB10721:
 20530              	.LBI10721:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20531              		.loc 21 147 7 view .LVU4738
 20532              	.LBB10722:
 20533              	.LBI10722:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20534              		.loc 22 82 7 view .LVU4739
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20535              		.loc 22 82 7 is_stmt 0 view .LVU4740
 20536              	.LBE10722:
 20537              	.LBE10721:
 20538              	.LBE10720:
 20539              	.LBE10719:
 20540              	.LBB10723:
 20541              	.LBI10620:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 767


 20542              		.loc 26 303 7 is_stmt 1 view .LVU4741
 20543              	.LBB10653:
 20544              	.LBI10645:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 20545              		.loc 26 136 2 view .LVU4742
 20546              	.LBB10649:
 20547              	.LBI10649:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20548              		.loc 21 147 7 view .LVU4743
 20549              	.LBB10650:
 20550              	.LBI10650:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20551              		.loc 22 82 7 view .LVU4744
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20552              		.loc 22 82 7 is_stmt 0 view .LVU4745
 20553              	.LBE10650:
 20554              	.LBE10649:
 20555              	.LBB10651:
 20556              	.LBI10646:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 20557              		.loc 26 97 2 is_stmt 1 view .LVU4746
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 20558              		.loc 26 97 2 is_stmt 0 view .LVU4747
 20559              	.LBE10651:
 20560              	.LBE10653:
 20561              	.LBB10654:
 20562              	.LBI10621:
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20563              		.loc 26 359 7 is_stmt 1 view .LVU4748
 20564              	.LBB10639:
 20565              	.LBB10633:
 20566              	.LBI10623:
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20567              		.loc 26 343 7 view .LVU4749
 20568              	.LBE10633:
 20569              	.LBE10639:
 20570              	.LBE10654:
 20571              	.LBB10655:
 20572              	.LBB10652:
 20573              	.LBB10648:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 20574              		.loc 26 98 47 is_stmt 0 view .LVU4750
 20575 077c C5E90A33 		strd	r3, r3, [r5, #40]
 20576              	.LBE10648:
 20577              	.LBE10652:
 20578              	.LBE10655:
 20579              	.LBB10656:
 20580              	.LBB10640:
 20581              	.LBB10634:
 20582              	.LBB10631:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 20583              		.loc 26 346 18 view .LVU4751
 20584 0780 471A     		subs	r7, r0, r1
 20585              	.LVL1214:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 20586              		.loc 26 346 18 view .LVU4752
 20587 0782 9ED1     		bne	.L812
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 768


 20588 0784 3A46     		mov	r2, r7
 20589 0786 3B46     		mov	r3, r7
 20590 0788 A6E7     		b	.L769
 20591              	.LVL1215:
 20592              	.L767:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 20593              		.loc 26 346 18 view .LVU4753
 20594              	.LBE10631:
 20595              	.LBE10634:
 20596              	.LBE10640:
 20597              	.LBE10656:
 20598              	.LBE10723:
 20599              	.LBE10726:
 20600              	.LBE10818:
 20601              	.LBB10819:
 20602              	.LBB10816:
 20603              	.LBB10814:
 20604              	.LBB10812:
 20605              	.LBB10810:
 20606              	.LBB10808:
 20607              	.LBB10806:
 20608              	.LBB10804:
 20609              	.LBB10792:
 20610              	.LBB10776:
 20611              	.LBB10773:
 20612              	.LBB10764:
 20613              	.LBI10764:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20614              		.loc 19 346 7 is_stmt 1 view .LVU4754
 20615              	.LBB10765:
 20616              	.LBI10765:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 20617              		.loc 20 387 7 view .LVU4755
 20618              	.LBB10766:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 20619              		.loc 20 389 2 view .LVU4756
 20620 078a 002F     		cmp	r7, #0
 20621 078c F0D0     		beq	.L768
 20622 078e 0AE0     		b	.L766
 20623              	.LVL1216:
 20624              	.L811:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 20625              		.loc 20 389 2 is_stmt 0 view .LVU4757
 20626              	.LBE10766:
 20627              	.LBE10765:
 20628              	.LBE10764:
 20629              	.LBE10773:
 20630              	.LBE10776:
 20631              	.LBE10792:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 20632              		.loc 23 219 13 view .LVU4758
 20633 0790 0022     		movs	r2, #0
 20634 0792 09A9     		add	r1, sp, #36
 20635 0794 05F11000 		add	r0, r5, #16
 20636 0798 0193     		str	r3, [sp, #4]
 20637 079a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 20638              	.LVL1217:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 769


 20639              	.LBB10793:
 20640              	.LBI10793:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 20641              		.loc 19 178 7 is_stmt 1 view .LVU4759
 20642              	.LBE10793:
 20643              	.LBB10795:
 20644              	.LBB10796:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20645              		.loc 19 211 31 is_stmt 0 view .LVU4760
 20646 079e 099A     		ldr	r2, [sp, #36]
 20647 07a0 019B     		ldr	r3, [sp, #4]
 20648              	.LBE10796:
 20649              	.LBE10795:
 20650              	.LBB10798:
 20651              	.LBB10794:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20652              		.loc 19 179 26 view .LVU4761
 20653 07a2 2861     		str	r0, [r5, #16]
 20654              	.LVL1218:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20655              		.loc 19 179 26 view .LVU4762
 20656              	.LBE10794:
 20657              	.LBE10798:
 20658              	.LBB10799:
 20659              	.LBI10795:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 20660              		.loc 19 210 7 is_stmt 1 view .LVU4763
 20661              	.LBB10797:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20662              		.loc 19 211 31 is_stmt 0 view .LVU4764
 20663 07a4 AA61     		str	r2, [r5, #24]
 20664              	.LVL1219:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20665              		.loc 19 211 31 view .LVU4765
 20666              	.LBE10797:
 20667              	.LBE10799:
 20668              	.LBB10800:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 20669              		.loc 19 186 7 is_stmt 1 view .LVU4766
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 20670              		.loc 19 186 7 is_stmt 0 view .LVU4767
 20671              	.LBE10800:
 20672              	.LBB10801:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 20673              		.loc 19 392 7 is_stmt 1 view .LVU4768
 20674              	.LBB10777:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20675              		.loc 19 346 7 view .LVU4769
 20676              	.LBB10774:
 20677              	.LBB10771:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20678              		.loc 19 346 7 view .LVU4770
 20679              	.LBB10769:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 20680              		.loc 20 387 7 view .LVU4771
 20681              	.LBB10767:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 770


 20682              		.loc 20 389 2 view .LVU4772
 20683              	.L766:
 20684              		.loc 20 395 2 view .LVU4773
 20685              		.loc 20 395 49 is_stmt 0 view .LVU4774
 20686 07a6 3A46     		mov	r2, r7
 20687 07a8 1946     		mov	r1, r3
 20688 07aa FFF7FEFF 		bl	memcpy
 20689              	.LVL1220:
 20690              		.loc 20 395 49 view .LVU4775
 20691              	.LBE10767:
 20692              	.LBE10769:
 20693              	.LBE10771:
 20694              	.LBE10774:
 20695              	.LBE10777:
 20696              	.LBE10801:
 20697              		.loc 23 232 15 view .LVU4776
 20698 07ae 099F     		ldr	r7, [sp, #36]
 20699              	.LVL1221:
 20700              	.LBB10802:
 20701              	.LBB10791:
 20702              	.LBB10790:
 20703              	.LBB10788:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20704              		.loc 19 187 28 view .LVU4777
 20705 07b0 2869     		ldr	r0, [r5, #16]
 20706              	.LBE10788:
 20707              	.LBE10790:
 20708              	.LBE10791:
 20709              	.LBE10802:
 20710              	.LBB10803:
 20711              	.LBB10778:
 20712              	.LBB10775:
 20713              	.LBB10772:
 20714              	.LBB10770:
 20715              	.LBB10768:
 20716              		.loc 20 395 66 view .LVU4778
 20717 07b2 DDE7     		b	.L768
 20718              	.L817:
 20719              		.align	2
 20720              	.L816:
 20721 07b4 48010000 		.word	.LC95
 20722 07b8 50010000 		.word	.LC96
 20723 07bc 00000000 		.word	.LANCHOR19
 20724 07c0 00000000 		.word	.LANCHOR25
 20725 07c4 00000000 		.word	__dso_handle
 20726 07c8 00000000 		.word	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 20727 07cc 20010000 		.word	.LC90
 20728 07d0 28010000 		.word	.LC91
 20729 07d4 30010000 		.word	.LC92
 20730 07d8 38010000 		.word	.LC93
 20731 07dc 40010000 		.word	.LC94
 20732 07e0 4D69786F 		.word	1870162253
 20733 07e4 FCFFFF7F 		.word	2147483644
 20734 07e8 04000000 		.word	.LANCHOR26+4
 20735 07ec 00000000 		.word	.LANCHOR26
 20736              	.LVL1222:
 20737              	.L808:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 771


 20738              		.loc 20 395 66 view .LVU4779
 20739 07f0 9AAD     		add	r5, sp, #616
 20740              	.L773:
 20741              	.LVL1223:
 20742              		.loc 20 395 66 view .LVU4780
 20743              	.LBE10768:
 20744              	.LBE10770:
 20745              	.LBE10772:
 20746              	.LBE10775:
 20747              	.LBE10778:
 20748              	.LBE10803:
 20749              	.LBE10804:
 20750              	.LBE10806:
 20751              	.LBE10808:
 20752              	.LBE10810:
 20753              	.LBE10812:
 20754              	.LBE10814:
 20755              	.LBE10816:
 20756              	.LBE10819:
 20757              	.LBE10823:
 20758              	.LBE10827:
 20759              	.LBE10834:
 20760              	.LBE10843:
 20761              	.LBE10848:
 20762              	.LBE10853:
 20763              	.LBE10860:
 20764              	.LBE10873:
 20765              	.LBE10877:
 20766              	.LBE10881:
 20767              	.LBE10888:
 20768              	.LBE10891:
 20769              	.LBE10894:
 20770              	.LBE10919:
 20771              	.LBB10920:
 20772              	.LBI10920:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 20773              		.loc 30 211 12 is_stmt 1 view .LVU4781
 20774              	.LBB10921:
 20775              	.LBI10921:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20776              		.loc 26 678 7 view .LVU4782
 20777              	.LBB10922:
 20778              	.LBB10923:
 20779              	.LBI10923:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20780              		.loc 26 276 7 view .LVU4783
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20781              		.loc 26 276 7 is_stmt 0 view .LVU4784
 20782              	.LBE10923:
 20783              	.LBB10924:
 20784              	.LBI10924:
 20785              		.loc 25 735 5 is_stmt 1 view .LVU4785
 20786              		.loc 25 735 5 is_stmt 0 view .LVU4786
 20787              	.LBE10924:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20788              		.loc 26 683 7 view .LVU4787
 20789 07f2 05F11800 		add	r0, r5, #24
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 772


 20790              	.LVL1224:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20791              		.loc 26 683 7 view .LVU4788
 20792 07f6 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 20793              	.LVL1225:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20794              		.loc 26 683 7 view .LVU4789
 20795              	.LBE10922:
 20796              	.LBE10921:
 20797              	.LBB10925:
 20798              	.LBI10925:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 20799              		.loc 19 657 7 is_stmt 1 view .LVU4790
 20800              	.LBB10926:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20801              		.loc 19 658 19 is_stmt 0 view .LVU4791
 20802 07fa 2846     		mov	r0, r5
 20803 07fc FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 20804              	.LVL1226:
 20805              	.LBB10927:
 20806              	.LBI10927:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20807              		.loc 19 150 14 is_stmt 1 view .LVU4792
 20808              	.LBB10928:
 20809              	.LBI10928:
 20810              		.loc 21 162 7 view .LVU4793
 20811              	.LBB10929:
 20812              	.LBI10929:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20813              		.loc 22 89 7 view .LVU4794
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20814              		.loc 22 89 7 is_stmt 0 view .LVU4795
 20815              	.LBE10929:
 20816              	.LBE10928:
 20817              	.LBE10927:
 20818              	.LBE10926:
 20819              	.LBE10925:
 20820              	.LBE10920:
 20821              		.loc 41 132 5 view .LVU4796
 20822 0800 AC42     		cmp	r4, r5
 20823 0802 A5F12405 		sub	r5, r5, #36
 20824 0806 F4D1     		bne	.L773
 20825              	.LVL1227:
 20826              	.LBB10930:
 20827              	.LBI10930:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20828              		.loc 26 678 7 is_stmt 1 view .LVU4797
 20829              	.LBB10931:
 20830              	.LBB10932:
 20831              	.LBI10932:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20832              		.loc 26 276 7 view .LVU4798
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20833              		.loc 26 276 7 is_stmt 0 view .LVU4799
 20834              	.LBE10932:
 20835              	.LBB10933:
 20836              	.LBI10933:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 773


 20837              		.loc 25 735 5 is_stmt 1 view .LVU4800
 20838              		.loc 25 735 5 is_stmt 0 view .LVU4801
 20839              	.LBE10933:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20840              		.loc 26 683 7 view .LVU4802
 20841 0808 1EA8     		add	r0, sp, #120
 20842              	.LVL1228:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20843              		.loc 26 683 7 view .LVU4803
 20844              	.LBE10931:
 20845              	.LBE10930:
 133:theory.h      **** 
 134:theory.h      ****     const std::vector<std::string> allInversions {
 135:theory.h      ****         "None",
 136:theory.h      ****         "Drop 2",
 137:theory.h      ****         "Drop 3",
 138:theory.h      ****         "Drop 4"
 139:theory.h      ****     };
 20846              		.loc 41 139 5 view .LVU4804
 20847 080a 7CAD     		add	r5, sp, #496
 20848              	.LBB10935:
 20849              	.LBB10934:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20850              		.loc 26 683 7 view .LVU4805
 20851 080c FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 20852              	.LVL1229:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20853              		.loc 26 683 7 view .LVU4806
 20854              	.LBE10934:
 20855              	.LBE10935:
 20856              	.LBB10936:
 20857              	.LBI10936:
 20858              		.loc 21 162 7 is_stmt 1 view .LVU4807
 20859              	.LBB10937:
 20860              	.LBI10937:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20861              		.loc 22 89 7 view .LVU4808
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20862              		.loc 22 89 7 is_stmt 0 view .LVU4809
 20863              	.LBE10937:
 20864              	.LBE10936:
 20865              	.LBB10938:
 20866              	.LBI10938:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20867              		.loc 26 678 7 is_stmt 1 view .LVU4810
 20868              	.LBB10939:
 20869              	.LBB10940:
 20870              	.LBI10940:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20871              		.loc 26 276 7 view .LVU4811
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20872              		.loc 26 276 7 is_stmt 0 view .LVU4812
 20873              	.LBE10940:
 20874              	.LBB10941:
 20875              	.LBI10941:
 20876              		.loc 25 735 5 is_stmt 1 view .LVU4813
 20877              		.loc 25 735 5 is_stmt 0 view .LVU4814
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 774


 20878              	.LBE10941:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20879              		.loc 26 683 7 view .LVU4815
 20880 0810 21A8     		add	r0, sp, #132
 20881              	.LVL1230:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20882              		.loc 26 683 7 view .LVU4816
 20883 0812 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 20884              	.LVL1231:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20885              		.loc 26 683 7 view .LVU4817
 20886              	.LBE10939:
 20887              	.LBE10938:
 20888              	.LBB10942:
 20889              	.LBI10942:
 20890              		.loc 21 162 7 is_stmt 1 view .LVU4818
 20891              	.LBB10943:
 20892              	.LBI10943:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20893              		.loc 22 89 7 view .LVU4819
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20894              		.loc 22 89 7 is_stmt 0 view .LVU4820
 20895              	.LBE10943:
 20896              	.LBE10942:
 20897              	.LBB10944:
 20898              	.LBI10944:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20899              		.loc 26 678 7 is_stmt 1 view .LVU4821
 20900              	.LBB10945:
 20901              	.LBB10946:
 20902              	.LBI10946:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20903              		.loc 26 276 7 view .LVU4822
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20904              		.loc 26 276 7 is_stmt 0 view .LVU4823
 20905              	.LBE10946:
 20906              	.LBB10947:
 20907              	.LBI10947:
 20908              		.loc 25 735 5 is_stmt 1 view .LVU4824
 20909              		.loc 25 735 5 is_stmt 0 view .LVU4825
 20910              	.LBE10947:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20911              		.loc 26 683 7 view .LVU4826
 20912 0816 24A8     		add	r0, sp, #144
 20913              	.LVL1232:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20914              		.loc 26 683 7 view .LVU4827
 20915 0818 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 20916              	.LVL1233:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20917              		.loc 26 683 7 view .LVU4828
 20918              	.LBE10945:
 20919              	.LBE10944:
 20920              	.LBB10948:
 20921              	.LBI10948:
 20922              		.loc 21 162 7 is_stmt 1 view .LVU4829
 20923              	.LBB10949:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 775


 20924              	.LBI10949:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20925              		.loc 22 89 7 view .LVU4830
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20926              		.loc 22 89 7 is_stmt 0 view .LVU4831
 20927              	.LBE10949:
 20928              	.LBE10948:
 20929              	.LBB10950:
 20930              	.LBI10950:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20931              		.loc 26 678 7 is_stmt 1 view .LVU4832
 20932              	.LBB10951:
 20933              	.LBB10952:
 20934              	.LBI10952:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20935              		.loc 26 276 7 view .LVU4833
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20936              		.loc 26 276 7 is_stmt 0 view .LVU4834
 20937              	.LBE10952:
 20938              	.LBB10953:
 20939              	.LBI10953:
 20940              		.loc 25 735 5 is_stmt 1 view .LVU4835
 20941              		.loc 25 735 5 is_stmt 0 view .LVU4836
 20942              	.LBE10953:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20943              		.loc 26 683 7 view .LVU4837
 20944 081c 27A8     		add	r0, sp, #156
 20945              	.LVL1234:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20946              		.loc 26 683 7 view .LVU4838
 20947 081e FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 20948              	.LVL1235:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20949              		.loc 26 683 7 view .LVU4839
 20950              	.LBE10951:
 20951              	.LBE10950:
 20952              	.LBB10954:
 20953              	.LBI10954:
 20954              		.loc 21 162 7 is_stmt 1 view .LVU4840
 20955              	.LBB10955:
 20956              	.LBI10955:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20957              		.loc 22 89 7 view .LVU4841
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20958              		.loc 22 89 7 is_stmt 0 view .LVU4842
 20959              	.LBE10955:
 20960              	.LBE10954:
 20961              	.LBB10956:
 20962              	.LBI10956:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20963              		.loc 26 678 7 is_stmt 1 view .LVU4843
 20964              	.LBB10957:
 20965              	.LBB10958:
 20966              	.LBI10958:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20967              		.loc 26 276 7 view .LVU4844
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 776


 20968              		.loc 26 276 7 is_stmt 0 view .LVU4845
 20969              	.LBE10958:
 20970              	.LBB10959:
 20971              	.LBI10959:
 20972              		.loc 25 735 5 is_stmt 1 view .LVU4846
 20973              		.loc 25 735 5 is_stmt 0 view .LVU4847
 20974              	.LBE10959:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20975              		.loc 26 683 7 view .LVU4848
 20976 0822 2AA8     		add	r0, sp, #168
 20977              	.LVL1236:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20978              		.loc 26 683 7 view .LVU4849
 20979 0824 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 20980              	.LVL1237:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20981              		.loc 26 683 7 view .LVU4850
 20982              	.LBE10957:
 20983              	.LBE10956:
 20984              	.LBB10960:
 20985              	.LBI10960:
 20986              		.loc 21 162 7 is_stmt 1 view .LVU4851
 20987              	.LBB10961:
 20988              	.LBI10961:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20989              		.loc 22 89 7 view .LVU4852
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20990              		.loc 22 89 7 is_stmt 0 view .LVU4853
 20991              	.LBE10961:
 20992              	.LBE10960:
 20993              	.LBB10962:
 20994              	.LBI10962:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20995              		.loc 26 678 7 is_stmt 1 view .LVU4854
 20996              	.LBB10963:
 20997              	.LBB10964:
 20998              	.LBI10964:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20999              		.loc 26 276 7 view .LVU4855
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21000              		.loc 26 276 7 is_stmt 0 view .LVU4856
 21001              	.LBE10964:
 21002              	.LBB10965:
 21003              	.LBI10965:
 21004              		.loc 25 735 5 is_stmt 1 view .LVU4857
 21005              		.loc 25 735 5 is_stmt 0 view .LVU4858
 21006              	.LBE10965:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21007              		.loc 26 683 7 view .LVU4859
 21008 0828 2DA8     		add	r0, sp, #180
 21009              	.LVL1238:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21010              		.loc 26 683 7 view .LVU4860
 21011 082a FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 21012              	.LVL1239:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21013              		.loc 26 683 7 view .LVU4861
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 777


 21014              	.LBE10963:
 21015              	.LBE10962:
 21016              	.LBB10966:
 21017              	.LBI10966:
 21018              		.loc 21 162 7 is_stmt 1 view .LVU4862
 21019              	.LBB10967:
 21020              	.LBI10967:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21021              		.loc 22 89 7 view .LVU4863
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21022              		.loc 22 89 7 is_stmt 0 view .LVU4864
 21023              	.LBE10967:
 21024              	.LBE10966:
 21025              	.LBB10968:
 21026              	.LBI10968:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 21027              		.loc 26 678 7 is_stmt 1 view .LVU4865
 21028              	.LBB10969:
 21029              	.LBB10970:
 21030              	.LBI10970:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21031              		.loc 26 276 7 view .LVU4866
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 21032              		.loc 26 276 7 is_stmt 0 view .LVU4867
 21033              	.LBE10970:
 21034              	.LBB10971:
 21035              	.LBI10971:
 21036              		.loc 25 735 5 is_stmt 1 view .LVU4868
 21037              		.loc 25 735 5 is_stmt 0 view .LVU4869
 21038              	.LBE10971:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21039              		.loc 26 683 7 view .LVU4870
 21040 082e 30A8     		add	r0, sp, #192
 21041              	.LVL1240:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21042              		.loc 26 683 7 view .LVU4871
 21043 0830 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 21044              	.LVL1241:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 21045              		.loc 26 683 7 view .LVU4872
 21046              	.LBE10969:
 21047              	.LBE10968:
 21048              	.LBB10972:
 21049              	.LBI10972:
 21050              		.loc 21 162 7 is_stmt 1 view .LVU4873
 21051              	.LBB10973:
 21052              	.LBI10973:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21053              		.loc 22 89 7 view .LVU4874
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21054              		.loc 22 89 7 is_stmt 0 view .LVU4875
 21055              	.LBE10973:
 21056              	.LBE10972:
 124:theory.h      ****         {"Major",  std::vector<int>{0, 2, 4, 5, 7, 9, 11}},
 21057              		.loc 41 124 51 view .LVU4876
 21058 0834 AB4A     		ldr	r2, .L818
 21059 0836 AC49     		ldr	r1, .L818+4
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 778


 21060 0838 AC48     		ldr	r0, .L818+8
 21061 083a FFF7FEFF 		bl	__aeabi_atexit
 21062              	.LVL1242:
 21063              	.LBB10974:
 21064              	.LBI10974:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21065              		.loc 21 144 7 is_stmt 1 view .LVU4877
 21066              	.LBB10975:
 21067              	.LBI10975:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21068              		.loc 22 79 7 view .LVU4878
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21069              		.loc 22 79 7 is_stmt 0 view .LVU4879
 21070              	.LBE10975:
 21071              	.LBE10974:
 21072              		.loc 41 139 5 view .LVU4880
 21073 083e AC49     		ldr	r1, .L818+12
 21074 0840 2046     		mov	r0, r4
 21075 0842 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21076              	.LVL1243:
 21077              	.LBB10976:
 21078              	.LBI10976:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21079              		.loc 21 144 7 is_stmt 1 view .LVU4881
 21080              	.LBB10977:
 21081              	.LBI10977:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21082              		.loc 22 79 7 view .LVU4882
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21083              		.loc 22 79 7 is_stmt 0 view .LVU4883
 21084              	.LBE10977:
 21085              	.LBE10976:
 21086              		.loc 41 139 5 view .LVU4884
 21087 0846 AB49     		ldr	r1, .L818+16
 21088 0848 6AA8     		add	r0, sp, #424
 21089 084a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21090              	.LVL1244:
 21091              	.LBB10978:
 21092              	.LBI10978:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21093              		.loc 21 144 7 is_stmt 1 view .LVU4885
 21094              	.LBB10979:
 21095              	.LBI10979:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21096              		.loc 22 79 7 view .LVU4886
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21097              		.loc 22 79 7 is_stmt 0 view .LVU4887
 21098              	.LBE10979:
 21099              	.LBE10978:
 21100              		.loc 41 139 5 view .LVU4888
 21101 084e AA49     		ldr	r1, .L818+20
 21102 0850 70A8     		add	r0, sp, #448
 21103 0852 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21104              	.LVL1245:
 21105              	.LBB10980:
 21106              	.LBI10980:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 779


 21107              		.loc 21 144 7 is_stmt 1 view .LVU4889
 21108              	.LBB10981:
 21109              	.LBI10981:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21110              		.loc 22 79 7 view .LVU4890
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21111              		.loc 22 79 7 is_stmt 0 view .LVU4891
 21112              	.LBE10981:
 21113              	.LBE10980:
 21114              		.loc 41 139 5 view .LVU4892
 21115 0856 A949     		ldr	r1, .L818+24
 21116 0858 76A8     		add	r0, sp, #472
 21117 085a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21118              	.LVL1246:
 21119 085e 0423     		movs	r3, #4
 21120 0860 5DAA     		add	r2, sp, #372
 21121 0862 5D94     		str	r4, [sp, #372]
 21122 0864 5E93     		str	r3, [sp, #376]
 21123              	.LVL1247:
 21124              	.LBB10982:
 21125              	.LBI10982:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21126              		.loc 21 144 7 is_stmt 1 view .LVU4893
 21127              	.LBB10983:
 21128              	.LBI10983:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21129              		.loc 22 79 7 view .LVU4894
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21130              		.loc 22 79 7 is_stmt 0 view .LVU4895
 21131              	.LBE10983:
 21132              	.LBE10982:
 21133              		.loc 41 139 5 view .LVU4896
 21134 0866 56AB     		add	r3, sp, #344
 21135 0868 A548     		ldr	r0, .L818+28
 21136 086a 06CA     		ldm	r2, {r1, r2}
 21137 086c FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 21138              	.LVL1248:
 21139              	.LBB10984:
 21140              	.LBI10984:
 21141              		.loc 21 162 7 is_stmt 1 view .LVU4897
 21142              	.LBB10985:
 21143              	.LBI10985:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21144              		.loc 22 89 7 view .LVU4898
 21145              	.L774:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21146              		.loc 22 89 7 is_stmt 0 view .LVU4899
 21147              	.LBE10985:
 21148              	.LBE10984:
 21149              		.loc 41 139 5 view .LVU4900
 21150 0870 183D     		subs	r5, r5, #24
 21151              	.LVL1249:
 21152              	.LBB10986:
 21153              	.LBI10986:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 21154              		.loc 19 657 7 is_stmt 1 view .LVU4901
 21155              	.LBB10987:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 780


 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21156              		.loc 19 658 19 is_stmt 0 view .LVU4902
 21157 0872 2846     		mov	r0, r5
 21158 0874 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 21159              	.LVL1250:
 21160              	.LBB10988:
 21161              	.LBI10988:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21162              		.loc 19 150 14 is_stmt 1 view .LVU4903
 21163              	.LBB10989:
 21164              	.LBI10989:
 21165              		.loc 21 162 7 view .LVU4904
 21166              	.LBB10990:
 21167              	.LBI10990:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21168              		.loc 22 89 7 view .LVU4905
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21169              		.loc 22 89 7 is_stmt 0 view .LVU4906
 21170              	.LBE10990:
 21171              	.LBE10989:
 21172              	.LBE10988:
 21173              	.LBE10987:
 21174              	.LBE10986:
 21175              		.loc 41 139 5 view .LVU4907
 21176 0878 A542     		cmp	r5, r4
 21177 087a F9D1     		bne	.L774
 21178              	.LVL1251:
 21179              	.LBB10991:
 21180              	.LBI10991:
 21181              		.loc 21 162 7 is_stmt 1 view .LVU4908
 21182              	.LBB10992:
 21183              	.LBI10992:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21184              		.loc 22 89 7 view .LVU4909
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21185              		.loc 22 89 7 is_stmt 0 view .LVU4910
 21186              	.LBE10992:
 21187              	.LBE10991:
 21188              	.LBB10993:
 21189              	.LBI10993:
 21190              		.loc 21 162 7 is_stmt 1 view .LVU4911
 21191              	.LBB10994:
 21192              	.LBI10994:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21193              		.loc 22 89 7 view .LVU4912
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21194              		.loc 22 89 7 is_stmt 0 view .LVU4913
 21195              	.LBE10994:
 21196              	.LBE10993:
 21197              	.LBB10995:
 21198              	.LBI10995:
 21199              		.loc 21 162 7 is_stmt 1 view .LVU4914
 21200              	.LBB10996:
 21201              	.LBI10996:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21202              		.loc 22 89 7 view .LVU4915
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 781


 21203              		.loc 22 89 7 is_stmt 0 view .LVU4916
 21204              	.LBE10996:
 21205              	.LBE10995:
 21206              	.LBB10997:
 21207              	.LBI10997:
 21208              		.loc 21 162 7 is_stmt 1 view .LVU4917
 21209              	.LBB10998:
 21210              	.LBI10998:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21211              		.loc 22 89 7 view .LVU4918
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21212              		.loc 22 89 7 is_stmt 0 view .LVU4919
 21213              	.LBE10998:
 21214              	.LBE10997:
 134:theory.h      ****         "None",
 21215              		.loc 41 134 36 view .LVU4920
 21216 087c 994A     		ldr	r2, .L818
 140:theory.h      **** 
 141:theory.h      ****     const std::vector<std::string> allClockInDivs {
 142:theory.h      ****         // "1/2", // TODO figure out how to interpolate for fractional clock values
 143:theory.h      ****         // "1/4",
 144:theory.h      ****         // "1/8",
 145:theory.h      ****         // "1/16",
 146:theory.h      ****         // "1/32",
 147:theory.h      ****         // "1/64",
 148:theory.h      ****         "1",
 149:theory.h      ****         "2",
 150:theory.h      ****         "4",
 151:theory.h      ****         "8",
 152:theory.h      ****         "16"
 153:theory.h      ****     };
 21217              		.loc 41 153 5 view .LVU4921
 21218 087e 82AD     		add	r5, sp, #520
 134:theory.h      ****         "None",
 21219              		.loc 41 134 36 view .LVU4922
 21220 0880 A049     		ldr	r1, .L818+32
 21221 0882 9F48     		ldr	r0, .L818+28
 21222 0884 FFF7FEFF 		bl	__aeabi_atexit
 21223              	.LVL1252:
 21224              	.LBB10999:
 21225              	.LBI10999:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21226              		.loc 21 144 7 is_stmt 1 view .LVU4923
 21227              	.LBB11000:
 21228              	.LBI11000:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21229              		.loc 22 79 7 view .LVU4924
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21230              		.loc 22 79 7 is_stmt 0 view .LVU4925
 21231              	.LBE11000:
 21232              	.LBE10999:
 21233              		.loc 41 153 5 view .LVU4926
 21234 0888 9F49     		ldr	r1, .L818+36
 21235 088a 2046     		mov	r0, r4
 21236 088c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21237              	.LVL1253:
 21238              	.LBB11001:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 782


 21239              	.LBI11001:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21240              		.loc 21 144 7 is_stmt 1 view .LVU4927
 21241              	.LBB11002:
 21242              	.LBI11002:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21243              		.loc 22 79 7 view .LVU4928
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21244              		.loc 22 79 7 is_stmt 0 view .LVU4929
 21245              	.LBE11002:
 21246              	.LBE11001:
 21247              		.loc 41 153 5 view .LVU4930
 21248 0890 9E49     		ldr	r1, .L818+40
 21249 0892 6AA8     		add	r0, sp, #424
 21250 0894 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21251              	.LVL1254:
 21252              	.LBB11003:
 21253              	.LBI11003:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21254              		.loc 21 144 7 is_stmt 1 view .LVU4931
 21255              	.LBB11004:
 21256              	.LBI11004:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21257              		.loc 22 79 7 view .LVU4932
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21258              		.loc 22 79 7 is_stmt 0 view .LVU4933
 21259              	.LBE11004:
 21260              	.LBE11003:
 21261              		.loc 41 153 5 view .LVU4934
 21262 0898 9D49     		ldr	r1, .L818+44
 21263 089a 70A8     		add	r0, sp, #448
 21264 089c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21265              	.LVL1255:
 21266              	.LBB11005:
 21267              	.LBI11005:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21268              		.loc 21 144 7 is_stmt 1 view .LVU4935
 21269              	.LBB11006:
 21270              	.LBI11006:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21271              		.loc 22 79 7 view .LVU4936
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21272              		.loc 22 79 7 is_stmt 0 view .LVU4937
 21273              	.LBE11006:
 21274              	.LBE11005:
 21275              		.loc 41 153 5 view .LVU4938
 21276 08a0 9C49     		ldr	r1, .L818+48
 21277 08a2 76A8     		add	r0, sp, #472
 21278 08a4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21279              	.LVL1256:
 21280              	.LBB11007:
 21281              	.LBI11007:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21282              		.loc 21 144 7 is_stmt 1 view .LVU4939
 21283              	.LBB11008:
 21284              	.LBI11008:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 783


 21285              		.loc 22 79 7 view .LVU4940
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21286              		.loc 22 79 7 is_stmt 0 view .LVU4941
 21287              	.LBE11008:
 21288              	.LBE11007:
 21289              		.loc 41 153 5 view .LVU4942
 21290 08a8 9B49     		ldr	r1, .L818+52
 21291 08aa 7CA8     		add	r0, sp, #496
 21292 08ac FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21293              	.LVL1257:
 21294 08b0 0523     		movs	r3, #5
 21295 08b2 56AA     		add	r2, sp, #344
 21296 08b4 5694     		str	r4, [sp, #344]
 21297 08b6 5793     		str	r3, [sp, #348]
 21298              	.LVL1258:
 21299              	.LBB11009:
 21300              	.LBI11009:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21301              		.loc 21 144 7 is_stmt 1 view .LVU4943
 21302              	.LBB11010:
 21303              	.LBI11010:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21304              		.loc 22 79 7 view .LVU4944
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21305              		.loc 22 79 7 is_stmt 0 view .LVU4945
 21306              	.LBE11010:
 21307              	.LBE11009:
 21308              		.loc 41 153 5 view .LVU4946
 21309 08b8 4FAB     		add	r3, sp, #316
 21310 08ba 9848     		ldr	r0, .L818+56
 21311 08bc 06CA     		ldm	r2, {r1, r2}
 21312 08be FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 21313              	.LVL1259:
 21314              	.LBB11011:
 21315              	.LBI11011:
 21316              		.loc 21 162 7 is_stmt 1 view .LVU4947
 21317              	.LBB11012:
 21318              	.LBI11012:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21319              		.loc 22 89 7 view .LVU4948
 21320              	.L775:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21321              		.loc 22 89 7 is_stmt 0 view .LVU4949
 21322              	.LBE11012:
 21323              	.LBE11011:
 21324              		.loc 41 153 5 view .LVU4950
 21325 08c2 183D     		subs	r5, r5, #24
 21326              	.LVL1260:
 21327              	.LBB11013:
 21328              	.LBI11013:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 21329              		.loc 19 657 7 is_stmt 1 view .LVU4951
 21330              	.LBB11014:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21331              		.loc 19 658 19 is_stmt 0 view .LVU4952
 21332 08c4 2846     		mov	r0, r5
 21333 08c6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 784


 21334              	.LVL1261:
 21335              	.LBB11015:
 21336              	.LBI11015:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21337              		.loc 19 150 14 is_stmt 1 view .LVU4953
 21338              	.LBB11016:
 21339              	.LBI11016:
 21340              		.loc 21 162 7 view .LVU4954
 21341              	.LBB11017:
 21342              	.LBI11017:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21343              		.loc 22 89 7 view .LVU4955
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21344              		.loc 22 89 7 is_stmt 0 view .LVU4956
 21345              	.LBE11017:
 21346              	.LBE11016:
 21347              	.LBE11015:
 21348              	.LBE11014:
 21349              	.LBE11013:
 21350              		.loc 41 153 5 view .LVU4957
 21351 08ca A542     		cmp	r5, r4
 21352 08cc F9D1     		bne	.L775
 21353              	.LVL1262:
 21354              	.LBB11018:
 21355              	.LBI11018:
 21356              		.loc 21 162 7 is_stmt 1 view .LVU4958
 21357              	.LBB11019:
 21358              	.LBI11019:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21359              		.loc 22 89 7 view .LVU4959
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21360              		.loc 22 89 7 is_stmt 0 view .LVU4960
 21361              	.LBE11019:
 21362              	.LBE11018:
 21363              	.LBB11020:
 21364              	.LBI11020:
 21365              		.loc 21 162 7 is_stmt 1 view .LVU4961
 21366              	.LBB11021:
 21367              	.LBI11021:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21368              		.loc 22 89 7 view .LVU4962
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21369              		.loc 22 89 7 is_stmt 0 view .LVU4963
 21370              	.LBE11021:
 21371              	.LBE11020:
 21372              	.LBB11022:
 21373              	.LBI11022:
 21374              		.loc 21 162 7 is_stmt 1 view .LVU4964
 21375              	.LBB11023:
 21376              	.LBI11023:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21377              		.loc 22 89 7 view .LVU4965
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21378              		.loc 22 89 7 is_stmt 0 view .LVU4966
 21379              	.LBE11023:
 21380              	.LBE11022:
 21381              	.LBB11024:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 785


 21382              	.LBI11024:
 21383              		.loc 21 162 7 is_stmt 1 view .LVU4967
 21384              	.LBB11025:
 21385              	.LBI11025:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21386              		.loc 22 89 7 view .LVU4968
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21387              		.loc 22 89 7 is_stmt 0 view .LVU4969
 21388              	.LBE11025:
 21389              	.LBE11024:
 21390              	.LBB11026:
 21391              	.LBI11026:
 21392              		.loc 21 162 7 is_stmt 1 view .LVU4970
 21393              	.LBB11027:
 21394              	.LBI11027:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21395              		.loc 22 89 7 view .LVU4971
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21396              		.loc 22 89 7 is_stmt 0 view .LVU4972
 21397              	.LBE11027:
 21398              	.LBE11026:
 141:theory.h      ****         // "1/2", // TODO figure out how to interpolate for fractional clock values
 21399              		.loc 41 141 36 view .LVU4973
 21400 08ce 854A     		ldr	r2, .L818
 21401              		.file 43 "chord.h"
   1:chord.h       **** /* 
   2:chord.h       ****  * Copyright (C) 2021 Evan Pernu - All Rights Reserved
   3:chord.h       ****  * You may use, distribute and modify this code under the
   4:chord.h       ****  * terms of the GNU AGPLv3 license.
   5:chord.h       ****  * 
   6:chord.h       ****  * You should have received a copy of the GNU AGPLv3 license with
   7:chord.h       ****  * this file (LICENSE.md). If not, please write to: evanpernu@gmail.com, 
   8:chord.h       ****  * or visit: https://www.gnu.org/licenses/agpl-3.0.en.html
   9:chord.h       ****  */
  10:chord.h       **** 
  11:chord.h       **** #pragma once
  12:chord.h       **** 
  13:chord.h       **** #include <map>
  14:chord.h       **** #include <vector>
  15:chord.h       **** #include <string>
  16:chord.h       **** 
  17:chord.h       **** #include "theory.h"
  18:chord.h       **** 
  19:chord.h       **** namespace jellybeans {
  20:chord.h       **** 
  21:chord.h       ****     // Notes are represented as ints, as they correspond to mu::allNotes5Oct
  22:chord.h       ****     // For performance reasons, all functions assume valid input
  23:chord.h       ****     class DiatonicChord {
  24:chord.h       ****     public:
  25:chord.h       ****         // String representation of the chord
  26:chord.h       ****         // e.g. "A minor"
  27:chord.h       ****         std::string myString;
  28:chord.h       **** 
  29:chord.h       ****         // The diatonic distance, in relation to the root, of 
  30:chord.h       ****         // each note in the chord (ascending order)
  31:chord.h       ****         std::vector<int> notes;
  32:chord.h       **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 786


  33:chord.h       ****         // Semitone value of each note in the chord
  34:chord.h       ****         std::vector<int> semis;
  35:chord.h       **** 
  36:chord.h       ****         // Must be an element of mu::modes (theory.h)
  37:chord.h       ****         std::string mode;
  38:chord.h       **** 
  39:chord.h       ****         // Root note of current mode
  40:chord.h       ****         int modeRoot;
  41:chord.h       **** 
  42:chord.h       ****         // Scale degree of the current root note
  43:chord.h       ****         int root;
  44:chord.h       **** 
  45:chord.h       ****         // the number of notes in the chord
  46:chord.h       ****         int length;
  47:chord.h       **** 
  48:chord.h       ****         // Must be an element of in mu::voicings (chord.h)
  49:chord.h       ****         std::string voicing;
  50:chord.h       **** 
  51:chord.h       ****         // Default is C major triad
  52:chord.h       ****         DiatonicChord(); // : DiatonicChord(1, 0, "Major", "Triad") {};
  53:chord.h       **** 
  54:chord.h       ****         // @param chord root - scale degree  int from 0-7
  55:chord.h       ****         // @param mode root - the note value, int from 0-12
  56:chord.h       ****         // @param mode - an element of mu::allModes
  57:chord.h       ****         // @param voicing - an element of mu::voicings
  58:chord.h       ****         DiatonicChord(int, int, std::string, std::string);
  59:chord.h       **** 
  60:chord.h       ****         // Updates the value of string, so that it only needs to be 
  61:chord.h       ****         // computed when necessary
  62:chord.h       ****         void UpdateString();
  63:chord.h       **** 
  64:chord.h       ****         // @param the index of a note
  65:chord.h       ****         // Sets the root of the chord to the given note. If it's a non-diatonic note, 
  66:chord.h       ****         // transpose it up a semitone to become diatonic.
  67:chord.h       ****         void SetRootByNote(int);
  68:chord.h       **** 
  69:chord.h       ****         // @param the scale degree of the desired root note, int from 0-7
  70:chord.h       ****         void SetRoot(int);
  71:chord.h       **** 
  72:chord.h       ****         // @param the note value of the desired mode root, int from 0-12
  73:chord.h       ****         void SetModeRoot(int);
  74:chord.h       **** 
  75:chord.h       ****         // @param an element of mu::allModes
  76:chord.h       ****         void SetMode(std::string);
  77:chord.h       **** 
  78:chord.h       ****         // @param an element of mu::voicings
  79:chord.h       ****         void SetVoicing(std::string);
  80:chord.h       **** 
  81:chord.h       ****         // Transposes all notes in the chord by the given number of semitones.
  82:chord.h       ****         // If a note would fall out of register, do nothing.
  83:chord.h       ****         void Transpose(int);
  84:chord.h       **** 
  85:chord.h       ****         // Given the chord's properties, formulates the chord.
  86:chord.h       ****         // Call this every time a property of the chord is updated.
  87:chord.h       ****         void UpdateChord();
  88:chord.h       **** 
  89:chord.h       ****         // @return semis[n], or semis[0] n is out of bounds
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 787


  90:chord.h       ****         int GetNoteAt(int);
  91:chord.h       ****     };
  92:chord.h       **** 
  93:chord.h       ****     // All possible chord voicings
  94:chord.h       ****     const std::vector<std::string> voicings {
  95:chord.h       ****         "Triad",
  96:chord.h       ****         "Triad+",
  97:chord.h       ****         "7th",
  98:chord.h       ****         "7th+"
  99:chord.h       ****         "9th",
 100:chord.h       ****         "11th",
 101:chord.h       ****         "13th",
 102:chord.h       ****         "6th",
 103:chord.h       ****         "Sus2",
 104:chord.h       ****         "Sus4",
 105:chord.h       ****         // disabled til its bug is fixed
 106:chord.h       ****         //"Kenny B.",  // Kenny Barron chord 
 107:chord.h       ****         "Power",
 108:chord.h       ****         "Shell 1",
 109:chord.h       ****         "Shell 2"
 110:chord.h       ****     };
 21402              		.loc 43 110 5 view .LVU4974
 21403 08d0 ACAD     		add	r5, sp, #688
 141:theory.h      ****         // "1/2", // TODO figure out how to interpolate for fractional clock values
 21404              		.loc 41 141 36 view .LVU4975
 21405 08d2 8C49     		ldr	r1, .L818+32
 21406 08d4 9148     		ldr	r0, .L818+56
 21407 08d6 FFF7FEFF 		bl	__aeabi_atexit
 21408              	.LVL1263:
 21409              	.LBB11028:
 21410              	.LBI11028:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21411              		.loc 21 144 7 is_stmt 1 view .LVU4976
 21412              	.LBB11029:
 21413              	.LBI11029:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21414              		.loc 22 79 7 view .LVU4977
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21415              		.loc 22 79 7 is_stmt 0 view .LVU4978
 21416              	.LBE11029:
 21417              	.LBE11028:
 21418              		.loc 43 110 5 view .LVU4979
 21419 08da 9149     		ldr	r1, .L818+60
 21420 08dc 2046     		mov	r0, r4
 21421 08de FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21422              	.LVL1264:
 21423              	.LBB11030:
 21424              	.LBI11030:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21425              		.loc 21 144 7 is_stmt 1 view .LVU4980
 21426              	.LBB11031:
 21427              	.LBI11031:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21428              		.loc 22 79 7 view .LVU4981
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21429              		.loc 22 79 7 is_stmt 0 view .LVU4982
 21430              	.LBE11031:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 788


 21431              	.LBE11030:
 21432              		.loc 43 110 5 view .LVU4983
 21433 08e2 9049     		ldr	r1, .L818+64
 21434 08e4 6AA8     		add	r0, sp, #424
 21435 08e6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21436              	.LVL1265:
 21437              	.LBB11032:
 21438              	.LBI11032:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21439              		.loc 21 144 7 is_stmt 1 view .LVU4984
 21440              	.LBB11033:
 21441              	.LBI11033:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21442              		.loc 22 79 7 view .LVU4985
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21443              		.loc 22 79 7 is_stmt 0 view .LVU4986
 21444              	.LBE11033:
 21445              	.LBE11032:
 21446              		.loc 43 110 5 view .LVU4987
 21447 08ea 8F49     		ldr	r1, .L818+68
 21448 08ec 70A8     		add	r0, sp, #448
 21449 08ee FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21450              	.LVL1266:
 21451              	.LBB11034:
 21452              	.LBI11034:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21453              		.loc 21 144 7 is_stmt 1 view .LVU4988
 21454              	.LBB11035:
 21455              	.LBI11035:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21456              		.loc 22 79 7 view .LVU4989
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21457              		.loc 22 79 7 is_stmt 0 view .LVU4990
 21458              	.LBE11035:
 21459              	.LBE11034:
 21460              		.loc 43 110 5 view .LVU4991
 21461 08f2 8E49     		ldr	r1, .L818+72
 21462 08f4 76A8     		add	r0, sp, #472
 21463 08f6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21464              	.LVL1267:
 21465              	.LBB11036:
 21466              	.LBI11036:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21467              		.loc 21 144 7 is_stmt 1 view .LVU4992
 21468              	.LBB11037:
 21469              	.LBI11037:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21470              		.loc 22 79 7 view .LVU4993
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21471              		.loc 22 79 7 is_stmt 0 view .LVU4994
 21472              	.LBE11037:
 21473              	.LBE11036:
 21474              		.loc 43 110 5 view .LVU4995
 21475 08fa 8D49     		ldr	r1, .L818+76
 21476 08fc 7CA8     		add	r0, sp, #496
 21477 08fe FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21478              	.LVL1268:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 789


 21479              	.LBB11038:
 21480              	.LBI11038:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21481              		.loc 21 144 7 is_stmt 1 view .LVU4996
 21482              	.LBB11039:
 21483              	.LBI11039:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21484              		.loc 22 79 7 view .LVU4997
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21485              		.loc 22 79 7 is_stmt 0 view .LVU4998
 21486              	.LBE11039:
 21487              	.LBE11038:
 21488              		.loc 43 110 5 view .LVU4999
 21489 0902 8C49     		ldr	r1, .L818+80
 21490 0904 82A8     		add	r0, sp, #520
 21491 0906 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21492              	.LVL1269:
 21493              	.LBB11040:
 21494              	.LBI11040:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21495              		.loc 21 144 7 is_stmt 1 view .LVU5000
 21496              	.LBB11041:
 21497              	.LBI11041:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21498              		.loc 22 79 7 view .LVU5001
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21499              		.loc 22 79 7 is_stmt 0 view .LVU5002
 21500              	.LBE11041:
 21501              	.LBE11040:
 21502              		.loc 43 110 5 view .LVU5003
 21503 090a 88A8     		add	r0, sp, #544
 21504 090c 8A49     		ldr	r1, .L818+84
 21505 090e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21506              	.LVL1270:
 21507              	.LBB11042:
 21508              	.LBI11042:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21509              		.loc 21 144 7 is_stmt 1 view .LVU5004
 21510              	.LBB11043:
 21511              	.LBI11043:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21512              		.loc 22 79 7 view .LVU5005
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21513              		.loc 22 79 7 is_stmt 0 view .LVU5006
 21514              	.LBE11043:
 21515              	.LBE11042:
 21516              		.loc 43 110 5 view .LVU5007
 21517 0912 8EA8     		add	r0, sp, #568
 21518 0914 8949     		ldr	r1, .L818+88
 21519 0916 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21520              	.LVL1271:
 21521              	.LBB11044:
 21522              	.LBI11044:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21523              		.loc 21 144 7 is_stmt 1 view .LVU5008
 21524              	.LBB11045:
 21525              	.LBI11045:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 790


  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21526              		.loc 22 79 7 view .LVU5009
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21527              		.loc 22 79 7 is_stmt 0 view .LVU5010
 21528              	.LBE11045:
 21529              	.LBE11044:
 21530              		.loc 43 110 5 view .LVU5011
 21531 091a 94A8     		add	r0, sp, #592
 21532 091c 8849     		ldr	r1, .L818+92
 21533 091e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21534              	.LVL1272:
 21535              	.LBB11046:
 21536              	.LBI11046:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21537              		.loc 21 144 7 is_stmt 1 view .LVU5012
 21538              	.LBB11047:
 21539              	.LBI11047:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21540              		.loc 22 79 7 view .LVU5013
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21541              		.loc 22 79 7 is_stmt 0 view .LVU5014
 21542              	.LBE11047:
 21543              	.LBE11046:
 21544              		.loc 43 110 5 view .LVU5015
 21545 0922 9AA8     		add	r0, sp, #616
 21546 0924 8749     		ldr	r1, .L818+96
 21547 0926 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21548              	.LVL1273:
 21549              	.LBB11048:
 21550              	.LBI11048:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21551              		.loc 21 144 7 is_stmt 1 view .LVU5016
 21552              	.LBB11049:
 21553              	.LBI11049:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21554              		.loc 22 79 7 view .LVU5017
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21555              		.loc 22 79 7 is_stmt 0 view .LVU5018
 21556              	.LBE11049:
 21557              	.LBE11048:
 21558              		.loc 43 110 5 view .LVU5019
 21559 092a A0A8     		add	r0, sp, #640
 21560 092c 8649     		ldr	r1, .L818+100
 21561 092e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21562              	.LVL1274:
 21563              	.LBB11050:
 21564              	.LBI11050:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21565              		.loc 21 144 7 is_stmt 1 view .LVU5020
 21566              	.LBB11051:
 21567              	.LBI11051:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21568              		.loc 22 79 7 view .LVU5021
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21569              		.loc 22 79 7 is_stmt 0 view .LVU5022
 21570              	.LBE11051:
 21571              	.LBE11050:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 791


 21572              		.loc 43 110 5 view .LVU5023
 21573 0932 A6A8     		add	r0, sp, #664
 21574 0934 8549     		ldr	r1, .L818+104
 21575 0936 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21576              	.LVL1275:
 21577 093a 0C23     		movs	r3, #12
 21578 093c 4FAA     		add	r2, sp, #316
 21579 093e 4F94     		str	r4, [sp, #316]
 21580 0940 5093     		str	r3, [sp, #320]
 21581              	.LVL1276:
 21582              	.LBB11052:
 21583              	.LBI11052:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21584              		.loc 21 144 7 is_stmt 1 view .LVU5024
 21585              	.LBB11053:
 21586              	.LBI11053:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21587              		.loc 22 79 7 view .LVU5025
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21588              		.loc 22 79 7 is_stmt 0 view .LVU5026
 21589              	.LBE11053:
 21590              	.LBE11052:
 21591              		.loc 43 110 5 view .LVU5027
 21592 0942 48AB     		add	r3, sp, #288
 21593 0944 8248     		ldr	r0, .L818+108
 21594 0946 06CA     		ldm	r2, {r1, r2}
 21595 0948 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 21596              	.LVL1277:
 21597              	.LBB11054:
 21598              	.LBI11054:
 21599              		.loc 21 162 7 is_stmt 1 view .LVU5028
 21600              	.LBB11055:
 21601              	.LBI11055:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21602              		.loc 22 89 7 view .LVU5029
 21603              	.L776:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21604              		.loc 22 89 7 is_stmt 0 view .LVU5030
 21605              	.LBE11055:
 21606              	.LBE11054:
 21607              		.loc 43 110 5 view .LVU5031
 21608 094c 183D     		subs	r5, r5, #24
 21609              	.LVL1278:
 21610              	.LBB11056:
 21611              	.LBI11056:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 21612              		.loc 19 657 7 is_stmt 1 view .LVU5032
 21613              	.LBB11057:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21614              		.loc 19 658 19 is_stmt 0 view .LVU5033
 21615 094e 2846     		mov	r0, r5
 21616 0950 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 21617              	.LVL1279:
 21618              	.LBB11058:
 21619              	.LBI11058:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21620              		.loc 19 150 14 is_stmt 1 view .LVU5034
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 792


 21621              	.LBB11059:
 21622              	.LBI11059:
 21623              		.loc 21 162 7 view .LVU5035
 21624              	.LBB11060:
 21625              	.LBI11060:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21626              		.loc 22 89 7 view .LVU5036
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21627              		.loc 22 89 7 is_stmt 0 view .LVU5037
 21628              	.LBE11060:
 21629              	.LBE11059:
 21630              	.LBE11058:
 21631              	.LBE11057:
 21632              	.LBE11056:
 21633              		.loc 43 110 5 view .LVU5038
 21634 0954 A542     		cmp	r5, r4
 21635 0956 F9D1     		bne	.L776
 21636              	.LVL1280:
 21637              	.LBB11061:
 21638              	.LBI11061:
 21639              		.loc 21 162 7 is_stmt 1 view .LVU5039
 21640              	.LBB11062:
 21641              	.LBI11062:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21642              		.loc 22 89 7 view .LVU5040
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21643              		.loc 22 89 7 is_stmt 0 view .LVU5041
 21644              	.LBE11062:
 21645              	.LBE11061:
 21646              	.LBB11063:
 21647              	.LBI11063:
 21648              		.loc 21 162 7 is_stmt 1 view .LVU5042
 21649              	.LBB11064:
 21650              	.LBI11064:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21651              		.loc 22 89 7 view .LVU5043
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21652              		.loc 22 89 7 is_stmt 0 view .LVU5044
 21653              	.LBE11064:
 21654              	.LBE11063:
 21655              	.LBB11065:
 21656              	.LBI11065:
 21657              		.loc 21 162 7 is_stmt 1 view .LVU5045
 21658              	.LBB11066:
 21659              	.LBI11066:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21660              		.loc 22 89 7 view .LVU5046
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21661              		.loc 22 89 7 is_stmt 0 view .LVU5047
 21662              	.LBE11066:
 21663              	.LBE11065:
 21664              	.LBB11067:
 21665              	.LBI11067:
 21666              		.loc 21 162 7 is_stmt 1 view .LVU5048
 21667              	.LBB11068:
 21668              	.LBI11068:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 793


 21669              		.loc 22 89 7 view .LVU5049
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21670              		.loc 22 89 7 is_stmt 0 view .LVU5050
 21671              	.LBE11068:
 21672              	.LBE11067:
 21673              	.LBB11069:
 21674              	.LBI11069:
 21675              		.loc 21 162 7 is_stmt 1 view .LVU5051
 21676              	.LBB11070:
 21677              	.LBI11070:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21678              		.loc 22 89 7 view .LVU5052
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21679              		.loc 22 89 7 is_stmt 0 view .LVU5053
 21680              	.LBE11070:
 21681              	.LBE11069:
 21682              	.LBB11071:
 21683              	.LBI11071:
 21684              		.loc 21 162 7 is_stmt 1 view .LVU5054
 21685              	.LBB11072:
 21686              	.LBI11072:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21687              		.loc 22 89 7 view .LVU5055
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21688              		.loc 22 89 7 is_stmt 0 view .LVU5056
 21689              	.LBE11072:
 21690              	.LBE11071:
 21691              	.LBB11073:
 21692              	.LBI11073:
 21693              		.loc 21 162 7 is_stmt 1 view .LVU5057
 21694              	.LBB11074:
 21695              	.LBI11074:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21696              		.loc 22 89 7 view .LVU5058
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21697              		.loc 22 89 7 is_stmt 0 view .LVU5059
 21698              	.LBE11074:
 21699              	.LBE11073:
 21700              	.LBB11075:
 21701              	.LBI11075:
 21702              		.loc 21 162 7 is_stmt 1 view .LVU5060
 21703              	.LBB11076:
 21704              	.LBI11076:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21705              		.loc 22 89 7 view .LVU5061
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21706              		.loc 22 89 7 is_stmt 0 view .LVU5062
 21707              	.LBE11076:
 21708              	.LBE11075:
 21709              	.LBB11077:
 21710              	.LBI11077:
 21711              		.loc 21 162 7 is_stmt 1 view .LVU5063
 21712              	.LBB11078:
 21713              	.LBI11078:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21714              		.loc 22 89 7 view .LVU5064
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 794


 21715              		.loc 22 89 7 is_stmt 0 view .LVU5065
 21716              	.LBE11078:
 21717              	.LBE11077:
 21718              	.LBB11079:
 21719              	.LBI11079:
 21720              		.loc 21 162 7 is_stmt 1 view .LVU5066
 21721              	.LBB11080:
 21722              	.LBI11080:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21723              		.loc 22 89 7 view .LVU5067
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21724              		.loc 22 89 7 is_stmt 0 view .LVU5068
 21725              	.LBE11080:
 21726              	.LBE11079:
 21727              	.LBB11081:
 21728              	.LBI11081:
 21729              		.loc 21 162 7 is_stmt 1 view .LVU5069
 21730              	.LBB11082:
 21731              	.LBI11082:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21732              		.loc 22 89 7 view .LVU5070
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21733              		.loc 22 89 7 is_stmt 0 view .LVU5071
 21734              	.LBE11082:
 21735              	.LBE11081:
 21736              	.LBB11083:
 21737              	.LBI11083:
 21738              		.loc 21 162 7 is_stmt 1 view .LVU5072
 21739              	.LBB11084:
 21740              	.LBI11084:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21741              		.loc 22 89 7 view .LVU5073
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21742              		.loc 22 89 7 is_stmt 0 view .LVU5074
 21743              	.LBE11084:
 21744              	.LBE11083:
  94:chord.h       ****         "Triad",
 21745              		.loc 43 94 36 view .LVU5075
 21746 0958 624A     		ldr	r2, .L818
 21747              		.file 44 "arp.h"
   1:arp.h         **** /* 
   2:arp.h         ****  * Copyright (C) 2021 Evan Pernu - All Rights Reserved
   3:arp.h         ****  * You may use, distribute and modify this code under the
   4:arp.h         ****  * terms of the GNU AGPLv3 license.
   5:arp.h         ****  * 
   6:arp.h         ****  * You should have received a copy of the GNU AGPLv3 license with
   7:arp.h         ****  * this file (LICENSE.md). If not, please write to: evanpernu@gmail.com, 
   8:arp.h         ****  * or visit: https://www.gnu.org/licenses/agpl-3.0.en.html
   9:arp.h         ****  */
  10:arp.h         **** 
  11:arp.h         **** #include <string>
  12:arp.h         **** #include <vector>
  13:arp.h         **** 
  14:arp.h         **** #include "chord.h"
  15:arp.h         **** 
  16:arp.h         **** namespace jellybeans {
  17:arp.h         ****     class Arp {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 795


  18:arp.h         ****     public:
  19:arp.h         ****         // Maximum arp steps
  20:arp.h         ****         int maxSteps;
  21:arp.h         **** 
  22:arp.h         ****         // Tracks the current position in arpTraversal
  23:arp.h         ****         int traversalIndex;
  24:arp.h         **** 
  25:arp.h         ****         // Current step index, 0 based
  26:arp.h         ****         int step; 
  27:arp.h         **** 
  28:arp.h         ****         // The note value currently being sent to Patches' DAC's output 1
  29:arp.h         ****         // This is stored so that it's only calculated upon a change
  30:arp.h         ****         float noteDacOutput1;
  31:arp.h         **** 
  32:arp.h         ****         // Number of clock pulses that have been received since the last reset
  33:arp.h         ****         int clockCount;
  34:arp.h         **** 
  35:arp.h         ****         // The arp's clock division (step to the next note every X clock pulses)
  36:arp.h         ****         // TODO convert to int, out of say 256 notes per bar, so that we can use rapid pulses for f
  37:arp.h         ****         int clockDiv;
  38:arp.h         **** 
  39:arp.h         ****         // Stores which arp note should be played at each next step.
  40:arp.h         ****         // Contains a list of indices of arpNotes
  41:arp.h         ****         std::vector<int> traversal;
  42:arp.h         **** 
  43:arp.h         ****         // Must be an element of mu::arpPatterns
  44:arp.h         ****         std::string pattern;
  45:arp.h         **** 
  46:arp.h         ****         // String representation of the arp
  47:arp.h         ****         std::string string;
  48:arp.h         **** 
  49:arp.h         ****         // Current root note
  50:arp.h         ****         float root; //TODO delete?
  51:arp.h         **** 
  52:arp.h         ****         // Underlying chord
  53:arp.h         ****         DiatonicChord* chord;
  54:arp.h         **** 
  55:arp.h         ****         Arp();// : Arp(8, DiatonicChord(1, 0, "Major", "Triad"), "Up", 1) {};
  56:arp.h         **** 
  57:arp.h         ****         // @param maxSteps 
  58:arp.h         ****         // @param chord
  59:arp.h         ****         // @param pattern - must be an element of mu::arpPatterns
  60:arp.h         ****         // @param clockDiv
  61:arp.h         ****         Arp(int, DiatonicChord*, std::string, int);
  62:arp.h         **** 
  63:arp.h         ****         // Intended to be called every time a clock pulse is received
  64:arp.h         ****         void OnStep();
  65:arp.h         **** 
  66:arp.h         ****         // Updates the whole ass arp
  67:arp.h         ****         void Update();
  68:arp.h         **** 
  69:arp.h         ****         // Updates the arp traversal values based on the current pattern
  70:arp.h         ****         void UpdateTraversal();
  71:arp.h         **** 
  72:arp.h         ****         // Called every time the arp steps to the next note
  73:arp.h         ****         void UpdateStep();
  74:arp.h         **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 796


  75:arp.h         ****         void UpdateString();
  76:arp.h         ****     };
  77:arp.h         **** 
  78:arp.h         ****     const std::vector<std::string> arpPatterns {
  79:arp.h         ****         "Up",
  80:arp.h         ****         "Down",
  81:arp.h         ****         "U+D In",
  82:arp.h         ****         "U+D Ex",
  83:arp.h         ****         "Random"
  84:arp.h         ****     };
 21748              		.loc 44 84 5 view .LVU5076
 21749 095a 82AD     		add	r5, sp, #520
  94:chord.h       ****         "Triad",
 21750              		.loc 43 94 36 view .LVU5077
 21751 095c 6949     		ldr	r1, .L818+32
 21752 095e 7C48     		ldr	r0, .L818+108
 21753 0960 FFF7FEFF 		bl	__aeabi_atexit
 21754              	.LVL1281:
 21755              	.LBB11085:
 21756              	.LBI11085:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21757              		.loc 21 144 7 is_stmt 1 view .LVU5078
 21758              	.LBB11086:
 21759              	.LBI11086:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21760              		.loc 22 79 7 view .LVU5079
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21761              		.loc 22 79 7 is_stmt 0 view .LVU5080
 21762              	.LBE11086:
 21763              	.LBE11085:
 21764              		.loc 44 84 5 view .LVU5081
 21765 0964 7B49     		ldr	r1, .L818+112
 21766 0966 2046     		mov	r0, r4
 21767 0968 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21768              	.LVL1282:
 21769              	.LBB11087:
 21770              	.LBI11087:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21771              		.loc 21 144 7 is_stmt 1 view .LVU5082
 21772              	.LBB11088:
 21773              	.LBI11088:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21774              		.loc 22 79 7 view .LVU5083
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21775              		.loc 22 79 7 is_stmt 0 view .LVU5084
 21776              	.LBE11088:
 21777              	.LBE11087:
 21778              		.loc 44 84 5 view .LVU5085
 21779 096c 7A49     		ldr	r1, .L818+116
 21780 096e 6AA8     		add	r0, sp, #424
 21781 0970 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21782              	.LVL1283:
 21783              	.LBB11089:
 21784              	.LBI11089:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21785              		.loc 21 144 7 is_stmt 1 view .LVU5086
 21786              	.LBB11090:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 797


 21787              	.LBI11090:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21788              		.loc 22 79 7 view .LVU5087
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21789              		.loc 22 79 7 is_stmt 0 view .LVU5088
 21790              	.LBE11090:
 21791              	.LBE11089:
 21792              		.loc 44 84 5 view .LVU5089
 21793 0974 7949     		ldr	r1, .L818+120
 21794 0976 70A8     		add	r0, sp, #448
 21795 0978 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21796              	.LVL1284:
 21797              	.LBB11091:
 21798              	.LBI11091:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21799              		.loc 21 144 7 is_stmt 1 view .LVU5090
 21800              	.LBB11092:
 21801              	.LBI11092:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21802              		.loc 22 79 7 view .LVU5091
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21803              		.loc 22 79 7 is_stmt 0 view .LVU5092
 21804              	.LBE11092:
 21805              	.LBE11091:
 21806              		.loc 44 84 5 view .LVU5093
 21807 097c 7849     		ldr	r1, .L818+124
 21808 097e 76A8     		add	r0, sp, #472
 21809 0980 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21810              	.LVL1285:
 21811              	.LBB11093:
 21812              	.LBI11093:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21813              		.loc 21 144 7 is_stmt 1 view .LVU5094
 21814              	.LBB11094:
 21815              	.LBI11094:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21816              		.loc 22 79 7 view .LVU5095
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21817              		.loc 22 79 7 is_stmt 0 view .LVU5096
 21818              	.LBE11094:
 21819              	.LBE11093:
 21820              		.loc 44 84 5 view .LVU5097
 21821 0984 7749     		ldr	r1, .L818+128
 21822 0986 7CA8     		add	r0, sp, #496
 21823 0988 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21824              	.LVL1286:
 21825 098c 0523     		movs	r3, #5
 21826 098e 48AA     		add	r2, sp, #288
 21827 0990 4894     		str	r4, [sp, #288]
 21828 0992 4993     		str	r3, [sp, #292]
 21829              	.LVL1287:
 21830              	.LBB11095:
 21831              	.LBI11095:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21832              		.loc 21 144 7 is_stmt 1 view .LVU5098
 21833              	.LBB11096:
 21834              	.LBI11096:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 798


  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21835              		.loc 22 79 7 view .LVU5099
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21836              		.loc 22 79 7 is_stmt 0 view .LVU5100
 21837              	.LBE11096:
 21838              	.LBE11095:
 21839              		.loc 44 84 5 view .LVU5101
 21840 0994 41AB     		add	r3, sp, #260
 21841 0996 7448     		ldr	r0, .L818+132
 21842 0998 06CA     		ldm	r2, {r1, r2}
 21843 099a FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 21844              	.LVL1288:
 21845              	.LBB11097:
 21846              	.LBI11097:
 21847              		.loc 21 162 7 is_stmt 1 view .LVU5102
 21848              	.LBB11098:
 21849              	.LBI11098:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21850              		.loc 22 89 7 view .LVU5103
 21851              	.L777:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21852              		.loc 22 89 7 is_stmt 0 view .LVU5104
 21853              	.LBE11098:
 21854              	.LBE11097:
 21855              		.loc 44 84 5 view .LVU5105
 21856 099e 183D     		subs	r5, r5, #24
 21857              	.LVL1289:
 21858              	.LBB11099:
 21859              	.LBI11099:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 21860              		.loc 19 657 7 is_stmt 1 view .LVU5106
 21861              	.LBB11100:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21862              		.loc 19 658 19 is_stmt 0 view .LVU5107
 21863 09a0 2846     		mov	r0, r5
 21864 09a2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 21865              	.LVL1290:
 21866              	.LBB11101:
 21867              	.LBI11101:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21868              		.loc 19 150 14 is_stmt 1 view .LVU5108
 21869              	.LBB11102:
 21870              	.LBI11102:
 21871              		.loc 21 162 7 view .LVU5109
 21872              	.LBB11103:
 21873              	.LBI11103:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21874              		.loc 22 89 7 view .LVU5110
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21875              		.loc 22 89 7 is_stmt 0 view .LVU5111
 21876              	.LBE11103:
 21877              	.LBE11102:
 21878              	.LBE11101:
 21879              	.LBE11100:
 21880              	.LBE11099:
 21881              		.loc 44 84 5 view .LVU5112
 21882 09a6 A542     		cmp	r5, r4
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 799


 21883 09a8 F9D1     		bne	.L777
 21884              	.LVL1291:
 21885              	.LBB11104:
 21886              	.LBI11104:
 21887              		.loc 21 162 7 is_stmt 1 view .LVU5113
 21888              	.LBB11105:
 21889              	.LBI11105:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21890              		.loc 22 89 7 view .LVU5114
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21891              		.loc 22 89 7 is_stmt 0 view .LVU5115
 21892              	.LBE11105:
 21893              	.LBE11104:
 21894              	.LBB11106:
 21895              	.LBI11106:
 21896              		.loc 21 162 7 is_stmt 1 view .LVU5116
 21897              	.LBB11107:
 21898              	.LBI11107:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21899              		.loc 22 89 7 view .LVU5117
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21900              		.loc 22 89 7 is_stmt 0 view .LVU5118
 21901              	.LBE11107:
 21902              	.LBE11106:
 21903              	.LBB11108:
 21904              	.LBI11108:
 21905              		.loc 21 162 7 is_stmt 1 view .LVU5119
 21906              	.LBB11109:
 21907              	.LBI11109:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21908              		.loc 22 89 7 view .LVU5120
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21909              		.loc 22 89 7 is_stmt 0 view .LVU5121
 21910              	.LBE11109:
 21911              	.LBE11108:
 21912              	.LBB11110:
 21913              	.LBI11110:
 21914              		.loc 21 162 7 is_stmt 1 view .LVU5122
 21915              	.LBB11111:
 21916              	.LBI11111:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21917              		.loc 22 89 7 view .LVU5123
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21918              		.loc 22 89 7 is_stmt 0 view .LVU5124
 21919              	.LBE11111:
 21920              	.LBE11110:
 21921              	.LBB11112:
 21922              	.LBI11112:
 21923              		.loc 21 162 7 is_stmt 1 view .LVU5125
 21924              	.LBB11113:
 21925              	.LBI11113:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21926              		.loc 22 89 7 view .LVU5126
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21927              		.loc 22 89 7 is_stmt 0 view .LVU5127
 21928              	.LBE11113:
 21929              	.LBE11112:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 800


  78:arp.h         ****         "Up",
 21930              		.loc 44 78 36 view .LVU5128
 21931 09aa 4E4A     		ldr	r2, .L818
  85:arp.h         **** 
  86:arp.h         ****     const std::vector<std::string> arpRhythms {
  87:arp.h         ****         "None",
  88:arp.h         ****         "Sw 25%",
  89:arp.h         ****         "Sw 50%",
  90:arp.h         ****         "Sw 75%",
  91:arp.h         ****         "Sw 100%"
  92:arp.h         ****     };
 21932              		.loc 44 92 5 view .LVU5129
 21933 09ac 82AD     		add	r5, sp, #520
  78:arp.h         ****         "Up",
 21934              		.loc 44 78 36 view .LVU5130
 21935 09ae 5549     		ldr	r1, .L818+32
 21936 09b0 6D48     		ldr	r0, .L818+132
 21937 09b2 FFF7FEFF 		bl	__aeabi_atexit
 21938              	.LVL1292:
 21939              	.LBB11114:
 21940              	.LBI11114:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21941              		.loc 21 144 7 is_stmt 1 view .LVU5131
 21942              	.LBB11115:
 21943              	.LBI11115:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21944              		.loc 22 79 7 view .LVU5132
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21945              		.loc 22 79 7 is_stmt 0 view .LVU5133
 21946              	.LBE11115:
 21947              	.LBE11114:
 21948              		.loc 44 92 5 view .LVU5134
 21949 09b6 4E49     		ldr	r1, .L818+12
 21950 09b8 2046     		mov	r0, r4
 21951 09ba FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21952              	.LVL1293:
 21953              	.LBB11116:
 21954              	.LBI11116:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21955              		.loc 21 144 7 is_stmt 1 view .LVU5135
 21956              	.LBB11117:
 21957              	.LBI11117:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21958              		.loc 22 79 7 view .LVU5136
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21959              		.loc 22 79 7 is_stmt 0 view .LVU5137
 21960              	.LBE11117:
 21961              	.LBE11116:
 21962              		.loc 44 92 5 view .LVU5138
 21963 09be 6B49     		ldr	r1, .L818+136
 21964 09c0 6AA8     		add	r0, sp, #424
 21965 09c2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21966              	.LVL1294:
 21967              	.LBB11118:
 21968              	.LBI11118:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21969              		.loc 21 144 7 is_stmt 1 view .LVU5139
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 801


 21970              	.LBB11119:
 21971              	.LBI11119:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21972              		.loc 22 79 7 view .LVU5140
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21973              		.loc 22 79 7 is_stmt 0 view .LVU5141
 21974              	.LBE11119:
 21975              	.LBE11118:
 21976              		.loc 44 92 5 view .LVU5142
 21977 09c6 6A49     		ldr	r1, .L818+140
 21978 09c8 70A8     		add	r0, sp, #448
 21979 09ca FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21980              	.LVL1295:
 21981              	.LBB11120:
 21982              	.LBI11120:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21983              		.loc 21 144 7 is_stmt 1 view .LVU5143
 21984              	.LBB11121:
 21985              	.LBI11121:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21986              		.loc 22 79 7 view .LVU5144
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21987              		.loc 22 79 7 is_stmt 0 view .LVU5145
 21988              	.LBE11121:
 21989              	.LBE11120:
 21990              		.loc 44 92 5 view .LVU5146
 21991 09ce 76A8     		add	r0, sp, #472
 21992 09d0 6849     		ldr	r1, .L818+144
 21993 09d2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21994              	.LVL1296:
 21995              	.LBB11122:
 21996              	.LBI11122:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21997              		.loc 21 144 7 is_stmt 1 view .LVU5147
 21998              	.LBB11123:
 21999              	.LBI11123:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22000              		.loc 22 79 7 view .LVU5148
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22001              		.loc 22 79 7 is_stmt 0 view .LVU5149
 22002              	.LBE11123:
 22003              	.LBE11122:
 22004              		.loc 44 92 5 view .LVU5150
 22005 09d6 7CA8     		add	r0, sp, #496
 22006 09d8 6749     		ldr	r1, .L818+148
 22007 09da FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22008              	.LVL1297:
 22009 09de 0523     		movs	r3, #5
 22010 09e0 41AA     		add	r2, sp, #260
 22011 09e2 4194     		str	r4, [sp, #260]
 22012 09e4 4293     		str	r3, [sp, #264]
 22013              	.LVL1298:
 22014              	.LBB11124:
 22015              	.LBI11124:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22016              		.loc 21 144 7 is_stmt 1 view .LVU5151
 22017              	.LBB11125:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 802


 22018              	.LBI11125:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22019              		.loc 22 79 7 view .LVU5152
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22020              		.loc 22 79 7 is_stmt 0 view .LVU5153
 22021              	.LBE11125:
 22022              	.LBE11124:
 22023              		.loc 44 92 5 view .LVU5154
 22024 09e6 3AAB     		add	r3, sp, #232
 22025 09e8 6448     		ldr	r0, .L818+152
 22026 09ea 06CA     		ldm	r2, {r1, r2}
 22027 09ec FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 22028              	.LVL1299:
 22029              	.LBB11126:
 22030              	.LBI11126:
 22031              		.loc 21 162 7 is_stmt 1 view .LVU5155
 22032              	.LBB11127:
 22033              	.LBI11127:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22034              		.loc 22 89 7 view .LVU5156
 22035              	.L778:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22036              		.loc 22 89 7 is_stmt 0 view .LVU5157
 22037              	.LBE11127:
 22038              	.LBE11126:
 22039              		.loc 44 92 5 view .LVU5158
 22040 09f0 183D     		subs	r5, r5, #24
 22041              	.LVL1300:
 22042              	.LBB11128:
 22043              	.LBI11128:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 22044              		.loc 19 657 7 is_stmt 1 view .LVU5159
 22045              	.LBB11129:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 22046              		.loc 19 658 19 is_stmt 0 view .LVU5160
 22047 09f2 2846     		mov	r0, r5
 22048 09f4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 22049              	.LVL1301:
 22050              	.LBB11130:
 22051              	.LBI11130:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 22052              		.loc 19 150 14 is_stmt 1 view .LVU5161
 22053              	.LBB11131:
 22054              	.LBI11131:
 22055              		.loc 21 162 7 view .LVU5162
 22056              	.LBB11132:
 22057              	.LBI11132:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22058              		.loc 22 89 7 view .LVU5163
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22059              		.loc 22 89 7 is_stmt 0 view .LVU5164
 22060              	.LBE11132:
 22061              	.LBE11131:
 22062              	.LBE11130:
 22063              	.LBE11129:
 22064              	.LBE11128:
 22065              		.loc 44 92 5 view .LVU5165
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 803


 22066 09f8 A542     		cmp	r5, r4
 22067 09fa F9D1     		bne	.L778
 22068              	.LVL1302:
 22069              	.LBB11133:
 22070              	.LBI11133:
 22071              		.loc 21 162 7 is_stmt 1 view .LVU5166
 22072              	.LBB11134:
 22073              	.LBI11134:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22074              		.loc 22 89 7 view .LVU5167
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22075              		.loc 22 89 7 is_stmt 0 view .LVU5168
 22076              	.LBE11134:
 22077              	.LBE11133:
 22078              	.LBB11135:
 22079              	.LBI11135:
 22080              		.loc 21 162 7 is_stmt 1 view .LVU5169
 22081              	.LBB11136:
 22082              	.LBI11136:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22083              		.loc 22 89 7 view .LVU5170
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22084              		.loc 22 89 7 is_stmt 0 view .LVU5171
 22085              	.LBE11136:
 22086              	.LBE11135:
 22087              	.LBB11137:
 22088              	.LBI11137:
 22089              		.loc 21 162 7 is_stmt 1 view .LVU5172
 22090              	.LBB11138:
 22091              	.LBI11138:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22092              		.loc 22 89 7 view .LVU5173
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22093              		.loc 22 89 7 is_stmt 0 view .LVU5174
 22094              	.LBE11138:
 22095              	.LBE11137:
 22096              	.LBB11139:
 22097              	.LBI11139:
 22098              		.loc 21 162 7 is_stmt 1 view .LVU5175
 22099              	.LBB11140:
 22100              	.LBI11140:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22101              		.loc 22 89 7 view .LVU5176
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22102              		.loc 22 89 7 is_stmt 0 view .LVU5177
 22103              	.LBE11140:
 22104              	.LBE11139:
 22105              	.LBB11141:
 22106              	.LBI11141:
 22107              		.loc 21 162 7 is_stmt 1 view .LVU5178
 22108              	.LBB11142:
 22109              	.LBI11142:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22110              		.loc 22 89 7 view .LVU5179
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22111              		.loc 22 89 7 is_stmt 0 view .LVU5180
 22112              	.LBE11142:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 804


 22113              	.LBE11141:
  86:arp.h         ****         "None",
 22114              		.loc 44 86 36 view .LVU5181
 22115 09fc 394A     		ldr	r2, .L818
 22116              	.LBB11143:
 22117              	.LBB11144:
 22118              	.LBB11145:
 22119              	.LBB11146:
 22120              	.LBB11147:
 22121              	.LBB11148:
 22122              	.LBB11149:
 22123              		.file 45 "../../libdaisy/src/per/qspi.h"
   1:../../libdaisy/src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libdaisy/src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libdaisy/src/per/qspi.h **** 
   4:../../libdaisy/src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libdaisy/src/per/qspi.h **** 
   6:../../libdaisy/src/per/qspi.h **** #include <cstdint>
   7:../../libdaisy/src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libdaisy/src/per/qspi.h **** 
   9:../../libdaisy/src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libdaisy/src/per/qspi.h ****     __attribute__((section( \
  11:../../libdaisy/src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libdaisy/src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libdaisy/src/per/qspi.h ****     __attribute__((section( \
  14:../../libdaisy/src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libdaisy/src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libdaisy/src/per/qspi.h ****     __attribute__((section( \
  17:../../libdaisy/src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libdaisy/src/per/qspi.h **** 
  19:../../libdaisy/src/per/qspi.h **** namespace daisy
  20:../../libdaisy/src/per/qspi.h **** {
  21:../../libdaisy/src/per/qspi.h **** /** @addtogroup serial
  22:../../libdaisy/src/per/qspi.h **** @{
  23:../../libdaisy/src/per/qspi.h **** */
  24:../../libdaisy/src/per/qspi.h **** 
  25:../../libdaisy/src/per/qspi.h **** /** 
  26:../../libdaisy/src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libdaisy/src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libdaisy/src/per/qspi.h ****     * IS25LP080D
  29:../../libdaisy/src/per/qspi.h **** */
  30:../../libdaisy/src/per/qspi.h **** class QSPIHandle
  31:../../libdaisy/src/per/qspi.h **** {
  32:../../libdaisy/src/per/qspi.h ****   public:
  33:../../libdaisy/src/per/qspi.h ****     enum Result
  34:../../libdaisy/src/per/qspi.h ****     {
  35:../../libdaisy/src/per/qspi.h ****         OK = 0,
  36:../../libdaisy/src/per/qspi.h ****         ERR
  37:../../libdaisy/src/per/qspi.h ****     };
  38:../../libdaisy/src/per/qspi.h **** 
  39:../../libdaisy/src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libdaisy/src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libdaisy/src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libdaisy/src/per/qspi.h ****          * 
  43:../../libdaisy/src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libdaisy/src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libdaisy/src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 805


  46:../../libdaisy/src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libdaisy/src/per/qspi.h ****          */
  48:../../libdaisy/src/per/qspi.h ****     enum Status
  49:../../libdaisy/src/per/qspi.h ****     {
  50:../../libdaisy/src/per/qspi.h ****         GOOD = 0,
  51:../../libdaisy/src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libdaisy/src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libdaisy/src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libdaisy/src/per/qspi.h ****     };
  55:../../libdaisy/src/per/qspi.h **** 
  56:../../libdaisy/src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libdaisy/src/per/qspi.h ****     struct Config
  58:../../libdaisy/src/per/qspi.h ****     {
  59:../../libdaisy/src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libdaisy/src/per/qspi.h ****         enum Device
  61:../../libdaisy/src/per/qspi.h ****         {
  62:../../libdaisy/src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libdaisy/src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libdaisy/src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libdaisy/src/per/qspi.h ****         };
  66:../../libdaisy/src/per/qspi.h **** 
  67:../../libdaisy/src/per/qspi.h ****         /** 
  68:../../libdaisy/src/per/qspi.h ****         Modes of operation.
  69:../../libdaisy/src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libdaisy/src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libdaisy/src/per/qspi.h ****         possible in this mode. \n 
  72:../../libdaisy/src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libdaisy/src/per/qspi.h ****         */
  74:../../libdaisy/src/per/qspi.h ****         enum Mode
  75:../../libdaisy/src/per/qspi.h ****         {
  76:../../libdaisy/src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libdaisy/src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libdaisy/src/per/qspi.h ****             MODE_LAST,
  79:../../libdaisy/src/per/qspi.h ****         };
  80:../../libdaisy/src/per/qspi.h **** 
  81:../../libdaisy/src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libdaisy/src/per/qspi.h ****         struct
  83:../../libdaisy/src/per/qspi.h ****         {
  84:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libdaisy/src/per/qspi.h ****         } pin_config;
  91:../../libdaisy/src/per/qspi.h **** 
  92:../../libdaisy/src/per/qspi.h ****         Device device;
  93:../../libdaisy/src/per/qspi.h ****         Mode   mode;
  94:../../libdaisy/src/per/qspi.h ****     };
  95:../../libdaisy/src/per/qspi.h **** 
  96:../../libdaisy/src/per/qspi.h ****     /** 
  97:../../libdaisy/src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libdaisy/src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libdaisy/src/per/qspi.h ****         */
 101:../../libdaisy/src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libdaisy/src/per/qspi.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 806


 103:../../libdaisy/src/per/qspi.h ****     /** Returns the current config. */
 104:../../libdaisy/src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libdaisy/src/per/qspi.h **** 
 106:../../libdaisy/src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libdaisy/src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libdaisy/src/per/qspi.h ****     /** 
 109:../../libdaisy/src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libdaisy/src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libdaisy/src/per/qspi.h ****         */
 113:../../libdaisy/src/per/qspi.h ****     Result DeInit();
 114:../../libdaisy/src/per/qspi.h **** 
 115:../../libdaisy/src/per/qspi.h ****     /** 
 116:../../libdaisy/src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libdaisy/src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libdaisy/src/per/qspi.h ****         \param address Address to write to
 119:../../libdaisy/src/per/qspi.h ****         \param size Buffer size
 120:../../libdaisy/src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libdaisy/src/per/qspi.h ****         */
 123:../../libdaisy/src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libdaisy/src/per/qspi.h **** 
 125:../../libdaisy/src/per/qspi.h ****     /** 
 126:../../libdaisy/src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libdaisy/src/per/qspi.h ****         \param address Address to write to
 128:../../libdaisy/src/per/qspi.h ****         \param size Buffer size
 129:../../libdaisy/src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libdaisy/src/per/qspi.h ****         */
 132:../../libdaisy/src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libdaisy/src/per/qspi.h **** 
 134:../../libdaisy/src/per/qspi.h ****     /** 
 135:../../libdaisy/src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libdaisy/src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libdaisy/src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libdaisy/src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libdaisy/src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libdaisy/src/per/qspi.h ****         */
 142:../../libdaisy/src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libdaisy/src/per/qspi.h **** 
 144:../../libdaisy/src/per/qspi.h ****     /**  
 145:../../libdaisy/src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libdaisy/src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libdaisy/src/per/qspi.h ****         \param addr Address of sector to erase
 148:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libdaisy/src/per/qspi.h ****         */
 150:../../libdaisy/src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libdaisy/src/per/qspi.h **** 
 152:../../libdaisy/src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libdaisy/src/per/qspi.h ****      *  \returns Status
 154:../../libdaisy/src/per/qspi.h ****      */
 155:../../libdaisy/src/per/qspi.h ****     Status GetStatus();
 156:../../libdaisy/src/per/qspi.h **** 
 157:../../libdaisy/src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libdaisy/src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libdaisy/src/per/qspi.h ****      *  to write to it use the Write function.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 807


 160:../../libdaisy/src/per/qspi.h ****      * 
 161:../../libdaisy/src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libdaisy/src/per/qspi.h ****      *                many bytes into the memory
 163:../../libdaisy/src/per/qspi.h ****     */
 164:../../libdaisy/src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libdaisy/src/per/qspi.h **** 
 166:../../libdaisy/src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 22124              		.loc 45 166 34 view .LVU5182
 22125 09fe 0024     		movs	r4, #0
 22126              	.LBE11149:
 22127              	.LBE11148:
 22128              	.LBE11147:
 22129              	.LBE11146:
 22130              	.LBE11145:
 22131              	.LBE11144:
 22132              	.LBE11143:
  86:arp.h         ****         "None",
 22133              		.loc 44 86 36 view .LVU5183
 22134 0a00 4049     		ldr	r1, .L818+32
 22135 0a02 5E48     		ldr	r0, .L818+152
 22136 0a04 FFF7FEFF 		bl	__aeabi_atexit
 22137              	.LVL1303:
 22138              	.LBB11230:
 22139              	.LBI11143:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 22140              		.loc 3 39 5 is_stmt 1 view .LVU5184
 22141              	.LBB11227:
 22142              	.LBB11171:
 22143              	.LBI11145:
  21:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 22144              		.loc 9 21 5 view .LVU5185
 22145              	.LBB11168:
 22146              	.LBB11154:
 22147              	.LBI11147:
 22148              		.loc 45 166 5 view .LVU5186
 22149              		.loc 45 166 5 is_stmt 0 view .LVU5187
 22150              	.LBE11154:
 22151              	.LBB11155:
 22152              	.LBI11155:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 22153              		.loc 13 62 5 is_stmt 1 view .LVU5188
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 22154              		.loc 13 62 5 is_stmt 0 view .LVU5189
 22155              	.LBE11155:
 22156              	.LBB11158:
 22157              	.LBI11158:
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 22158              		.loc 12 84 5 is_stmt 1 view .LVU5190
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 22159              		.loc 12 84 5 is_stmt 0 view .LVU5191
 22160              	.LBE11158:
 22161              	.LBB11159:
 22162              	.LBI11159:
 22163              		.file 46 "../../libdaisy/src/per/dac.h"
   1:../../libdaisy/src/per/dac.h **** #pragma once
   2:../../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libdaisy/src/per/dac.h **** #define DSY_DAC_H
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 808


   4:../../libdaisy/src/per/dac.h **** 
   5:../../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../../libdaisy/src/per/dac.h **** 
   7:../../libdaisy/src/per/dac.h **** namespace daisy
   8:../../libdaisy/src/per/dac.h **** {
   9:../../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../../libdaisy/src/per/dac.h ****  ** 
  11:../../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../../libdaisy/src/per/dac.h ****  **
  14:../../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../../libdaisy/src/per/dac.h ****  **
  16:../../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../../libdaisy/src/per/dac.h ****  ***/
  20:../../libdaisy/src/per/dac.h **** class DacHandle
  21:../../libdaisy/src/per/dac.h **** {
  22:../../libdaisy/src/per/dac.h ****   public:
  23:../../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../../libdaisy/src/per/dac.h ****     enum class Result
  25:../../libdaisy/src/per/dac.h ****     {
  26:../../libdaisy/src/per/dac.h ****         OK,
  27:../../libdaisy/src/per/dac.h ****         ERR,
  28:../../libdaisy/src/per/dac.h ****     };
  29:../../libdaisy/src/per/dac.h **** 
  30:../../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../../libdaisy/src/per/dac.h ****     enum class Channel
  32:../../libdaisy/src/per/dac.h ****     {
  33:../../libdaisy/src/per/dac.h ****         ONE,
  34:../../libdaisy/src/per/dac.h ****         TWO,
  35:../../libdaisy/src/per/dac.h ****         BOTH,
  36:../../libdaisy/src/per/dac.h ****     };
  37:../../libdaisy/src/per/dac.h **** 
  38:../../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../../libdaisy/src/per/dac.h ****      **
  40:../../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../../libdaisy/src/per/dac.h ****      **
  42:../../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../../libdaisy/src/per/dac.h ****      ***/
  45:../../libdaisy/src/per/dac.h ****     enum class Mode
  46:../../libdaisy/src/per/dac.h ****     {
  47:../../libdaisy/src/per/dac.h ****         POLLING,
  48:../../libdaisy/src/per/dac.h ****         DMA,
  49:../../libdaisy/src/per/dac.h ****     };
  50:../../libdaisy/src/per/dac.h **** 
  51:../../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../../libdaisy/src/per/dac.h ****      ***/
  55:../../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../../libdaisy/src/per/dac.h ****     {
  57:../../libdaisy/src/per/dac.h ****         BITS_8,
  58:../../libdaisy/src/per/dac.h ****         BITS_12
  59:../../libdaisy/src/per/dac.h ****     };
  60:../../libdaisy/src/per/dac.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 809


  61:../../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../../libdaisy/src/per/dac.h ****     {
  64:../../libdaisy/src/per/dac.h ****         ENABLED,
  65:../../libdaisy/src/per/dac.h ****         DISABLED,
  66:../../libdaisy/src/per/dac.h ****     };
  67:../../libdaisy/src/per/dac.h **** 
  68:../../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../../libdaisy/src/per/dac.h ****     struct Config
  70:../../libdaisy/src/per/dac.h ****     {
  71:../../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../../libdaisy/src/per/dac.h **** 
  77:../../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../../libdaisy/src/per/dac.h ****     };
  82:../../libdaisy/src/per/dac.h **** 
  83:../../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 22164              		.loc 46 83 5 is_stmt 1 view .LVU5192
 22165              		.loc 46 83 5 is_stmt 0 view .LVU5193
 22166              	.LBE11159:
 22167              	.LBB11162:
 22168              	.LBI11162:
  40:../../libdaisy/src/hid/usb.h **** 
 22169              		.loc 11 40 5 is_stmt 1 view .LVU5194
  40:../../libdaisy/src/hid/usb.h **** 
 22170              		.loc 11 40 5 is_stmt 0 view .LVU5195
 22171              	.LBE11162:
 22172              	.LBB11163:
 22173              	.LBI11163:
  77:../../libdaisy/src/sys/system.h ****     ~System() {}
 22174              		.loc 10 77 5 is_stmt 1 view .LVU5196
  77:../../libdaisy/src/sys/system.h ****     ~System() {}
 22175              		.loc 10 77 5 is_stmt 0 view .LVU5197
 22176              	.LBE11163:
 22177              	.LBE11168:
 22178              	.LBE11171:
 22179              	.LBB11172:
 22180              	.LBI11172:
  20:../../libdaisy/src/hid/encoder.h ****     ~Encoder() {}
 22181              		.loc 7 20 5 is_stmt 1 view .LVU5198
 22182              	.LBB11173:
 22183              	.LBB11174:
 22184              	.LBI11174:
  41:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 22185              		.loc 8 41 5 view .LVU5199
  41:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 22186              		.loc 8 41 5 is_stmt 0 view .LVU5200
 22187              	.LBE11174:
 22188              	.LBE11173:
 22189              	.LBE11172:
 22190              	.LBE11227:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 810


 22191              	.LBE11230:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 22192              		.loc 3 39 18 is_stmt 1 view .LVU5201
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 22193              		.loc 3 39 18 view .LVU5202
 22194              	.LBB11231:
 22195              	.LBB11228:
 22196              	.LBB11175:
 22197              	.LBI11175:
  83:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 22198              		.loc 6 83 5 view .LVU5203
 22199              	.LBB11176:
 22200              	.LBB11177:
 22201              	.LBI11177:
 22202              		.file 47 "../../libdaisy/src/per/uart.h"
   1:../../libdaisy/src/per/uart.h **** /* 
   2:../../libdaisy/src/per/uart.h **** TODO
   3:../../libdaisy/src/per/uart.h **** - UART1 defaults to DMA, add flexible config for DMA on all periphs
   4:../../libdaisy/src/per/uart.h **** - Transmit function improvements.
   5:../../libdaisy/src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   6:../../libdaisy/src/per/uart.h **** */
   7:../../libdaisy/src/per/uart.h **** 
   8:../../libdaisy/src/per/uart.h **** #pragma once
   9:../../libdaisy/src/per/uart.h **** #ifndef DSY_UART_H
  10:../../libdaisy/src/per/uart.h **** #define DSY_UART_H /**< macro */
  11:../../libdaisy/src/per/uart.h **** #include "daisy_core.h"
  12:../../libdaisy/src/per/uart.h **** 
  13:../../libdaisy/src/per/uart.h **** 
  14:../../libdaisy/src/per/uart.h **** namespace daisy
  15:../../libdaisy/src/per/uart.h **** {
  16:../../libdaisy/src/per/uart.h **** /** @addtogroup serial
  17:../../libdaisy/src/per/uart.h ****     @{
  18:../../libdaisy/src/per/uart.h ****     */
  19:../../libdaisy/src/per/uart.h **** 
  20:../../libdaisy/src/per/uart.h **** /** 
  21:../../libdaisy/src/per/uart.h ****     Uart Peripheral
  22:../../libdaisy/src/per/uart.h ****     @author shensley
  23:../../libdaisy/src/per/uart.h ****     @date March 2020
  24:../../libdaisy/src/per/uart.h ****     */
  25:../../libdaisy/src/per/uart.h **** class UartHandler
  26:../../libdaisy/src/per/uart.h **** {
  27:../../libdaisy/src/per/uart.h ****   public:
  28:../../libdaisy/src/per/uart.h ****     struct Config
  29:../../libdaisy/src/per/uart.h ****     {
  30:../../libdaisy/src/per/uart.h ****         enum class Peripheral
  31:../../libdaisy/src/per/uart.h ****         {
  32:../../libdaisy/src/per/uart.h ****             USART_1,
  33:../../libdaisy/src/per/uart.h ****             USART_2,
  34:../../libdaisy/src/per/uart.h ****             USART_3,
  35:../../libdaisy/src/per/uart.h ****             UART_4,
  36:../../libdaisy/src/per/uart.h ****             UART_5,
  37:../../libdaisy/src/per/uart.h ****             USART_6,
  38:../../libdaisy/src/per/uart.h ****             UART_7,
  39:../../libdaisy/src/per/uart.h ****             UART_8,
  40:../../libdaisy/src/per/uart.h ****             LPUART_1,
  41:../../libdaisy/src/per/uart.h ****         };
  42:../../libdaisy/src/per/uart.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 811


  43:../../libdaisy/src/per/uart.h ****         enum class StopBits
  44:../../libdaisy/src/per/uart.h ****         {
  45:../../libdaisy/src/per/uart.h ****             BITS_0_5,
  46:../../libdaisy/src/per/uart.h ****             BITS_1,
  47:../../libdaisy/src/per/uart.h ****             BITS_1_5,
  48:../../libdaisy/src/per/uart.h ****             BITS_2,
  49:../../libdaisy/src/per/uart.h ****         };
  50:../../libdaisy/src/per/uart.h **** 
  51:../../libdaisy/src/per/uart.h ****         enum class Parity
  52:../../libdaisy/src/per/uart.h ****         {
  53:../../libdaisy/src/per/uart.h ****             NONE,
  54:../../libdaisy/src/per/uart.h ****             EVEN,
  55:../../libdaisy/src/per/uart.h ****             ODD,
  56:../../libdaisy/src/per/uart.h ****         };
  57:../../libdaisy/src/per/uart.h **** 
  58:../../libdaisy/src/per/uart.h ****         enum class Mode
  59:../../libdaisy/src/per/uart.h ****         {
  60:../../libdaisy/src/per/uart.h ****             RX,
  61:../../libdaisy/src/per/uart.h ****             TX,
  62:../../libdaisy/src/per/uart.h ****             TX_RX,
  63:../../libdaisy/src/per/uart.h ****         };
  64:../../libdaisy/src/per/uart.h **** 
  65:../../libdaisy/src/per/uart.h ****         enum class WordLength
  66:../../libdaisy/src/per/uart.h ****         {
  67:../../libdaisy/src/per/uart.h ****             BITS_7,
  68:../../libdaisy/src/per/uart.h ****             BITS_8,
  69:../../libdaisy/src/per/uart.h ****             BITS_9,
  70:../../libdaisy/src/per/uart.h ****         };
  71:../../libdaisy/src/per/uart.h **** 
  72:../../libdaisy/src/per/uart.h ****         struct
  73:../../libdaisy/src/per/uart.h ****         {
  74:../../libdaisy/src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  75:../../libdaisy/src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  76:../../libdaisy/src/per/uart.h ****         } pin_config;        /**< & */
  77:../../libdaisy/src/per/uart.h **** 
  78:../../libdaisy/src/per/uart.h ****         Peripheral periph;
  79:../../libdaisy/src/per/uart.h ****         StopBits   stopbits;
  80:../../libdaisy/src/per/uart.h ****         Parity     parity;
  81:../../libdaisy/src/per/uart.h ****         Mode       mode;
  82:../../libdaisy/src/per/uart.h ****         WordLength wordlength;
  83:../../libdaisy/src/per/uart.h ****         uint32_t   baudrate;
  84:../../libdaisy/src/per/uart.h ****     };
  85:../../libdaisy/src/per/uart.h **** 
  86:../../libdaisy/src/per/uart.h **** 
  87:../../libdaisy/src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 22203              		.loc 47 87 5 view .LVU5204
 22204              		.loc 47 87 5 is_stmt 0 view .LVU5205
 22205              	.LBE11177:
 22206              	.LBB11180:
 22207              	.LBI11180:
 22208              		.file 48 "../../libdaisy/src/util/ringbuffer.h"
   1:../../libdaisy/src/util/ringbuffer.h **** #pragma once
   2:../../libdaisy/src/util/ringbuffer.h **** #ifndef DSY_RINGBUFFER_H
   3:../../libdaisy/src/util/ringbuffer.h **** #define DSY_RINGBUFFER_H
   4:../../libdaisy/src/util/ringbuffer.h **** 
   5:../../libdaisy/src/util/ringbuffer.h **** #include <algorithm>
   6:../../libdaisy/src/util/ringbuffer.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 812


   7:../../libdaisy/src/util/ringbuffer.h **** namespace daisy
   8:../../libdaisy/src/util/ringbuffer.h **** {
   9:../../libdaisy/src/util/ringbuffer.h **** /** @addtogroup utility
  10:../../libdaisy/src/util/ringbuffer.h ****     @{
  11:../../libdaisy/src/util/ringbuffer.h **** */
  12:../../libdaisy/src/util/ringbuffer.h **** 
  13:../../libdaisy/src/util/ringbuffer.h **** /**
  14:../../libdaisy/src/util/ringbuffer.h **** Utility Ring Buffer \n 
  15:../../libdaisy/src/util/ringbuffer.h **** imported from pichenettes/stmlib
  16:../../libdaisy/src/util/ringbuffer.h **** */
  17:../../libdaisy/src/util/ringbuffer.h **** template <typename T, size_t size>
  18:../../libdaisy/src/util/ringbuffer.h **** class RingBuffer
  19:../../libdaisy/src/util/ringbuffer.h **** {
  20:../../libdaisy/src/util/ringbuffer.h ****   public:
  21:../../libdaisy/src/util/ringbuffer.h ****     RingBuffer() {}
 22209              		.loc 48 21 5 is_stmt 1 view .LVU5206
 22210              		.loc 48 21 5 is_stmt 0 view .LVU5207
 22211              	.LBE11180:
 22212              	.LBB11181:
 22213              	.LBI11181:
  85:../../libdaisy/src/hid/midi.h **** 
  86:../../libdaisy/src/hid/midi.h ****     struct Config
 22214              		.loc 6 86 12 is_stmt 1 view .LVU5208
 22215              	.LBB11182:
 22216              	.LBI11182:
  34:../../libdaisy/src/hid/midi.h ****         {
 22217              		.loc 6 34 9 view .LVU5209
 22218              	.LBB11183:
 22219              	.LBB11184:
  36:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 22220              		.loc 6 36 13 view .LVU5210
  37:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 22221              		.loc 6 37 13 view .LVU5211
  38:../../libdaisy/src/hid/midi.h ****         }
 22222              		.loc 6 38 13 view .LVU5212
  38:../../libdaisy/src/hid/midi.h ****         }
 22223              		.loc 6 38 13 is_stmt 0 view .LVU5213
 22224              	.LBE11184:
 22225              	.LBE11183:
 22226              	.LBE11182:
 22227              	.LBE11181:
 22228              	.LBB11191:
 22229              	.LBI11191:
  25:../../libdaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
 22230              		.loc 6 25 5 is_stmt 1 view .LVU5214
 22231              	.LBB11192:
 22232              	.LBI11192:
 22233              		.loc 47 87 5 view .LVU5215
 22234              		.loc 47 87 5 is_stmt 0 view .LVU5216
 22235              	.LBE11192:
 22236              	.LBE11191:
 22237              	.LBE11176:
 22238              	.LBE11175:
 22239              	.LBB11203:
 22240              	.LBI11203:
  16:../../libdaisy/src/hid/disp/oled_display.h ****     virtual ~OledDisplay() {}
 22241              		.loc 4 16 5 is_stmt 1 view .LVU5217
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 813


 22242              	.LBB11204:
 22243              	.LBB11205:
 22244              	.LBB11206:
 22245              	.LBI11206:
 218:../../libdaisy/src/hid/disp/display.h ****     virtual ~OneBitGraphicsDisplayImpl() {}
 22246              		.loc 5 218 5 view .LVU5218
 22247              	.LBB11207:
 22248              	.LBI11207:
  22:../../libdaisy/src/hid/disp/display.h ****     virtual ~OneBitGraphicsDisplay() {}
 22249              		.loc 5 22 5 view .LVU5219
 22250              	.LBE11207:
 22251              	.LBE11206:
 22252              	.LBE11205:
 22253              	.LBE11204:
 22254              	.LBE11203:
 22255              	.LBB11220:
 22256              	.LBB11169:
 22257              	.LBB11164:
 22258              	.LBB11152:
 22259              	.LBB11150:
 22260              		.loc 45 166 34 is_stmt 0 view .LVU5220
 22261 0a08 5D48     		ldr	r0, .L818+156
 22262              	.LBE11150:
 22263              	.LBE11152:
 22264              	.LBE11164:
 22265              	.LBE11169:
 22266              	.LBE11220:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 22267              		.loc 3 39 18 view .LVU5221
 22268 0a0a 5E4A     		ldr	r2, .L818+160
 22269              	.LBB11221:
 22270              	.LBB11200:
 22271              	.LBB11196:
 22272              	.LBB11189:
 22273              	.LBB11187:
 22274              	.LBB11185:
  36:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 22275              		.loc 6 36 20 view .LVU5222
 22276 0a0c 00F51043 		add	r3, r0, #36864
 22277              	.LBE11185:
 22278              	.LBE11187:
 22279              	.LBE11189:
 22280              	.LBE11196:
 22281              	.LBE11200:
 22282              	.LBE11221:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 22283              		.loc 3 39 18 view .LVU5223
 22284 0a10 5D4E     		ldr	r6, .L818+164
 22285              	.LBE11228:
 22286              	.LBE11231:
  39:Jellybeans.cpp **** DaisyPatch patch;
 22287              		.loc 14 39 12 view .LVU5224
 22288 0a12 5E49     		ldr	r1, .L818+168
 22289              	.LBB11232:
 22290              	.LBB11229:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 22291              		.loc 3 39 18 view .LVU5225
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 814


 22292 0a14 C3F89021 		str	r2, [r3, #400]
 22293 0a18 5D4A     		ldr	r2, .L818+172
 22294              	.LBB11222:
 22295              	.LBB11201:
 22296              	.LBB11197:
 22297              	.LBB11190:
 22298              	.LBB11188:
 22299              	.LBB11186:
  36:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 22300              		.loc 6 36 20 view .LVU5226
 22301 0a1a C3F88C41 		str	r4, [r3, #396]
 22302              	.LBE11186:
 22303              	.LBE11188:
 22304              	.LBE11190:
 22305              	.LBE11197:
 22306              	.LBB11198:
 22307              	.LBB11195:
 22308              	.LBB11193:
 22309              	.LBB11194:
 22310              		.loc 47 87 35 view .LVU5227
 22311 0a1e C3F89441 		str	r4, [r3, #404]
 22312              	.LBE11194:
 22313              	.LBE11193:
 22314              	.LBE11195:
 22315              	.LBE11198:
 22316              	.LBE11201:
 22317              	.LBE11222:
 22318              	.LBB11223:
 22319              	.LBB11218:
 22320              	.LBB11216:
 22321              	.LBB11208:
 22322              	.LBB11209:
 22323              	.LBB11210:
 22324              	.LBB11211:
 22325              	.LBB11212:
 22326              		.file 49 "../../libdaisy/src/per/spi.h"
   1:../../libdaisy/src/per/spi.h **** #pragma once
   2:../../libdaisy/src/per/spi.h **** #ifndef DSY_SPI_H
   3:../../libdaisy/src/per/spi.h **** #define DSY_SPI_H
   4:../../libdaisy/src/per/spi.h **** 
   5:../../libdaisy/src/per/spi.h **** #include "daisy_core.h"
   6:../../libdaisy/src/per/spi.h **** 
   7:../../libdaisy/src/per/spi.h **** /* TODO:
   8:../../libdaisy/src/per/spi.h **** - Add documentation
   9:../../libdaisy/src/per/spi.h **** - Add reception
  10:../../libdaisy/src/per/spi.h **** - Add IT
  11:../../libdaisy/src/per/spi.h **** - Add DMA
  12:../../libdaisy/src/per/spi.h **** */
  13:../../libdaisy/src/per/spi.h **** 
  14:../../libdaisy/src/per/spi.h **** namespace daisy
  15:../../libdaisy/src/per/spi.h **** {
  16:../../libdaisy/src/per/spi.h **** /** @addtogroup serial
  17:../../libdaisy/src/per/spi.h **** @{
  18:../../libdaisy/src/per/spi.h **** */
  19:../../libdaisy/src/per/spi.h **** 
  20:../../libdaisy/src/per/spi.h **** /**  Handler for serial peripheral interface */
  21:../../libdaisy/src/per/spi.h **** class SpiHandle
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 815


  22:../../libdaisy/src/per/spi.h **** {
  23:../../libdaisy/src/per/spi.h ****   public:
  24:../../libdaisy/src/per/spi.h ****     struct Config
  25:../../libdaisy/src/per/spi.h ****     {
  26:../../libdaisy/src/per/spi.h ****         enum class Peripheral
  27:../../libdaisy/src/per/spi.h ****         {
  28:../../libdaisy/src/per/spi.h ****             SPI_1,
  29:../../libdaisy/src/per/spi.h ****             SPI_2,
  30:../../libdaisy/src/per/spi.h ****             SPI_3,
  31:../../libdaisy/src/per/spi.h ****             SPI_4,
  32:../../libdaisy/src/per/spi.h ****             SPI_5,
  33:../../libdaisy/src/per/spi.h ****             SPI_6,
  34:../../libdaisy/src/per/spi.h ****         };
  35:../../libdaisy/src/per/spi.h **** 
  36:../../libdaisy/src/per/spi.h ****         enum class Mode
  37:../../libdaisy/src/per/spi.h ****         {
  38:../../libdaisy/src/per/spi.h ****             MASTER,
  39:../../libdaisy/src/per/spi.h ****             SLAVE,
  40:../../libdaisy/src/per/spi.h ****         };
  41:../../libdaisy/src/per/spi.h **** 
  42:../../libdaisy/src/per/spi.h ****         enum class Direction
  43:../../libdaisy/src/per/spi.h ****         {
  44:../../libdaisy/src/per/spi.h ****             TWO_LINES,
  45:../../libdaisy/src/per/spi.h ****             TWO_LINES_TX_ONLY,
  46:../../libdaisy/src/per/spi.h ****             TWO_LINES_RX_ONLY,
  47:../../libdaisy/src/per/spi.h ****             ONE_LINE,
  48:../../libdaisy/src/per/spi.h ****         };
  49:../../libdaisy/src/per/spi.h **** 
  50:../../libdaisy/src/per/spi.h ****         enum class ClockPolarity
  51:../../libdaisy/src/per/spi.h ****         {
  52:../../libdaisy/src/per/spi.h ****             LOW,
  53:../../libdaisy/src/per/spi.h ****             HIGH,
  54:../../libdaisy/src/per/spi.h ****         };
  55:../../libdaisy/src/per/spi.h **** 
  56:../../libdaisy/src/per/spi.h ****         enum class ClockPhase
  57:../../libdaisy/src/per/spi.h ****         {
  58:../../libdaisy/src/per/spi.h ****             ONE_EDGE,
  59:../../libdaisy/src/per/spi.h ****             TWO_EDGE,
  60:../../libdaisy/src/per/spi.h ****         };
  61:../../libdaisy/src/per/spi.h **** 
  62:../../libdaisy/src/per/spi.h ****         enum class NSS
  63:../../libdaisy/src/per/spi.h ****         {
  64:../../libdaisy/src/per/spi.h ****             SOFT,
  65:../../libdaisy/src/per/spi.h ****             HARD_INPUT,
  66:../../libdaisy/src/per/spi.h ****             HARD_OUTPUT,
  67:../../libdaisy/src/per/spi.h ****         };
  68:../../libdaisy/src/per/spi.h **** 
  69:../../libdaisy/src/per/spi.h ****         enum class BaudPrescaler
  70:../../libdaisy/src/per/spi.h ****         {
  71:../../libdaisy/src/per/spi.h ****             PS_2,
  72:../../libdaisy/src/per/spi.h ****             PS_4,
  73:../../libdaisy/src/per/spi.h ****             PS_8,
  74:../../libdaisy/src/per/spi.h ****             PS_16,
  75:../../libdaisy/src/per/spi.h ****             PS_32,
  76:../../libdaisy/src/per/spi.h ****             PS_64,
  77:../../libdaisy/src/per/spi.h ****             PS_128,
  78:../../libdaisy/src/per/spi.h ****             PS_256,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 816


  79:../../libdaisy/src/per/spi.h ****         };
  80:../../libdaisy/src/per/spi.h **** 
  81:../../libdaisy/src/per/spi.h ****         struct
  82:../../libdaisy/src/per/spi.h ****         {
  83:../../libdaisy/src/per/spi.h ****             dsy_gpio_pin sclk; /**< & */
  84:../../libdaisy/src/per/spi.h ****             dsy_gpio_pin miso; /**< & */
  85:../../libdaisy/src/per/spi.h ****             dsy_gpio_pin mosi; /**< & */
  86:../../libdaisy/src/per/spi.h ****             dsy_gpio_pin nss;  /**< & */
  87:../../libdaisy/src/per/spi.h ****         } pin_config;
  88:../../libdaisy/src/per/spi.h **** 
  89:../../libdaisy/src/per/spi.h ****         Peripheral    periph;
  90:../../libdaisy/src/per/spi.h ****         Mode          mode;
  91:../../libdaisy/src/per/spi.h ****         Direction     direction;
  92:../../libdaisy/src/per/spi.h ****         unsigned long datasize;
  93:../../libdaisy/src/per/spi.h ****         ClockPolarity clock_polarity;
  94:../../libdaisy/src/per/spi.h ****         ClockPhase    clock_phase;
  95:../../libdaisy/src/per/spi.h ****         NSS           nss;
  96:../../libdaisy/src/per/spi.h ****         BaudPrescaler baud_prescaler;
  97:../../libdaisy/src/per/spi.h ****     };
  98:../../libdaisy/src/per/spi.h **** 
  99:../../libdaisy/src/per/spi.h ****     SpiHandle() : pimpl_(nullptr) {}
 22327              		.loc 49 99 33 view .LVU5228
 22328 0a22 C3F8A841 		str	r4, [r3, #424]
 22329              	.LBE11212:
 22330              	.LBE11211:
 22331              	.LBE11210:
 22332              	.LBE11209:
 22333              	.LBE11208:
 22334              	.LBE11216:
 22335              	.LBE11218:
 22336              	.LBE11223:
 22337              	.LBB11224:
 22338              	.LBB11170:
 22339              	.LBB11165:
 22340              	.LBB11153:
 22341              	.LBB11151:
 22342              		.loc 45 166 34 view .LVU5229
 22343 0a26 0460     		str	r4, [r0]
 22344              	.LBE11151:
 22345              	.LBE11153:
 22346              	.LBE11165:
 22347              	.LBB11166:
 22348              	.LBB11156:
 22349              	.LBB11157:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 22350              		.loc 13 62 35 view .LVU5230
 22351 0a28 4461     		str	r4, [r0, #20]
 22352              	.LBE11157:
 22353              	.LBE11156:
 22354              	.LBE11166:
 22355              	.LBB11167:
 22356              	.LBB11160:
 22357              	.LBB11161:
 22358              		.loc 46 83 33 view .LVU5231
 22359 0a2a 0462     		str	r4, [r0, #32]
 22360              	.LBE11161:
 22361              	.LBE11160:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 817


 22362              	.LBE11167:
 22363              	.LBE11170:
 22364              	.LBE11224:
 22365              	.LBB11225:
 22366              	.LBB11202:
 22367              	.LBB11199:
 22368              	.LBB11178:
 22369              	.LBB11179:
 22370              		.loc 47 87 35 view .LVU5232
 22371 0a2c C0F8E440 		str	r4, [r0, #228]
 22372              	.LBE11179:
 22373              	.LBE11178:
 22374              	.LBE11199:
 22375              	.LBE11202:
 22376              	.LBE11225:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 22377              		.loc 3 39 18 view .LVU5233
 22378 0a30 C3E96662 		strd	r6, r2, [r3, #408]
 22379              	.LVL1304:
 22380              	.LBB11226:
 22381              	.LBB11219:
 22382              	.LBB11217:
  16:../../libdaisy/src/hid/disp/oled_display.h ****     virtual ~OledDisplay() {}
 22383              		.loc 4 16 19 view .LVU5234
 22384 0a34 574A     		ldr	r2, .L818+176
 22385 0a36 584E     		ldr	r6, .L818+180
 22386 0a38 C3F8A021 		str	r2, [r3, #416]
 22387              	.LVL1305:
 22388              	.LBB11215:
 22389              	.LBI11208:
 132:../../libdaisy/src/dev/oled_ssd130x.h **** {
 22390              		.loc 15 132 7 is_stmt 1 view .LVU5235
 22391              	.LBB11214:
 22392              	.LBI11209:
  60:../../libdaisy/src/dev/oled_ssd130x.h **** {
 22393              		.loc 15 60 7 view .LVU5236
 22394              	.LBB11213:
 22395              	.LBI11210:
 22396              		.loc 49 99 5 view .LVU5237
 22397              		.loc 49 99 5 is_stmt 0 view .LVU5238
 22398              	.LBE11213:
 22399              	.LBE11214:
 22400              	.LBE11215:
 22401              	.LBE11217:
 22402              	.LBE11219:
 22403              	.LBE11226:
 22404              	.LBE11229:
 22405              	.LBE11232:
  39:Jellybeans.cpp **** DaisyPatch patch;
 22406              		.loc 14 39 12 view .LVU5239
 22407 0a3c 294A     		ldr	r2, .L818
 22408 0a3e FFF7FEFF 		bl	__aeabi_atexit
 22409              	.LVL1306:
 22410              	.LBB11233:
 22411              	.LBI11233:
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 22412              		.loc 19 431 7 is_stmt 1 view .LVU5240
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 818


 22413              	.LBB11234:
 22414              	.LBB11235:
 22415              	.LBI11235:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 22416              		.loc 19 190 7 view .LVU5241
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 22417              		.loc 19 190 7 is_stmt 0 view .LVU5242
 22418              	.LBE11235:
 22419              	.LBB11236:
 22420              	.LBI11236:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22421              		.loc 21 144 7 is_stmt 1 view .LVU5243
 22422              	.LBB11237:
 22423              	.LBI11237:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22424              		.loc 22 79 7 view .LVU5244
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22425              		.loc 22 79 7 is_stmt 0 view .LVU5245
 22426              	.LBE11237:
 22427              	.LBE11236:
 22428              	.LBB11238:
 22429              	.LBI11238:
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 22430              		.loc 19 159 2 is_stmt 1 view .LVU5246
 22431              	.LBB11239:
 22432              	.LBB11240:
 22433              	.LBB11241:
 22434              	.LBI11241:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 22435              		.loc 34 101 5 view .LVU5247
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 22436              		.loc 34 101 5 is_stmt 0 view .LVU5248
 22437              	.LBE11241:
 22438              	.LBB11242:
 22439              	.LBI11242:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 22440              		.loc 21 147 7 is_stmt 1 view .LVU5249
 22441              	.LBB11243:
 22442              	.LBI11243:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22443              		.loc 22 82 7 view .LVU5250
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22444              		.loc 22 82 7 is_stmt 0 view .LVU5251
 22445              	.LBE11243:
 22446              	.LBE11242:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 22447              		.loc 19 160 46 view .LVU5252
 22448 0a42 5648     		ldr	r0, .L818+184
 22449              	.LBE11240:
 22450              	.LBE11239:
 22451              	.LBE11238:
 22452              	.LBE11234:
 22453              	.LBE11233:
  43:Jellybeans.cpp **** std::string debugString;
 22454              		.loc 14 43 13 view .LVU5253
 22455 0a44 274A     		ldr	r2, .L818
 22456              	.LBB11263:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 819


 22457              	.LBB11261:
 22458              	.LBB11248:
 22459              	.LBB11246:
 22460              	.LBB11244:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 22461              		.loc 19 160 46 view .LVU5254
 22462 0a46 00F10803 		add	r3, r0, #8
 22463              	.LBE11244:
 22464              	.LBE11246:
 22465              	.LBE11248:
 22466              	.LBE11261:
 22467              	.LBE11263:
  43:Jellybeans.cpp **** std::string debugString;
 22468              		.loc 14 43 13 view .LVU5255
 22469 0a4a 5549     		ldr	r1, .L818+188
 22470              	.LBB11264:
 22471              	.LBB11262:
 22472              	.LBB11249:
 22473              	.LBB11250:
 22474              	.LBB11251:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 22475              		.loc 19 183 26 view .LVU5256
 22476 0a4c 4460     		str	r4, [r0, #4]
 22477              	.LBE11251:
 22478              	.LBE11250:
 22479              	.LBB11252:
 22480              	.LBB11253:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 22481              		.loc 20 322 14 view .LVU5257
 22482 0a4e 0472     		strb	r4, [r0, #8]
 22483 0a50 3446     		mov	r4, r6
 22484              	.LBE11253:
 22485              	.LBE11252:
 22486              	.LBE11249:
 22487              	.LBB11257:
 22488              	.LBB11247:
 22489              	.LBB11245:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 22490              		.loc 19 160 46 view .LVU5258
 22491 0a52 0360     		str	r3, [r0]
 22492              	.LVL1307:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 22493              		.loc 19 160 46 view .LVU5259
 22494              	.LBE11245:
 22495              	.LBE11247:
 22496              	.LBE11257:
 22497              	.LBB11258:
 22498              	.LBI11258:
 22499              		.loc 21 162 7 is_stmt 1 view .LVU5260
 22500              	.LBB11259:
 22501              	.LBI11259:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22502              		.loc 22 89 7 view .LVU5261
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22503              		.loc 22 89 7 is_stmt 0 view .LVU5262
 22504              	.LBE11259:
 22505              	.LBE11258:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 820


 22506              	.LBB11260:
 22507              	.LBI11249:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 22508              		.loc 19 214 7 is_stmt 1 view .LVU5263
 22509              	.LBB11255:
 22510              	.LBI11250:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 22511              		.loc 19 182 7 view .LVU5264
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 22512              		.loc 19 182 7 is_stmt 0 view .LVU5265
 22513              	.LBE11255:
 22514              	.LBB11256:
 22515              	.LBI11252:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 22516              		.loc 20 321 7 is_stmt 1 view .LVU5266
 22517              	.LBB11254:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 22518              		.loc 20 322 9 view .LVU5267
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 22519              		.loc 20 322 9 is_stmt 0 view .LVU5268
 22520              	.LBE11254:
 22521              	.LBE11256:
 22522              	.LBE11260:
 22523              	.LBE11262:
 22524              	.LBE11264:
  43:Jellybeans.cpp **** std::string debugString;
 22525              		.loc 14 43 13 view .LVU5269
 22526 0a54 FFF7FEFF 		bl	__aeabi_atexit
 22527              	.LVL1308:
  52:Jellybeans.cpp **** const FontDef font = Font_7x10;
 22528              		.loc 14 52 15 view .LVU5270
 22529 0a58 524A     		ldr	r2, .L818+192
 22530 0a5a 534B     		ldr	r3, .L818+196
 22531 0a5c 92E80300 		ldm	r2, {r0, r1}
 22532 0a60 83E80300 		stm	r3, {r0, r1}
 22533              	.LVL1309:
 22534              	.LBB11265:
 22535              	.LBI11265:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22536              		.loc 21 144 7 is_stmt 1 view .LVU5271
 22537              	.LBB11266:
 22538              	.LBI11266:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22539              		.loc 22 79 7 view .LVU5272
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22540              		.loc 22 79 7 is_stmt 0 view .LVU5273
 22541              	.LBE11266:
 22542              	.LBE11265:
  71:Jellybeans.cpp **** };
 22543              		.loc 14 71 1 view .LVU5274
 22544 0a64 2846     		mov	r0, r5
 22545 0a66 5149     		ldr	r1, .L818+200
 22546 0a68 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22547              	.LVL1310:
 22548              	.LBB11267:
 22549              	.LBI11267:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 821


 22550              		.loc 21 144 7 is_stmt 1 view .LVU5275
 22551              	.LBB11268:
 22552              	.LBI11268:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22553              		.loc 22 79 7 view .LVU5276
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22554              		.loc 22 79 7 is_stmt 0 view .LVU5277
 22555              	.LBE11268:
 22556              	.LBE11267:
  71:Jellybeans.cpp **** };
 22557              		.loc 14 71 1 view .LVU5278
 22558 0a6c 5049     		ldr	r1, .L818+204
 22559 0a6e 6AA8     		add	r0, sp, #424
 22560 0a70 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22561              	.LVL1311:
 22562              	.LBB11269:
 22563              	.LBI11269:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22564              		.loc 21 144 7 is_stmt 1 view .LVU5279
 22565              	.LBB11270:
 22566              	.LBI11270:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22567              		.loc 22 79 7 view .LVU5280
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22568              		.loc 22 79 7 is_stmt 0 view .LVU5281
 22569              	.LBE11270:
 22570              	.LBE11269:
  71:Jellybeans.cpp **** };
 22571              		.loc 14 71 1 view .LVU5282
 22572 0a74 4F49     		ldr	r1, .L818+208
 22573 0a76 70A8     		add	r0, sp, #448
 22574 0a78 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22575              	.LVL1312:
 22576 0a7c 0322     		movs	r2, #3
 22577 0a7e 33AB     		add	r3, sp, #204
 22578 0a80 3A95     		str	r5, [sp, #232]
 22579 0a82 3B92     		str	r2, [sp, #236]
 22580              	.LVL1313:
 22581              	.LBB11271:
 22582              	.LBI11271:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22583              		.loc 21 144 7 is_stmt 1 view .LVU5283
 22584              	.LBB11272:
 22585              	.LBI11272:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22586              		.loc 22 79 7 view .LVU5284
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22587              		.loc 22 79 7 is_stmt 0 view .LVU5285
 22588              	.LBE11272:
 22589              	.LBE11271:
  71:Jellybeans.cpp **** };
 22590              		.loc 14 71 1 view .LVU5286
 22591 0a84 3AAA     		add	r2, sp, #232
 22592 0a86 4C48     		ldr	r0, .L818+212
 22593 0a88 06CA     		ldm	r2, {r1, r2}
 22594 0a8a FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 22595              	.LVL1314:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 822


 22596              	.LBB11273:
 22597              	.LBI11273:
 22598              		.loc 21 162 7 is_stmt 1 view .LVU5287
 22599              	.LBB11274:
 22600              	.LBI11274:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22601              		.loc 22 89 7 view .LVU5288
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22602              		.loc 22 89 7 is_stmt 0 view .LVU5289
 22603              	.LBE11274:
 22604              	.LBE11273:
 22605              	.LBB11275:
 22606              	.LBI11275:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 22607              		.loc 19 657 7 is_stmt 1 view .LVU5290
 22608              	.LBB11276:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 22609              		.loc 19 658 19 is_stmt 0 view .LVU5291
 22610 0a8e 70A8     		add	r0, sp, #448
 22611              	.LVL1315:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 22612              		.loc 19 658 19 view .LVU5292
 22613 0a90 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 22614              	.LVL1316:
 22615              	.LBB11277:
 22616              	.LBI11277:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 22617              		.loc 19 150 14 is_stmt 1 view .LVU5293
 22618              	.LBB11278:
 22619              	.LBI11278:
 22620              		.loc 21 162 7 view .LVU5294
 22621              	.LBB11279:
 22622              	.LBI11279:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22623              		.loc 22 89 7 view .LVU5295
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22624              		.loc 22 89 7 is_stmt 0 view .LVU5296
 22625              	.LBE11279:
 22626              	.LBE11278:
 22627              	.LBE11277:
 22628              	.LBE11276:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 22629              		.loc 19 657 7 is_stmt 1 view .LVU5297
 22630              	.LBB11286:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 22631              		.loc 19 658 19 is_stmt 0 view .LVU5298
 22632 0a94 6AA8     		add	r0, sp, #424
 22633              	.LVL1317:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 22634              		.loc 19 658 19 view .LVU5299
 22635 0a96 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 22636              	.LVL1318:
 22637              	.LBB11284:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 22638              		.loc 19 150 14 is_stmt 1 view .LVU5300
 22639              	.LBB11282:
 22640              		.loc 21 162 7 view .LVU5301
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 823


 22641              	.LBB11280:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22642              		.loc 22 89 7 view .LVU5302
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22643              		.loc 22 89 7 is_stmt 0 view .LVU5303
 22644              	.LBE11280:
 22645              	.LBE11282:
 22646              	.LBE11284:
 22647              	.LBE11286:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 22648              		.loc 19 657 7 is_stmt 1 view .LVU5304
 22649              	.LBB11287:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 22650              		.loc 19 658 19 is_stmt 0 view .LVU5305
 22651 0a9a 2846     		mov	r0, r5
 22652 0a9c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 22653              	.LVL1319:
 22654              	.LBB11285:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 22655              		.loc 19 150 14 is_stmt 1 view .LVU5306
 22656              	.LBB11283:
 22657              		.loc 21 162 7 view .LVU5307
 22658              	.LBB11281:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22659              		.loc 22 89 7 view .LVU5308
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22660              		.loc 22 89 7 is_stmt 0 view .LVU5309
 22661              	.LBE11281:
 22662              	.LBE11283:
 22663              	.LBE11285:
 22664              	.LBE11287:
 22665              	.LBE11275:
 22666              	.LBB11288:
 22667              	.LBI11288:
 22668              		.loc 21 162 7 is_stmt 1 view .LVU5310
 22669              	.LBB11289:
 22670              	.LBI11289:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22671              		.loc 22 89 7 view .LVU5311
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22672              		.loc 22 89 7 is_stmt 0 view .LVU5312
 22673              	.LBE11289:
 22674              	.LBE11288:
 22675              	.LBB11290:
 22676              	.LBI11290:
 22677              		.loc 21 162 7 is_stmt 1 view .LVU5313
 22678              	.LBB11291:
 22679              	.LBI11291:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22680              		.loc 22 89 7 view .LVU5314
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22681              		.loc 22 89 7 is_stmt 0 view .LVU5315
 22682              	.LBE11291:
 22683              	.LBE11290:
 22684              	.LBB11292:
 22685              	.LBI11292:
 22686              		.loc 21 162 7 is_stmt 1 view .LVU5316
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 824


 22687              	.LBB11293:
 22688              	.LBI11293:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22689              		.loc 22 89 7 view .LVU5317
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22690              		.loc 22 89 7 is_stmt 0 view .LVU5318
 22691              	.LBE11293:
 22692              	.LBE11292:
  67:Jellybeans.cpp **** const std::vector<std::string> allOctaves {
 22693              		.loc 14 67 32 view .LVU5319
 22694 0aa0 104A     		ldr	r2, .L818
 22695 0aa2 1849     		ldr	r1, .L818+32
 22696 0aa4 06F54875 		add	r5, r6, #800
 22697 0aa8 4348     		ldr	r0, .L818+212
 22698 0aaa FFF7FEFF 		bl	__aeabi_atexit
 22699              	.LVL1320:
 22700              	.LBB11294:
 22701              	.LBI11294:
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
 22702              		.loc 24 94 12 is_stmt 1 view .LVU5320
 22703              	.LBB11295:
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
 22704              		.loc 24 94 12 view .LVU5321
 22705              	.L779:
 22706 0aae 2046     		mov	r0, r4
 22707 0ab0 5034     		adds	r4, r4, #80
 22708 0ab2 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1Ev
 22709              	.LVL1321:
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
 22710              		.loc 24 94 12 view .LVU5322
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
 22711              		.loc 24 94 12 view .LVU5323
 22712 0ab6 AC42     		cmp	r4, r5
 22713 0ab8 F9D1     		bne	.L779
 22714              	.LVL1322:
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
 22715              		.loc 24 94 12 is_stmt 0 view .LVU5324
 22716              	.LBE11295:
 22717              	.LBE11294:
  81:Jellybeans.cpp **** std::array<MenuItem, 10> menuItems;
 22718              		.loc 14 81 26 view .LVU5325
 22719 0aba 0A4A     		ldr	r2, .L818
 22720 0abc 3F49     		ldr	r1, .L818+216
 22721 0abe 3648     		ldr	r0, .L818+180
 22722 0ac0 FFF7FEFF 		bl	__aeabi_atexit
 22723              	.LVL1323:
 22724              	.LBB11296:
 22725              	.LBI11296:
 22726              		.loc 24 185 7 is_stmt 1 view .LVU5326
 22727              	.LBB11297:
 22728              	.LBI11297:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 22729              		.loc 24 55 7 view .LVU5327
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 22730              		.loc 24 55 7 is_stmt 0 view .LVU5328
 22731              	.LBE11297:
 22732              	.LBE11296:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 825


  85:Jellybeans.cpp **** MenuItem *mDivision  = &menuItems[1];
 22733              		.loc 14 85 11 view .LVU5329
 22734 0ac4 3E4B     		ldr	r3, .L818+220
 22735 0ac6 3F4A     		ldr	r2, .L818+224
  86:Jellybeans.cpp **** MenuItem *mVoicing   = &menuItems[2];
 22736              		.loc 14 86 11 view .LVU5330
 22737 0ac8 03F15004 		add	r4, r3, #80
  88:Jellybeans.cpp **** MenuItem *mTonic     = &menuItems[4];
 22738              		.loc 14 88 11 view .LVU5331
 22739 0acc 03F1F005 		add	r5, r3, #240
  85:Jellybeans.cpp **** MenuItem *mDivision  = &menuItems[1];
 22740              		.loc 14 85 11 view .LVU5332
 22741 0ad0 1360     		str	r3, [r2]
  84:Jellybeans.cpp **** MenuItem *mPattern   = &menuItems[0];
 22742              		.loc 14 84 11 view .LVU5333
 22743 0ad2 3D49     		ldr	r1, .L818+228
  86:Jellybeans.cpp **** MenuItem *mVoicing   = &menuItems[2];
 22744              		.loc 14 86 11 view .LVU5334
 22745 0ad4 3D48     		ldr	r0, .L818+232
  88:Jellybeans.cpp **** MenuItem *mTonic     = &menuItems[4];
 22746              		.loc 14 88 11 view .LVU5335
 22747 0ad6 3E4A     		ldr	r2, .L818+236
  86:Jellybeans.cpp **** MenuItem *mVoicing   = &menuItems[2];
 22748              		.loc 14 86 11 view .LVU5336
 22749 0ad8 0460     		str	r4, [r0]
  87:Jellybeans.cpp **** MenuItem *mInversion = &menuItems[3];
 22750              		.loc 14 87 11 view .LVU5337
 22751 0ada 03F1A004 		add	r4, r3, #160
  88:Jellybeans.cpp **** MenuItem *mTonic     = &menuItems[4];
 22752              		.loc 14 88 11 view .LVU5338
 22753 0ade 1560     		str	r5, [r2]
 22754 0ae0 78E0     		b	.L819
 22755              	.L820:
 22756 0ae2 00BF     		.align	2
 22757              	.L818:
 22758 0ae4 00000000 		.word	__dso_handle
 22759 0ae8 00000000 		.word	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ES
 22760 0aec 00000000 		.word	.LANCHOR26
 22761 0af0 58010000 		.word	.LC97
 22762 0af4 60010000 		.word	.LC98
 22763 0af8 68010000 		.word	.LC99
 22764 0afc 70010000 		.word	.LC100
 22765 0b00 00000000 		.word	.LANCHOR17
 22766 0b04 00000000 		.word	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 22767 0b08 78010000 		.word	.LC101
 22768 0b0c 7C010000 		.word	.LC102
 22769 0b10 80010000 		.word	.LC103
 22770 0b14 84010000 		.word	.LC104
 22771 0b18 88010000 		.word	.LC105
 22772 0b1c 00000000 		.word	.LANCHOR15
 22773 0b20 8C010000 		.word	.LC106
 22774 0b24 94010000 		.word	.LC107
 22775 0b28 9C010000 		.word	.LC108
 22776 0b2c A0010000 		.word	.LC109
 22777 0b30 A8010000 		.word	.LC110
 22778 0b34 B0010000 		.word	.LC111
 22779 0b38 B8010000 		.word	.LC112
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 826


 22780 0b3c BC010000 		.word	.LC113
 22781 0b40 C4010000 		.word	.LC114
 22782 0b44 CC010000 		.word	.LC115
 22783 0b48 D4010000 		.word	.LC116
 22784 0b4c DC010000 		.word	.LC117
 22785 0b50 00000000 		.word	.LANCHOR16
 22786 0b54 E4010000 		.word	.LC118
 22787 0b58 E8010000 		.word	.LC119
 22788 0b5c F0010000 		.word	.LC120
 22789 0b60 F8010000 		.word	.LC121
 22790 0b64 00020000 		.word	.LC122
 22791 0b68 00000000 		.word	.LANCHOR14
 22792 0b6c 08020000 		.word	.LC123
 22793 0b70 10020000 		.word	.LC124
 22794 0b74 18020000 		.word	.LC125
 22795 0b78 20020000 		.word	.LC126
 22796 0b7c 00000000 		.word	.LANCHOR20
 22797 0b80 00000000 		.word	patch
 22798 0b84 01070106 		.word	100730625
 22799 0b88 80707FF0 		.word	-260083584
 22800 0b8c 00000000 		.word	_ZN5daisy10DaisyPatchD1Ev
 22801 0b90 0FF80700 		.word	522255
 22802 0b94 08000000 		.word	_ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE+8
 22803 0b98 00000000 		.word	.LANCHOR2
 22804 0b9c 00000000 		.word	.LANCHOR12
 22805 0ba0 00000000 		.word	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 22806 0ba4 00000000 		.word	Font_7x10
 22807 0ba8 00000000 		.word	.LANCHOR11
 22808 0bac 28020000 		.word	.LC127
 22809 0bb0 2C020000 		.word	.LC128
 22810 0bb4 30020000 		.word	.LC129
 22811 0bb8 00000000 		.word	.LANCHOR21
 22812 0bbc 00000000 		.word	_ZNSt5arrayIN10jellybeans8MenuItemELj10EED1Ev
 22813 0bc0 50000000 		.word	.LANCHOR2+80
 22814 0bc4 00000000 		.word	.LANCHOR28
 22815 0bc8 00000000 		.word	.LANCHOR27
 22816 0bcc 00000000 		.word	.LANCHOR29
 22817 0bd0 00000000 		.word	.LANCHOR31
 22818              	.L819:
  84:Jellybeans.cpp **** MenuItem *mPattern   = &menuItems[0];
 22819              		.loc 14 84 11 view .LVU5339
 22820 0bd4 0E60     		str	r6, [r1]
 22821              	.LVL1324:
 22822              	.LBB11298:
 22823              	.LBI11298:
 22824              		.loc 24 185 7 is_stmt 1 view .LVU5340
 22825              	.LBB11299:
 22826              	.LBI11299:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 22827              		.loc 24 55 7 view .LVU5341
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 22828              		.loc 24 55 7 is_stmt 0 view .LVU5342
 22829              	.LBE11299:
 22830              	.LBE11298:
 22831              	.LBB11300:
 22832              	.LBI11300:
 22833              		.loc 24 185 7 is_stmt 1 view .LVU5343
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 827


 22834              	.LBB11301:
 22835              	.LBI11301:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 22836              		.loc 24 55 7 view .LVU5344
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 22837              		.loc 24 55 7 is_stmt 0 view .LVU5345
 22838              	.LBE11301:
 22839              	.LBE11300:
 22840              	.LBB11302:
 22841              	.LBI11302:
 22842              		.loc 24 185 7 is_stmt 1 view .LVU5346
 22843              	.LBB11303:
 22844              	.LBI11303:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 22845              		.loc 24 55 7 view .LVU5347
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 22846              		.loc 24 55 7 is_stmt 0 view .LVU5348
 22847              	.LBE11303:
 22848              	.LBE11302:
  89:Jellybeans.cpp **** MenuItem *mScale     = &menuItems[5];
 22849              		.loc 14 89 11 view .LVU5349
 22850 0bd6 03F5A071 		add	r1, r3, #320
  87:Jellybeans.cpp **** MenuItem *mInversion = &menuItems[3];
 22851              		.loc 14 87 11 view .LVU5350
 22852 0bda 2248     		ldr	r0, .L821
  89:Jellybeans.cpp **** MenuItem *mScale     = &menuItems[5];
 22853              		.loc 14 89 11 view .LVU5351
 22854 0bdc 224A     		ldr	r2, .L821+4
  87:Jellybeans.cpp **** MenuItem *mInversion = &menuItems[3];
 22855              		.loc 14 87 11 view .LVU5352
 22856 0bde 0460     		str	r4, [r0]
 22857              	.LVL1325:
 22858              	.LBB11304:
 22859              	.LBI11304:
 22860              		.loc 24 185 7 is_stmt 1 view .LVU5353
 22861              	.LBB11305:
 22862              	.LBI11305:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 22863              		.loc 24 55 7 view .LVU5354
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 22864              		.loc 24 55 7 is_stmt 0 view .LVU5355
 22865              	.LBE11305:
 22866              	.LBE11304:
 22867              	.LBB11306:
 22868              	.LBI11306:
 22869              		.loc 24 185 7 is_stmt 1 view .LVU5356
 22870              	.LBB11307:
 22871              	.LBI11307:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 22872              		.loc 24 55 7 view .LVU5357
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 22873              		.loc 24 55 7 is_stmt 0 view .LVU5358
 22874              	.LBE11307:
 22875              	.LBE11306:
  90:Jellybeans.cpp **** MenuItem *mRhythm    = &menuItems[6];
 22876              		.loc 14 90 11 view .LVU5359
 22877 0be0 03F5C870 		add	r0, r3, #400
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 828


  89:Jellybeans.cpp **** MenuItem *mScale     = &menuItems[5];
 22878              		.loc 14 89 11 view .LVU5360
 22879 0be4 1160     		str	r1, [r2]
 22880              	.LVL1326:
 22881              	.LBB11308:
 22882              	.LBI11308:
 22883              		.loc 24 185 7 is_stmt 1 view .LVU5361
 22884              	.LBB11309:
 22885              	.LBI11309:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 22886              		.loc 24 55 7 view .LVU5362
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 22887              		.loc 24 55 7 is_stmt 0 view .LVU5363
 22888              	.LBE11309:
 22889              	.LBE11308:
  91:Jellybeans.cpp **** MenuItem *mOctRng    = &menuItems[7];
 22890              		.loc 14 91 11 view .LVU5364
 22891 0be6 03F5F071 		add	r1, r3, #480
  90:Jellybeans.cpp **** MenuItem *mRhythm    = &menuItems[6];
 22892              		.loc 14 90 11 view .LVU5365
 22893 0bea 204A     		ldr	r2, .L821+8
  92:Jellybeans.cpp **** MenuItem *mOct       = &menuItems[8];
 22894              		.loc 14 92 11 view .LVU5366
 22895 0bec 03F50C74 		add	r4, r3, #560
  93:Jellybeans.cpp **** MenuItem *mClockDiv  = &menuItems[9];
 22896              		.loc 14 93 11 view .LVU5367
 22897 0bf0 03F52073 		add	r3, r3, #640
  90:Jellybeans.cpp **** MenuItem *mRhythm    = &menuItems[6];
 22898              		.loc 14 90 11 view .LVU5368
 22899 0bf4 1060     		str	r0, [r2]
 22900              	.LVL1327:
 22901              	.LBB11310:
 22902              	.LBI11310:
 22903              		.loc 24 185 7 is_stmt 1 view .LVU5369
 22904              	.LBB11311:
 22905              	.LBI11311:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 22906              		.loc 24 55 7 view .LVU5370
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 22907              		.loc 24 55 7 is_stmt 0 view .LVU5371
 22908              	.LBE11311:
 22909              	.LBE11310:
  91:Jellybeans.cpp **** MenuItem *mOctRng    = &menuItems[7];
 22910              		.loc 14 91 11 view .LVU5372
 22911 0bf6 1E4A     		ldr	r2, .L821+12
  92:Jellybeans.cpp **** MenuItem *mOct       = &menuItems[8];
 22912              		.loc 14 92 11 view .LVU5373
 22913 0bf8 1E48     		ldr	r0, .L821+16
  91:Jellybeans.cpp **** MenuItem *mOctRng    = &menuItems[7];
 22914              		.loc 14 91 11 view .LVU5374
 22915 0bfa 1160     		str	r1, [r2]
 22916              	.LVL1328:
 22917              	.LBB11312:
 22918              	.LBI11312:
 22919              		.loc 24 185 7 is_stmt 1 view .LVU5375
 22920              	.LBB11313:
 22921              	.LBI11313:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 829


  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 22922              		.loc 24 55 7 view .LVU5376
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 22923              		.loc 24 55 7 is_stmt 0 view .LVU5377
 22924              	.LBE11313:
 22925              	.LBE11312:
  93:Jellybeans.cpp **** MenuItem *mClockDiv  = &menuItems[9];
 22926              		.loc 14 93 11 view .LVU5378
 22927 0bfc 1E49     		ldr	r1, .L821+20
  92:Jellybeans.cpp **** MenuItem *mOct       = &menuItems[8];
 22928              		.loc 14 92 11 view .LVU5379
 22929 0bfe 0460     		str	r4, [r0]
 22930              	.LVL1329:
 22931              	.LBB11314:
 22932              	.LBI11314:
 22933              		.loc 24 185 7 is_stmt 1 view .LVU5380
 22934              	.LBB11315:
 22935              	.LBI11315:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 22936              		.loc 24 55 7 view .LVU5381
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 22937              		.loc 24 55 7 is_stmt 0 view .LVU5382
 22938              	.LBE11315:
 22939              	.LBE11314:
  93:Jellybeans.cpp **** MenuItem *mClockDiv  = &menuItems[9];
 22940              		.loc 14 93 11 view .LVU5383
 22941 0c00 0B60     		str	r3, [r1]
 22942              	.LVL1330:
 22943              	.LBB11316:
 22944              	.LBI11316:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 22945              		.loc 1 25 5 is_stmt 1 view .LVU5384
 22946              	.LBB11317:
 22947              	.LBB11318:
 22948              	.LBI11318:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 22949              		.loc 2 21 5 view .LVU5385
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 22950              		.loc 2 21 5 is_stmt 0 view .LVU5386
 22951              	.LBE11318:
 22952              	.LBE11317:
 22953              	.LBE11316:
  96:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
 22954              		.loc 14 96 11 view .LVU5387
 22955 0c02 1E4A     		ldr	r2, .L821+24
 22956 0c04 1E49     		ldr	r1, .L821+28
 22957 0c06 1F48     		ldr	r0, .L821+32
 22958 0c08 FFF7FEFF 		bl	__aeabi_atexit
 22959              	.LVL1331:
 22960              	.LBB11319:
 22961              	.LBI11319:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 22962              		.loc 1 25 5 is_stmt 1 view .LVU5388
 22963              	.LBB11320:
 22964              	.LBB11321:
 22965              	.LBI11321:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 830


 22966              		.loc 2 21 5 view .LVU5389
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 22967              		.loc 2 21 5 is_stmt 0 view .LVU5390
 22968              	.LBE11321:
 22969              	.LBE11320:
 22970              	.LBE11319:
  96:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
 22971              		.loc 14 96 25 view .LVU5391
 22972 0c0c 1B4A     		ldr	r2, .L821+24
 22973 0c0e 1C49     		ldr	r1, .L821+28
 22974 0c10 1D48     		ldr	r0, .L821+36
 22975 0c12 FFF7FEFF 		bl	__aeabi_atexit
 22976              	.LVL1332:
 22977              	.LBB11322:
 22978              	.LBI11322:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 22979              		.loc 1 25 5 is_stmt 1 view .LVU5392
 22980              	.LBB11323:
 22981              	.LBB11324:
 22982              	.LBI11324:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 22983              		.loc 2 21 5 view .LVU5393
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 22984              		.loc 2 21 5 is_stmt 0 view .LVU5394
 22985              	.LBE11324:
 22986              	.LBE11323:
 22987              	.LBE11322:
  96:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
 22988              		.loc 14 96 40 view .LVU5395
 22989 0c16 194A     		ldr	r2, .L821+24
 22990 0c18 1949     		ldr	r1, .L821+28
 22991 0c1a 1C48     		ldr	r0, .L821+40
 22992 0c1c FFF7FEFF 		bl	__aeabi_atexit
 22993              	.LVL1333:
 22994              	.LBB11325:
 22995              	.LBI11325:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 22996              		.loc 1 25 5 is_stmt 1 view .LVU5396
 22997              	.LBB11326:
 22998              	.LBB11327:
 22999              	.LBI11327:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 23000              		.loc 2 21 5 view .LVU5397
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 23001              		.loc 2 21 5 is_stmt 0 view .LVU5398
 23002              	.LBE11327:
 23003              	.LBE11326:
 23004              	.LBE11325:
  96:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
 23005              		.loc 14 96 54 view .LVU5399
 23006 0c20 164A     		ldr	r2, .L821+24
 23007 0c22 1749     		ldr	r1, .L821+28
 23008 0c24 1A48     		ldr	r0, .L821+44
 23009              		.loc 14 276 1 view .LVU5400
 23010 0c26 0DF52D7D 		add	sp, sp, #692
 23011              		.cfi_remember_state
 23012              		.cfi_def_cfa_offset 36
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 831


 23013              		@ sp needed
 23014 0c2a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 23015              		.cfi_restore 14
 23016              		.cfi_restore 11
 23017              		.cfi_restore 10
 23018              		.cfi_restore 9
 23019              		.cfi_restore 8
 23020              		.cfi_restore 7
 23021              		.cfi_restore 6
 23022              		.cfi_restore 5
 23023              		.cfi_restore 4
 23024              		.cfi_def_cfa_offset 0
  96:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
 23025              		.loc 14 96 54 view .LVU5401
 23026 0c2e FFF7FEBF 		b	__aeabi_atexit
 23027              	.LVL1334:
 23028              	.L809:
 23029              		.cfi_restore_state
 23030              	.LBB11328:
 23031              	.LBB10895:
 23032              	.LBB10892:
 23033              	.LBB10889:
 23034              	.LBB10882:
 23035              	.LBB10878:
 23036              	.LBB10874:
 23037              	.LBB10861:
 23038              	.LBI10861:
 23039              		.loc 40 385 7 is_stmt 1 view .LVU5402
 23040              	.LBB10862:
 23041              	.LBI10862:
 23042              		.loc 19 6277 5 view .LVU5403
 23043 0c32 56F8207C 		ldr	r7, [r6, #-32]
 23044 0c36 D9F81450 		ldr	r5, [r9, #20]
 23045              	.LBB10863:
 23046              	.LBB10864:
 23047              	.LBI10864:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 23048              		.loc 19 2852 7 view .LVU5404
 23049              	.LVL1335:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 23050              		.loc 19 2852 7 is_stmt 0 view .LVU5405
 23051 0c3a 3A46     		mov	r2, r7
 23052 0c3c AF42     		cmp	r7, r5
 23053 0c3e 28BF     		it	cs
 23054 0c40 2A46     		movcs	r2, r5
 23055              	.LVL1336:
 23056              	.LBB10865:
 23057              	.LBB10866:
 23058              	.LBI10866:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 23059              		.loc 20 337 7 is_stmt 1 view .LVU5406
 23060              	.LBB10867:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 23061              		.loc 20 339 2 view .LVU5407
 23062 0c42 32B1     		cbz	r2, .L762
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 23063              		.loc 20 347 2 view .LVU5408
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 832


 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 23064              		.loc 20 347 25 is_stmt 0 view .LVU5409
 23065 0c44 D9F81010 		ldr	r1, [r9, #16]
 23066 0c48 56F8240C 		ldr	r0, [r6, #-36]
 23067 0c4c FFF7FEFF 		bl	memcmp
 23068              	.LVL1337:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 23069              		.loc 20 347 25 view .LVU5410
 23070              	.LBE10867:
 23071              	.LBE10866:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 23072              		.loc 19 2859 2 view .LVU5411
 23073 0c50 00B9     		cbnz	r0, .L763
 23074              	.LVL1338:
 23075              	.L762:
 23076              	.LBB10868:
 23077              	.LBI10868:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 23078              		.loc 19 401 7 is_stmt 1 view .LVU5412
 23079              	.LBB10869:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 23080              		.loc 19 403 51 is_stmt 0 view .LVU5413
 23081 0c52 781B     		subs	r0, r7, r5
 23082              	.LVL1339:
 23083              	.L763:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 23084              		.loc 19 403 51 view .LVU5414
 23085              	.LBE10869:
 23086              	.LBE10868:
 23087              	.LBE10865:
 23088              	.LBE10864:
 23089              	.LBE10863:
 23090              	.LBE10862:
 23091              	.LBE10861:
1813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 							_S_key(__p)));
 23092              		.loc 29 1813 10 view .LVU5415
 23093 0c54 4FEAD078 		lsr	r8, r0, #31
 23094 0c58 76E5     		b	.L761
 23095              	.LVL1340:
 23096              	.L807:
 23097              	.LBB10870:
 23098              	.LBB10854:
 23099              	.LBB10849:
 23100              	.LBB10844:
 23101              	.LBB10835:
 23102              	.LBB10828:
 23103              	.LBB10824:
 23104              	.LBB10820:
 23105              	.LBB10727:
 23106              	.LBB10724:
 23107              	.LBB10657:
 23108              	.LBB10641:
 23109              	.LBB10635:
 23110              	.LBB10632:
 23111              	.LBB10630:
 23112              	.LBB10629:
 23113              	.LBB10628:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 833


 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23114              		.loc 22 106 26 view .LVU5416
 23115 0c5a FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 23116              	.LVL1341:
 23117              	.L810:
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23118              		.loc 22 106 26 view .LVU5417
 23119              	.LBE10628:
 23120              	.LBE10629:
 23121              	.LBE10630:
 23122              	.LBE10632:
 23123              	.LBE10635:
 23124              	.LBE10641:
 23125              	.LBE10657:
 23126              	.LBE10724:
 23127              	.LBE10727:
 23128              	.LBE10820:
 23129              	.LBB10821:
 23130              	.LBB10817:
 23131              	.LBB10815:
 23132              	.LBB10813:
 23133              	.LBB10811:
 23134              	.LBB10809:
 23135              	.LBB10807:
 23136              	.LBB10805:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 23137              		.loc 23 212 28 view .LVU5418
 23138 0c5e 0D48     		ldr	r0, .L821+48
 23139 0c60 FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 23140              	.LVL1342:
 23141              	.L822:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 23142              		.loc 23 212 28 view .LVU5419
 23143              		.align	2
 23144              	.L821:
 23145 0c64 00000000 		.word	.LANCHOR30
 23146 0c68 00000000 		.word	.LANCHOR32
 23147 0c6c 00000000 		.word	.LANCHOR33
 23148 0c70 00000000 		.word	.LANCHOR34
 23149 0c74 00000000 		.word	.LANCHOR35
 23150 0c78 00000000 		.word	.LANCHOR36
 23151 0c7c 00000000 		.word	__dso_handle
 23152 0c80 00000000 		.word	_ZN5daisy9ParameterD1Ev
 23153 0c84 00000000 		.word	.LANCHOR0
 23154 0c88 00000000 		.word	.LANCHOR3
 23155 0c8c 00000000 		.word	.LANCHOR5
 23156 0c90 00000000 		.word	.LANCHOR7
 23157 0c94 00000000 		.word	.LC9
 23158              	.LBE10805:
 23159              	.LBE10807:
 23160              	.LBE10809:
 23161              	.LBE10811:
 23162              	.LBE10813:
 23163              	.LBE10815:
 23164              	.LBE10817:
 23165              	.LBE10821:
 23166              	.LBE10824:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 834


 23167              	.LBE10828:
 23168              	.LBE10835:
 23169              	.LBE10844:
 23170              	.LBE10849:
 23171              	.LBE10854:
 23172              	.LBE10870:
 23173              	.LBE10874:
 23174              	.LBE10878:
 23175              	.LBE10882:
 23176              	.LBE10889:
 23177              	.LBE10892:
 23178              	.LBE10895:
 23179              	.LBE11328:
 23180              		.cfi_endproc
 23181              	.LFE6221:
 23183              		.section	.text.startup._GLOBAL__sub_I_patch,"ax",%progbits
 23184              		.align	1
 23185              		.p2align 2,,3
 23186              		.syntax unified
 23187              		.thumb
 23188              		.thumb_func
 23189              		.fpu fpv5-d16
 23191              	_GLOBAL__sub_I_patch:
 23192              	.LFB6197:
 23193              		.loc 14 276 1 is_stmt 1 view -0
 23194              		.cfi_startproc
 23195              		@ args = 0, pretend = 0, frame = 0
 23196              		@ frame_needed = 0, uses_anonymous_args = 0
 23197              		@ link register save eliminated.
 23198              		.loc 14 276 1 is_stmt 0 view .LVU5421
 23199 0000 FFF7FEBF 		b	_Z41__static_initialization_and_destruction_0ii.constprop.0
 23200              	.LVL1343:
 23201              		.cfi_endproc
 23202              	.LFE6197:
 23204              		.section	.init_array,"aw",%init_array
 23205              		.align	2
 23206 0000 00000000 		.word	_GLOBAL__sub_I_patch(target1)
 23207              		.weak	_ZTSFvvE
 23208              		.section	.rodata._ZTSFvvE,"aG",%progbits,_ZTSFvvE,comdat
 23209              		.align	2
 23212              	_ZTSFvvE:
 23213 0000 46767645 		.ascii	"FvvE\000"
 23213      00
 23214              		.weak	_ZTIFvvE
 23215              		.section	.rodata._ZTIFvvE,"aG",%progbits,_ZTIFvvE,comdat
 23216              		.align	2
 23219              	_ZTIFvvE:
 23220 0000 08000000 		.word	_ZTVN10__cxxabiv120__function_type_infoE+8
 23221 0004 00000000 		.word	_ZTSFvvE
 23222              		.weak	_ZTSN5daisy21OneBitGraphicsDisplayE
 23223              		.section	.rodata._ZTSN5daisy21OneBitGraphicsDisplayE,"aG",%progbits,_ZTSN5daisy21OneBitGraphicsDis
 23224              		.align	2
 23227              	_ZTSN5daisy21OneBitGraphicsDisplayE:
 23228 0000 4E356461 		.ascii	"N5daisy21OneBitGraphicsDisplayE\000"
 23228      69737932 
 23228      314F6E65 
 23228      42697447 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 835


 23228      72617068 
 23229              		.weak	_ZTIN5daisy21OneBitGraphicsDisplayE
 23230              		.section	.rodata._ZTIN5daisy21OneBitGraphicsDisplayE,"aG",%progbits,_ZTIN5daisy21OneBitGraphicsDis
 23231              		.align	2
 23234              	_ZTIN5daisy21OneBitGraphicsDisplayE:
 23235 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 23236 0004 00000000 		.word	_ZTSN5daisy21OneBitGraphicsDisplayE
 23237              		.weak	_ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24S
 23238              		.section	.rodata._ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128E
 23239              		.align	2
 23242              	_ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4
 23243 0000 4E356461 		.ascii	"N5daisy25OneBitGraphicsDisplayImplINS_11OledDisplay"
 23243      69737932 
 23243      354F6E65 
 23243      42697447 
 23243      72617068 
 23244 0033 494E535F 		.ascii	"INS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpi"
 23244      31335353 
 23244      44313330 
 23244      78447269 
 23244      76657249 
 23245 0066 5472616E 		.ascii	"TransportEEEEEEE\000"
 23245      73706F72 
 23245      74454545 
 23245      45454545 
 23245      00
 23246              		.weak	_ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24S
 23247              		.section	.rodata._ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128E
 23248              		.align	2
 23251              	_ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4
 23252 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 23253 0004 00000000 		.word	_ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24S
 23254 0008 00000000 		.word	_ZTIN5daisy21OneBitGraphicsDisplayE
 23255              		.weak	_ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 23256              		.section	.rodata._ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransp
 23257              		.align	2
 23260              	_ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:
 23261 0000 4E356461 		.ascii	"N5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64E"
 23261      69737931 
 23261      314F6C65 
 23261      64446973 
 23261      706C6179 
 23262 0033 4E535F32 		.ascii	"NS_24SSD130x4WireSpiTransportEEEEE\000"
 23262      34535344 
 23262      31333078 
 23262      34576972 
 23262      65537069 
 23263              		.weak	_ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 23264              		.section	.rodata._ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransp
 23265              		.align	2
 23268              	_ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:
 23269 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 23270 0004 00000000 		.word	_ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 23271 0008 00000000 		.word	_ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24S
 23272              		.weak	_ZTSPFvvE
 23273              		.section	.rodata._ZTSPFvvE,"aG",%progbits,_ZTSPFvvE,comdat
 23274              		.align	2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 836


 23277              	_ZTSPFvvE:
 23278 0000 50467676 		.ascii	"PFvvE\000"
 23278      4500
 23279              		.weak	_ZTIPFvvE
 23280              		.section	.rodata._ZTIPFvvE,"aG",%progbits,_ZTIPFvvE,comdat
 23281              		.align	2
 23284              	_ZTIPFvvE:
 23285 0000 08000000 		.word	_ZTVN10__cxxabiv119__pointer_type_infoE+8
 23286 0004 00000000 		.word	_ZTSPFvvE
 23287 0008 00000000 		.word	0
 23288 000c 00000000 		.word	_ZTIFvvE
 23289              		.weak	_ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 23290              		.section	.rodata._ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransp
 23291              		.align	2
 23294              	_ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:
 23295 0000 00000000 		.word	0
 23296 0004 00000000 		.word	_ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 23297 0008 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED1Ev
 23298 000c 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev
 23299 0010 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 23300 0014 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 23301 0018 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillE
 23302 001c 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawP
 23303 0020 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 23304 0024 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 23305 0028 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 23306 002c 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 23307 0030 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 23308 0034 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 23309 0038 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Updat
 23310              		.global	inversionCurCvVal
 23311              		.global	voicingCurCvVal
 23312              		.global	divisionCurCvVal
 23313              		.global	patternCurCvVal
 23314              		.global	inversionParam
 23315              		.global	voicingParam
 23316              		.global	divisionParam
 23317              		.global	patternParam
 23318              		.global	mClockDiv
 23319              		.global	mOct
 23320              		.global	mOctRng
 23321              		.global	mRhythm
 23322              		.global	mScale
 23323              		.global	mTonic
 23324              		.global	mInversion
 23325              		.global	mVoicing
 23326              		.global	mDivision
 23327              		.global	mPattern
 23328              		.global	menuItems
 23329              		.global	myArp
 23330              		.global	isEditing
 23331              		.global	menuPos
 23332              		.global	trigOut
 23333              		.global	arpNoteDacOutput1
 23334              		.global	_Z11debugStringB5cxx11
 23335              		.global	patch
 23336              		.section	.rodata
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 837


 23337              		.align	2
 23338              		.set	.LANCHOR25,. + 0
 23339              	.LC0:
 23340 0000 00000000 		.word	0
 23341 0004 02000000 		.word	2
 23342 0008 04000000 		.word	4
 23343 000c 05000000 		.word	5
 23344 0010 07000000 		.word	7
 23345 0014 09000000 		.word	9
 23346 0018 0B000000 		.word	11
 23347              	.LC1:
 23348 001c 00000000 		.word	0
 23349 0020 02000000 		.word	2
 23350 0024 03000000 		.word	3
 23351 0028 05000000 		.word	5
 23352 002c 07000000 		.word	7
 23353 0030 08000000 		.word	8
 23354 0034 0A000000 		.word	10
 23355              	.LC2:
 23356 0038 00000000 		.word	0
 23357 003c 02000000 		.word	2
 23358 0040 03000000 		.word	3
 23359 0044 05000000 		.word	5
 23360 0048 07000000 		.word	7
 23361 004c 09000000 		.word	9
 23362 0050 0A000000 		.word	10
 23363              	.LC3:
 23364 0054 00000000 		.word	0
 23365 0058 01000000 		.word	1
 23366 005c 03000000 		.word	3
 23367 0060 05000000 		.word	5
 23368 0064 07000000 		.word	7
 23369 0068 09000000 		.word	9
 23370 006c 0A000000 		.word	10
 23371              	.LC4:
 23372 0070 00000000 		.word	0
 23373 0074 02000000 		.word	2
 23374 0078 04000000 		.word	4
 23375 007c 06000000 		.word	6
 23376 0080 07000000 		.word	7
 23377 0084 09000000 		.word	9
 23378 0088 0B000000 		.word	11
 23379              	.LC5:
 23380 008c 00000000 		.word	0
 23381 0090 02000000 		.word	2
 23382 0094 04000000 		.word	4
 23383 0098 05000000 		.word	5
 23384 009c 07000000 		.word	7
 23385 00a0 09000000 		.word	9
 23386 00a4 0A000000 		.word	10
 23387              	.LC6:
 23388 00a8 00000000 		.word	0
 23389 00ac 01000000 		.word	1
 23390 00b0 03000000 		.word	3
 23391 00b4 05000000 		.word	5
 23392 00b8 06000000 		.word	6
 23393 00bc 08000000 		.word	8
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 838


 23394 00c0 0A000000 		.word	10
 23395              		.section	.bss._Z11debugStringB5cxx11,"aw",%nobits
 23396              		.align	2
 23397              		.set	.LANCHOR12,. + 0
 23400              	_Z11debugStringB5cxx11:
 23401 0000 00000000 		.space	24
 23401      00000000 
 23401      00000000 
 23401      00000000 
 23401      00000000 
 23402              		.section	.bss._ZL10allOctaves,"aw",%nobits
 23403              		.align	2
 23404              		.set	.LANCHOR21,. + 0
 23407              	_ZL10allOctaves:
 23408 0000 00000000 		.space	12
 23408      00000000 
 23408      00000000 
 23409              		.section	.bss._ZL4font,"aw",%nobits
 23410              		.align	2
 23411              		.set	.LANCHOR11,. + 0
 23414              	_ZL4font:
 23415 0000 00000000 		.space	8
 23415      00000000 
 23416              		.section	.bss._ZN10jellybeansL10arpRhythmsE,"aw",%nobits
 23417              		.align	2
 23418              		.set	.LANCHOR20,. + 0
 23421              	_ZN10jellybeansL10arpRhythmsE:
 23422 0000 00000000 		.space	12
 23422      00000000 
 23422      00000000 
 23423              		.section	.bss._ZN10jellybeansL11arpPatternsE,"aw",%nobits
 23424              		.align	2
 23425              		.set	.LANCHOR14,. + 0
 23428              	_ZN10jellybeansL11arpPatternsE:
 23429 0000 00000000 		.space	12
 23429      00000000 
 23429      00000000 
 23430              		.section	.bss._ZN10jellybeansL12allNotes5OctE,"aw",%nobits
 23431              		.align	2
 23432              		.set	.LANCHOR24,. + 0
 23435              	_ZN10jellybeansL12allNotes5OctE:
 23436 0000 00000000 		.space	1440
 23436      00000000 
 23436      00000000 
 23436      00000000 
 23436      00000000 
 23437              		.section	.bss._ZN10jellybeansL13allInversionsE,"aw",%nobits
 23438              		.align	2
 23439              		.set	.LANCHOR17,. + 0
 23442              	_ZN10jellybeansL13allInversionsE:
 23443 0000 00000000 		.space	12
 23443      00000000 
 23443      00000000 
 23444              		.section	.bss._ZN10jellybeansL14allClockInDivsE,"aw",%nobits
 23445              		.align	2
 23446              		.set	.LANCHOR15,. + 0
 23449              	_ZN10jellybeansL14allClockInDivsE:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 839


 23450 0000 00000000 		.space	12
 23450      00000000 
 23450      00000000 
 23451              		.section	.bss._ZN10jellybeansL15modeToSemitonesE,"aw",%nobits
 23452              		.align	2
 23453              		.set	.LANCHOR26,. + 0
 23456              	_ZN10jellybeansL15modeToSemitonesE:
 23457 0000 00000000 		.space	24
 23457      00000000 
 23457      00000000 
 23457      00000000 
 23457      00000000 
 23458              		.section	.bss._ZN10jellybeansL5modesE,"aw",%nobits
 23459              		.align	2
 23460              		.set	.LANCHOR19,. + 0
 23463              	_ZN10jellybeansL5modesE:
 23464 0000 00000000 		.space	12
 23464      00000000 
 23464      00000000 
 23465              		.section	.bss._ZN10jellybeansL8allNotesE,"aw",%nobits
 23466              		.align	2
 23467              		.set	.LANCHOR18,. + 0
 23470              	_ZN10jellybeansL8allNotesE:
 23471 0000 00000000 		.space	12
 23471      00000000 
 23471      00000000 
 23472              		.section	.bss._ZN10jellybeansL8voicingsE,"aw",%nobits
 23473              		.align	2
 23474              		.set	.LANCHOR16,. + 0
 23477              	_ZN10jellybeansL8voicingsE:
 23478 0000 00000000 		.space	12
 23478      00000000 
 23478      00000000 
 23479              		.section	.bss.arpNoteDacOutput1,"aw",%nobits
 23480              		.align	2
 23481              		.set	.LANCHOR22,. + 0
 23484              	arpNoteDacOutput1:
 23485 0000 00000000 		.space	4
 23486              		.section	.bss.divisionCurCvVal,"aw",%nobits
 23487              		.align	2
 23488              		.set	.LANCHOR4,. + 0
 23491              	divisionCurCvVal:
 23492 0000 00000000 		.space	4
 23493              		.section	.bss.divisionParam,"aw",%nobits
 23494              		.align	2
 23495              		.set	.LANCHOR3,. + 0
 23498              	divisionParam:
 23499 0000 00000000 		.space	56
 23499      00000000 
 23499      00000000 
 23499      00000000 
 23499      00000000 
 23500              		.section	.bss.inversionCurCvVal,"aw",%nobits
 23501              		.align	2
 23502              		.set	.LANCHOR8,. + 0
 23505              	inversionCurCvVal:
 23506 0000 00000000 		.space	4
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 840


 23507              		.section	.bss.inversionParam,"aw",%nobits
 23508              		.align	2
 23509              		.set	.LANCHOR7,. + 0
 23512              	inversionParam:
 23513 0000 00000000 		.space	56
 23513      00000000 
 23513      00000000 
 23513      00000000 
 23513      00000000 
 23514              		.section	.bss.isEditing,"aw",%nobits
 23515              		.set	.LANCHOR9,. + 0
 23518              	isEditing:
 23519 0000 00       		.space	1
 23520              		.section	.bss.mClockDiv,"aw",%nobits
 23521              		.align	2
 23522              		.set	.LANCHOR36,. + 0
 23525              	mClockDiv:
 23526 0000 00000000 		.space	4
 23527              		.section	.bss.mDivision,"aw",%nobits
 23528              		.align	2
 23529              		.set	.LANCHOR28,. + 0
 23532              	mDivision:
 23533 0000 00000000 		.space	4
 23534              		.section	.bss.mInversion,"aw",%nobits
 23535              		.align	2
 23536              		.set	.LANCHOR30,. + 0
 23539              	mInversion:
 23540 0000 00000000 		.space	4
 23541              		.section	.bss.mOct,"aw",%nobits
 23542              		.align	2
 23543              		.set	.LANCHOR35,. + 0
 23546              	mOct:
 23547 0000 00000000 		.space	4
 23548              		.section	.bss.mOctRng,"aw",%nobits
 23549              		.align	2
 23550              		.set	.LANCHOR34,. + 0
 23553              	mOctRng:
 23554 0000 00000000 		.space	4
 23555              		.section	.bss.mPattern,"aw",%nobits
 23556              		.align	2
 23557              		.set	.LANCHOR27,. + 0
 23560              	mPattern:
 23561 0000 00000000 		.space	4
 23562              		.section	.bss.mRhythm,"aw",%nobits
 23563              		.align	2
 23564              		.set	.LANCHOR33,. + 0
 23567              	mRhythm:
 23568 0000 00000000 		.space	4
 23569              		.section	.bss.mScale,"aw",%nobits
 23570              		.align	2
 23571              		.set	.LANCHOR32,. + 0
 23574              	mScale:
 23575 0000 00000000 		.space	4
 23576              		.section	.bss.mTonic,"aw",%nobits
 23577              		.align	2
 23578              		.set	.LANCHOR31,. + 0
 23581              	mTonic:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 841


 23582 0000 00000000 		.space	4
 23583              		.section	.bss.mVoicing,"aw",%nobits
 23584              		.align	2
 23585              		.set	.LANCHOR29,. + 0
 23588              	mVoicing:
 23589 0000 00000000 		.space	4
 23590              		.section	.bss.menuItems,"aw",%nobits
 23591              		.align	2
 23592              		.set	.LANCHOR2,. + 0
 23595              	menuItems:
 23596 0000 00000000 		.space	800
 23596      00000000 
 23596      00000000 
 23596      00000000 
 23596      00000000 
 23597              		.section	.bss.menuPos,"aw",%nobits
 23598              		.align	2
 23599              		.set	.LANCHOR10,. + 0
 23602              	menuPos:
 23603 0000 00000000 		.space	4
 23604              		.section	.bss.myArp,"aw",%nobits
 23605              		.align	2
 23606              		.set	.LANCHOR13,. + 0
 23609              	myArp:
 23610 0000 00000000 		.space	4
 23611              		.section	.bss.patch,"aw",%nobits
 23612              		.align	2
 23615              	patch:
 23616 0000 00000000 		.space	38336
 23616      00000000 
 23616      00000000 
 23616      00000000 
 23616      00000000 
 23617              		.section	.bss.patternCurCvVal,"aw",%nobits
 23618              		.align	2
 23619              		.set	.LANCHOR1,. + 0
 23622              	patternCurCvVal:
 23623 0000 00000000 		.space	4
 23624              		.section	.bss.patternParam,"aw",%nobits
 23625              		.align	2
 23626              		.set	.LANCHOR0,. + 0
 23629              	patternParam:
 23630 0000 00000000 		.space	56
 23630      00000000 
 23630      00000000 
 23630      00000000 
 23630      00000000 
 23631              		.section	.bss.trigOut,"aw",%nobits
 23632              		.set	.LANCHOR23,. + 0
 23635              	trigOut:
 23636 0000 00       		.space	1
 23637              		.section	.bss.voicingCurCvVal,"aw",%nobits
 23638              		.align	2
 23639              		.set	.LANCHOR6,. + 0
 23642              	voicingCurCvVal:
 23643 0000 00000000 		.space	4
 23644              		.section	.bss.voicingParam,"aw",%nobits
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 842


 23645              		.align	2
 23646              		.set	.LANCHOR5,. + 0
 23649              	voicingParam:
 23650 0000 00000000 		.space	56
 23650      00000000 
 23650      00000000 
 23650      00000000 
 23650      00000000 
 23651              		.text
 23652              	.Letext0:
 23653              		.file 50 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\machine\\_default_type
 23654              		.file 51 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\sys\\_stdint.h"
 23655              		.file 52 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\stdint.h"
 23656              		.file 53 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdd
 23657              		.file 54 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\cpp
 23658              		.file 55 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std
 23659              		.file 56 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 23660              		.file 57 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 23661              		.file 58 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\type_trai
 23662              		.file 59 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-
 23663              		.file 60 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
 23664              		.file 61 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\de
 23665              		.file 62 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 23666              		.file 63 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exc
 23667              		.file 64 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 23668              		.file 65 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 23669              		.file 66 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\str
 23670              		.file 67 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\cha
 23671              		.file 68 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 23672              		.file 69 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\alg
 23673              		.file 70 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 23674              		.file 71 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\use
 23675              		.file 72 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\tuple"
 23676              		.file 73 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\vec
 23677              		.file 74 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\functiona
 23678              		.file 75 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\ref
 23679              		.file 76 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\ptr
 23680              		.file 77 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
 23681              		.file 78 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\fun
 23682              		.file 79 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\pre
 23683              		.file 80 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\type
 23684              		.file 81 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\sys\\_types.h"
 23685              		.file 82 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\sys\\reent.h"
 23686              		.file 83 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\sys\\lock.h"
 23687              		.file 84 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\math.h"
 23688              		.file 85 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\stdlib.h"
 23689              		.file 86 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 23690              		.file 87 "../../DaisySP/Source/Control/adenv.h"
 23691              		.file 88 "../../DaisySP/Source/Utility/dsp.h"
 23692              		.file 89 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stda
 23693              		.file 90 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\wchar.h"
 23694              		.file 91 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\locale.h"
 23695              		.file 92 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\stdio.h"
 23696              		.file 93 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 23697              		.file 94 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\string.h"
 23698              		.file 95 "../../libdaisy/src/daisy_core.h"
 23699              		.file 96 "../../libdaisy/src/per/tim.h"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 843


 23700              		.file 97 "../../libdaisy/src/per/sai.h"
 23701              		.file 98 "../../libdaisy/src/hid/MidiEvent.h"
 23702              		.file 99 "../../libdaisy/src/hid/gatein.h"
 23703              		.file 100 "../../libdaisy/src/hid/logger_impl.h"
 23704              		.file 101 "../../libdaisy/src/util/wav_format.h"
 23705              		.file 102 "../../libdaisy/src/per/gpio.h"
 23706              		.file 103 "../../libdaisy/src/dev/sdram.h"
 23707              		.file 104 "../../libdaisy/src/util/oled_fonts.h"
 23708              		.file 105 "../../libdaisy/src/dev/sr_595.h"
 23709              		.file 106 "<built-in>"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 844


DEFINED SYMBOLS
                            *ABS*:00000000 Jellybeans.cpp
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:17     .text._ZN5daisy9ParameterD2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:26     .text._ZN5daisy9ParameterD2Ev:00000000 _ZN5daisy9ParameterD2Ev
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:26     .text._ZN5daisy9ParameterD2Ev:00000000 _ZN5daisy9ParameterD1Ev
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:49     .text._ZN5daisy10DaisyPatchD2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:57     .text._ZN5daisy10DaisyPatchD2Ev:00000000 _ZN5daisy10DaisyPatchD2Ev
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:57     .text._ZN5daisy10DaisyPatchD2Ev:00000000 _ZN5daisy10DaisyPatchD1Ev
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:139    .text._Z2cbv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:147    .text._Z2cbv:00000000 _Z2cbv
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:161    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:169    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:169    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED1Ev
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:194    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillEb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:202    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillEb:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillEb
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:234    .text._ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:242    .text._ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data:00000000 _ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:274    .text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6HeightEv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:282    .text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6HeightEv:00000000 _ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6HeightEv
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:299    .text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5WidthEv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:307    .text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5WidthEv:00000000 _ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5WidthEv
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:324    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:332    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:372    .text._ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:380    .text._ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation:00000000 _ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:491    .text._ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation:00000024 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23284  .rodata._ZTIPFvvE:00000000 _ZTIPFvvE
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:498    .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.isra.0:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:505    .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.isra.0:00000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.isra.0
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:889    .rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0.str1.4:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:893    .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:900    .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0:00000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:1254   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0:00000060 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:1266   .text._ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:1274   .text._ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev:00000000 _ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:1274   .text._ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev:00000000 _ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED1Ev
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:1406   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:1414   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:1414   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:1643   .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6UpdateEv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:1651   .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6UpdateEv:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6UpdateEv
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:1838   .text._ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:1846   .text._ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev:00000000 _ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:1846   .text._ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev:00000000 _ZNSt5arrayIN10jellybeans8MenuItemELj10EED1Ev
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:2270   .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E.isra.0:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:2277   .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E.isra.0:00000000 _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E.isra.0
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:2553   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:2561   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev:00000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:2561   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev:00000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED1Ev
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:2617   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE9WriteCharEc7FontDefb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:2625   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE9WriteCharEc7FontDefb:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE9WriteCharEc7FontDefb
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:3051   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE9WriteCharEc7FontDefb:00000198 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:3059   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE11WriteStringEPKc7FontDefb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:3067   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE11WriteStringEPKc7FontDefb:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE11WriteStringEPKc7FontDefb
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:3524   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE11WriteStringEPKc7FontDefb:000001b8 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:3534   .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawPixelEjjb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:3542   .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawPixelEjjb:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawPixelEjjb
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 845


C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:3619   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawLineEjjjjb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:3627   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawLineEjjjjb:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawLineEjjjjb
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:3912   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:3920   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:4605   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib:00000368 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:4619   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib:00000378 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:4845   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:4853   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:4992   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000046 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:5001   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000058 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:6209   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000320 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:6218   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000328 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:6529   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:000003e8 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:6537   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawRectEjjjjbb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:6545   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawRectEjjjjbb:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawRectEjjjjbb
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:7655   .text._ZNSt14_Function_baseD2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:7663   .text._ZNSt14_Function_baseD2Ev:00000000 _ZNSt14_Function_baseD2Ev
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:7663   .text._ZNSt14_Function_baseD2Ev:00000000 _ZNSt14_Function_baseD1Ev
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:7704   .text._ZN10jellybeans8MenuItemaSEOS0_.isra.0:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:7711   .text._ZN10jellybeans8MenuItemaSEOS0_.isra.0:00000000 _ZN10jellybeans8MenuItemaSEOS0_.isra.0
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:8142   .text._ZN10jellybeans8MenuItemD2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:8150   .text._ZN10jellybeans8MenuItemD2Ev:00000000 _ZN10jellybeans8MenuItemD2Ev
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:8150   .text._ZN10jellybeans8MenuItemD2Ev:00000000 _ZN10jellybeans8MenuItemD1Ev
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:8579   .text._Z14UpdateControlsv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:8587   .text._Z14UpdateControlsv:00000000 _Z14UpdateControlsv
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:8946   .text._Z14UpdateControlsv:00000108 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23615  .bss.patch:00000000 patch
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:8965   .text._Z10DrawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:8973   .text._Z10DrawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii:00000000 _Z10DrawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:9370   .text._Z10DrawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii:0000012c $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:9381   .text._Z10UpdateOledv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:9389   .text._Z10UpdateOledv:00000000 _Z10UpdateOledv
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:10543  .text._Z10UpdateOledv:00000190 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:10565  .rodata._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_.str1.4:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:10569  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:10577  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:11347  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_:000000d4 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:10577  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_listIS5_ERKS6_
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:11360  .text._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:11368  .text._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_:00000000 _ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:11723  .text._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_:00000054 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:11368  .text._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_:00000000 _ZNSt6vectorIiSaIiEEC1ESt16initializer_listIiERKS0_
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:11735  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS9_Lb1EEEOT_OT0_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:11743  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS9_Lb1EEEOT_OT0_:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS9_Lb1EEEOT_OT0_
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:11743  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS9_Lb1EEEOT_OT0_:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA6_KcS9_Lb1EEEOT_OT0_
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:12213  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS9_Lb1EEEOT_OT0_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:12221  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS9_Lb1EEEOT_OT0_:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS9_Lb1EEEOT_OT0_
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:12221  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS9_Lb1EEEOT_OT0_:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA7_KcS9_Lb1EEEOT_OT0_
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:12691  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:12699  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:13456  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:000000bc $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:12699  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:13473  .rodata.main.str1.4:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:13495  .text.startup.main:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:13503  .text.startup.main:00000000 main
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:15047  .text.startup.main:000002e4 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:15082  .text.startup.main:00000364 $t
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 846


C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:15405  .text.startup.main:000004b0 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:15424  .text._ZNSt12_Vector_baseIiSaIiEED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:15432  .text._ZNSt12_Vector_baseIiSaIiEED2Ev:00000000 _ZNSt12_Vector_baseIiSaIiEED2Ev
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:15432  .text._ZNSt12_Vector_baseIiSaIiEED2Ev:00000000 _ZNSt12_Vector_baseIiSaIiEED1Ev
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:15513  .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:15521  .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_:00000000 _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:15887  .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:15895  .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_:00000000 _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:16560  .rodata._Z41__static_initialization_and_destruction_0ii.constprop.0.str1.4:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:16792  .rodata._Z41__static_initialization_and_destruction_0ii.constprop.0.str1.4:00000148 .LC95
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:16897  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:16904  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000000 _Z41__static_initialization_and_destruction_0ii.constprop.0
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:18731  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:000002ac $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:18884  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:000004e0 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:20721  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:000007b4 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:20739  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:000007f0 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:22758  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000ae4 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23294  .rodata._ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 _ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:22820  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000bd4 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23145  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000c64 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23184  .text.startup._GLOBAL__sub_I_patch:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23191  .text.startup._GLOBAL__sub_I_patch:00000000 _GLOBAL__sub_I_patch
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23205  .init_array:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23212  .rodata._ZTSFvvE:00000000 _ZTSFvvE
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23209  .rodata._ZTSFvvE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23219  .rodata._ZTIFvvE:00000000 _ZTIFvvE
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23216  .rodata._ZTIFvvE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23227  .rodata._ZTSN5daisy21OneBitGraphicsDisplayE:00000000 _ZTSN5daisy21OneBitGraphicsDisplayE
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23224  .rodata._ZTSN5daisy21OneBitGraphicsDisplayE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23234  .rodata._ZTIN5daisy21OneBitGraphicsDisplayE:00000000 _ZTIN5daisy21OneBitGraphicsDisplayE
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23231  .rodata._ZTIN5daisy21OneBitGraphicsDisplayE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23242  .rodata._ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE:00000000 _ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23239  .rodata._ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23251  .rodata._ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE:00000000 _ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23248  .rodata._ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23260  .rodata._ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 _ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23257  .rodata._ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23268  .rodata._ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 _ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23265  .rodata._ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23277  .rodata._ZTSPFvvE:00000000 _ZTSPFvvE
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23274  .rodata._ZTSPFvvE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23281  .rodata._ZTIPFvvE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23291  .rodata._ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23505  .bss.inversionCurCvVal:00000000 inversionCurCvVal
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23642  .bss.voicingCurCvVal:00000000 voicingCurCvVal
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23491  .bss.divisionCurCvVal:00000000 divisionCurCvVal
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23622  .bss.patternCurCvVal:00000000 patternCurCvVal
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23512  .bss.inversionParam:00000000 inversionParam
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23649  .bss.voicingParam:00000000 voicingParam
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23498  .bss.divisionParam:00000000 divisionParam
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23629  .bss.patternParam:00000000 patternParam
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23525  .bss.mClockDiv:00000000 mClockDiv
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23546  .bss.mOct:00000000 mOct
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23553  .bss.mOctRng:00000000 mOctRng
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23567  .bss.mRhythm:00000000 mRhythm
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23574  .bss.mScale:00000000 mScale
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23581  .bss.mTonic:00000000 mTonic
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 847


C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23539  .bss.mInversion:00000000 mInversion
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23588  .bss.mVoicing:00000000 mVoicing
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23532  .bss.mDivision:00000000 mDivision
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23560  .bss.mPattern:00000000 mPattern
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23595  .bss.menuItems:00000000 menuItems
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23609  .bss.myArp:00000000 myArp
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23518  .bss.isEditing:00000000 isEditing
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23602  .bss.menuPos:00000000 menuPos
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23635  .bss.trigOut:00000000 trigOut
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23484  .bss.arpNoteDacOutput1:00000000 arpNoteDacOutput1
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23400  .bss._Z11debugStringB5cxx11:00000000 _Z11debugStringB5cxx11
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23337  .rodata:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23396  .bss._Z11debugStringB5cxx11:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23403  .bss._ZL10allOctaves:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23407  .bss._ZL10allOctaves:00000000 _ZL10allOctaves
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23410  .bss._ZL4font:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23414  .bss._ZL4font:00000000 _ZL4font
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23417  .bss._ZN10jellybeansL10arpRhythmsE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23421  .bss._ZN10jellybeansL10arpRhythmsE:00000000 _ZN10jellybeansL10arpRhythmsE
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23424  .bss._ZN10jellybeansL11arpPatternsE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23428  .bss._ZN10jellybeansL11arpPatternsE:00000000 _ZN10jellybeansL11arpPatternsE
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23431  .bss._ZN10jellybeansL12allNotes5OctE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23435  .bss._ZN10jellybeansL12allNotes5OctE:00000000 _ZN10jellybeansL12allNotes5OctE
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23438  .bss._ZN10jellybeansL13allInversionsE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23442  .bss._ZN10jellybeansL13allInversionsE:00000000 _ZN10jellybeansL13allInversionsE
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23445  .bss._ZN10jellybeansL14allClockInDivsE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23449  .bss._ZN10jellybeansL14allClockInDivsE:00000000 _ZN10jellybeansL14allClockInDivsE
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23452  .bss._ZN10jellybeansL15modeToSemitonesE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23456  .bss._ZN10jellybeansL15modeToSemitonesE:00000000 _ZN10jellybeansL15modeToSemitonesE
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23459  .bss._ZN10jellybeansL5modesE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23463  .bss._ZN10jellybeansL5modesE:00000000 _ZN10jellybeansL5modesE
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23466  .bss._ZN10jellybeansL8allNotesE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23470  .bss._ZN10jellybeansL8allNotesE:00000000 _ZN10jellybeansL8allNotesE
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23473  .bss._ZN10jellybeansL8voicingsE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23477  .bss._ZN10jellybeansL8voicingsE:00000000 _ZN10jellybeansL8voicingsE
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23480  .bss.arpNoteDacOutput1:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23487  .bss.divisionCurCvVal:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23494  .bss.divisionParam:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23501  .bss.inversionCurCvVal:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23508  .bss.inversionParam:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23519  .bss.isEditing:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23521  .bss.mClockDiv:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23528  .bss.mDivision:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23535  .bss.mInversion:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23542  .bss.mOct:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23549  .bss.mOctRng:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23556  .bss.mPattern:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23563  .bss.mRhythm:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23570  .bss.mScale:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23577  .bss.mTonic:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23584  .bss.mVoicing:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23591  .bss.menuItems:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23598  .bss.menuPos:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23605  .bss.myArp:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23612  .bss.patch:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23618  .bss.patternCurCvVal:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23625  .bss.patternParam:00000000 $d
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 848


C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23636  .bss.trigOut:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23638  .bss.voicingCurCvVal:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s:23645  .bss.voicingParam:00000000 $d
                           .group:00000000 _ZN5daisy9ParameterD5Ev
                           .group:00000000 _ZN5daisy10DaisyPatchD5Ev
                           .group:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED5Ev
                           .group:00000000 _ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED5Ev
                           .group:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED5Ev
                           .group:00000000 _ZNSt5arrayIN10jellybeans8MenuItemELj10EED5Ev
                           .group:00000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED5Ev
                           .group:00000000 _ZNSt14_Function_baseD5Ev
                           .group:00000000 _ZN10jellybeans8MenuItemD5Ev
                           .group:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC5ESt16initializer_listIS5_ERKS6_
                           .group:00000000 _ZNSt6vectorIiSaIiEEC5ESt16initializer_listIiERKS0_
                           .group:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC5IRA6_KcS9_Lb1EEEOT_OT0_
                           .group:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC5IRA7_KcS9_Lb1EEEOT_OT0_
                           .group:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC5ERKS7_
                           .group:00000000 _ZNSt12_Vector_baseIiSaIiEED5Ev

UNDEFINED SYMBOLS
memset
_ZdlPvj
memcpy
strlen
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
_ZSt19__throw_logic_errorPKc
dsy_gpio_write
_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
cosf
sinf
_ZN5daisy10DaisyPatch21ProcessAnalogControlsEv
_ZN5daisy10DaisyPatch22ProcessDigitalControlsEv
_ZN5daisy9Parameter7ProcessEv
_ZN10jellybeans8MenuItem8SetIndexEi
_ZN10jellybeans8MenuItem9DecrementEv
_ZN10jellybeans8MenuItem9IncrementEv
_ZN10jellybeans8MenuItem12DisplayValueB5cxx11Ev
_Znwj
_ZSt20__throw_length_errorPKc
_ZSt17__throw_bad_allocv
_ZN5daisy10DaisyPatch4InitEb
_ZN10jellybeans3ArpC1Ev
_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEiSt8functionIFvvEE
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
_ZN5daisy10DaisyPatch8StartAdcEv
memcmp
_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base
__aeabi_atexit
__dso_handle
memmove
_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
_ZN10jellybeans8MenuItemC1Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
Font_7x10
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccFlk4lL.s 			page 849


_ZTVN10__cxxabiv120__function_type_infoE
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTVN10__cxxabiv119__pointer_type_infoE
