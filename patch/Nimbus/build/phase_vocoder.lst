ARM GAS  /tmp/ccbMRYYM.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"phase_vocoder.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN12PhaseVocoder4InitEPPvPjPKfjllf,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	_ZN12PhaseVocoder4InitEPPvPjPKfjllf
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN12PhaseVocoder4InitEPPvPjPKfjllf:
  27              	.LVL0:
  28              	.LFB4290:
  29              		.file 1 "dsp/pvoc/phase_vocoder.cpp"
   1:dsp/pvoc/phase_vocoder.cpp **** // Copyright 2014 Emilie Gillet.
   2:dsp/pvoc/phase_vocoder.cpp **** //
   3:dsp/pvoc/phase_vocoder.cpp **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/pvoc/phase_vocoder.cpp **** //
   5:dsp/pvoc/phase_vocoder.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/pvoc/phase_vocoder.cpp **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/pvoc/phase_vocoder.cpp **** // in the Software without restriction, including without limitation the rights
   8:dsp/pvoc/phase_vocoder.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/pvoc/phase_vocoder.cpp **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/pvoc/phase_vocoder.cpp **** // furnished to do so, subject to the following conditions:
  11:dsp/pvoc/phase_vocoder.cpp **** //
  12:dsp/pvoc/phase_vocoder.cpp **** // The above copyright notice and this permission notice shall be included in
  13:dsp/pvoc/phase_vocoder.cpp **** // all copies or substantial portions of the Software.
  14:dsp/pvoc/phase_vocoder.cpp **** //
  15:dsp/pvoc/phase_vocoder.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/pvoc/phase_vocoder.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/pvoc/phase_vocoder.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/pvoc/phase_vocoder.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/pvoc/phase_vocoder.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/pvoc/phase_vocoder.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/pvoc/phase_vocoder.cpp **** // THE SOFTWARE.
  22:dsp/pvoc/phase_vocoder.cpp **** //
  23:dsp/pvoc/phase_vocoder.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/pvoc/phase_vocoder.cpp **** //
  25:dsp/pvoc/phase_vocoder.cpp **** // -----------------------------------------------------------------------------
  26:dsp/pvoc/phase_vocoder.cpp **** //
  27:dsp/pvoc/phase_vocoder.cpp **** // Naive phase vocoder.
  28:dsp/pvoc/phase_vocoder.cpp **** 
  29:dsp/pvoc/phase_vocoder.cpp **** #include "phase_vocoder.h"
ARM GAS  /tmp/ccbMRYYM.s 			page 2


  30:dsp/pvoc/phase_vocoder.cpp **** 
  31:dsp/pvoc/phase_vocoder.cpp **** #include <algorithm>
  32:dsp/pvoc/phase_vocoder.cpp **** 
  33:dsp/pvoc/phase_vocoder.cpp **** #include "buffer_allocator.h"
  34:dsp/pvoc/phase_vocoder.cpp **** 
  35:dsp/pvoc/phase_vocoder.cpp **** using namespace daisysp;
  36:dsp/pvoc/phase_vocoder.cpp **** 
  37:dsp/pvoc/phase_vocoder.cpp **** using namespace std;
  38:dsp/pvoc/phase_vocoder.cpp **** using namespace daisy;
  39:dsp/pvoc/phase_vocoder.cpp **** 
  40:dsp/pvoc/phase_vocoder.cpp **** void PhaseVocoder::Init(void**       buffer,
  41:dsp/pvoc/phase_vocoder.cpp ****                         size_t*      buffer_size,
  42:dsp/pvoc/phase_vocoder.cpp ****                         const float* large_window_lut,
  43:dsp/pvoc/phase_vocoder.cpp ****                         size_t       largest_fft_size,
  44:dsp/pvoc/phase_vocoder.cpp ****                         int32_t      num_channels,
  45:dsp/pvoc/phase_vocoder.cpp ****                         int32_t      resolution,
  46:dsp/pvoc/phase_vocoder.cpp ****                         float        sample_rate)
  47:dsp/pvoc/phase_vocoder.cpp **** {
  30              		.loc 1 47 1 view -0
  31              		.cfi_startproc
  32              		@ args = 12, pretend = 0, frame = 64
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  48:dsp/pvoc/phase_vocoder.cpp ****     num_channels_ = num_channels;
  34              		.loc 1 48 5 view .LVU1
  47:dsp/pvoc/phase_vocoder.cpp ****     num_channels_ = num_channels;
  35              		.loc 1 47 1 is_stmt 0 view .LVU2
  36 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  37              		.cfi_def_cfa_offset 36
  38              		.cfi_offset 4, -36
  39              		.cfi_offset 5, -32
  40              		.cfi_offset 6, -28
  41              		.cfi_offset 7, -24
  42              		.cfi_offset 8, -20
  43              		.cfi_offset 9, -16
  44              		.cfi_offset 10, -12
  45              		.cfi_offset 11, -8
  46              		.cfi_offset 14, -4
  49:dsp/pvoc/phase_vocoder.cpp **** 
  50:dsp/pvoc/phase_vocoder.cpp ****     size_t fft_size  = largest_fft_size;
  51:dsp/pvoc/phase_vocoder.cpp ****     size_t hop_ratio = 4;
  52:dsp/pvoc/phase_vocoder.cpp **** 
  53:dsp/pvoc/phase_vocoder.cpp ****     BufferAllocator  allocator_0(buffer[0], buffer_size[0]);
  47              		.loc 1 53 59 view .LVU3
  48 0004 0D68     		ldr	r5, [r1]
  47:dsp/pvoc/phase_vocoder.cpp ****     num_channels_ = num_channels;
  49              		.loc 1 47 1 view .LVU4
  50 0006 97B0     		sub	sp, sp, #92
  51              		.cfi_def_cfa_offset 128
  54:dsp/pvoc/phase_vocoder.cpp ****     BufferAllocator  allocator_1(buffer[1], buffer_size[1]);
  52              		.loc 1 54 59 view .LVU5
  53 0008 4E68     		ldr	r6, [r1, #4]
  47:dsp/pvoc/phase_vocoder.cpp ****     num_channels_ = num_channels;
  54              		.loc 1 47 1 view .LVU6
  55 000a 0446     		mov	r4, r0
  53:dsp/pvoc/phase_vocoder.cpp ****     BufferAllocator  allocator_1(buffer[1], buffer_size[1]);
  56              		.loc 1 53 59 view .LVU7
  57 000c 1168     		ldr	r1, [r2]
ARM GAS  /tmp/ccbMRYYM.s 			page 3


  58              	.LVL1:
  55:dsp/pvoc/phase_vocoder.cpp ****     BufferAllocator* allocator[2] = {&allocator_0, &allocator_1};
  59              		.loc 1 55 64 view .LVU8
  60 000e 12AF     		add	r7, sp, #72
  47:dsp/pvoc/phase_vocoder.cpp ****     num_channels_ = num_channels;
  61              		.loc 1 47 1 view .LVU9
  62 0010 DDF880B0 		ldr	fp, [sp, #128]
  53:dsp/pvoc/phase_vocoder.cpp ****     BufferAllocator  allocator_1(buffer[1], buffer_size[1]);
  63              		.loc 1 53 59 view .LVU10
  64 0014 0795     		str	r5, [sp, #28]
  54:dsp/pvoc/phase_vocoder.cpp ****     BufferAllocator* allocator[2] = {&allocator_0, &allocator_1};
  65              		.loc 1 54 59 view .LVU11
  66 0016 5568     		ldr	r5, [r2, #4]
  67              	.LBB55:
  68              	.LBB56:
  69              	.LBB57:
  70              		.file 2 "./buffer_allocator.h"
   1:./buffer_allocator.h **** // Copyright 2014 Emilie Gillet.
   2:./buffer_allocator.h **** //
   3:./buffer_allocator.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:./buffer_allocator.h **** //
   5:./buffer_allocator.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:./buffer_allocator.h **** // of this software and associated documentation files (the "Software"), to deal
   7:./buffer_allocator.h **** // in the Software without restriction, including without limitation the rights
   8:./buffer_allocator.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:./buffer_allocator.h **** // copies of the Software, and to permit persons to whom the Software is
  10:./buffer_allocator.h **** // furnished to do so, subject to the following conditions:
  11:./buffer_allocator.h **** //
  12:./buffer_allocator.h **** // The above copyright notice and this permission notice shall be included in
  13:./buffer_allocator.h **** // all copies or substantial portions of the Software.
  14:./buffer_allocator.h **** //
  15:./buffer_allocator.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:./buffer_allocator.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:./buffer_allocator.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:./buffer_allocator.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:./buffer_allocator.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:./buffer_allocator.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:./buffer_allocator.h **** // THE SOFTWARE.
  22:./buffer_allocator.h **** //
  23:./buffer_allocator.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:./buffer_allocator.h **** //
  25:./buffer_allocator.h **** // -----------------------------------------------------------------------------
  26:./buffer_allocator.h **** //
  27:./buffer_allocator.h **** // Stream buffer for serialization.
  28:./buffer_allocator.h **** 
  29:./buffer_allocator.h **** #ifndef STMLIB_UTILS_BUFFER_ALLOCATOR_H_
  30:./buffer_allocator.h **** #define STMLIB_UTILS_BUFFER_ALLOCATOR_H_
  31:./buffer_allocator.h **** 
  32:./buffer_allocator.h **** #include <stddef.h>
  33:./buffer_allocator.h **** #include <stdint.h>
  34:./buffer_allocator.h **** 
  35:./buffer_allocator.h **** class BufferAllocator
  36:./buffer_allocator.h **** {
  37:./buffer_allocator.h ****   public:
  38:./buffer_allocator.h ****     BufferAllocator() {}
  39:./buffer_allocator.h ****     ~BufferAllocator() {}
  40:./buffer_allocator.h **** 
ARM GAS  /tmp/ccbMRYYM.s 			page 4


  41:./buffer_allocator.h ****     BufferAllocator(void* buffer, size_t size) { Init(buffer, size); }
  42:./buffer_allocator.h **** 
  43:./buffer_allocator.h ****     inline void Init(void* buffer, size_t size)
  44:./buffer_allocator.h ****     {
  45:./buffer_allocator.h ****         buffer_ = static_cast<uint8_t*>(buffer);
  46:./buffer_allocator.h ****         size_   = size;
  47:./buffer_allocator.h ****         Free();
  48:./buffer_allocator.h ****     }
  49:./buffer_allocator.h **** 
  50:./buffer_allocator.h ****     template <typename T>
  51:./buffer_allocator.h ****     inline T* Allocate(size_t size)
  52:./buffer_allocator.h ****     {
  53:./buffer_allocator.h ****         size_t size_bytes = sizeof(T) * size;
  54:./buffer_allocator.h ****         if(size_bytes <= free_)
  71              		.loc 2 54 9 view .LVU12
  72 0018 B1EB8B0F 		cmp	r1, fp, lsl #2
  73              	.LBE57:
  74              	.LBE56:
  75              	.LBE55:
  47:dsp/pvoc/phase_vocoder.cpp ****     num_channels_ = num_channels;
  76              		.loc 1 47 1 view .LVU13
  77 001c 2198     		ldr	r0, [sp, #132]
  78              	.LVL2:
  79              	.LBB64:
  80              	.LBB65:
  81              	.LBB66:
  82              	.LBB67:
  45:./buffer_allocator.h ****         size_   = size;
  83              		.loc 2 45 17 view .LVU14
  84 001e 079A     		ldr	r2, [sp, #28]
  85              	.LVL3:
  45:./buffer_allocator.h ****         size_   = size;
  86              		.loc 2 45 17 view .LVU15
  87              	.LBE67:
  88              	.LBE66:
  89              	.LBE65:
  90              	.LBE64:
  47:dsp/pvoc/phase_vocoder.cpp ****     num_channels_ = num_channels;
  91              		.loc 1 47 1 view .LVU16
  92 0020 0A93     		str	r3, [sp, #40]
  93              	.LBB83:
  94              	.LBB61:
  53:./buffer_allocator.h ****         if(size_bytes <= free_)
  95              		.loc 2 53 16 view .LVU17
  96 0022 4FEA8B03 		lsl	r3, fp, #2
  97              	.LVL4:
  53:./buffer_allocator.h ****         if(size_bytes <= free_)
  98              		.loc 2 53 16 view .LVU18
  99              	.LBE61:
 100              	.LBE83:
  48:dsp/pvoc/phase_vocoder.cpp **** 
 101              		.loc 1 48 19 view .LVU19
 102 0026 C4F86401 		str	r0, [r4, #356]
  50:dsp/pvoc/phase_vocoder.cpp ****     size_t hop_ratio = 4;
 103              		.loc 1 50 5 is_stmt 1 view .LVU20
 104              	.LVL5:
  51:dsp/pvoc/phase_vocoder.cpp **** 
ARM GAS  /tmp/ccbMRYYM.s 			page 5


 105              		.loc 1 51 5 view .LVU21
  53:dsp/pvoc/phase_vocoder.cpp ****     BufferAllocator  allocator_1(buffer[1], buffer_size[1]);
 106              		.loc 1 53 5 view .LVU22
 107              	.LBB84:
 108              	.LBI64:
  41:./buffer_allocator.h **** 
 109              		.loc 2 41 5 view .LVU23
 110              	.LBE84:
  41:./buffer_allocator.h **** 
 111              		.loc 2 41 50 view .LVU24
 112              	.LBB85:
 113              	.LBB80:
 114              	.LBB77:
 115              	.LBI66:
  43:./buffer_allocator.h ****     {
 116              		.loc 2 43 17 view .LVU25
 117              	.LBB74:
  45:./buffer_allocator.h ****         size_   = size;
 118              		.loc 2 45 9 view .LVU26
  46:./buffer_allocator.h ****         Free();
 119              		.loc 2 46 9 view .LVU27
  47:./buffer_allocator.h ****     }
 120              		.loc 2 47 9 view .LVU28
 121              	.LBB68:
 122              	.LBI68:
  55:./buffer_allocator.h ****         {
  56:./buffer_allocator.h ****             T* start = static_cast<T*>(static_cast<void*>(next_));
  57:./buffer_allocator.h ****             next_ += size_bytes;
  58:./buffer_allocator.h ****             free_ -= size_bytes;
  59:./buffer_allocator.h ****             return start;
  60:./buffer_allocator.h ****         }
  61:./buffer_allocator.h ****         else
  62:./buffer_allocator.h ****         {
  63:./buffer_allocator.h ****             return NULL;
  64:./buffer_allocator.h ****         }
  65:./buffer_allocator.h ****     }
  66:./buffer_allocator.h **** 
  67:./buffer_allocator.h ****     inline void Free()
 123              		.loc 2 67 17 view .LVU29
 124              	.LBB69:
  68:./buffer_allocator.h ****     {
  69:./buffer_allocator.h ****         next_ = buffer_;
 125              		.loc 2 69 9 view .LVU30
  70:./buffer_allocator.h ****         free_ = size_;
 126              		.loc 2 70 9 view .LVU31
 127              		.loc 2 70 9 is_stmt 0 view .LVU32
 128              	.LBE69:
 129              	.LBE68:
 130              	.LBE74:
 131              	.LBE77:
 132              	.LBE80:
 133              	.LBE85:
  54:dsp/pvoc/phase_vocoder.cpp ****     BufferAllocator* allocator[2] = {&allocator_0, &allocator_1};
 134              		.loc 1 54 5 is_stmt 1 view .LVU33
 135              	.LBB86:
 136              	.LBI86:
  41:./buffer_allocator.h **** 
ARM GAS  /tmp/ccbMRYYM.s 			page 6


 137              		.loc 2 41 5 view .LVU34
 138              	.LBE86:
  41:./buffer_allocator.h **** 
 139              		.loc 2 41 50 view .LVU35
 140              	.LBB102:
 141              	.LBB87:
 142              	.LBB88:
 143              	.LBI88:
  43:./buffer_allocator.h ****     {
 144              		.loc 2 43 17 view .LVU36
 145              	.LBB89:
  45:./buffer_allocator.h ****         size_   = size;
 146              		.loc 2 45 9 view .LVU37
  46:./buffer_allocator.h ****         Free();
 147              		.loc 2 46 9 view .LVU38
  47:./buffer_allocator.h ****     }
 148              		.loc 2 47 9 view .LVU39
 149              	.LBB90:
 150              	.LBI90:
  67:./buffer_allocator.h ****     {
 151              		.loc 2 67 17 view .LVU40
 152              	.LBB91:
  69:./buffer_allocator.h ****         free_ = size_;
 153              		.loc 2 69 9 view .LVU41
 154              		.loc 2 70 9 view .LVU42
 155              		.loc 2 70 9 is_stmt 0 view .LVU43
 156              	.LBE91:
 157              	.LBE90:
 158              	.LBE89:
 159              	.LBE88:
 160              	.LBE87:
 161              	.LBE102:
 162              		.loc 1 55 5 is_stmt 1 view .LVU44
 163              	.LBB103:
 164              	.LBB100:
 165              	.LBB98:
 166              	.LBB96:
 167              	.LBB94:
 168              	.LBB92:
 169              		.loc 2 70 15 is_stmt 0 view .LVU45
 170 002a CDE91455 		strd	r5, r5, [sp, #80]
 171              	.LBE92:
 172              	.LBE94:
 173              	.LBE96:
 174              	.LBE98:
 175              	.LBE100:
 176              	.LBE103:
 177              		.loc 1 55 64 view .LVU46
 178 002e 0EAD     		add	r5, sp, #56
 179              	.LBB104:
 180              	.LBB81:
 181              	.LBB78:
 182              	.LBB75:
 183              	.LBB72:
 184              	.LBB70:
  69:./buffer_allocator.h ****         free_ = size_;
 185              		.loc 2 69 15 view .LVU47
ARM GAS  /tmp/ccbMRYYM.s 			page 7


 186 0030 CDE90E22 		strd	r2, r2, [sp, #56]
 187              	.LBE70:
 188              	.LBE72:
 189              	.LBE75:
 190              	.LBE78:
 191              	.LBE81:
 192              	.LBE104:
 193              	.LBB105:
 194              	.LBB101:
 195              	.LBB99:
 196              	.LBB97:
 197              	.LBB95:
 198              	.LBB93:
 199 0034 CDE91266 		strd	r6, r6, [sp, #72]
 200              	.LBE93:
 201              	.LBE95:
 202              	.LBE97:
 203              	.LBE99:
 204              	.LBE101:
 205              	.LBE105:
 206              	.LBB106:
 207              	.LBB82:
 208              	.LBB79:
 209              	.LBB76:
 210              	.LBB73:
 211              	.LBB71:
 212              		.loc 2 70 15 view .LVU48
 213 0038 CDE91011 		strd	r1, r1, [sp, #64]
 214              	.LBE71:
 215              	.LBE73:
 216              	.LBE76:
 217              	.LBE79:
 218              	.LBE82:
 219              	.LBE106:
 220              		.loc 1 55 64 view .LVU49
 221 003c CDE90C57 		strd	r5, r7, [sp, #48]
  56:dsp/pvoc/phase_vocoder.cpp ****     float*           fft_buffer   = allocator[0]->Allocate<float>(fft_size);
 222              		.loc 1 56 5 is_stmt 1 view .LVU50
 223              	.LVL6:
 224              	.LBB107:
 225              	.LBI55:
  51:./buffer_allocator.h ****     {
 226              		.loc 2 51 15 view .LVU51
 227              	.LBB62:
 228              	.LBB59:
  54:./buffer_allocator.h ****         {
 229              		.loc 2 54 9 is_stmt 0 view .LVU52
 230 0040 C0F09680 		bcc	.L12
 231              	.LVL7:
 232              	.LBB58:
  58:./buffer_allocator.h ****             return start;
 233              		.loc 2 58 19 view .LVU53
 234 0044 C91A     		subs	r1, r1, r3
  57:./buffer_allocator.h ****             free_ -= size_bytes;
 235              		.loc 2 57 19 view .LVU54
 236 0046 D518     		adds	r5, r2, r3
 237              	.LVL8:
ARM GAS  /tmp/ccbMRYYM.s 			page 8


  58:./buffer_allocator.h ****             return start;
 238              		.loc 2 58 13 view .LVU55
 239 0048 1091     		str	r1, [sp, #64]
  57:./buffer_allocator.h ****             free_ -= size_bytes;
 240              		.loc 2 57 13 view .LVU56
 241 004a 0E95     		str	r5, [sp, #56]
 242              	.LVL9:
 243              	.L2:
  57:./buffer_allocator.h ****             free_ -= size_bytes;
 244              		.loc 2 57 13 view .LVU57
 245              	.LBE58:
 246              	.LBE59:
 247              	.LBE62:
 248              	.LBE107:
  57:dsp/pvoc/phase_vocoder.cpp ****     float*           ifft_buffer
 249              		.loc 1 57 5 is_stmt 1 view .LVU58
  58:dsp/pvoc/phase_vocoder.cpp ****         = allocator[num_channels_ - 1]->Allocate<float>(fft_size);
 250              		.loc 1 58 38 is_stmt 0 view .LVU59
 251 004c 16AA     		add	r2, sp, #88
 252 004e 02EB8001 		add	r1, r2, r0, lsl #2
 253 0052 51F82C1C 		ldr	r1, [r1, #-44]
 254              	.LVL10:
 255              	.LBB108:
 256              	.LBI108:
  51:./buffer_allocator.h ****     {
 257              		.loc 2 51 15 is_stmt 1 view .LVU60
 258              	.LBB109:
 259              	.LBB110:
  54:./buffer_allocator.h ****         {
 260              		.loc 2 54 26 is_stmt 0 view .LVU61
 261 0056 8D68     		ldr	r5, [r1, #8]
  54:./buffer_allocator.h ****         {
 262              		.loc 2 54 9 view .LVU62
 263 0058 9D42     		cmp	r5, r3
 264 005a C0F08C80 		bcc	.L13
 265              	.LBB111:
  56:./buffer_allocator.h ****             next_ += size_bytes;
 266              		.loc 2 56 16 view .LVU63
 267 005e 0A68     		ldr	r2, [r1]
  58:./buffer_allocator.h ****             return start;
 268              		.loc 2 58 19 view .LVU64
 269 0060 ED1A     		subs	r5, r5, r3
  57:./buffer_allocator.h ****             free_ -= size_bytes;
 270              		.loc 2 57 19 view .LVU65
 271 0062 1344     		add	r3, r3, r2
 272              	.LVL11:
  56:./buffer_allocator.h ****             next_ += size_bytes;
 273              		.loc 2 56 16 view .LVU66
 274 0064 0B92     		str	r2, [sp, #44]
 275              	.LVL12:
  58:./buffer_allocator.h ****             return start;
 276              		.loc 2 58 13 view .LVU67
 277 0066 8D60     		str	r5, [r1, #8]
  57:./buffer_allocator.h ****             free_ -= size_bytes;
 278              		.loc 2 57 13 view .LVU68
 279 0068 0B60     		str	r3, [r1]
 280              	.LVL13:
ARM GAS  /tmp/ccbMRYYM.s 			page 9


 281              	.L3:
  57:./buffer_allocator.h ****             free_ -= size_bytes;
 282              		.loc 2 57 13 view .LVU69
 283              	.LBE111:
 284              	.LBE110:
 285              	.LBE109:
 286              	.LBE108:
  59:dsp/pvoc/phase_vocoder.cpp **** 
  60:dsp/pvoc/phase_vocoder.cpp ****     size_t num_textures = kMaxNumTextures;
 287              		.loc 1 60 5 is_stmt 1 view .LVU70
  61:dsp/pvoc/phase_vocoder.cpp ****     size_t texture_size = (fft_size >> 1) - kHighFrequencyTruncation;
 288              		.loc 1 61 5 view .LVU71
  62:dsp/pvoc/phase_vocoder.cpp ****     for(int32_t i = 0; i < num_channels_; ++i)
 289              		.loc 1 62 5 view .LVU72
 290              	.LBB114:
 291              		.loc 1 62 26 view .LVU73
 292 006a 0028     		cmp	r0, #0
 293 006c 4EDD     		ble	.L1
 294              	.LBE114:
  61:dsp/pvoc/phase_vocoder.cpp ****     size_t texture_size = (fft_size >> 1) - kHighFrequencyTruncation;
 295              		.loc 1 61 37 is_stmt 0 view .LVU74
 296 006e 4FEA5B03 		lsr	r3, fp, #1
 297              	.LVL14:
 298              	.LBB137:
 299              	.LBB115:
 300              	.LBB116:
 301              	.LBB117:
 302              	.LBB118:
  54:./buffer_allocator.h ****         {
 303              		.loc 2 54 26 view .LVU75
 304 0072 DDF840C0 		ldr	ip, [sp, #64]
 305              	.LBE118:
 306              	.LBE117:
 307              	.LBE116:
  63:dsp/pvoc/phase_vocoder.cpp ****     {
  64:dsp/pvoc/phase_vocoder.cpp ****         short* ana_syn_buffer
  65:dsp/pvoc/phase_vocoder.cpp ****             = allocator[i]->Allocate<short>((fft_size + (fft_size >> 1)) * 2);
 308              		.loc 1 65 55 view .LVU76
 309 0076 0BEB5B08 		add	r8, fp, fp, lsr #1
 310 007a 04F1FC07 		add	r7, r4, #252
 311              	.LBE115:
 312              	.LBE137:
  61:dsp/pvoc/phase_vocoder.cpp ****     for(int32_t i = 0; i < num_channels_; ++i)
 313              		.loc 1 61 12 view .LVU77
 314 007e 103B     		subs	r3, r3, #16
 315              	.LVL15:
  60:dsp/pvoc/phase_vocoder.cpp ****     size_t texture_size = (fft_size >> 1) - kHighFrequencyTruncation;
 316              		.loc 1 60 12 view .LVU78
 317 0080 0726     		movs	r6, #7
 318              	.LBB138:
 319              	.LBB131:
 320              	.LBB127:
 321              	.LBB123:
  53:./buffer_allocator.h ****         if(size_bytes <= free_)
 322              		.loc 2 53 16 view .LVU79
 323 0082 4FEA8808 		lsl	r8, r8, #2
 324              	.LBE123:
ARM GAS  /tmp/ccbMRYYM.s 			page 10


 325              	.LBE127:
 326              	.LBE131:
  62:dsp/pvoc/phase_vocoder.cpp ****     {
 327              		.loc 1 62 17 view .LVU80
 328 0086 CDF880B0 		str	fp, [sp, #128]
 329              	.LVL16:
 330              	.LBB132:
  66:dsp/pvoc/phase_vocoder.cpp **** 
  67:dsp/pvoc/phase_vocoder.cpp ****         num_textures
  68:dsp/pvoc/phase_vocoder.cpp ****             = min(allocator[i]->free() / (sizeof(float) * texture_size),
 331              		.loc 1 68 57 view .LVU81
 332 008a 9B00     		lsls	r3, r3, #2
 333              	.LVL17:
  69:dsp/pvoc/phase_vocoder.cpp ****                   num_textures);
  70:dsp/pvoc/phase_vocoder.cpp ****         stft_[i].Init(&fft_,
 334              		.loc 1 70 22 view .LVU82
 335 008c B946     		mov	r9, r7
 336              	.LBB128:
 337              	.LBB124:
 338              	.LBB120:
  54:./buffer_allocator.h ****         {
 339              		.loc 2 54 9 view .LVU83
 340 008e E045     		cmp	r8, ip
 341              	.LBE120:
 342              	.LBE124:
 343              	.LBE128:
 344              		.loc 1 70 22 view .LVU84
 345 0090 0EA9     		add	r1, sp, #56
 346              	.LVL18:
  68:dsp/pvoc/phase_vocoder.cpp ****                   num_textures);
 347              		.loc 1 68 57 view .LVU85
 348 0092 0893     		str	r3, [sp, #32]
 349 0094 04F15C0A 		add	r10, r4, #92
 350              		.loc 1 70 22 view .LVU86
 351 0098 4FEA9B03 		lsr	r3, fp, #2
 352              	.LBE132:
  62:dsp/pvoc/phase_vocoder.cpp ****     {
 353              		.loc 1 62 17 view .LVU87
 354 009c 4FF00005 		mov	r5, #0
 355 00a0 BB46     		mov	fp, r7
 356              	.LVL19:
  62:dsp/pvoc/phase_vocoder.cpp ****     {
 357              		.loc 1 62 17 view .LVU88
 358 00a2 0696     		str	r6, [sp, #24]
 359 00a4 209F     		ldr	r7, [sp, #128]
 360              	.LVL20:
 361              	.LBB133:
  64:dsp/pvoc/phase_vocoder.cpp ****             = allocator[i]->Allocate<short>((fft_size + (fft_size >> 1)) * 2);
 362              		.loc 1 64 9 is_stmt 1 view .LVU89
 363              	.LBB129:
 364              	.LBI116:
  51:./buffer_allocator.h ****     {
 365              		.loc 2 51 15 view .LVU90
 366              	.LBB125:
 367              	.LBB121:
  54:./buffer_allocator.h ****         {
 368              		.loc 2 54 9 is_stmt 0 view .LVU91
ARM GAS  /tmp/ccbMRYYM.s 			page 11


 369 00a6 2FD8     		bhi	.L14
 370              	.LVL21:
 371              	.L20:
 372              	.LBB119:
  56:./buffer_allocator.h ****             next_ += size_bytes;
 373              		.loc 2 56 16 view .LVU92
 374 00a8 0868     		ldr	r0, [r1]
 375              	.LVL22:
  58:./buffer_allocator.h ****             return start;
 376              		.loc 2 58 19 view .LVU93
 377 00aa ACEB080C 		sub	ip, ip, r8
  57:./buffer_allocator.h ****             free_ -= size_bytes;
 378              		.loc 2 57 19 view .LVU94
 379 00ae 00EB0802 		add	r2, r0, r8
  58:./buffer_allocator.h ****             return start;
 380              		.loc 2 58 13 view .LVU95
 381 00b2 C1F808C0 		str	ip, [r1, #8]
  57:./buffer_allocator.h ****             free_ -= size_bytes;
 382              		.loc 2 57 13 view .LVU96
 383 00b6 0A60     		str	r2, [r1]
 384              	.LVL23:
 385              	.L7:
  57:./buffer_allocator.h ****             free_ -= size_bytes;
 386              		.loc 2 57 13 view .LVU97
 387              	.LBE119:
 388              	.LBE121:
 389              	.LBE125:
 390              	.LBE129:
  67:dsp/pvoc/phase_vocoder.cpp ****             = min(allocator[i]->free() / (sizeof(float) * texture_size),
 391              		.loc 1 67 9 is_stmt 1 view .LVU98
  67:dsp/pvoc/phase_vocoder.cpp ****             = min(allocator[i]->free() / (sizeof(float) * texture_size),
 392              		.loc 1 67 9 is_stmt 0 view .LVU99
 393              	.LBE133:
 394              	.LBE138:
  71:./buffer_allocator.h ****     }
  72:./buffer_allocator.h **** 
  73:./buffer_allocator.h ****     inline size_t free() const { return free_; }
 395              		.loc 2 73 34 is_stmt 1 view .LVU100
 396              	.LBB139:
 397              	.LBB134:
  68:dsp/pvoc/phase_vocoder.cpp ****                   num_textures);
 398              		.loc 1 68 40 is_stmt 0 view .LVU101
 399 00b8 089E     		ldr	r6, [sp, #32]
 400              		.loc 1 70 22 view .LVU102
 401 00ba 3A46     		mov	r2, r7
 402 00bc 0390     		str	r0, [sp, #12]
 403              	.LBE134:
  62:dsp/pvoc/phase_vocoder.cpp ****     {
 404              		.loc 1 62 5 view .LVU103
 405 00be 0135     		adds	r5, r5, #1
 406              	.LVL24:
 407              	.LBB135:
 408              		.loc 1 70 22 view .LVU104
 409 00c0 0B98     		ldr	r0, [sp, #44]
 410              	.LVL25:
 411              		.loc 1 70 22 view .LVU105
 412 00c2 0A99     		ldr	r1, [sp, #40]
ARM GAS  /tmp/ccbMRYYM.s 			page 12


 413 00c4 0190     		str	r0, [sp, #4]
 414 00c6 0798     		ldr	r0, [sp, #28]
 415 00c8 CDF81090 		str	r9, [sp, #16]
 416 00cc 09F13409 		add	r9, r9, #52
 417 00d0 0291     		str	r1, [sp, #8]
 418 00d2 2146     		mov	r1, r4
 419 00d4 0090     		str	r0, [sp]
 420 00d6 5046     		mov	r0, r10
 421 00d8 0993     		str	r3, [sp, #36]
 422 00da 0AF1500A 		add	r10, r10, #80
  68:dsp/pvoc/phase_vocoder.cpp ****                   num_textures);
 423              		.loc 1 68 40 view .LVU106
 424 00de BCFBF6FC 		udiv	ip, ip, r6
 425              	.LVL26:
  68:dsp/pvoc/phase_vocoder.cpp ****                   num_textures);
 426              		.loc 1 68 40 view .LVU107
 427 00e2 069E     		ldr	r6, [sp, #24]
 428 00e4 6645     		cmp	r6, ip
 429 00e6 28BF     		it	cs
 430 00e8 6646     		movcs	r6, ip
 431 00ea 0696     		str	r6, [sp, #24]
 432              	.LVL27:
 433              		.loc 1 70 9 is_stmt 1 view .LVU108
 434              		.loc 1 70 22 is_stmt 0 view .LVU109
 435 00ec FFF7FEFF 		bl	_ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation
 436              	.LVL28:
 437              		.loc 1 70 22 view .LVU110
 438              	.LBE135:
  62:dsp/pvoc/phase_vocoder.cpp ****     {
 439              		.loc 1 62 5 is_stmt 1 view .LVU111
  62:dsp/pvoc/phase_vocoder.cpp ****     {
 440              		.loc 1 62 26 view .LVU112
  62:dsp/pvoc/phase_vocoder.cpp ****     {
 441              		.loc 1 62 28 is_stmt 0 view .LVU113
 442 00f0 D4F86411 		ldr	r1, [r4, #356]
  62:dsp/pvoc/phase_vocoder.cpp ****     {
 443              		.loc 1 62 26 view .LVU114
 444 00f4 A942     		cmp	r1, r5
 445 00f6 0CDD     		ble	.L8
 446 00f8 0CAB     		add	r3, sp, #48
 447 00fa 53F82510 		ldr	r1, [r3, r5, lsl #2]
 448 00fe 099B     		ldr	r3, [sp, #36]
 449              	.LBB136:
  64:dsp/pvoc/phase_vocoder.cpp ****             = allocator[i]->Allocate<short>((fft_size + (fft_size >> 1)) * 2);
 450              		.loc 1 64 9 is_stmt 1 view .LVU115
 451              	.LVL29:
 452              	.LBB130:
  51:./buffer_allocator.h ****     {
 453              		.loc 2 51 15 view .LVU116
 454              	.LBB126:
 455              	.LBB122:
  54:./buffer_allocator.h ****         {
 456              		.loc 2 54 26 is_stmt 0 view .LVU117
 457 0100 D1F808C0 		ldr	ip, [r1, #8]
  54:./buffer_allocator.h ****         {
 458              		.loc 2 54 9 view .LVU118
 459 0104 E045     		cmp	r8, ip
ARM GAS  /tmp/ccbMRYYM.s 			page 13


 460 0106 CFD9     		bls	.L20
 461              	.LVL30:
 462              	.L14:
  63:./buffer_allocator.h ****         }
 463              		.loc 2 63 20 view .LVU119
 464 0108 0020     		movs	r0, #0
 465 010a D5E7     		b	.L7
 466              	.LVL31:
 467              	.L1:
  63:./buffer_allocator.h ****         }
 468              		.loc 2 63 20 view .LVU120
 469              	.LBE122:
 470              	.LBE126:
 471              	.LBE130:
 472              	.LBE136:
 473              	.LBE139:
  71:dsp/pvoc/phase_vocoder.cpp ****                       fft_size,
  72:dsp/pvoc/phase_vocoder.cpp ****                       fft_size / hop_ratio,
  73:dsp/pvoc/phase_vocoder.cpp ****                       fft_buffer,
  74:dsp/pvoc/phase_vocoder.cpp ****                       ifft_buffer,
  75:dsp/pvoc/phase_vocoder.cpp ****                       large_window_lut,
  76:dsp/pvoc/phase_vocoder.cpp ****                       ana_syn_buffer,
  77:dsp/pvoc/phase_vocoder.cpp ****                       &frame_transformation_[i]);
  78:dsp/pvoc/phase_vocoder.cpp ****     }
  79:dsp/pvoc/phase_vocoder.cpp ****     for(int32_t i = 0; i < num_channels_; ++i)
  80:dsp/pvoc/phase_vocoder.cpp ****     {
  81:dsp/pvoc/phase_vocoder.cpp ****         float* texture_buffer
  82:dsp/pvoc/phase_vocoder.cpp ****             = allocator[i]->Allocate<float>(num_textures * texture_size);
  83:dsp/pvoc/phase_vocoder.cpp ****         frame_transformation_[i].Init(texture_buffer, fft_size, num_textures);
  84:dsp/pvoc/phase_vocoder.cpp ****     }
  85:dsp/pvoc/phase_vocoder.cpp **** }
 474              		.loc 1 85 1 view .LVU121
 475 010c 17B0     		add	sp, sp, #92
 476              		.cfi_remember_state
 477              		.cfi_def_cfa_offset 36
 478              		@ sp needed
 479 010e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 480              	.LVL32:
 481              	.L8:
 482              		.cfi_restore_state
 483              		.loc 1 85 1 view .LVU122
 484 0112 3B46     		mov	r3, r7
 485              	.LBB140:
  79:dsp/pvoc/phase_vocoder.cpp ****     {
 486              		.loc 1 79 26 view .LVU123
 487 0114 0029     		cmp	r1, #0
 488 0116 5F46     		mov	r7, fp
 489              	.LVL33:
  79:dsp/pvoc/phase_vocoder.cpp ****     {
 490              		.loc 1 79 26 view .LVU124
 491 0118 069E     		ldr	r6, [sp, #24]
 492 011a 9B46     		mov	fp, r3
 493              	.LVL34:
  79:dsp/pvoc/phase_vocoder.cpp ****     {
 494              		.loc 1 79 26 is_stmt 1 view .LVU125
 495 011c F6DD     		ble	.L1
 496              	.LVL35:
ARM GAS  /tmp/ccbMRYYM.s 			page 14


 497              	.LBB141:
 498              	.LBB142:
 499              	.LBB143:
  53:./buffer_allocator.h ****         if(size_bytes <= free_)
 500              		.loc 2 53 16 is_stmt 0 view .LVU126
 501 011e 089D     		ldr	r5, [sp, #32]
 502              	.LVL36:
  53:./buffer_allocator.h ****         if(size_bytes <= free_)
 503              		.loc 2 53 16 view .LVU127
 504 0120 0EAB     		add	r3, sp, #56
 505              	.LVL37:
  53:./buffer_allocator.h ****         if(size_bytes <= free_)
 506              		.loc 2 53 16 view .LVU128
 507              	.LBE143:
 508              	.LBE142:
 509              	.LBE141:
  79:dsp/pvoc/phase_vocoder.cpp ****     {
 510              		.loc 1 79 17 view .LVU129
 511 0122 A246     		mov	r10, r4
 512 0124 4FF00008 		mov	r8, #0
 513              	.LVL38:
 514              	.LBB155:
  81:dsp/pvoc/phase_vocoder.cpp ****             = allocator[i]->Allocate<float>(num_textures * texture_size);
 515              		.loc 1 81 9 is_stmt 1 view .LVU130
 516              	.LBB152:
 517              	.LBI142:
  51:./buffer_allocator.h ****     {
 518              		.loc 2 51 15 view .LVU131
 519              	.LBB149:
  53:./buffer_allocator.h ****         if(size_bytes <= free_)
 520              		.loc 2 53 16 is_stmt 0 view .LVU132
 521 0128 06FB05F5 		mul	r5, r6, r5
 522              	.LBE149:
 523              	.LBE152:
 524              	.LBE155:
  79:dsp/pvoc/phase_vocoder.cpp ****     {
 525              		.loc 1 79 17 view .LVU133
 526 012c A946     		mov	r9, r5
 527 012e 1D46     		mov	r5, r3
 528              	.LBB156:
 529              	.LBB153:
 530              	.LBB150:
 531              	.LBB144:
  54:./buffer_allocator.h ****         {
 532              		.loc 2 54 26 view .LVU134
 533 0130 AC68     		ldr	r4, [r5, #8]
 534              	.LVL39:
  54:./buffer_allocator.h ****         {
 535              		.loc 2 54 9 view .LVU135
 536 0132 A145     		cmp	r9, r4
 537              	.LBB145:
  58:./buffer_allocator.h ****             return start;
 538              		.loc 2 58 19 view .LVU136
 539 0134 A4EB0904 		sub	r4, r4, r9
 540              	.LBE145:
  54:./buffer_allocator.h ****         {
 541              		.loc 2 54 9 view .LVU137
ARM GAS  /tmp/ccbMRYYM.s 			page 15


 542 0138 18D8     		bhi	.L15
 543              	.LVL40:
 544              	.L21:
 545              	.LBB146:
  56:./buffer_allocator.h ****             next_ += size_bytes;
 546              		.loc 2 56 16 view .LVU138
 547 013a 2968     		ldr	r1, [r5]
 548              	.LVL41:
  58:./buffer_allocator.h ****             return start;
 549              		.loc 2 58 13 view .LVU139
 550 013c AC60     		str	r4, [r5, #8]
  57:./buffer_allocator.h ****             free_ -= size_bytes;
 551              		.loc 2 57 19 view .LVU140
 552 013e 01EB0903 		add	r3, r1, r9
  57:./buffer_allocator.h ****             free_ -= size_bytes;
 553              		.loc 2 57 13 view .LVU141
 554 0142 2B60     		str	r3, [r5]
 555              	.LVL42:
 556              	.L10:
  57:./buffer_allocator.h ****             free_ -= size_bytes;
 557              		.loc 2 57 13 view .LVU142
 558              	.LBE146:
 559              	.LBE144:
 560              	.LBE150:
 561              	.LBE153:
  83:dsp/pvoc/phase_vocoder.cpp ****     }
 562              		.loc 1 83 9 is_stmt 1 view .LVU143
  83:dsp/pvoc/phase_vocoder.cpp ****     }
 563              		.loc 1 83 38 is_stmt 0 view .LVU144
 564 0144 3346     		mov	r3, r6
 565 0146 3846     		mov	r0, r7
 566 0148 5A46     		mov	r2, fp
 567              	.LBE156:
  79:dsp/pvoc/phase_vocoder.cpp ****     {
 568              		.loc 1 79 5 view .LVU145
 569 014a 08F10108 		add	r8, r8, #1
 570              	.LVL43:
 571              	.LBB157:
  83:dsp/pvoc/phase_vocoder.cpp ****     }
 572              		.loc 1 83 38 view .LVU146
 573 014e FFF7FEFF 		bl	_ZN19FrameTransformation4InitEPfll
 574              	.LVL44:
  83:dsp/pvoc/phase_vocoder.cpp ****     }
 575              		.loc 1 83 38 view .LVU147
 576              	.LBE157:
  79:dsp/pvoc/phase_vocoder.cpp ****     {
 577              		.loc 1 79 5 is_stmt 1 view .LVU148
  79:dsp/pvoc/phase_vocoder.cpp ****     {
 578              		.loc 1 79 26 view .LVU149
 579 0152 DAF86431 		ldr	r3, [r10, #356]
 580 0156 3437     		adds	r7, r7, #52
 581 0158 4345     		cmp	r3, r8
 582 015a D7DD     		ble	.L1
 583 015c 0CAB     		add	r3, sp, #48
 584 015e 53F82850 		ldr	r5, [r3, r8, lsl #2]
 585              	.LBB158:
  81:dsp/pvoc/phase_vocoder.cpp ****             = allocator[i]->Allocate<float>(num_textures * texture_size);
ARM GAS  /tmp/ccbMRYYM.s 			page 16


 586              		.loc 1 81 9 view .LVU150
 587              	.LVL45:
 588              	.LBB154:
  51:./buffer_allocator.h ****     {
 589              		.loc 2 51 15 view .LVU151
 590              	.LBB151:
 591              	.LBB148:
  54:./buffer_allocator.h ****         {
 592              		.loc 2 54 26 is_stmt 0 view .LVU152
 593 0162 AC68     		ldr	r4, [r5, #8]
  54:./buffer_allocator.h ****         {
 594              		.loc 2 54 9 view .LVU153
 595 0164 A145     		cmp	r9, r4
 596              	.LBB147:
  58:./buffer_allocator.h ****             return start;
 597              		.loc 2 58 19 view .LVU154
 598 0166 A4EB0904 		sub	r4, r4, r9
 599              	.LBE147:
  54:./buffer_allocator.h ****         {
 600              		.loc 2 54 9 view .LVU155
 601 016a E6D9     		bls	.L21
 602              	.LVL46:
 603              	.L15:
  63:./buffer_allocator.h ****         }
 604              		.loc 2 63 20 view .LVU156
 605 016c 0021     		movs	r1, #0
 606 016e E9E7     		b	.L10
 607              	.LVL47:
 608              	.L12:
  63:./buffer_allocator.h ****         }
 609              		.loc 2 63 20 view .LVU157
 610              	.LBE148:
 611              	.LBE151:
 612              	.LBE154:
 613              	.LBE158:
 614              	.LBE140:
 615              	.LBB159:
 616              	.LBB63:
 617              	.LBB60:
 618 0170 0022     		movs	r2, #0
 619 0172 0792     		str	r2, [sp, #28]
 620 0174 6AE7     		b	.L2
 621              	.LVL48:
 622              	.L13:
  63:./buffer_allocator.h ****         }
 623              		.loc 2 63 20 view .LVU158
 624              	.LBE60:
 625              	.LBE63:
 626              	.LBE159:
 627              	.LBB160:
 628              	.LBB113:
 629              	.LBB112:
 630 0176 0023     		movs	r3, #0
 631              	.LVL49:
  63:./buffer_allocator.h ****         }
 632              		.loc 2 63 20 view .LVU159
 633 0178 0B93     		str	r3, [sp, #44]
ARM GAS  /tmp/ccbMRYYM.s 			page 17


 634 017a 76E7     		b	.L3
 635              	.LBE112:
 636              	.LBE113:
 637              	.LBE160:
 638              		.cfi_endproc
 639              	.LFE4290:
 641              		.section	.text._ZN12PhaseVocoder7ProcessERK10ParametersPK10FloatFramePS3_j,"ax",%progbits
 642              		.align	1
 643              		.p2align 2,,3
 644              		.global	_ZN12PhaseVocoder7ProcessERK10ParametersPK10FloatFramePS3_j
 645              		.syntax unified
 646              		.thumb
 647              		.thumb_func
 648              		.fpu fpv5-d16
 650              	_ZN12PhaseVocoder7ProcessERK10ParametersPK10FloatFramePS3_j:
 651              	.LVL50:
 652              	.LFB4291:
  86:dsp/pvoc/phase_vocoder.cpp **** 
  87:dsp/pvoc/phase_vocoder.cpp **** void PhaseVocoder::Process(const Parameters& parameters,
  88:dsp/pvoc/phase_vocoder.cpp ****                            const FloatFrame* input,
  89:dsp/pvoc/phase_vocoder.cpp ****                            FloatFrame*       output,
  90:dsp/pvoc/phase_vocoder.cpp ****                            size_t            size)
  91:dsp/pvoc/phase_vocoder.cpp **** {
 653              		.loc 1 91 1 is_stmt 1 view -0
 654              		.cfi_startproc
 655              		@ args = 4, pretend = 0, frame = 0
 656              		@ frame_needed = 0, uses_anonymous_args = 0
  92:dsp/pvoc/phase_vocoder.cpp ****     const float* input_samples  = &input[0].l;
 657              		.loc 1 92 5 view .LVU161
  91:dsp/pvoc/phase_vocoder.cpp ****     const float* input_samples  = &input[0].l;
 658              		.loc 1 91 1 is_stmt 0 view .LVU162
 659 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 660              		.cfi_def_cfa_offset 32
 661              		.cfi_offset 4, -32
 662              		.cfi_offset 5, -28
 663              		.cfi_offset 6, -24
 664              		.cfi_offset 7, -20
 665              		.cfi_offset 8, -16
 666              		.cfi_offset 9, -12
 667              		.cfi_offset 10, -8
 668              		.cfi_offset 14, -4
 669 0004 8946     		mov	r9, r1
 670              	.LVL51:
  93:dsp/pvoc/phase_vocoder.cpp ****     float*       output_samples = &output[0].l;
 671              		.loc 1 93 5 is_stmt 1 view .LVU163
  94:dsp/pvoc/phase_vocoder.cpp ****     for(int32_t i = 0; i < num_channels_; ++i)
 672              		.loc 1 94 5 view .LVU164
 673              	.LBB161:
 674              		.loc 1 94 26 view .LVU165
 675 0006 D0F86411 		ldr	r1, [r0, #356]
 676              	.LVL52:
 677              		.loc 1 94 26 is_stmt 0 view .LVU166
 678              	.LBE161:
  91:dsp/pvoc/phase_vocoder.cpp ****     const float* input_samples  = &input[0].l;
 679              		.loc 1 91 1 view .LVU167
 680 000a 82B0     		sub	sp, sp, #8
 681              		.cfi_def_cfa_offset 40
ARM GAS  /tmp/ccbMRYYM.s 			page 18


 682              	.LBB162:
 683              		.loc 1 94 26 view .LVU168
 684 000c 0029     		cmp	r1, #0
 685              	.LBE162:
  91:dsp/pvoc/phase_vocoder.cpp ****     const float* input_samples  = &input[0].l;
 686              		.loc 1 91 1 view .LVU169
 687 000e DDF828A0 		ldr	r10, [sp, #40]
 688              	.LBB163:
 689              		.loc 1 94 26 view .LVU170
 690 0012 18DD     		ble	.L22
 691 0014 8046     		mov	r8, r0
 692 0016 1546     		mov	r5, r2
 693 0018 1C46     		mov	r4, r3
 694 001a 00F15C07 		add	r7, r0, #92
 695              		.loc 1 94 17 view .LVU171
 696 001e 0026     		movs	r6, #0
 697              	.LVL53:
 698              	.L25:
  95:dsp/pvoc/phase_vocoder.cpp ****     {
  96:dsp/pvoc/phase_vocoder.cpp ****         stft_[i].Process(
 699              		.loc 1 96 9 is_stmt 1 discriminator 2 view .LVU172
 700              		.loc 1 96 25 is_stmt 0 discriminator 2 view .LVU173
 701 0020 0221     		movs	r1, #2
 702 0022 2346     		mov	r3, r4
 703 0024 2A46     		mov	r2, r5
 704 0026 3846     		mov	r0, r7
 705 0028 0191     		str	r1, [sp, #4]
 706 002a 4946     		mov	r1, r9
 707 002c CDF800A0 		str	r10, [sp]
  94:dsp/pvoc/phase_vocoder.cpp ****     for(int32_t i = 0; i < num_channels_; ++i)
 708              		.loc 1 94 5 discriminator 2 view .LVU174
 709 0030 0136     		adds	r6, r6, #1
 710              	.LVL54:
 711              		.loc 1 96 25 discriminator 2 view .LVU175
 712 0032 FFF7FEFF 		bl	_ZN4STFT7ProcessERK10ParametersPKfPfjj
 713              	.LVL55:
  94:dsp/pvoc/phase_vocoder.cpp ****     for(int32_t i = 0; i < num_channels_; ++i)
 714              		.loc 1 94 5 is_stmt 1 discriminator 2 view .LVU176
  94:dsp/pvoc/phase_vocoder.cpp ****     for(int32_t i = 0; i < num_channels_; ++i)
 715              		.loc 1 94 26 discriminator 2 view .LVU177
 716 0036 D8F86431 		ldr	r3, [r8, #356]
 717 003a 0434     		adds	r4, r4, #4
 718 003c 0435     		adds	r5, r5, #4
 719 003e B342     		cmp	r3, r6
 720 0040 07F15007 		add	r7, r7, #80
 721 0044 ECDC     		bgt	.L25
 722              	.LVL56:
 723              	.L22:
  94:dsp/pvoc/phase_vocoder.cpp ****     for(int32_t i = 0; i < num_channels_; ++i)
 724              		.loc 1 94 26 is_stmt 0 discriminator 2 view .LVU178
 725              	.LBE163:
  97:dsp/pvoc/phase_vocoder.cpp ****             parameters, input_samples + i, output_samples + i, size, 2);
  98:dsp/pvoc/phase_vocoder.cpp ****     }
  99:dsp/pvoc/phase_vocoder.cpp **** }
 726              		.loc 1 99 1 view .LVU179
 727 0046 02B0     		add	sp, sp, #8
 728              		.cfi_def_cfa_offset 32
ARM GAS  /tmp/ccbMRYYM.s 			page 19


 729              		@ sp needed
 730 0048 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 731              		.loc 1 99 1 view .LVU180
 732              		.cfi_endproc
 733              	.LFE4291:
 735              		.section	.text._ZN12PhaseVocoder6BufferEv,"ax",%progbits
 736              		.align	1
 737              		.p2align 2,,3
 738              		.global	_ZN12PhaseVocoder6BufferEv
 739              		.syntax unified
 740              		.thumb
 741              		.thumb_func
 742              		.fpu fpv5-d16
 744              	_ZN12PhaseVocoder6BufferEv:
 745              	.LVL57:
 746              	.LFB4292:
 100:dsp/pvoc/phase_vocoder.cpp **** 
 101:dsp/pvoc/phase_vocoder.cpp **** void PhaseVocoder::Buffer()
 102:dsp/pvoc/phase_vocoder.cpp **** {
 747              		.loc 1 102 1 is_stmt 1 view -0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 103:dsp/pvoc/phase_vocoder.cpp ****     for(int32_t i = 0; i < num_channels_; ++i)
 751              		.loc 1 103 5 view .LVU182
 752              	.LBB164:
 753              		.loc 1 103 26 view .LVU183
 754 0000 D0F86431 		ldr	r3, [r0, #356]
 755 0004 002B     		cmp	r3, #0
 756 0006 0EDD     		ble	.L32
 757              	.LBE164:
 102:dsp/pvoc/phase_vocoder.cpp ****     for(int32_t i = 0; i < num_channels_; ++i)
 758              		.loc 1 102 1 is_stmt 0 view .LVU184
 759 0008 70B5     		push	{r4, r5, r6, lr}
 760              		.cfi_def_cfa_offset 16
 761              		.cfi_offset 4, -16
 762              		.cfi_offset 5, -12
 763              		.cfi_offset 6, -8
 764              		.cfi_offset 14, -4
 765 000a 0646     		mov	r6, r0
 766 000c 00F15C05 		add	r5, r0, #92
 767              	.LBB165:
 768              		.loc 1 103 17 view .LVU185
 769 0010 0024     		movs	r4, #0
 770              	.LVL58:
 771              	.L29:
 104:dsp/pvoc/phase_vocoder.cpp ****     {
 105:dsp/pvoc/phase_vocoder.cpp ****         stft_[i].Buffer();
 772              		.loc 1 105 9 is_stmt 1 discriminator 2 view .LVU186
 773              		.loc 1 105 24 is_stmt 0 discriminator 2 view .LVU187
 774 0012 2846     		mov	r0, r5
 103:dsp/pvoc/phase_vocoder.cpp ****     {
 775              		.loc 1 103 5 discriminator 2 view .LVU188
 776 0014 0134     		adds	r4, r4, #1
 777              	.LVL59:
 778              		.loc 1 105 24 discriminator 2 view .LVU189
 779 0016 FFF7FEFF 		bl	_ZN4STFT6BufferEv
ARM GAS  /tmp/ccbMRYYM.s 			page 20


 780              	.LVL60:
 103:dsp/pvoc/phase_vocoder.cpp ****     {
 781              		.loc 1 103 5 is_stmt 1 discriminator 2 view .LVU190
 103:dsp/pvoc/phase_vocoder.cpp ****     {
 782              		.loc 1 103 26 discriminator 2 view .LVU191
 783 001a D6F86431 		ldr	r3, [r6, #356]
 784 001e 5035     		adds	r5, r5, #80
 785 0020 A342     		cmp	r3, r4
 786 0022 F6DC     		bgt	.L29
 787              	.LBE165:
 106:dsp/pvoc/phase_vocoder.cpp ****     }
 107:dsp/pvoc/phase_vocoder.cpp **** }
 788              		.loc 1 107 1 is_stmt 0 view .LVU192
 789 0024 70BD     		pop	{r4, r5, r6, pc}
 790              	.LVL61:
 791              	.L32:
 792              		.cfi_def_cfa_offset 0
 793              		.cfi_restore 4
 794              		.cfi_restore 5
 795              		.cfi_restore 6
 796              		.cfi_restore 14
 797              		.loc 1 107 1 view .LVU193
 798 0026 7047     		bx	lr
 799              		.cfi_endproc
 800              	.LFE4292:
 802              		.text
 803              	.Letext0:
 804              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 805              		.file 4 "../../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 806              		.file 5 "../../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 807              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 808              		.file 7 "/usr/include/newlib/c++/9.2.1/cmath"
 809              		.file 8 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 810              		.file 9 "/usr/include/newlib/c++/9.2.1/cstdlib"
 811              		.file 10 "/usr/include/newlib/c++/9.2.1/cstdint"
 812              		.file 11 "/usr/include/newlib/c++/9.2.1/type_traits"
 813              		.file 12 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/c++config.h"
 814              		.file 13 "/usr/include/newlib/c++/9.2.1/bits/stl_pair.h"
 815              		.file 14 "/usr/include/newlib/c++/9.2.1/debug/debug.h"
 816              		.file 15 "/usr/include/newlib/c++/9.2.1/bits/algorithmfwd.h"
 817              		.file 16 "/usr/include/newlib/c++/9.2.1/bits/exception_ptr.h"
 818              		.file 17 "/usr/include/newlib/c++/9.2.1/new"
 819              		.file 18 "/usr/include/newlib/c++/9.2.1/cstdarg"
 820              		.file 19 "/usr/include/newlib/c++/9.2.1/cstdio"
 821              		.file 20 "/usr/include/newlib/c++/9.2.1/cwchar"
 822              		.file 21 "/usr/include/newlib/c++/9.2.1/clocale"
 823              		.file 22 "/usr/include/newlib/c++/9.2.1/bits/basic_string.h"
 824              		.file 23 "/usr/include/newlib/c++/9.2.1/bits/uniform_int_dist.h"
 825              		.file 24 "/usr/include/newlib/c++/9.2.1/bits/random.h"
 826              		.file 25 "/usr/include/newlib/c++/9.2.1/cstring"
 827              		.file 26 "/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h"
 828              		.file 27 "/usr/include/newlib/c++/9.2.1/ext/numeric_traits.h"
 829              		.file 28 "/usr/include/newlib/c++/9.2.1/ext/new_allocator.h"
 830              		.file 29 "/usr/include/newlib/sys/_types.h"
 831              		.file 30 "<built-in>"
 832              		.file 31 "/usr/include/newlib/sys/reent.h"
 833              		.file 32 "/usr/include/newlib/sys/lock.h"
ARM GAS  /tmp/ccbMRYYM.s 			page 21


 834              		.file 33 "/usr/include/newlib/math.h"
 835              		.file 34 "/usr/include/newlib/stdlib.h"
 836              		.file 35 "/usr/include/newlib/c++/9.2.1/math.h"
 837              		.file 36 "/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h"
 838              		.file 37 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 839              		.file 38 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 840              		.file 39 "dsp/frame.h"
 841              		.file 40 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 842              		.file 41 "../../libdaisy/src/per/tim.h"
 843              		.file 42 "../../libdaisy/src/util/wav_format.h"
 844              		.file 43 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdarg.h"
 845              		.file 44 "/usr/include/newlib/stdio.h"
 846              		.file 45 "/usr/include/newlib/sys/unistd.h"
 847              		.file 46 "../../libdaisy/src/util/oled_fonts.h"
 848              		.file 47 "../../libdaisy/src/dev/sr_595.h"
 849              		.file 48 "../../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 850              		.file 49 "../../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 851              		.file 50 "../../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 852              		.file 51 "../../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 853              		.file 52 "../../libdaisy/src/util/sd_diskio.h"
 854              		.file 53 "../../libdaisy/src/sys/fatfs.h"
 855              		.file 54 "../../DaisySP/Source/Control/adenv.h"
 856              		.file 55 "../../DaisySP/Source/Utility/dsp.h"
 857              		.file 56 "/usr/include/newlib/wchar.h"
 858              		.file 57 "/usr/include/newlib/locale.h"
 859              		.file 58 "/usr/include/newlib/ctype.h"
 860              		.file 59 "/usr/include/newlib/sys/errno.h"
 861              		.file 60 "/usr/include/newlib/string.h"
 862              		.file 61 "./resources.h"
 863              		.file 62 "dsp/pvoc/frame_transformation.h"
 864              		.file 63 "dsp/pvoc/stft.h"
 865              		.file 64 "./shy_fft.h"
 866              		.file 65 "dsp/pvoc/phase_vocoder.h"
ARM GAS  /tmp/ccbMRYYM.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 phase_vocoder.cpp
     /tmp/ccbMRYYM.s:17     .text._ZN12PhaseVocoder4InitEPPvPjPKfjllf:0000000000000000 $t
     /tmp/ccbMRYYM.s:26     .text._ZN12PhaseVocoder4InitEPPvPjPKfjllf:0000000000000000 _ZN12PhaseVocoder4InitEPPvPjPKfjllf
     /tmp/ccbMRYYM.s:642    .text._ZN12PhaseVocoder7ProcessERK10ParametersPK10FloatFramePS3_j:0000000000000000 $t
     /tmp/ccbMRYYM.s:650    .text._ZN12PhaseVocoder7ProcessERK10ParametersPK10FloatFramePS3_j:0000000000000000 _ZN12PhaseVocoder7ProcessERK10ParametersPK10FloatFramePS3_j
     /tmp/ccbMRYYM.s:736    .text._ZN12PhaseVocoder6BufferEv:0000000000000000 $t
     /tmp/ccbMRYYM.s:744    .text._ZN12PhaseVocoder6BufferEv:0000000000000000 _ZN12PhaseVocoder6BufferEv

UNDEFINED SYMBOLS
_ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation
_ZN19FrameTransformation4InitEPfll
_ZN4STFT7ProcessERK10ParametersPKfPfjj
_ZN4STFT6BufferEv
