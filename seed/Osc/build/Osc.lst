ARM GAS  /tmp/ccjr3avU.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Osc.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1558:
  29              		.file 1 "../../libdaisy/src/hid/switch.h"
   1:../../libdaisy/src/hid/switch.h **** #pragma once
   2:../../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../../libdaisy/src/hid/switch.h **** 
   7:../../libdaisy/src/hid/switch.h **** namespace daisy
   8:../../libdaisy/src/hid/switch.h **** {
   9:../../libdaisy/src/hid/switch.h **** /** 
  10:../../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../../libdaisy/src/hid/switch.h ****     @date December 2019
  14:../../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../../libdaisy/src/hid/switch.h **** */
  16:../../libdaisy/src/hid/switch.h **** class Switch
  17:../../libdaisy/src/hid/switch.h **** {
  18:../../libdaisy/src/hid/switch.h ****   public:
  19:../../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../../libdaisy/src/hid/switch.h ****     enum Type
  21:../../libdaisy/src/hid/switch.h ****     {
  22:../../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../../libdaisy/src/hid/switch.h ****     };
  25:../../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../../libdaisy/src/hid/switch.h ****     {
  28:../../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
ARM GAS  /tmp/ccjr3avU.s 			page 2


  30:../../libdaisy/src/hid/switch.h ****     };
  31:../../libdaisy/src/hid/switch.h **** 
  32:../../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../../libdaisy/src/hid/switch.h ****     enum Pull
  34:../../libdaisy/src/hid/switch.h ****     {
  35:../../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../../libdaisy/src/hid/switch.h ****     };
  39:../../libdaisy/src/hid/switch.h **** 
  40:../../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 41 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 41 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1558:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy9DaisySeedD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy9DaisySeedD2Ev:
  52              	.LVL1:
  53              	.LFB2037:
  54              		.file 2 "../../libdaisy/src/daisy_seed.h"
   1:../../libdaisy/src/daisy_seed.h **** #pragma once
   2:../../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libdaisy/src/daisy_seed.h **** 
   5:../../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../../libdaisy/src/daisy_seed.h **** 
   7:../../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../../libdaisy/src/daisy_seed.h **** 
  10:../../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../../libdaisy/src/daisy_seed.h **** {
  12:../../libdaisy/src/daisy_seed.h **** /**
  13:../../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libdaisy/src/daisy_seed.h **** 
  16:../../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../../libdaisy/src/daisy_seed.h **** */
  18:../../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../../libdaisy/src/daisy_seed.h **** {
  20:../../libdaisy/src/daisy_seed.h ****   public:
  21:../../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
ARM GAS  /tmp/ccjr3avU.s 			page 3


  55              		.loc 2 22 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LBB94:
  61              	.LBI94:
  62              		.file 3 "../../libdaisy/src/sys/system.h"
   1:../../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libdaisy/src/sys/system.h **** 
   4:../../libdaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libdaisy/src/sys/system.h **** 
   6:../../libdaisy/src/sys/system.h **** #include <cstdint>
   7:../../libdaisy/src/sys/system.h **** #include "per/tim.h"
   8:../../libdaisy/src/sys/system.h **** 
   9:../../libdaisy/src/sys/system.h **** namespace daisy
  10:../../libdaisy/src/sys/system.h **** {
  11:../../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libdaisy/src/sys/system.h ****  **
  15:../../libdaisy/src/sys/system.h ****  ** @author shensley
  16:../../libdaisy/src/sys/system.h ****  ** @addtogroup system
  17:../../libdaisy/src/sys/system.h ****  */
  18:../../libdaisy/src/sys/system.h **** class System
  19:../../libdaisy/src/sys/system.h **** {
  20:../../libdaisy/src/sys/system.h ****   public:
  21:../../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libdaisy/src/sys/system.h ****     struct Config
  23:../../libdaisy/src/sys/system.h ****     {
  24:../../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../../libdaisy/src/sys/system.h ****         {
  27:../../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../../libdaisy/src/sys/system.h ****         };
  30:../../libdaisy/src/sys/system.h **** 
  31:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  34:../../libdaisy/src/sys/system.h ****          ** */
  35:../../libdaisy/src/sys/system.h ****         void Defaults()
  36:../../libdaisy/src/sys/system.h ****         {
  37:../../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  38:../../libdaisy/src/sys/system.h ****             use_dcache = true;
  39:../../libdaisy/src/sys/system.h ****             use_icache = true;
  40:../../libdaisy/src/sys/system.h ****         }
  41:../../libdaisy/src/sys/system.h **** 
  42:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  43:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  44:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  45:../../libdaisy/src/sys/system.h ****          ** */
  46:../../libdaisy/src/sys/system.h ****         void Boost()
  47:../../libdaisy/src/sys/system.h ****         {
  48:../../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  49:../../libdaisy/src/sys/system.h ****             use_dcache = true;
ARM GAS  /tmp/ccjr3avU.s 			page 4


  50:../../libdaisy/src/sys/system.h ****             use_icache = true;
  51:../../libdaisy/src/sys/system.h ****         }
  52:../../libdaisy/src/sys/system.h **** 
  53:../../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  54:../../libdaisy/src/sys/system.h ****         bool       use_dcache;
  55:../../libdaisy/src/sys/system.h ****         bool       use_icache;
  56:../../libdaisy/src/sys/system.h ****     };
  57:../../libdaisy/src/sys/system.h **** 
  58:../../libdaisy/src/sys/system.h ****     System() {}
  59:../../libdaisy/src/sys/system.h ****     ~System() {}
  63              		.loc 3 59 5 view .LVU3
  64              		.loc 3 59 5 is_stmt 0 view .LVU4
  65              	.LBE94:
  66              	.LBB95:
  67              	.LBI95:
  68              		.file 4 "../../libdaisy/src/hid/usb.h"
   1:../../libdaisy/src/hid/usb.h **** #pragma once
   2:../../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../../libdaisy/src/hid/usb.h **** 
   7:../../libdaisy/src/hid/usb.h **** namespace daisy
   8:../../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../../libdaisy/src/hid/usb.h ****     @{
  10:../../libdaisy/src/hid/usb.h **** */
  11:../../libdaisy/src/hid/usb.h **** 
  12:../../libdaisy/src/hid/usb.h **** {
  13:../../libdaisy/src/hid/usb.h **** /** 
  14:../../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../../libdaisy/src/hid/usb.h **** */
  18:../../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../../libdaisy/src/hid/usb.h **** {
  20:../../libdaisy/src/hid/usb.h ****   public:
  21:../../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libdaisy/src/hid/usb.h ****     enum class Result
  23:../../libdaisy/src/hid/usb.h ****     {
  24:../../libdaisy/src/hid/usb.h ****         OK,
  25:../../libdaisy/src/hid/usb.h ****         ERR,
  26:../../libdaisy/src/hid/usb.h ****     };
  27:../../libdaisy/src/hid/usb.h **** 
  28:../../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../../libdaisy/src/hid/usb.h ****     {
  31:../../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libdaisy/src/hid/usb.h ****     };
  35:../../libdaisy/src/hid/usb.h **** 
  36:../../libdaisy/src/hid/usb.h **** 
  37:../../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libdaisy/src/hid/usb.h **** 
  40:../../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../../libdaisy/src/hid/usb.h **** 
ARM GAS  /tmp/ccjr3avU.s 			page 5


  42:../../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  69              		.loc 4 42 5 is_stmt 1 view .LVU5
  70              		.loc 4 42 5 is_stmt 0 view .LVU6
  71              	.LBE95:
  72              	.LBB96:
  73              	.LBI96:
  74              		.file 5 "../../libdaisy/src/per/adc.h"
   1:../../libdaisy/src/per/adc.h **** #pragma once
   2:../../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../../libdaisy/src/per/adc.h **** 
   9:../../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../../libdaisy/src/per/adc.h **** 
  11:../../libdaisy/src/per/adc.h **** namespace daisy
  12:../../libdaisy/src/per/adc.h **** {
  13:../../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../../libdaisy/src/per/adc.h ****     @{
  15:../../libdaisy/src/per/adc.h **** */
  16:../../libdaisy/src/per/adc.h **** 
  17:../../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../../libdaisy/src/per/adc.h **** */
  21:../../libdaisy/src/per/adc.h **** 
  22:../../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../../libdaisy/src/per/adc.h **** {
  25:../../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../../libdaisy/src/per/adc.h ****     {
  28:../../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../../libdaisy/src/per/adc.h ****     };
  33:../../libdaisy/src/per/adc.h **** 
  34:../../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../../libdaisy/src/per/adc.h ****      */
  37:../../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../../libdaisy/src/per/adc.h **** 
  39:../../libdaisy/src/per/adc.h ****     /** 
  40:../../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../../libdaisy/src/per/adc.h ****     */
ARM GAS  /tmp/ccjr3avU.s 			page 6


  51:../../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
  53:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../../libdaisy/src/per/adc.h **** 
  57:../../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../../libdaisy/src/per/adc.h **** };
  61:../../libdaisy/src/per/adc.h **** 
  62:../../libdaisy/src/per/adc.h **** /**
  63:../../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../../libdaisy/src/per/adc.h **** */
  65:../../libdaisy/src/per/adc.h **** class AdcHandle
  66:../../libdaisy/src/per/adc.h **** {
  67:../../libdaisy/src/per/adc.h ****   public:
  68:../../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../../libdaisy/src/per/adc.h ****     {
  71:../../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../../libdaisy/src/per/adc.h ****     };
  83:../../libdaisy/src/per/adc.h **** 
  84:../../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
  75              		.loc 5 85 5 is_stmt 1 view .LVU7
  76              		.loc 5 85 5 is_stmt 0 view .LVU8
  77              	.LBE96:
  78              	.LBB97:
  79              	.LBI97:
  80              		.file 6 "../../libdaisy/src/hid/audio.h"
   1:../../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libdaisy/src/hid/audio.h **** 
   4:../../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../../libdaisy/src/hid/audio.h **** 
   6:../../libdaisy/src/hid/audio.h **** namespace daisy
   7:../../libdaisy/src/hid/audio.h **** {
   8:../../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../../libdaisy/src/hid/audio.h **** {
  10:../../libdaisy/src/hid/audio.h ****   public:
  11:../../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../../libdaisy/src/hid/audio.h ****     struct Config
  14:../../libdaisy/src/hid/audio.h ****     {
  15:../../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
ARM GAS  /tmp/ccjr3avU.s 			page 7


  17:../../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../../libdaisy/src/hid/audio.h ****     };
  19:../../libdaisy/src/hid/audio.h **** 
  20:../../libdaisy/src/hid/audio.h ****     enum class Result
  21:../../libdaisy/src/hid/audio.h ****     {
  22:../../libdaisy/src/hid/audio.h ****         OK,
  23:../../libdaisy/src/hid/audio.h ****         ERR,
  24:../../libdaisy/src/hid/audio.h ****     };
  25:../../libdaisy/src/hid/audio.h **** 
  26:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  27:../../libdaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  28:../../libdaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  29:../../libdaisy/src/hid/audio.h ****     */
  30:../../libdaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  31:../../libdaisy/src/hid/audio.h **** 
  32:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  33:../../libdaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  34:../../libdaisy/src/hid/audio.h ****     */
  35:../../libdaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  36:../../libdaisy/src/hid/audio.h **** 
  37:../../libdaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  38:../../libdaisy/src/hid/audio.h ****    * Non-Interleaving audio callbacks in daisy will be of this type
  39:../../libdaisy/src/hid/audio.h ****   */
  40:../../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  41:../../libdaisy/src/hid/audio.h ****                                   OutputBuffer out,
  42:../../libdaisy/src/hid/audio.h ****                                   size_t       size);
  43:../../libdaisy/src/hid/audio.h **** 
  44:../../libdaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  45:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  46:../../libdaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  47:../../libdaisy/src/hid/audio.h ****     */
  48:../../libdaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  49:../../libdaisy/src/hid/audio.h **** 
  50:../../libdaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  51:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  52:../../libdaisy/src/hid/audio.h ****     */
  53:../../libdaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  54:../../libdaisy/src/hid/audio.h **** 
  55:../../libdaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  56:../../libdaisy/src/hid/audio.h ****    * Interleaving audio callbacks in daisy must be of this type
  57:../../libdaisy/src/hid/audio.h ****   */
  58:../../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  59:../../libdaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  60:../../libdaisy/src/hid/audio.h ****                                               size_t                   size);
  61:../../libdaisy/src/hid/audio.h **** 
  62:../../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  63:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
  81              		.loc 6 63 5 is_stmt 1 view .LVU9
  82              		.loc 6 63 5 is_stmt 0 view .LVU10
  83              	.LBE97:
  84              		.loc 2 22 19 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE2037:
  89              		.weak	_ZN5daisy9DaisySeedD1Ev
  90              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  91 0002 00BF     		.section	.text._ZN7daisysp5AdEnvD2Ev,"axG",%progbits,_ZN7daisysp5AdEnvD5Ev,comdat
ARM GAS  /tmp/ccjr3avU.s 			page 8


  92              		.align	1
  93              		.p2align 2,,3
  94              		.weak	_ZN7daisysp5AdEnvD2Ev
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_ZN7daisysp5AdEnvD2Ev:
 101              	.LVL2:
 102              	.LFB2046:
 103              		.file 7 "../../DaisySP/Source/Control/adenv.h"
   1:../../DaisySP/Source/Control/adenv.h **** #pragma once
   2:../../DaisySP/Source/Control/adenv.h **** #ifndef ADENV_H
   3:../../DaisySP/Source/Control/adenv.h **** #define ADENV_H
   4:../../DaisySP/Source/Control/adenv.h **** #include <stdint.h>
   5:../../DaisySP/Source/Control/adenv.h **** #ifdef __cplusplus
   6:../../DaisySP/Source/Control/adenv.h **** 
   7:../../DaisySP/Source/Control/adenv.h **** namespace daisysp
   8:../../DaisySP/Source/Control/adenv.h **** {
   9:../../DaisySP/Source/Control/adenv.h **** /** Distinct stages that the phase of the envelope can be located in.
  10:../../DaisySP/Source/Control/adenv.h ****     @see AdEnv
  11:../../DaisySP/Source/Control/adenv.h **** */
  12:../../DaisySP/Source/Control/adenv.h **** enum AdEnvSegment
  13:../../DaisySP/Source/Control/adenv.h **** {
  14:../../DaisySP/Source/Control/adenv.h ****     /** located at phase location 0, and not currently running */
  15:../../DaisySP/Source/Control/adenv.h ****     ADENV_SEG_IDLE,
  16:../../DaisySP/Source/Control/adenv.h ****     /** First segment of envelope where phase moves from MIN value to MAX value */
  17:../../DaisySP/Source/Control/adenv.h ****     ADENV_SEG_ATTACK,
  18:../../DaisySP/Source/Control/adenv.h ****     /** Second segment of envelope where phase moves from MAX to MIN value */
  19:../../DaisySP/Source/Control/adenv.h ****     ADENV_SEG_DECAY,
  20:../../DaisySP/Source/Control/adenv.h ****     /** The final segment of the envelope (currently decay) */
  21:../../DaisySP/Source/Control/adenv.h ****     ADENV_SEG_LAST,
  22:../../DaisySP/Source/Control/adenv.h **** };
  23:../../DaisySP/Source/Control/adenv.h **** 
  24:../../DaisySP/Source/Control/adenv.h **** /** Trigger-able envelope with adjustable min/max, and independent per-segment time control.
  25:../../DaisySP/Source/Control/adenv.h **** 
  26:../../DaisySP/Source/Control/adenv.h ****     \author shensley
  27:../../DaisySP/Source/Control/adenv.h ****     \todo - Add Cycling
  28:../../DaisySP/Source/Control/adenv.h ****     \todo - Implement Curve (its only linear for now).
  29:../../DaisySP/Source/Control/adenv.h ****     \todo - Maybe make this an ADsr_ that has AD/AR/Asr_ modes.
  30:../../DaisySP/Source/Control/adenv.h ****  */
  31:../../DaisySP/Source/Control/adenv.h **** class AdEnv
  32:../../DaisySP/Source/Control/adenv.h **** {
  33:../../DaisySP/Source/Control/adenv.h ****   public:
  34:../../DaisySP/Source/Control/adenv.h ****     AdEnv() {}
  35:../../DaisySP/Source/Control/adenv.h ****     ~AdEnv() {}
 104              		.loc 7 35 5 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              		.loc 7 35 15 is_stmt 0 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE2046:
 114              		.weak	_ZN7daisysp5AdEnvD1Ev
 115              		.thumb_set _ZN7daisysp5AdEnvD1Ev,_ZN7daisysp5AdEnvD2Ev
ARM GAS  /tmp/ccjr3avU.s 			page 9


 116 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 117              		.align	1
 118              		.p2align 2,,3
 119              		.weak	_ZN7daisysp10OscillatorD2Ev
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_ZN7daisysp10OscillatorD2Ev:
 126              	.LVL3:
 127              	.LFB3674:
 128              		.file 8 "../../DaisySP/Source/Synthesis/oscillator.h"
   1:../../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../../DaisySP/Source/Synthesis/oscillator.h **** {
  10:../../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../../DaisySP/Source/Synthesis/oscillator.h **** */
  12:../../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
  13:../../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 129              		.loc 8 16 5 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              		.loc 8 16 20 is_stmt 0 view .LVU15
 135 0000 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE3674:
 139              		.weak	_ZN7daisysp10OscillatorD1Ev
 140              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 141 0002 00BF     		.section	.text._Z13AudioCallbackPKfPfj,"ax",%progbits
 142              		.align	1
 143              		.p2align 2,,3
 144              		.global	_Z13AudioCallbackPKfPfj
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	_Z13AudioCallbackPKfPfj:
 151              	.LVL4:
 152              	.LFB4212:
 153              		.file 9 "Osc.cpp"
   1:Osc.cpp       **** #include "daisy_seed.h"
   2:Osc.cpp       **** #include "daisysp.h"
   3:Osc.cpp       **** 
   4:Osc.cpp       **** // Use the daisy namespace to prevent having to type
   5:Osc.cpp       **** // daisy:: before all libdaisy functions
   6:Osc.cpp       **** using namespace daisy;
ARM GAS  /tmp/ccjr3avU.s 			page 10


   7:Osc.cpp       **** using namespace daisysp;
   8:Osc.cpp       **** 
   9:Osc.cpp       **** // Declare a DaisySeed object called hardware
  10:Osc.cpp       **** DaisySeed  hardware;
  11:Osc.cpp       **** Oscillator osc;
  12:Osc.cpp       **** AdEnv      env;
  13:Osc.cpp       **** 
  14:Osc.cpp       **** Switch button1;
  15:Osc.cpp       **** 
  16:Osc.cpp       **** void AudioCallback(AudioHandle::InterleavingInputBuffer  in,
  17:Osc.cpp       ****                    AudioHandle::InterleavingOutputBuffer out,
  18:Osc.cpp       ****                    size_t                                size)
  19:Osc.cpp       **** {
 154              		.loc 9 19 1 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
  20:Osc.cpp       ****     float osc_out, env_out;
 158              		.loc 9 20 5 view .LVU17
  21:Osc.cpp       **** 
  22:Osc.cpp       ****     //Nobody likes a bouncy button
  23:Osc.cpp       ****     button1.Debounce();
 159              		.loc 9 23 5 view .LVU18
  19:Osc.cpp       ****     float osc_out, env_out;
 160              		.loc 9 19 1 is_stmt 0 view .LVU19
 161 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 162              		.cfi_def_cfa_offset 24
 163              		.cfi_offset 3, -24
 164              		.cfi_offset 4, -20
 165              		.cfi_offset 5, -16
 166              		.cfi_offset 6, -12
 167              		.cfi_offset 7, -8
 168              		.cfi_offset 14, -4
 169              		.loc 9 23 21 view .LVU20
 170 0002 224D     		ldr	r5, .L15
  19:Osc.cpp       ****     float osc_out, env_out;
 171              		.loc 9 19 1 view .LVU21
 172 0004 0C46     		mov	r4, r1
 173 0006 1646     		mov	r6, r2
 174              		.loc 9 23 21 view .LVU22
 175 0008 2846     		mov	r0, r5
 176              	.LVL5:
 177              		.loc 9 23 21 view .LVU23
 178 000a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 179              	.LVL6:
  24:Osc.cpp       **** 
  25:Osc.cpp       ****     //If you push the button,...
  26:Osc.cpp       ****     if(button1.RisingEdge())
 180              		.loc 9 26 5 is_stmt 1 view .LVU24
  42:../../libdaisy/src/hid/switch.h **** 
  43:../../libdaisy/src/hid/switch.h ****     /** 
  44:../../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
ARM GAS  /tmp/ccjr3avU.s 			page 11


  50:../../libdaisy/src/hid/switch.h ****     */
  51:../../libdaisy/src/hid/switch.h ****     void
  52:../../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../../libdaisy/src/hid/switch.h **** 
  54:../../libdaisy/src/hid/switch.h ****     /**
  55:../../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../../libdaisy/src/hid/switch.h ****     */
  59:../../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../../libdaisy/src/hid/switch.h **** 
  61:../../libdaisy/src/hid/switch.h ****     /** 
  62:../../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../../libdaisy/src/hid/switch.h ****     */
  66:../../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../../libdaisy/src/hid/switch.h **** 
  68:../../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 181              		.loc 1 69 38 view .LVU25
 182              		.loc 9 26 5 is_stmt 0 view .LVU26
 183 000e 6B79     		ldrb	r3, [r5, #5]	@ zero_extendqisi2
 184 0010 7F2B     		cmp	r3, #127
 185 0012 03D1     		bne	.L7
  27:Osc.cpp       ****     {
  28:Osc.cpp       ****         env.Trigger(); //Trigger the envelope!
 186              		.loc 9 28 9 is_stmt 1 view .LVU27
 187              	.LBB98:
 188              	.LBI98:
  36:../../DaisySP/Source/Control/adenv.h ****     /** Initializes the ad envelope.
  37:../../DaisySP/Source/Control/adenv.h **** 
  38:../../DaisySP/Source/Control/adenv.h ****         Defaults:
  39:../../DaisySP/Source/Control/adenv.h ****             - current segment = idle
  40:../../DaisySP/Source/Control/adenv.h ****             - curve = linear
  41:../../DaisySP/Source/Control/adenv.h ****             - phase = 0
  42:../../DaisySP/Source/Control/adenv.h ****             - min = 0
  43:../../DaisySP/Source/Control/adenv.h ****             - max = 1
  44:../../DaisySP/Source/Control/adenv.h **** 
  45:../../DaisySP/Source/Control/adenv.h ****         \param sample_rate      sample rate of the audio engine being run
  46:../../DaisySP/Source/Control/adenv.h ****     */
  47:../../DaisySP/Source/Control/adenv.h ****     void Init(float sample_rate);
  48:../../DaisySP/Source/Control/adenv.h **** 
  49:../../DaisySP/Source/Control/adenv.h ****     /** Processes the current sample of the envelope. This should be called once
  50:../../DaisySP/Source/Control/adenv.h ****         per sample period.
  51:../../DaisySP/Source/Control/adenv.h ****         \return the current envelope value.
  52:../../DaisySP/Source/Control/adenv.h ****     */
  53:../../DaisySP/Source/Control/adenv.h ****     float Process();
  54:../../DaisySP/Source/Control/adenv.h **** 
  55:../../DaisySP/Source/Control/adenv.h ****     /** Starts or retriggers the envelope.*/
  56:../../DaisySP/Source/Control/adenv.h ****     inline void Trigger() { trigger_ = 1; }
 189              		.loc 7 56 17 view .LVU28
 190              	.LVL7:
 191              	.LBB99:
 192              		.loc 7 56 29 view .LVU29
 193              		.loc 7 56 38 is_stmt 0 view .LVU30
 194 0014 1E4B     		ldr	r3, .L15+4
ARM GAS  /tmp/ccjr3avU.s 			page 12


 195 0016 0122     		movs	r2, #1
 196 0018 83F83420 		strb	r2, [r3, #52]
 197              	.LVL8:
 198              	.L7:
 199              		.loc 7 56 38 view .LVU31
 200              	.LBE99:
 201              	.LBE98:
  29:Osc.cpp       ****     }
  30:Osc.cpp       **** 
  31:Osc.cpp       ****     //Convert floating point knob to midi (0-127)
  32:Osc.cpp       ****     //Then convert midi to freq. in Hz
  33:Osc.cpp       ****     osc.SetFreq(mtof(hardware.adc.GetFloat(0) * 127));
 202              		.loc 9 33 5 is_stmt 1 view .LVU32
 203              		.loc 9 33 43 is_stmt 0 view .LVU33
 204 001c 0021     		movs	r1, #0
 205 001e 1D48     		ldr	r0, .L15+8
 206 0020 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 207              	.LVL9:
 208 0024 F0EE406A 		vmov.f32	s13, s0
 209              	.LVL10:
 210              	.LBB100:
 211              	.LBI100:
 212              		.file 10 "../../DaisySP/Source/Utility/dsp.h"
   1:../../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../../DaisySP/Source/Utility/dsp.h **** */
   3:../../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../../DaisySP/Source/Utility/dsp.h **** 
  11:../../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../../DaisySP/Source/Utility/dsp.h **** */
  13:../../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../../DaisySP/Source/Utility/dsp.h **** 
  21:../../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../../DaisySP/Source/Utility/dsp.h **** {
  23:../../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../../DaisySP/Source/Utility/dsp.h **** 
  26:../../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../../DaisySP/Source/Utility/dsp.h **** 
  29:../../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../../DaisySP/Source/Utility/dsp.h **** */
  32:../../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../../DaisySP/Source/Utility/dsp.h **** {
  34:../../DaisySP/Source/Utility/dsp.h ****     float r;
ARM GAS  /tmp/ccjr3avU.s 			page 13


  35:../../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../../DaisySP/Source/Utility/dsp.h **** #else
  38:../../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../../DaisySP/Source/Utility/dsp.h **** }
  42:../../DaisySP/Source/Utility/dsp.h **** 
  43:../../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../../DaisySP/Source/Utility/dsp.h **** {
  45:../../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../../DaisySP/Source/Utility/dsp.h **** #else
  49:../../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../../DaisySP/Source/Utility/dsp.h **** }
  53:../../DaisySP/Source/Utility/dsp.h **** 
  54:../../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../../DaisySP/Source/Utility/dsp.h **** */
  56:../../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../../DaisySP/Source/Utility/dsp.h **** {
  58:../../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../../DaisySP/Source/Utility/dsp.h **** }
  60:../../DaisySP/Source/Utility/dsp.h **** 
  61:../../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../../DaisySP/Source/Utility/dsp.h **** */
  65:../../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../../DaisySP/Source/Utility/dsp.h **** {
  67:../../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../../DaisySP/Source/Utility/dsp.h **** }
  76:../../DaisySP/Source/Utility/dsp.h **** 
  77:../../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../../DaisySP/Source/Utility/dsp.h **** {
  79:../../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../../DaisySP/Source/Utility/dsp.h **** }
  88:../../DaisySP/Source/Utility/dsp.h **** 
  89:../../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../../DaisySP/Source/Utility/dsp.h **** */
ARM GAS  /tmp/ccjr3avU.s 			page 14


  92:../../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../../DaisySP/Source/Utility/dsp.h **** {
  94:../../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../../DaisySP/Source/Utility/dsp.h **** }
  96:../../DaisySP/Source/Utility/dsp.h **** 
  97:../../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../../DaisySP/Source/Utility/dsp.h **** */
 100:../../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../../DaisySP/Source/Utility/dsp.h **** {
 102:../../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../../DaisySP/Source/Utility/dsp.h **** }
 115:../../DaisySP/Source/Utility/dsp.h **** 
 116:../../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../../DaisySP/Source/Utility/dsp.h **** {
 118:../../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../../DaisySP/Source/Utility/dsp.h **** }
 120:../../DaisySP/Source/Utility/dsp.h **** 
 121:../../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../../DaisySP/Source/Utility/dsp.h **** */
 123:../../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 213              		.loc 10 123 14 is_stmt 1 view .LVU34
 214              	.LBB101:
 124:../../DaisySP/Source/Utility/dsp.h **** {
 125:../../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 215              		.loc 10 125 5 view .LVU35
 216              		.loc 10 125 23 is_stmt 0 view .LVU36
 217 0028 9FED1B7A 		vldr.32	s14, .L15+12
 218              		.loc 10 125 16 view .LVU37
 219 002c F2EE087A 		vmov.f32	s15, #1.2e+1
 220              		.loc 10 125 23 view .LVU38
 221 0030 DFED1A0A 		vldr.32	s1, .L15+16
 222              		.loc 10 125 16 view .LVU39
 223 0034 B0EE000A 		vmov.f32	s0, #2.0e+0
 224              	.LVL11:
 225              		.loc 10 125 16 view .LVU40
 226              	.LBE101:
 227              	.LBE100:
 228              	.LBB104:
 229              	.LBB105:
  17:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../../DaisySP/Source/Synthesis/oscillator.h ****     */
  19:../../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../../DaisySP/Source/Synthesis/oscillator.h ****     {
  21:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
ARM GAS  /tmp/ccjr3avU.s 			page 15


  23:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
  24:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../../DaisySP/Source/Synthesis/oscillator.h **** 
  37:../../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  45:../../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  48:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
  53:../../DaisySP/Source/Synthesis/oscillator.h ****     }
  54:../../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../../DaisySP/Source/Synthesis/oscillator.h ****     */
  58:../../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 230              		.loc 8 60 20 view .LVU41
 231 0038 194F     		ldr	r7, .L15+20
 232              	.LBE105:
 233              	.LBE104:
 234              	.LBB108:
 235              	.LBB102:
 236              		.loc 10 125 23 view .LVU42
 237 003a E6EE870A 		vfma.f32	s1, s13, s14
 238              		.loc 10 125 16 view .LVU43
 239 003e C0EEA70A 		vdiv.f32	s1, s1, s15
 240 0042 FFF7FEFF 		bl	powf
 241              	.LVL12:
 242              		.loc 10 125 43 view .LVU44
 243 0046 DFED177A 		vldr.32	s15, .L15+24
 244              	.LBE102:
 245              	.LBE108:
 246              	.LBB109:
 247              	.LBB106:
  61:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
ARM GAS  /tmp/ccjr3avU.s 			page 16


 248              		.loc 8 61 34 view .LVU45
 249 004a 3846     		mov	r0, r7
 250              	.LBE106:
 251              	.LBE109:
 252              	.LBB110:
 253              	.LBB103:
 254              		.loc 10 125 43 view .LVU46
 255 004c 20EE270A 		vmul.f32	s0, s0, s15
 256              	.LVL13:
 257              		.loc 10 125 43 view .LVU47
 258              	.LBE103:
 259              	.LBE110:
 260              	.LBB111:
 261              	.LBI104:
  58:../../DaisySP/Source/Synthesis/oscillator.h ****     {
 262              		.loc 8 58 17 is_stmt 1 view .LVU48
 263              	.LBB107:
  60:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 264              		.loc 8 60 9 view .LVU49
  60:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 265              		.loc 8 60 20 is_stmt 0 view .LVU50
 266 0050 87ED020A 		vstr.32	s0, [r7, #8]
 267              		.loc 8 61 9 is_stmt 1 view .LVU51
 268              		.loc 8 61 34 is_stmt 0 view .LVU52
 269 0054 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 270              	.LVL14:
 271              		.loc 8 61 20 view .LVU53
 272 0058 87ED060A 		vstr.32	s0, [r7, #24]
 273              	.LVL15:
 274              		.loc 8 61 20 view .LVU54
 275              	.LBE107:
 276              	.LBE111:
  34:Osc.cpp       **** 
  35:Osc.cpp       ****     //Fill the block with samples
  36:Osc.cpp       ****     for(size_t i = 0; i < size; i += 2)
 277              		.loc 9 36 5 is_stmt 1 view .LVU55
 278              	.LBB112:
 279              		.loc 9 36 25 view .LVU56
 280 005c A6B1     		cbz	r6, .L6
 281 005e 013E     		subs	r6, r6, #1
 282              	.LVL16:
 283              		.loc 9 36 16 is_stmt 0 view .LVU57
 284 0060 0025     		movs	r5, #0
 285 0062 26F00106 		bic	r6, r6, #1
 286              	.LVL17:
 287              	.L9:
  37:Osc.cpp       ****     {
  38:Osc.cpp       ****         //Get the next envelope value
  39:Osc.cpp       ****         env_out = env.Process();
 288              		.loc 9 39 9 is_stmt 1 discriminator 2 view .LVU58
 289              		.loc 9 39 30 is_stmt 0 discriminator 2 view .LVU59
 290 0066 0A48     		ldr	r0, .L15+4
 291 0068 0834     		adds	r4, r4, #8
 292 006a FFF7FEFF 		bl	_ZN7daisysp5AdEnv7ProcessEv
 293              	.LVL18:
  40:Osc.cpp       ****         //Set the oscillator volume to the latest env value
  41:Osc.cpp       ****         osc.SetAmp(env_out);
ARM GAS  /tmp/ccjr3avU.s 			page 17


 294              		.loc 9 41 9 is_stmt 1 discriminator 2 view .LVU60
 295              	.LBB113:
 296              	.LBI113:
  62:../../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../../DaisySP/Source/Synthesis/oscillator.h **** 
  65:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
 297              		.loc 8 67 17 discriminator 2 view .LVU61
 298              	.LBB114:
 299              		.loc 8 67 41 discriminator 2 view .LVU62
 300              	.LBE114:
 301              	.LBE113:
  42:Osc.cpp       ****         //get the next oscillator sample
  43:Osc.cpp       ****         osc_out = osc.Process();
 302              		.loc 9 43 30 is_stmt 0 discriminator 2 view .LVU63
 303 006e 0C48     		ldr	r0, .L15+20
 304              	.LBB116:
 305              	.LBB115:
 306              		.loc 8 67 46 discriminator 2 view .LVU64
 307 0070 87ED010A 		vstr.32	s0, [r7, #4]
 308              	.LVL19:
 309              		.loc 8 67 46 discriminator 2 view .LVU65
 310              	.LBE115:
 311              	.LBE116:
 312              		.loc 9 43 9 is_stmt 1 discriminator 2 view .LVU66
 313              		.loc 9 43 30 is_stmt 0 discriminator 2 view .LVU67
 314 0074 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 315              	.LVL20:
  44:Osc.cpp       **** 
  45:Osc.cpp       ****         //Set the left and right outputs
  46:Osc.cpp       ****         out[i]     = osc_out;
 316              		.loc 9 46 9 is_stmt 1 discriminator 2 view .LVU68
  36:Osc.cpp       ****     {
 317              		.loc 9 36 25 is_stmt 0 discriminator 2 view .LVU69
 318 0078 B542     		cmp	r5, r6
 319              		.loc 9 46 20 discriminator 2 view .LVU70
 320 007a 04ED020A 		vstr.32	s0, [r4, #-8]
  47:Osc.cpp       ****         out[i + 1] = osc_out;
 321              		.loc 9 47 9 is_stmt 1 discriminator 2 view .LVU71
 322              		.loc 9 47 20 is_stmt 0 discriminator 2 view .LVU72
 323 007e 04ED010A 		vstr.32	s0, [r4, #-4]
  36:Osc.cpp       ****     {
 324              		.loc 9 36 5 is_stmt 1 discriminator 2 view .LVU73
  36:Osc.cpp       ****     {
 325              		.loc 9 36 25 discriminator 2 view .LVU74
 326 0082 05F10205 		add	r5, r5, #2
 327              	.LVL21:
  36:Osc.cpp       ****     {
 328              		.loc 9 36 25 is_stmt 0 discriminator 2 view .LVU75
 329 0086 EED1     		bne	.L9
 330              	.LVL22:
 331              	.L6:
  36:Osc.cpp       ****     {
 332              		.loc 9 36 25 discriminator 2 view .LVU76
 333              	.LBE112:
ARM GAS  /tmp/ccjr3avU.s 			page 18


  48:Osc.cpp       ****     }
  49:Osc.cpp       **** }
 334              		.loc 9 49 1 view .LVU77
 335 0088 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 336              	.L16:
 337 008a 00BF     		.align	2
 338              	.L15:
 339 008c 00000000 		.word	.LANCHOR0
 340 0090 00000000 		.word	.LANCHOR1
 341 0094 18000000 		.word	.LANCHOR2+24
 342 0098 0000FE42 		.word	1123942400
 343 009c 00008AC2 		.word	3263823872
 344 00a0 00000000 		.word	.LANCHOR3
 345 00a4 0000DC43 		.word	1138491392
 346              		.cfi_endproc
 347              	.LFE4212:
 349              		.section	.text.startup.main,"ax",%progbits
 350              		.align	1
 351              		.p2align 2,,3
 352              		.global	main
 353              		.syntax unified
 354              		.thumb
 355              		.thumb_func
 356              		.fpu fpv5-d16
 358              	main:
 359              	.LFB4213:
  50:Osc.cpp       **** 
  51:Osc.cpp       **** 
  52:Osc.cpp       **** int main(void)
  53:Osc.cpp       **** {
 360              		.loc 9 53 1 is_stmt 1 view -0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 32
 363              		@ frame_needed = 0, uses_anonymous_args = 0
  54:Osc.cpp       ****     // Configure and Initialize the Daisy Seed
  55:Osc.cpp       ****     // These are separate to allow reconfiguration of any of the internal
  56:Osc.cpp       ****     // components before initialization.
  57:Osc.cpp       ****     hardware.Configure();
 364              		.loc 9 57 5 view .LVU79
  53:Osc.cpp       ****     // Configure and Initialize the Daisy Seed
 365              		.loc 9 53 1 is_stmt 0 view .LVU80
 366 0000 70B5     		push	{r4, r5, r6, lr}
 367              		.cfi_def_cfa_offset 16
 368              		.cfi_offset 4, -16
 369              		.cfi_offset 5, -12
 370              		.cfi_offset 6, -8
 371              		.cfi_offset 14, -4
 372              		.loc 9 57 23 view .LVU81
 373 0002 3648     		ldr	r0, .L20
 374              	.LBB117:
 375              	.LBB118:
  48:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 376              		.loc 8 48 20 view .LVU82
 377 0004 0026     		movs	r6, #0
  44:../../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 378              		.loc 8 44 20 view .LVU83
 379 0006 364C     		ldr	r4, .L20+4
ARM GAS  /tmp/ccjr3avU.s 			page 19


 380              	.LBE118:
 381              	.LBE117:
  58:Osc.cpp       ****     hardware.Init();
  59:Osc.cpp       ****     ;
  60:Osc.cpp       **** 
  61:Osc.cpp       ****     //How many samples we'll output per second
  62:Osc.cpp       ****     float samplerate = hardware.AudioSampleRate();
  63:Osc.cpp       **** 
  64:Osc.cpp       ****     //Create an ADC configuration
  65:Osc.cpp       ****     AdcChannelConfig adcConfig;
  66:Osc.cpp       ****     //Add pin 21 as an analog input in this config. We'll use this to read the knob
  67:Osc.cpp       ****     adcConfig.InitSingle(hardware.GetPin(21));
  68:Osc.cpp       **** 
  69:Osc.cpp       ****     //Initialize the button on pin 28
  70:Osc.cpp       ****     button1.Init(hardware.GetPin(28), samplerate / 48.f);
  71:Osc.cpp       **** 
  72:Osc.cpp       ****     //Set the ADC to use our configuration
  73:Osc.cpp       ****     hardware.adc.Init(&adcConfig, 1);
  74:Osc.cpp       **** 
  75:Osc.cpp       ****     //Set up oscillator
  76:Osc.cpp       ****     osc.Init(samplerate);
  77:Osc.cpp       ****     osc.SetWaveform(osc.WAVE_SIN);
  78:Osc.cpp       ****     osc.SetAmp(1.f);
  79:Osc.cpp       ****     osc.SetFreq(1000);
  80:Osc.cpp       **** 
  81:Osc.cpp       ****     //Set up volume envelope
  82:Osc.cpp       ****     env.Init(samplerate);
 382              		.loc 9 82 13 view .LVU84
 383 0008 364D     		ldr	r5, .L20+8
  53:Osc.cpp       ****     // Configure and Initialize the Daisy Seed
 384              		.loc 9 53 1 view .LVU85
 385 000a 2DED028B 		vpush.64	{d8}
 386              		.cfi_def_cfa_offset 24
 387              		.cfi_offset 80, -24
 388              		.cfi_offset 81, -20
 389 000e 88B0     		sub	sp, sp, #32
 390              		.cfi_def_cfa_offset 56
 391              	.LBB122:
 392              	.LBB119:
  45:../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 393              		.loc 8 45 27 view .LVU86
 394 0010 F7EE008A 		vmov.f32	s17, #1.0e+0
 395              	.LBE119:
 396              	.LBE122:
  57:Osc.cpp       ****     hardware.Init();
 397              		.loc 9 57 23 view .LVU87
 398 0014 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 399              	.LVL23:
  58:Osc.cpp       ****     ;
 400              		.loc 9 58 5 is_stmt 1 view .LVU88
  58:Osc.cpp       ****     ;
 401              		.loc 9 58 18 is_stmt 0 view .LVU89
 402 0018 0021     		movs	r1, #0
 403 001a 3048     		ldr	r0, .L20
 404 001c FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 405              	.LVL24:
  59:Osc.cpp       **** 
ARM GAS  /tmp/ccjr3avU.s 			page 20


 406              		.loc 9 59 5 is_stmt 1 view .LVU90
  62:Osc.cpp       **** 
 407              		.loc 9 62 5 view .LVU91
  62:Osc.cpp       **** 
 408              		.loc 9 62 48 is_stmt 0 view .LVU92
 409 0020 2E48     		ldr	r0, .L20
 410 0022 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 411              	.LVL25:
  67:Osc.cpp       **** 
 412              		.loc 9 67 25 view .LVU93
 413 0026 1520     		movs	r0, #21
  62:Osc.cpp       **** 
 414              		.loc 9 62 48 view .LVU94
 415 0028 B0EE408A 		vmov.f32	s16, s0
 416              	.LVL26:
  65:Osc.cpp       ****     //Add pin 21 as an analog input in this config. We'll use this to read the knob
 417              		.loc 9 65 5 is_stmt 1 view .LVU95
  67:Osc.cpp       **** 
 418              		.loc 9 67 5 view .LVU96
  67:Osc.cpp       **** 
 419              		.loc 9 67 25 is_stmt 0 view .LVU97
 420 002c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 421              	.LVL27:
  67:Osc.cpp       **** 
 422              		.loc 9 67 25 view .LVU98
 423 0030 0346     		mov	r3, r0	@ movhi
 424 0032 03A8     		add	r0, sp, #12
 425 0034 ADF80430 		strh	r3, [sp, #4]	@ movhi
 426 0038 0199     		ldr	r1, [sp, #4]
 427 003a FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 428              	.LVL28:
  70:Osc.cpp       **** 
 429              		.loc 9 70 5 is_stmt 1 view .LVU99
  70:Osc.cpp       **** 
 430              		.loc 9 70 17 is_stmt 0 view .LVU100
 431 003e 1C20     		movs	r0, #28
 432 0040 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 433              	.LVL29:
 434 0044 9FED280A 		vldr.32	s0, .L20+12
 435 0048 ADF80800 		strh	r0, [sp, #8]	@ movhi
 436 004c 88EE000A 		vdiv.f32	s0, s16, s0
 437 0050 0299     		ldr	r1, [sp, #8]
 438 0052 2648     		ldr	r0, .L20+16
 439 0054 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 440              	.LVL30:
  73:Osc.cpp       **** 
 441              		.loc 9 73 5 is_stmt 1 view .LVU101
  73:Osc.cpp       **** 
 442              		.loc 9 73 22 is_stmt 0 view .LVU102
 443 0058 03A9     		add	r1, sp, #12
 444 005a 0122     		movs	r2, #1
 445 005c 0423     		movs	r3, #4
 446 005e 2448     		ldr	r0, .L20+20
 447 0060 FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 448              	.LVL31:
  76:Osc.cpp       ****     osc.SetWaveform(osc.WAVE_SIN);
 449              		.loc 9 76 5 is_stmt 1 view .LVU103
ARM GAS  /tmp/ccjr3avU.s 			page 21


 450              	.LBB123:
 451              	.LBI117:
  42:../../DaisySP/Source/Synthesis/oscillator.h ****     {
 452              		.loc 8 42 10 view .LVU104
 453              	.LBB120:
  44:../../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 454              		.loc 8 44 9 view .LVU105
  45:../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 455              		.loc 8 45 27 is_stmt 0 view .LVU106
 456 0064 C8EE887A 		vdiv.f32	s15, s17, s16
  47:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 457              		.loc 8 47 20 view .LVU107
 458 0068 4FF07C53 		mov	r3, #1056964608
  46:../../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 459              		.loc 8 46 20 view .LVU108
 460 006c 9FED210A 		vldr.32	s0, .L20+24
  49:../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 461              		.loc 8 49 34 view .LVU109
 462 0070 2046     		mov	r0, r4
  44:../../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 463              		.loc 8 44 20 view .LVU110
 464 0072 84ED038A 		vstr.32	s16, [r4, #12]
  45:../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 465              		.loc 8 45 9 is_stmt 1 view .LVU111
  47:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 466              		.loc 8 47 20 is_stmt 0 view .LVU112
 467 0076 6360     		str	r3, [r4, #4]	@ float
  46:../../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 468              		.loc 8 46 20 view .LVU113
 469 0078 84ED020A 		vstr.32	s0, [r4, #8]
  48:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 470              		.loc 8 48 20 view .LVU114
 471 007c 6661     		str	r6, [r4, #20]	@ float
  45:../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 472              		.loc 8 45 20 view .LVU115
 473 007e C4ED047A 		vstr.32	s15, [r4, #16]
  46:../../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 474              		.loc 8 46 9 is_stmt 1 view .LVU116
  47:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 475              		.loc 8 47 9 view .LVU117
  48:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 476              		.loc 8 48 9 view .LVU118
  49:../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 477              		.loc 8 49 9 view .LVU119
  49:../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 478              		.loc 8 49 34 is_stmt 0 view .LVU120
 479 0082 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 480              	.LVL32:
 481 0086 F0EE407A 		vmov.f32	s15, s0
  50:../../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 482              		.loc 8 50 20 view .LVU121
 483 008a 0022     		movs	r2, #0
  52:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 484              		.loc 8 52 20 view .LVU122
 485 008c 40F20113 		movw	r3, #257
 486              	.LBE120:
 487              	.LBE123:
ARM GAS  /tmp/ccjr3avU.s 			page 22


 488              	.LBB124:
 489              	.LBB125:
  60:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 490              		.loc 8 60 20 view .LVU123
 491 0090 9FED190A 		vldr.32	s0, .L20+28
  61:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 492              		.loc 8 61 34 view .LVU124
 493 0094 2046     		mov	r0, r4
 494              	.LBE125:
 495              	.LBE124:
 496              	.LBB129:
 497              	.LBB121:
  50:../../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 498              		.loc 8 50 20 view .LVU125
 499 0096 2270     		strb	r2, [r4]
  52:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 500              		.loc 8 52 20 view .LVU126
 501 0098 A384     		strh	r3, [r4, #36]	@ movhi
  49:../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 502              		.loc 8 49 20 view .LVU127
 503 009a C4ED067A 		vstr.32	s15, [r4, #24]
  50:../../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 504              		.loc 8 50 9 is_stmt 1 view .LVU128
  51:../../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 505              		.loc 8 51 9 view .LVU129
  52:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 506              		.loc 8 52 9 view .LVU130
 507              	.LVL33:
  52:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 508              		.loc 8 52 9 is_stmt 0 view .LVU131
 509              	.LBE121:
 510              	.LBE129:
  77:Osc.cpp       ****     osc.SetAmp(1.f);
 511              		.loc 9 77 5 is_stmt 1 view .LVU132
  68:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 512              		.loc 8 72 9 view .LVU133
  78:Osc.cpp       ****     osc.SetFreq(1000);
 513              		.loc 9 78 5 view .LVU134
 514              	.LBB130:
 515              	.LBI130:
  67:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 516              		.loc 8 67 17 view .LVU135
 517              	.LBB131:
  67:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 518              		.loc 8 67 41 view .LVU136
  67:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 519              		.loc 8 67 41 is_stmt 0 view .LVU137
 520              	.LBE131:
 521              	.LBE130:
  79:Osc.cpp       **** 
 522              		.loc 9 79 5 is_stmt 1 view .LVU138
 523              	.LBB133:
 524              	.LBI124:
ARM GAS  /tmp/ccjr3avU.s 			page 23


  58:../../DaisySP/Source/Synthesis/oscillator.h ****     {
 525              		.loc 8 58 17 view .LVU139
 526              	.LBB126:
  60:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 527              		.loc 8 60 9 view .LVU140
 528              	.LBE126:
 529              	.LBE133:
 530              	.LBB134:
 531              	.LBB132:
  67:../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 532              		.loc 8 67 46 is_stmt 0 view .LVU141
 533 009e C4ED018A 		vstr.32	s17, [r4, #4]
 534              	.LBE132:
 535              	.LBE134:
 536              	.LBB135:
 537              	.LBB127:
  60:../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 538              		.loc 8 60 20 view .LVU142
 539 00a2 84ED020A 		vstr.32	s0, [r4, #8]
  61:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 540              		.loc 8 61 9 is_stmt 1 view .LVU143
  61:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 541              		.loc 8 61 34 is_stmt 0 view .LVU144
 542 00a6 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 543              	.LVL34:
 544 00aa F0EE407A 		vmov.f32	s15, s0
 545              	.LBE127:
 546              	.LBE135:
 547              		.loc 9 82 13 view .LVU145
 548 00ae 2846     		mov	r0, r5
 549 00b0 B0EE480A 		vmov.f32	s0, s16
 550              	.LBB136:
 551              	.LBB128:
  61:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 552              		.loc 8 61 20 view .LVU146
 553 00b4 C4ED067A 		vstr.32	s15, [r4, #24]
 554              	.LVL35:
  61:../../DaisySP/Source/Synthesis/oscillator.h ****     }
 555              		.loc 8 61 20 view .LVU147
 556              	.LBE128:
 557              	.LBE136:
 558              		.loc 9 82 5 is_stmt 1 view .LVU148
 559              		.loc 9 82 13 is_stmt 0 view .LVU149
 560 00b8 FFF7FEFF 		bl	_ZN7daisysp5AdEnv4InitEf
 561              	.LVL36:
  83:Osc.cpp       ****     //Envelope attack and decay times
  84:Osc.cpp       ****     env.SetTime(ADENV_SEG_ATTACK, .01);
 562              		.loc 9 84 5 is_stmt 1 view .LVU150
 563              	.LBB137:
 564              	.LBI137:
  57:../../DaisySP/Source/Control/adenv.h ****     /** Sets the length of time (in seconds) for a specific segment. */
  58:../../DaisySP/Source/Control/adenv.h ****     inline void SetTime(uint8_t seg, float time) { segment_time_[seg] = time; }
 565              		.loc 7 58 17 view .LVU151
 566              	.LBB138:
 567              		.loc 7 58 52 view .LVU152
 568              		.loc 7 58 71 is_stmt 0 view .LVU153
 569 00bc 0F4A     		ldr	r2, .L20+32
ARM GAS  /tmp/ccjr3avU.s 			page 24


 570              	.LBE138:
 571              	.LBE137:
 572              	.LBB140:
 573              	.LBB141:
 574 00be 104B     		ldr	r3, .L20+36
 575              	.LBE141:
 576              	.LBE140:
  85:Osc.cpp       ****     env.SetTime(ADENV_SEG_DECAY, .4);
  86:Osc.cpp       ****     //minimum and maximum envelope values
  87:Osc.cpp       ****     env.SetMin(0.0);
  88:Osc.cpp       ****     env.SetMax(1.f);
  89:Osc.cpp       ****     env.SetCurve(0); // linear
  90:Osc.cpp       **** 
  91:Osc.cpp       ****     //Start the adc
  92:Osc.cpp       ****     hardware.adc.Start();
 577              		.loc 9 92 23 view .LVU154
 578 00c0 0B48     		ldr	r0, .L20+20
 579              	.LBB143:
 580              	.LBB144:
  59:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
  60:../../DaisySP/Source/Control/adenv.h ****         curve. Input range: -100 to 100.  (or more)
  61:../../DaisySP/Source/Control/adenv.h ****     */
  62:../../DaisySP/Source/Control/adenv.h ****     inline void SetCurve(float scalar) { curve_scalar_ = scalar; }
  63:../../DaisySP/Source/Control/adenv.h ****     /** Sets the minimum value of the envelope output.
  64:../../DaisySP/Source/Control/adenv.h ****         Input range: -FLTmax_, to FLTmax_
  65:../../DaisySP/Source/Control/adenv.h ****     */
  66:../../DaisySP/Source/Control/adenv.h ****     inline void SetMin(float min) { min_ = min; }
 581              		.loc 7 66 42 view .LVU155
 582 00c2 6E61     		str	r6, [r5, #20]	@ float
 583              	.LBE144:
 584              	.LBE143:
 585              	.LBB146:
 586              	.LBB147:
  67:../../DaisySP/Source/Control/adenv.h ****     /** Sets the maximum value of the envelope output.
  68:../../DaisySP/Source/Control/adenv.h ****         Input range: -FLTmax_, to FLTmax_
  69:../../DaisySP/Source/Control/adenv.h ****     */
  70:../../DaisySP/Source/Control/adenv.h ****     inline void SetMax(float max) { max_ = max; }
 587              		.loc 7 70 42 view .LVU156
 588 00c4 C5ED068A 		vstr.32	s17, [r5, #24]
 589              	.LBE147:
 590              	.LBE146:
 591              	.LBB149:
 592              	.LBB150:
  62:../../DaisySP/Source/Control/adenv.h ****     /** Sets the minimum value of the envelope output.
 593              		.loc 7 62 56 view .LVU157
 594 00c8 2E62     		str	r6, [r5, #32]	@ float
 595              	.LBE150:
 596              	.LBE149:
 597              	.LBB152:
 598              	.LBB139:
  58:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
 599              		.loc 7 58 71 view .LVU158
 600 00ca AA60     		str	r2, [r5, #8]	@ float
 601              	.LVL37:
  58:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
 602              		.loc 7 58 71 view .LVU159
 603              	.LBE139:
ARM GAS  /tmp/ccjr3avU.s 			page 25


 604              	.LBE152:
  85:Osc.cpp       ****     //minimum and maximum envelope values
 605              		.loc 9 85 5 is_stmt 1 view .LVU160
 606              	.LBB153:
 607              	.LBI140:
  58:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
 608              		.loc 7 58 17 view .LVU161
 609              	.LBB142:
  58:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
 610              		.loc 7 58 52 view .LVU162
  58:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
 611              		.loc 7 58 71 is_stmt 0 view .LVU163
 612 00cc EB60     		str	r3, [r5, #12]	@ float
 613              	.LVL38:
  58:../../DaisySP/Source/Control/adenv.h ****     /** Sets the amount of curve applied. A positve value will create a log
 614              		.loc 7 58 71 view .LVU164
 615              	.LBE142:
 616              	.LBE153:
  87:Osc.cpp       ****     env.SetMax(1.f);
 617              		.loc 9 87 5 is_stmt 1 view .LVU165
 618              	.LBB154:
 619              	.LBI143:
  66:../../DaisySP/Source/Control/adenv.h ****     /** Sets the maximum value of the envelope output.
 620              		.loc 7 66 17 view .LVU166
 621              	.LBB145:
  66:../../DaisySP/Source/Control/adenv.h ****     /** Sets the maximum value of the envelope output.
 622              		.loc 7 66 37 view .LVU167
  66:../../DaisySP/Source/Control/adenv.h ****     /** Sets the maximum value of the envelope output.
 623              		.loc 7 66 37 is_stmt 0 view .LVU168
 624              	.LBE145:
 625              	.LBE154:
  88:Osc.cpp       ****     env.SetCurve(0); // linear
 626              		.loc 9 88 5 is_stmt 1 view .LVU169
 627              	.LBB155:
 628              	.LBI146:
 629              		.loc 7 70 17 view .LVU170
 630              	.LBB148:
 631              		.loc 7 70 37 view .LVU171
 632              		.loc 7 70 37 is_stmt 0 view .LVU172
 633              	.LBE148:
 634              	.LBE155:
  89:Osc.cpp       **** 
 635              		.loc 9 89 5 is_stmt 1 view .LVU173
 636              	.LBB156:
 637              	.LBI149:
  62:../../DaisySP/Source/Control/adenv.h ****     /** Sets the minimum value of the envelope output.
 638              		.loc 7 62 17 view .LVU174
 639              	.LBB151:
  62:../../DaisySP/Source/Control/adenv.h ****     /** Sets the minimum value of the envelope output.
 640              		.loc 7 62 42 view .LVU175
  62:../../DaisySP/Source/Control/adenv.h ****     /** Sets the minimum value of the envelope output.
 641              		.loc 7 62 42 is_stmt 0 view .LVU176
 642              	.LBE151:
 643              	.LBE156:
 644              		.loc 9 92 5 is_stmt 1 view .LVU177
 645              		.loc 9 92 23 is_stmt 0 view .LVU178
 646 00ce FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
ARM GAS  /tmp/ccjr3avU.s 			page 26


 647              	.LVL39:
  93:Osc.cpp       **** 
  94:Osc.cpp       ****     //Start calling the audio callback
  95:Osc.cpp       ****     hardware.StartAudio(AudioCallback);
 648              		.loc 9 95 5 is_stmt 1 view .LVU179
 649              		.loc 9 95 24 is_stmt 0 view .LVU180
 650 00d2 0C49     		ldr	r1, .L20+40
 651 00d4 0148     		ldr	r0, .L20
 652 00d6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKfPfjE
 653              	.LVL40:
 654              	.L18:
  96:Osc.cpp       **** 
  97:Osc.cpp       ****     // Loop forever
  98:Osc.cpp       ****     for(;;) {}
 655              		.loc 9 98 5 is_stmt 1 discriminator 1 view .LVU181
 656              		.loc 9 98 5 discriminator 1 view .LVU182
 657              		.loc 9 98 5 discriminator 1 view .LVU183
 658              		.loc 9 98 5 discriminator 1 view .LVU184
 659 00da FEE7     		b	.L18
 660              	.L21:
 661              		.align	2
 662              	.L20:
 663 00dc 00000000 		.word	.LANCHOR2
 664 00e0 00000000 		.word	.LANCHOR3
 665 00e4 00000000 		.word	.LANCHOR1
 666 00e8 00004042 		.word	1111490560
 667 00ec 00000000 		.word	.LANCHOR0
 668 00f0 18000000 		.word	.LANCHOR2+24
 669 00f4 0000C842 		.word	1120403456
 670 00f8 00007A44 		.word	1148846080
 671 00fc 0AD7233C 		.word	1008981770
 672 0100 CDCCCC3E 		.word	1053609165
 673 0104 00000000 		.word	_Z13AudioCallbackPKfPfj
 674              		.cfi_endproc
 675              	.LFE4213:
 677              		.section	.text.startup._GLOBAL__sub_I_hardware,"ax",%progbits
 678              		.align	1
 679              		.p2align 2,,3
 680              		.syntax unified
 681              		.thumb
 682              		.thumb_func
 683              		.fpu fpv5-d16
 685              	_GLOBAL__sub_I_hardware:
 686              	.LFB4759:
  99:Osc.cpp       **** }
 687              		.loc 9 99 1 view -0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691              	.LBB178:
 692              	.LBI178:
 693              		.loc 9 99 1 view .LVU186
 694              	.LVL41:
 695              	.LBB179:
 696              	.LBB180:
 697              	.LBI180:
  21:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
ARM GAS  /tmp/ccjr3avU.s 			page 27


 698              		.loc 2 21 5 view .LVU187
 699              	.LBB181:
 700              	.LBB182:
 701              	.LBI182:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 702              		.loc 6 62 5 view .LVU188
 703              	.LBE182:
 704              	.LBE181:
 705              	.LBE180:
 706              	.LBE179:
 707              	.LBE178:
 708              		.loc 9 99 1 is_stmt 0 view .LVU189
 709 0000 08B5     		push	{r3, lr}
 710              		.cfi_def_cfa_offset 8
 711              		.cfi_offset 3, -8
 712              		.cfi_offset 14, -4
 713              	.LBB204:
 714              	.LBB202:
 715              	.LBB197:
 716              	.LBB195:
 717              	.LBB187:
 718              	.LBB183:
 719              	.LBB184:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 720              		.loc 6 62 35 view .LVU190
 721 0002 0C48     		ldr	r0, .L24
 722 0004 0023     		movs	r3, #0
 723              	.LBE184:
 724              	.LBE183:
 725              	.LBE187:
 726              	.LBE195:
 727              	.LBE197:
  10:Osc.cpp       **** Oscillator osc;
 728              		.loc 9 10 12 view .LVU191
 729 0006 0C4A     		ldr	r2, .L24+4
 730              	.LBB198:
 731              	.LBB196:
 732              	.LBB188:
 733              	.LBB186:
 734              	.LBB185:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 735              		.loc 6 62 35 view .LVU192
 736 0008 4361     		str	r3, [r0, #20]
 737              	.LVL42:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 738              		.loc 6 62 35 view .LVU193
 739              	.LBE185:
 740              	.LBE186:
 741              	.LBE188:
 742              	.LBB189:
 743              	.LBI189:
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 744              		.loc 5 84 5 is_stmt 1 view .LVU194
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 745              		.loc 5 84 5 is_stmt 0 view .LVU195
 746              	.LBE189:
 747              	.LBB190:
ARM GAS  /tmp/ccjr3avU.s 			page 28


 748              	.LBI190:
 749              		.file 11 "../../libdaisy/src/per/dac.h"
   1:../../libdaisy/src/per/dac.h **** #pragma once
   2:../../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../../libdaisy/src/per/dac.h **** 
   5:../../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../../libdaisy/src/per/dac.h **** 
   7:../../libdaisy/src/per/dac.h **** namespace daisy
   8:../../libdaisy/src/per/dac.h **** {
   9:../../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../../libdaisy/src/per/dac.h ****  ** 
  11:../../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../../libdaisy/src/per/dac.h ****  **
  14:../../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../../libdaisy/src/per/dac.h ****  **
  16:../../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../../libdaisy/src/per/dac.h ****  ***/
  20:../../libdaisy/src/per/dac.h **** class DacHandle
  21:../../libdaisy/src/per/dac.h **** {
  22:../../libdaisy/src/per/dac.h ****   public:
  23:../../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../../libdaisy/src/per/dac.h ****     enum class Result
  25:../../libdaisy/src/per/dac.h ****     {
  26:../../libdaisy/src/per/dac.h ****         OK,
  27:../../libdaisy/src/per/dac.h ****         ERR,
  28:../../libdaisy/src/per/dac.h ****     };
  29:../../libdaisy/src/per/dac.h **** 
  30:../../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../../libdaisy/src/per/dac.h ****     enum class Channel
  32:../../libdaisy/src/per/dac.h ****     {
  33:../../libdaisy/src/per/dac.h ****         ONE,
  34:../../libdaisy/src/per/dac.h ****         TWO,
  35:../../libdaisy/src/per/dac.h ****         BOTH,
  36:../../libdaisy/src/per/dac.h ****     };
  37:../../libdaisy/src/per/dac.h **** 
  38:../../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../../libdaisy/src/per/dac.h ****      **
  40:../../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../../libdaisy/src/per/dac.h ****      **
  42:../../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../../libdaisy/src/per/dac.h ****      ***/
  45:../../libdaisy/src/per/dac.h ****     enum class Mode
  46:../../libdaisy/src/per/dac.h ****     {
  47:../../libdaisy/src/per/dac.h ****         POLLING,
  48:../../libdaisy/src/per/dac.h ****         DMA,
  49:../../libdaisy/src/per/dac.h ****     };
  50:../../libdaisy/src/per/dac.h **** 
  51:../../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../../libdaisy/src/per/dac.h ****      ***/
  55:../../libdaisy/src/per/dac.h ****     enum class BitDepth
ARM GAS  /tmp/ccjr3avU.s 			page 29


  56:../../libdaisy/src/per/dac.h ****     {
  57:../../libdaisy/src/per/dac.h ****         BITS_8,
  58:../../libdaisy/src/per/dac.h ****         BITS_12
  59:../../libdaisy/src/per/dac.h ****     };
  60:../../libdaisy/src/per/dac.h **** 
  61:../../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../../libdaisy/src/per/dac.h ****     {
  64:../../libdaisy/src/per/dac.h ****         ENABLED,
  65:../../libdaisy/src/per/dac.h ****         DISABLED,
  66:../../libdaisy/src/per/dac.h ****     };
  67:../../libdaisy/src/per/dac.h **** 
  68:../../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../../libdaisy/src/per/dac.h ****     struct Config
  70:../../libdaisy/src/per/dac.h ****     {
  71:../../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../../libdaisy/src/per/dac.h **** 
  77:../../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../../libdaisy/src/per/dac.h ****     };
  82:../../libdaisy/src/per/dac.h **** 
  83:../../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 750              		.loc 11 83 5 is_stmt 1 view .LVU196
 751              	.LBB191:
 752              	.LBB192:
 753              		.loc 11 83 33 is_stmt 0 view .LVU197
 754 000a 0362     		str	r3, [r0, #32]
 755              	.LVL43:
 756              		.loc 11 83 33 view .LVU198
 757              	.LBE192:
 758              	.LBE191:
 759              	.LBE190:
 760              	.LBB193:
 761              	.LBI193:
  40:../../libdaisy/src/hid/usb.h **** 
 762              		.loc 4 40 5 is_stmt 1 view .LVU199
  40:../../libdaisy/src/hid/usb.h **** 
 763              		.loc 4 40 5 is_stmt 0 view .LVU200
 764              	.LBE193:
 765              	.LBB194:
 766              	.LBI194:
  58:../../libdaisy/src/sys/system.h ****     ~System() {}
 767              		.loc 3 58 5 is_stmt 1 view .LVU201
  58:../../libdaisy/src/sys/system.h ****     ~System() {}
 768              		.loc 3 58 5 is_stmt 0 view .LVU202
 769              	.LBE194:
 770              	.LBE196:
 771              	.LBE198:
  10:Osc.cpp       **** Oscillator osc;
 772              		.loc 9 10 12 view .LVU203
 773 000c 0B49     		ldr	r1, .L24+8
ARM GAS  /tmp/ccjr3avU.s 			page 30


 774 000e FFF7FEFF 		bl	__aeabi_atexit
 775              	.LVL44:
 776              	.LBB199:
 777              	.LBI199:
  15:../../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 778              		.loc 8 15 5 is_stmt 1 view .LVU204
  15:../../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 779              		.loc 8 15 5 is_stmt 0 view .LVU205
 780              	.LBE199:
  11:Osc.cpp       **** AdEnv      env;
 781              		.loc 9 11 12 view .LVU206
 782 0012 094A     		ldr	r2, .L24+4
 783 0014 0A49     		ldr	r1, .L24+12
 784 0016 0B48     		ldr	r0, .L24+16
 785 0018 FFF7FEFF 		bl	__aeabi_atexit
 786              	.LVL45:
 787              	.LBB200:
 788              	.LBI200:
  34:../../DaisySP/Source/Control/adenv.h ****     ~AdEnv() {}
 789              		.loc 7 34 5 is_stmt 1 view .LVU207
  34:../../DaisySP/Source/Control/adenv.h ****     ~AdEnv() {}
 790              		.loc 7 34 5 is_stmt 0 view .LVU208
 791              	.LBE200:
  12:Osc.cpp       **** 
 792              		.loc 9 12 12 view .LVU209
 793 001c 064A     		ldr	r2, .L24+4
 794 001e 0A49     		ldr	r1, .L24+20
 795 0020 0A48     		ldr	r0, .L24+24
 796 0022 FFF7FEFF 		bl	__aeabi_atexit
 797              	.LVL46:
 798              	.LBB201:
 799              	.LBI201:
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 800              		.loc 1 40 5 is_stmt 1 view .LVU210
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 801              		.loc 1 40 5 is_stmt 0 view .LVU211
 802              	.LBE201:
  14:Osc.cpp       **** 
 803              		.loc 9 14 8 view .LVU212
 804 0026 044A     		ldr	r2, .L24+4
 805 0028 0949     		ldr	r1, .L24+28
 806 002a 0A48     		ldr	r0, .L24+32
 807              	.LBE202:
 808              	.LBE204:
 809              		.loc 9 99 1 view .LVU213
 810 002c BDE80840 		pop	{r3, lr}
 811              		.cfi_restore 14
 812              		.cfi_restore 3
 813              		.cfi_def_cfa_offset 0
 814              	.LBB205:
 815              	.LBB203:
  14:Osc.cpp       **** 
 816              		.loc 9 14 8 view .LVU214
 817 0030 FFF7FEBF 		b	__aeabi_atexit
 818              	.LVL47:
 819              	.L25:
 820              		.align	2
ARM GAS  /tmp/ccjr3avU.s 			page 31


 821              	.L24:
 822 0034 00000000 		.word	.LANCHOR2
 823 0038 00000000 		.word	__dso_handle
 824 003c 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 825 0040 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 826 0044 00000000 		.word	.LANCHOR3
 827 0048 00000000 		.word	_ZN7daisysp5AdEnvD1Ev
 828 004c 00000000 		.word	.LANCHOR1
 829 0050 00000000 		.word	_ZN5daisy6SwitchD1Ev
 830 0054 00000000 		.word	.LANCHOR0
 831              	.LBE203:
 832              	.LBE205:
 833              		.cfi_endproc
 834              	.LFE4759:
 836              		.section	.init_array,"aw",%init_array
 837              		.align	2
 838 0000 00000000 		.word	_GLOBAL__sub_I_hardware(target1)
 839              		.global	button1
 840              		.global	env
 841              		.global	osc
 842              		.global	hardware
 843              		.section	.bss.button1,"aw",%nobits
 844              		.align	2
 845              		.set	.LANCHOR0,. + 0
 848              	button1:
 849 0000 00000000 		.space	16
 849      00000000 
 849      00000000 
 849      00000000 
 850              		.section	.bss.env,"aw",%nobits
 851              		.align	2
 852              		.set	.LANCHOR1,. + 0
 855              	env:
 856 0000 00000000 		.space	56
 856      00000000 
 856      00000000 
 856      00000000 
 856      00000000 
 857              		.section	.bss.hardware,"aw",%nobits
 858              		.align	2
 859              		.set	.LANCHOR2,. + 0
 862              	hardware:
 863 0000 00000000 		.space	60
 863      00000000 
 863      00000000 
 863      00000000 
 863      00000000 
 864              		.section	.bss.osc,"aw",%nobits
 865              		.align	2
 866              		.set	.LANCHOR3,. + 0
 869              	osc:
 870 0000 00000000 		.space	40
 870      00000000 
 870      00000000 
 870      00000000 
 870      00000000 
 871              		.text
ARM GAS  /tmp/ccjr3avU.s 			page 32


 872              	.Letext0:
 873              		.file 12 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 874              		.file 13 "../../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 875              		.file 14 "../../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 876              		.file 15 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 877              		.file 16 "/usr/include/newlib/c++/9.2.1/cmath"
 878              		.file 17 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 879              		.file 18 "/usr/include/newlib/c++/9.2.1/cstdlib"
 880              		.file 19 "/usr/include/newlib/c++/9.2.1/cstdint"
 881              		.file 20 "/usr/include/newlib/c++/9.2.1/type_traits"
 882              		.file 21 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/c++config.h"
 883              		.file 22 "/usr/include/newlib/c++/9.2.1/bits/stl_pair.h"
 884              		.file 23 "/usr/include/newlib/c++/9.2.1/debug/debug.h"
 885              		.file 24 "/usr/include/newlib/c++/9.2.1/bits/algorithmfwd.h"
 886              		.file 25 "/usr/include/newlib/c++/9.2.1/bits/exception_ptr.h"
 887              		.file 26 "/usr/include/newlib/c++/9.2.1/new"
 888              		.file 27 "/usr/include/newlib/c++/9.2.1/cstdarg"
 889              		.file 28 "/usr/include/newlib/c++/9.2.1/cstdio"
 890              		.file 29 "/usr/include/newlib/c++/9.2.1/cwchar"
 891              		.file 30 "/usr/include/newlib/c++/9.2.1/clocale"
 892              		.file 31 "/usr/include/newlib/c++/9.2.1/bits/basic_string.h"
 893              		.file 32 "/usr/include/newlib/c++/9.2.1/bits/uniform_int_dist.h"
 894              		.file 33 "/usr/include/newlib/c++/9.2.1/bits/random.h"
 895              		.file 34 "/usr/include/newlib/c++/9.2.1/cstring"
 896              		.file 35 "/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h"
 897              		.file 36 "/usr/include/newlib/c++/9.2.1/ext/numeric_traits.h"
 898              		.file 37 "/usr/include/newlib/c++/9.2.1/ext/new_allocator.h"
 899              		.file 38 "/usr/include/newlib/sys/_types.h"
 900              		.file 39 "<built-in>"
 901              		.file 40 "/usr/include/newlib/sys/reent.h"
 902              		.file 41 "/usr/include/newlib/sys/lock.h"
 903              		.file 42 "/usr/include/newlib/math.h"
 904              		.file 43 "/usr/include/newlib/stdlib.h"
 905              		.file 44 "/usr/include/newlib/c++/9.2.1/math.h"
 906              		.file 45 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 907              		.file 46 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 908              		.file 47 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 909              		.file 48 "../../libdaisy/src/daisy_core.h"
 910              		.file 49 "../../libdaisy/src/per/tim.h"
 911              		.file 50 "../../libdaisy/src/per/sai.h"
 912              		.file 51 "../../libdaisy/src/util/wav_format.h"
 913              		.file 52 "../../libdaisy/src/per/qspi.h"
 914              		.file 53 "../../libdaisy/src/per/gpio.h"
 915              		.file 54 "../../libdaisy/src/dev/sdram.h"
 916              		.file 55 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdarg.h"
 917              		.file 56 "/usr/include/newlib/stdio.h"
 918              		.file 57 "/usr/include/newlib/sys/unistd.h"
 919              		.file 58 "../../libdaisy/src/util/oled_fonts.h"
 920              		.file 59 "../../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 921              		.file 60 "../../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 922              		.file 61 "../../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 923              		.file 62 "../../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 924              		.file 63 "../../libdaisy/src/util/sd_diskio.h"
 925              		.file 64 "../../libdaisy/src/sys/fatfs.h"
 926              		.file 65 "/usr/include/newlib/wchar.h"
 927              		.file 66 "/usr/include/newlib/locale.h"
 928              		.file 67 "/usr/include/newlib/ctype.h"
ARM GAS  /tmp/ccjr3avU.s 			page 33


 929              		.file 68 "/usr/include/newlib/sys/errno.h"
 930              		.file 69 "/usr/include/newlib/string.h"
 931              		.file 70 "../../libdaisy/src/dev/sr_595.h"
ARM GAS  /tmp/ccjr3avU.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Osc.cpp
     /tmp/ccjr3avU.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
     /tmp/ccjr3avU.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
     /tmp/ccjr3avU.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
     /tmp/ccjr3avU.s:43     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
     /tmp/ccjr3avU.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
     /tmp/ccjr3avU.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
     /tmp/ccjr3avU.s:92     .text._ZN7daisysp5AdEnvD2Ev:0000000000000000 $t
     /tmp/ccjr3avU.s:100    .text._ZN7daisysp5AdEnvD2Ev:0000000000000000 _ZN7daisysp5AdEnvD2Ev
     /tmp/ccjr3avU.s:100    .text._ZN7daisysp5AdEnvD2Ev:0000000000000000 _ZN7daisysp5AdEnvD1Ev
     /tmp/ccjr3avU.s:117    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
     /tmp/ccjr3avU.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
     /tmp/ccjr3avU.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
     /tmp/ccjr3avU.s:142    .text._Z13AudioCallbackPKfPfj:0000000000000000 $t
     /tmp/ccjr3avU.s:150    .text._Z13AudioCallbackPKfPfj:0000000000000000 _Z13AudioCallbackPKfPfj
     /tmp/ccjr3avU.s:339    .text._Z13AudioCallbackPKfPfj:000000000000008c $d
     /tmp/ccjr3avU.s:350    .text.startup.main:0000000000000000 $t
     /tmp/ccjr3avU.s:358    .text.startup.main:0000000000000000 main
     /tmp/ccjr3avU.s:663    .text.startup.main:00000000000000dc $d
     /tmp/ccjr3avU.s:678    .text.startup._GLOBAL__sub_I_hardware:0000000000000000 $t
     /tmp/ccjr3avU.s:685    .text.startup._GLOBAL__sub_I_hardware:0000000000000000 _GLOBAL__sub_I_hardware
     /tmp/ccjr3avU.s:822    .text.startup._GLOBAL__sub_I_hardware:0000000000000034 $d
     /tmp/ccjr3avU.s:837    .init_array:0000000000000000 $d
     /tmp/ccjr3avU.s:848    .bss.button1:0000000000000000 button1
     /tmp/ccjr3avU.s:855    .bss.env:0000000000000000 env
     /tmp/ccjr3avU.s:869    .bss.osc:0000000000000000 osc
     /tmp/ccjr3avU.s:862    .bss.hardware:0000000000000000 hardware
     /tmp/ccjr3avU.s:844    .bss.button1:0000000000000000 $d
     /tmp/ccjr3avU.s:851    .bss.env:0000000000000000 $d
     /tmp/ccjr3avU.s:858    .bss.hardware:0000000000000000 $d
     /tmp/ccjr3avU.s:865    .bss.osc:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN7daisysp5AdEnvD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev

UNDEFINED SYMBOLS
_ZN5daisy6Switch8DebounceEv
_ZNK5daisy9AdcHandle8GetFloatEh
powf
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp5AdEnv7ProcessEv
_ZN7daisysp10Oscillator7ProcessEv
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN5daisy9DaisySeed6GetPinEh
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN7daisysp5AdEnv4InitEf
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed10StartAudioEPFvPKfPfjE
__aeabi_atexit
__dso_handle
